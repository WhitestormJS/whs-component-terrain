(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["WHS"] = factory();
	else
		root["WHS"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(298);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	__webpack_require__(2);
	
	__webpack_require__(293);
	
	__webpack_require__(295);
	
	/* eslint max-len: 0 */
	
	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;
	
	// Should be removed in the next major release:
	
	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}
	
	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);
	
	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(3);
	__webpack_require__(52);
	__webpack_require__(53);
	__webpack_require__(54);
	__webpack_require__(55);
	__webpack_require__(57);
	__webpack_require__(60);
	__webpack_require__(61);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(68);
	__webpack_require__(70);
	__webpack_require__(72);
	__webpack_require__(74);
	__webpack_require__(76);
	__webpack_require__(79);
	__webpack_require__(80);
	__webpack_require__(81);
	__webpack_require__(85);
	__webpack_require__(87);
	__webpack_require__(89);
	__webpack_require__(92);
	__webpack_require__(93);
	__webpack_require__(94);
	__webpack_require__(95);
	__webpack_require__(97);
	__webpack_require__(98);
	__webpack_require__(99);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(103);
	__webpack_require__(105);
	__webpack_require__(106);
	__webpack_require__(107);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(111);
	__webpack_require__(113);
	__webpack_require__(114);
	__webpack_require__(115);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(126);
	__webpack_require__(131);
	__webpack_require__(132);
	__webpack_require__(136);
	__webpack_require__(137);
	__webpack_require__(138);
	__webpack_require__(139);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(166);
	__webpack_require__(167);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(184);
	__webpack_require__(187);
	__webpack_require__(189);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(193);
	__webpack_require__(195);
	__webpack_require__(197);
	__webpack_require__(198);
	__webpack_require__(199);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(204);
	__webpack_require__(211);
	__webpack_require__(214);
	__webpack_require__(215);
	__webpack_require__(217);
	__webpack_require__(218);
	__webpack_require__(221);
	__webpack_require__(222);
	__webpack_require__(224);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	__webpack_require__(251);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(260);
	__webpack_require__(261);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(266);
	__webpack_require__(269);
	__webpack_require__(270);
	__webpack_require__(271);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(276);
	__webpack_require__(278);
	__webpack_require__(279);
	__webpack_require__(280);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(291);
	__webpack_require__(292);
	module.exports = __webpack_require__(9);

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(4)
	  , has            = __webpack_require__(5)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , META           = __webpack_require__(22).KEY
	  , $fails         = __webpack_require__(7)
	  , shared         = __webpack_require__(23)
	  , setToStringTag = __webpack_require__(24)
	  , uid            = __webpack_require__(19)
	  , wks            = __webpack_require__(25)
	  , wksExt         = __webpack_require__(26)
	  , wksDefine      = __webpack_require__(27)
	  , keyOf          = __webpack_require__(29)
	  , enumKeys       = __webpack_require__(42)
	  , isArray        = __webpack_require__(45)
	  , anObject       = __webpack_require__(12)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , createDesc     = __webpack_require__(17)
	  , _create        = __webpack_require__(46)
	  , gOPNExt        = __webpack_require__(49)
	  , $GOPD          = __webpack_require__(51)
	  , $DP            = __webpack_require__(11)
	  , $keys          = __webpack_require__(30)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(50).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(44).f  = $propertyIsEnumerable;
	  __webpack_require__(43).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(28)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 4 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 5 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(7)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , core      = __webpack_require__(9)
	  , hide      = __webpack_require__(10)
	  , redefine  = __webpack_require__(18)
	  , ctx       = __webpack_require__(20)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 9 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11)
	  , createDesc = __webpack_require__(17);
	module.exports = __webpack_require__(6) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(12)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , toPrimitive    = __webpack_require__(16)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(6) && !__webpack_require__(7)(function(){
	  return Object.defineProperty(__webpack_require__(15)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , document = __webpack_require__(4).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(13);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , hide      = __webpack_require__(10)
	  , has       = __webpack_require__(5)
	  , SRC       = __webpack_require__(19)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(9).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 19 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(21);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(19)('meta')
	  , isObject = __webpack_require__(13)
	  , has      = __webpack_require__(5)
	  , setDesc  = __webpack_require__(11).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(7)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(11).f
	  , has = __webpack_require__(5)
	  , TAG = __webpack_require__(25)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(23)('wks')
	  , uid        = __webpack_require__(19)
	  , Symbol     = __webpack_require__(4).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(25);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(4)
	  , core           = __webpack_require__(9)
	  , LIBRARY        = __webpack_require__(28)
	  , wksExt         = __webpack_require__(26)
	  , defineProperty = __webpack_require__(11).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(31)
	  , enumBugKeys = __webpack_require__(41);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(5)
	  , toIObject    = __webpack_require__(32)
	  , arrayIndexOf = __webpack_require__(36)(false)
	  , IE_PROTO     = __webpack_require__(40)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(33)
	  , defined = __webpack_require__(35);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(34);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 34 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37)
	  , toIndex   = __webpack_require__(39);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(38)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 38 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(23)('keys')
	  , uid    = __webpack_require__(19);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(30)
	  , gOPS    = __webpack_require__(43)
	  , pIE     = __webpack_require__(44);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 44 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(34);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(12)
	  , dPs         = __webpack_require__(47)
	  , enumBugKeys = __webpack_require__(41)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(15)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(48).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(11)
	  , anObject = __webpack_require__(12)
	  , getKeys  = __webpack_require__(30);
	
	module.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4).document && document.documentElement;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(32)
	  , gOPN      = __webpack_require__(50).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(31)
	  , hiddenKeys = __webpack_require__(41).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(44)
	  , createDesc     = __webpack_require__(17)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , has            = __webpack_require__(5)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(46)});

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperty: __webpack_require__(11).f});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperties: __webpack_require__(47)});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(32)
	  , $getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	__webpack_require__(56)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(8)
	  , core    = __webpack_require__(9)
	  , fails   = __webpack_require__(7);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(58)
	  , $getPrototypeOf = __webpack_require__(59);
	
	__webpack_require__(56)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(35);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(5)
	  , toObject    = __webpack_require__(58)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(58)
	  , $keys    = __webpack_require__(30);
	
	__webpack_require__(56)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(56)('getOwnPropertyNames', function(){
	  return __webpack_require__(49).f;
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(8);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(69)});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(30)
	  , gOPS     = __webpack_require__(43)
	  , pIE      = __webpack_require__(44)
	  , toObject = __webpack_require__(58)
	  , IObject  = __webpack_require__(33)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(7)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {is: __webpack_require__(71)});

/***/ },
/* 71 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(73).set});

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(13)
	  , anObject = __webpack_require__(12);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(20)(Function.call, __webpack_require__(51).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(75)
	  , test    = {};
	test[__webpack_require__(25)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(18)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(34)
	  , TAG = __webpack_require__(25)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Function', {bind: __webpack_require__(77)});

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(21)
	  , isObject   = __webpack_require__(13)
	  , invoke     = __webpack_require__(78)
	  , arraySlice = [].slice
	  , factories  = {};
	
	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};
	
	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 78 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11).f
	  , createDesc = __webpack_require__(17)
	  , has        = __webpack_require__(5)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(6) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(13)
	  , getPrototypeOf = __webpack_require__(59)
	  , HAS_INSTANCE   = __webpack_require__(25)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(11).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(4).parseInt
	  , $trim     = __webpack_require__(83).trim
	  , ws        = __webpack_require__(84)
	  , hex       = /^[\-+]?0[xX]/;
	
	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , defined = __webpack_require__(35)
	  , fails   = __webpack_require__(7)
	  , spaces  = __webpack_require__(84)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');
	
	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};
	
	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};
	
	module.exports = exporter;

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(4).parseFloat
	  , $trim       = __webpack_require__(83).trim;
	
	module.exports = 1 / $parseFloat(__webpack_require__(84) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , has               = __webpack_require__(5)
	  , cof               = __webpack_require__(34)
	  , inheritIfRequired = __webpack_require__(88)
	  , toPrimitive       = __webpack_require__(16)
	  , fails             = __webpack_require__(7)
	  , gOPN              = __webpack_require__(50).f
	  , gOPD              = __webpack_require__(51).f
	  , dP                = __webpack_require__(11).f
	  , $trim             = __webpack_require__(83).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(46)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;
	
	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};
	
	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(6) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(18)(global, NUMBER, $Number);
	}

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(13)
	  , setPrototypeOf = __webpack_require__(73).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , toInteger    = __webpack_require__(38)
	  , aNumberValue = __webpack_require__(90)
	  , repeat       = __webpack_require__(91)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';
	
	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};
	
	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(7)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(34);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	
	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $fails       = __webpack_require__(7)
	  , aNumberValue = __webpack_require__(90)
	  , $toPrecision = 1..toPrecision;
	
	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(8)
	  , _isFinite = __webpack_require__(4).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {isInteger: __webpack_require__(96)});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(13)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(8)
	  , isInteger = __webpack_require__(96)
	  , abs       = Math.abs;
	
	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(8)
	  , log1p   = __webpack_require__(104)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 104 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(8)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(8)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(8)
	  , sign    = __webpack_require__(108);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 108 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(8)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(8)
	  , $expm1  = __webpack_require__(112);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 112 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(8)
	  , sign      = __webpack_require__(108)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(8)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(8)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(104)});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {sign: __webpack_require__(108)});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(8)
	  , toIndex        = __webpack_require__(39)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;
	
	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37);
	
	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(83)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(127)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(128)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(28)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , hide           = __webpack_require__(10)
	  , has            = __webpack_require__(5)
	  , Iterators      = __webpack_require__(129)
	  , $iterCreate    = __webpack_require__(130)
	  , setToStringTag = __webpack_require__(24)
	  , getPrototypeOf = __webpack_require__(59)
	  , ITERATOR       = __webpack_require__(25)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 129 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(46)
	  , descriptor     = __webpack_require__(17)
	  , setToStringTag = __webpack_require__(24)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(10)(IteratorPrototype, __webpack_require__(25)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(8)
	  , toLength  = __webpack_require__(37)
	  , context   = __webpack_require__(133)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(134)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(13)
	  , cof      = __webpack_require__(34)
	  , MATCH    = __webpack_require__(25)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(25)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(8)
	  , context  = __webpack_require__(133)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(135)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	
	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(91)
	});

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(8)
	  , toLength    = __webpack_require__(37)
	  , context     = __webpack_require__(133)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(140)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , defined = __webpack_require__(35)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(140)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(140)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(140)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(140)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(140)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(140)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(140)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(140)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(140)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(140)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(140)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(140)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(8)
	  , toObject    = __webpack_require__(58)
	  , toPrimitive = __webpack_require__(16);
	
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , getTime = Date.prototype.getTime;
	
	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};
	
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(18)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(25)('toPrimitive')
	  , proto        = Date.prototype;
	
	if(!(TO_PRIMITIVE in proto))__webpack_require__(10)(proto, TO_PRIMITIVE, __webpack_require__(158));

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16)
	  , NUMBER      = 'number';
	
	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Array', {isArray: __webpack_require__(45)});

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(20)
	  , $export        = __webpack_require__(8)
	  , toObject       = __webpack_require__(58)
	  , call           = __webpack_require__(161)
	  , isArrayIter    = __webpack_require__(162)
	  , toLength       = __webpack_require__(37)
	  , createProperty = __webpack_require__(163)
	  , getIterFn      = __webpack_require__(164);
	
	$export($export.S + $export.F * !__webpack_require__(165)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(12);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(129)
	  , ITERATOR   = __webpack_require__(25)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(11)
	  , createDesc      = __webpack_require__(17);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(75)
	  , ITERATOR  = __webpack_require__(25)('iterator')
	  , Iterators = __webpack_require__(129);
	module.exports = __webpack_require__(9).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(25)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(8)
	  , createProperty = __webpack_require__(163);
	
	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , arrayJoin = [].join;
	
	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(33) != Object || !__webpack_require__(168)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(7);
	
	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(8)
	  , html       = __webpack_require__(48)
	  , cof        = __webpack_require__(34)
	  , toIndex    = __webpack_require__(39)
	  , toLength   = __webpack_require__(37)
	  , arraySlice = [].slice;
	
	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , fails     = __webpack_require__(7)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];
	
	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(168)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(8)
	  , $forEach = __webpack_require__(172)(0)
	  , STRICT   = __webpack_require__(168)([].forEach, true);
	
	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(20)
	  , IObject  = __webpack_require__(33)
	  , toObject = __webpack_require__(58)
	  , toLength = __webpack_require__(37)
	  , asc      = __webpack_require__(173);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(174);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , isArray  = __webpack_require__(45)
	  , SPECIES  = __webpack_require__(25)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $map    = __webpack_require__(172)(1);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $filter = __webpack_require__(172)(2);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $some   = __webpack_require__(172)(3);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $every  = __webpack_require__(172)(4);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , IObject   = __webpack_require__(33)
	  , toLength  = __webpack_require__(37);
	
	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , $indexOf      = __webpack_require__(36)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , toIObject     = __webpack_require__(32)
	  , toInteger     = __webpack_require__(38)
	  , toLength      = __webpack_require__(37)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {copyWithin: __webpack_require__(185)});
	
	__webpack_require__(186)('copyWithin');

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	
	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(25)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(10)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {fill: __webpack_require__(188)});
	
	__webpack_require__(186)('fill');

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(192)('Array');

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(4)
	  , dP          = __webpack_require__(11)
	  , DESCRIPTORS = __webpack_require__(6)
	  , SPECIES     = __webpack_require__(25)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(186)
	  , step             = __webpack_require__(194)
	  , Iterators        = __webpack_require__(129)
	  , toIObject        = __webpack_require__(32);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(128)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 194 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(4)
	  , inheritIfRequired = __webpack_require__(88)
	  , dP                = __webpack_require__(11).f
	  , gOPN              = __webpack_require__(50).f
	  , isRegExp          = __webpack_require__(134)
	  , $flags            = __webpack_require__(196)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;
	
	if(__webpack_require__(6) && (!CORRECT_NEW || __webpack_require__(7)(function(){
	  re2[__webpack_require__(25)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(18)(global, 'RegExp', $RegExp);
	}
	
	__webpack_require__(192)('RegExp');

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(12);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(198);
	var anObject    = __webpack_require__(12)
	  , $flags      = __webpack_require__(196)
	  , DESCRIPTORS = __webpack_require__(6)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];
	
	var define = function(fn){
	  __webpack_require__(18)(RegExp.prototype, TO_STRING, fn, true);
	};
	
	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(7)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(6) && /./g.flags != 'g')__webpack_require__(11).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(196)
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(200)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(10)
	  , redefine = __webpack_require__(18)
	  , fails    = __webpack_require__(7)
	  , defined  = __webpack_require__(35)
	  , wks      = __webpack_require__(25);
	
	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(200)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(200)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(200)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(134)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(28)
	  , global             = __webpack_require__(4)
	  , ctx                = __webpack_require__(20)
	  , classof            = __webpack_require__(75)
	  , $export            = __webpack_require__(8)
	  , isObject           = __webpack_require__(13)
	  , aFunction          = __webpack_require__(21)
	  , anInstance         = __webpack_require__(205)
	  , forOf              = __webpack_require__(206)
	  , speciesConstructor = __webpack_require__(207)
	  , task               = __webpack_require__(208).set
	  , microtask          = __webpack_require__(209)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(25)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(210)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(24)($Promise, PROMISE);
	__webpack_require__(192)(PROMISE);
	Wrapper = __webpack_require__(9)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(165)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 205 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(20)
	  , call        = __webpack_require__(161)
	  , isArrayIter = __webpack_require__(162)
	  , anObject    = __webpack_require__(12)
	  , toLength    = __webpack_require__(37)
	  , getIterFn   = __webpack_require__(164)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(12)
	  , aFunction = __webpack_require__(21)
	  , SPECIES   = __webpack_require__(25)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(20)
	  , invoke             = __webpack_require__(78)
	  , html               = __webpack_require__(48)
	  , cel                = __webpack_require__(15)
	  , global             = __webpack_require__(4)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(34)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , macrotask = __webpack_require__(208).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(18);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(213)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(11).f
	  , create      = __webpack_require__(46)
	  , redefineAll = __webpack_require__(210)
	  , ctx         = __webpack_require__(20)
	  , anInstance  = __webpack_require__(205)
	  , defined     = __webpack_require__(35)
	  , forOf       = __webpack_require__(206)
	  , $iterDefine = __webpack_require__(128)
	  , step        = __webpack_require__(194)
	  , setSpecies  = __webpack_require__(192)
	  , DESCRIPTORS = __webpack_require__(6)
	  , fastKey     = __webpack_require__(22).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , $export           = __webpack_require__(8)
	  , redefine          = __webpack_require__(18)
	  , redefineAll       = __webpack_require__(210)
	  , meta              = __webpack_require__(22)
	  , forOf             = __webpack_require__(206)
	  , anInstance        = __webpack_require__(205)
	  , isObject          = __webpack_require__(13)
	  , fails             = __webpack_require__(7)
	  , $iterDetect       = __webpack_require__(165)
	  , setToStringTag    = __webpack_require__(24)
	  , inheritIfRequired = __webpack_require__(88);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(213)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(172)(0)
	  , redefine     = __webpack_require__(18)
	  , meta         = __webpack_require__(22)
	  , assign       = __webpack_require__(69)
	  , weak         = __webpack_require__(216)
	  , isObject     = __webpack_require__(13)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;
	
	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};
	
	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};
	
	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(213)('WeakMap', wrapper, methods, weak, true, true);
	
	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(210)
	  , getWeak           = __webpack_require__(22).getWeak
	  , anObject          = __webpack_require__(12)
	  , isObject          = __webpack_require__(13)
	  , anInstance        = __webpack_require__(205)
	  , forOf             = __webpack_require__(206)
	  , createArrayMethod = __webpack_require__(172)
	  , $has              = __webpack_require__(5)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;
	
	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(216);
	
	// 23.4 WeakSet Objects
	__webpack_require__(213)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $typed       = __webpack_require__(219)
	  , buffer       = __webpack_require__(220)
	  , anObject     = __webpack_require__(12)
	  , toIndex      = __webpack_require__(39)
	  , toLength     = __webpack_require__(37)
	  , isObject     = __webpack_require__(13)
	  , ArrayBuffer  = __webpack_require__(4).ArrayBuffer
	  , speciesConstructor = __webpack_require__(207)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';
	
	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});
	
	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});
	
	$export($export.P + $export.U + $export.F * __webpack_require__(7)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});
	
	__webpack_require__(192)(ARRAY_BUFFER);

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , hide   = __webpack_require__(10)
	  , uid    = __webpack_require__(19)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;
	
	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');
	
	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}
	
	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(4)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , LIBRARY        = __webpack_require__(28)
	  , $typed         = __webpack_require__(219)
	  , hide           = __webpack_require__(10)
	  , redefineAll    = __webpack_require__(210)
	  , fails          = __webpack_require__(7)
	  , anInstance     = __webpack_require__(205)
	  , toInteger      = __webpack_require__(38)
	  , toLength       = __webpack_require__(37)
	  , gOPN           = __webpack_require__(50).f
	  , dP             = __webpack_require__(11).f
	  , arrayFill      = __webpack_require__(188)
	  , setToStringTag = __webpack_require__(24)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};
	
	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};
	
	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};
	
	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};
	
	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};
	
	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };
	
	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };
	
	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }
	
	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	$export($export.G + $export.W + $export.F * !__webpack_require__(219).ABV, {
	  DataView: __webpack_require__(220).DataView
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(6)){
	  var LIBRARY             = __webpack_require__(28)
	    , global              = __webpack_require__(4)
	    , fails               = __webpack_require__(7)
	    , $export             = __webpack_require__(8)
	    , $typed              = __webpack_require__(219)
	    , $buffer             = __webpack_require__(220)
	    , ctx                 = __webpack_require__(20)
	    , anInstance          = __webpack_require__(205)
	    , propertyDesc        = __webpack_require__(17)
	    , hide                = __webpack_require__(10)
	    , redefineAll         = __webpack_require__(210)
	    , toInteger           = __webpack_require__(38)
	    , toLength            = __webpack_require__(37)
	    , toIndex             = __webpack_require__(39)
	    , toPrimitive         = __webpack_require__(16)
	    , has                 = __webpack_require__(5)
	    , same                = __webpack_require__(71)
	    , classof             = __webpack_require__(75)
	    , isObject            = __webpack_require__(13)
	    , toObject            = __webpack_require__(58)
	    , isArrayIter         = __webpack_require__(162)
	    , create              = __webpack_require__(46)
	    , getPrototypeOf      = __webpack_require__(59)
	    , gOPN                = __webpack_require__(50).f
	    , getIterFn           = __webpack_require__(164)
	    , uid                 = __webpack_require__(19)
	    , wks                 = __webpack_require__(25)
	    , createArrayMethod   = __webpack_require__(172)
	    , createArrayIncludes = __webpack_require__(36)
	    , speciesConstructor  = __webpack_require__(207)
	    , ArrayIterators      = __webpack_require__(193)
	    , Iterators           = __webpack_require__(129)
	    , $iterDetect         = __webpack_require__(165)
	    , setSpecies          = __webpack_require__(192)
	    , arrayFill           = __webpack_require__(188)
	    , arrayCopyWithin     = __webpack_require__(185)
	    , $DP                 = __webpack_require__(11)
	    , $GOPD               = __webpack_require__(51)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';
	
	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });
	
	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });
	
	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });
	
	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };
	
	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };
	
	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };
	
	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };
	
	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };
	
	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };
	
	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };
	
	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };
	
	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };
	
	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });
	
	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };
	
	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };
	
	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };
	
	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };
	
	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };
	
	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };
	
	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }
	
	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });
	
	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }
	
	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });
	
	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }
	
	    O[NAME] = TypedArray;
	
	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });
	
	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
	    $export($export.P, NAME, proto);
	
	    setSpecies(NAME);
	
	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});
	
	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});
	
	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});
	
	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});
	
	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , anObject  = __webpack_require__(12)
	  , rApply    = (__webpack_require__(4).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(7)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(8)
	  , create     = __webpack_require__(46)
	  , aFunction  = __webpack_require__(21)
	  , anObject   = __webpack_require__(12)
	  , isObject   = __webpack_require__(13)
	  , fails      = __webpack_require__(7)
	  , bind       = __webpack_require__(77)
	  , rConstruct = (__webpack_require__(4).Reflect || {}).construct;
	
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});
	
	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(11)
	  , $export     = __webpack_require__(8)
	  , anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16);
	
	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(8)
	  , gOPD     = __webpack_require__(51).f
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(130)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});
	
	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , isObject       = __webpack_require__(13)
	  , anObject       = __webpack_require__(12);
	
	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}
	
	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(51)
	  , $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(8)
	  , getProto = __webpack_require__(59)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(8)
	  , anObject      = __webpack_require__(12)
	  , $isExtensible = Object.isExtensible;
	
	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(243)});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(50)
	  , gOPS     = __webpack_require__(43)
	  , anObject = __webpack_require__(12)
	  , Reflect  = __webpack_require__(4).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(8)
	  , anObject           = __webpack_require__(12)
	  , $preventExtensions = Object.preventExtensions;
	
	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(11)
	  , gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , createDesc     = __webpack_require__(17)
	  , anObject       = __webpack_require__(12)
	  , isObject       = __webpack_require__(13);
	
	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}
	
	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(8)
	  , setProto = __webpack_require__(73);
	
	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(8)
	  , $includes = __webpack_require__(36)(true);
	
	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	
	__webpack_require__(186)('includes');

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(true);
	
	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(37)
	  , repeat   = __webpack_require__(91)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(8)
	  , defined     = __webpack_require__(35)
	  , toLength    = __webpack_require__(37)
	  , isRegExp    = __webpack_require__(134)
	  , getFlags    = __webpack_require__(196)
	  , RegExpProto = RegExp.prototype;
	
	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};
	
	__webpack_require__(130)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});
	
	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('asyncIterator');

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('observable');

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(8)
	  , ownKeys        = __webpack_require__(243)
	  , toIObject      = __webpack_require__(32)
	  , gOPD           = __webpack_require__(51)
	  , createProperty = __webpack_require__(163);
	
	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(8)
	  , $values = __webpack_require__(259)(false);
	
	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32)
	  , isEnum    = __webpack_require__(44).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(8)
	  , $entries = __webpack_require__(259)(true);
	
	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(28)|| !__webpack_require__(7)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(4)[K];
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(267)('Map')});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(75)
	  , from    = __webpack_require__(268);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(206);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(267)('Set')});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(8);
	
	$export($export.S, 'System', {global: __webpack_require__(4)});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(8)
	  , cof     = __webpack_require__(34);
	
	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(211)
	  , $export = __webpack_require__(8)
	  , shared  = __webpack_require__(23)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(215)));
	
	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};
	
	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;
	
	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};
	
	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(214)
	  , from                    = __webpack_require__(268)
	  , metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , getPrototypeOf          = __webpack_require__(59)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};
	
	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};
	
	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , aFunction                 = __webpack_require__(21)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(8)
	  , microtask = __webpack_require__(209)()
	  , process   = __webpack_require__(4).process
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(8)
	  , global      = __webpack_require__(4)
	  , core        = __webpack_require__(9)
	  , microtask   = __webpack_require__(209)()
	  , OBSERVABLE  = __webpack_require__(25)('observable')
	  , aFunction   = __webpack_require__(21)
	  , anObject    = __webpack_require__(12)
	  , anInstance  = __webpack_require__(205)
	  , redefineAll = __webpack_require__(210)
	  , hide        = __webpack_require__(10)
	  , forOf       = __webpack_require__(206)
	  , RETURN      = forOf.RETURN;
	
	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};
	
	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};
	
	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};
	
	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};
	
	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};
	
	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});
	
	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};
	
	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});
	
	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};
	
	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});
	
	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});
	
	hide($Observable.prototype, OBSERVABLE, function(){ return this; });
	
	$export($export.G, {Observable: $Observable});
	
	__webpack_require__(192)('Observable');

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(4)
	  , $export    = __webpack_require__(8)
	  , invoke     = __webpack_require__(78)
	  , partial    = __webpack_require__(289)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(290)
	  , invoke    = __webpack_require__(78)
	  , aFunction = __webpack_require__(21);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4);

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , $task   = __webpack_require__(208);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(193)
	  , redefine      = __webpack_require__(18)
	  , global        = __webpack_require__(4)
	  , hide          = __webpack_require__(10)
	  , Iterators     = __webpack_require__(129)
	  , wks           = __webpack_require__(25)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var hasOwn = Object.prototype.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided, then outerFn.prototype instanceof Generator.
	    var generator = Object.create((outerFn || Generator).prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `value instanceof AwaitArgument` to determine if the yielded value is
	  // meant to be awaited. Some may consider the name of this method too
	  // cutesy, but they are curmudgeons.
	  runtime.awrap = function(arg) {
	    return new AwaitArgument(arg);
	  };
	
	  function AwaitArgument(arg) {
	    this.arg = arg;
	  }
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value instanceof AwaitArgument) {
	          return Promise.resolve(value.arg).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;
	
	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }
	
	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }
	
	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );
	
	          if (record.type === "throw") {
	            context.delegate = null;
	
	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }
	
	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;
	
	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }
	
	          context.delegate = null;
	        }
	
	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;
	
	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }
	
	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }
	
	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          var info = {
	            value: record.arg,
	            done: context.done
	          };
	
	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }
	
	      return ContinueSentinel;
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(294)))

/***/ },
/* 294 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	(function () {
	    try {
	        cachedSetTimeout = setTimeout;
	    } catch (e) {
	        cachedSetTimeout = function () {
	            throw new Error('setTimeout is not defined');
	        }
	    }
	    try {
	        cachedClearTimeout = clearTimeout;
	    } catch (e) {
	        cachedClearTimeout = function () {
	            throw new Error('clearTimeout is not defined');
	        }
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(296);
	module.exports = __webpack_require__(9).RegExp.escape;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(8)
	  , $re     = __webpack_require__(297)(/[\\^$*+?.()|[\]{}]/g, '\\$&');
	
	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 297 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _index = __webpack_require__(299);
	
	Object.keys(_index).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index[key];
	    }
	  });
	});
	
	var _index2 = __webpack_require__(404);
	
	Object.keys(_index2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index2[key];
	    }
	  });
	});
	
	var _index3 = __webpack_require__(448);
	
	Object.keys(_index3).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index3[key];
	    }
	  });
	});
	
	var _index4 = __webpack_require__(467);
	
	Object.keys(_index4).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index4[key];
	    }
	  });
	});
	
	var _index5 = __webpack_require__(473);
	
	Object.keys(_index5).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index5[key];
	    }
	  });
	});
	
	var _index6 = __webpack_require__(393);
	
	Object.keys(_index6).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index6[key];
	    }
	  });
	});
	
	var _deprecation = __webpack_require__(495);
	
	Object.keys(_deprecation).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _deprecation[key];
	    }
	  });
	});
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index7 = __webpack_require__(408);
	
	var Physijs = _interopRequireWildcard(_index7);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	if (typeof window !== 'undefined') {
	  window.THREE = THREE;
	  window.Physijs = Physijs;
	} else if (typeof global !== 'undefined') {
	  global.THREE = THREE;
	  global.Physijs = Physijs;
	}
	
	// DEPRECATION
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _CubeCamera = __webpack_require__(300);
	
	Object.keys(_CubeCamera).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _CubeCamera[key];
	    }
	  });
	});
	
	var _OrtographicCamera = __webpack_require__(402);
	
	Object.keys(_OrtographicCamera).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _OrtographicCamera[key];
	    }
	  });
	});
	
	var _PerspectiveCamera = __webpack_require__(403);
	
	Object.keys(_PerspectiveCamera).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _PerspectiveCamera[key];
	    }
	  });
	});

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CubeCamera = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Camera2 = __webpack_require__(392);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CubeCamera = function (_Camera) {
	  (0, _inherits3.default)(CubeCamera, _Camera);
	
	  function CubeCamera() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var localWindow = arguments.length <= 1 || arguments[1] === undefined ? window : arguments[1];
	    (0, _classCallCheck3.default)(this, CubeCamera);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (CubeCamera.__proto__ || Object.getPrototypeOf(CubeCamera)).call(this, params, 'cubecamera'));
	
	    _this.build(params);
	    (0, _get3.default)(CubeCamera.prototype.__proto__ || Object.getPrototypeOf(CubeCamera.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(CubeCamera, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.CubeCamera(params.camera.near, params.camera.far, params.camera.cubeResolution);
	
	        resolve();
	      });
	    }
	  }]);
	  return CubeCamera;
	}(_Camera2.Camera);
	
	exports.CubeCamera = CubeCamera;

/***/ },
/* 301 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(303);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(304), __esModule: true };

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(305);
	var $Object = __webpack_require__(308).Object;
	module.exports = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(306);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(316), 'Object', {defineProperty: __webpack_require__(312).f});

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(307)
	  , core      = __webpack_require__(308)
	  , ctx       = __webpack_require__(309)
	  , hide      = __webpack_require__(311)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 307 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 308 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(310);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 310 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(312)
	  , createDesc = __webpack_require__(320);
	module.exports = __webpack_require__(316) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(313)
	  , IE8_DOM_DEFINE = __webpack_require__(315)
	  , toPrimitive    = __webpack_require__(319)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(316) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(314);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 314 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(316) && !__webpack_require__(317)(function(){
	  return Object.defineProperty(__webpack_require__(318)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(317)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 317 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(314)
	  , document = __webpack_require__(307).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(314);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 320 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _typeof2 = __webpack_require__(322);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _iterator = __webpack_require__(323);
	
	var _iterator2 = _interopRequireDefault(_iterator);
	
	var _symbol = __webpack_require__(359);
	
	var _symbol2 = _interopRequireDefault(_symbol);
	
	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(324), __esModule: true };

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(325);
	__webpack_require__(354);
	module.exports = __webpack_require__(358).f('iterator');

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(326)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(329)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(327)
	  , defined   = __webpack_require__(328);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 327 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 328 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(330)
	  , $export        = __webpack_require__(306)
	  , redefine       = __webpack_require__(331)
	  , hide           = __webpack_require__(311)
	  , has            = __webpack_require__(332)
	  , Iterators      = __webpack_require__(333)
	  , $iterCreate    = __webpack_require__(334)
	  , setToStringTag = __webpack_require__(350)
	  , getPrototypeOf = __webpack_require__(352)
	  , ITERATOR       = __webpack_require__(351)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 330 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(311);

/***/ },
/* 332 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 333 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(335)
	  , descriptor     = __webpack_require__(320)
	  , setToStringTag = __webpack_require__(350)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(311)(IteratorPrototype, __webpack_require__(351)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(313)
	  , dPs         = __webpack_require__(336)
	  , enumBugKeys = __webpack_require__(348)
	  , IE_PROTO    = __webpack_require__(345)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(318)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(349).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(312)
	  , anObject = __webpack_require__(313)
	  , getKeys  = __webpack_require__(337);
	
	module.exports = __webpack_require__(316) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(338)
	  , enumBugKeys = __webpack_require__(348);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(332)
	  , toIObject    = __webpack_require__(339)
	  , arrayIndexOf = __webpack_require__(342)(false)
	  , IE_PROTO     = __webpack_require__(345)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(340)
	  , defined = __webpack_require__(328);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(341);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 341 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(339)
	  , toLength  = __webpack_require__(343)
	  , toIndex   = __webpack_require__(344);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(327)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(327)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(346)('keys')
	  , uid    = __webpack_require__(347);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(307)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 347 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 348 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(307).document && document.documentElement;

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(312).f
	  , has = __webpack_require__(332)
	  , TAG = __webpack_require__(351)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(346)('wks')
	  , uid        = __webpack_require__(347)
	  , Symbol     = __webpack_require__(307).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(332)
	  , toObject    = __webpack_require__(353)
	  , IE_PROTO    = __webpack_require__(345)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(328);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(355);
	var global        = __webpack_require__(307)
	  , hide          = __webpack_require__(311)
	  , Iterators     = __webpack_require__(333)
	  , TO_STRING_TAG = __webpack_require__(351)('toStringTag');
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(356)
	  , step             = __webpack_require__(357)
	  , Iterators        = __webpack_require__(333)
	  , toIObject        = __webpack_require__(339);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(329)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 356 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 357 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(351);

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(360), __esModule: true };

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(361);
	__webpack_require__(372);
	__webpack_require__(373);
	__webpack_require__(374);
	module.exports = __webpack_require__(308).Symbol;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(307)
	  , has            = __webpack_require__(332)
	  , DESCRIPTORS    = __webpack_require__(316)
	  , $export        = __webpack_require__(306)
	  , redefine       = __webpack_require__(331)
	  , META           = __webpack_require__(362).KEY
	  , $fails         = __webpack_require__(317)
	  , shared         = __webpack_require__(346)
	  , setToStringTag = __webpack_require__(350)
	  , uid            = __webpack_require__(347)
	  , wks            = __webpack_require__(351)
	  , wksExt         = __webpack_require__(358)
	  , wksDefine      = __webpack_require__(363)
	  , keyOf          = __webpack_require__(364)
	  , enumKeys       = __webpack_require__(365)
	  , isArray        = __webpack_require__(368)
	  , anObject       = __webpack_require__(313)
	  , toIObject      = __webpack_require__(339)
	  , toPrimitive    = __webpack_require__(319)
	  , createDesc     = __webpack_require__(320)
	  , _create        = __webpack_require__(335)
	  , gOPNExt        = __webpack_require__(369)
	  , $GOPD          = __webpack_require__(371)
	  , $DP            = __webpack_require__(312)
	  , $keys          = __webpack_require__(337)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(370).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(367).f  = $propertyIsEnumerable;
	  __webpack_require__(366).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(330)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(311)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(347)('meta')
	  , isObject = __webpack_require__(314)
	  , has      = __webpack_require__(332)
	  , setDesc  = __webpack_require__(312).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(317)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(307)
	  , core           = __webpack_require__(308)
	  , LIBRARY        = __webpack_require__(330)
	  , wksExt         = __webpack_require__(358)
	  , defineProperty = __webpack_require__(312).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(337)
	  , toIObject = __webpack_require__(339);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(337)
	  , gOPS    = __webpack_require__(366)
	  , pIE     = __webpack_require__(367);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 366 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 367 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(341);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(339)
	  , gOPN      = __webpack_require__(370).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(338)
	  , hiddenKeys = __webpack_require__(348).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(367)
	  , createDesc     = __webpack_require__(320)
	  , toIObject      = __webpack_require__(339)
	  , toPrimitive    = __webpack_require__(319)
	  , has            = __webpack_require__(332)
	  , IE8_DOM_DEFINE = __webpack_require__(315)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(316) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 372 */
/***/ function(module, exports) {



/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(363)('asyncIterator');

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(363)('observable');

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _setPrototypeOf = __webpack_require__(376);
	
	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
	
	var _create = __webpack_require__(380);
	
	var _create2 = _interopRequireDefault(_create);
	
	var _typeof2 = __webpack_require__(322);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }
	
	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(377), __esModule: true };

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(378);
	module.exports = __webpack_require__(308).Object.setPrototypeOf;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(306);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(379).set});

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(314)
	  , anObject = __webpack_require__(313);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(309)(Function.call, __webpack_require__(371).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(381), __esModule: true };

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(382);
	var $Object = __webpack_require__(308).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(306)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(335)});

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _getPrototypeOf = __webpack_require__(384);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _getOwnPropertyDescriptor = __webpack_require__(388);
	
	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);
	
	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);
	
	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;
	
	    if (getter === undefined) {
	      return undefined;
	    }
	
	    return getter.call(receiver);
	  }
	};

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(385), __esModule: true };

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(386);
	module.exports = __webpack_require__(308).Object.getPrototypeOf;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(353)
	  , $getPrototypeOf = __webpack_require__(352);
	
	__webpack_require__(387)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(306)
	  , core    = __webpack_require__(308)
	  , fails   = __webpack_require__(317);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(389), __esModule: true };

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(390);
	var $Object = __webpack_require__(308).Object;
	module.exports = function getOwnPropertyDescriptor(it, key){
	  return $Object.getOwnPropertyDescriptor(it, key);
	};

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(339)
	  , $getOwnPropertyDescriptor = __webpack_require__(371).f;
	
	__webpack_require__(387)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	(function (global, factory) {
	     true ? factory(exports) :
	    typeof define === 'function' && define.amd ? define(['exports'], factory) :
	    (factory((global.THREE = global.THREE || {})));
	}(this, (function (exports) { 'use strict';
	
	    // Polyfills
	
	    if ( Number.EPSILON === undefined ) {
	
	    	Number.EPSILON = Math.pow( 2, - 52 );
	
	    }
	
	    //
	
	    if ( Math.sign === undefined ) {
	
	    	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign
	
	    	Math.sign = function ( x ) {
	
	    		return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;
	
	    	};
	
	    }
	
	    if ( Function.prototype.name === undefined ) {
	
	    	// Missing in IE9-11.
	    	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name
	
	    	Object.defineProperty( Function.prototype, 'name', {
	
	    		get: function () {
	
	    			return this.toString().match( /^\s*function\s*(\S*)\s*\(/ )[ 1 ];
	
	    		}
	
	    	} );
	
	    }
	
	    if ( Object.assign === undefined ) {
	
	    	// Missing in IE.
	    	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
	
	    	( function () {
	
	    		Object.assign = function ( target ) {
	
	    			'use strict';
	
	    			if ( target === undefined || target === null ) {
	
	    				throw new TypeError( 'Cannot convert undefined or null to object' );
	
	    			}
	
	    			var output = Object( target );
	
	    			for ( var index = 1; index < arguments.length; index ++ ) {
	
	    				var source = arguments[ index ];
	
	    				if ( source !== undefined && source !== null ) {
	
	    					for ( var nextKey in source ) {
	
	    						if ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {
	
	    							output[ nextKey ] = source[ nextKey ];
	
	    						}
	
	    					}
	
	    				}
	
	    			}
	
	    			return output;
	
	    		};
	
	    	} )();
	
	    }
	
	    /**
	     * https://github.com/mrdoob/eventdispatcher.js/
	     */
	
	    function EventDispatcher() {}
	
	    Object.assign( EventDispatcher.prototype, {
	
	    	addEventListener: function ( type, listener ) {
	
	    		if ( this._listeners === undefined ) this._listeners = {};
	
	    		var listeners = this._listeners;
	
	    		if ( listeners[ type ] === undefined ) {
	
	    			listeners[ type ] = [];
	
	    		}
	
	    		if ( listeners[ type ].indexOf( listener ) === - 1 ) {
	
	    			listeners[ type ].push( listener );
	
	    		}
	
	    	},
	
	    	hasEventListener: function ( type, listener ) {
	
	    		if ( this._listeners === undefined ) return false;
	
	    		var listeners = this._listeners;
	
	    		if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {
	
	    			return true;
	
	    		}
	
	    		return false;
	
	    	},
	
	    	removeEventListener: function ( type, listener ) {
	
	    		if ( this._listeners === undefined ) return;
	
	    		var listeners = this._listeners;
	    		var listenerArray = listeners[ type ];
	
	    		if ( listenerArray !== undefined ) {
	
	    			var index = listenerArray.indexOf( listener );
	
	    			if ( index !== - 1 ) {
	
	    				listenerArray.splice( index, 1 );
	
	    			}
	
	    		}
	
	    	},
	
	    	dispatchEvent: function ( event ) {
	
	    		if ( this._listeners === undefined ) return;
	
	    		var listeners = this._listeners;
	    		var listenerArray = listeners[ event.type ];
	
	    		if ( listenerArray !== undefined ) {
	
	    			event.target = this;
	
	    			var array = [], i = 0;
	    			var length = listenerArray.length;
	
	    			for ( i = 0; i < length; i ++ ) {
	
	    				array[ i ] = listenerArray[ i ];
	
	    			}
	
	    			for ( i = 0; i < length; i ++ ) {
	
	    				array[ i ].call( this, event );
	
	    			}
	
	    		}
	
	    	}
	
	    } );
	
	    var REVISION = '81';
	    var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };
	    var CullFaceNone = 0;
	    var CullFaceBack = 1;
	    var CullFaceFront = 2;
	    var CullFaceFrontBack = 3;
	    var FrontFaceDirectionCW = 0;
	    var FrontFaceDirectionCCW = 1;
	    var BasicShadowMap = 0;
	    var PCFShadowMap = 1;
	    var PCFSoftShadowMap = 2;
	    var FrontSide = 0;
	    var BackSide = 1;
	    var DoubleSide = 2;
	    var FlatShading = 1;
	    var SmoothShading = 2;
	    var NoColors = 0;
	    var FaceColors = 1;
	    var VertexColors = 2;
	    var NoBlending = 0;
	    var NormalBlending = 1;
	    var AdditiveBlending = 2;
	    var SubtractiveBlending = 3;
	    var MultiplyBlending = 4;
	    var CustomBlending = 5;
	    var BlendingMode = {
	        NoBlending: NoBlending,
	        NormalBlending: NormalBlending,
	        AdditiveBlending: AdditiveBlending,
	        SubtractiveBlending: SubtractiveBlending,
	        MultiplyBlending: MultiplyBlending,
	        CustomBlending: CustomBlending
	    };
	    var AddEquation = 100;
	    var SubtractEquation = 101;
	    var ReverseSubtractEquation = 102;
	    var MinEquation = 103;
	    var MaxEquation = 104;
	    var ZeroFactor = 200;
	    var OneFactor = 201;
	    var SrcColorFactor = 202;
	    var OneMinusSrcColorFactor = 203;
	    var SrcAlphaFactor = 204;
	    var OneMinusSrcAlphaFactor = 205;
	    var DstAlphaFactor = 206;
	    var OneMinusDstAlphaFactor = 207;
	    var DstColorFactor = 208;
	    var OneMinusDstColorFactor = 209;
	    var SrcAlphaSaturateFactor = 210;
	    var NeverDepth = 0;
	    var AlwaysDepth = 1;
	    var LessDepth = 2;
	    var LessEqualDepth = 3;
	    var EqualDepth = 4;
	    var GreaterEqualDepth = 5;
	    var GreaterDepth = 6;
	    var NotEqualDepth = 7;
	    var MultiplyOperation = 0;
	    var MixOperation = 1;
	    var AddOperation = 2;
	    var NoToneMapping = 0;
	    var LinearToneMapping = 1;
	    var ReinhardToneMapping = 2;
	    var Uncharted2ToneMapping = 3;
	    var CineonToneMapping = 4;
	    var UVMapping = 300;
	    var CubeReflectionMapping = 301;
	    var CubeRefractionMapping = 302;
	    var EquirectangularReflectionMapping = 303;
	    var EquirectangularRefractionMapping = 304;
	    var SphericalReflectionMapping = 305;
	    var CubeUVReflectionMapping = 306;
	    var CubeUVRefractionMapping = 307;
	    var TextureMapping = {
	        UVMapping: UVMapping,
	        CubeReflectionMapping: CubeReflectionMapping,
	        CubeRefractionMapping: CubeRefractionMapping,
	        EquirectangularReflectionMapping: EquirectangularReflectionMapping,
	        EquirectangularRefractionMapping: EquirectangularRefractionMapping,
	        SphericalReflectionMapping: SphericalReflectionMapping,
	        CubeUVReflectionMapping: CubeUVReflectionMapping,
	        CubeUVRefractionMapping: CubeUVRefractionMapping
	    };
	    var RepeatWrapping = 1000;
	    var ClampToEdgeWrapping = 1001;
	    var MirroredRepeatWrapping = 1002;
	    var TextureWrapping = {
	        RepeatWrapping: RepeatWrapping,
	        ClampToEdgeWrapping: ClampToEdgeWrapping,
	        MirroredRepeatWrapping: MirroredRepeatWrapping
	    };
	    var NearestFilter = 1003;
	    var NearestMipMapNearestFilter = 1004;
	    var NearestMipMapLinearFilter = 1005;
	    var LinearFilter = 1006;
	    var LinearMipMapNearestFilter = 1007;
	    var LinearMipMapLinearFilter = 1008;
	    var TextureFilter = {
	        NearestFilter: NearestFilter,
	        NearestMipMapNearestFilter: NearestMipMapNearestFilter,
	        NearestMipMapLinearFilter: NearestMipMapLinearFilter,
	        LinearFilter: LinearFilter,
	        LinearMipMapNearestFilter: LinearMipMapNearestFilter,
	        LinearMipMapLinearFilter: LinearMipMapLinearFilter
	    };
	    var UnsignedByteType = 1009;
	    var ByteType = 1010;
	    var ShortType = 1011;
	    var UnsignedShortType = 1012;
	    var IntType = 1013;
	    var UnsignedIntType = 1014;
	    var FloatType = 1015;
	    var HalfFloatType = 1016;
	    var UnsignedShort4444Type = 1017;
	    var UnsignedShort5551Type = 1018;
	    var UnsignedShort565Type = 1019;
	    var UnsignedInt248Type = 1020;
	    var AlphaFormat = 1021;
	    var RGBFormat = 1022;
	    var RGBAFormat = 1023;
	    var LuminanceFormat = 1024;
	    var LuminanceAlphaFormat = 1025;
	    var RGBEFormat = RGBAFormat;
	    var DepthFormat = 1026;
	    var DepthStencilFormat = 1027;
	    var RGB_S3TC_DXT1_Format = 2001;
	    var RGBA_S3TC_DXT1_Format = 2002;
	    var RGBA_S3TC_DXT3_Format = 2003;
	    var RGBA_S3TC_DXT5_Format = 2004;
	    var RGB_PVRTC_4BPPV1_Format = 2100;
	    var RGB_PVRTC_2BPPV1_Format = 2101;
	    var RGBA_PVRTC_4BPPV1_Format = 2102;
	    var RGBA_PVRTC_2BPPV1_Format = 2103;
	    var RGB_ETC1_Format = 2151;
	    var LoopOnce = 2200;
	    var LoopRepeat = 2201;
	    var LoopPingPong = 2202;
	    var InterpolateDiscrete = 2300;
	    var InterpolateLinear = 2301;
	    var InterpolateSmooth = 2302;
	    var ZeroCurvatureEnding = 2400;
	    var ZeroSlopeEnding = 2401;
	    var WrapAroundEnding = 2402;
	    var TrianglesDrawMode = 0;
	    var TriangleStripDrawMode = 1;
	    var TriangleFanDrawMode = 2;
	    var LinearEncoding = 3000;
	    var sRGBEncoding = 3001;
	    var GammaEncoding = 3007;
	    var RGBEEncoding = 3002;
	    var LogLuvEncoding = 3003;
	    var RGBM7Encoding = 3004;
	    var RGBM16Encoding = 3005;
	    var RGBDEncoding = 3006;
	    var BasicDepthPacking = 3200;
	    var RGBADepthPacking = 3201;
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    exports.Math = {
	
	    	DEG2RAD: Math.PI / 180,
	    	RAD2DEG: 180 / Math.PI,
	
	    	generateUUID: function () {
	
	    		// http://www.broofa.com/Tools/Math.uuid.htm
	
	    		var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );
	    		var uuid = new Array( 36 );
	    		var rnd = 0, r;
	
	    		return function generateUUID() {
	
	    			for ( var i = 0; i < 36; i ++ ) {
	
	    				if ( i === 8 || i === 13 || i === 18 || i === 23 ) {
	
	    					uuid[ i ] = '-';
	
	    				} else if ( i === 14 ) {
	
	    					uuid[ i ] = '4';
	
	    				} else {
	
	    					if ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;
	    					r = rnd & 0xf;
	    					rnd = rnd >> 4;
	    					uuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];
	
	    				}
	
	    			}
	
	    			return uuid.join( '' );
	
	    		};
	
	    	}(),
	
	    	clamp: function ( value, min, max ) {
	
	    		return Math.max( min, Math.min( max, value ) );
	
	    	},
	
	    	// compute euclidian modulo of m % n
	    	// https://en.wikipedia.org/wiki/Modulo_operation
	
	    	euclideanModulo: function ( n, m ) {
	
	    		return ( ( n % m ) + m ) % m;
	
	    	},
	
	    	// Linear mapping from range <a1, a2> to range <b1, b2>
	
	    	mapLinear: function ( x, a1, a2, b1, b2 ) {
	
	    		return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );
	
	    	},
	
	    	// http://en.wikipedia.org/wiki/Smoothstep
	
	    	smoothstep: function ( x, min, max ) {
	
	    		if ( x <= min ) return 0;
	    		if ( x >= max ) return 1;
	
	    		x = ( x - min ) / ( max - min );
	
	    		return x * x * ( 3 - 2 * x );
	
	    	},
	
	    	smootherstep: function ( x, min, max ) {
	
	    		if ( x <= min ) return 0;
	    		if ( x >= max ) return 1;
	
	    		x = ( x - min ) / ( max - min );
	
	    		return x * x * x * ( x * ( x * 6 - 15 ) + 10 );
	
	    	},
	
	    	random16: function () {
	
	    		console.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );
	    		return Math.random();
	
	    	},
	
	    	// Random integer from <low, high> interval
	
	    	randInt: function ( low, high ) {
	
	    		return low + Math.floor( Math.random() * ( high - low + 1 ) );
	
	    	},
	
	    	// Random float from <low, high> interval
	
	    	randFloat: function ( low, high ) {
	
	    		return low + Math.random() * ( high - low );
	
	    	},
	
	    	// Random float from <-range/2, range/2> interval
	
	    	randFloatSpread: function ( range ) {
	
	    		return range * ( 0.5 - Math.random() );
	
	    	},
	
	    	degToRad: function ( degrees ) {
	
	    		return degrees * exports.Math.DEG2RAD;
	
	    	},
	
	    	radToDeg: function ( radians ) {
	
	    		return radians * exports.Math.RAD2DEG;
	
	    	},
	
	    	isPowerOfTwo: function ( value ) {
	
	    		return ( value & ( value - 1 ) ) === 0 && value !== 0;
	
	    	},
	
	    	nearestPowerOfTwo: function ( value ) {
	
	    		return Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );
	
	    	},
	
	    	nextPowerOfTwo: function ( value ) {
	
	    		value --;
	    		value |= value >> 1;
	    		value |= value >> 2;
	    		value |= value >> 4;
	    		value |= value >> 8;
	    		value |= value >> 16;
	    		value ++;
	
	    		return value;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author philogb / http://blog.thejit.org/
	     * @author egraether / http://egraether.com/
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     */
	
	    function Vector2( x, y ) {
	
	    	this.x = x || 0;
	    	this.y = y || 0;
	
	    }
	
	    Vector2.prototype = {
	
	    	constructor: Vector2,
	
	    	isVector2: true,
	
	    	get width() {
	
	    		return this.x;
	
	    	},
	
	    	set width( value ) {
	
	    		this.x = value;
	
	    	},
	
	    	get height() {
	
	    		return this.y;
	
	    	},
	
	    	set height( value ) {
	
	    		this.y = value;
	
	    	},
	
	    	//
	
	    	set: function ( x, y ) {
	
	    		this.x = x;
	    		this.y = y;
	
	    		return this;
	
	    	},
	
	    	setScalar: function ( scalar ) {
	
	    		this.x = scalar;
	    		this.y = scalar;
	
	    		return this;
	
	    	},
	
	    	setX: function ( x ) {
	
	    		this.x = x;
	
	    		return this;
	
	    	},
	
	    	setY: function ( y ) {
	
	    		this.y = y;
	
	    		return this;
	
	    	},
	
	    	setComponent: function ( index, value ) {
	
	    		switch ( index ) {
	
	    			case 0: this.x = value; break;
	    			case 1: this.y = value; break;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	getComponent: function ( index ) {
	
	    		switch ( index ) {
	
	    			case 0: return this.x;
	    			case 1: return this.y;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this.x, this.y );
	
	    	},
	
	    	copy: function ( v ) {
	
	    		this.x = v.x;
	    		this.y = v.y;
	
	    		return this;
	
	    	},
	
	    	add: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
	    			return this.addVectors( v, w );
	
	    		}
	
	    		this.x += v.x;
	    		this.y += v.y;
	
	    		return this;
	
	    	},
	
	    	addScalar: function ( s ) {
	
	    		this.x += s;
	    		this.y += s;
	
	    		return this;
	
	    	},
	
	    	addVectors: function ( a, b ) {
	
	    		this.x = a.x + b.x;
	    		this.y = a.y + b.y;
	
	    		return this;
	
	    	},
	
	    	addScaledVector: function ( v, s ) {
	
	    		this.x += v.x * s;
	    		this.y += v.y * s;
	
	    		return this;
	
	    	},
	
	    	sub: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
	    			return this.subVectors( v, w );
	
	    		}
	
	    		this.x -= v.x;
	    		this.y -= v.y;
	
	    		return this;
	
	    	},
	
	    	subScalar: function ( s ) {
	
	    		this.x -= s;
	    		this.y -= s;
	
	    		return this;
	
	    	},
	
	    	subVectors: function ( a, b ) {
	
	    		this.x = a.x - b.x;
	    		this.y = a.y - b.y;
	
	    		return this;
	
	    	},
	
	    	multiply: function ( v ) {
	
	    		this.x *= v.x;
	    		this.y *= v.y;
	
	    		return this;
	
	    	},
	
	    	multiplyScalar: function ( scalar ) {
	
	    		if ( isFinite( scalar ) ) {
	
	    			this.x *= scalar;
	    			this.y *= scalar;
	
	    		} else {
	
	    			this.x = 0;
	    			this.y = 0;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	divide: function ( v ) {
	
	    		this.x /= v.x;
	    		this.y /= v.y;
	
	    		return this;
	
	    	},
	
	    	divideScalar: function ( scalar ) {
	
	    		return this.multiplyScalar( 1 / scalar );
	
	    	},
	
	    	min: function ( v ) {
	
	    		this.x = Math.min( this.x, v.x );
	    		this.y = Math.min( this.y, v.y );
	
	    		return this;
	
	    	},
	
	    	max: function ( v ) {
	
	    		this.x = Math.max( this.x, v.x );
	    		this.y = Math.max( this.y, v.y );
	
	    		return this;
	
	    	},
	
	    	clamp: function ( min, max ) {
	
	    		// This function assumes min < max, if this assumption isn't true it will not operate correctly
	
	    		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
	    		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
	
	    		return this;
	
	    	},
	
	    	clampScalar: function () {
	
	    		var min, max;
	
	    		return function clampScalar( minVal, maxVal ) {
	
	    			if ( min === undefined ) {
	
	    				min = new Vector2();
	    				max = new Vector2();
	
	    			}
	
	    			min.set( minVal, minVal );
	    			max.set( maxVal, maxVal );
	
	    			return this.clamp( min, max );
	
	    		};
	
	    	}(),
	
	    	clampLength: function ( min, max ) {
	
	    		var length = this.length();
	
	    		return this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );
	
	    	},
	
	    	floor: function () {
	
	    		this.x = Math.floor( this.x );
	    		this.y = Math.floor( this.y );
	
	    		return this;
	
	    	},
	
	    	ceil: function () {
	
	    		this.x = Math.ceil( this.x );
	    		this.y = Math.ceil( this.y );
	
	    		return this;
	
	    	},
	
	    	round: function () {
	
	    		this.x = Math.round( this.x );
	    		this.y = Math.round( this.y );
	
	    		return this;
	
	    	},
	
	    	roundToZero: function () {
	
	    		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
	    		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
	
	    		return this;
	
	    	},
	
	    	negate: function () {
	
	    		this.x = - this.x;
	    		this.y = - this.y;
	
	    		return this;
	
	    	},
	
	    	dot: function ( v ) {
	
	    		return this.x * v.x + this.y * v.y;
	
	    	},
	
	    	lengthSq: function () {
	
	    		return this.x * this.x + this.y * this.y;
	
	    	},
	
	    	length: function () {
	
	    		return Math.sqrt( this.x * this.x + this.y * this.y );
	
	    	},
	
	    	lengthManhattan: function() {
	
	    		return Math.abs( this.x ) + Math.abs( this.y );
	
	    	},
	
	    	normalize: function () {
	
	    		return this.divideScalar( this.length() );
	
	    	},
	
	    	angle: function () {
	
	    		// computes the angle in radians with respect to the positive x-axis
	
	    		var angle = Math.atan2( this.y, this.x );
	
	    		if ( angle < 0 ) angle += 2 * Math.PI;
	
	    		return angle;
	
	    	},
	
	    	distanceTo: function ( v ) {
	
	    		return Math.sqrt( this.distanceToSquared( v ) );
	
	    	},
	
	    	distanceToSquared: function ( v ) {
	
	    		var dx = this.x - v.x, dy = this.y - v.y;
	    		return dx * dx + dy * dy;
	
	    	},
	
	    	distanceToManhattan: function ( v ) {
	
	    		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );
	
	    	},
	
	    	setLength: function ( length ) {
	
	    		return this.multiplyScalar( length / this.length() );
	
	    	},
	
	    	lerp: function ( v, alpha ) {
	
	    		this.x += ( v.x - this.x ) * alpha;
	    		this.y += ( v.y - this.y ) * alpha;
	
	    		return this;
	
	    	},
	
	    	lerpVectors: function ( v1, v2, alpha ) {
	
	    		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );
	
	    	},
	
	    	equals: function ( v ) {
	
	    		return ( ( v.x === this.x ) && ( v.y === this.y ) );
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.x = array[ offset ];
	    		this.y = array[ offset + 1 ];
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this.x;
	    		array[ offset + 1 ] = this.y;
	
	    		return array;
	
	    	},
	
	    	fromAttribute: function ( attribute, index, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		index = index * attribute.itemSize + offset;
	
	    		this.x = attribute.array[ index ];
	    		this.y = attribute.array[ index + 1 ];
	
	    		return this;
	
	    	},
	
	    	rotateAround: function ( center, angle ) {
	
	    		var c = Math.cos( angle ), s = Math.sin( angle );
	
	    		var x = this.x - center.x;
	    		var y = this.y - center.y;
	
	    		this.x = x * c - y * s + center.x;
	    		this.y = x * s + y * c + center.y;
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     * @author szimek / https://github.com/szimek/
	     */
	
	    function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {
	
	    	Object.defineProperty( this, 'id', { value: TextureIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.sourceFile = '';
	
	    	this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;
	    	this.mipmaps = [];
	
	    	this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;
	
	    	this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;
	    	this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;
	
	    	this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;
	    	this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;
	
	    	this.anisotropy = anisotropy !== undefined ? anisotropy : 1;
	
	    	this.format = format !== undefined ? format : RGBAFormat;
	    	this.type = type !== undefined ? type : UnsignedByteType;
	
	    	this.offset = new Vector2( 0, 0 );
	    	this.repeat = new Vector2( 1, 1 );
	
	    	this.generateMipmaps = true;
	    	this.premultiplyAlpha = false;
	    	this.flipY = true;
	    	this.unpackAlignment = 4;	// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
	
	
	    	// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
	    	//
	    	// Also changing the encoding after already used by a Material will not automatically make the Material
	    	// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.
	    	this.encoding = encoding !== undefined ? encoding :  LinearEncoding;
	
	    	this.version = 0;
	    	this.onUpdate = null;
	
	    }
	
	    Texture.DEFAULT_IMAGE = undefined;
	    Texture.DEFAULT_MAPPING = UVMapping;
	
	    Texture.prototype = {
	
	    	constructor: Texture,
	
	    	isTexture: true,
	
	    	set needsUpdate( value ) {
	
	    		if ( value === true ) this.version ++;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.image = source.image;
	    		this.mipmaps = source.mipmaps.slice( 0 );
	
	    		this.mapping = source.mapping;
	
	    		this.wrapS = source.wrapS;
	    		this.wrapT = source.wrapT;
	
	    		this.magFilter = source.magFilter;
	    		this.minFilter = source.minFilter;
	
	    		this.anisotropy = source.anisotropy;
	
	    		this.format = source.format;
	    		this.type = source.type;
	
	    		this.offset.copy( source.offset );
	    		this.repeat.copy( source.repeat );
	
	    		this.generateMipmaps = source.generateMipmaps;
	    		this.premultiplyAlpha = source.premultiplyAlpha;
	    		this.flipY = source.flipY;
	    		this.unpackAlignment = source.unpackAlignment;
	    		this.encoding = source.encoding;
	
	    		return this;
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		if ( meta.textures[ this.uuid ] !== undefined ) {
	
	    			return meta.textures[ this.uuid ];
	
	    		}
	
	    		function getDataURL( image ) {
	
	    			var canvas;
	
	    			if ( image.toDataURL !== undefined ) {
	
	    				canvas = image;
	
	    			} else {
	
	    				canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	    				canvas.width = image.width;
	    				canvas.height = image.height;
	
	    				canvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );
	
	    			}
	
	    			if ( canvas.width > 2048 || canvas.height > 2048 ) {
	
	    				return canvas.toDataURL( 'image/jpeg', 0.6 );
	
	    			} else {
	
	    				return canvas.toDataURL( 'image/png' );
	
	    			}
	
	    		}
	
	    		var output = {
	    			metadata: {
	    				version: 4.4,
	    				type: 'Texture',
	    				generator: 'Texture.toJSON'
	    			},
	
	    			uuid: this.uuid,
	    			name: this.name,
	
	    			mapping: this.mapping,
	
	    			repeat: [ this.repeat.x, this.repeat.y ],
	    			offset: [ this.offset.x, this.offset.y ],
	    			wrap: [ this.wrapS, this.wrapT ],
	
	    			minFilter: this.minFilter,
	    			magFilter: this.magFilter,
	    			anisotropy: this.anisotropy,
	
	    			flipY: this.flipY
	    		};
	
	    		if ( this.image !== undefined ) {
	
	    			// TODO: Move to THREE.Image
	
	    			var image = this.image;
	
	    			if ( image.uuid === undefined ) {
	
	    				image.uuid = exports.Math.generateUUID(); // UGH
	
	    			}
	
	    			if ( meta.images[ image.uuid ] === undefined ) {
	
	    				meta.images[ image.uuid ] = {
	    					uuid: image.uuid,
	    					url: getDataURL( image )
	    				};
	
	    			}
	
	    			output.image = image.uuid;
	
	    		}
	
	    		meta.textures[ this.uuid ] = output;
	
	    		return output;
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	},
	
	    	transformUv: function ( uv ) {
	
	    		if ( this.mapping !== UVMapping )  return;
	
	    		uv.multiply( this.repeat );
	    		uv.add( this.offset );
	
	    		if ( uv.x < 0 || uv.x > 1 ) {
	
	    			switch ( this.wrapS ) {
	
	    				case RepeatWrapping:
	
	    					uv.x = uv.x - Math.floor( uv.x );
	    					break;
	
	    				case ClampToEdgeWrapping:
	
	    					uv.x = uv.x < 0 ? 0 : 1;
	    					break;
	
	    				case MirroredRepeatWrapping:
	
	    					if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {
	
	    						uv.x = Math.ceil( uv.x ) - uv.x;
	
	    					} else {
	
	    						uv.x = uv.x - Math.floor( uv.x );
	
	    					}
	    					break;
	
	    			}
	
	    		}
	
	    		if ( uv.y < 0 || uv.y > 1 ) {
	
	    			switch ( this.wrapT ) {
	
	    				case RepeatWrapping:
	
	    					uv.y = uv.y - Math.floor( uv.y );
	    					break;
	
	    				case ClampToEdgeWrapping:
	
	    					uv.y = uv.y < 0 ? 0 : 1;
	    					break;
	
	    				case MirroredRepeatWrapping:
	
	    					if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {
	
	    						uv.y = Math.ceil( uv.y ) - uv.y;
	
	    					} else {
	
	    						uv.y = uv.y - Math.floor( uv.y );
	
	    					}
	    					break;
	
	    			}
	
	    		}
	
	    		if ( this.flipY ) {
	
	    			uv.y = 1 - uv.y;
	
	    		}
	
	    	}
	
	    };
	
	    Object.assign( Texture.prototype, EventDispatcher.prototype );
	
	    var count = 0;
	    function TextureIdCount() { return count++; };
	
	    /**
	     * @author supereggbert / http://www.paulbrunt.co.uk/
	     * @author philogb / http://blog.thejit.org/
	     * @author mikael emtinger / http://gomo.se/
	     * @author egraether / http://egraether.com/
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function Vector4( x, y, z, w ) {
	
	    	this.x = x || 0;
	    	this.y = y || 0;
	    	this.z = z || 0;
	    	this.w = ( w !== undefined ) ? w : 1;
	
	    }
	
	    Vector4.prototype = {
	
	    	constructor: Vector4,
	
	    	isVector4: true,
	
	    	set: function ( x, y, z, w ) {
	
	    		this.x = x;
	    		this.y = y;
	    		this.z = z;
	    		this.w = w;
	
	    		return this;
	
	    	},
	
	    	setScalar: function ( scalar ) {
	
	    		this.x = scalar;
	    		this.y = scalar;
	    		this.z = scalar;
	    		this.w = scalar;
	
	    		return this;
	
	    	},
	
	    	setX: function ( x ) {
	
	    		this.x = x;
	
	    		return this;
	
	    	},
	
	    	setY: function ( y ) {
	
	    		this.y = y;
	
	    		return this;
	
	    	},
	
	    	setZ: function ( z ) {
	
	    		this.z = z;
	
	    		return this;
	
	    	},
	
	    	setW: function ( w ) {
	
	    		this.w = w;
	
	    		return this;
	
	    	},
	
	    	setComponent: function ( index, value ) {
	
	    		switch ( index ) {
	
	    			case 0: this.x = value; break;
	    			case 1: this.y = value; break;
	    			case 2: this.z = value; break;
	    			case 3: this.w = value; break;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	getComponent: function ( index ) {
	
	    		switch ( index ) {
	
	    			case 0: return this.x;
	    			case 1: return this.y;
	    			case 2: return this.z;
	    			case 3: return this.w;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this.x, this.y, this.z, this.w );
	
	    	},
	
	    	copy: function ( v ) {
	
	    		this.x = v.x;
	    		this.y = v.y;
	    		this.z = v.z;
	    		this.w = ( v.w !== undefined ) ? v.w : 1;
	
	    		return this;
	
	    	},
	
	    	add: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
	    			return this.addVectors( v, w );
	
	    		}
	
	    		this.x += v.x;
	    		this.y += v.y;
	    		this.z += v.z;
	    		this.w += v.w;
	
	    		return this;
	
	    	},
	
	    	addScalar: function ( s ) {
	
	    		this.x += s;
	    		this.y += s;
	    		this.z += s;
	    		this.w += s;
	
	    		return this;
	
	    	},
	
	    	addVectors: function ( a, b ) {
	
	    		this.x = a.x + b.x;
	    		this.y = a.y + b.y;
	    		this.z = a.z + b.z;
	    		this.w = a.w + b.w;
	
	    		return this;
	
	    	},
	
	    	addScaledVector: function ( v, s ) {
	
	    		this.x += v.x * s;
	    		this.y += v.y * s;
	    		this.z += v.z * s;
	    		this.w += v.w * s;
	
	    		return this;
	
	    	},
	
	    	sub: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
	    			return this.subVectors( v, w );
	
	    		}
	
	    		this.x -= v.x;
	    		this.y -= v.y;
	    		this.z -= v.z;
	    		this.w -= v.w;
	
	    		return this;
	
	    	},
	
	    	subScalar: function ( s ) {
	
	    		this.x -= s;
	    		this.y -= s;
	    		this.z -= s;
	    		this.w -= s;
	
	    		return this;
	
	    	},
	
	    	subVectors: function ( a, b ) {
	
	    		this.x = a.x - b.x;
	    		this.y = a.y - b.y;
	    		this.z = a.z - b.z;
	    		this.w = a.w - b.w;
	
	    		return this;
	
	    	},
	
	    	multiplyScalar: function ( scalar ) {
	
	    		if ( isFinite( scalar ) ) {
	
	    			this.x *= scalar;
	    			this.y *= scalar;
	    			this.z *= scalar;
	    			this.w *= scalar;
	
	    		} else {
	
	    			this.x = 0;
	    			this.y = 0;
	    			this.z = 0;
	    			this.w = 0;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	applyMatrix4: function ( m ) {
	
	    		var x = this.x, y = this.y, z = this.z, w = this.w;
	    		var e = m.elements;
	
	    		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;
	    		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;
	    		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;
	    		this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;
	
	    		return this;
	
	    	},
	
	    	divideScalar: function ( scalar ) {
	
	    		return this.multiplyScalar( 1 / scalar );
	
	    	},
	
	    	setAxisAngleFromQuaternion: function ( q ) {
	
	    		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
	
	    		// q is assumed to be normalized
	
	    		this.w = 2 * Math.acos( q.w );
	
	    		var s = Math.sqrt( 1 - q.w * q.w );
	
	    		if ( s < 0.0001 ) {
	
	    			 this.x = 1;
	    			 this.y = 0;
	    			 this.z = 0;
	
	    		} else {
	
	    			 this.x = q.x / s;
	    			 this.y = q.y / s;
	    			 this.z = q.z / s;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	setAxisAngleFromRotationMatrix: function ( m ) {
	
	    		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
	
	    		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
	
	    		var angle, x, y, z,		// variables for result
	    			epsilon = 0.01,		// margin to allow for rounding errors
	    			epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees
	
	    			te = m.elements,
	
	    			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
	    			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
	    			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];
	
	    		if ( ( Math.abs( m12 - m21 ) < epsilon ) &&
	    		     ( Math.abs( m13 - m31 ) < epsilon ) &&
	    		     ( Math.abs( m23 - m32 ) < epsilon ) ) {
	
	    			// singularity found
	    			// first check for identity matrix which must have +1 for all terms
	    			// in leading diagonal and zero in other terms
	
	    			if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&
	    			     ( Math.abs( m13 + m31 ) < epsilon2 ) &&
	    			     ( Math.abs( m23 + m32 ) < epsilon2 ) &&
	    			     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {
	
	    				// this singularity is identity matrix so angle = 0
	
	    				this.set( 1, 0, 0, 0 );
	
	    				return this; // zero angle, arbitrary axis
	
	    			}
	
	    			// otherwise this singularity is angle = 180
	
	    			angle = Math.PI;
	
	    			var xx = ( m11 + 1 ) / 2;
	    			var yy = ( m22 + 1 ) / 2;
	    			var zz = ( m33 + 1 ) / 2;
	    			var xy = ( m12 + m21 ) / 4;
	    			var xz = ( m13 + m31 ) / 4;
	    			var yz = ( m23 + m32 ) / 4;
	
	    			if ( ( xx > yy ) && ( xx > zz ) ) {
	
	    				// m11 is the largest diagonal term
	
	    				if ( xx < epsilon ) {
	
	    					x = 0;
	    					y = 0.707106781;
	    					z = 0.707106781;
	
	    				} else {
	
	    					x = Math.sqrt( xx );
	    					y = xy / x;
	    					z = xz / x;
	
	    				}
	
	    			} else if ( yy > zz ) {
	
	    				// m22 is the largest diagonal term
	
	    				if ( yy < epsilon ) {
	
	    					x = 0.707106781;
	    					y = 0;
	    					z = 0.707106781;
	
	    				} else {
	
	    					y = Math.sqrt( yy );
	    					x = xy / y;
	    					z = yz / y;
	
	    				}
	
	    			} else {
	
	    				// m33 is the largest diagonal term so base result on this
	
	    				if ( zz < epsilon ) {
	
	    					x = 0.707106781;
	    					y = 0.707106781;
	    					z = 0;
	
	    				} else {
	
	    					z = Math.sqrt( zz );
	    					x = xz / z;
	    					y = yz / z;
	
	    				}
	
	    			}
	
	    			this.set( x, y, z, angle );
	
	    			return this; // return 180 deg rotation
	
	    		}
	
	    		// as we have reached here there are no singularities so we can handle normally
	
	    		var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +
	    		                   ( m13 - m31 ) * ( m13 - m31 ) +
	    		                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize
	
	    		if ( Math.abs( s ) < 0.001 ) s = 1;
	
	    		// prevent divide by zero, should not happen if matrix is orthogonal and should be
	    		// caught by singularity test above, but I've left it in just in case
	
	    		this.x = ( m32 - m23 ) / s;
	    		this.y = ( m13 - m31 ) / s;
	    		this.z = ( m21 - m12 ) / s;
	    		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );
	
	    		return this;
	
	    	},
	
	    	min: function ( v ) {
	
	    		this.x = Math.min( this.x, v.x );
	    		this.y = Math.min( this.y, v.y );
	    		this.z = Math.min( this.z, v.z );
	    		this.w = Math.min( this.w, v.w );
	
	    		return this;
	
	    	},
	
	    	max: function ( v ) {
	
	    		this.x = Math.max( this.x, v.x );
	    		this.y = Math.max( this.y, v.y );
	    		this.z = Math.max( this.z, v.z );
	    		this.w = Math.max( this.w, v.w );
	
	    		return this;
	
	    	},
	
	    	clamp: function ( min, max ) {
	
	    		// This function assumes min < max, if this assumption isn't true it will not operate correctly
	
	    		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
	    		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
	    		this.z = Math.max( min.z, Math.min( max.z, this.z ) );
	    		this.w = Math.max( min.w, Math.min( max.w, this.w ) );
	
	    		return this;
	
	    	},
	
	    	clampScalar: function () {
	
	    		var min, max;
	
	    		return function clampScalar( minVal, maxVal ) {
	
	    			if ( min === undefined ) {
	
	    				min = new Vector4();
	    				max = new Vector4();
	
	    			}
	
	    			min.set( minVal, minVal, minVal, minVal );
	    			max.set( maxVal, maxVal, maxVal, maxVal );
	
	    			return this.clamp( min, max );
	
	    		};
	
	    	}(),
	
	    	floor: function () {
	
	    		this.x = Math.floor( this.x );
	    		this.y = Math.floor( this.y );
	    		this.z = Math.floor( this.z );
	    		this.w = Math.floor( this.w );
	
	    		return this;
	
	    	},
	
	    	ceil: function () {
	
	    		this.x = Math.ceil( this.x );
	    		this.y = Math.ceil( this.y );
	    		this.z = Math.ceil( this.z );
	    		this.w = Math.ceil( this.w );
	
	    		return this;
	
	    	},
	
	    	round: function () {
	
	    		this.x = Math.round( this.x );
	    		this.y = Math.round( this.y );
	    		this.z = Math.round( this.z );
	    		this.w = Math.round( this.w );
	
	    		return this;
	
	    	},
	
	    	roundToZero: function () {
	
	    		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
	    		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
	    		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
	    		this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );
	
	    		return this;
	
	    	},
	
	    	negate: function () {
	
	    		this.x = - this.x;
	    		this.y = - this.y;
	    		this.z = - this.z;
	    		this.w = - this.w;
	
	    		return this;
	
	    	},
	
	    	dot: function ( v ) {
	
	    		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;
	
	    	},
	
	    	lengthSq: function () {
	
	    		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
	
	    	},
	
	    	length: function () {
	
	    		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );
	
	    	},
	
	    	lengthManhattan: function () {
	
	    		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );
	
	    	},
	
	    	normalize: function () {
	
	    		return this.divideScalar( this.length() );
	
	    	},
	
	    	setLength: function ( length ) {
	
	    		return this.multiplyScalar( length / this.length() );
	
	    	},
	
	    	lerp: function ( v, alpha ) {
	
	    		this.x += ( v.x - this.x ) * alpha;
	    		this.y += ( v.y - this.y ) * alpha;
	    		this.z += ( v.z - this.z ) * alpha;
	    		this.w += ( v.w - this.w ) * alpha;
	
	    		return this;
	
	    	},
	
	    	lerpVectors: function ( v1, v2, alpha ) {
	
	    		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );
	
	    	},
	
	    	equals: function ( v ) {
	
	    		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.x = array[ offset ];
	    		this.y = array[ offset + 1 ];
	    		this.z = array[ offset + 2 ];
	    		this.w = array[ offset + 3 ];
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this.x;
	    		array[ offset + 1 ] = this.y;
	    		array[ offset + 2 ] = this.z;
	    		array[ offset + 3 ] = this.w;
	
	    		return array;
	
	    	},
	
	    	fromAttribute: function ( attribute, index, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		index = index * attribute.itemSize + offset;
	
	    		this.x = attribute.array[ index ];
	    		this.y = attribute.array[ index + 1 ];
	    		this.z = attribute.array[ index + 2 ];
	    		this.w = attribute.array[ index + 3 ];
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author szimek / https://github.com/szimek/
	     * @author alteredq / http://alteredqualia.com/
	     * @author Marius Kintel / https://github.com/kintel
	     */
	
	    /*
	     In options, we can specify:
	     * Texture parameters for an auto-generated target texture
	     * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
	    */
	    function WebGLRenderTarget( width, height, options ) {
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.width = width;
	    	this.height = height;
	
	    	this.scissor = new Vector4( 0, 0, width, height );
	    	this.scissorTest = false;
	
	    	this.viewport = new Vector4( 0, 0, width, height );
	
	    	options = options || {};
	
	    	if ( options.minFilter === undefined ) options.minFilter = LinearFilter;
	
	    	this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );
	
	    	this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
	    	this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;
	    	this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;
	
	    }
	
	    Object.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {
	
	    	isWebGLRenderTarget: true,
	
	    	setSize: function ( width, height ) {
	
	    		if ( this.width !== width || this.height !== height ) {
	
	    			this.width = width;
	    			this.height = height;
	
	    			this.dispose();
	
	    		}
	
	    		this.viewport.set( 0, 0, width, height );
	    		this.scissor.set( 0, 0, width, height );
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.width = source.width;
	    		this.height = source.height;
	
	    		this.viewport.copy( source.viewport );
	
	    		this.texture = source.texture.clone();
	
	    		this.depthBuffer = source.depthBuffer;
	    		this.stencilBuffer = source.stencilBuffer;
	    		this.depthTexture = source.depthTexture;
	
	    		return this;
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com
	     */
	
	    function WebGLRenderTargetCube( width, height, options ) {
	
	    	WebGLRenderTarget.call( this, width, height, options );
	
	    	this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5
	    	this.activeMipMapLevel = 0;
	
	    }
	
	    WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );
	    WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;
	
	    WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author WestLangley / http://github.com/WestLangley
	     * @author bhouston / http://clara.io
	     */
	
	    function Quaternion( x, y, z, w ) {
	
	    	this._x = x || 0;
	    	this._y = y || 0;
	    	this._z = z || 0;
	    	this._w = ( w !== undefined ) ? w : 1;
	
	    }
	
	    Quaternion.prototype = {
	
	    	constructor: Quaternion,
	
	    	get x () {
	
	    		return this._x;
	
	    	},
	
	    	set x ( value ) {
	
	    		this._x = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get y () {
	
	    		return this._y;
	
	    	},
	
	    	set y ( value ) {
	
	    		this._y = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get z () {
	
	    		return this._z;
	
	    	},
	
	    	set z ( value ) {
	
	    		this._z = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get w () {
	
	    		return this._w;
	
	    	},
	
	    	set w ( value ) {
	
	    		this._w = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	set: function ( x, y, z, w ) {
	
	    		this._x = x;
	    		this._y = y;
	    		this._z = z;
	    		this._w = w;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this._x, this._y, this._z, this._w );
	
	    	},
	
	    	copy: function ( quaternion ) {
	
	    		this._x = quaternion.x;
	    		this._y = quaternion.y;
	    		this._z = quaternion.z;
	    		this._w = quaternion.w;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromEuler: function ( euler, update ) {
	
	    		if ( (euler && euler.isEuler) === false ) {
	
	    			throw new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );
	
	    		}
	
	    		// http://www.mathworks.com/matlabcentral/fileexchange/
	    		// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
	    		//	content/SpinCalc.m
	
	    		var c1 = Math.cos( euler._x / 2 );
	    		var c2 = Math.cos( euler._y / 2 );
	    		var c3 = Math.cos( euler._z / 2 );
	    		var s1 = Math.sin( euler._x / 2 );
	    		var s2 = Math.sin( euler._y / 2 );
	    		var s3 = Math.sin( euler._z / 2 );
	
	    		var order = euler.order;
	
	    		if ( order === 'XYZ' ) {
	
	    			this._x = s1 * c2 * c3 + c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 - s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 + s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 - s1 * s2 * s3;
	
	    		} else if ( order === 'YXZ' ) {
	
	    			this._x = s1 * c2 * c3 + c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 - s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 - s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 + s1 * s2 * s3;
	
	    		} else if ( order === 'ZXY' ) {
	
	    			this._x = s1 * c2 * c3 - c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 + s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 + s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 - s1 * s2 * s3;
	
	    		} else if ( order === 'ZYX' ) {
	
	    			this._x = s1 * c2 * c3 - c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 + s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 - s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 + s1 * s2 * s3;
	
	    		} else if ( order === 'YZX' ) {
	
	    			this._x = s1 * c2 * c3 + c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 + s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 - s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 - s1 * s2 * s3;
	
	    		} else if ( order === 'XZY' ) {
	
	    			this._x = s1 * c2 * c3 - c1 * s2 * s3;
	    			this._y = c1 * s2 * c3 - s1 * c2 * s3;
	    			this._z = c1 * c2 * s3 + s1 * s2 * c3;
	    			this._w = c1 * c2 * c3 + s1 * s2 * s3;
	
	    		}
	
	    		if ( update !== false ) this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromAxisAngle: function ( axis, angle ) {
	
	    		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
	
	    		// assumes axis is normalized
	
	    		var halfAngle = angle / 2, s = Math.sin( halfAngle );
	
	    		this._x = axis.x * s;
	    		this._y = axis.y * s;
	    		this._z = axis.z * s;
	    		this._w = Math.cos( halfAngle );
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromRotationMatrix: function ( m ) {
	
	    		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
	
	    		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
	
	    		var te = m.elements,
	
	    			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
	    			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
	    			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],
	
	    			trace = m11 + m22 + m33,
	    			s;
	
	    		if ( trace > 0 ) {
	
	    			s = 0.5 / Math.sqrt( trace + 1.0 );
	
	    			this._w = 0.25 / s;
	    			this._x = ( m32 - m23 ) * s;
	    			this._y = ( m13 - m31 ) * s;
	    			this._z = ( m21 - m12 ) * s;
	
	    		} else if ( m11 > m22 && m11 > m33 ) {
	
	    			s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );
	
	    			this._w = ( m32 - m23 ) / s;
	    			this._x = 0.25 * s;
	    			this._y = ( m12 + m21 ) / s;
	    			this._z = ( m13 + m31 ) / s;
	
	    		} else if ( m22 > m33 ) {
	
	    			s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );
	
	    			this._w = ( m13 - m31 ) / s;
	    			this._x = ( m12 + m21 ) / s;
	    			this._y = 0.25 * s;
	    			this._z = ( m23 + m32 ) / s;
	
	    		} else {
	
	    			s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );
	
	    			this._w = ( m21 - m12 ) / s;
	    			this._x = ( m13 + m31 ) / s;
	    			this._y = ( m23 + m32 ) / s;
	    			this._z = 0.25 * s;
	
	    		}
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromUnitVectors: function () {
	
	    		// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final
	
	    		// assumes direction vectors vFrom and vTo are normalized
	
	    		var v1, r;
	
	    		var EPS = 0.000001;
	
	    		return function setFromUnitVectors( vFrom, vTo ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	
	    			r = vFrom.dot( vTo ) + 1;
	
	    			if ( r < EPS ) {
	
	    				r = 0;
	
	    				if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {
	
	    					v1.set( - vFrom.y, vFrom.x, 0 );
	
	    				} else {
	
	    					v1.set( 0, - vFrom.z, vFrom.y );
	
	    				}
	
	    			} else {
	
	    				v1.crossVectors( vFrom, vTo );
	
	    			}
	
	    			this._x = v1.x;
	    			this._y = v1.y;
	    			this._z = v1.z;
	    			this._w = r;
	
	    			return this.normalize();
	
	    		};
	
	    	}(),
	
	    	inverse: function () {
	
	    		return this.conjugate().normalize();
	
	    	},
	
	    	conjugate: function () {
	
	    		this._x *= - 1;
	    		this._y *= - 1;
	    		this._z *= - 1;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	dot: function ( v ) {
	
	    		return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;
	
	    	},
	
	    	lengthSq: function () {
	
	    		return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
	
	    	},
	
	    	length: function () {
	
	    		return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );
	
	    	},
	
	    	normalize: function () {
	
	    		var l = this.length();
	
	    		if ( l === 0 ) {
	
	    			this._x = 0;
	    			this._y = 0;
	    			this._z = 0;
	    			this._w = 1;
	
	    		} else {
	
	    			l = 1 / l;
	
	    			this._x = this._x * l;
	    			this._y = this._y * l;
	    			this._z = this._z * l;
	    			this._w = this._w * l;
	
	    		}
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	multiply: function ( q, p ) {
	
	    		if ( p !== undefined ) {
	
	    			console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
	    			return this.multiplyQuaternions( q, p );
	
	    		}
	
	    		return this.multiplyQuaternions( this, q );
	
	    	},
	
	    	premultiply: function ( q ) {
	
	    		return this.multiplyQuaternions( q, this );
	
	    	},
	
	    	multiplyQuaternions: function ( a, b ) {
	
	    		// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
	
	    		var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
	    		var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;
	
	    		this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
	    		this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
	    		this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
	    		this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	slerp: function ( qb, t ) {
	
	    		if ( t === 0 ) return this;
	    		if ( t === 1 ) return this.copy( qb );
	
	    		var x = this._x, y = this._y, z = this._z, w = this._w;
	
	    		// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/
	
	    		var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;
	
	    		if ( cosHalfTheta < 0 ) {
	
	    			this._w = - qb._w;
	    			this._x = - qb._x;
	    			this._y = - qb._y;
	    			this._z = - qb._z;
	
	    			cosHalfTheta = - cosHalfTheta;
	
	    		} else {
	
	    			this.copy( qb );
	
	    		}
	
	    		if ( cosHalfTheta >= 1.0 ) {
	
	    			this._w = w;
	    			this._x = x;
	    			this._y = y;
	    			this._z = z;
	
	    			return this;
	
	    		}
	
	    		var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );
	
	    		if ( Math.abs( sinHalfTheta ) < 0.001 ) {
	
	    			this._w = 0.5 * ( w + this._w );
	    			this._x = 0.5 * ( x + this._x );
	    			this._y = 0.5 * ( y + this._y );
	    			this._z = 0.5 * ( z + this._z );
	
	    			return this;
	
	    		}
	
	    		var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );
	    		var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
	    		ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;
	
	    		this._w = ( w * ratioA + this._w * ratioB );
	    		this._x = ( x * ratioA + this._x * ratioB );
	    		this._y = ( y * ratioA + this._y * ratioB );
	    		this._z = ( z * ratioA + this._z * ratioB );
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	equals: function ( quaternion ) {
	
	    		return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this._x = array[ offset ];
	    		this._y = array[ offset + 1 ];
	    		this._z = array[ offset + 2 ];
	    		this._w = array[ offset + 3 ];
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this._x;
	    		array[ offset + 1 ] = this._y;
	    		array[ offset + 2 ] = this._z;
	    		array[ offset + 3 ] = this._w;
	
	    		return array;
	
	    	},
	
	    	onChange: function ( callback ) {
	
	    		this.onChangeCallback = callback;
	
	    		return this;
	
	    	},
	
	    	onChangeCallback: function () {}
	
	    };
	
	    Object.assign( Quaternion, {
	
	    	slerp: function( qa, qb, qm, t ) {
	
	    		return qm.copy( qa ).slerp( qb, t );
	
	    	},
	
	    	slerpFlat: function(
	    			dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {
	
	    		// fuzz-free, array-based Quaternion SLERP operation
	
	    		var x0 = src0[ srcOffset0 + 0 ],
	    			y0 = src0[ srcOffset0 + 1 ],
	    			z0 = src0[ srcOffset0 + 2 ],
	    			w0 = src0[ srcOffset0 + 3 ],
	
	    			x1 = src1[ srcOffset1 + 0 ],
	    			y1 = src1[ srcOffset1 + 1 ],
	    			z1 = src1[ srcOffset1 + 2 ],
	    			w1 = src1[ srcOffset1 + 3 ];
	
	    		if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {
	
	    			var s = 1 - t,
	
	    				cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,
	
	    				dir = ( cos >= 0 ? 1 : - 1 ),
	    				sqrSin = 1 - cos * cos;
	
	    			// Skip the Slerp for tiny steps to avoid numeric problems:
	    			if ( sqrSin > Number.EPSILON ) {
	
	    				var sin = Math.sqrt( sqrSin ),
	    					len = Math.atan2( sin, cos * dir );
	
	    				s = Math.sin( s * len ) / sin;
	    				t = Math.sin( t * len ) / sin;
	
	    			}
	
	    			var tDir = t * dir;
	
	    			x0 = x0 * s + x1 * tDir;
	    			y0 = y0 * s + y1 * tDir;
	    			z0 = z0 * s + z1 * tDir;
	    			w0 = w0 * s + w1 * tDir;
	
	    			// Normalize in case we just did a lerp:
	    			if ( s === 1 - t ) {
	
	    				var f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );
	
	    				x0 *= f;
	    				y0 *= f;
	    				z0 *= f;
	    				w0 *= f;
	
	    			}
	
	    		}
	
	    		dst[ dstOffset ] = x0;
	    		dst[ dstOffset + 1 ] = y0;
	    		dst[ dstOffset + 2 ] = z0;
	    		dst[ dstOffset + 3 ] = w0;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author *kile / http://kile.stravaganza.org/
	     * @author philogb / http://blog.thejit.org/
	     * @author mikael emtinger / http://gomo.se/
	     * @author egraether / http://egraether.com/
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function Vector3( x, y, z ) {
	
	    	this.x = x || 0;
	    	this.y = y || 0;
	    	this.z = z || 0;
	
	    }
	
	    Vector3.prototype = {
	
	    	constructor: Vector3,
	
	    	isVector3: true,
	
	    	set: function ( x, y, z ) {
	
	    		this.x = x;
	    		this.y = y;
	    		this.z = z;
	
	    		return this;
	
	    	},
	
	    	setScalar: function ( scalar ) {
	
	    		this.x = scalar;
	    		this.y = scalar;
	    		this.z = scalar;
	
	    		return this;
	
	    	},
	
	    	setX: function ( x ) {
	
	    		this.x = x;
	
	    		return this;
	
	    	},
	
	    	setY: function ( y ) {
	
	    		this.y = y;
	
	    		return this;
	
	    	},
	
	    	setZ: function ( z ) {
	
	    		this.z = z;
	
	    		return this;
	
	    	},
	
	    	setComponent: function ( index, value ) {
	
	    		switch ( index ) {
	
	    			case 0: this.x = value; break;
	    			case 1: this.y = value; break;
	    			case 2: this.z = value; break;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	getComponent: function ( index ) {
	
	    		switch ( index ) {
	
	    			case 0: return this.x;
	    			case 1: return this.y;
	    			case 2: return this.z;
	    			default: throw new Error( 'index is out of range: ' + index );
	
	    		}
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this.x, this.y, this.z );
	
	    	},
	
	    	copy: function ( v ) {
	
	    		this.x = v.x;
	    		this.y = v.y;
	    		this.z = v.z;
	
	    		return this;
	
	    	},
	
	    	add: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
	    			return this.addVectors( v, w );
	
	    		}
	
	    		this.x += v.x;
	    		this.y += v.y;
	    		this.z += v.z;
	
	    		return this;
	
	    	},
	
	    	addScalar: function ( s ) {
	
	    		this.x += s;
	    		this.y += s;
	    		this.z += s;
	
	    		return this;
	
	    	},
	
	    	addVectors: function ( a, b ) {
	
	    		this.x = a.x + b.x;
	    		this.y = a.y + b.y;
	    		this.z = a.z + b.z;
	
	    		return this;
	
	    	},
	
	    	addScaledVector: function ( v, s ) {
	
	    		this.x += v.x * s;
	    		this.y += v.y * s;
	    		this.z += v.z * s;
	
	    		return this;
	
	    	},
	
	    	sub: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
	    			return this.subVectors( v, w );
	
	    		}
	
	    		this.x -= v.x;
	    		this.y -= v.y;
	    		this.z -= v.z;
	
	    		return this;
	
	    	},
	
	    	subScalar: function ( s ) {
	
	    		this.x -= s;
	    		this.y -= s;
	    		this.z -= s;
	
	    		return this;
	
	    	},
	
	    	subVectors: function ( a, b ) {
	
	    		this.x = a.x - b.x;
	    		this.y = a.y - b.y;
	    		this.z = a.z - b.z;
	
	    		return this;
	
	    	},
	
	    	multiply: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
	    			return this.multiplyVectors( v, w );
	
	    		}
	
	    		this.x *= v.x;
	    		this.y *= v.y;
	    		this.z *= v.z;
	
	    		return this;
	
	    	},
	
	    	multiplyScalar: function ( scalar ) {
	
	    		if ( isFinite( scalar ) ) {
	
	    			this.x *= scalar;
	    			this.y *= scalar;
	    			this.z *= scalar;
	
	    		} else {
	
	    			this.x = 0;
	    			this.y = 0;
	    			this.z = 0;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	multiplyVectors: function ( a, b ) {
	
	    		this.x = a.x * b.x;
	    		this.y = a.y * b.y;
	    		this.z = a.z * b.z;
	
	    		return this;
	
	    	},
	
	    	applyEuler: function () {
	
	    		var quaternion;
	
	    		return function applyEuler( euler ) {
	
	    			if ( (euler && euler.isEuler) === false ) {
	
	    				console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );
	
	    			}
	
	    			if ( quaternion === undefined ) quaternion = new Quaternion();
	
	    			return this.applyQuaternion( quaternion.setFromEuler( euler ) );
	
	    		};
	
	    	}(),
	
	    	applyAxisAngle: function () {
	
	    		var quaternion;
	
	    		return function applyAxisAngle( axis, angle ) {
	
	    			if ( quaternion === undefined ) quaternion = new Quaternion();
	
	    			return this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );
	
	    		};
	
	    	}(),
	
	    	applyMatrix3: function ( m ) {
	
	    		var x = this.x, y = this.y, z = this.z;
	    		var e = m.elements;
	
	    		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;
	    		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;
	    		this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;
	
	    		return this;
	
	    	},
	
	    	applyMatrix4: function ( m ) {
	
	    		// input: THREE.Matrix4 affine matrix
	
	    		var x = this.x, y = this.y, z = this.z;
	    		var e = m.elements;
	
	    		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];
	    		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];
	    		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];
	
	    		return this;
	
	    	},
	
	    	applyProjection: function ( m ) {
	
	    		// input: THREE.Matrix4 projection matrix
	
	    		var x = this.x, y = this.y, z = this.z;
	    		var e = m.elements;
	    		var d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide
	
	    		this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;
	    		this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;
	    		this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;
	
	    		return this;
	
	    	},
	
	    	applyQuaternion: function ( q ) {
	
	    		var x = this.x, y = this.y, z = this.z;
	    		var qx = q.x, qy = q.y, qz = q.z, qw = q.w;
	
	    		// calculate quat * vector
	
	    		var ix =  qw * x + qy * z - qz * y;
	    		var iy =  qw * y + qz * x - qx * z;
	    		var iz =  qw * z + qx * y - qy * x;
	    		var iw = - qx * x - qy * y - qz * z;
	
	    		// calculate result * inverse quat
	
	    		this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
	    		this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
	    		this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;
	
	    		return this;
	
	    	},
	
	    	project: function () {
	
	    		var matrix;
	
	    		return function project( camera ) {
	
	    			if ( matrix === undefined ) matrix = new Matrix4();
	
	    			matrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );
	    			return this.applyProjection( matrix );
	
	    		};
	
	    	}(),
	
	    	unproject: function () {
	
	    		var matrix;
	
	    		return function unproject( camera ) {
	
	    			if ( matrix === undefined ) matrix = new Matrix4();
	
	    			matrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );
	    			return this.applyProjection( matrix );
	
	    		};
	
	    	}(),
	
	    	transformDirection: function ( m ) {
	
	    		// input: THREE.Matrix4 affine matrix
	    		// vector interpreted as a direction
	
	    		var x = this.x, y = this.y, z = this.z;
	    		var e = m.elements;
	
	    		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;
	    		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;
	    		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;
	
	    		return this.normalize();
	
	    	},
	
	    	divide: function ( v ) {
	
	    		this.x /= v.x;
	    		this.y /= v.y;
	    		this.z /= v.z;
	
	    		return this;
	
	    	},
	
	    	divideScalar: function ( scalar ) {
	
	    		return this.multiplyScalar( 1 / scalar );
	
	    	},
	
	    	min: function ( v ) {
	
	    		this.x = Math.min( this.x, v.x );
	    		this.y = Math.min( this.y, v.y );
	    		this.z = Math.min( this.z, v.z );
	
	    		return this;
	
	    	},
	
	    	max: function ( v ) {
	
	    		this.x = Math.max( this.x, v.x );
	    		this.y = Math.max( this.y, v.y );
	    		this.z = Math.max( this.z, v.z );
	
	    		return this;
	
	    	},
	
	    	clamp: function ( min, max ) {
	
	    		// This function assumes min < max, if this assumption isn't true it will not operate correctly
	
	    		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
	    		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
	    		this.z = Math.max( min.z, Math.min( max.z, this.z ) );
	
	    		return this;
	
	    	},
	
	    	clampScalar: function () {
	
	    		var min, max;
	
	    		return function clampScalar( minVal, maxVal ) {
	
	    			if ( min === undefined ) {
	
	    				min = new Vector3();
	    				max = new Vector3();
	
	    			}
	
	    			min.set( minVal, minVal, minVal );
	    			max.set( maxVal, maxVal, maxVal );
	
	    			return this.clamp( min, max );
	
	    		};
	
	    	}(),
	
	    	clampLength: function ( min, max ) {
	
	    		var length = this.length();
	
	    		return this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );
	
	    	},
	
	    	floor: function () {
	
	    		this.x = Math.floor( this.x );
	    		this.y = Math.floor( this.y );
	    		this.z = Math.floor( this.z );
	
	    		return this;
	
	    	},
	
	    	ceil: function () {
	
	    		this.x = Math.ceil( this.x );
	    		this.y = Math.ceil( this.y );
	    		this.z = Math.ceil( this.z );
	
	    		return this;
	
	    	},
	
	    	round: function () {
	
	    		this.x = Math.round( this.x );
	    		this.y = Math.round( this.y );
	    		this.z = Math.round( this.z );
	
	    		return this;
	
	    	},
	
	    	roundToZero: function () {
	
	    		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
	    		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
	    		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
	
	    		return this;
	
	    	},
	
	    	negate: function () {
	
	    		this.x = - this.x;
	    		this.y = - this.y;
	    		this.z = - this.z;
	
	    		return this;
	
	    	},
	
	    	dot: function ( v ) {
	
	    		return this.x * v.x + this.y * v.y + this.z * v.z;
	
	    	},
	
	    	lengthSq: function () {
	
	    		return this.x * this.x + this.y * this.y + this.z * this.z;
	
	    	},
	
	    	length: function () {
	
	    		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );
	
	    	},
	
	    	lengthManhattan: function () {
	
	    		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );
	
	    	},
	
	    	normalize: function () {
	
	    		return this.divideScalar( this.length() );
	
	    	},
	
	    	setLength: function ( length ) {
	
	    		return this.multiplyScalar( length / this.length() );
	
	    	},
	
	    	lerp: function ( v, alpha ) {
	
	    		this.x += ( v.x - this.x ) * alpha;
	    		this.y += ( v.y - this.y ) * alpha;
	    		this.z += ( v.z - this.z ) * alpha;
	
	    		return this;
	
	    	},
	
	    	lerpVectors: function ( v1, v2, alpha ) {
	
	    		return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );
	
	    	},
	
	    	cross: function ( v, w ) {
	
	    		if ( w !== undefined ) {
	
	    			console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
	    			return this.crossVectors( v, w );
	
	    		}
	
	    		var x = this.x, y = this.y, z = this.z;
	
	    		this.x = y * v.z - z * v.y;
	    		this.y = z * v.x - x * v.z;
	    		this.z = x * v.y - y * v.x;
	
	    		return this;
	
	    	},
	
	    	crossVectors: function ( a, b ) {
	
	    		var ax = a.x, ay = a.y, az = a.z;
	    		var bx = b.x, by = b.y, bz = b.z;
	
	    		this.x = ay * bz - az * by;
	    		this.y = az * bx - ax * bz;
	    		this.z = ax * by - ay * bx;
	
	    		return this;
	
	    	},
	
	    	projectOnVector: function ( vector ) {
	
	    		var scalar = vector.dot( this ) / vector.lengthSq();
	
	    		return this.copy( vector ).multiplyScalar( scalar );
	
	    	},
	
	    	projectOnPlane: function () {
	
	    		var v1;
	
	    		return function projectOnPlane( planeNormal ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	
	    			v1.copy( this ).projectOnVector( planeNormal );
	
	    			return this.sub( v1 );
	
	    		};
	
	    	}(),
	
	    	reflect: function () {
	
	    		// reflect incident vector off plane orthogonal to normal
	    		// normal is assumed to have unit length
	
	    		var v1;
	
	    		return function reflect( normal ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	
	    			return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );
	
	    		};
	
	    	}(),
	
	    	angleTo: function ( v ) {
	
	    		var theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );
	
	    		// clamp, to handle numerical problems
	
	    		return Math.acos( exports.Math.clamp( theta, - 1, 1 ) );
	
	    	},
	
	    	distanceTo: function ( v ) {
	
	    		return Math.sqrt( this.distanceToSquared( v ) );
	
	    	},
	
	    	distanceToSquared: function ( v ) {
	
	    		var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;
	
	    		return dx * dx + dy * dy + dz * dz;
	
	    	},
	
	    	distanceToManhattan: function ( v ) {
	
	    		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );
	
	    	},
	
	    	setFromSpherical: function( s ) {
	
	    		var sinPhiRadius = Math.sin( s.phi ) * s.radius;
	
	    		this.x = sinPhiRadius * Math.sin( s.theta );
	    		this.y = Math.cos( s.phi ) * s.radius;
	    		this.z = sinPhiRadius * Math.cos( s.theta );
	
	    		return this;
	
	    	},
	
	    	setFromMatrixPosition: function ( m ) {
	
	    		return this.setFromMatrixColumn( m, 3 );
	
	    	},
	
	    	setFromMatrixScale: function ( m ) {
	
	    		var sx = this.setFromMatrixColumn( m, 0 ).length();
	    		var sy = this.setFromMatrixColumn( m, 1 ).length();
	    		var sz = this.setFromMatrixColumn( m, 2 ).length();
	
	    		this.x = sx;
	    		this.y = sy;
	    		this.z = sz;
	
	    		return this;
	
	    	},
	
	    	setFromMatrixColumn: function ( m, index ) {
	
	    		if ( typeof m === 'number' ) {
	
	    			console.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );
	    			var temp = m
	    			m = index;
	    			index = temp;
	
	    		}
	
	    		return this.fromArray( m.elements, index * 4 );
	
	    	},
	
	    	equals: function ( v ) {
	
	    		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.x = array[ offset ];
	    		this.y = array[ offset + 1 ];
	    		this.z = array[ offset + 2 ];
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this.x;
	    		array[ offset + 1 ] = this.y;
	    		array[ offset + 2 ] = this.z;
	
	    		return array;
	
	    	},
	
	    	fromAttribute: function ( attribute, index, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		index = index * attribute.itemSize + offset;
	
	    		this.x = attribute.array[ index ];
	    		this.y = attribute.array[ index + 1 ];
	    		this.z = attribute.array[ index + 2 ];
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author supereggbert / http://www.paulbrunt.co.uk/
	     * @author philogb / http://blog.thejit.org/
	     * @author jordi_ros / http://plattsoft.com
	     * @author D1plo1d / http://github.com/D1plo1d
	     * @author alteredq / http://alteredqualia.com/
	     * @author mikael emtinger / http://gomo.se/
	     * @author timknip / http://www.floorplanner.com/
	     * @author bhouston / http://clara.io
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function Matrix4() {
	
	    	this.elements = new Float32Array( [
	
	    		1, 0, 0, 0,
	    		0, 1, 0, 0,
	    		0, 0, 1, 0,
	    		0, 0, 0, 1
	
	    	] );
	
	    	if ( arguments.length > 0 ) {
	
	    		console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );
	
	    	}
	
	    }
	
	    Matrix4.prototype = {
	
	    	constructor: Matrix4,
	
	    	isMatrix4: true,
	
	    	set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {
	
	    		var te = this.elements;
	
	    		te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;
	    		te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;
	    		te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;
	    		te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;
	
	    		return this;
	
	    	},
	
	    	identity: function () {
	
	    		this.set(
	
	    			1, 0, 0, 0,
	    			0, 1, 0, 0,
	    			0, 0, 1, 0,
	    			0, 0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new Matrix4().fromArray( this.elements );
	
	    	},
	
	    	copy: function ( m ) {
	
	    		this.elements.set( m.elements );
	
	    		return this;
	
	    	},
	
	    	copyPosition: function ( m ) {
	
	    		var te = this.elements;
	    		var me = m.elements;
	
	    		te[ 12 ] = me[ 12 ];
	    		te[ 13 ] = me[ 13 ];
	    		te[ 14 ] = me[ 14 ];
	
	    		return this;
	
	    	},
	
	    	extractBasis: function ( xAxis, yAxis, zAxis ) {
	
	    		xAxis.setFromMatrixColumn( this, 0 );
	    		yAxis.setFromMatrixColumn( this, 1 );
	    		zAxis.setFromMatrixColumn( this, 2 );
	
	    		return this;
	
	    	},
	
	    	makeBasis: function ( xAxis, yAxis, zAxis ) {
	
	    		this.set(
	    			xAxis.x, yAxis.x, zAxis.x, 0,
	    			xAxis.y, yAxis.y, zAxis.y, 0,
	    			xAxis.z, yAxis.z, zAxis.z, 0,
	    			0,       0,       0,       1
	    		);
	
	    		return this;
	
	    	},
	
	    	extractRotation: function () {
	
	    		var v1;
	
	    		return function extractRotation( m ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	
	    			var te = this.elements;
	    			var me = m.elements;
	
	    			var scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();
	    			var scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();
	    			var scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();
	
	    			te[ 0 ] = me[ 0 ] * scaleX;
	    			te[ 1 ] = me[ 1 ] * scaleX;
	    			te[ 2 ] = me[ 2 ] * scaleX;
	
	    			te[ 4 ] = me[ 4 ] * scaleY;
	    			te[ 5 ] = me[ 5 ] * scaleY;
	    			te[ 6 ] = me[ 6 ] * scaleY;
	
	    			te[ 8 ] = me[ 8 ] * scaleZ;
	    			te[ 9 ] = me[ 9 ] * scaleZ;
	    			te[ 10 ] = me[ 10 ] * scaleZ;
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	makeRotationFromEuler: function ( euler ) {
	
	    		if ( (euler && euler.isEuler) === false ) {
	
	    			console.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );
	
	    		}
	
	    		var te = this.elements;
	
	    		var x = euler.x, y = euler.y, z = euler.z;
	    		var a = Math.cos( x ), b = Math.sin( x );
	    		var c = Math.cos( y ), d = Math.sin( y );
	    		var e = Math.cos( z ), f = Math.sin( z );
	
	    		if ( euler.order === 'XYZ' ) {
	
	    			var ae = a * e, af = a * f, be = b * e, bf = b * f;
	
	    			te[ 0 ] = c * e;
	    			te[ 4 ] = - c * f;
	    			te[ 8 ] = d;
	
	    			te[ 1 ] = af + be * d;
	    			te[ 5 ] = ae - bf * d;
	    			te[ 9 ] = - b * c;
	
	    			te[ 2 ] = bf - ae * d;
	    			te[ 6 ] = be + af * d;
	    			te[ 10 ] = a * c;
	
	    		} else if ( euler.order === 'YXZ' ) {
	
	    			var ce = c * e, cf = c * f, de = d * e, df = d * f;
	
	    			te[ 0 ] = ce + df * b;
	    			te[ 4 ] = de * b - cf;
	    			te[ 8 ] = a * d;
	
	    			te[ 1 ] = a * f;
	    			te[ 5 ] = a * e;
	    			te[ 9 ] = - b;
	
	    			te[ 2 ] = cf * b - de;
	    			te[ 6 ] = df + ce * b;
	    			te[ 10 ] = a * c;
	
	    		} else if ( euler.order === 'ZXY' ) {
	
	    			var ce = c * e, cf = c * f, de = d * e, df = d * f;
	
	    			te[ 0 ] = ce - df * b;
	    			te[ 4 ] = - a * f;
	    			te[ 8 ] = de + cf * b;
	
	    			te[ 1 ] = cf + de * b;
	    			te[ 5 ] = a * e;
	    			te[ 9 ] = df - ce * b;
	
	    			te[ 2 ] = - a * d;
	    			te[ 6 ] = b;
	    			te[ 10 ] = a * c;
	
	    		} else if ( euler.order === 'ZYX' ) {
	
	    			var ae = a * e, af = a * f, be = b * e, bf = b * f;
	
	    			te[ 0 ] = c * e;
	    			te[ 4 ] = be * d - af;
	    			te[ 8 ] = ae * d + bf;
	
	    			te[ 1 ] = c * f;
	    			te[ 5 ] = bf * d + ae;
	    			te[ 9 ] = af * d - be;
	
	    			te[ 2 ] = - d;
	    			te[ 6 ] = b * c;
	    			te[ 10 ] = a * c;
	
	    		} else if ( euler.order === 'YZX' ) {
	
	    			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;
	
	    			te[ 0 ] = c * e;
	    			te[ 4 ] = bd - ac * f;
	    			te[ 8 ] = bc * f + ad;
	
	    			te[ 1 ] = f;
	    			te[ 5 ] = a * e;
	    			te[ 9 ] = - b * e;
	
	    			te[ 2 ] = - d * e;
	    			te[ 6 ] = ad * f + bc;
	    			te[ 10 ] = ac - bd * f;
	
	    		} else if ( euler.order === 'XZY' ) {
	
	    			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;
	
	    			te[ 0 ] = c * e;
	    			te[ 4 ] = - f;
	    			te[ 8 ] = d * e;
	
	    			te[ 1 ] = ac * f + bd;
	    			te[ 5 ] = a * e;
	    			te[ 9 ] = ad * f - bc;
	
	    			te[ 2 ] = bc * f - ad;
	    			te[ 6 ] = b * e;
	    			te[ 10 ] = bd * f + ac;
	
	    		}
	
	    		// last column
	    		te[ 3 ] = 0;
	    		te[ 7 ] = 0;
	    		te[ 11 ] = 0;
	
	    		// bottom row
	    		te[ 12 ] = 0;
	    		te[ 13 ] = 0;
	    		te[ 14 ] = 0;
	    		te[ 15 ] = 1;
	
	    		return this;
	
	    	},
	
	    	makeRotationFromQuaternion: function ( q ) {
	
	    		var te = this.elements;
	
	    		var x = q.x, y = q.y, z = q.z, w = q.w;
	    		var x2 = x + x, y2 = y + y, z2 = z + z;
	    		var xx = x * x2, xy = x * y2, xz = x * z2;
	    		var yy = y * y2, yz = y * z2, zz = z * z2;
	    		var wx = w * x2, wy = w * y2, wz = w * z2;
	
	    		te[ 0 ] = 1 - ( yy + zz );
	    		te[ 4 ] = xy - wz;
	    		te[ 8 ] = xz + wy;
	
	    		te[ 1 ] = xy + wz;
	    		te[ 5 ] = 1 - ( xx + zz );
	    		te[ 9 ] = yz - wx;
	
	    		te[ 2 ] = xz - wy;
	    		te[ 6 ] = yz + wx;
	    		te[ 10 ] = 1 - ( xx + yy );
	
	    		// last column
	    		te[ 3 ] = 0;
	    		te[ 7 ] = 0;
	    		te[ 11 ] = 0;
	
	    		// bottom row
	    		te[ 12 ] = 0;
	    		te[ 13 ] = 0;
	    		te[ 14 ] = 0;
	    		te[ 15 ] = 1;
	
	    		return this;
	
	    	},
	
	    	lookAt: function () {
	
	    		var x, y, z;
	
	    		return function lookAt( eye, target, up ) {
	
	    			if ( x === undefined ) {
	
	    				x = new Vector3();
	    				y = new Vector3();
	    				z = new Vector3();
	
	    			}
	
	    			var te = this.elements;
	
	    			z.subVectors( eye, target ).normalize();
	
	    			if ( z.lengthSq() === 0 ) {
	
	    				z.z = 1;
	
	    			}
	
	    			x.crossVectors( up, z ).normalize();
	
	    			if ( x.lengthSq() === 0 ) {
	
	    				z.z += 0.0001;
	    				x.crossVectors( up, z ).normalize();
	
	    			}
	
	    			y.crossVectors( z, x );
	
	
	    			te[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;
	    			te[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;
	    			te[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	multiply: function ( m, n ) {
	
	    		if ( n !== undefined ) {
	
	    			console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
	    			return this.multiplyMatrices( m, n );
	
	    		}
	
	    		return this.multiplyMatrices( this, m );
	
	    	},
	
	    	premultiply: function ( m ) {
	
	    		return this.multiplyMatrices( m, this );
	
	    	},
	
	    	multiplyMatrices: function ( a, b ) {
	
	    		var ae = a.elements;
	    		var be = b.elements;
	    		var te = this.elements;
	
	    		var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];
	    		var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];
	    		var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];
	    		var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];
	
	    		var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];
	    		var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];
	    		var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];
	    		var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];
	
	    		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
	    		te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
	    		te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
	    		te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
	
	    		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
	    		te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
	    		te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
	    		te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
	
	    		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
	    		te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
	    		te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
	    		te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
	
	    		te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
	    		te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
	    		te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
	    		te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
	
	    		return this;
	
	    	},
	
	    	multiplyToArray: function ( a, b, r ) {
	
	    		var te = this.elements;
	
	    		this.multiplyMatrices( a, b );
	
	    		r[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];
	    		r[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];
	    		r[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];
	    		r[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];
	
	    		return this;
	
	    	},
	
	    	multiplyScalar: function ( s ) {
	
	    		var te = this.elements;
	
	    		te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;
	    		te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;
	    		te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;
	    		te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;
	
	    		return this;
	
	    	},
	
	    	applyToVector3Array: function () {
	
	    		var v1;
	
	    		return function applyToVector3Array( array, offset, length ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	    			if ( offset === undefined ) offset = 0;
	    			if ( length === undefined ) length = array.length;
	
	    			for ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {
	
	    				v1.fromArray( array, j );
	    				v1.applyMatrix4( this );
	    				v1.toArray( array, j );
	
	    			}
	
	    			return array;
	
	    		};
	
	    	}(),
	
	    	applyToBuffer: function () {
	
	    		var v1;
	
	    		return function applyToBuffer( buffer, offset, length ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	    			if ( offset === undefined ) offset = 0;
	    			if ( length === undefined ) length = buffer.length / buffer.itemSize;
	
	    			for ( var i = 0, j = offset; i < length; i ++, j ++ ) {
	
	    				v1.x = buffer.getX( j );
	    				v1.y = buffer.getY( j );
	    				v1.z = buffer.getZ( j );
	
	    				v1.applyMatrix4( this );
	
	    				buffer.setXYZ( v1.x, v1.y, v1.z );
	
	    			}
	
	    			return buffer;
	
	    		};
	
	    	}(),
	
	    	determinant: function () {
	
	    		var te = this.elements;
	
	    		var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];
	    		var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];
	    		var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];
	    		var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];
	
	    		//TODO: make this more efficient
	    		//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
	
	    		return (
	    			n41 * (
	    				+ n14 * n23 * n32
	    				 - n13 * n24 * n32
	    				 - n14 * n22 * n33
	    				 + n12 * n24 * n33
	    				 + n13 * n22 * n34
	    				 - n12 * n23 * n34
	    			) +
	    			n42 * (
	    				+ n11 * n23 * n34
	    				 - n11 * n24 * n33
	    				 + n14 * n21 * n33
	    				 - n13 * n21 * n34
	    				 + n13 * n24 * n31
	    				 - n14 * n23 * n31
	    			) +
	    			n43 * (
	    				+ n11 * n24 * n32
	    				 - n11 * n22 * n34
	    				 - n14 * n21 * n32
	    				 + n12 * n21 * n34
	    				 + n14 * n22 * n31
	    				 - n12 * n24 * n31
	    			) +
	    			n44 * (
	    				- n13 * n22 * n31
	    				 - n11 * n23 * n32
	    				 + n11 * n22 * n33
	    				 + n13 * n21 * n32
	    				 - n12 * n21 * n33
	    				 + n12 * n23 * n31
	    			)
	
	    		);
	
	    	},
	
	    	transpose: function () {
	
	    		var te = this.elements;
	    		var tmp;
	
	    		tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;
	    		tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;
	    		tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;
	
	    		tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;
	    		tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;
	    		tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;
	
	    		return this;
	
	    	},
	
	    	flattenToArrayOffset: function ( array, offset ) {
	
	    		console.warn( "THREE.Matrix3: .flattenToArrayOffset is deprecated " +
	    				"- just use .toArray instead." );
	
	    		return this.toArray( array, offset );
	
	    	},
	
	    	getPosition: function () {
	
	    		var v1;
	
	    		return function getPosition() {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	    			console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );
	
	    			return v1.setFromMatrixColumn( this, 3 );
	
	    		};
	
	    	}(),
	
	    	setPosition: function ( v ) {
	
	    		var te = this.elements;
	
	    		te[ 12 ] = v.x;
	    		te[ 13 ] = v.y;
	    		te[ 14 ] = v.z;
	
	    		return this;
	
	    	},
	
	    	getInverse: function ( m, throwOnDegenerate ) {
	
	    		// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
	    		var te = this.elements,
	    			me = m.elements,
	
	    			n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],
	    			n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],
	    			n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],
	    			n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],
	
	    			t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,
	    			t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,
	    			t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,
	    			t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
	
	    		var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;
	
	    		if ( det === 0 ) {
	
	    			var msg = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
	
	    			if ( throwOnDegenerate === true ) {
	
	    				throw new Error( msg );
	
	    			} else {
	
	    				console.warn( msg );
	
	    			}
	
	    			return this.identity();
	
	    		}
	
	    		var detInv = 1 / det;
	
	    		te[ 0 ] = t11 * detInv;
	    		te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;
	    		te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;
	    		te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;
	
	    		te[ 4 ] = t12 * detInv;
	    		te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;
	    		te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;
	    		te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;
	
	    		te[ 8 ] = t13 * detInv;
	    		te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;
	    		te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;
	    		te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;
	
	    		te[ 12 ] = t14 * detInv;
	    		te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;
	    		te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;
	    		te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;
	
	    		return this;
	
	    	},
	
	    	scale: function ( v ) {
	
	    		var te = this.elements;
	    		var x = v.x, y = v.y, z = v.z;
	
	    		te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;
	    		te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;
	    		te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;
	    		te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;
	
	    		return this;
	
	    	},
	
	    	getMaxScaleOnAxis: function () {
	
	    		var te = this.elements;
	
	    		var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];
	    		var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];
	    		var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];
	
	    		return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );
	
	    	},
	
	    	makeTranslation: function ( x, y, z ) {
	
	    		this.set(
	
	    			1, 0, 0, x,
	    			0, 1, 0, y,
	    			0, 0, 1, z,
	    			0, 0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	makeRotationX: function ( theta ) {
	
	    		var c = Math.cos( theta ), s = Math.sin( theta );
	
	    		this.set(
	
	    			1, 0,  0, 0,
	    			0, c, - s, 0,
	    			0, s,  c, 0,
	    			0, 0,  0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	makeRotationY: function ( theta ) {
	
	    		var c = Math.cos( theta ), s = Math.sin( theta );
	
	    		this.set(
	
	    			 c, 0, s, 0,
	    			 0, 1, 0, 0,
	    			- s, 0, c, 0,
	    			 0, 0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	makeRotationZ: function ( theta ) {
	
	    		var c = Math.cos( theta ), s = Math.sin( theta );
	
	    		this.set(
	
	    			c, - s, 0, 0,
	    			s,  c, 0, 0,
	    			0,  0, 1, 0,
	    			0,  0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	makeRotationAxis: function ( axis, angle ) {
	
	    		// Based on http://www.gamedev.net/reference/articles/article1199.asp
	
	    		var c = Math.cos( angle );
	    		var s = Math.sin( angle );
	    		var t = 1 - c;
	    		var x = axis.x, y = axis.y, z = axis.z;
	    		var tx = t * x, ty = t * y;
	
	    		this.set(
	
	    			tx * x + c, tx * y - s * z, tx * z + s * y, 0,
	    			tx * y + s * z, ty * y + c, ty * z - s * x, 0,
	    			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
	    			0, 0, 0, 1
	
	    		);
	
	    		 return this;
	
	    	},
	
	    	makeScale: function ( x, y, z ) {
	
	    		this.set(
	
	    			x, 0, 0, 0,
	    			0, y, 0, 0,
	    			0, 0, z, 0,
	    			0, 0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	compose: function ( position, quaternion, scale ) {
	
	    		this.makeRotationFromQuaternion( quaternion );
	    		this.scale( scale );
	    		this.setPosition( position );
	
	    		return this;
	
	    	},
	
	    	decompose: function () {
	
	    		var vector, matrix;
	
	    		return function decompose( position, quaternion, scale ) {
	
	    			if ( vector === undefined ) {
	
	    				vector = new Vector3();
	    				matrix = new Matrix4();
	
	    			}
	
	    			var te = this.elements;
	
	    			var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();
	    			var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();
	    			var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();
	
	    			// if determine is negative, we need to invert one scale
	    			var det = this.determinant();
	    			if ( det < 0 ) {
	
	    				sx = - sx;
	
	    			}
	
	    			position.x = te[ 12 ];
	    			position.y = te[ 13 ];
	    			position.z = te[ 14 ];
	
	    			// scale the rotation part
	
	    			matrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()
	
	    			var invSX = 1 / sx;
	    			var invSY = 1 / sy;
	    			var invSZ = 1 / sz;
	
	    			matrix.elements[ 0 ] *= invSX;
	    			matrix.elements[ 1 ] *= invSX;
	    			matrix.elements[ 2 ] *= invSX;
	
	    			matrix.elements[ 4 ] *= invSY;
	    			matrix.elements[ 5 ] *= invSY;
	    			matrix.elements[ 6 ] *= invSY;
	
	    			matrix.elements[ 8 ] *= invSZ;
	    			matrix.elements[ 9 ] *= invSZ;
	    			matrix.elements[ 10 ] *= invSZ;
	
	    			quaternion.setFromRotationMatrix( matrix );
	
	    			scale.x = sx;
	    			scale.y = sy;
	    			scale.z = sz;
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	makeFrustum: function ( left, right, bottom, top, near, far ) {
	
	    		var te = this.elements;
	    		var x = 2 * near / ( right - left );
	    		var y = 2 * near / ( top - bottom );
	
	    		var a = ( right + left ) / ( right - left );
	    		var b = ( top + bottom ) / ( top - bottom );
	    		var c = - ( far + near ) / ( far - near );
	    		var d = - 2 * far * near / ( far - near );
	
	    		te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;
	    		te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;
	    		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;
	    		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;
	
	    		return this;
	
	    	},
	
	    	makePerspective: function ( fov, aspect, near, far ) {
	
	    		var ymax = near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 );
	    		var ymin = - ymax;
	    		var xmin = ymin * aspect;
	    		var xmax = ymax * aspect;
	
	    		return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );
	
	    	},
	
	    	makeOrthographic: function ( left, right, top, bottom, near, far ) {
	
	    		var te = this.elements;
	    		var w = 1.0 / ( right - left );
	    		var h = 1.0 / ( top - bottom );
	    		var p = 1.0 / ( far - near );
	
	    		var x = ( right + left ) * w;
	    		var y = ( top + bottom ) * h;
	    		var z = ( far + near ) * p;
	
	    		te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;
	    		te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;
	    		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;
	    		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;
	
	    		return this;
	
	    	},
	
	    	equals: function ( matrix ) {
	
	    		var te = this.elements;
	    		var me = matrix.elements;
	
	    		for ( var i = 0; i < 16; i ++ ) {
	
	    			if ( te[ i ] !== me[ i ] ) return false;
	
	    		}
	
	    		return true;
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		for( var i = 0; i < 16; i ++ ) {
	
	    			this.elements[ i ] = array[ i + offset ];
	
	    		}
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		var te = this.elements;
	
	    		array[ offset ] = te[ 0 ];
	    		array[ offset + 1 ] = te[ 1 ];
	    		array[ offset + 2 ] = te[ 2 ];
	    		array[ offset + 3 ] = te[ 3 ];
	
	    		array[ offset + 4 ] = te[ 4 ];
	    		array[ offset + 5 ] = te[ 5 ];
	    		array[ offset + 6 ] = te[ 6 ];
	    		array[ offset + 7 ] = te[ 7 ];
	
	    		array[ offset + 8 ]  = te[ 8 ];
	    		array[ offset + 9 ]  = te[ 9 ];
	    		array[ offset + 10 ] = te[ 10 ];
	    		array[ offset + 11 ] = te[ 11 ];
	
	    		array[ offset + 12 ] = te[ 12 ];
	    		array[ offset + 13 ] = te[ 13 ];
	    		array[ offset + 14 ] = te[ 14 ];
	    		array[ offset + 15 ] = te[ 15 ];
	
	    		return array;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {
	
	    	images = images !== undefined ? images : [];
	    	mapping = mapping !== undefined ? mapping : CubeReflectionMapping;
	
	    	Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );
	
	    	this.flipY = false;
	
	    }
	
	    CubeTexture.prototype = Object.create( Texture.prototype );
	    CubeTexture.prototype.constructor = CubeTexture;
	
	    CubeTexture.prototype.isCubeTexture = true;
	
	    Object.defineProperty( CubeTexture.prototype, 'images', {
	
	    	get: function () {
	
	    		return this.image;
	
	    	},
	
	    	set: function ( value ) {
	
	    		this.image = value;
	
	    	}
	
	    } );
	
	    var emptyTexture = new Texture();
	    var emptyCubeTexture = new CubeTexture();
	
	    // --- Base for inner nodes (including the root) ---
	
	    function UniformContainer() {
	
	    	this.seq = [];
	    	this.map = {};
	
	    }
	
	    // --- Utilities ---
	
	    // Array Caches (provide typed arrays for temporary by size)
	
	    var arrayCacheF32 = [];
	    var arrayCacheI32 = [];
	
	    // Flattening for arrays of vectors and matrices
	
	    function flatten( array, nBlocks, blockSize ) {
	
	    	var firstElem = array[ 0 ];
	
	    	if ( firstElem <= 0 || firstElem > 0 ) return array;
	    	// unoptimized: ! isNaN( firstElem )
	    	// see http://jacksondunstan.com/articles/983
	
	    	var n = nBlocks * blockSize,
	    		r = arrayCacheF32[ n ];
	
	    	if ( r === undefined ) {
	
	    		r = new Float32Array( n );
	    		arrayCacheF32[ n ] = r;
	
	    	}
	
	    	if ( nBlocks !== 0 ) {
	
	    		firstElem.toArray( r, 0 );
	
	    		for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {
	
	    			offset += blockSize;
	    			array[ i ].toArray( r, offset );
	
	    		}
	
	    	}
	
	    	return r;
	
	    }
	
	    // Texture unit allocation
	
	    function allocTexUnits( renderer, n ) {
	
	    	var r = arrayCacheI32[ n ];
	
	    	if ( r === undefined ) {
	
	    		r = new Int32Array( n );
	    		arrayCacheI32[ n ] = r;
	
	    	}
	
	    	for ( var i = 0; i !== n; ++ i )
	    		r[ i ] = renderer.allocTextureUnit();
	
	    	return r;
	
	    }
	
	    // --- Setters ---
	
	    // Note: Defining these methods externally, because they come in a bunch
	    // and this way their names minify.
	
	    // Single scalar
	
	    function setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }
	    function setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }
	
	    // Single float vector (from flat array or THREE.VectorN)
	
	    function setValue2fv( gl, v ) {
	
	    	if ( v.x === undefined ) gl.uniform2fv( this.addr, v );
	    	else gl.uniform2f( this.addr, v.x, v.y );
	
	    }
	
	    function setValue3fv( gl, v ) {
	
	    	if ( v.x !== undefined )
	    		gl.uniform3f( this.addr, v.x, v.y, v.z );
	    	else if ( v.r !== undefined )
	    		gl.uniform3f( this.addr, v.r, v.g, v.b );
	    	else
	    		gl.uniform3fv( this.addr, v );
	
	    }
	
	    function setValue4fv( gl, v ) {
	
	    	if ( v.x === undefined ) gl.uniform4fv( this.addr, v );
	    	else gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );
	
	    }
	
	    // Single matrix (from flat array or MatrixN)
	
	    function setValue2fm( gl, v ) {
	
	    	gl.uniformMatrix2fv( this.addr, false, v.elements || v );
	
	    }
	
	    function setValue3fm( gl, v ) {
	
	    	gl.uniformMatrix3fv( this.addr, false, v.elements || v );
	
	    }
	
	    function setValue4fm( gl, v ) {
	
	    	gl.uniformMatrix4fv( this.addr, false, v.elements || v );
	
	    }
	
	    // Single texture (2D / Cube)
	
	    function setValueT1( gl, v, renderer ) {
	
	    	var unit = renderer.allocTextureUnit();
	    	gl.uniform1i( this.addr, unit );
	    	renderer.setTexture2D( v || emptyTexture, unit );
	
	    }
	
	    function setValueT6( gl, v, renderer ) {
	
	    	var unit = renderer.allocTextureUnit();
	    	gl.uniform1i( this.addr, unit );
	    	renderer.setTextureCube( v || emptyCubeTexture, unit );
	
	    }
	
	    // Integer / Boolean vectors or arrays thereof (always flat arrays)
	
	    function setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }
	    function setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }
	    function setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }
	
	    // Helper to pick the right setter for the singular case
	
	    function getSingularSetter( type ) {
	
	    	switch ( type ) {
	
	    		case 0x1406: return setValue1f; // FLOAT
	    		case 0x8b50: return setValue2fv; // _VEC2
	    		case 0x8b51: return setValue3fv; // _VEC3
	    		case 0x8b52: return setValue4fv; // _VEC4
	
	    		case 0x8b5a: return setValue2fm; // _MAT2
	    		case 0x8b5b: return setValue3fm; // _MAT3
	    		case 0x8b5c: return setValue4fm; // _MAT4
	
	    		case 0x8b5e: return setValueT1; // SAMPLER_2D
	    		case 0x8b60: return setValueT6; // SAMPLER_CUBE
	
	    		case 0x1404: case 0x8b56: return setValue1i; // INT, BOOL
	    		case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2
	    		case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3
	    		case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4
	
	    	}
	
	    }
	
	    // Array of scalars
	
	    function setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }
	    function setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }
	
	    // Array of vectors (flat or from THREE classes)
	
	    function setValueV2a( gl, v ) {
	
	    	gl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );
	
	    }
	
	    function setValueV3a( gl, v ) {
	
	    	gl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );
	
	    }
	
	    function setValueV4a( gl, v ) {
	
	    	gl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );
	
	    }
	
	    // Array of matrices (flat or from THREE clases)
	
	    function setValueM2a( gl, v ) {
	
	    	gl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );
	
	    }
	
	    function setValueM3a( gl, v ) {
	
	    	gl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );
	
	    }
	
	    function setValueM4a( gl, v ) {
	
	    	gl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );
	
	    }
	
	    // Array of textures (2D / Cube)
	
	    function setValueT1a( gl, v, renderer ) {
	
	    	var n = v.length,
	    		units = allocTexUnits( renderer, n );
	
	    	gl.uniform1iv( this.addr, units );
	
	    	for ( var i = 0; i !== n; ++ i ) {
	
	    		renderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );
	
	    	}
	
	    }
	
	    function setValueT6a( gl, v, renderer ) {
	
	    	var n = v.length,
	    		units = allocTexUnits( renderer, n );
	
	    	gl.uniform1iv( this.addr, units );
	
	    	for ( var i = 0; i !== n; ++ i ) {
	
	    		renderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );
	
	    	}
	
	    }
	
	    // Helper to pick the right setter for a pure (bottom-level) array
	
	    function getPureArraySetter( type ) {
	
	    	switch ( type ) {
	
	    		case 0x1406: return setValue1fv; // FLOAT
	    		case 0x8b50: return setValueV2a; // _VEC2
	    		case 0x8b51: return setValueV3a; // _VEC3
	    		case 0x8b52: return setValueV4a; // _VEC4
	
	    		case 0x8b5a: return setValueM2a; // _MAT2
	    		case 0x8b5b: return setValueM3a; // _MAT3
	    		case 0x8b5c: return setValueM4a; // _MAT4
	
	    		case 0x8b5e: return setValueT1a; // SAMPLER_2D
	    		case 0x8b60: return setValueT6a; // SAMPLER_CUBE
	
	    		case 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL
	    		case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2
	    		case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3
	    		case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4
	
	    	}
	
	    }
	
	    // --- Uniform Classes ---
	
	    function SingleUniform( id, activeInfo, addr ) {
	
	    	this.id = id;
	    	this.addr = addr;
	    	this.setValue = getSingularSetter( activeInfo.type );
	
	    	// this.path = activeInfo.name; // DEBUG
	
	    }
	
	    function PureArrayUniform( id, activeInfo, addr ) {
	
	    	this.id = id;
	    	this.addr = addr;
	    	this.size = activeInfo.size;
	    	this.setValue = getPureArraySetter( activeInfo.type );
	
	    	// this.path = activeInfo.name; // DEBUG
	
	    }
	
	    function StructuredUniform( id ) {
	
	    	this.id = id;
	
	    	UniformContainer.call( this ); // mix-in
	
	    }
	
	    StructuredUniform.prototype.setValue = function( gl, value ) {
	
	    	// Note: Don't need an extra 'renderer' parameter, since samplers
	    	// are not allowed in structured uniforms.
	
	    	var seq = this.seq;
	
	    	for ( var i = 0, n = seq.length; i !== n; ++ i ) {
	
	    		var u = seq[ i ];
	    		u.setValue( gl, value[ u.id ] );
	
	    	}
	
	    };
	
	    // --- Top-level ---
	
	    // Parser - builds up the property tree from the path strings
	
	    var RePathPart = /([\w\d_]+)(\])?(\[|\.)?/g;
	
	    // extracts
	    // 	- the identifier (member name or array index)
	    //  - followed by an optional right bracket (found when array index)
	    //  - followed by an optional left bracket or dot (type of subscript)
	    //
	    // Note: These portions can be read in a non-overlapping fashion and
	    // allow straightforward parsing of the hierarchy that WebGL encodes
	    // in the uniform names.
	
	    function addUniform( container, uniformObject ) {
	
	    	container.seq.push( uniformObject );
	    	container.map[ uniformObject.id ] = uniformObject;
	
	    }
	
	    function parseUniform( activeInfo, addr, container ) {
	
	    	var path = activeInfo.name,
	    		pathLength = path.length;
	
	    	// reset RegExp object, because of the early exit of a previous run
	    	RePathPart.lastIndex = 0;
	
	    	for (; ;) {
	
	    		var match = RePathPart.exec( path ),
	    			matchEnd = RePathPart.lastIndex,
	
	    			id = match[ 1 ],
	    			idIsIndex = match[ 2 ] === ']',
	    			subscript = match[ 3 ];
	
	    		if ( idIsIndex ) id = id | 0; // convert to integer
	
	    		if ( subscript === undefined ||
	    				subscript === '[' && matchEnd + 2 === pathLength ) {
	    			// bare name or "pure" bottom-level array "[0]" suffix
	
	    			addUniform( container, subscript === undefined ?
	    					new SingleUniform( id, activeInfo, addr ) :
	    					new PureArrayUniform( id, activeInfo, addr ) );
	
	    			break;
	
	    		} else {
	    			// step into inner node / create it in case it doesn't exist
	
	    			var map = container.map,
	    				next = map[ id ];
	
	    			if ( next === undefined ) {
	
	    				next = new StructuredUniform( id );
	    				addUniform( container, next );
	
	    			}
	
	    			container = next;
	
	    		}
	
	    	}
	
	    }
	
	    // Root Container
	
	    function WebGLUniforms( gl, program, renderer ) {
	
	    	UniformContainer.call( this );
	
	    	this.renderer = renderer;
	
	    	var n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );
	
	    	for ( var i = 0; i !== n; ++ i ) {
	
	    		var info = gl.getActiveUniform( program, i ),
	    			path = info.name,
	    			addr = gl.getUniformLocation( program, path );
	
	    		parseUniform( info, addr, this );
	
	    	}
	
	    }
	
	    WebGLUniforms.prototype.setValue = function( gl, name, value ) {
	
	    	var u = this.map[ name ];
	
	    	if ( u !== undefined ) u.setValue( gl, value, this.renderer );
	
	    };
	
	    WebGLUniforms.prototype.set = function( gl, object, name ) {
	
	    	var u = this.map[ name ];
	
	    	if ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );
	
	    };
	
	    WebGLUniforms.prototype.setOptional = function( gl, object, name ) {
	
	    	var v = object[ name ];
	
	    	if ( v !== undefined ) this.setValue( gl, name, v );
	
	    };
	
	
	    // Static interface
	
	    WebGLUniforms.upload = function( gl, seq, values, renderer ) {
	
	    	for ( var i = 0, n = seq.length; i !== n; ++ i ) {
	
	    		var u = seq[ i ],
	    			v = values[ u.id ];
	
	    		if ( v.needsUpdate !== false ) {
	    			// note: always updating when .needsUpdate is undefined
	
	    			u.setValue( gl, v.value, renderer );
	
	    		}
	
	    	}
	
	    };
	
	    WebGLUniforms.seqWithValue = function( seq, values ) {
	
	    	var r = [];
	
	    	for ( var i = 0, n = seq.length; i !== n; ++ i ) {
	
	    		var u = seq[ i ];
	    		if ( u.id in values ) r.push( u );
	
	    	}
	
	    	return r;
	
	    };
	
	    WebGLUniforms.splitDynamic = function( seq, values ) {
	
	    	var r = null,
	    		n = seq.length,
	    		w = 0;
	
	    	for ( var i = 0; i !== n; ++ i ) {
	
	    		var u = seq[ i ],
	    			v = values[ u.id ];
	
	    		if ( v && v.dynamic === true ) {
	
	    			if ( r === null ) r = [];
	    			r.push( u );
	
	    		} else {
	
	    			// in-place compact 'seq', removing the matches
	    			if ( w < i ) seq[ w ] = u;
	    			++ w;
	
	    		}
	
	    	}
	
	    	if ( w < n ) seq.length = w;
	
	    	return r;
	
	    };
	
	    WebGLUniforms.evalDynamic = function( seq, values, object, material, camera ) {
	
	    	for ( var i = 0, n = seq.length; i !== n; ++ i ) {
	
	    		var v = values[ seq[ i ].id ],
	    			f = v.onUpdateCallback;
	
	    		if ( f !== undefined ) f.call( v, object, material, camera );
	
	    	}
	
	    };
	
	    /**
	     * Uniform Utilities
	     */
	
	    exports.UniformsUtils = {
	
	    	merge: function ( uniforms ) {
	
	    		var merged = {};
	
	    		for ( var u = 0; u < uniforms.length; u ++ ) {
	
	    			var tmp = this.clone( uniforms[ u ] );
	
	    			for ( var p in tmp ) {
	
	    				merged[ p ] = tmp[ p ];
	
	    			}
	
	    		}
	
	    		return merged;
	
	    	},
	
	    	clone: function ( uniforms_src ) {
	
	    		var uniforms_dst = {};
	
	    		for ( var u in uniforms_src ) {
	
	    			uniforms_dst[ u ] = {};
	
	    			for ( var p in uniforms_src[ u ] ) {
	
	    				var parameter_src = uniforms_src[ u ][ p ];
	
	    				if ( (parameter_src && parameter_src.isColor) ||
	    					 (parameter_src && parameter_src.isVector2) ||
	    					 (parameter_src && parameter_src.isVector3) ||
	    					 (parameter_src && parameter_src.isVector4) ||
	    					 (parameter_src && parameter_src.isMatrix3) ||
	    					 (parameter_src && parameter_src.isMatrix4) ||
	    					 (parameter_src && parameter_src.isTexture) ) {
	
	    					uniforms_dst[ u ][ p ] = parameter_src.clone();
	
	    				} else if ( Array.isArray( parameter_src ) ) {
	
	    					uniforms_dst[ u ][ p ] = parameter_src.slice();
	
	    				} else {
	
	    					uniforms_dst[ u ][ p ] = parameter_src;
	
	    				}
	
	    			}
	
	    		}
	
	    		return uniforms_dst;
	
	    	}
	
	    };
	
	    var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n";
	
	    var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n";
	
	    var alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n";
	
	    var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n";
	
	    var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";
	
	    var begin_vertex = "\nvec3 transformed = vec3( position );\n";
	
	    var beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n";
	
	    var bsdfs = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n";
	
	    var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n";
	
	    var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n#endif\n";
	
	    var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n";
	
	    var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n";
	
	    var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n";
	
	    var color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";
	
	    var color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n";
	
	    var color_pars_vertex = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";
	
	    var color_vertex = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";
	
	    var common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n";
	
	    var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n";
	
	    var defaultnormal_vertex = "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n";
	
	    var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n";
	
	    var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n";
	
	    var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n";
	
	    var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n";
	
	    var encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n";
	
	    var encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n";
	
	    var envmap_fragment = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n";
	
	    var envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n";
	
	    var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n";
	
	    var envmap_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n";
	
	    var fog_fragment = "#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n";
	
	    var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";
	
	    var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n";
	
	    var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";
	
	    var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n";
	
	    var lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#include <normal_flip>\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#include <normal_flip>\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n";
	
	    var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";
	
	    var lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n";
	
	    var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n";
	
	    var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n";
	
	    var lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\t\t\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n";
	
	    var logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif";
	
	    var logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n";
	
	    var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif";
	
	    var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n";
	
	    var map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n";
	
	    var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n";
	
	    var map_particle_fragment = "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n";
	
	    var map_particle_pars_fragment = "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n";
	
	    var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n";
	
	    var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";
	
	    var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n";
	
	    var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";
	
	    var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n";
	
	    var normal_flip = "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n";
	
	    var normal_fragment = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n";
	
	    var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n";
	
	    var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n";
	
	    var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n";
	
	    var project_vertex = "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n";
	
	    var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n";
	
	    var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";
	
	    var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n";
	
	    var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n";
	
	    var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n";
	
	    var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n";
	
	    var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";
	
	    var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n";
	
	    var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n";
	
	    var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n";
	
	    var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";
	
	    var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";
	
	    var tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n";
	
	    var tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n";
	
	    var uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif";
	
	    var uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n";
	
	    var uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif";
	
	    var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";
	
	    var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif";
	
	    var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif";
	
	    var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n";
	
	    var cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n";
	
	    var cube_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";
	
	    var depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n";
	
	    var depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";
	
	    var distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n";
	
	    var distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n";
	
	    var equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n";
	
	    var equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n";
	
	    var linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";
	
	    var meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n}\n";
	
	    var meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n";
	
	    var meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n";
	
	    var meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";
	
	    var normal_frag = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\t#include <logdepthbuf_fragment>\n}\n";
	
	    var normal_vert = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n";
	
	    var points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n";
	
	    var points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";
	
	    var shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n";
	
	    var shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n";
	
	    var ShaderChunk = {
	    	alphamap_fragment: alphamap_fragment,
	    	alphamap_pars_fragment: alphamap_pars_fragment,
	    	alphatest_fragment: alphatest_fragment,
	    	aomap_fragment: aomap_fragment,
	    	aomap_pars_fragment: aomap_pars_fragment,
	    	begin_vertex: begin_vertex,
	    	beginnormal_vertex: beginnormal_vertex,
	    	bsdfs: bsdfs,
	    	bumpmap_pars_fragment: bumpmap_pars_fragment,
	    	clipping_planes_fragment: clipping_planes_fragment,
	    	clipping_planes_pars_fragment: clipping_planes_pars_fragment,
	    	clipping_planes_pars_vertex: clipping_planes_pars_vertex,
	    	clipping_planes_vertex: clipping_planes_vertex,
	    	color_fragment: color_fragment,
	    	color_pars_fragment: color_pars_fragment,
	    	color_pars_vertex: color_pars_vertex,
	    	color_vertex: color_vertex,
	    	common: common,
	    	cube_uv_reflection_fragment: cube_uv_reflection_fragment,
	    	defaultnormal_vertex: defaultnormal_vertex,
	    	displacementmap_pars_vertex: displacementmap_pars_vertex,
	    	displacementmap_vertex: displacementmap_vertex,
	    	emissivemap_fragment: emissivemap_fragment,
	    	emissivemap_pars_fragment: emissivemap_pars_fragment,
	    	encodings_fragment: encodings_fragment,
	    	encodings_pars_fragment: encodings_pars_fragment,
	    	envmap_fragment: envmap_fragment,
	    	envmap_pars_fragment: envmap_pars_fragment,
	    	envmap_pars_vertex: envmap_pars_vertex,
	    	envmap_vertex: envmap_vertex,
	    	fog_fragment: fog_fragment,
	    	fog_pars_fragment: fog_pars_fragment,
	    	lightmap_fragment: lightmap_fragment,
	    	lightmap_pars_fragment: lightmap_pars_fragment,
	    	lights_lambert_vertex: lights_lambert_vertex,
	    	lights_pars: lights_pars,
	    	lights_phong_fragment: lights_phong_fragment,
	    	lights_phong_pars_fragment: lights_phong_pars_fragment,
	    	lights_physical_fragment: lights_physical_fragment,
	    	lights_physical_pars_fragment: lights_physical_pars_fragment,
	    	lights_template: lights_template,
	    	logdepthbuf_fragment: logdepthbuf_fragment,
	    	logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,
	    	logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,
	    	logdepthbuf_vertex: logdepthbuf_vertex,
	    	map_fragment: map_fragment,
	    	map_pars_fragment: map_pars_fragment,
	    	map_particle_fragment: map_particle_fragment,
	    	map_particle_pars_fragment: map_particle_pars_fragment,
	    	metalnessmap_fragment: metalnessmap_fragment,
	    	metalnessmap_pars_fragment: metalnessmap_pars_fragment,
	    	morphnormal_vertex: morphnormal_vertex,
	    	morphtarget_pars_vertex: morphtarget_pars_vertex,
	    	morphtarget_vertex: morphtarget_vertex,
	    	normal_flip: normal_flip,
	    	normal_fragment: normal_fragment,
	    	normalmap_pars_fragment: normalmap_pars_fragment,
	    	packing: packing,
	    	premultiplied_alpha_fragment: premultiplied_alpha_fragment,
	    	project_vertex: project_vertex,
	    	roughnessmap_fragment: roughnessmap_fragment,
	    	roughnessmap_pars_fragment: roughnessmap_pars_fragment,
	    	shadowmap_pars_fragment: shadowmap_pars_fragment,
	    	shadowmap_pars_vertex: shadowmap_pars_vertex,
	    	shadowmap_vertex: shadowmap_vertex,
	    	shadowmask_pars_fragment: shadowmask_pars_fragment,
	    	skinbase_vertex: skinbase_vertex,
	    	skinning_pars_vertex: skinning_pars_vertex,
	    	skinning_vertex: skinning_vertex,
	    	skinnormal_vertex: skinnormal_vertex,
	    	specularmap_fragment: specularmap_fragment,
	    	specularmap_pars_fragment: specularmap_pars_fragment,
	    	tonemapping_fragment: tonemapping_fragment,
	    	tonemapping_pars_fragment: tonemapping_pars_fragment,
	    	uv_pars_fragment: uv_pars_fragment,
	    	uv_pars_vertex: uv_pars_vertex,
	    	uv_vertex: uv_vertex,
	    	uv2_pars_fragment: uv2_pars_fragment,
	    	uv2_pars_vertex: uv2_pars_vertex,
	    	uv2_vertex: uv2_vertex,
	    	worldpos_vertex: worldpos_vertex,
	
	    	cube_frag: cube_frag,
	    	cube_vert: cube_vert,
	    	depth_frag: depth_frag,
	    	depth_vert: depth_vert,
	    	distanceRGBA_frag: distanceRGBA_frag,
	    	distanceRGBA_vert: distanceRGBA_vert,
	    	equirect_frag: equirect_frag,
	    	equirect_vert: equirect_vert,
	    	linedashed_frag: linedashed_frag,
	    	linedashed_vert: linedashed_vert,
	    	meshbasic_frag: meshbasic_frag,
	    	meshbasic_vert: meshbasic_vert,
	    	meshlambert_frag: meshlambert_frag,
	    	meshlambert_vert: meshlambert_vert,
	    	meshphong_frag: meshphong_frag,
	    	meshphong_vert: meshphong_vert,
	    	meshphysical_frag: meshphysical_frag,
	    	meshphysical_vert: meshphysical_vert,
	    	normal_frag: normal_frag,
	    	normal_vert: normal_vert,
	    	points_frag: points_frag,
	    	points_vert: points_vert,
	    	shadow_frag: shadow_frag,
	    	shadow_vert: shadow_vert
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Color( r, g, b ) {
	
	    	if ( g === undefined && b === undefined ) {
	
	    		// r is THREE.Color, hex or string
	    		return this.set( r );
	
	    	}
	
	    	return this.setRGB( r, g, b );
	
	    }
	
	    Color.prototype = {
	
	    	constructor: Color,
	
	    	isColor: true,
	
	    	r: 1, g: 1, b: 1,
	
	    	set: function ( value ) {
	
	    		if ( (value && value.isColor) ) {
	
	    			this.copy( value );
	
	    		} else if ( typeof value === 'number' ) {
	
	    			this.setHex( value );
	
	    		} else if ( typeof value === 'string' ) {
	
	    			this.setStyle( value );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	setScalar: function ( scalar ) {
	
	    		this.r = scalar;
	    		this.g = scalar;
	    		this.b = scalar;
	
	    	},
	
	    	setHex: function ( hex ) {
	
	    		hex = Math.floor( hex );
	
	    		this.r = ( hex >> 16 & 255 ) / 255;
	    		this.g = ( hex >> 8 & 255 ) / 255;
	    		this.b = ( hex & 255 ) / 255;
	
	    		return this;
	
	    	},
	
	    	setRGB: function ( r, g, b ) {
	
	    		this.r = r;
	    		this.g = g;
	    		this.b = b;
	
	    		return this;
	
	    	},
	
	    	setHSL: function () {
	
	    		function hue2rgb( p, q, t ) {
	
	    			if ( t < 0 ) t += 1;
	    			if ( t > 1 ) t -= 1;
	    			if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;
	    			if ( t < 1 / 2 ) return q;
	    			if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );
	    			return p;
	
	    		}
	
	    		return function setHSL( h, s, l ) {
	
	    			// h,s,l ranges are in 0.0 - 1.0
	    			h = exports.Math.euclideanModulo( h, 1 );
	    			s = exports.Math.clamp( s, 0, 1 );
	    			l = exports.Math.clamp( l, 0, 1 );
	
	    			if ( s === 0 ) {
	
	    				this.r = this.g = this.b = l;
	
	    			} else {
	
	    				var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
	    				var q = ( 2 * l ) - p;
	
	    				this.r = hue2rgb( q, p, h + 1 / 3 );
	    				this.g = hue2rgb( q, p, h );
	    				this.b = hue2rgb( q, p, h - 1 / 3 );
	
	    			}
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	setStyle: function ( style ) {
	
	    		function handleAlpha( string ) {
	
	    			if ( string === undefined ) return;
	
	    			if ( parseFloat( string ) < 1 ) {
	
	    				console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );
	
	    			}
	
	    		}
	
	
	    		var m;
	
	    		if ( m = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec( style ) ) {
	
	    			// rgb / hsl
	
	    			var color;
	    			var name = m[ 1 ];
	    			var components = m[ 2 ];
	
	    			switch ( name ) {
	
	    				case 'rgb':
	    				case 'rgba':
	
	    					if ( color = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {
	
	    						// rgb(255,0,0) rgba(255,0,0,0.5)
	    						this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
	    						this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
	    						this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;
	
	    						handleAlpha( color[ 5 ] );
	
	    						return this;
	
	    					}
	
	    					if ( color = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {
	
	    						// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
	    						this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
	    						this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
	    						this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;
	
	    						handleAlpha( color[ 5 ] );
	
	    						return this;
	
	    					}
	
	    					break;
	
	    				case 'hsl':
	    				case 'hsla':
	
	    					if ( color = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {
	
	    						// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
	    						var h = parseFloat( color[ 1 ] ) / 360;
	    						var s = parseInt( color[ 2 ], 10 ) / 100;
	    						var l = parseInt( color[ 3 ], 10 ) / 100;
	
	    						handleAlpha( color[ 5 ] );
	
	    						return this.setHSL( h, s, l );
	
	    					}
	
	    					break;
	
	    			}
	
	    		} else if ( m = /^\#([A-Fa-f0-9]+)$/.exec( style ) ) {
	
	    			// hex color
	
	    			var hex = m[ 1 ];
	    			var size = hex.length;
	
	    			if ( size === 3 ) {
	
	    				// #ff0
	    				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;
	    				this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;
	    				this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;
	
	    				return this;
	
	    			} else if ( size === 6 ) {
	
	    				// #ff0000
	    				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;
	    				this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;
	    				this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;
	
	    				return this;
	
	    			}
	
	    		}
	
	    		if ( style && style.length > 0 ) {
	
	    			// color keywords
	    			var hex = exports.ColorKeywords[ style ];
	
	    			if ( hex !== undefined ) {
	
	    				// red
	    				this.setHex( hex );
	
	    			} else {
	
	    				// unknown color
	    				console.warn( 'THREE.Color: Unknown color ' + style );
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this.r, this.g, this.b );
	
	    	},
	
	    	copy: function ( color ) {
	
	    		this.r = color.r;
	    		this.g = color.g;
	    		this.b = color.b;
	
	    		return this;
	
	    	},
	
	    	copyGammaToLinear: function ( color, gammaFactor ) {
	
	    		if ( gammaFactor === undefined ) gammaFactor = 2.0;
	
	    		this.r = Math.pow( color.r, gammaFactor );
	    		this.g = Math.pow( color.g, gammaFactor );
	    		this.b = Math.pow( color.b, gammaFactor );
	
	    		return this;
	
	    	},
	
	    	copyLinearToGamma: function ( color, gammaFactor ) {
	
	    		if ( gammaFactor === undefined ) gammaFactor = 2.0;
	
	    		var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;
	
	    		this.r = Math.pow( color.r, safeInverse );
	    		this.g = Math.pow( color.g, safeInverse );
	    		this.b = Math.pow( color.b, safeInverse );
	
	    		return this;
	
	    	},
	
	    	convertGammaToLinear: function () {
	
	    		var r = this.r, g = this.g, b = this.b;
	
	    		this.r = r * r;
	    		this.g = g * g;
	    		this.b = b * b;
	
	    		return this;
	
	    	},
	
	    	convertLinearToGamma: function () {
	
	    		this.r = Math.sqrt( this.r );
	    		this.g = Math.sqrt( this.g );
	    		this.b = Math.sqrt( this.b );
	
	    		return this;
	
	    	},
	
	    	getHex: function () {
	
	    		return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;
	
	    	},
	
	    	getHexString: function () {
	
	    		return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );
	
	    	},
	
	    	getHSL: function ( optionalTarget ) {
	
	    		// h,s,l ranges are in 0.0 - 1.0
	
	    		var hsl = optionalTarget || { h: 0, s: 0, l: 0 };
	
	    		var r = this.r, g = this.g, b = this.b;
	
	    		var max = Math.max( r, g, b );
	    		var min = Math.min( r, g, b );
	
	    		var hue, saturation;
	    		var lightness = ( min + max ) / 2.0;
	
	    		if ( min === max ) {
	
	    			hue = 0;
	    			saturation = 0;
	
	    		} else {
	
	    			var delta = max - min;
	
	    			saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );
	
	    			switch ( max ) {
	
	    				case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
	    				case g: hue = ( b - r ) / delta + 2; break;
	    				case b: hue = ( r - g ) / delta + 4; break;
	
	    			}
	
	    			hue /= 6;
	
	    		}
	
	    		hsl.h = hue;
	    		hsl.s = saturation;
	    		hsl.l = lightness;
	
	    		return hsl;
	
	    	},
	
	    	getStyle: function () {
	
	    		return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';
	
	    	},
	
	    	offsetHSL: function ( h, s, l ) {
	
	    		var hsl = this.getHSL();
	
	    		hsl.h += h; hsl.s += s; hsl.l += l;
	
	    		this.setHSL( hsl.h, hsl.s, hsl.l );
	
	    		return this;
	
	    	},
	
	    	add: function ( color ) {
	
	    		this.r += color.r;
	    		this.g += color.g;
	    		this.b += color.b;
	
	    		return this;
	
	    	},
	
	    	addColors: function ( color1, color2 ) {
	
	    		this.r = color1.r + color2.r;
	    		this.g = color1.g + color2.g;
	    		this.b = color1.b + color2.b;
	
	    		return this;
	
	    	},
	
	    	addScalar: function ( s ) {
	
	    		this.r += s;
	    		this.g += s;
	    		this.b += s;
	
	    		return this;
	
	    	},
	
	    	sub: function( color ) {
	
	    		this.r = Math.max( 0, this.r - color.r );
	    		this.g = Math.max( 0, this.g - color.g );
	    		this.b = Math.max( 0, this.b - color.b );
	
	    		return this;
	
	    	},
	
	    	multiply: function ( color ) {
	
	    		this.r *= color.r;
	    		this.g *= color.g;
	    		this.b *= color.b;
	
	    		return this;
	
	    	},
	
	    	multiplyScalar: function ( s ) {
	
	    		this.r *= s;
	    		this.g *= s;
	    		this.b *= s;
	
	    		return this;
	
	    	},
	
	    	lerp: function ( color, alpha ) {
	
	    		this.r += ( color.r - this.r ) * alpha;
	    		this.g += ( color.g - this.g ) * alpha;
	    		this.b += ( color.b - this.b ) * alpha;
	
	    		return this;
	
	    	},
	
	    	equals: function ( c ) {
	
	    		return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.r = array[ offset ];
	    		this.g = array[ offset + 1 ];
	    		this.b = array[ offset + 2 ];
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this.r;
	    		array[ offset + 1 ] = this.g;
	    		array[ offset + 2 ] = this.b;
	
	    		return array;
	
	    	},
	
	    	toJSON: function () {
	
	    		return this.getHex();
	
	    	}
	
	    };
	
	    exports.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,
	    'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,
	    'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,
	    'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,
	    'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,
	    'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,
	    'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,
	    'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,
	    'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,
	    'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,
	    'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,
	    'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,
	    'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,
	    'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,
	    'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,
	    'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,
	    'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,
	    'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,
	    'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,
	    'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,
	    'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,
	    'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,
	    'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,
	    'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };
	
	    /**
	     * Uniforms library for shared webgl shaders
	     */
	
	    var UniformsLib = {
	
	    	common: {
	
	    		diffuse: { value: new Color( 0xeeeeee ) },
	    		opacity: { value: 1.0 },
	
	    		map: { value: null },
	    		offsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },
	
	    		specularMap: { value: null },
	    		alphaMap: { value: null },
	
	    		envMap: { value: null },
	    		flipEnvMap: { value: - 1 },
	    		reflectivity: { value: 1.0 },
	    		refractionRatio: { value: 0.98 }
	
	    	},
	
	    	aomap: {
	
	    		aoMap: { value: null },
	    		aoMapIntensity: { value: 1 }
	
	    	},
	
	    	lightmap: {
	
	    		lightMap: { value: null },
	    		lightMapIntensity: { value: 1 }
	
	    	},
	
	    	emissivemap: {
	
	    		emissiveMap: { value: null }
	
	    	},
	
	    	bumpmap: {
	
	    		bumpMap: { value: null },
	    		bumpScale: { value: 1 }
	
	    	},
	
	    	normalmap: {
	
	    		normalMap: { value: null },
	    		normalScale: { value: new Vector2( 1, 1 ) }
	
	    	},
	
	    	displacementmap: {
	
	    		displacementMap: { value: null },
	    		displacementScale: { value: 1 },
	    		displacementBias: { value: 0 }
	
	    	},
	
	    	roughnessmap: {
	
	    		roughnessMap: { value: null }
	
	    	},
	
	    	metalnessmap: {
	
	    		metalnessMap: { value: null }
	
	    	},
	
	    	fog: {
	
	    		fogDensity: { value: 0.00025 },
	    		fogNear: { value: 1 },
	    		fogFar: { value: 2000 },
	    		fogColor: { value: new Color( 0xffffff ) }
	
	    	},
	
	    	lights: {
	
	    		ambientLightColor: { value: [] },
	
	    		directionalLights: { value: [], properties: {
	    			direction: {},
	    			color: {},
	
	    			shadow: {},
	    			shadowBias: {},
	    			shadowRadius: {},
	    			shadowMapSize: {}
	    		} },
	
	    		directionalShadowMap: { value: [] },
	    		directionalShadowMatrix: { value: [] },
	
	    		spotLights: { value: [], properties: {
	    			color: {},
	    			position: {},
	    			direction: {},
	    			distance: {},
	    			coneCos: {},
	    			penumbraCos: {},
	    			decay: {},
	
	    			shadow: {},
	    			shadowBias: {},
	    			shadowRadius: {},
	    			shadowMapSize: {}
	    		} },
	
	    		spotShadowMap: { value: [] },
	    		spotShadowMatrix: { value: [] },
	
	    		pointLights: { value: [], properties: {
	    			color: {},
	    			position: {},
	    			decay: {},
	    			distance: {},
	
	    			shadow: {},
	    			shadowBias: {},
	    			shadowRadius: {},
	    			shadowMapSize: {}
	    		} },
	
	    		pointShadowMap: { value: [] },
	    		pointShadowMatrix: { value: [] },
	
	    		hemisphereLights: { value: [], properties: {
	    			direction: {},
	    			skyColor: {},
	    			groundColor: {}
	    		} }
	
	    	},
	
	    	points: {
	
	    		diffuse: { value: new Color( 0xeeeeee ) },
	    		opacity: { value: 1.0 },
	    		size: { value: 1.0 },
	    		scale: { value: 1.0 },
	    		map: { value: null },
	    		offsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }
	
	    	}
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     * @author mikael emtinger / http://gomo.se/
	     */
	
	    var ShaderLib = {
	
	    	basic: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.aomap,
	    			UniformsLib.fog
	
	    		] ),
	
	    		vertexShader: ShaderChunk.meshbasic_vert,
	    		fragmentShader: ShaderChunk.meshbasic_frag
	
	    	},
	
	    	lambert: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.aomap,
	    			UniformsLib.lightmap,
	    			UniformsLib.emissivemap,
	    			UniformsLib.fog,
	    			UniformsLib.lights,
	
	    			{
	    				emissive : { value: new Color( 0x000000 ) }
	    			}
	
	    		] ),
	
	    		vertexShader: ShaderChunk.meshlambert_vert,
	    		fragmentShader: ShaderChunk.meshlambert_frag
	
	    	},
	
	    	phong: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.aomap,
	    			UniformsLib.lightmap,
	    			UniformsLib.emissivemap,
	    			UniformsLib.bumpmap,
	    			UniformsLib.normalmap,
	    			UniformsLib.displacementmap,
	    			UniformsLib.fog,
	    			UniformsLib.lights,
	
	    			{
	    				emissive : { value: new Color( 0x000000 ) },
	    				specular : { value: new Color( 0x111111 ) },
	    				shininess: { value: 30 }
	    			}
	
	    		] ),
	
	    		vertexShader: ShaderChunk.meshphong_vert,
	    		fragmentShader: ShaderChunk.meshphong_frag
	
	    	},
	
	    	standard: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.aomap,
	    			UniformsLib.lightmap,
	    			UniformsLib.emissivemap,
	    			UniformsLib.bumpmap,
	    			UniformsLib.normalmap,
	    			UniformsLib.displacementmap,
	    			UniformsLib.roughnessmap,
	    			UniformsLib.metalnessmap,
	    			UniformsLib.fog,
	    			UniformsLib.lights,
	
	    			{
	    				emissive : { value: new Color( 0x000000 ) },
	    				roughness: { value: 0.5 },
	    				metalness: { value: 0 },
	    				envMapIntensity : { value: 1 }, // temporary
	    			}
	
	    		] ),
	
	    		vertexShader: ShaderChunk.meshphysical_vert,
	    		fragmentShader: ShaderChunk.meshphysical_frag
	
	    	},
	
	    	points: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.points,
	    			UniformsLib.fog
	
	    		] ),
	
	    		vertexShader: ShaderChunk.points_vert,
	    		fragmentShader: ShaderChunk.points_frag
	
	    	},
	
	    	dashed: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.fog,
	
	    			{
	    				scale    : { value: 1 },
	    				dashSize : { value: 1 },
	    				totalSize: { value: 2 }
	    			}
	
	    		] ),
	
	    		vertexShader: ShaderChunk.linedashed_vert,
	    		fragmentShader: ShaderChunk.linedashed_frag
	
	    	},
	
	    	depth: {
	
	    		uniforms: exports.UniformsUtils.merge( [
	
	    			UniformsLib.common,
	    			UniformsLib.displacementmap
	
	    		] ),
	
	    		vertexShader: ShaderChunk.depth_vert,
	    		fragmentShader: ShaderChunk.depth_frag
	
	    	},
	
	    	normal: {
	
	    		uniforms: {
	
	    			opacity : { value: 1.0 }
	
	    		},
	
	    		vertexShader: ShaderChunk.normal_vert,
	    		fragmentShader: ShaderChunk.normal_frag
	
	    	},
	
	    	/* -------------------------------------------------------------------------
	    	//	Cube map shader
	    	 ------------------------------------------------------------------------- */
	
	    	cube: {
	
	    		uniforms: {
	    			tCube: { value: null },
	    			tFlip: { value: - 1 },
	    			opacity: { value: 1.0 }
	    		},
	
	    		vertexShader: ShaderChunk.cube_vert,
	    		fragmentShader: ShaderChunk.cube_frag
	
	    	},
	
	    	/* -------------------------------------------------------------------------
	    	//	Cube map shader
	    	 ------------------------------------------------------------------------- */
	
	    	equirect: {
	
	    		uniforms: {
	    			tEquirect: { value: null },
	    			tFlip: { value: - 1 }
	    		},
	
	    		vertexShader: ShaderChunk.equirect_vert,
	    		fragmentShader: ShaderChunk.equirect_frag
	
	    	},
	
	    	distanceRGBA: {
	
	    		uniforms: {
	
	    			lightPos: { value: new Vector3() }
	
	    		},
	
	    		vertexShader: ShaderChunk.distanceRGBA_vert,
	    		fragmentShader: ShaderChunk.distanceRGBA_frag
	
	    	}
	
	    };
	
	    ShaderLib.physical = {
	
	    	uniforms: exports.UniformsUtils.merge( [
	
	    		ShaderLib.standard.uniforms,
	
	    		{
	    			clearCoat: { value: 0 },
	    			clearCoatRoughness: { value: 0 }
	    		}
	
	    	] ),
	
	    	vertexShader: ShaderChunk.meshphysical_vert,
	    	fragmentShader: ShaderChunk.meshphysical_frag
	
	    };
	
	    /**
	     * @author bhouston / http://clara.io
	     */
	
	    function Box2( min, max ) {
	
	    	this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );
	    	this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );
	
	    }
	
	    Box2.prototype = {
	
	    	constructor: Box2,
	
	    	set: function ( min, max ) {
	
	    		this.min.copy( min );
	    		this.max.copy( max );
	
	    		return this;
	
	    	},
	
	    	setFromPoints: function ( points ) {
	
	    		this.makeEmpty();
	
	    		for ( var i = 0, il = points.length; i < il; i ++ ) {
	
	    			this.expandByPoint( points[ i ] );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	setFromCenterAndSize: function () {
	
	    		var v1 = new Vector2();
	
	    		return function setFromCenterAndSize( center, size ) {
	
	    			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );
	    			this.min.copy( center ).sub( halfSize );
	    			this.max.copy( center ).add( halfSize );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( box ) {
	
	    		this.min.copy( box.min );
	    		this.max.copy( box.max );
	
	    		return this;
	
	    	},
	
	    	makeEmpty: function () {
	
	    		this.min.x = this.min.y = + Infinity;
	    		this.max.x = this.max.y = - Infinity;
	
	    		return this;
	
	    	},
	
	    	isEmpty: function () {
	
	    		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
	
	    		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );
	
	    	},
	
	    	getCenter: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector2();
	    		return this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );
	
	    	},
	
	    	getSize: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector2();
	    		return this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );
	
	    	},
	
	    	expandByPoint: function ( point ) {
	
	    		this.min.min( point );
	    		this.max.max( point );
	
	    		return this;
	
	    	},
	
	    	expandByVector: function ( vector ) {
	
	    		this.min.sub( vector );
	    		this.max.add( vector );
	
	    		return this;
	
	    	},
	
	    	expandByScalar: function ( scalar ) {
	
	    		this.min.addScalar( - scalar );
	    		this.max.addScalar( scalar );
	
	    		return this;
	
	    	},
	
	    	containsPoint: function ( point ) {
	
	    		if ( point.x < this.min.x || point.x > this.max.x ||
	    		     point.y < this.min.y || point.y > this.max.y ) {
	
	    			return false;
	
	    		}
	
	    		return true;
	
	    	},
	
	    	containsBox: function ( box ) {
	
	    		if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&
	    		     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {
	
	    			return true;
	
	    		}
	
	    		return false;
	
	    	},
	
	    	getParameter: function ( point, optionalTarget ) {
	
	    		// This can potentially have a divide by zero if the box
	    		// has a size dimension of 0.
	
	    		var result = optionalTarget || new Vector2();
	
	    		return result.set(
	    			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
	    			( point.y - this.min.y ) / ( this.max.y - this.min.y )
	    		);
	
	    	},
	
	    	intersectsBox: function ( box ) {
	
	    		// using 6 splitting planes to rule out intersections.
	
	    		if ( box.max.x < this.min.x || box.min.x > this.max.x ||
	    		     box.max.y < this.min.y || box.min.y > this.max.y ) {
	
	    			return false;
	
	    		}
	
	    		return true;
	
	    	},
	
	    	clampPoint: function ( point, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector2();
	    		return result.copy( point ).clamp( this.min, this.max );
	
	    	},
	
	    	distanceToPoint: function () {
	
	    		var v1 = new Vector2();
	
	    		return function distanceToPoint( point ) {
	
	    			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
	    			return clampedPoint.sub( point ).length();
	
	    		};
	
	    	}(),
	
	    	intersect: function ( box ) {
	
	    		this.min.max( box.min );
	    		this.max.min( box.max );
	
	    		return this;
	
	    	},
	
	    	union: function ( box ) {
	
	    		this.min.min( box.min );
	    		this.max.max( box.max );
	
	    		return this;
	
	    	},
	
	    	translate: function ( offset ) {
	
	    		this.min.add( offset );
	    		this.max.add( offset );
	
	    		return this;
	
	    	},
	
	    	equals: function ( box ) {
	
	    		return box.min.equals( this.min ) && box.max.equals( this.max );
	
	    	}
	
	    };
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function LensFlarePlugin( renderer, flares ) {
	
	    	var gl = renderer.context;
	    	var state = renderer.state;
	
	    	var vertexBuffer, elementBuffer;
	    	var shader, program, attributes, uniforms;
	
	    	var tempTexture, occlusionTexture;
	
	    	function init() {
	
	    		var vertices = new Float32Array( [
	    			- 1, - 1,  0, 0,
	    			 1, - 1,  1, 0,
	    			 1,  1,  1, 1,
	    			- 1,  1,  0, 1
	    		] );
	
	    		var faces = new Uint16Array( [
	    			0, 1, 2,
	    			0, 2, 3
	    		] );
	
	    		// buffers
	
	    		vertexBuffer     = gl.createBuffer();
	    		elementBuffer    = gl.createBuffer();
	
	    		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
	    		gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );
	
	    		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
	    		gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );
	
	    		// textures
	
	    		tempTexture      = gl.createTexture();
	    		occlusionTexture = gl.createTexture();
	
	    		state.bindTexture( gl.TEXTURE_2D, tempTexture );
	    		gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );
	
	    		state.bindTexture( gl.TEXTURE_2D, occlusionTexture );
	    		gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );
	    		gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );
	
	    		shader = {
	
	    			vertexShader: [
	
	    				"uniform lowp int renderType;",
	
	    				"uniform vec3 screenPosition;",
	    				"uniform vec2 scale;",
	    				"uniform float rotation;",
	
	    				"uniform sampler2D occlusionMap;",
	
	    				"attribute vec2 position;",
	    				"attribute vec2 uv;",
	
	    				"varying vec2 vUV;",
	    				"varying float vVisibility;",
	
	    				"void main() {",
	
	    					"vUV = uv;",
	
	    					"vec2 pos = position;",
	
	    					"if ( renderType == 2 ) {",
	
	    						"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );",
	    						"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",
	
	    						"vVisibility =        visibility.r / 9.0;",
	    						"vVisibility *= 1.0 - visibility.g / 9.0;",
	    						"vVisibility *=       visibility.b / 9.0;",
	    						"vVisibility *= 1.0 - visibility.a / 9.0;",
	
	    						"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
	    						"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",
	
	    					"}",
	
	    					"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",
	
	    				"}"
	
	    			].join( "\n" ),
	
	    			fragmentShader: [
	
	    				"uniform lowp int renderType;",
	
	    				"uniform sampler2D map;",
	    				"uniform float opacity;",
	    				"uniform vec3 color;",
	
	    				"varying vec2 vUV;",
	    				"varying float vVisibility;",
	
	    				"void main() {",
	
	    					// pink square
	
	    					"if ( renderType == 0 ) {",
	
	    						"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
	
	    					// restore
	
	    					"} else if ( renderType == 1 ) {",
	
	    						"gl_FragColor = texture2D( map, vUV );",
	
	    					// flare
	
	    					"} else {",
	
	    						"vec4 texture = texture2D( map, vUV );",
	    						"texture.a *= opacity * vVisibility;",
	    						"gl_FragColor = texture;",
	    						"gl_FragColor.rgb *= color;",
	
	    					"}",
	
	    				"}"
	
	    			].join( "\n" )
	
	    		};
	
	    		program = createProgram( shader );
	
	    		attributes = {
	    			vertex: gl.getAttribLocation ( program, "position" ),
	    			uv:     gl.getAttribLocation ( program, "uv" )
	    		};
	
	    		uniforms = {
	    			renderType:     gl.getUniformLocation( program, "renderType" ),
	    			map:            gl.getUniformLocation( program, "map" ),
	    			occlusionMap:   gl.getUniformLocation( program, "occlusionMap" ),
	    			opacity:        gl.getUniformLocation( program, "opacity" ),
	    			color:          gl.getUniformLocation( program, "color" ),
	    			scale:          gl.getUniformLocation( program, "scale" ),
	    			rotation:       gl.getUniformLocation( program, "rotation" ),
	    			screenPosition: gl.getUniformLocation( program, "screenPosition" )
	    		};
	
	    	}
	
	    	/*
	    	 * Render lens flares
	    	 * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,
	    	 *         reads these back and calculates occlusion.
	    	 */
	
	    	this.render = function ( scene, camera, viewport ) {
	
	    		if ( flares.length === 0 ) return;
	
	    		var tempPosition = new Vector3();
	
	    		var invAspect = viewport.w / viewport.z,
	    			halfViewportWidth = viewport.z * 0.5,
	    			halfViewportHeight = viewport.w * 0.5;
	
	    		var size = 16 / viewport.w,
	    			scale = new Vector2( size * invAspect, size );
	
	    		var screenPosition = new Vector3( 1, 1, 0 ),
	    			screenPositionPixels = new Vector2( 1, 1 );
	
	    		var validArea = new Box2();
	
	    		validArea.min.set( 0, 0 );
	    		validArea.max.set( viewport.z - 16, viewport.w - 16 );
	
	    		if ( program === undefined ) {
	
	    			init();
	
	    		}
	
	    		gl.useProgram( program );
	
	    		state.initAttributes();
	    		state.enableAttribute( attributes.vertex );
	    		state.enableAttribute( attributes.uv );
	    		state.disableUnusedAttributes();
	
	    		// loop through all lens flares to update their occlusion and positions
	    		// setup gl and common used attribs/uniforms
	
	    		gl.uniform1i( uniforms.occlusionMap, 0 );
	    		gl.uniform1i( uniforms.map, 1 );
	
	    		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
	    		gl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );
	    		gl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );
	
	    		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
	
	    		state.disable( gl.CULL_FACE );
	    		state.setDepthWrite( false );
	
	    		for ( var i = 0, l = flares.length; i < l; i ++ ) {
	
	    			size = 16 / viewport.w;
	    			scale.set( size * invAspect, size );
	
	    			// calc object screen position
	
	    			var flare = flares[ i ];
	
	    			tempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );
	
	    			tempPosition.applyMatrix4( camera.matrixWorldInverse );
	    			tempPosition.applyProjection( camera.projectionMatrix );
	
	    			// setup arrays for gl programs
	
	    			screenPosition.copy( tempPosition );
	
	    			// horizontal and vertical coordinate of the lower left corner of the pixels to copy
	
	    			screenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;
	    			screenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;
	
	    			// screen cull
	
	    			if ( validArea.containsPoint( screenPositionPixels ) === true ) {
	
	    				// save current RGB to temp texture
	
	    				state.activeTexture( gl.TEXTURE0 );
	    				state.bindTexture( gl.TEXTURE_2D, null );
	    				state.activeTexture( gl.TEXTURE1 );
	    				state.bindTexture( gl.TEXTURE_2D, tempTexture );
	    				gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );
	
	
	    				// render pink quad
	
	    				gl.uniform1i( uniforms.renderType, 0 );
	    				gl.uniform2f( uniforms.scale, scale.x, scale.y );
	    				gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );
	
	    				state.disable( gl.BLEND );
	    				state.enable( gl.DEPTH_TEST );
	
	    				gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );
	
	
	    				// copy result to occlusionMap
	
	    				state.activeTexture( gl.TEXTURE0 );
	    				state.bindTexture( gl.TEXTURE_2D, occlusionTexture );
	    				gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );
	
	
	    				// restore graphics
	
	    				gl.uniform1i( uniforms.renderType, 1 );
	    				state.disable( gl.DEPTH_TEST );
	
	    				state.activeTexture( gl.TEXTURE1 );
	    				state.bindTexture( gl.TEXTURE_2D, tempTexture );
	    				gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );
	
	
	    				// update object positions
	
	    				flare.positionScreen.copy( screenPosition );
	
	    				if ( flare.customUpdateCallback ) {
	
	    					flare.customUpdateCallback( flare );
	
	    				} else {
	
	    					flare.updateLensFlares();
	
	    				}
	
	    				// render flares
	
	    				gl.uniform1i( uniforms.renderType, 2 );
	    				state.enable( gl.BLEND );
	
	    				for ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {
	
	    					var sprite = flare.lensFlares[ j ];
	
	    					if ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {
	
	    						screenPosition.x = sprite.x;
	    						screenPosition.y = sprite.y;
	    						screenPosition.z = sprite.z;
	
	    						size = sprite.size * sprite.scale / viewport.w;
	
	    						scale.x = size * invAspect;
	    						scale.y = size;
	
	    						gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );
	    						gl.uniform2f( uniforms.scale, scale.x, scale.y );
	    						gl.uniform1f( uniforms.rotation, sprite.rotation );
	
	    						gl.uniform1f( uniforms.opacity, sprite.opacity );
	    						gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );
	
	    						state.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );
	    						renderer.setTexture2D( sprite.texture, 1 );
	
	    						gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		// restore gl
	
	    		state.enable( gl.CULL_FACE );
	    		state.enable( gl.DEPTH_TEST );
	    		state.setDepthWrite( true );
	
	    		renderer.resetGLState();
	
	    	};
	
	    	function createProgram( shader ) {
	
	    		var program = gl.createProgram();
	
	    		var fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );
	    		var vertexShader = gl.createShader( gl.VERTEX_SHADER );
	
	    		var prefix = "precision " + renderer.getPrecision() + " float;\n";
	
	    		gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );
	    		gl.shaderSource( vertexShader, prefix + shader.vertexShader );
	
	    		gl.compileShader( fragmentShader );
	    		gl.compileShader( vertexShader );
	
	    		gl.attachShader( program, fragmentShader );
	    		gl.attachShader( program, vertexShader );
	
	    		gl.linkProgram( program );
	
	    		return program;
	
	    	}
	
	    }
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function SpritePlugin( renderer, sprites ) {
	
	    	var gl = renderer.context;
	    	var state = renderer.state;
	
	    	var vertexBuffer, elementBuffer;
	    	var program, attributes, uniforms;
	
	    	var texture;
	
	    	// decompose matrixWorld
	
	    	var spritePosition = new Vector3();
	    	var spriteRotation = new Quaternion();
	    	var spriteScale = new Vector3();
	
	    	function init() {
	
	    		var vertices = new Float32Array( [
	    			- 0.5, - 0.5,  0, 0,
	    			  0.5, - 0.5,  1, 0,
	    			  0.5,   0.5,  1, 1,
	    			- 0.5,   0.5,  0, 1
	    		] );
	
	    		var faces = new Uint16Array( [
	    			0, 1, 2,
	    			0, 2, 3
	    		] );
	
	    		vertexBuffer  = gl.createBuffer();
	    		elementBuffer = gl.createBuffer();
	
	    		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
	    		gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );
	
	    		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
	    		gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );
	
	    		program = createProgram();
	
	    		attributes = {
	    			position:			gl.getAttribLocation ( program, 'position' ),
	    			uv:					gl.getAttribLocation ( program, 'uv' )
	    		};
	
	    		uniforms = {
	    			uvOffset:			gl.getUniformLocation( program, 'uvOffset' ),
	    			uvScale:			gl.getUniformLocation( program, 'uvScale' ),
	
	    			rotation:			gl.getUniformLocation( program, 'rotation' ),
	    			scale:				gl.getUniformLocation( program, 'scale' ),
	
	    			color:				gl.getUniformLocation( program, 'color' ),
	    			map:				gl.getUniformLocation( program, 'map' ),
	    			opacity:			gl.getUniformLocation( program, 'opacity' ),
	
	    			modelViewMatrix: 	gl.getUniformLocation( program, 'modelViewMatrix' ),
	    			projectionMatrix:	gl.getUniformLocation( program, 'projectionMatrix' ),
	
	    			fogType:			gl.getUniformLocation( program, 'fogType' ),
	    			fogDensity:			gl.getUniformLocation( program, 'fogDensity' ),
	    			fogNear:			gl.getUniformLocation( program, 'fogNear' ),
	    			fogFar:				gl.getUniformLocation( program, 'fogFar' ),
	    			fogColor:			gl.getUniformLocation( program, 'fogColor' ),
	
	    			alphaTest:			gl.getUniformLocation( program, 'alphaTest' )
	    		};
	
	    		var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	    		canvas.width = 8;
	    		canvas.height = 8;
	
	    		var context = canvas.getContext( '2d' );
	    		context.fillStyle = 'white';
	    		context.fillRect( 0, 0, 8, 8 );
	
	    		texture = new Texture( canvas );
	    		texture.needsUpdate = true;
	
	    	}
	
	    	this.render = function ( scene, camera ) {
	
	    		if ( sprites.length === 0 ) return;
	
	    		// setup gl
	
	    		if ( program === undefined ) {
	
	    			init();
	
	    		}
	
	    		gl.useProgram( program );
	
	    		state.initAttributes();
	    		state.enableAttribute( attributes.position );
	    		state.enableAttribute( attributes.uv );
	    		state.disableUnusedAttributes();
	
	    		state.disable( gl.CULL_FACE );
	    		state.enable( gl.BLEND );
	
	    		gl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );
	    		gl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );
	    		gl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );
	
	    		gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );
	
	    		gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );
	
	    		state.activeTexture( gl.TEXTURE0 );
	    		gl.uniform1i( uniforms.map, 0 );
	
	    		var oldFogType = 0;
	    		var sceneFogType = 0;
	    		var fog = scene.fog;
	
	    		if ( fog ) {
	
	    			gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );
	
	    			if ( (fog && fog.isFog) ) {
	
	    				gl.uniform1f( uniforms.fogNear, fog.near );
	    				gl.uniform1f( uniforms.fogFar, fog.far );
	
	    				gl.uniform1i( uniforms.fogType, 1 );
	    				oldFogType = 1;
	    				sceneFogType = 1;
	
	    			} else if ( (fog && fog.isFogExp2) ) {
	
	    				gl.uniform1f( uniforms.fogDensity, fog.density );
	
	    				gl.uniform1i( uniforms.fogType, 2 );
	    				oldFogType = 2;
	    				sceneFogType = 2;
	
	    			}
	
	    		} else {
	
	    			gl.uniform1i( uniforms.fogType, 0 );
	    			oldFogType = 0;
	    			sceneFogType = 0;
	
	    		}
	
	
	    		// update positions and sort
	
	    		for ( var i = 0, l = sprites.length; i < l; i ++ ) {
	
	    			var sprite = sprites[ i ];
	
	    			sprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );
	    			sprite.z = - sprite.modelViewMatrix.elements[ 14 ];
	
	    		}
	
	    		sprites.sort( painterSortStable );
	
	    		// render all sprites
	
	    		var scale = [];
	
	    		for ( var i = 0, l = sprites.length; i < l; i ++ ) {
	
	    			var sprite = sprites[ i ];
	    			var material = sprite.material;
	
	    			if ( material.visible === false ) continue;
	
	    			gl.uniform1f( uniforms.alphaTest, material.alphaTest );
	    			gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );
	
	    			sprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );
	
	    			scale[ 0 ] = spriteScale.x;
	    			scale[ 1 ] = spriteScale.y;
	
	    			var fogType = 0;
	
	    			if ( scene.fog && material.fog ) {
	
	    				fogType = sceneFogType;
	
	    			}
	
	    			if ( oldFogType !== fogType ) {
	
	    				gl.uniform1i( uniforms.fogType, fogType );
	    				oldFogType = fogType;
	
	    			}
	
	    			if ( material.map !== null ) {
	
	    				gl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );
	    				gl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );
	
	    			} else {
	
	    				gl.uniform2f( uniforms.uvOffset, 0, 0 );
	    				gl.uniform2f( uniforms.uvScale, 1, 1 );
	
	    			}
	
	    			gl.uniform1f( uniforms.opacity, material.opacity );
	    			gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );
	
	    			gl.uniform1f( uniforms.rotation, material.rotation );
	    			gl.uniform2fv( uniforms.scale, scale );
	
	    			state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );
	    			state.setDepthTest( material.depthTest );
	    			state.setDepthWrite( material.depthWrite );
	
	    			if ( material.map ) {
	
	    				renderer.setTexture2D( material.map, 0 );
	
	    			} else {
	
	    				renderer.setTexture2D( texture, 0 );
	
	    			}
	
	    			gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );
	
	    		}
	
	    		// restore gl
	
	    		state.enable( gl.CULL_FACE );
	
	    		renderer.resetGLState();
	
	    	};
	
	    	function createProgram() {
	
	    		var program = gl.createProgram();
	
	    		var vertexShader = gl.createShader( gl.VERTEX_SHADER );
	    		var fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );
	
	    		gl.shaderSource( vertexShader, [
	
	    			'precision ' + renderer.getPrecision() + ' float;',
	
	    			'uniform mat4 modelViewMatrix;',
	    			'uniform mat4 projectionMatrix;',
	    			'uniform float rotation;',
	    			'uniform vec2 scale;',
	    			'uniform vec2 uvOffset;',
	    			'uniform vec2 uvScale;',
	
	    			'attribute vec2 position;',
	    			'attribute vec2 uv;',
	
	    			'varying vec2 vUV;',
	
	    			'void main() {',
	
	    				'vUV = uvOffset + uv * uvScale;',
	
	    				'vec2 alignedPosition = position * scale;',
	
	    				'vec2 rotatedPosition;',
	    				'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',
	    				'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',
	
	    				'vec4 finalPosition;',
	
	    				'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',
	    				'finalPosition.xy += rotatedPosition;',
	    				'finalPosition = projectionMatrix * finalPosition;',
	
	    				'gl_Position = finalPosition;',
	
	    			'}'
	
	    		].join( '\n' ) );
	
	    		gl.shaderSource( fragmentShader, [
	
	    			'precision ' + renderer.getPrecision() + ' float;',
	
	    			'uniform vec3 color;',
	    			'uniform sampler2D map;',
	    			'uniform float opacity;',
	
	    			'uniform int fogType;',
	    			'uniform vec3 fogColor;',
	    			'uniform float fogDensity;',
	    			'uniform float fogNear;',
	    			'uniform float fogFar;',
	    			'uniform float alphaTest;',
	
	    			'varying vec2 vUV;',
	
	    			'void main() {',
	
	    				'vec4 texture = texture2D( map, vUV );',
	
	    				'if ( texture.a < alphaTest ) discard;',
	
	    				'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',
	
	    				'if ( fogType > 0 ) {',
	
	    					'float depth = gl_FragCoord.z / gl_FragCoord.w;',
	    					'float fogFactor = 0.0;',
	
	    					'if ( fogType == 1 ) {',
	
	    						'fogFactor = smoothstep( fogNear, fogFar, depth );',
	
	    					'} else {',
	
	    						'const float LOG2 = 1.442695;',
	    						'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',
	    						'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',
	
	    					'}',
	
	    					'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',
	
	    				'}',
	
	    			'}'
	
	    		].join( '\n' ) );
	
	    		gl.compileShader( vertexShader );
	    		gl.compileShader( fragmentShader );
	
	    		gl.attachShader( program, vertexShader );
	    		gl.attachShader( program, fragmentShader );
	
	    		gl.linkProgram( program );
	
	    		return program;
	
	    	}
	
	    	function painterSortStable( a, b ) {
	
	    		if ( a.renderOrder !== b.renderOrder ) {
	
	    			return a.renderOrder - b.renderOrder;
	
	    		} else if ( a.z !== b.z ) {
	
	    			return b.z - a.z;
	
	    		} else {
	
	    			return b.id - a.id;
	
	    		}
	
	    	}
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Material() {
	
	    	Object.defineProperty( this, 'id', { value: MaterialIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.type = 'Material';
	
	    	this.fog = true;
	    	this.lights = true;
	
	    	this.blending = NormalBlending;
	    	this.side = FrontSide;
	    	this.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading
	    	this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors
	
	    	this.opacity = 1;
	    	this.transparent = false;
	
	    	this.blendSrc = SrcAlphaFactor;
	    	this.blendDst = OneMinusSrcAlphaFactor;
	    	this.blendEquation = AddEquation;
	    	this.blendSrcAlpha = null;
	    	this.blendDstAlpha = null;
	    	this.blendEquationAlpha = null;
	
	    	this.depthFunc = LessEqualDepth;
	    	this.depthTest = true;
	    	this.depthWrite = true;
	
	    	this.clippingPlanes = null;
	    	this.clipShadows = false;
	
	    	this.colorWrite = true;
	
	    	this.precision = null; // override the renderer's default precision for this material
	
	    	this.polygonOffset = false;
	    	this.polygonOffsetFactor = 0;
	    	this.polygonOffsetUnits = 0;
	
	    	this.alphaTest = 0;
	    	this.premultipliedAlpha = false;
	
	    	this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer
	
	    	this.visible = true;
	
	    	this._needsUpdate = true;
	
	    }
	
	    Material.prototype = {
	
	    	constructor: Material,
	
	    	isMaterial: true,
	
	    	get needsUpdate() {
	
	    		return this._needsUpdate;
	
	    	},
	
	    	set needsUpdate( value ) {
	
	    		if ( value === true ) this.update();
	    		this._needsUpdate = value;
	
	    	},
	
	    	setValues: function ( values ) {
	
	    		if ( values === undefined ) return;
	
	    		for ( var key in values ) {
	
	    			var newValue = values[ key ];
	
	    			if ( newValue === undefined ) {
	
	    				console.warn( "THREE.Material: '" + key + "' parameter is undefined." );
	    				continue;
	
	    			}
	
	    			var currentValue = this[ key ];
	
	    			if ( currentValue === undefined ) {
	
	    				console.warn( "THREE." + this.type + ": '" + key + "' is not a property of this material." );
	    				continue;
	
	    			}
	
	    			if ( (currentValue && currentValue.isColor) ) {
	
	    				currentValue.set( newValue );
	
	    			} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {
	
	    				currentValue.copy( newValue );
	
	    			} else if ( key === 'overdraw' ) {
	
	    				// ensure overdraw is backwards-compatible with legacy boolean type
	    				this[ key ] = Number( newValue );
	
	    			} else {
	
	    				this[ key ] = newValue;
	
	    			}
	
	    		}
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		var isRoot = meta === undefined;
	
	    		if ( isRoot ) {
	
	    			meta = {
	    				textures: {},
	    				images: {}
	    			};
	
	    		}
	
	    		var data = {
	    			metadata: {
	    				version: 4.4,
	    				type: 'Material',
	    				generator: 'Material.toJSON'
	    			}
	    		};
	
	    		// standard Material serialization
	    		data.uuid = this.uuid;
	    		data.type = this.type;
	
	    		if ( this.name !== '' ) data.name = this.name;
	
	    		if ( (this.color && this.color.isColor) ) data.color = this.color.getHex();
	
	    		if ( this.roughness !== undefined ) data.roughness = this.roughness;
	    		if ( this.metalness !== undefined ) data.metalness = this.metalness;
	
	    		if ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();
	    		if ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();
	    		if ( this.shininess !== undefined ) data.shininess = this.shininess;
	
	    		if ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;
	    		if ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;
	    		if ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;
	    		if ( (this.bumpMap && this.bumpMap.isTexture) ) {
	
	    			data.bumpMap = this.bumpMap.toJSON( meta ).uuid;
	    			data.bumpScale = this.bumpScale;
	
	    		}
	    		if ( (this.normalMap && this.normalMap.isTexture) ) {
	
	    			data.normalMap = this.normalMap.toJSON( meta ).uuid;
	    			data.normalScale = this.normalScale.toArray();
	
	    		}
	    		if ( (this.displacementMap && this.displacementMap.isTexture) ) {
	
	    			data.displacementMap = this.displacementMap.toJSON( meta ).uuid;
	    			data.displacementScale = this.displacementScale;
	    			data.displacementBias = this.displacementBias;
	
	    		}
	    		if ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;
	    		if ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;
	
	    		if ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;
	    		if ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;
	
	    		if ( (this.envMap && this.envMap.isTexture) ) {
	
	    			data.envMap = this.envMap.toJSON( meta ).uuid;
	    			data.reflectivity = this.reflectivity; // Scale behind envMap
	
	    		}
	
	    		if ( this.size !== undefined ) data.size = this.size;
	    		if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;
	
	    		if ( this.blending !== NormalBlending ) data.blending = this.blending;
	    		if ( this.shading !== SmoothShading ) data.shading = this.shading;
	    		if ( this.side !== FrontSide ) data.side = this.side;
	    		if ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;
	
	    		if ( this.opacity < 1 ) data.opacity = this.opacity;
	    		if ( this.transparent === true ) data.transparent = this.transparent;
	
	    		data.depthFunc = this.depthFunc;
	    		data.depthTest = this.depthTest;
	    		data.depthWrite = this.depthWrite;
	
	    		if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;
	    		if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;
	    		if ( this.wireframe === true ) data.wireframe = this.wireframe;
	    		if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;
	    		if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;
	    		if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;
	
	    		data.skinning = this.skinning;
	    		data.morphTargets = this.morphTargets;
	
	    		// TODO: Copied from Object3D.toJSON
	
	    		function extractFromCache( cache ) {
	
	    			var values = [];
	
	    			for ( var key in cache ) {
	
	    				var data = cache[ key ];
	    				delete data.metadata;
	    				values.push( data );
	
	    			}
	
	    			return values;
	
	    		}
	
	    		if ( isRoot ) {
	
	    			var textures = extractFromCache( meta.textures );
	    			var images = extractFromCache( meta.images );
	
	    			if ( textures.length > 0 ) data.textures = textures;
	    			if ( images.length > 0 ) data.images = images;
	
	    		}
	
	    		return data;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.name = source.name;
	
	    		this.fog = source.fog;
	    		this.lights = source.lights;
	
	    		this.blending = source.blending;
	    		this.side = source.side;
	    		this.shading = source.shading;
	    		this.vertexColors = source.vertexColors;
	
	    		this.opacity = source.opacity;
	    		this.transparent = source.transparent;
	
	    		this.blendSrc = source.blendSrc;
	    		this.blendDst = source.blendDst;
	    		this.blendEquation = source.blendEquation;
	    		this.blendSrcAlpha = source.blendSrcAlpha;
	    		this.blendDstAlpha = source.blendDstAlpha;
	    		this.blendEquationAlpha = source.blendEquationAlpha;
	
	    		this.depthFunc = source.depthFunc;
	    		this.depthTest = source.depthTest;
	    		this.depthWrite = source.depthWrite;
	
	    		this.colorWrite = source.colorWrite;
	
	    		this.precision = source.precision;
	
	    		this.polygonOffset = source.polygonOffset;
	    		this.polygonOffsetFactor = source.polygonOffsetFactor;
	    		this.polygonOffsetUnits = source.polygonOffsetUnits;
	
	    		this.alphaTest = source.alphaTest;
	
	    		this.premultipliedAlpha = source.premultipliedAlpha;
	
	    		this.overdraw = source.overdraw;
	
	    		this.visible = source.visible;
	    		this.clipShadows = source.clipShadows;
	
	    		var srcPlanes = source.clippingPlanes,
	    			dstPlanes = null;
	
	    		if ( srcPlanes !== null ) {
	
	    			var n = srcPlanes.length;
	    			dstPlanes = new Array( n );
	
	    			for ( var i = 0; i !== n; ++ i )
	    				dstPlanes[ i ] = srcPlanes[ i ].clone();
	
	    		}
	
	    		this.clippingPlanes = dstPlanes;
	
	    		return this;
	
	    	},
	
	    	update: function () {
	
	    		this.dispatchEvent( { type: 'update' } );
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	}
	
	    };
	
	    Object.assign( Material.prototype, EventDispatcher.prototype );
	
	    var count$1 = 0;
	    function MaterialIdCount() { return count$1++; };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  defines: { "label" : "value" },
	     *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
	     *
	     *  fragmentShader: <string>,
	     *  vertexShader: <string>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>,
	     *
	     *  lights: <bool>,
	     *
	     *  skinning: <bool>,
	     *  morphTargets: <bool>,
	     *  morphNormals: <bool>
	     * }
	     */
	
	    function ShaderMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'ShaderMaterial';
	
	    	this.defines = {};
	    	this.uniforms = {};
	
	    	this.vertexShader = 'void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}';
	    	this.fragmentShader = 'void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}';
	
	    	this.linewidth = 1;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	
	    	this.fog = false; // set to use scene fog
	    	this.lights = false; // set to use scene lights
	    	this.clipping = false; // set to use user-defined clipping planes
	
	    	this.skinning = false; // set to use skinning attribute streams
	    	this.morphTargets = false; // set to use morph targets
	    	this.morphNormals = false; // set to use morph normals
	
	    	this.extensions = {
	    		derivatives: false, // set to use derivatives
	    		fragDepth: false, // set to use fragment depth values
	    		drawBuffers: false, // set to use draw buffers
	    		shaderTextureLOD: false // set to use shader texture LOD
	    	};
	
	    	// When rendered geometry doesn't include these attributes but the material does,
	    	// use these default values in WebGL. This avoids errors when buffer data is missing.
	    	this.defaultAttributeValues = {
	    		'color': [ 1, 1, 1 ],
	    		'uv': [ 0, 0 ],
	    		'uv2': [ 0, 0 ]
	    	};
	
	    	this.index0AttributeName = undefined;
	
	    	if ( parameters !== undefined ) {
	
	    		if ( parameters.attributes !== undefined ) {
	
	    			console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );
	
	    		}
	
	    		this.setValues( parameters );
	
	    	}
	
	    }
	
	    ShaderMaterial.prototype = Object.create( Material.prototype );
	    ShaderMaterial.prototype.constructor = ShaderMaterial;
	
	    ShaderMaterial.prototype.isShaderMaterial = true;
	
	    ShaderMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.fragmentShader = source.fragmentShader;
	    	this.vertexShader = source.vertexShader;
	
	    	this.uniforms = exports.UniformsUtils.clone( source.uniforms );
	
	    	this.defines = source.defines;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	
	    	this.lights = source.lights;
	    	this.clipping = source.clipping;
	
	    	this.skinning = source.skinning;
	
	    	this.morphTargets = source.morphTargets;
	    	this.morphNormals = source.morphNormals;
	
	    	this.extensions = source.extensions;
	
	    	return this;
	
	    };
	
	    ShaderMaterial.prototype.toJSON = function ( meta ) {
	
	    	var data = Material.prototype.toJSON.call( this, meta );
	
	    	data.uniforms = this.uniforms;
	    	data.vertexShader = this.vertexShader;
	    	data.fragmentShader = this.fragmentShader;
	
	    	return data;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     * @author bhouston / https://clara.io
	     * @author WestLangley / http://github.com/WestLangley
	     *
	     * parameters = {
	     *
	     *  opacity: <float>,
	     *
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  alphaMap: new THREE.Texture( <Image> ),
	     *
	     *  displacementMap: new THREE.Texture( <Image> ),
	     *  displacementScale: <float>,
	     *  displacementBias: <float>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>
	     * }
	     */
	
	    function MeshDepthMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'MeshDepthMaterial';
	
	    	this.depthPacking = BasicDepthPacking;
	
	    	this.skinning = false;
	    	this.morphTargets = false;
	
	    	this.map = null;
	
	    	this.alphaMap = null;
	
	    	this.displacementMap = null;
	    	this.displacementScale = 1;
	    	this.displacementBias = 0;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	
	    	this.fog = false;
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshDepthMaterial.prototype = Object.create( Material.prototype );
	    MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;
	
	    MeshDepthMaterial.prototype.isMeshDepthMaterial = true;
	
	    MeshDepthMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.depthPacking = source.depthPacking;
	
	    	this.skinning = source.skinning;
	    	this.morphTargets = source.morphTargets;
	
	    	this.map = source.map;
	
	    	this.alphaMap = source.alphaMap;
	
	    	this.displacementMap = source.displacementMap;
	    	this.displacementScale = source.displacementScale;
	    	this.displacementBias = source.displacementBias;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	
	    	return this;
	
	    };
	
	    /**
	     * @author bhouston / http://clara.io
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function Box3( min, max ) {
	
	    	this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );
	    	this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );
	
	    }
	
	    Box3.prototype = {
	
	    	constructor: Box3,
	
	    	isBox3: true,
	
	    	set: function ( min, max ) {
	
	    		this.min.copy( min );
	    		this.max.copy( max );
	
	    		return this;
	
	    	},
	
	    	setFromArray: function ( array ) {
	
	    		var minX = + Infinity;
	    		var minY = + Infinity;
	    		var minZ = + Infinity;
	
	    		var maxX = - Infinity;
	    		var maxY = - Infinity;
	    		var maxZ = - Infinity;
	
	    		for ( var i = 0, l = array.length; i < l; i += 3 ) {
	
	    			var x = array[ i ];
	    			var y = array[ i + 1 ];
	    			var z = array[ i + 2 ];
	
	    			if ( x < minX ) minX = x;
	    			if ( y < minY ) minY = y;
	    			if ( z < minZ ) minZ = z;
	
	    			if ( x > maxX ) maxX = x;
	    			if ( y > maxY ) maxY = y;
	    			if ( z > maxZ ) maxZ = z;
	
	    		}
	
	    		this.min.set( minX, minY, minZ );
	    		this.max.set( maxX, maxY, maxZ );
	
	    	},
	
	    	setFromPoints: function ( points ) {
	
	    		this.makeEmpty();
	
	    		for ( var i = 0, il = points.length; i < il; i ++ ) {
	
	    			this.expandByPoint( points[ i ] );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	setFromCenterAndSize: function () {
	
	    		var v1 = new Vector3();
	
	    		return function setFromCenterAndSize( center, size ) {
	
	    			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );
	
	    			this.min.copy( center ).sub( halfSize );
	    			this.max.copy( center ).add( halfSize );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	setFromObject: function () {
	
	    		// Computes the world-axis-aligned bounding box of an object (including its children),
	    		// accounting for both the object's, and children's, world transforms
	
	    		var v1 = new Vector3();
	
	    		return function setFromObject( object ) {
	
	    			var scope = this;
	
	    			object.updateMatrixWorld( true );
	
	    			this.makeEmpty();
	
	    			object.traverse( function ( node ) {
	
	    				var geometry = node.geometry;
	
	    				if ( geometry !== undefined ) {
	
	    					if ( (geometry && geometry.isGeometry) ) {
	
	    						var vertices = geometry.vertices;
	
	    						for ( var i = 0, il = vertices.length; i < il; i ++ ) {
	
	    							v1.copy( vertices[ i ] );
	    							v1.applyMatrix4( node.matrixWorld );
	
	    							scope.expandByPoint( v1 );
	
	    						}
	
	    					} else if ( (geometry && geometry.isBufferGeometry) ) {
	
	    						var attribute = geometry.attributes.position;
	
	    						if ( attribute !== undefined ) {
	
	    							var array, offset, stride;
	
	    							if ( (attribute && attribute.isInterleavedBufferAttribute) ) {
	
	    								array = attribute.data.array;
	    								offset = attribute.offset;
	    								stride = attribute.data.stride;
	
	    							} else {
	
	    								array = attribute.array;
	    								offset = 0;
	    								stride = 3;
	
	    							}
	
	    							for ( var i = offset, il = array.length; i < il; i += stride ) {
	
	    								v1.fromArray( array, i );
	    								v1.applyMatrix4( node.matrixWorld );
	
	    								scope.expandByPoint( v1 );
	
	    							}
	
	    						}
	
	    					}
	
	    				}
	
	    			} );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( box ) {
	
	    		this.min.copy( box.min );
	    		this.max.copy( box.max );
	
	    		return this;
	
	    	},
	
	    	makeEmpty: function () {
	
	    		this.min.x = this.min.y = this.min.z = + Infinity;
	    		this.max.x = this.max.y = this.max.z = - Infinity;
	
	    		return this;
	
	    	},
	
	    	isEmpty: function () {
	
	    		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
	
	    		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );
	
	    	},
	
	    	getCenter: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );
	
	    	},
	
	    	getSize: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );
	
	    	},
	
	    	expandByPoint: function ( point ) {
	
	    		this.min.min( point );
	    		this.max.max( point );
	
	    		return this;
	
	    	},
	
	    	expandByVector: function ( vector ) {
	
	    		this.min.sub( vector );
	    		this.max.add( vector );
	
	    		return this;
	
	    	},
	
	    	expandByScalar: function ( scalar ) {
	
	    		this.min.addScalar( - scalar );
	    		this.max.addScalar( scalar );
	
	    		return this;
	
	    	},
	
	    	containsPoint: function ( point ) {
	
	    		if ( point.x < this.min.x || point.x > this.max.x ||
	    				 point.y < this.min.y || point.y > this.max.y ||
	    				 point.z < this.min.z || point.z > this.max.z ) {
	
	    			return false;
	
	    		}
	
	    		return true;
	
	    	},
	
	    	containsBox: function ( box ) {
	
	    		if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&
	    			 ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&
	    			 ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {
	
	    			return true;
	
	    		}
	
	    		return false;
	
	    	},
	
	    	getParameter: function ( point, optionalTarget ) {
	
	    		// This can potentially have a divide by zero if the box
	    		// has a size dimension of 0.
	
	    		var result = optionalTarget || new Vector3();
	
	    		return result.set(
	    			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
	    			( point.y - this.min.y ) / ( this.max.y - this.min.y ),
	    			( point.z - this.min.z ) / ( this.max.z - this.min.z )
	    		);
	
	    	},
	
	    	intersectsBox: function ( box ) {
	
	    		// using 6 splitting planes to rule out intersections.
	
	    		if ( box.max.x < this.min.x || box.min.x > this.max.x ||
	    				 box.max.y < this.min.y || box.min.y > this.max.y ||
	    				 box.max.z < this.min.z || box.min.z > this.max.z ) {
	
	    			return false;
	
	    		}
	
	    		return true;
	
	    	},
	
	    	intersectsSphere: ( function () {
	
	    		var closestPoint;
	
	    		return function intersectsSphere( sphere ) {
	
	    			if ( closestPoint === undefined ) closestPoint = new Vector3();
	
	    			// Find the point on the AABB closest to the sphere center.
	    			this.clampPoint( sphere.center, closestPoint );
	
	    			// If that point is inside the sphere, the AABB and sphere intersect.
	    			return closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );
	
	    		};
	
	    	} )(),
	
	    	intersectsPlane: function ( plane ) {
	
	    		// We compute the minimum and maximum dot product values. If those values
	    		// are on the same side (back or front) of the plane, then there is no intersection.
	
	    		var min, max;
	
	    		if ( plane.normal.x > 0 ) {
	
	    			min = plane.normal.x * this.min.x;
	    			max = plane.normal.x * this.max.x;
	
	    		} else {
	
	    			min = plane.normal.x * this.max.x;
	    			max = plane.normal.x * this.min.x;
	
	    		}
	
	    		if ( plane.normal.y > 0 ) {
	
	    			min += plane.normal.y * this.min.y;
	    			max += plane.normal.y * this.max.y;
	
	    		} else {
	
	    			min += plane.normal.y * this.max.y;
	    			max += plane.normal.y * this.min.y;
	
	    		}
	
	    		if ( plane.normal.z > 0 ) {
	
	    			min += plane.normal.z * this.min.z;
	    			max += plane.normal.z * this.max.z;
	
	    		} else {
	
	    			min += plane.normal.z * this.max.z;
	    			max += plane.normal.z * this.min.z;
	
	    		}
	
	    		return ( min <= plane.constant && max >= plane.constant );
	
	    	},
	
	    	clampPoint: function ( point, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return result.copy( point ).clamp( this.min, this.max );
	
	    	},
	
	    	distanceToPoint: function () {
	
	    		var v1 = new Vector3();
	
	    		return function distanceToPoint( point ) {
	
	    			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
	    			return clampedPoint.sub( point ).length();
	
	    		};
	
	    	}(),
	
	    	getBoundingSphere: function () {
	
	    		var v1 = new Vector3();
	
	    		return function getBoundingSphere( optionalTarget ) {
	
	    			var result = optionalTarget || new Sphere();
	
	    			this.getCenter( result.center );
	
	    			result.radius = this.size( v1 ).length() * 0.5;
	
	    			return result;
	
	    		};
	
	    	}(),
	
	    	intersect: function ( box ) {
	
	    		this.min.max( box.min );
	    		this.max.min( box.max );
	
	    		// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
	    		if( this.isEmpty() ) this.makeEmpty();
	
	    		return this;
	
	    	},
	
	    	union: function ( box ) {
	
	    		this.min.min( box.min );
	    		this.max.max( box.max );
	
	    		return this;
	
	    	},
	
	    	applyMatrix4: function () {
	
	    		var points = [
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3(),
	    			new Vector3()
	    		];
	
	    		return function applyMatrix4( matrix ) {
	
	    			// transform of empty box is an empty box.
	    			if( this.isEmpty() ) return this;
	
	    			// NOTE: I am using a binary pattern to specify all 2^3 combinations below
	    			points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
	    			points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
	    			points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
	    			points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
	    			points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
	    			points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
	    			points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
	    			points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );	// 111
	
	    			this.setFromPoints( points );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	translate: function ( offset ) {
	
	    		this.min.add( offset );
	    		this.max.add( offset );
	
	    		return this;
	
	    	},
	
	    	equals: function ( box ) {
	
	    		return box.min.equals( this.min ) && box.max.equals( this.max );
	
	    	}
	
	    };
	
	    /**
	     * @author bhouston / http://clara.io
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Sphere( center, radius ) {
	
	    	this.center = ( center !== undefined ) ? center : new Vector3();
	    	this.radius = ( radius !== undefined ) ? radius : 0;
	
	    }
	
	    Sphere.prototype = {
	
	    	constructor: Sphere,
	
	    	set: function ( center, radius ) {
	
	    		this.center.copy( center );
	    		this.radius = radius;
	
	    		return this;
	
	    	},
	
	    	setFromPoints: function () {
	
	    		var box = new Box3();
	
	    		return function setFromPoints( points, optionalCenter ) {
	
	    			var center = this.center;
	
	    			if ( optionalCenter !== undefined ) {
	
	    				center.copy( optionalCenter );
	
	    			} else {
	
	    				box.setFromPoints( points ).getCenter( center );
	
	    			}
	
	    			var maxRadiusSq = 0;
	
	    			for ( var i = 0, il = points.length; i < il; i ++ ) {
	
	    				maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );
	
	    			}
	
	    			this.radius = Math.sqrt( maxRadiusSq );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( sphere ) {
	
	    		this.center.copy( sphere.center );
	    		this.radius = sphere.radius;
	
	    		return this;
	
	    	},
	
	    	empty: function () {
	
	    		return ( this.radius <= 0 );
	
	    	},
	
	    	containsPoint: function ( point ) {
	
	    		return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );
	
	    	},
	
	    	distanceToPoint: function ( point ) {
	
	    		return ( point.distanceTo( this.center ) - this.radius );
	
	    	},
	
	    	intersectsSphere: function ( sphere ) {
	
	    		var radiusSum = this.radius + sphere.radius;
	
	    		return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );
	
	    	},
	
	    	intersectsBox: function ( box ) {
	
	    		return box.intersectsSphere( this );
	
	    	},
	
	    	intersectsPlane: function ( plane ) {
	
	    		// We use the following equation to compute the signed distance from
	    		// the center of the sphere to the plane.
	    		//
	    		// distance = q * n - d
	    		//
	    		// If this distance is greater than the radius of the sphere,
	    		// then there is no intersection.
	
	    		return Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;
	
	    	},
	
	    	clampPoint: function ( point, optionalTarget ) {
	
	    		var deltaLengthSq = this.center.distanceToSquared( point );
	
	    		var result = optionalTarget || new Vector3();
	
	    		result.copy( point );
	
	    		if ( deltaLengthSq > ( this.radius * this.radius ) ) {
	
	    			result.sub( this.center ).normalize();
	    			result.multiplyScalar( this.radius ).add( this.center );
	
	    		}
	
	    		return result;
	
	    	},
	
	    	getBoundingBox: function ( optionalTarget ) {
	
	    		var box = optionalTarget || new Box3();
	
	    		box.set( this.center, this.center );
	    		box.expandByScalar( this.radius );
	
	    		return box;
	
	    	},
	
	    	applyMatrix4: function ( matrix ) {
	
	    		this.center.applyMatrix4( matrix );
	    		this.radius = this.radius * matrix.getMaxScaleOnAxis();
	
	    		return this;
	
	    	},
	
	    	translate: function ( offset ) {
	
	    		this.center.add( offset );
	
	    		return this;
	
	    	},
	
	    	equals: function ( sphere ) {
	
	    		return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );
	
	    	}
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author WestLangley / http://github.com/WestLangley
	     * @author bhouston / http://clara.io
	     * @author tschw
	     */
	
	    function Matrix3() {
	
	    	this.elements = new Float32Array( [
	
	    		1, 0, 0,
	    		0, 1, 0,
	    		0, 0, 1
	
	    	] );
	
	    	if ( arguments.length > 0 ) {
	
	    		console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );
	
	    	}
	
	    }
	
	    Matrix3.prototype = {
	
	    	constructor: Matrix3,
	
	    	isMatrix3: true,
	
	    	set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {
	
	    		var te = this.elements;
	
	    		te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;
	    		te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;
	    		te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;
	
	    		return this;
	
	    	},
	
	    	identity: function () {
	
	    		this.set(
	
	    			1, 0, 0,
	    			0, 1, 0,
	    			0, 0, 1
	
	    		);
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().fromArray( this.elements );
	
	    	},
	
	    	copy: function ( m ) {
	
	    		var me = m.elements;
	
	    		this.set(
	
	    			me[ 0 ], me[ 3 ], me[ 6 ],
	    			me[ 1 ], me[ 4 ], me[ 7 ],
	    			me[ 2 ], me[ 5 ], me[ 8 ]
	
	    		);
	
	    		return this;
	
	    	},
	
	    	setFromMatrix4: function( m ) {
	
	    		var me = m.elements;
	
	    		this.set(
	
	    			me[ 0 ], me[ 4 ], me[  8 ],
	    			me[ 1 ], me[ 5 ], me[  9 ],
	    			me[ 2 ], me[ 6 ], me[ 10 ]
	
	    		);
	
	    		return this;
	
	    	},
	
	    	applyToVector3Array: function () {
	
	    		var v1;
	
	    		return function applyToVector3Array( array, offset, length ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	    			if ( offset === undefined ) offset = 0;
	    			if ( length === undefined ) length = array.length;
	
	    			for ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {
	
	    				v1.fromArray( array, j );
	    				v1.applyMatrix3( this );
	    				v1.toArray( array, j );
	
	    			}
	
	    			return array;
	
	    		};
	
	    	}(),
	
	    	applyToBuffer: function () {
	
	    		var v1;
	
	    		return function applyToBuffer( buffer, offset, length ) {
	
	    			if ( v1 === undefined ) v1 = new Vector3();
	    			if ( offset === undefined ) offset = 0;
	    			if ( length === undefined ) length = buffer.length / buffer.itemSize;
	
	    			for ( var i = 0, j = offset; i < length; i ++, j ++ ) {
	
	    				v1.x = buffer.getX( j );
	    				v1.y = buffer.getY( j );
	    				v1.z = buffer.getZ( j );
	
	    				v1.applyMatrix3( this );
	
	    				buffer.setXYZ( v1.x, v1.y, v1.z );
	
	    			}
	
	    			return buffer;
	
	    		};
	
	    	}(),
	
	    	multiplyScalar: function ( s ) {
	
	    		var te = this.elements;
	
	    		te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;
	    		te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;
	    		te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;
	
	    		return this;
	
	    	},
	
	    	determinant: function () {
	
	    		var te = this.elements;
	
	    		var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],
	    			d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],
	    			g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];
	
	    		return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;
	
	    	},
	
	    	getInverse: function ( matrix, throwOnDegenerate ) {
	
	    		if ( (matrix && matrix.isMatrix4) ) {
	
	    			console.error( "THREE.Matrix3.getInverse no longer takes a Matrix4 argument." );
	
	    		}
	
	    		var me = matrix.elements,
	    			te = this.elements,
	
	    			n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],
	    			n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],
	    			n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],
	
	    			t11 = n33 * n22 - n32 * n23,
	    			t12 = n32 * n13 - n33 * n12,
	    			t13 = n23 * n12 - n22 * n13,
	
	    			det = n11 * t11 + n21 * t12 + n31 * t13;
	
	    		if ( det === 0 ) {
	
	    			var msg = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
	
	    			if ( throwOnDegenerate === true ) {
	
	    				throw new Error( msg );
	
	    			} else {
	
	    				console.warn( msg );
	
	    			}
	
	    			return this.identity();
	    		}
	
	    		var detInv = 1 / det;
	
	    		te[ 0 ] = t11 * detInv;
	    		te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;
	    		te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;
	
	    		te[ 3 ] = t12 * detInv;
	    		te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;
	    		te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;
	
	    		te[ 6 ] = t13 * detInv;
	    		te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;
	    		te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;
	
	    		return this;
	
	    	},
	
	    	transpose: function () {
	
	    		var tmp, m = this.elements;
	
	    		tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;
	    		tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;
	    		tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;
	
	    		return this;
	
	    	},
	
	    	flattenToArrayOffset: function ( array, offset ) {
	
	    		console.warn( "THREE.Matrix3: .flattenToArrayOffset is deprecated " +
	    				"- just use .toArray instead." );
	
	    		return this.toArray( array, offset );
	
	    	},
	
	    	getNormalMatrix: function ( matrix4 ) {
	
	    		return this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();
	
	    	},
	
	    	transposeIntoArray: function ( r ) {
	
	    		var m = this.elements;
	
	    		r[ 0 ] = m[ 0 ];
	    		r[ 1 ] = m[ 3 ];
	    		r[ 2 ] = m[ 6 ];
	    		r[ 3 ] = m[ 1 ];
	    		r[ 4 ] = m[ 4 ];
	    		r[ 5 ] = m[ 7 ];
	    		r[ 6 ] = m[ 2 ];
	    		r[ 7 ] = m[ 5 ];
	    		r[ 8 ] = m[ 8 ];
	
	    		return this;
	
	    	},
	
	    	fromArray: function ( array, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		for( var i = 0; i < 9; i ++ ) {
	
	    			this.elements[ i ] = array[ i + offset ];
	
	    		}
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		var te = this.elements;
	
	    		array[ offset ] = te[ 0 ];
	    		array[ offset + 1 ] = te[ 1 ];
	    		array[ offset + 2 ] = te[ 2 ];
	
	    		array[ offset + 3 ] = te[ 3 ];
	    		array[ offset + 4 ] = te[ 4 ];
	    		array[ offset + 5 ] = te[ 5 ];
	
	    		array[ offset + 6 ] = te[ 6 ];
	    		array[ offset + 7 ] = te[ 7 ];
	    		array[ offset + 8 ]  = te[ 8 ];
	
	    		return array;
	
	    	}
	
	    };
	
	    /**
	     * @author bhouston / http://clara.io
	     */
	
	    function Plane( normal, constant ) {
	
	    	this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );
	    	this.constant = ( constant !== undefined ) ? constant : 0;
	
	    }
	
	    Plane.prototype = {
	
	    	constructor: Plane,
	
	    	set: function ( normal, constant ) {
	
	    		this.normal.copy( normal );
	    		this.constant = constant;
	
	    		return this;
	
	    	},
	
	    	setComponents: function ( x, y, z, w ) {
	
	    		this.normal.set( x, y, z );
	    		this.constant = w;
	
	    		return this;
	
	    	},
	
	    	setFromNormalAndCoplanarPoint: function ( normal, point ) {
	
	    		this.normal.copy( normal );
	    		this.constant = - point.dot( this.normal );	// must be this.normal, not normal, as this.normal is normalized
	
	    		return this;
	
	    	},
	
	    	setFromCoplanarPoints: function () {
	
	    		var v1 = new Vector3();
	    		var v2 = new Vector3();
	
	    		return function setFromCoplanarPoints( a, b, c ) {
	
	    			var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();
	
	    			// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
	
	    			this.setFromNormalAndCoplanarPoint( normal, a );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( plane ) {
	
	    		this.normal.copy( plane.normal );
	    		this.constant = plane.constant;
	
	    		return this;
	
	    	},
	
	    	normalize: function () {
	
	    		// Note: will lead to a divide by zero if the plane is invalid.
	
	    		var inverseNormalLength = 1.0 / this.normal.length();
	    		this.normal.multiplyScalar( inverseNormalLength );
	    		this.constant *= inverseNormalLength;
	
	    		return this;
	
	    	},
	
	    	negate: function () {
	
	    		this.constant *= - 1;
	    		this.normal.negate();
	
	    		return this;
	
	    	},
	
	    	distanceToPoint: function ( point ) {
	
	    		return this.normal.dot( point ) + this.constant;
	
	    	},
	
	    	distanceToSphere: function ( sphere ) {
	
	    		return this.distanceToPoint( sphere.center ) - sphere.radius;
	
	    	},
	
	    	projectPoint: function ( point, optionalTarget ) {
	
	    		return this.orthoPoint( point, optionalTarget ).sub( point ).negate();
	
	    	},
	
	    	orthoPoint: function ( point, optionalTarget ) {
	
	    		var perpendicularMagnitude = this.distanceToPoint( point );
	
	    		var result = optionalTarget || new Vector3();
	    		return result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );
	
	    	},
	
	    	intersectLine: function () {
	
	    		var v1 = new Vector3();
	
	    		return function intersectLine( line, optionalTarget ) {
	
	    			var result = optionalTarget || new Vector3();
	
	    			var direction = line.delta( v1 );
	
	    			var denominator = this.normal.dot( direction );
	
	    			if ( denominator === 0 ) {
	
	    				// line is coplanar, return origin
	    				if ( this.distanceToPoint( line.start ) === 0 ) {
	
	    					return result.copy( line.start );
	
	    				}
	
	    				// Unsure if this is the correct method to handle this case.
	    				return undefined;
	
	    			}
	
	    			var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;
	
	    			if ( t < 0 || t > 1 ) {
	
	    				return undefined;
	
	    			}
	
	    			return result.copy( direction ).multiplyScalar( t ).add( line.start );
	
	    		};
	
	    	}(),
	
	    	intersectsLine: function ( line ) {
	
	    		// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
	
	    		var startSign = this.distanceToPoint( line.start );
	    		var endSign = this.distanceToPoint( line.end );
	
	    		return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );
	
	    	},
	
	    	intersectsBox: function ( box ) {
	
	    		return box.intersectsPlane( this );
	
	    	},
	
	    	intersectsSphere: function ( sphere ) {
	
	    		return sphere.intersectsPlane( this );
	
	    	},
	
	    	coplanarPoint: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return result.copy( this.normal ).multiplyScalar( - this.constant );
	
	    	},
	
	    	applyMatrix4: function () {
	
	    		var v1 = new Vector3();
	    		var m1 = new Matrix3();
	
	    		return function applyMatrix4( matrix, optionalNormalMatrix ) {
	
	    			var referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );
	
	    			// transform normal based on theory here:
	    			// http://www.songho.ca/opengl/gl_normaltransform.html
	    			var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );
	    			var normal = this.normal.applyMatrix3( normalMatrix ).normalize();
	
	    			// recalculate constant (like in setFromNormalAndCoplanarPoint)
	    			this.constant = - referencePoint.dot( normal );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	translate: function ( offset ) {
	
	    		this.constant = this.constant - offset.dot( this.normal );
	
	    		return this;
	
	    	},
	
	    	equals: function ( plane ) {
	
	    		return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     * @author bhouston / http://clara.io
	     */
	
	    function Frustum( p0, p1, p2, p3, p4, p5 ) {
	
	    	this.planes = [
	
	    		( p0 !== undefined ) ? p0 : new Plane(),
	    		( p1 !== undefined ) ? p1 : new Plane(),
	    		( p2 !== undefined ) ? p2 : new Plane(),
	    		( p3 !== undefined ) ? p3 : new Plane(),
	    		( p4 !== undefined ) ? p4 : new Plane(),
	    		( p5 !== undefined ) ? p5 : new Plane()
	
	    	];
	
	    }
	
	    Frustum.prototype = {
	
	    	constructor: Frustum,
	
	    	set: function ( p0, p1, p2, p3, p4, p5 ) {
	
	    		var planes = this.planes;
	
	    		planes[ 0 ].copy( p0 );
	    		planes[ 1 ].copy( p1 );
	    		planes[ 2 ].copy( p2 );
	    		planes[ 3 ].copy( p3 );
	    		planes[ 4 ].copy( p4 );
	    		planes[ 5 ].copy( p5 );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( frustum ) {
	
	    		var planes = this.planes;
	
	    		for ( var i = 0; i < 6; i ++ ) {
	
	    			planes[ i ].copy( frustum.planes[ i ] );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	setFromMatrix: function ( m ) {
	
	    		var planes = this.planes;
	    		var me = m.elements;
	    		var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];
	    		var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];
	    		var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];
	    		var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];
	
	    		planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
	    		planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
	    		planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
	    		planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
	    		planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
	    		planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();
	
	    		return this;
	
	    	},
	
	    	intersectsObject: function () {
	
	    		var sphere = new Sphere();
	
	    		return function intersectsObject( object ) {
	
	    			var geometry = object.geometry;
	
	    			if ( geometry.boundingSphere === null )
	    				geometry.computeBoundingSphere();
	
	    			sphere.copy( geometry.boundingSphere )
	    				.applyMatrix4( object.matrixWorld );
	
	    			return this.intersectsSphere( sphere );
	
	    		};
	
	    	}(),
	
	    	intersectsSprite: function () {
	
	    		var sphere = new Sphere();
	
	    		return function intersectsSprite( sprite ) {
	
	    			sphere.center.set( 0, 0, 0 );
	    			sphere.radius = 0.7071067811865476;
	    			sphere.applyMatrix4( sprite.matrixWorld );
	
	    			return this.intersectsSphere( sphere );
	
	    		};
	
	    	}(),
	
	    	intersectsSphere: function ( sphere ) {
	
	    		var planes = this.planes;
	    		var center = sphere.center;
	    		var negRadius = - sphere.radius;
	
	    		for ( var i = 0; i < 6; i ++ ) {
	
	    			var distance = planes[ i ].distanceToPoint( center );
	
	    			if ( distance < negRadius ) {
	
	    				return false;
	
	    			}
	
	    		}
	
	    		return true;
	
	    	},
	
	    	intersectsBox: function () {
	
	    		var p1 = new Vector3(),
	    			p2 = new Vector3();
	
	    		return function intersectsBox( box ) {
	
	    			var planes = this.planes;
	
	    			for ( var i = 0; i < 6 ; i ++ ) {
	
	    				var plane = planes[ i ];
	
	    				p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;
	    				p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;
	    				p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;
	    				p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;
	    				p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;
	    				p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;
	
	    				var d1 = plane.distanceToPoint( p1 );
	    				var d2 = plane.distanceToPoint( p2 );
	
	    				// if both outside plane, no intersection
	
	    				if ( d1 < 0 && d2 < 0 ) {
	
	    					return false;
	
	    				}
	
	    			}
	
	    			return true;
	
	    		};
	
	    	}(),
	
	
	    	containsPoint: function ( point ) {
	
	    		var planes = this.planes;
	
	    		for ( var i = 0; i < 6; i ++ ) {
	
	    			if ( planes[ i ].distanceToPoint( point ) < 0 ) {
	
	    				return false;
	
	    			}
	
	    		}
	
	    		return true;
	
	    	}
	
	    };
	
	    function WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {
	
	    	var _gl = _renderer.context,
	    	_state = _renderer.state,
	    	_frustum = new Frustum(),
	    	_projScreenMatrix = new Matrix4(),
	
	    	_lightShadows = _lights.shadows,
	
	    	_shadowMapSize = new Vector2(),
	    	_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),
	
	    	_lookTarget = new Vector3(),
	    	_lightPositionWorld = new Vector3(),
	
	    	_renderList = [],
	
	    	_MorphingFlag = 1,
	    	_SkinningFlag = 2,
	
	    	_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,
	
	    	_depthMaterials = new Array( _NumberOfMaterialVariants ),
	    	_distanceMaterials = new Array( _NumberOfMaterialVariants ),
	
	    	_materialCache = {};
	
	    	var cubeDirections = [
	    		new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),
	    		new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )
	    	];
	
	    	var cubeUps = [
	    		new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),
	    		new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )
	    	];
	
	    	var cube2DViewPorts = [
	    		new Vector4(), new Vector4(), new Vector4(),
	    		new Vector4(), new Vector4(), new Vector4()
	    	];
	
	    	// init
	
	    	var depthMaterialTemplate = new MeshDepthMaterial();
	    	depthMaterialTemplate.depthPacking = RGBADepthPacking;
	    	depthMaterialTemplate.clipping = true;
	
	    	var distanceShader = ShaderLib[ "distanceRGBA" ];
	    	var distanceUniforms = exports.UniformsUtils.clone( distanceShader.uniforms );
	
	    	for ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {
	
	    		var useMorphing = ( i & _MorphingFlag ) !== 0;
	    		var useSkinning = ( i & _SkinningFlag ) !== 0;
	
	    		var depthMaterial = depthMaterialTemplate.clone();
	    		depthMaterial.morphTargets = useMorphing;
	    		depthMaterial.skinning = useSkinning;
	
	    		_depthMaterials[ i ] = depthMaterial;
	
	    		var distanceMaterial = new ShaderMaterial( {
	    			defines: {
	    				'USE_SHADOWMAP': ''
	    			},
	    			uniforms: distanceUniforms,
	    			vertexShader: distanceShader.vertexShader,
	    			fragmentShader: distanceShader.fragmentShader,
	    			morphTargets: useMorphing,
	    			skinning: useSkinning,
	    			clipping: true
	    		} );
	
	    		_distanceMaterials[ i ] = distanceMaterial;
	
	    	}
	
	    	//
	
	    	var scope = this;
	
	    	this.enabled = false;
	
	    	this.autoUpdate = true;
	    	this.needsUpdate = false;
	
	    	this.type = PCFShadowMap;
	
	    	this.renderReverseSided = true;
	    	this.renderSingleSided = true;
	
	    	this.render = function ( scene, camera ) {
	
	    		if ( scope.enabled === false ) return;
	    		if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;
	
	    		if ( _lightShadows.length === 0 ) return;
	
	    		// Set GL state for depth map.
	    		_state.clearColor( 1, 1, 1, 1 );
	    		_state.disable( _gl.BLEND );
	    		_state.setDepthTest( true );
	    		_state.setScissorTest( false );
	
	    		// render depth map
	
	    		var faceCount, isPointLight;
	
	    		for ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {
	
	    			var light = _lightShadows[ i ];
	    			var shadow = light.shadow;
	
	    			if ( shadow === undefined ) {
	
	    				console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );
	    				continue;
	
	    			}
	
	    			var shadowCamera = shadow.camera;
	
	    			_shadowMapSize.copy( shadow.mapSize );
	    			_shadowMapSize.min( _maxShadowMapSize );
	
	    			if ( (light && light.isPointLight) ) {
	
	    				faceCount = 6;
	    				isPointLight = true;
	
	    				var vpWidth = _shadowMapSize.x;
	    				var vpHeight = _shadowMapSize.y;
	
	    				// These viewports map a cube-map onto a 2D texture with the
	    				// following orientation:
	    				//
	    				//  xzXZ
	    				//   y Y
	    				//
	    				// X - Positive x direction
	    				// x - Negative x direction
	    				// Y - Positive y direction
	    				// y - Negative y direction
	    				// Z - Positive z direction
	    				// z - Negative z direction
	
	    				// positive X
	    				cube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );
	    				// negative X
	    				cube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );
	    				// positive Z
	    				cube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );
	    				// negative Z
	    				cube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );
	    				// positive Y
	    				cube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );
	    				// negative Y
	    				cube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );
	
	    				_shadowMapSize.x *= 4.0;
	    				_shadowMapSize.y *= 2.0;
	
	    			} else {
	
	    				faceCount = 1;
	    				isPointLight = false;
	
	    			}
	
	    			if ( shadow.map === null ) {
	
	    				var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };
	
	    				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
	
	    				shadowCamera.updateProjectionMatrix();
	
	    			}
	
	    			if ( (shadow && shadow.isSpotLightShadow) ) {
	
	    				shadow.update( light );
	
	    			}
	
	    			var shadowMap = shadow.map;
	    			var shadowMatrix = shadow.matrix;
	
	    			_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
	    			shadowCamera.position.copy( _lightPositionWorld );
	
	    			_renderer.setRenderTarget( shadowMap );
	    			_renderer.clear();
	
	    			// render shadow map for each cube face (if omni-directional) or
	    			// run a single pass if not
	
	    			for ( var face = 0; face < faceCount; face ++ ) {
	
	    				if ( isPointLight ) {
	
	    					_lookTarget.copy( shadowCamera.position );
	    					_lookTarget.add( cubeDirections[ face ] );
	    					shadowCamera.up.copy( cubeUps[ face ] );
	    					shadowCamera.lookAt( _lookTarget );
	
	    					var vpDimensions = cube2DViewPorts[ face ];
	    					_state.viewport( vpDimensions );
	
	    				} else {
	
	    					_lookTarget.setFromMatrixPosition( light.target.matrixWorld );
	    					shadowCamera.lookAt( _lookTarget );
	
	    				}
	
	    				shadowCamera.updateMatrixWorld();
	    				shadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );
	
	    				// compute shadow matrix
	
	    				shadowMatrix.set(
	    					0.5, 0.0, 0.0, 0.5,
	    					0.0, 0.5, 0.0, 0.5,
	    					0.0, 0.0, 0.5, 0.5,
	    					0.0, 0.0, 0.0, 1.0
	    				);
	
	    				shadowMatrix.multiply( shadowCamera.projectionMatrix );
	    				shadowMatrix.multiply( shadowCamera.matrixWorldInverse );
	
	    				// update camera matrices and frustum
	
	    				_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
	    				_frustum.setFromMatrix( _projScreenMatrix );
	
	    				// set object matrices & frustum culling
	
	    				_renderList.length = 0;
	
	    				projectObject( scene, camera, shadowCamera );
	
	    				// render shadow map
	    				// render regular objects
	
	    				for ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {
	
	    					var object = _renderList[ j ];
	    					var geometry = _objects.update( object );
	    					var material = object.material;
	
	    					if ( (material && material.isMultiMaterial) ) {
	
	    						var groups = geometry.groups;
	    						var materials = material.materials;
	
	    						for ( var k = 0, kl = groups.length; k < kl; k ++ ) {
	
	    							var group = groups[ k ];
	    							var groupMaterial = materials[ group.materialIndex ];
	
	    							if ( groupMaterial.visible === true ) {
	
	    								var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );
	    								_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );
	
	    							}
	
	    						}
	
	    					} else {
	
	    						var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );
	    						_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		// Restore GL state.
	    		var clearColor = _renderer.getClearColor(),
	    		clearAlpha = _renderer.getClearAlpha();
	    		_renderer.setClearColor( clearColor, clearAlpha );
	
	    		scope.needsUpdate = false;
	
	    	};
	
	    	function getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {
	
	    		var geometry = object.geometry;
	
	    		var result = null;
	
	    		var materialVariants = _depthMaterials;
	    		var customMaterial = object.customDepthMaterial;
	
	    		if ( isPointLight ) {
	
	    			materialVariants = _distanceMaterials;
	    			customMaterial = object.customDistanceMaterial;
	
	    		}
	
	    		if ( ! customMaterial ) {
	
	    			var useMorphing = false;
	
	    			if ( material.morphTargets ) {
	
	    				if ( (geometry && geometry.isBufferGeometry) ) {
	
	    					useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;
	
	    				} else if ( (geometry && geometry.isGeometry) ) {
	
	    					useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;
	
	    				}
	
	    			}
	
	    			var useSkinning = object.isSkinnedMesh && material.skinning;
	
	    			var variantIndex = 0;
	
	    			if ( useMorphing ) variantIndex |= _MorphingFlag;
	    			if ( useSkinning ) variantIndex |= _SkinningFlag;
	
	    			result = materialVariants[ variantIndex ];
	
	    		} else {
	
	    			result = customMaterial;
	
	    		}
	
	    		if ( _renderer.localClippingEnabled &&
	    			 material.clipShadows === true &&
	    				material.clippingPlanes.length !== 0 ) {
	
	    			// in this case we need a unique material instance reflecting the
	    			// appropriate state
	
	    			var keyA = result.uuid, keyB = material.uuid;
	
	    			var materialsForVariant = _materialCache[ keyA ];
	
	    			if ( materialsForVariant === undefined ) {
	
	    				materialsForVariant = {};
	    				_materialCache[ keyA ] = materialsForVariant;
	
	    			}
	
	    			var cachedMaterial = materialsForVariant[ keyB ];
	
	    			if ( cachedMaterial === undefined ) {
	
	    				cachedMaterial = result.clone();
	    				materialsForVariant[ keyB ] = cachedMaterial;
	
	    			}
	
	    			result = cachedMaterial;
	
	    		}
	
	    		result.visible = material.visible;
	    		result.wireframe = material.wireframe;
	
	    		var side = material.side;
	
	    		if ( scope.renderSingleSided && side == DoubleSide ) {
	
	    			side = FrontSide;
	
	    		}
	
	    		if ( scope.renderReverseSided ) {
	
	    			if ( side === FrontSide ) side = BackSide;
	    			else if ( side === BackSide ) side = FrontSide;
	
	    		}
	
	    		result.side = side;
	
	    		result.clipShadows = material.clipShadows;
	    		result.clippingPlanes = material.clippingPlanes;
	
	    		result.wireframeLinewidth = material.wireframeLinewidth;
	    		result.linewidth = material.linewidth;
	
	    		if ( isPointLight && result.uniforms.lightPos !== undefined ) {
	
	    			result.uniforms.lightPos.value.copy( lightPositionWorld );
	
	    		}
	
	    		return result;
	
	    	}
	
	    	function projectObject( object, camera, shadowCamera ) {
	
	    		if ( object.visible === false ) return;
	
	    		var visible = ( object.layers.mask & camera.layers.mask ) !== 0;
	
	    		if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {
	
	    			if ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {
	
	    				var material = object.material;
	
	    				if ( material.visible === true ) {
	
	    					object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );
	    					_renderList.push( object );
	
	    				}
	
	    			}
	
	    		}
	
	    		var children = object.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			projectObject( children[ i ], camera, shadowCamera );
	
	    		}
	
	    	}
	
	    }
	
	    /**
	     * @author bhouston / http://clara.io
	     */
	
	    function Ray( origin, direction ) {
	
	    	this.origin = ( origin !== undefined ) ? origin : new Vector3();
	    	this.direction = ( direction !== undefined ) ? direction : new Vector3();
	
	    }
	
	    Ray.prototype = {
	
	    	constructor: Ray,
	
	    	set: function ( origin, direction ) {
	
	    		this.origin.copy( origin );
	    		this.direction.copy( direction );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( ray ) {
	
	    		this.origin.copy( ray.origin );
	    		this.direction.copy( ray.direction );
	
	    		return this;
	
	    	},
	
	    	at: function ( t, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	
	    		return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );
	
	    	},
	
	    	lookAt: function ( v ) {
	
	    		this.direction.copy( v ).sub( this.origin ).normalize();
	
	    		return this;
	
	    	},
	
	    	recast: function () {
	
	    		var v1 = new Vector3();
	
	    		return function recast( t ) {
	
	    			this.origin.copy( this.at( t, v1 ) );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	closestPointToPoint: function ( point, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		result.subVectors( point, this.origin );
	    		var directionDistance = result.dot( this.direction );
	
	    		if ( directionDistance < 0 ) {
	
	    			return result.copy( this.origin );
	
	    		}
	
	    		return result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );
	
	    	},
	
	    	distanceToPoint: function ( point ) {
	
	    		return Math.sqrt( this.distanceSqToPoint( point ) );
	
	    	},
	
	    	distanceSqToPoint: function () {
	
	    		var v1 = new Vector3();
	
	    		return function distanceSqToPoint( point ) {
	
	    			var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );
	
	    			// point behind the ray
	
	    			if ( directionDistance < 0 ) {
	
	    				return this.origin.distanceToSquared( point );
	
	    			}
	
	    			v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );
	
	    			return v1.distanceToSquared( point );
	
	    		};
	
	    	}(),
	
	    	distanceSqToSegment: function () {
	
	    		var segCenter = new Vector3();
	    		var segDir = new Vector3();
	    		var diff = new Vector3();
	
	    		return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {
	
	    			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
	    			// It returns the min distance between the ray and the segment
	    			// defined by v0 and v1
	    			// It can also set two optional targets :
	    			// - The closest point on the ray
	    			// - The closest point on the segment
	
	    			segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );
	    			segDir.copy( v1 ).sub( v0 ).normalize();
	    			diff.copy( this.origin ).sub( segCenter );
	
	    			var segExtent = v0.distanceTo( v1 ) * 0.5;
	    			var a01 = - this.direction.dot( segDir );
	    			var b0 = diff.dot( this.direction );
	    			var b1 = - diff.dot( segDir );
	    			var c = diff.lengthSq();
	    			var det = Math.abs( 1 - a01 * a01 );
	    			var s0, s1, sqrDist, extDet;
	
	    			if ( det > 0 ) {
	
	    				// The ray and segment are not parallel.
	
	    				s0 = a01 * b1 - b0;
	    				s1 = a01 * b0 - b1;
	    				extDet = segExtent * det;
	
	    				if ( s0 >= 0 ) {
	
	    					if ( s1 >= - extDet ) {
	
	    						if ( s1 <= extDet ) {
	
	    							// region 0
	    							// Minimum at interior points of ray and segment.
	
	    							var invDet = 1 / det;
	    							s0 *= invDet;
	    							s1 *= invDet;
	    							sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;
	
	    						} else {
	
	    							// region 1
	
	    							s1 = segExtent;
	    							s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
	    							sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;
	
	    						}
	
	    					} else {
	
	    						// region 5
	
	    						s1 = - segExtent;
	    						s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
	    						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;
	
	    					}
	
	    				} else {
	
	    					if ( s1 <= - extDet ) {
	
	    						// region 4
	
	    						s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );
	    						s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
	    						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;
	
	    					} else if ( s1 <= extDet ) {
	
	    						// region 3
	
	    						s0 = 0;
	    						s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );
	    						sqrDist = s1 * ( s1 + 2 * b1 ) + c;
	
	    					} else {
	
	    						// region 2
	
	    						s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );
	    						s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
	    						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;
	
	    					}
	
	    				}
	
	    			} else {
	
	    				// Ray and segment are parallel.
	
	    				s1 = ( a01 > 0 ) ? - segExtent : segExtent;
	    				s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
	    				sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;
	
	    			}
	
	    			if ( optionalPointOnRay ) {
	
	    				optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );
	
	    			}
	
	    			if ( optionalPointOnSegment ) {
	
	    				optionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );
	
	    			}
	
	    			return sqrDist;
	
	    		};
	
	    	}(),
	
	    	intersectSphere: function () {
	
	    		var v1 = new Vector3();
	
	    		return function intersectSphere( sphere, optionalTarget ) {
	
	    			v1.subVectors( sphere.center, this.origin );
	    			var tca = v1.dot( this.direction );
	    			var d2 = v1.dot( v1 ) - tca * tca;
	    			var radius2 = sphere.radius * sphere.radius;
	
	    			if ( d2 > radius2 ) return null;
	
	    			var thc = Math.sqrt( radius2 - d2 );
	
	    			// t0 = first intersect point - entrance on front of sphere
	    			var t0 = tca - thc;
	
	    			// t1 = second intersect point - exit point on back of sphere
	    			var t1 = tca + thc;
	
	    			// test to see if both t0 and t1 are behind the ray - if so, return null
	    			if ( t0 < 0 && t1 < 0 ) return null;
	
	    			// test to see if t0 is behind the ray:
	    			// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
	    			// in order to always return an intersect point that is in front of the ray.
	    			if ( t0 < 0 ) return this.at( t1, optionalTarget );
	
	    			// else t0 is in front of the ray, so return the first collision point scaled by t0
	    			return this.at( t0, optionalTarget );
	
	    		};
	
	    	}(),
	
	    	intersectsSphere: function ( sphere ) {
	
	    		return this.distanceToPoint( sphere.center ) <= sphere.radius;
	
	    	},
	
	    	distanceToPlane: function ( plane ) {
	
	    		var denominator = plane.normal.dot( this.direction );
	
	    		if ( denominator === 0 ) {
	
	    			// line is coplanar, return origin
	    			if ( plane.distanceToPoint( this.origin ) === 0 ) {
	
	    				return 0;
	
	    			}
	
	    			// Null is preferable to undefined since undefined means.... it is undefined
	
	    			return null;
	
	    		}
	
	    		var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;
	
	    		// Return if the ray never intersects the plane
	
	    		return t >= 0 ? t :  null;
	
	    	},
	
	    	intersectPlane: function ( plane, optionalTarget ) {
	
	    		var t = this.distanceToPlane( plane );
	
	    		if ( t === null ) {
	
	    			return null;
	
	    		}
	
	    		return this.at( t, optionalTarget );
	
	    	},
	
	
	
	    	intersectsPlane: function ( plane ) {
	
	    		// check if the ray lies on the plane first
	
	    		var distToPoint = plane.distanceToPoint( this.origin );
	
	    		if ( distToPoint === 0 ) {
	
	    			return true;
	
	    		}
	
	    		var denominator = plane.normal.dot( this.direction );
	
	    		if ( denominator * distToPoint < 0 ) {
	
	    			return true;
	
	    		}
	
	    		// ray origin is behind the plane (and is pointing behind it)
	
	    		return false;
	
	    	},
	
	    	intersectBox: function ( box, optionalTarget ) {
	
	    		var tmin, tmax, tymin, tymax, tzmin, tzmax;
	
	    		var invdirx = 1 / this.direction.x,
	    			invdiry = 1 / this.direction.y,
	    			invdirz = 1 / this.direction.z;
	
	    		var origin = this.origin;
	
	    		if ( invdirx >= 0 ) {
	
	    			tmin = ( box.min.x - origin.x ) * invdirx;
	    			tmax = ( box.max.x - origin.x ) * invdirx;
	
	    		} else {
	
	    			tmin = ( box.max.x - origin.x ) * invdirx;
	    			tmax = ( box.min.x - origin.x ) * invdirx;
	
	    		}
	
	    		if ( invdiry >= 0 ) {
	
	    			tymin = ( box.min.y - origin.y ) * invdiry;
	    			tymax = ( box.max.y - origin.y ) * invdiry;
	
	    		} else {
	
	    			tymin = ( box.max.y - origin.y ) * invdiry;
	    			tymax = ( box.min.y - origin.y ) * invdiry;
	
	    		}
	
	    		if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;
	
	    		// These lines also handle the case where tmin or tmax is NaN
	    		// (result of 0 * Infinity). x !== x returns true if x is NaN
	
	    		if ( tymin > tmin || tmin !== tmin ) tmin = tymin;
	
	    		if ( tymax < tmax || tmax !== tmax ) tmax = tymax;
	
	    		if ( invdirz >= 0 ) {
	
	    			tzmin = ( box.min.z - origin.z ) * invdirz;
	    			tzmax = ( box.max.z - origin.z ) * invdirz;
	
	    		} else {
	
	    			tzmin = ( box.max.z - origin.z ) * invdirz;
	    			tzmax = ( box.min.z - origin.z ) * invdirz;
	
	    		}
	
	    		if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;
	
	    		if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;
	
	    		if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;
	
	    		//return point closest to the ray (positive side)
	
	    		if ( tmax < 0 ) return null;
	
	    		return this.at( tmin >= 0 ? tmin : tmax, optionalTarget );
	
	    	},
	
	    	intersectsBox: ( function () {
	
	    		var v = new Vector3();
	
	    		return function intersectsBox( box ) {
	
	    			return this.intersectBox( box, v ) !== null;
	
	    		};
	
	    	} )(),
	
	    	intersectTriangle: function () {
	
	    		// Compute the offset origin, edges, and normal.
	    		var diff = new Vector3();
	    		var edge1 = new Vector3();
	    		var edge2 = new Vector3();
	    		var normal = new Vector3();
	
	    		return function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {
	
	    			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
	
	    			edge1.subVectors( b, a );
	    			edge2.subVectors( c, a );
	    			normal.crossVectors( edge1, edge2 );
	
	    			// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
	    			// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
	    			//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
	    			//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
	    			//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
	    			var DdN = this.direction.dot( normal );
	    			var sign;
	
	    			if ( DdN > 0 ) {
	
	    				if ( backfaceCulling ) return null;
	    				sign = 1;
	
	    			} else if ( DdN < 0 ) {
	
	    				sign = - 1;
	    				DdN = - DdN;
	
	    			} else {
	
	    				return null;
	
	    			}
	
	    			diff.subVectors( this.origin, a );
	    			var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );
	
	    			// b1 < 0, no intersection
	    			if ( DdQxE2 < 0 ) {
	
	    				return null;
	
	    			}
	
	    			var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );
	
	    			// b2 < 0, no intersection
	    			if ( DdE1xQ < 0 ) {
	
	    				return null;
	
	    			}
	
	    			// b1+b2 > 1, no intersection
	    			if ( DdQxE2 + DdE1xQ > DdN ) {
	
	    				return null;
	
	    			}
	
	    			// Line intersects triangle, check if ray does.
	    			var QdN = - sign * diff.dot( normal );
	
	    			// t < 0, no intersection
	    			if ( QdN < 0 ) {
	
	    				return null;
	
	    			}
	
	    			// Ray intersects triangle.
	    			return this.at( QdN / DdN, optionalTarget );
	
	    		};
	
	    	}(),
	
	    	applyMatrix4: function ( matrix4 ) {
	
	    		this.direction.add( this.origin ).applyMatrix4( matrix4 );
	    		this.origin.applyMatrix4( matrix4 );
	    		this.direction.sub( this.origin );
	    		this.direction.normalize();
	
	    		return this;
	
	    	},
	
	    	equals: function ( ray ) {
	
	    		return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author WestLangley / http://github.com/WestLangley
	     * @author bhouston / http://clara.io
	     */
	
	    function Euler( x, y, z, order ) {
	
	    	this._x = x || 0;
	    	this._y = y || 0;
	    	this._z = z || 0;
	    	this._order = order || Euler.DefaultOrder;
	
	    }
	
	    Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];
	
	    Euler.DefaultOrder = 'XYZ';
	
	    Euler.prototype = {
	
	    	constructor: Euler,
	
	    	isEuler: true,
	
	    	get x () {
	
	    		return this._x;
	
	    	},
	
	    	set x ( value ) {
	
	    		this._x = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get y () {
	
	    		return this._y;
	
	    	},
	
	    	set y ( value ) {
	
	    		this._y = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get z () {
	
	    		return this._z;
	
	    	},
	
	    	set z ( value ) {
	
	    		this._z = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	get order () {
	
	    		return this._order;
	
	    	},
	
	    	set order ( value ) {
	
	    		this._order = value;
	    		this.onChangeCallback();
	
	    	},
	
	    	set: function ( x, y, z, order ) {
	
	    		this._x = x;
	    		this._y = y;
	    		this._z = z;
	    		this._order = order || this._order;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor( this._x, this._y, this._z, this._order );
	
	    	},
	
	    	copy: function ( euler ) {
	
	    		this._x = euler._x;
	    		this._y = euler._y;
	    		this._z = euler._z;
	    		this._order = euler._order;
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromRotationMatrix: function ( m, order, update ) {
	
	    		var clamp = exports.Math.clamp;
	
	    		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
	
	    		var te = m.elements;
	    		var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];
	    		var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];
	    		var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];
	
	    		order = order || this._order;
	
	    		if ( order === 'XYZ' ) {
	
	    			this._y = Math.asin( clamp( m13, - 1, 1 ) );
	
	    			if ( Math.abs( m13 ) < 0.99999 ) {
	
	    				this._x = Math.atan2( - m23, m33 );
	    				this._z = Math.atan2( - m12, m11 );
	
	    			} else {
	
	    				this._x = Math.atan2( m32, m22 );
	    				this._z = 0;
	
	    			}
	
	    		} else if ( order === 'YXZ' ) {
	
	    			this._x = Math.asin( - clamp( m23, - 1, 1 ) );
	
	    			if ( Math.abs( m23 ) < 0.99999 ) {
	
	    				this._y = Math.atan2( m13, m33 );
	    				this._z = Math.atan2( m21, m22 );
	
	    			} else {
	
	    				this._y = Math.atan2( - m31, m11 );
	    				this._z = 0;
	
	    			}
	
	    		} else if ( order === 'ZXY' ) {
	
	    			this._x = Math.asin( clamp( m32, - 1, 1 ) );
	
	    			if ( Math.abs( m32 ) < 0.99999 ) {
	
	    				this._y = Math.atan2( - m31, m33 );
	    				this._z = Math.atan2( - m12, m22 );
	
	    			} else {
	
	    				this._y = 0;
	    				this._z = Math.atan2( m21, m11 );
	
	    			}
	
	    		} else if ( order === 'ZYX' ) {
	
	    			this._y = Math.asin( - clamp( m31, - 1, 1 ) );
	
	    			if ( Math.abs( m31 ) < 0.99999 ) {
	
	    				this._x = Math.atan2( m32, m33 );
	    				this._z = Math.atan2( m21, m11 );
	
	    			} else {
	
	    				this._x = 0;
	    				this._z = Math.atan2( - m12, m22 );
	
	    			}
	
	    		} else if ( order === 'YZX' ) {
	
	    			this._z = Math.asin( clamp( m21, - 1, 1 ) );
	
	    			if ( Math.abs( m21 ) < 0.99999 ) {
	
	    				this._x = Math.atan2( - m23, m22 );
	    				this._y = Math.atan2( - m31, m11 );
	
	    			} else {
	
	    				this._x = 0;
	    				this._y = Math.atan2( m13, m33 );
	
	    			}
	
	    		} else if ( order === 'XZY' ) {
	
	    			this._z = Math.asin( - clamp( m12, - 1, 1 ) );
	
	    			if ( Math.abs( m12 ) < 0.99999 ) {
	
	    				this._x = Math.atan2( m32, m22 );
	    				this._y = Math.atan2( m13, m11 );
	
	    			} else {
	
	    				this._x = Math.atan2( - m23, m33 );
	    				this._y = 0;
	
	    			}
	
	    		} else {
	
	    			console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );
	
	    		}
	
	    		this._order = order;
	
	    		if ( update !== false ) this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	setFromQuaternion: function () {
	
	    		var matrix;
	
	    		return function setFromQuaternion( q, order, update ) {
	
	    			if ( matrix === undefined ) matrix = new Matrix4();
	
	    			matrix.makeRotationFromQuaternion( q );
	
	    			return this.setFromRotationMatrix( matrix, order, update );
	
	    		};
	
	    	}(),
	
	    	setFromVector3: function ( v, order ) {
	
	    		return this.set( v.x, v.y, v.z, order || this._order );
	
	    	},
	
	    	reorder: function () {
	
	    		// WARNING: this discards revolution information -bhouston
	
	    		var q = new Quaternion();
	
	    		return function reorder( newOrder ) {
	
	    			q.setFromEuler( this );
	
	    			return this.setFromQuaternion( q, newOrder );
	
	    		};
	
	    	}(),
	
	    	equals: function ( euler ) {
	
	    		return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );
	
	    	},
	
	    	fromArray: function ( array ) {
	
	    		this._x = array[ 0 ];
	    		this._y = array[ 1 ];
	    		this._z = array[ 2 ];
	    		if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];
	
	    		this.onChangeCallback();
	
	    		return this;
	
	    	},
	
	    	toArray: function ( array, offset ) {
	
	    		if ( array === undefined ) array = [];
	    		if ( offset === undefined ) offset = 0;
	
	    		array[ offset ] = this._x;
	    		array[ offset + 1 ] = this._y;
	    		array[ offset + 2 ] = this._z;
	    		array[ offset + 3 ] = this._order;
	
	    		return array;
	
	    	},
	
	    	toVector3: function ( optionalResult ) {
	
	    		if ( optionalResult ) {
	
	    			return optionalResult.set( this._x, this._y, this._z );
	
	    		} else {
	
	    			return new Vector3( this._x, this._y, this._z );
	
	    		}
	
	    	},
	
	    	onChange: function ( callback ) {
	
	    		this.onChangeCallback = callback;
	
	    		return this;
	
	    	},
	
	    	onChangeCallback: function () {}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Layers() {
	
	    	this.mask = 1;
	
	    }
	
	    Layers.prototype = {
	
	    	constructor: Layers,
	
	    	set: function ( channel ) {
	
	    		this.mask = 1 << channel;
	
	    	},
	
	    	enable: function ( channel ) {
	
	    		this.mask |= 1 << channel;
	
	    	},
	
	    	toggle: function ( channel ) {
	
	    		this.mask ^= 1 << channel;
	
	    	},
	
	    	disable: function ( channel ) {
	
	    		this.mask &= ~ ( 1 << channel );
	
	    	},
	
	    	test: function ( layers ) {
	
	    		return ( this.mask & layers.mask ) !== 0;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author WestLangley / http://github.com/WestLangley
	     * @author elephantatwork / www.elephantatwork.ch
	     */
	
	    function Object3D() {
	
	    	Object.defineProperty( this, 'id', { value: Object3DIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.type = 'Object3D';
	
	    	this.parent = null;
	    	this.children = [];
	
	    	this.up = Object3D.DefaultUp.clone();
	
	    	var position = new Vector3();
	    	var rotation = new Euler();
	    	var quaternion = new Quaternion();
	    	var scale = new Vector3( 1, 1, 1 );
	
	    	function onRotationChange() {
	
	    		quaternion.setFromEuler( rotation, false );
	
	    	}
	
	    	function onQuaternionChange() {
	
	    		rotation.setFromQuaternion( quaternion, undefined, false );
	
	    	}
	
	    	rotation.onChange( onRotationChange );
	    	quaternion.onChange( onQuaternionChange );
	
	    	Object.defineProperties( this, {
	    		position: {
	    			enumerable: true,
	    			value: position
	    		},
	    		rotation: {
	    			enumerable: true,
	    			value: rotation
	    		},
	    		quaternion: {
	    			enumerable: true,
	    			value: quaternion
	    		},
	    		scale: {
	    			enumerable: true,
	    			value: scale
	    		},
	    		modelViewMatrix: {
	    			value: new Matrix4()
	    		},
	    		normalMatrix: {
	    			value: new Matrix3()
	    		}
	    	} );
	
	    	this.matrix = new Matrix4();
	    	this.matrixWorld = new Matrix4();
	
	    	this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;
	    	this.matrixWorldNeedsUpdate = false;
	
	    	this.layers = new Layers();
	    	this.visible = true;
	
	    	this.castShadow = false;
	    	this.receiveShadow = false;
	
	    	this.frustumCulled = true;
	    	this.renderOrder = 0;
	
	    	this.userData = {};
	
	    	this.onBeforeRender = null;
	
	    }
	
	    Object3D.DefaultUp = new Vector3( 0, 1, 0 );
	    Object3D.DefaultMatrixAutoUpdate = true;
	
	    Object.assign( Object3D.prototype, EventDispatcher.prototype, {
	
	    	isObject3D: true,
	
	    	applyMatrix: function ( matrix ) {
	
	    		this.matrix.multiplyMatrices( matrix, this.matrix );
	
	    		this.matrix.decompose( this.position, this.quaternion, this.scale );
	
	    	},
	
	    	setRotationFromAxisAngle: function ( axis, angle ) {
	
	    		// assumes axis is normalized
	
	    		this.quaternion.setFromAxisAngle( axis, angle );
	
	    	},
	
	    	setRotationFromEuler: function ( euler ) {
	
	    		this.quaternion.setFromEuler( euler, true );
	
	    	},
	
	    	setRotationFromMatrix: function ( m ) {
	
	    		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
	
	    		this.quaternion.setFromRotationMatrix( m );
	
	    	},
	
	    	setRotationFromQuaternion: function ( q ) {
	
	    		// assumes q is normalized
	
	    		this.quaternion.copy( q );
	
	    	},
	
	    	rotateOnAxis: function () {
	
	    		// rotate object on axis in object space
	    		// axis is assumed to be normalized
	
	    		var q1 = new Quaternion();
	
	    		return function rotateOnAxis( axis, angle ) {
	
	    			q1.setFromAxisAngle( axis, angle );
	
	    			this.quaternion.multiply( q1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	rotateX: function () {
	
	    		var v1 = new Vector3( 1, 0, 0 );
	
	    		return function rotateX( angle ) {
	
	    			return this.rotateOnAxis( v1, angle );
	
	    		};
	
	    	}(),
	
	    	rotateY: function () {
	
	    		var v1 = new Vector3( 0, 1, 0 );
	
	    		return function rotateY( angle ) {
	
	    			return this.rotateOnAxis( v1, angle );
	
	    		};
	
	    	}(),
	
	    	rotateZ: function () {
	
	    		var v1 = new Vector3( 0, 0, 1 );
	
	    		return function rotateZ( angle ) {
	
	    			return this.rotateOnAxis( v1, angle );
	
	    		};
	
	    	}(),
	
	    	translateOnAxis: function () {
	
	    		// translate object by distance along axis in object space
	    		// axis is assumed to be normalized
	
	    		var v1 = new Vector3();
	
	    		return function translateOnAxis( axis, distance ) {
	
	    			v1.copy( axis ).applyQuaternion( this.quaternion );
	
	    			this.position.add( v1.multiplyScalar( distance ) );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	translateX: function () {
	
	    		var v1 = new Vector3( 1, 0, 0 );
	
	    		return function translateX( distance ) {
	
	    			return this.translateOnAxis( v1, distance );
	
	    		};
	
	    	}(),
	
	    	translateY: function () {
	
	    		var v1 = new Vector3( 0, 1, 0 );
	
	    		return function translateY( distance ) {
	
	    			return this.translateOnAxis( v1, distance );
	
	    		};
	
	    	}(),
	
	    	translateZ: function () {
	
	    		var v1 = new Vector3( 0, 0, 1 );
	
	    		return function translateZ( distance ) {
	
	    			return this.translateOnAxis( v1, distance );
	
	    		};
	
	    	}(),
	
	    	localToWorld: function ( vector ) {
	
	    		return vector.applyMatrix4( this.matrixWorld );
	
	    	},
	
	    	worldToLocal: function () {
	
	    		var m1 = new Matrix4();
	
	    		return function worldToLocal( vector ) {
	
	    			return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );
	
	    		};
	
	    	}(),
	
	    	lookAt: function () {
	
	    		// This routine does not support objects with rotated and/or translated parent(s)
	
	    		var m1 = new Matrix4();
	
	    		return function lookAt( vector ) {
	
	    			m1.lookAt( vector, this.position, this.up );
	
	    			this.quaternion.setFromRotationMatrix( m1 );
	
	    		};
	
	    	}(),
	
	    	add: function ( object ) {
	
	    		if ( arguments.length > 1 ) {
	
	    			for ( var i = 0; i < arguments.length; i ++ ) {
	
	    				this.add( arguments[ i ] );
	
	    			}
	
	    			return this;
	
	    		}
	
	    		if ( object === this ) {
	
	    			console.error( "THREE.Object3D.add: object can't be added as a child of itself.", object );
	    			return this;
	
	    		}
	
	    		if ( (object && object.isObject3D) ) {
	
	    			if ( object.parent !== null ) {
	
	    				object.parent.remove( object );
	
	    			}
	
	    			object.parent = this;
	    			object.dispatchEvent( { type: 'added' } );
	
	    			this.children.push( object );
	
	    		} else {
	
	    			console.error( "THREE.Object3D.add: object not an instance of THREE.Object3D.", object );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	remove: function ( object ) {
	
	    		if ( arguments.length > 1 ) {
	
	    			for ( var i = 0; i < arguments.length; i ++ ) {
	
	    				this.remove( arguments[ i ] );
	
	    			}
	
	    		}
	
	    		var index = this.children.indexOf( object );
	
	    		if ( index !== - 1 ) {
	
	    			object.parent = null;
	
	    			object.dispatchEvent( { type: 'removed' } );
	
	    			this.children.splice( index, 1 );
	
	    		}
	
	    	},
	
	    	getObjectById: function ( id ) {
	
	    		return this.getObjectByProperty( 'id', id );
	
	    	},
	
	    	getObjectByName: function ( name ) {
	
	    		return this.getObjectByProperty( 'name', name );
	
	    	},
	
	    	getObjectByProperty: function ( name, value ) {
	
	    		if ( this[ name ] === value ) return this;
	
	    		for ( var i = 0, l = this.children.length; i < l; i ++ ) {
	
	    			var child = this.children[ i ];
	    			var object = child.getObjectByProperty( name, value );
	
	    			if ( object !== undefined ) {
	
	    				return object;
	
	    			}
	
	    		}
	
	    		return undefined;
	
	    	},
	
	    	getWorldPosition: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	
	    		this.updateMatrixWorld( true );
	
	    		return result.setFromMatrixPosition( this.matrixWorld );
	
	    	},
	
	    	getWorldQuaternion: function () {
	
	    		var position = new Vector3();
	    		var scale = new Vector3();
	
	    		return function getWorldQuaternion( optionalTarget ) {
	
	    			var result = optionalTarget || new Quaternion();
	
	    			this.updateMatrixWorld( true );
	
	    			this.matrixWorld.decompose( position, result, scale );
	
	    			return result;
	
	    		};
	
	    	}(),
	
	    	getWorldRotation: function () {
	
	    		var quaternion = new Quaternion();
	
	    		return function getWorldRotation( optionalTarget ) {
	
	    			var result = optionalTarget || new Euler();
	
	    			this.getWorldQuaternion( quaternion );
	
	    			return result.setFromQuaternion( quaternion, this.rotation.order, false );
	
	    		};
	
	    	}(),
	
	    	getWorldScale: function () {
	
	    		var position = new Vector3();
	    		var quaternion = new Quaternion();
	
	    		return function getWorldScale( optionalTarget ) {
	
	    			var result = optionalTarget || new Vector3();
	
	    			this.updateMatrixWorld( true );
	
	    			this.matrixWorld.decompose( position, quaternion, result );
	
	    			return result;
	
	    		};
	
	    	}(),
	
	    	getWorldDirection: function () {
	
	    		var quaternion = new Quaternion();
	
	    		return function getWorldDirection( optionalTarget ) {
	
	    			var result = optionalTarget || new Vector3();
	
	    			this.getWorldQuaternion( quaternion );
	
	    			return result.set( 0, 0, 1 ).applyQuaternion( quaternion );
	
	    		};
	
	    	}(),
	
	    	raycast: function () {},
	
	    	traverse: function ( callback ) {
	
	    		callback( this );
	
	    		var children = this.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			children[ i ].traverse( callback );
	
	    		}
	
	    	},
	
	    	traverseVisible: function ( callback ) {
	
	    		if ( this.visible === false ) return;
	
	    		callback( this );
	
	    		var children = this.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			children[ i ].traverseVisible( callback );
	
	    		}
	
	    	},
	
	    	traverseAncestors: function ( callback ) {
	
	    		var parent = this.parent;
	
	    		if ( parent !== null ) {
	
	    			callback( parent );
	
	    			parent.traverseAncestors( callback );
	
	    		}
	
	    	},
	
	    	updateMatrix: function () {
	
	    		this.matrix.compose( this.position, this.quaternion, this.scale );
	
	    		this.matrixWorldNeedsUpdate = true;
	
	    	},
	
	    	updateMatrixWorld: function ( force ) {
	
	    		if ( this.matrixAutoUpdate === true ) this.updateMatrix();
	
	    		if ( this.matrixWorldNeedsUpdate === true || force === true ) {
	
	    			if ( this.parent === null ) {
	
	    				this.matrixWorld.copy( this.matrix );
	
	    			} else {
	
	    				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );
	
	    			}
	
	    			this.matrixWorldNeedsUpdate = false;
	
	    			force = true;
	
	    		}
	
	    		// update children
	
	    		var children = this.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			children[ i ].updateMatrixWorld( force );
	
	    		}
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		// meta is '' when called from JSON.stringify
	    		var isRootObject = ( meta === undefined || meta === '' );
	
	    		var output = {};
	
	    		// meta is a hash used to collect geometries, materials.
	    		// not providing it implies that this is the root object
	    		// being serialized.
	    		if ( isRootObject ) {
	
	    			// initialize meta obj
	    			meta = {
	    				geometries: {},
	    				materials: {},
	    				textures: {},
	    				images: {}
	    			};
	
	    			output.metadata = {
	    				version: 4.4,
	    				type: 'Object',
	    				generator: 'Object3D.toJSON'
	    			};
	
	    		}
	
	    		// standard Object3D serialization
	
	    		var object = {};
	
	    		object.uuid = this.uuid;
	    		object.type = this.type;
	
	    		if ( this.name !== '' ) object.name = this.name;
	    		if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;
	    		if ( this.castShadow === true ) object.castShadow = true;
	    		if ( this.receiveShadow === true ) object.receiveShadow = true;
	    		if ( this.visible === false ) object.visible = false;
	
	    		object.matrix = this.matrix.toArray();
	
	    		//
	
	    		if ( this.geometry !== undefined ) {
	
	    			if ( meta.geometries[ this.geometry.uuid ] === undefined ) {
	
	    				meta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );
	
	    			}
	
	    			object.geometry = this.geometry.uuid;
	
	    		}
	
	    		if ( this.material !== undefined ) {
	
	    			if ( meta.materials[ this.material.uuid ] === undefined ) {
	
	    				meta.materials[ this.material.uuid ] = this.material.toJSON( meta );
	
	    			}
	
	    			object.material = this.material.uuid;
	
	    		}
	
	    		//
	
	    		if ( this.children.length > 0 ) {
	
	    			object.children = [];
	
	    			for ( var i = 0; i < this.children.length; i ++ ) {
	
	    				object.children.push( this.children[ i ].toJSON( meta ).object );
	
	    			}
	
	    		}
	
	    		if ( isRootObject ) {
	
	    			var geometries = extractFromCache( meta.geometries );
	    			var materials = extractFromCache( meta.materials );
	    			var textures = extractFromCache( meta.textures );
	    			var images = extractFromCache( meta.images );
	
	    			if ( geometries.length > 0 ) output.geometries = geometries;
	    			if ( materials.length > 0 ) output.materials = materials;
	    			if ( textures.length > 0 ) output.textures = textures;
	    			if ( images.length > 0 ) output.images = images;
	
	    		}
	
	    		output.object = object;
	
	    		return output;
	
	    		// extract data from the cache hash
	    		// remove metadata on each item
	    		// and return as array
	    		function extractFromCache( cache ) {
	
	    			var values = [];
	    			for ( var key in cache ) {
	
	    				var data = cache[ key ];
	    				delete data.metadata;
	    				values.push( data );
	
	    			}
	    			return values;
	
	    		}
	
	    	},
	
	    	clone: function ( recursive ) {
	
	    		return new this.constructor().copy( this, recursive );
	
	    	},
	
	    	copy: function ( source, recursive ) {
	
	    		if ( recursive === undefined ) recursive = true;
	
	    		this.name = source.name;
	
	    		this.up.copy( source.up );
	
	    		this.position.copy( source.position );
	    		this.quaternion.copy( source.quaternion );
	    		this.scale.copy( source.scale );
	
	    		this.matrix.copy( source.matrix );
	    		this.matrixWorld.copy( source.matrixWorld );
	
	    		this.matrixAutoUpdate = source.matrixAutoUpdate;
	    		this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;
	
	    		this.visible = source.visible;
	
	    		this.castShadow = source.castShadow;
	    		this.receiveShadow = source.receiveShadow;
	
	    		this.frustumCulled = source.frustumCulled;
	    		this.renderOrder = source.renderOrder;
	
	    		this.userData = JSON.parse( JSON.stringify( source.userData ) );
	
	    		if ( recursive === true ) {
	
	    			for ( var i = 0; i < source.children.length; i ++ ) {
	
	    				var child = source.children[ i ];
	    				this.add( child.clone() );
	
	    			}
	
	    		}
	
	    		return this;
	
	    	}
	
	    } );
	
	    var count$2 = 0;
	    function Object3DIdCount() { return count$2++; };
	
	    /**
	     * @author bhouston / http://clara.io
	     */
	
	    function Line3( start, end ) {
	
	    	this.start = ( start !== undefined ) ? start : new Vector3();
	    	this.end = ( end !== undefined ) ? end : new Vector3();
	
	    }
	
	    Line3.prototype = {
	
	    	constructor: Line3,
	
	    	set: function ( start, end ) {
	
	    		this.start.copy( start );
	    		this.end.copy( end );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( line ) {
	
	    		this.start.copy( line.start );
	    		this.end.copy( line.end );
	
	    		return this;
	
	    	},
	
	    	getCenter: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );
	
	    	},
	
	    	delta: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return result.subVectors( this.end, this.start );
	
	    	},
	
	    	distanceSq: function () {
	
	    		return this.start.distanceToSquared( this.end );
	
	    	},
	
	    	distance: function () {
	
	    		return this.start.distanceTo( this.end );
	
	    	},
	
	    	at: function ( t, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	
	    		return this.delta( result ).multiplyScalar( t ).add( this.start );
	
	    	},
	
	    	closestPointToPointParameter: function () {
	
	    		var startP = new Vector3();
	    		var startEnd = new Vector3();
	
	    		return function closestPointToPointParameter( point, clampToLine ) {
	
	    			startP.subVectors( point, this.start );
	    			startEnd.subVectors( this.end, this.start );
	
	    			var startEnd2 = startEnd.dot( startEnd );
	    			var startEnd_startP = startEnd.dot( startP );
	
	    			var t = startEnd_startP / startEnd2;
	
	    			if ( clampToLine ) {
	
	    				t = exports.Math.clamp( t, 0, 1 );
	
	    			}
	
	    			return t;
	
	    		};
	
	    	}(),
	
	    	closestPointToPoint: function ( point, clampToLine, optionalTarget ) {
	
	    		var t = this.closestPointToPointParameter( point, clampToLine );
	
	    		var result = optionalTarget || new Vector3();
	
	    		return this.delta( result ).multiplyScalar( t ).add( this.start );
	
	    	},
	
	    	applyMatrix4: function ( matrix ) {
	
	    		this.start.applyMatrix4( matrix );
	    		this.end.applyMatrix4( matrix );
	
	    		return this;
	
	    	},
	
	    	equals: function ( line ) {
	
	    		return line.start.equals( this.start ) && line.end.equals( this.end );
	
	    	}
	
	    };
	
	    /**
	     * @author bhouston / http://clara.io
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Triangle( a, b, c ) {
	
	    	this.a = ( a !== undefined ) ? a : new Vector3();
	    	this.b = ( b !== undefined ) ? b : new Vector3();
	    	this.c = ( c !== undefined ) ? c : new Vector3();
	
	    }
	
	    Triangle.normal = function () {
	
	    	var v0 = new Vector3();
	
	    	return function normal( a, b, c, optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	
	    		result.subVectors( c, b );
	    		v0.subVectors( a, b );
	    		result.cross( v0 );
	
	    		var resultLengthSq = result.lengthSq();
	    		if ( resultLengthSq > 0 ) {
	
	    			return result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );
	
	    		}
	
	    		return result.set( 0, 0, 0 );
	
	    	};
	
	    }();
	
	    // static/instance method to calculate barycentric coordinates
	    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html
	    Triangle.barycoordFromPoint = function () {
	
	    	var v0 = new Vector3();
	    	var v1 = new Vector3();
	    	var v2 = new Vector3();
	
	    	return function barycoordFromPoint( point, a, b, c, optionalTarget ) {
	
	    		v0.subVectors( c, a );
	    		v1.subVectors( b, a );
	    		v2.subVectors( point, a );
	
	    		var dot00 = v0.dot( v0 );
	    		var dot01 = v0.dot( v1 );
	    		var dot02 = v0.dot( v2 );
	    		var dot11 = v1.dot( v1 );
	    		var dot12 = v1.dot( v2 );
	
	    		var denom = ( dot00 * dot11 - dot01 * dot01 );
	
	    		var result = optionalTarget || new Vector3();
	
	    		// collinear or singular triangle
	    		if ( denom === 0 ) {
	
	    			// arbitrary location outside of triangle?
	    			// not sure if this is the best idea, maybe should be returning undefined
	    			return result.set( - 2, - 1, - 1 );
	
	    		}
	
	    		var invDenom = 1 / denom;
	    		var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
	    		var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;
	
	    		// barycentric coordinates must always sum to 1
	    		return result.set( 1 - u - v, v, u );
	
	    	};
	
	    }();
	
	    Triangle.containsPoint = function () {
	
	    	var v1 = new Vector3();
	
	    	return function containsPoint( point, a, b, c ) {
	
	    		var result = Triangle.barycoordFromPoint( point, a, b, c, v1 );
	
	    		return ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );
	
	    	};
	
	    }();
	
	    Triangle.prototype = {
	
	    	constructor: Triangle,
	
	    	set: function ( a, b, c ) {
	
	    		this.a.copy( a );
	    		this.b.copy( b );
	    		this.c.copy( c );
	
	    		return this;
	
	    	},
	
	    	setFromPointsAndIndices: function ( points, i0, i1, i2 ) {
	
	    		this.a.copy( points[ i0 ] );
	    		this.b.copy( points[ i1 ] );
	    		this.c.copy( points[ i2 ] );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( triangle ) {
	
	    		this.a.copy( triangle.a );
	    		this.b.copy( triangle.b );
	    		this.c.copy( triangle.c );
	
	    		return this;
	
	    	},
	
	    	area: function () {
	
	    		var v0 = new Vector3();
	    		var v1 = new Vector3();
	
	    		return function area() {
	
	    			v0.subVectors( this.c, this.b );
	    			v1.subVectors( this.a, this.b );
	
	    			return v0.cross( v1 ).length() * 0.5;
	
	    		};
	
	    	}(),
	
	    	midpoint: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	    		return result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );
	
	    	},
	
	    	normal: function ( optionalTarget ) {
	
	    		return Triangle.normal( this.a, this.b, this.c, optionalTarget );
	
	    	},
	
	    	plane: function ( optionalTarget ) {
	
	    		var result = optionalTarget || new Plane();
	
	    		return result.setFromCoplanarPoints( this.a, this.b, this.c );
	
	    	},
	
	    	barycoordFromPoint: function ( point, optionalTarget ) {
	
	    		return Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );
	
	    	},
	
	    	containsPoint: function ( point ) {
	
	    		return Triangle.containsPoint( point, this.a, this.b, this.c );
	
	    	},
	
	    	closestPointToPoint: function () {
	
	    		var plane, edgeList, projectedPoint, closestPoint;
	
	    		return function closestPointToPoint( point, optionalTarget ) {
	
	    			if ( plane === undefined ) {
	
	    				plane = new Plane();
	    				edgeList = [ new Line3(), new Line3(), new Line3() ];
	    				projectedPoint = new Vector3();
	    				closestPoint = new Vector3();
	
	    			}
	
	    			var result = optionalTarget || new Vector3();
	    			var minDistance = Infinity;
	
	    			// project the point onto the plane of the triangle
	
	    			plane.setFromCoplanarPoints( this.a, this.b, this.c );
	    			plane.projectPoint( point, projectedPoint );
	
	    			// check if the projection lies within the triangle
	
	    			if( this.containsPoint( projectedPoint ) === true ) {
	
	    				// if so, this is the closest point
	
	    				result.copy( projectedPoint );
	
	    			} else {
	
	    				// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices
	
	    				edgeList[ 0 ].set( this.a, this.b );
	    				edgeList[ 1 ].set( this.b, this.c );
	    				edgeList[ 2 ].set( this.c, this.a );
	
	    				for( var i = 0; i < edgeList.length; i ++ ) {
	
	    					edgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );
	
	    					var distance = projectedPoint.distanceToSquared( closestPoint );
	
	    					if( distance < minDistance ) {
	
	    						minDistance = distance;
	
	    						result.copy( closestPoint );
	
	    					}
	
	    				}
	
	    			}
	
	    			return result;
	
	    		};
	
	    	}(),
	
	    	equals: function ( triangle ) {
	
	    		return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Face3( a, b, c, normal, color, materialIndex ) {
	
	    	this.a = a;
	    	this.b = b;
	    	this.c = c;
	
	    	this.normal = (normal && normal.isVector3) ? normal : new Vector3();
	    	this.vertexNormals = Array.isArray( normal ) ? normal : [];
	
	    	this.color = (color && color.isColor) ? color : new Color();
	    	this.vertexColors = Array.isArray( color ) ? color : [];
	
	    	this.materialIndex = materialIndex !== undefined ? materialIndex : 0;
	
	    }
	
	    Face3.prototype = {
	
	    	constructor: Face3,
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.a = source.a;
	    		this.b = source.b;
	    		this.c = source.c;
	
	    		this.normal.copy( source.normal );
	    		this.color.copy( source.color );
	
	    		this.materialIndex = source.materialIndex;
	
	    		for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {
	
	    			this.vertexNormals[ i ] = source.vertexNormals[ i ].clone();
	
	    		}
	
	    		for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {
	
	    			this.vertexColors[ i ] = source.vertexColors[ i ].clone();
	
	    		}
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  aoMap: new THREE.Texture( <Image> ),
	     *  aoMapIntensity: <float>
	     *
	     *  specularMap: new THREE.Texture( <Image> ),
	     *
	     *  alphaMap: new THREE.Texture( <Image> ),
	     *
	     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
	     *  combine: THREE.Multiply,
	     *  reflectivity: <float>,
	     *  refractionRatio: <float>,
	     *
	     *  shading: THREE.SmoothShading,
	     *  depthTest: <bool>,
	     *  depthWrite: <bool>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>,
	     *
	     *  skinning: <bool>,
	     *  morphTargets: <bool>
	     * }
	     */
	
	    function MeshBasicMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'MeshBasicMaterial';
	
	    	this.color = new Color( 0xffffff ); // emissive
	
	    	this.map = null;
	
	    	this.aoMap = null;
	    	this.aoMapIntensity = 1.0;
	
	    	this.specularMap = null;
	
	    	this.alphaMap = null;
	
	    	this.envMap = null;
	    	this.combine = MultiplyOperation;
	    	this.reflectivity = 1;
	    	this.refractionRatio = 0.98;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	    	this.wireframeLinecap = 'round';
	    	this.wireframeLinejoin = 'round';
	
	    	this.skinning = false;
	    	this.morphTargets = false;
	
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshBasicMaterial.prototype = Object.create( Material.prototype );
	    MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;
	
	    MeshBasicMaterial.prototype.isMeshBasicMaterial = true;
	
	    MeshBasicMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	
	    	this.map = source.map;
	
	    	this.aoMap = source.aoMap;
	    	this.aoMapIntensity = source.aoMapIntensity;
	
	    	this.specularMap = source.specularMap;
	
	    	this.alphaMap = source.alphaMap;
	
	    	this.envMap = source.envMap;
	    	this.combine = source.combine;
	    	this.reflectivity = source.reflectivity;
	    	this.refractionRatio = source.refractionRatio;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	    	this.wireframeLinecap = source.wireframeLinecap;
	    	this.wireframeLinejoin = source.wireframeLinejoin;
	
	    	this.skinning = source.skinning;
	    	this.morphTargets = source.morphTargets;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function BufferAttribute( array, itemSize, normalized ) {
	
	    	if ( Array.isArray( array ) ) {
	
	    		throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );
	
	    	}
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.array = array;
	    	this.itemSize = itemSize;
	    	this.count = array !== undefined ? array.length / itemSize : 0;
	    	this.normalized = normalized === true;
	
	    	this.dynamic = false;
	    	this.updateRange = { offset: 0, count: - 1 };
	
	    	this.version = 0;
	
	    }
	
	    BufferAttribute.prototype = {
	
	    	constructor: BufferAttribute,
	
	    	isBufferAttribute: true,
	
	    	set needsUpdate( value ) {
	
	    		if ( value === true ) this.version ++;
	
	    	},
	
	    	setDynamic: function ( value ) {
	
	    		this.dynamic = value;
	
	    		return this;
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.array = new source.array.constructor( source.array );
	    		this.itemSize = source.itemSize;
	    		this.count = source.count;
	    		this.normalized = source.normalized;
	
	    		this.dynamic = source.dynamic;
	
	    		return this;
	
	    	},
	
	    	copyAt: function ( index1, attribute, index2 ) {
	
	    		index1 *= this.itemSize;
	    		index2 *= attribute.itemSize;
	
	    		for ( var i = 0, l = this.itemSize; i < l; i ++ ) {
	
	    			this.array[ index1 + i ] = attribute.array[ index2 + i ];
	
	    		}
	
	    		return this;
	
	    	},
	
	    	copyArray: function ( array ) {
	
	    		this.array.set( array );
	
	    		return this;
	
	    	},
	
	    	copyColorsArray: function ( colors ) {
	
	    		var array = this.array, offset = 0;
	
	    		for ( var i = 0, l = colors.length; i < l; i ++ ) {
	
	    			var color = colors[ i ];
	
	    			if ( color === undefined ) {
	
	    				console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );
	    				color = new Color();
	
	    			}
	
	    			array[ offset ++ ] = color.r;
	    			array[ offset ++ ] = color.g;
	    			array[ offset ++ ] = color.b;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	copyIndicesArray: function ( indices ) {
	
	    		var array = this.array, offset = 0;
	
	    		for ( var i = 0, l = indices.length; i < l; i ++ ) {
	
	    			var index = indices[ i ];
	
	    			array[ offset ++ ] = index.a;
	    			array[ offset ++ ] = index.b;
	    			array[ offset ++ ] = index.c;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	copyVector2sArray: function ( vectors ) {
	
	    		var array = this.array, offset = 0;
	
	    		for ( var i = 0, l = vectors.length; i < l; i ++ ) {
	
	    			var vector = vectors[ i ];
	
	    			if ( vector === undefined ) {
	
	    				console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );
	    				vector = new Vector2();
	
	    			}
	
	    			array[ offset ++ ] = vector.x;
	    			array[ offset ++ ] = vector.y;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	copyVector3sArray: function ( vectors ) {
	
	    		var array = this.array, offset = 0;
	
	    		for ( var i = 0, l = vectors.length; i < l; i ++ ) {
	
	    			var vector = vectors[ i ];
	
	    			if ( vector === undefined ) {
	
	    				console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );
	    				vector = new Vector3();
	
	    			}
	
	    			array[ offset ++ ] = vector.x;
	    			array[ offset ++ ] = vector.y;
	    			array[ offset ++ ] = vector.z;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	copyVector4sArray: function ( vectors ) {
	
	    		var array = this.array, offset = 0;
	
	    		for ( var i = 0, l = vectors.length; i < l; i ++ ) {
	
	    			var vector = vectors[ i ];
	
	    			if ( vector === undefined ) {
	
	    				console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );
	    				vector = new Vector4();
	
	    			}
	
	    			array[ offset ++ ] = vector.x;
	    			array[ offset ++ ] = vector.y;
	    			array[ offset ++ ] = vector.z;
	    			array[ offset ++ ] = vector.w;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	set: function ( value, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.array.set( value, offset );
	
	    		return this;
	
	    	},
	
	    	getX: function ( index ) {
	
	    		return this.array[ index * this.itemSize ];
	
	    	},
	
	    	setX: function ( index, x ) {
	
	    		this.array[ index * this.itemSize ] = x;
	
	    		return this;
	
	    	},
	
	    	getY: function ( index ) {
	
	    		return this.array[ index * this.itemSize + 1 ];
	
	    	},
	
	    	setY: function ( index, y ) {
	
	    		this.array[ index * this.itemSize + 1 ] = y;
	
	    		return this;
	
	    	},
	
	    	getZ: function ( index ) {
	
	    		return this.array[ index * this.itemSize + 2 ];
	
	    	},
	
	    	setZ: function ( index, z ) {
	
	    		this.array[ index * this.itemSize + 2 ] = z;
	
	    		return this;
	
	    	},
	
	    	getW: function ( index ) {
	
	    		return this.array[ index * this.itemSize + 3 ];
	
	    	},
	
	    	setW: function ( index, w ) {
	
	    		this.array[ index * this.itemSize + 3 ] = w;
	
	    		return this;
	
	    	},
	
	    	setXY: function ( index, x, y ) {
	
	    		index *= this.itemSize;
	
	    		this.array[ index + 0 ] = x;
	    		this.array[ index + 1 ] = y;
	
	    		return this;
	
	    	},
	
	    	setXYZ: function ( index, x, y, z ) {
	
	    		index *= this.itemSize;
	
	    		this.array[ index + 0 ] = x;
	    		this.array[ index + 1 ] = y;
	    		this.array[ index + 2 ] = z;
	
	    		return this;
	
	    	},
	
	    	setXYZW: function ( index, x, y, z, w ) {
	
	    		index *= this.itemSize;
	
	    		this.array[ index + 0 ] = x;
	    		this.array[ index + 1 ] = y;
	    		this.array[ index + 2 ] = z;
	    		this.array[ index + 3 ] = w;
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	}
	
	    };
	
	    //
	
	    function Int8Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Int8Array( array ), itemSize );
	
	    }
	
	    function Uint8Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Uint8Array( array ), itemSize );
	
	    }
	
	    function Uint8ClampedAttribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Uint8ClampedArray( array ), itemSize );
	
	    }
	
	    function Int16Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Int16Array( array ), itemSize );
	
	    }
	
	    function Uint16Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Uint16Array( array ), itemSize );
	
	    }
	
	    function Int32Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Int32Array( array ), itemSize );
	
	    }
	
	    function Uint32Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Uint32Array( array ), itemSize );
	
	    }
	
	    function Float32Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Float32Array( array ), itemSize );
	
	    }
	
	    function Float64Attribute( array, itemSize ) {
	
	    	return new BufferAttribute( new Float64Array( array ), itemSize );
	
	    }
	
	    // Deprecated
	
	    function DynamicBufferAttribute( array, itemSize ) {
	
	    	console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );
	    	return new BufferAttribute( array, itemSize ).setDynamic( true );
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author kile / http://kile.stravaganza.org/
	     * @author alteredq / http://alteredqualia.com/
	     * @author mikael emtinger / http://gomo.se/
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * @author bhouston / http://clara.io
	     */
	
	    function Geometry() {
	
	    	Object.defineProperty( this, 'id', { value: GeometryIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.type = 'Geometry';
	
	    	this.vertices = [];
	    	this.colors = [];
	    	this.faces = [];
	    	this.faceVertexUvs = [ [] ];
	
	    	this.morphTargets = [];
	    	this.morphNormals = [];
	
	    	this.skinWeights = [];
	    	this.skinIndices = [];
	
	    	this.lineDistances = [];
	
	    	this.boundingBox = null;
	    	this.boundingSphere = null;
	
	    	// update flags
	
	    	this.elementsNeedUpdate = false;
	    	this.verticesNeedUpdate = false;
	    	this.uvsNeedUpdate = false;
	    	this.normalsNeedUpdate = false;
	    	this.colorsNeedUpdate = false;
	    	this.lineDistancesNeedUpdate = false;
	    	this.groupsNeedUpdate = false;
	
	    }
	
	    Object.assign( Geometry.prototype, EventDispatcher.prototype, {
	
	    	isGeometry: true,
	
	    	applyMatrix: function ( matrix ) {
	
	    		var normalMatrix = new Matrix3().getNormalMatrix( matrix );
	
	    		for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {
	
	    			var vertex = this.vertices[ i ];
	    			vertex.applyMatrix4( matrix );
	
	    		}
	
	    		for ( var i = 0, il = this.faces.length; i < il; i ++ ) {
	
	    			var face = this.faces[ i ];
	    			face.normal.applyMatrix3( normalMatrix ).normalize();
	
	    			for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {
	
	    				face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();
	
	    			}
	
	    		}
	
	    		if ( this.boundingBox !== null ) {
	
	    			this.computeBoundingBox();
	
	    		}
	
	    		if ( this.boundingSphere !== null ) {
	
	    			this.computeBoundingSphere();
	
	    		}
	
	    		this.verticesNeedUpdate = true;
	    		this.normalsNeedUpdate = true;
	
	    		return this;
	
	    	},
	
	    	rotateX: function () {
	
	    		// rotate geometry around world x-axis
	
	    		var m1;
	
	    		return function rotateX( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationX( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	rotateY: function () {
	
	    		// rotate geometry around world y-axis
	
	    		var m1;
	
	    		return function rotateY( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationY( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	rotateZ: function () {
	
	    		// rotate geometry around world z-axis
	
	    		var m1;
	
	    		return function rotateZ( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationZ( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	translate: function () {
	
	    		// translate geometry
	
	    		var m1;
	
	    		return function translate( x, y, z ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeTranslation( x, y, z );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	scale: function () {
	
	    		// scale geometry
	
	    		var m1;
	
	    		return function scale( x, y, z ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeScale( x, y, z );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	lookAt: function () {
	
	    		var obj;
	
	    		return function lookAt( vector ) {
	
	    			if ( obj === undefined ) obj = new Object3D();
	
	    			obj.lookAt( vector );
	
	    			obj.updateMatrix();
	
	    			this.applyMatrix( obj.matrix );
	
	    		};
	
	    	}(),
	
	    	fromBufferGeometry: function ( geometry ) {
	
	    		var scope = this;
	
	    		var indices = geometry.index !== null ? geometry.index.array : undefined;
	    		var attributes = geometry.attributes;
	
	    		var positions = attributes.position.array;
	    		var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;
	    		var colors = attributes.color !== undefined ? attributes.color.array : undefined;
	    		var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;
	    		var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;
	
	    		if ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];
	
	    		var tempNormals = [];
	    		var tempUVs = [];
	    		var tempUVs2 = [];
	
	    		for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {
	
	    			scope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );
	
	    			if ( normals !== undefined ) {
	
	    				tempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );
	
	    			}
	
	    			if ( colors !== undefined ) {
	
	    				scope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );
	
	    			}
	
	    			if ( uvs !== undefined ) {
	
	    				tempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );
	
	    			}
	
	    			if ( uvs2 !== undefined ) {
	
	    				tempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );
	
	    			}
	
	    		}
	
	    		function addFace( a, b, c, materialIndex ) {
	
	    			var vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];
	    			var vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];
	
	    			var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );
	
	    			scope.faces.push( face );
	
	    			if ( uvs !== undefined ) {
	
	    				scope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );
	
	    			}
	
	    			if ( uvs2 !== undefined ) {
	
	    				scope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );
	
	    			}
	
	    		}
	
	    		if ( indices !== undefined ) {
	
	    			var groups = geometry.groups;
	
	    			if ( groups.length > 0 ) {
	
	    				for ( var i = 0; i < groups.length; i ++ ) {
	
	    					var group = groups[ i ];
	
	    					var start = group.start;
	    					var count = group.count;
	
	    					for ( var j = start, jl = start + count; j < jl; j += 3 ) {
	
	    						addFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );
	
	    					}
	
	    				}
	
	    			} else {
	
	    				for ( var i = 0; i < indices.length; i += 3 ) {
	
	    					addFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );
	
	    				}
	
	    			}
	
	    		} else {
	
	    			for ( var i = 0; i < positions.length / 3; i += 3 ) {
	
	    				addFace( i, i + 1, i + 2 );
	
	    			}
	
	    		}
	
	    		this.computeFaceNormals();
	
	    		if ( geometry.boundingBox !== null ) {
	
	    			this.boundingBox = geometry.boundingBox.clone();
	
	    		}
	
	    		if ( geometry.boundingSphere !== null ) {
	
	    			this.boundingSphere = geometry.boundingSphere.clone();
	
	    		}
	
	    		return this;
	
	    	},
	
	    	center: function () {
	
	    		this.computeBoundingBox();
	
	    		var offset = this.boundingBox.getCenter().negate();
	
	    		this.translate( offset.x, offset.y, offset.z );
	
	    		return offset;
	
	    	},
	
	    	normalize: function () {
	
	    		this.computeBoundingSphere();
	
	    		var center = this.boundingSphere.center;
	    		var radius = this.boundingSphere.radius;
	
	    		var s = radius === 0 ? 1 : 1.0 / radius;
	
	    		var matrix = new Matrix4();
	    		matrix.set(
	    			s, 0, 0, - s * center.x,
	    			0, s, 0, - s * center.y,
	    			0, 0, s, - s * center.z,
	    			0, 0, 0, 1
	    		);
	
	    		this.applyMatrix( matrix );
	
	    		return this;
	
	    	},
	
	    	computeFaceNormals: function () {
	
	    		var cb = new Vector3(), ab = new Vector3();
	
	    		for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    			var face = this.faces[ f ];
	
	    			var vA = this.vertices[ face.a ];
	    			var vB = this.vertices[ face.b ];
	    			var vC = this.vertices[ face.c ];
	
	    			cb.subVectors( vC, vB );
	    			ab.subVectors( vA, vB );
	    			cb.cross( ab );
	
	    			cb.normalize();
	
	    			face.normal.copy( cb );
	
	    		}
	
	    	},
	
	    	computeVertexNormals: function ( areaWeighted ) {
	
	    		if ( areaWeighted === undefined ) areaWeighted = true;
	
	    		var v, vl, f, fl, face, vertices;
	
	    		vertices = new Array( this.vertices.length );
	
	    		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {
	
	    			vertices[ v ] = new Vector3();
	
	    		}
	
	    		if ( areaWeighted ) {
	
	    			// vertex normals weighted by triangle areas
	    			// http://www.iquilezles.org/www/articles/normals/normals.htm
	
	    			var vA, vB, vC;
	    			var cb = new Vector3(), ab = new Vector3();
	
	    			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    				face = this.faces[ f ];
	
	    				vA = this.vertices[ face.a ];
	    				vB = this.vertices[ face.b ];
	    				vC = this.vertices[ face.c ];
	
	    				cb.subVectors( vC, vB );
	    				ab.subVectors( vA, vB );
	    				cb.cross( ab );
	
	    				vertices[ face.a ].add( cb );
	    				vertices[ face.b ].add( cb );
	    				vertices[ face.c ].add( cb );
	
	    			}
	
	    		} else {
	
	    			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    				face = this.faces[ f ];
	
	    				vertices[ face.a ].add( face.normal );
	    				vertices[ face.b ].add( face.normal );
	    				vertices[ face.c ].add( face.normal );
	
	    			}
	
	    		}
	
	    		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {
	
	    			vertices[ v ].normalize();
	
	    		}
	
	    		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    			face = this.faces[ f ];
	
	    			var vertexNormals = face.vertexNormals;
	
	    			if ( vertexNormals.length === 3 ) {
	
	    				vertexNormals[ 0 ].copy( vertices[ face.a ] );
	    				vertexNormals[ 1 ].copy( vertices[ face.b ] );
	    				vertexNormals[ 2 ].copy( vertices[ face.c ] );
	
	    			} else {
	
	    				vertexNormals[ 0 ] = vertices[ face.a ].clone();
	    				vertexNormals[ 1 ] = vertices[ face.b ].clone();
	    				vertexNormals[ 2 ] = vertices[ face.c ].clone();
	
	    			}
	
	    		}
	
	    		if ( this.faces.length > 0 ) {
	
	    			this.normalsNeedUpdate = true;
	
	    		}
	
	    	},
	
	    	computeMorphNormals: function () {
	
	    		var i, il, f, fl, face;
	
	    		// save original normals
	    		// - create temp variables on first access
	    		//   otherwise just copy (for faster repeated calls)
	
	    		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    			face = this.faces[ f ];
	
	    			if ( ! face.__originalFaceNormal ) {
	
	    				face.__originalFaceNormal = face.normal.clone();
	
	    			} else {
	
	    				face.__originalFaceNormal.copy( face.normal );
	
	    			}
	
	    			if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];
	
	    			for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {
	
	    				if ( ! face.__originalVertexNormals[ i ] ) {
	
	    					face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();
	
	    				} else {
	
	    					face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );
	
	    				}
	
	    			}
	
	    		}
	
	    		// use temp geometry to compute face and vertex normals for each morph
	
	    		var tmpGeo = new Geometry();
	    		tmpGeo.faces = this.faces;
	
	    		for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {
	
	    			// create on first access
	
	    			if ( ! this.morphNormals[ i ] ) {
	
	    				this.morphNormals[ i ] = {};
	    				this.morphNormals[ i ].faceNormals = [];
	    				this.morphNormals[ i ].vertexNormals = [];
	
	    				var dstNormalsFace = this.morphNormals[ i ].faceNormals;
	    				var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;
	
	    				var faceNormal, vertexNormals;
	
	    				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    					faceNormal = new Vector3();
	    					vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };
	
	    					dstNormalsFace.push( faceNormal );
	    					dstNormalsVertex.push( vertexNormals );
	
	    				}
	
	    			}
	
	    			var morphNormals = this.morphNormals[ i ];
	
	    			// set vertices to morph target
	
	    			tmpGeo.vertices = this.morphTargets[ i ].vertices;
	
	    			// compute morph normals
	
	    			tmpGeo.computeFaceNormals();
	    			tmpGeo.computeVertexNormals();
	
	    			// store morph normals
	
	    			var faceNormal, vertexNormals;
	
	    			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    				face = this.faces[ f ];
	
	    				faceNormal = morphNormals.faceNormals[ f ];
	    				vertexNormals = morphNormals.vertexNormals[ f ];
	
	    				faceNormal.copy( face.normal );
	
	    				vertexNormals.a.copy( face.vertexNormals[ 0 ] );
	    				vertexNormals.b.copy( face.vertexNormals[ 1 ] );
	    				vertexNormals.c.copy( face.vertexNormals[ 2 ] );
	
	    			}
	
	    		}
	
	    		// restore original normals
	
	    		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {
	
	    			face = this.faces[ f ];
	
	    			face.normal = face.__originalFaceNormal;
	    			face.vertexNormals = face.__originalVertexNormals;
	
	    		}
	
	    	},
	
	    	computeTangents: function () {
	
	    		console.warn( 'THREE.Geometry: .computeTangents() has been removed.' );
	
	    	},
	
	    	computeLineDistances: function () {
	
	    		var d = 0;
	    		var vertices = this.vertices;
	
	    		for ( var i = 0, il = vertices.length; i < il; i ++ ) {
	
	    			if ( i > 0 ) {
	
	    				d += vertices[ i ].distanceTo( vertices[ i - 1 ] );
	
	    			}
	
	    			this.lineDistances[ i ] = d;
	
	    		}
	
	    	},
	
	    	computeBoundingBox: function () {
	
	    		if ( this.boundingBox === null ) {
	
	    			this.boundingBox = new Box3();
	
	    		}
	
	    		this.boundingBox.setFromPoints( this.vertices );
	
	    	},
	
	    	computeBoundingSphere: function () {
	
	    		if ( this.boundingSphere === null ) {
	
	    			this.boundingSphere = new Sphere();
	
	    		}
	
	    		this.boundingSphere.setFromPoints( this.vertices );
	
	    	},
	
	    	merge: function ( geometry, matrix, materialIndexOffset ) {
	
	    		if ( (geometry && geometry.isGeometry) === false ) {
	
	    			console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );
	    			return;
	
	    		}
	
	    		var normalMatrix,
	    		vertexOffset = this.vertices.length,
	    		vertices1 = this.vertices,
	    		vertices2 = geometry.vertices,
	    		faces1 = this.faces,
	    		faces2 = geometry.faces,
	    		uvs1 = this.faceVertexUvs[ 0 ],
	    		uvs2 = geometry.faceVertexUvs[ 0 ],
	    		colors1 = this.colors,
	    		colors2 = geometry.colors;
	
	    		if ( materialIndexOffset === undefined ) materialIndexOffset = 0;
	
	    		if ( matrix !== undefined ) {
	
	    			normalMatrix = new Matrix3().getNormalMatrix( matrix );
	
	    		}
	
	    		// vertices
	
	    		for ( var i = 0, il = vertices2.length; i < il; i ++ ) {
	
	    			var vertex = vertices2[ i ];
	
	    			var vertexCopy = vertex.clone();
	
	    			if ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );
	
	    			vertices1.push( vertexCopy );
	
	    		}
	
	    		// colors
	
	    		for ( var i = 0, il = colors2.length; i < il; i ++ ) {
	
	    			colors1.push( colors2[ i ].clone() );
	
	    		}
	
	    		// faces
	
	    		for ( i = 0, il = faces2.length; i < il; i ++ ) {
	
	    			var face = faces2[ i ], faceCopy, normal, color,
	    			faceVertexNormals = face.vertexNormals,
	    			faceVertexColors = face.vertexColors;
	
	    			faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );
	    			faceCopy.normal.copy( face.normal );
	
	    			if ( normalMatrix !== undefined ) {
	
	    				faceCopy.normal.applyMatrix3( normalMatrix ).normalize();
	
	    			}
	
	    			for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {
	
	    				normal = faceVertexNormals[ j ].clone();
	
	    				if ( normalMatrix !== undefined ) {
	
	    					normal.applyMatrix3( normalMatrix ).normalize();
	
	    				}
	
	    				faceCopy.vertexNormals.push( normal );
	
	    			}
	
	    			faceCopy.color.copy( face.color );
	
	    			for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {
	
	    				color = faceVertexColors[ j ];
	    				faceCopy.vertexColors.push( color.clone() );
	
	    			}
	
	    			faceCopy.materialIndex = face.materialIndex + materialIndexOffset;
	
	    			faces1.push( faceCopy );
	
	    		}
	
	    		// uvs
	
	    		for ( i = 0, il = uvs2.length; i < il; i ++ ) {
	
	    			var uv = uvs2[ i ], uvCopy = [];
	
	    			if ( uv === undefined ) {
	
	    				continue;
	
	    			}
	
	    			for ( var j = 0, jl = uv.length; j < jl; j ++ ) {
	
	    				uvCopy.push( uv[ j ].clone() );
	
	    			}
	
	    			uvs1.push( uvCopy );
	
	    		}
	
	    	},
	
	    	mergeMesh: function ( mesh ) {
	
	    		if ( (mesh && mesh.isMesh) === false ) {
	
	    			console.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );
	    			return;
	
	    		}
	
	    		mesh.matrixAutoUpdate && mesh.updateMatrix();
	
	    		this.merge( mesh.geometry, mesh.matrix );
	
	    	},
	
	    	/*
	    	 * Checks for duplicate vertices with hashmap.
	    	 * Duplicated vertices are removed
	    	 * and faces' vertices are updated.
	    	 */
	
	    	mergeVertices: function () {
	
	    		var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)
	    		var unique = [], changes = [];
	
	    		var v, key;
	    		var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001
	    		var precision = Math.pow( 10, precisionPoints );
	    		var i, il, face;
	    		var indices, j, jl;
	
	    		for ( i = 0, il = this.vertices.length; i < il; i ++ ) {
	
	    			v = this.vertices[ i ];
	    			key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );
	
	    			if ( verticesMap[ key ] === undefined ) {
	
	    				verticesMap[ key ] = i;
	    				unique.push( this.vertices[ i ] );
	    				changes[ i ] = unique.length - 1;
	
	    			} else {
	
	    				//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
	    				changes[ i ] = changes[ verticesMap[ key ] ];
	
	    			}
	
	    		}
	
	
	    		// if faces are completely degenerate after merging vertices, we
	    		// have to remove them from the geometry.
	    		var faceIndicesToRemove = [];
	
	    		for ( i = 0, il = this.faces.length; i < il; i ++ ) {
	
	    			face = this.faces[ i ];
	
	    			face.a = changes[ face.a ];
	    			face.b = changes[ face.b ];
	    			face.c = changes[ face.c ];
	
	    			indices = [ face.a, face.b, face.c ];
	
	    			var dupIndex = - 1;
	
	    			// if any duplicate vertices are found in a Face3
	    			// we have to remove the face as nothing can be saved
	    			for ( var n = 0; n < 3; n ++ ) {
	
	    				if ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {
	
	    					dupIndex = n;
	    					faceIndicesToRemove.push( i );
	    					break;
	
	    				}
	
	    			}
	
	    		}
	
	    		for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {
	
	    			var idx = faceIndicesToRemove[ i ];
	
	    			this.faces.splice( idx, 1 );
	
	    			for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {
	
	    				this.faceVertexUvs[ j ].splice( idx, 1 );
	
	    			}
	
	    		}
	
	    		// Use unique set of vertices
	
	    		var diff = this.vertices.length - unique.length;
	    		this.vertices = unique;
	    		return diff;
	
	    	},
	
	    	sortFacesByMaterialIndex: function () {
	
	    		var faces = this.faces;
	    		var length = faces.length;
	
	    		// tag faces
	
	    		for ( var i = 0; i < length; i ++ ) {
	
	    			faces[ i ]._id = i;
	
	    		}
	
	    		// sort faces
	
	    		function materialIndexSort( a, b ) {
	
	    			return a.materialIndex - b.materialIndex;
	
	    		}
	
	    		faces.sort( materialIndexSort );
	
	    		// sort uvs
	
	    		var uvs1 = this.faceVertexUvs[ 0 ];
	    		var uvs2 = this.faceVertexUvs[ 1 ];
	
	    		var newUvs1, newUvs2;
	
	    		if ( uvs1 && uvs1.length === length ) newUvs1 = [];
	    		if ( uvs2 && uvs2.length === length ) newUvs2 = [];
	
	    		for ( var i = 0; i < length; i ++ ) {
	
	    			var id = faces[ i ]._id;
	
	    			if ( newUvs1 ) newUvs1.push( uvs1[ id ] );
	    			if ( newUvs2 ) newUvs2.push( uvs2[ id ] );
	
	    		}
	
	    		if ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;
	    		if ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;
	
	    	},
	
	    	toJSON: function () {
	
	    		var data = {
	    			metadata: {
	    				version: 4.4,
	    				type: 'Geometry',
	    				generator: 'Geometry.toJSON'
	    			}
	    		};
	
	    		// standard Geometry serialization
	
	    		data.uuid = this.uuid;
	    		data.type = this.type;
	    		if ( this.name !== '' ) data.name = this.name;
	
	    		if ( this.parameters !== undefined ) {
	
	    			var parameters = this.parameters;
	
	    			for ( var key in parameters ) {
	
	    				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];
	
	    			}
	
	    			return data;
	
	    		}
	
	    		var vertices = [];
	
	    		for ( var i = 0; i < this.vertices.length; i ++ ) {
	
	    			var vertex = this.vertices[ i ];
	    			vertices.push( vertex.x, vertex.y, vertex.z );
	
	    		}
	
	    		var faces = [];
	    		var normals = [];
	    		var normalsHash = {};
	    		var colors = [];
	    		var colorsHash = {};
	    		var uvs = [];
	    		var uvsHash = {};
	
	    		for ( var i = 0; i < this.faces.length; i ++ ) {
	
	    			var face = this.faces[ i ];
	
	    			var hasMaterial = true;
	    			var hasFaceUv = false; // deprecated
	    			var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;
	    			var hasFaceNormal = face.normal.length() > 0;
	    			var hasFaceVertexNormal = face.vertexNormals.length > 0;
	    			var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;
	    			var hasFaceVertexColor = face.vertexColors.length > 0;
	
	    			var faceType = 0;
	
	    			faceType = setBit( faceType, 0, 0 ); // isQuad
	    			faceType = setBit( faceType, 1, hasMaterial );
	    			faceType = setBit( faceType, 2, hasFaceUv );
	    			faceType = setBit( faceType, 3, hasFaceVertexUv );
	    			faceType = setBit( faceType, 4, hasFaceNormal );
	    			faceType = setBit( faceType, 5, hasFaceVertexNormal );
	    			faceType = setBit( faceType, 6, hasFaceColor );
	    			faceType = setBit( faceType, 7, hasFaceVertexColor );
	
	    			faces.push( faceType );
	    			faces.push( face.a, face.b, face.c );
	    			faces.push( face.materialIndex );
	
	    			if ( hasFaceVertexUv ) {
	
	    				var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];
	
	    				faces.push(
	    					getUvIndex( faceVertexUvs[ 0 ] ),
	    					getUvIndex( faceVertexUvs[ 1 ] ),
	    					getUvIndex( faceVertexUvs[ 2 ] )
	    				);
	
	    			}
	
	    			if ( hasFaceNormal ) {
	
	    				faces.push( getNormalIndex( face.normal ) );
	
	    			}
	
	    			if ( hasFaceVertexNormal ) {
	
	    				var vertexNormals = face.vertexNormals;
	
	    				faces.push(
	    					getNormalIndex( vertexNormals[ 0 ] ),
	    					getNormalIndex( vertexNormals[ 1 ] ),
	    					getNormalIndex( vertexNormals[ 2 ] )
	    				);
	
	    			}
	
	    			if ( hasFaceColor ) {
	
	    				faces.push( getColorIndex( face.color ) );
	
	    			}
	
	    			if ( hasFaceVertexColor ) {
	
	    				var vertexColors = face.vertexColors;
	
	    				faces.push(
	    					getColorIndex( vertexColors[ 0 ] ),
	    					getColorIndex( vertexColors[ 1 ] ),
	    					getColorIndex( vertexColors[ 2 ] )
	    				);
	
	    			}
	
	    		}
	
	    		function setBit( value, position, enabled ) {
	
	    			return enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );
	
	    		}
	
	    		function getNormalIndex( normal ) {
	
	    			var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();
	
	    			if ( normalsHash[ hash ] !== undefined ) {
	
	    				return normalsHash[ hash ];
	
	    			}
	
	    			normalsHash[ hash ] = normals.length / 3;
	    			normals.push( normal.x, normal.y, normal.z );
	
	    			return normalsHash[ hash ];
	
	    		}
	
	    		function getColorIndex( color ) {
	
	    			var hash = color.r.toString() + color.g.toString() + color.b.toString();
	
	    			if ( colorsHash[ hash ] !== undefined ) {
	
	    				return colorsHash[ hash ];
	
	    			}
	
	    			colorsHash[ hash ] = colors.length;
	    			colors.push( color.getHex() );
	
	    			return colorsHash[ hash ];
	
	    		}
	
	    		function getUvIndex( uv ) {
	
	    			var hash = uv.x.toString() + uv.y.toString();
	
	    			if ( uvsHash[ hash ] !== undefined ) {
	
	    				return uvsHash[ hash ];
	
	    			}
	
	    			uvsHash[ hash ] = uvs.length / 2;
	    			uvs.push( uv.x, uv.y );
	
	    			return uvsHash[ hash ];
	
	    		}
	
	    		data.data = {};
	
	    		data.data.vertices = vertices;
	    		data.data.normals = normals;
	    		if ( colors.length > 0 ) data.data.colors = colors;
	    		if ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility
	    		data.data.faces = faces;
	
	    		return data;
	
	    	},
	
	    	clone: function () {
	
	    		/*
	    		// Handle primitives
	
	    		var parameters = this.parameters;
	
	    		if ( parameters !== undefined ) {
	
	    			var values = [];
	
	    			for ( var key in parameters ) {
	
	    				values.push( parameters[ key ] );
	
	    			}
	
	    			var geometry = Object.create( this.constructor.prototype );
	    			this.constructor.apply( geometry, values );
	    			return geometry;
	
	    		}
	
	    		return new this.constructor().copy( this );
	    		*/
	
	    		return new Geometry().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.vertices = [];
	    		this.faces = [];
	    		this.faceVertexUvs = [ [] ];
	    		this.colors = [];
	
	    		var vertices = source.vertices;
	
	    		for ( var i = 0, il = vertices.length; i < il; i ++ ) {
	
	    			this.vertices.push( vertices[ i ].clone() );
	
	    		}
	
	    		var colors = source.colors;
	
	    		for ( var i = 0, il = colors.length; i < il; i ++ ) {
	
	    			this.colors.push( colors[ i ].clone() );
	
	    		}
	
	    		var faces = source.faces;
	
	    		for ( var i = 0, il = faces.length; i < il; i ++ ) {
	
	    			this.faces.push( faces[ i ].clone() );
	
	    		}
	
	    		for ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {
	
	    			var faceVertexUvs = source.faceVertexUvs[ i ];
	
	    			if ( this.faceVertexUvs[ i ] === undefined ) {
	
	    				this.faceVertexUvs[ i ] = [];
	
	    			}
	
	    			for ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {
	
	    				var uvs = faceVertexUvs[ j ], uvsCopy = [];
	
	    				for ( var k = 0, kl = uvs.length; k < kl; k ++ ) {
	
	    					var uv = uvs[ k ];
	
	    					uvsCopy.push( uv.clone() );
	
	    				}
	
	    				this.faceVertexUvs[ i ].push( uvsCopy );
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	}
	
	    } );
	
	    var count$3 = 0;
	    function GeometryIdCount() { return count$3++; };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function DirectGeometry() {
	
	    	Object.defineProperty( this, 'id', { value: GeometryIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.type = 'DirectGeometry';
	
	    	this.indices = [];
	    	this.vertices = [];
	    	this.normals = [];
	    	this.colors = [];
	    	this.uvs = [];
	    	this.uvs2 = [];
	
	    	this.groups = [];
	
	    	this.morphTargets = {};
	
	    	this.skinWeights = [];
	    	this.skinIndices = [];
	
	    	// this.lineDistances = [];
	
	    	this.boundingBox = null;
	    	this.boundingSphere = null;
	
	    	// update flags
	
	    	this.verticesNeedUpdate = false;
	    	this.normalsNeedUpdate = false;
	    	this.colorsNeedUpdate = false;
	    	this.uvsNeedUpdate = false;
	    	this.groupsNeedUpdate = false;
	
	    }
	
	    Object.assign( DirectGeometry.prototype, EventDispatcher.prototype, {
	
	    	computeBoundingBox: Geometry.prototype.computeBoundingBox,
	    	computeBoundingSphere: Geometry.prototype.computeBoundingSphere,
	
	    	computeFaceNormals: function () {
	
	    		console.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );
	
	    	},
	
	    	computeVertexNormals: function () {
	
	    		console.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );
	
	    	},
	
	    	computeGroups: function ( geometry ) {
	
	    		var group;
	    		var groups = [];
	    		var materialIndex;
	
	    		var faces = geometry.faces;
	
	    		for ( var i = 0; i < faces.length; i ++ ) {
	
	    			var face = faces[ i ];
	
	    			// materials
	
	    			if ( face.materialIndex !== materialIndex ) {
	
	    				materialIndex = face.materialIndex;
	
	    				if ( group !== undefined ) {
	
	    					group.count = ( i * 3 ) - group.start;
	    					groups.push( group );
	
	    				}
	
	    				group = {
	    					start: i * 3,
	    					materialIndex: materialIndex
	    				};
	
	    			}
	
	    		}
	
	    		if ( group !== undefined ) {
	
	    			group.count = ( i * 3 ) - group.start;
	    			groups.push( group );
	
	    		}
	
	    		this.groups = groups;
	
	    	},
	
	    	fromGeometry: function ( geometry ) {
	
	    		var faces = geometry.faces;
	    		var vertices = geometry.vertices;
	    		var faceVertexUvs = geometry.faceVertexUvs;
	
	    		var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;
	    		var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;
	
	    		// morphs
	
	    		var morphTargets = geometry.morphTargets;
	    		var morphTargetsLength = morphTargets.length;
	
	    		var morphTargetsPosition;
	
	    		if ( morphTargetsLength > 0 ) {
	
	    			morphTargetsPosition = [];
	
	    			for ( var i = 0; i < morphTargetsLength; i ++ ) {
	
	    				morphTargetsPosition[ i ] = [];
	
	    			}
	
	    			this.morphTargets.position = morphTargetsPosition;
	
	    		}
	
	    		var morphNormals = geometry.morphNormals;
	    		var morphNormalsLength = morphNormals.length;
	
	    		var morphTargetsNormal;
	
	    		if ( morphNormalsLength > 0 ) {
	
	    			morphTargetsNormal = [];
	
	    			for ( var i = 0; i < morphNormalsLength; i ++ ) {
	
	    				morphTargetsNormal[ i ] = [];
	
	    			}
	
	    			this.morphTargets.normal = morphTargetsNormal;
	
	    		}
	
	    		// skins
	
	    		var skinIndices = geometry.skinIndices;
	    		var skinWeights = geometry.skinWeights;
	
	    		var hasSkinIndices = skinIndices.length === vertices.length;
	    		var hasSkinWeights = skinWeights.length === vertices.length;
	
	    		//
	
	    		for ( var i = 0; i < faces.length; i ++ ) {
	
	    			var face = faces[ i ];
	
	    			this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );
	
	    			var vertexNormals = face.vertexNormals;
	
	    			if ( vertexNormals.length === 3 ) {
	
	    				this.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );
	
	    			} else {
	
	    				var normal = face.normal;
	
	    				this.normals.push( normal, normal, normal );
	
	    			}
	
	    			var vertexColors = face.vertexColors;
	
	    			if ( vertexColors.length === 3 ) {
	
	    				this.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );
	
	    			} else {
	
	    				var color = face.color;
	
	    				this.colors.push( color, color, color );
	
	    			}
	
	    			if ( hasFaceVertexUv === true ) {
	
	    				var vertexUvs = faceVertexUvs[ 0 ][ i ];
	
	    				if ( vertexUvs !== undefined ) {
	
	    					this.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );
	
	    				} else {
	
	    					console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );
	
	    					this.uvs.push( new Vector2(), new Vector2(), new Vector2() );
	
	    				}
	
	    			}
	
	    			if ( hasFaceVertexUv2 === true ) {
	
	    				var vertexUvs = faceVertexUvs[ 1 ][ i ];
	
	    				if ( vertexUvs !== undefined ) {
	
	    					this.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );
	
	    				} else {
	
	    					console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );
	
	    					this.uvs2.push( new Vector2(), new Vector2(), new Vector2() );
	
	    				}
	
	    			}
	
	    			// morphs
	
	    			for ( var j = 0; j < morphTargetsLength; j ++ ) {
	
	    				var morphTarget = morphTargets[ j ].vertices;
	
	    				morphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );
	
	    			}
	
	    			for ( var j = 0; j < morphNormalsLength; j ++ ) {
	
	    				var morphNormal = morphNormals[ j ].vertexNormals[ i ];
	
	    				morphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );
	
	    			}
	
	    			// skins
	
	    			if ( hasSkinIndices ) {
	
	    				this.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );
	
	    			}
	
	    			if ( hasSkinWeights ) {
	
	    				this.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );
	
	    			}
	
	    		}
	
	    		this.computeGroups( geometry );
	
	    		this.verticesNeedUpdate = geometry.verticesNeedUpdate;
	    		this.normalsNeedUpdate = geometry.normalsNeedUpdate;
	    		this.colorsNeedUpdate = geometry.colorsNeedUpdate;
	    		this.uvsNeedUpdate = geometry.uvsNeedUpdate;
	    		this.groupsNeedUpdate = geometry.groupsNeedUpdate;
	
	    		return this;
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function BufferGeometry() {
	
	    	Object.defineProperty( this, 'id', { value: GeometryIdCount() } );
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.name = '';
	    	this.type = 'BufferGeometry';
	
	    	this.index = null;
	    	this.attributes = {};
	
	    	this.morphAttributes = {};
	
	    	this.groups = [];
	
	    	this.boundingBox = null;
	    	this.boundingSphere = null;
	
	    	this.drawRange = { start: 0, count: Infinity };
	
	    }
	
	    Object.assign( BufferGeometry.prototype, EventDispatcher.prototype, {
	
	    	isBufferGeometry: true,
	
	    	getIndex: function () {
	
	    		return this.index;
	
	    	},
	
	    	setIndex: function ( index ) {
	
	    		this.index = index;
	
	    	},
	
	    	addAttribute: function ( name, attribute ) {
	
	    		if ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {
	
	    			console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );
	
	    			this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );
	
	    			return;
	
	    		}
	
	    		if ( name === 'index' ) {
	
	    			console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );
	    			this.setIndex( attribute );
	
	    			return;
	
	    		}
	
	    		this.attributes[ name ] = attribute;
	
	    		return this;
	
	    	},
	
	    	getAttribute: function ( name ) {
	
	    		return this.attributes[ name ];
	
	    	},
	
	    	removeAttribute: function ( name ) {
	
	    		delete this.attributes[ name ];
	
	    		return this;
	
	    	},
	
	    	addGroup: function ( start, count, materialIndex ) {
	
	    		this.groups.push( {
	
	    			start: start,
	    			count: count,
	    			materialIndex: materialIndex !== undefined ? materialIndex : 0
	
	    		} );
	
	    	},
	
	    	clearGroups: function () {
	
	    		this.groups = [];
	
	    	},
	
	    	setDrawRange: function ( start, count ) {
	
	    		this.drawRange.start = start;
	    		this.drawRange.count = count;
	
	    	},
	
	    	applyMatrix: function ( matrix ) {
	
	    		var position = this.attributes.position;
	
	    		if ( position !== undefined ) {
	
	    			matrix.applyToVector3Array( position.array );
	    			position.needsUpdate = true;
	
	    		}
	
	    		var normal = this.attributes.normal;
	
	    		if ( normal !== undefined ) {
	
	    			var normalMatrix = new Matrix3().getNormalMatrix( matrix );
	
	    			normalMatrix.applyToVector3Array( normal.array );
	    			normal.needsUpdate = true;
	
	    		}
	
	    		if ( this.boundingBox !== null ) {
	
	    			this.computeBoundingBox();
	
	    		}
	
	    		if ( this.boundingSphere !== null ) {
	
	    			this.computeBoundingSphere();
	
	    		}
	
	    		return this;
	
	    	},
	
	    	rotateX: function () {
	
	    		// rotate geometry around world x-axis
	
	    		var m1;
	
	    		return function rotateX( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationX( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	rotateY: function () {
	
	    		// rotate geometry around world y-axis
	
	    		var m1;
	
	    		return function rotateY( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationY( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	rotateZ: function () {
	
	    		// rotate geometry around world z-axis
	
	    		var m1;
	
	    		return function rotateZ( angle ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeRotationZ( angle );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	translate: function () {
	
	    		// translate geometry
	
	    		var m1;
	
	    		return function translate( x, y, z ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeTranslation( x, y, z );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	scale: function () {
	
	    		// scale geometry
	
	    		var m1;
	
	    		return function scale( x, y, z ) {
	
	    			if ( m1 === undefined ) m1 = new Matrix4();
	
	    			m1.makeScale( x, y, z );
	
	    			this.applyMatrix( m1 );
	
	    			return this;
	
	    		};
	
	    	}(),
	
	    	lookAt: function () {
	
	    		var obj;
	
	    		return function lookAt( vector ) {
	
	    			if ( obj === undefined ) obj = new Object3D();
	
	    			obj.lookAt( vector );
	
	    			obj.updateMatrix();
	
	    			this.applyMatrix( obj.matrix );
	
	    		};
	
	    	}(),
	
	    	center: function () {
	
	    		this.computeBoundingBox();
	
	    		var offset = this.boundingBox.getCenter().negate();
	
	    		this.translate( offset.x, offset.y, offset.z );
	
	    		return offset;
	
	    	},
	
	    	setFromObject: function ( object ) {
	
	    		// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
	
	    		var geometry = object.geometry;
	
	    		if ( (object && object.isPoints) || (object && object.isLine) ) {
	
	    			var positions = new Float32Attribute( geometry.vertices.length * 3, 3 );
	    			var colors = new Float32Attribute( geometry.colors.length * 3, 3 );
	
	    			this.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );
	    			this.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );
	
	    			if ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {
	
	    				var lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );
	
	    				this.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );
	
	    			}
	
	    			if ( geometry.boundingSphere !== null ) {
	
	    				this.boundingSphere = geometry.boundingSphere.clone();
	
	    			}
	
	    			if ( geometry.boundingBox !== null ) {
	
	    				this.boundingBox = geometry.boundingBox.clone();
	
	    			}
	
	    		} else if ( (object && object.isMesh) ) {
	
	    			if ( (geometry && geometry.isGeometry) ) {
	
	    				this.fromGeometry( geometry );
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	updateFromObject: function ( object ) {
	
	    		var geometry = object.geometry;
	
	    		if ( (object && object.isMesh) ) {
	
	    			var direct = geometry.__directGeometry;
	
	    			if ( geometry.elementsNeedUpdate === true ) {
	
	    				direct = undefined;
	    				geometry.elementsNeedUpdate = false;
	
	    			}
	
	    			if ( direct === undefined ) {
	
	    				return this.fromGeometry( geometry );
	
	    			}
	
	    			direct.verticesNeedUpdate = geometry.verticesNeedUpdate;
	    			direct.normalsNeedUpdate = geometry.normalsNeedUpdate;
	    			direct.colorsNeedUpdate = geometry.colorsNeedUpdate;
	    			direct.uvsNeedUpdate = geometry.uvsNeedUpdate;
	    			direct.groupsNeedUpdate = geometry.groupsNeedUpdate;
	
	    			geometry.verticesNeedUpdate = false;
	    			geometry.normalsNeedUpdate = false;
	    			geometry.colorsNeedUpdate = false;
	    			geometry.uvsNeedUpdate = false;
	    			geometry.groupsNeedUpdate = false;
	
	    			geometry = direct;
	
	    		}
	
	    		var attribute;
	
	    		if ( geometry.verticesNeedUpdate === true ) {
	
	    			attribute = this.attributes.position;
	
	    			if ( attribute !== undefined ) {
	
	    				attribute.copyVector3sArray( geometry.vertices );
	    				attribute.needsUpdate = true;
	
	    			}
	
	    			geometry.verticesNeedUpdate = false;
	
	    		}
	
	    		if ( geometry.normalsNeedUpdate === true ) {
	
	    			attribute = this.attributes.normal;
	
	    			if ( attribute !== undefined ) {
	
	    				attribute.copyVector3sArray( geometry.normals );
	    				attribute.needsUpdate = true;
	
	    			}
	
	    			geometry.normalsNeedUpdate = false;
	
	    		}
	
	    		if ( geometry.colorsNeedUpdate === true ) {
	
	    			attribute = this.attributes.color;
	
	    			if ( attribute !== undefined ) {
	
	    				attribute.copyColorsArray( geometry.colors );
	    				attribute.needsUpdate = true;
	
	    			}
	
	    			geometry.colorsNeedUpdate = false;
	
	    		}
	
	    		if ( geometry.uvsNeedUpdate ) {
	
	    			attribute = this.attributes.uv;
	
	    			if ( attribute !== undefined ) {
	
	    				attribute.copyVector2sArray( geometry.uvs );
	    				attribute.needsUpdate = true;
	
	    			}
	
	    			geometry.uvsNeedUpdate = false;
	
	    		}
	
	    		if ( geometry.lineDistancesNeedUpdate ) {
	
	    			attribute = this.attributes.lineDistance;
	
	    			if ( attribute !== undefined ) {
	
	    				attribute.copyArray( geometry.lineDistances );
	    				attribute.needsUpdate = true;
	
	    			}
	
	    			geometry.lineDistancesNeedUpdate = false;
	
	    		}
	
	    		if ( geometry.groupsNeedUpdate ) {
	
	    			geometry.computeGroups( object.geometry );
	    			this.groups = geometry.groups;
	
	    			geometry.groupsNeedUpdate = false;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	fromGeometry: function ( geometry ) {
	
	    		geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );
	
	    		return this.fromDirectGeometry( geometry.__directGeometry );
	
	    	},
	
	    	fromDirectGeometry: function ( geometry ) {
	
	    		var positions = new Float32Array( geometry.vertices.length * 3 );
	    		this.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );
	
	    		if ( geometry.normals.length > 0 ) {
	
	    			var normals = new Float32Array( geometry.normals.length * 3 );
	    			this.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );
	
	    		}
	
	    		if ( geometry.colors.length > 0 ) {
	
	    			var colors = new Float32Array( geometry.colors.length * 3 );
	    			this.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );
	
	    		}
	
	    		if ( geometry.uvs.length > 0 ) {
	
	    			var uvs = new Float32Array( geometry.uvs.length * 2 );
	    			this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );
	
	    		}
	
	    		if ( geometry.uvs2.length > 0 ) {
	
	    			var uvs2 = new Float32Array( geometry.uvs2.length * 2 );
	    			this.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );
	
	    		}
	
	    		if ( geometry.indices.length > 0 ) {
	
	    			var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;
	    			var indices = new TypeArray( geometry.indices.length * 3 );
	    			this.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );
	
	    		}
	
	    		// groups
	
	    		this.groups = geometry.groups;
	
	    		// morphs
	
	    		for ( var name in geometry.morphTargets ) {
	
	    			var array = [];
	    			var morphTargets = geometry.morphTargets[ name ];
	
	    			for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {
	
	    				var morphTarget = morphTargets[ i ];
	
	    				var attribute = new Float32Attribute( morphTarget.length * 3, 3 );
	
	    				array.push( attribute.copyVector3sArray( morphTarget ) );
	
	    			}
	
	    			this.morphAttributes[ name ] = array;
	
	    		}
	
	    		// skinning
	
	    		if ( geometry.skinIndices.length > 0 ) {
	
	    			var skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );
	    			this.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );
	
	    		}
	
	    		if ( geometry.skinWeights.length > 0 ) {
	
	    			var skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );
	    			this.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );
	
	    		}
	
	    		//
	
	    		if ( geometry.boundingSphere !== null ) {
	
	    			this.boundingSphere = geometry.boundingSphere.clone();
	
	    		}
	
	    		if ( geometry.boundingBox !== null ) {
	
	    			this.boundingBox = geometry.boundingBox.clone();
	
	    		}
	
	    		return this;
	
	    	},
	
	    	computeBoundingBox: function () {
	
	    		if ( this.boundingBox === null ) {
	
	    			this.boundingBox = new Box3();
	
	    		}
	
	    		var positions = this.attributes.position.array;
	
	    		if ( positions !== undefined ) {
	
	    			this.boundingBox.setFromArray( positions );
	
	    		} else {
	
	    			this.boundingBox.makeEmpty();
	
	    		}
	
	    		if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {
	
	    			console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this );
	
	    		}
	
	    	},
	
	    	computeBoundingSphere: function () {
	
	    		var box = new Box3();
	    		var vector = new Vector3();
	
	    		return function computeBoundingSphere() {
	
	    			if ( this.boundingSphere === null ) {
	
	    				this.boundingSphere = new Sphere();
	
	    			}
	
	    			var positions = this.attributes.position;
	
	    			if ( positions ) {
	
	    				var array = positions.array;
	    				var center = this.boundingSphere.center;
	
	    				box.setFromArray( array );
	    				box.getCenter( center );
	
	    				// hoping to find a boundingSphere with a radius smaller than the
	    				// boundingSphere of the boundingBox: sqrt(3) smaller in the best case
	
	    				var maxRadiusSq = 0;
	
	    				for ( var i = 0, il = array.length; i < il; i += 3 ) {
	
	    					vector.fromArray( array, i );
	    					maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );
	
	    				}
	
	    				this.boundingSphere.radius = Math.sqrt( maxRadiusSq );
	
	    				if ( isNaN( this.boundingSphere.radius ) ) {
	
	    					console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this );
	
	    				}
	
	    			}
	
	    		};
	
	    	}(),
	
	    	computeFaceNormals: function () {
	
	    		// backwards compatibility
	
	    	},
	
	    	computeVertexNormals: function () {
	
	    		var index = this.index;
	    		var attributes = this.attributes;
	    		var groups = this.groups;
	
	    		if ( attributes.position ) {
	
	    			var positions = attributes.position.array;
	
	    			if ( attributes.normal === undefined ) {
	
	    				this.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );
	
	    			} else {
	
	    				// reset existing normals to zero
	
	    				var array = attributes.normal.array;
	
	    				for ( var i = 0, il = array.length; i < il; i ++ ) {
	
	    					array[ i ] = 0;
	
	    				}
	
	    			}
	
	    			var normals = attributes.normal.array;
	
	    			var vA, vB, vC,
	
	    			pA = new Vector3(),
	    			pB = new Vector3(),
	    			pC = new Vector3(),
	
	    			cb = new Vector3(),
	    			ab = new Vector3();
	
	    			// indexed elements
	
	    			if ( index ) {
	
	    				var indices = index.array;
	
	    				if ( groups.length === 0 ) {
	
	    					this.addGroup( 0, indices.length );
	
	    				}
	
	    				for ( var j = 0, jl = groups.length; j < jl; ++ j ) {
	
	    					var group = groups[ j ];
	
	    					var start = group.start;
	    					var count = group.count;
	
	    					for ( var i = start, il = start + count; i < il; i += 3 ) {
	
	    						vA = indices[ i + 0 ] * 3;
	    						vB = indices[ i + 1 ] * 3;
	    						vC = indices[ i + 2 ] * 3;
	
	    						pA.fromArray( positions, vA );
	    						pB.fromArray( positions, vB );
	    						pC.fromArray( positions, vC );
	
	    						cb.subVectors( pC, pB );
	    						ab.subVectors( pA, pB );
	    						cb.cross( ab );
	
	    						normals[ vA ] += cb.x;
	    						normals[ vA + 1 ] += cb.y;
	    						normals[ vA + 2 ] += cb.z;
	
	    						normals[ vB ] += cb.x;
	    						normals[ vB + 1 ] += cb.y;
	    						normals[ vB + 2 ] += cb.z;
	
	    						normals[ vC ] += cb.x;
	    						normals[ vC + 1 ] += cb.y;
	    						normals[ vC + 2 ] += cb.z;
	
	    					}
	
	    				}
	
	    			} else {
	
	    				// non-indexed elements (unconnected triangle soup)
	
	    				for ( var i = 0, il = positions.length; i < il; i += 9 ) {
	
	    					pA.fromArray( positions, i );
	    					pB.fromArray( positions, i + 3 );
	    					pC.fromArray( positions, i + 6 );
	
	    					cb.subVectors( pC, pB );
	    					ab.subVectors( pA, pB );
	    					cb.cross( ab );
	
	    					normals[ i ] = cb.x;
	    					normals[ i + 1 ] = cb.y;
	    					normals[ i + 2 ] = cb.z;
	
	    					normals[ i + 3 ] = cb.x;
	    					normals[ i + 4 ] = cb.y;
	    					normals[ i + 5 ] = cb.z;
	
	    					normals[ i + 6 ] = cb.x;
	    					normals[ i + 7 ] = cb.y;
	    					normals[ i + 8 ] = cb.z;
	
	    				}
	
	    			}
	
	    			this.normalizeNormals();
	
	    			attributes.normal.needsUpdate = true;
	
	    		}
	
	    	},
	
	    	merge: function ( geometry, offset ) {
	
	    		if ( (geometry && geometry.isBufferGeometry) === false ) {
	
	    			console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );
	    			return;
	
	    		}
	
	    		if ( offset === undefined ) offset = 0;
	
	    		var attributes = this.attributes;
	
	    		for ( var key in attributes ) {
	
	    			if ( geometry.attributes[ key ] === undefined ) continue;
	
	    			var attribute1 = attributes[ key ];
	    			var attributeArray1 = attribute1.array;
	
	    			var attribute2 = geometry.attributes[ key ];
	    			var attributeArray2 = attribute2.array;
	
	    			var attributeSize = attribute2.itemSize;
	
	    			for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {
	
	    				attributeArray1[ j ] = attributeArray2[ i ];
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	normalizeNormals: function () {
	
	    		var normals = this.attributes.normal.array;
	
	    		var x, y, z, n;
	
	    		for ( var i = 0, il = normals.length; i < il; i += 3 ) {
	
	    			x = normals[ i ];
	    			y = normals[ i + 1 ];
	    			z = normals[ i + 2 ];
	
	    			n = 1.0 / Math.sqrt( x * x + y * y + z * z );
	
	    			normals[ i ] *= n;
	    			normals[ i + 1 ] *= n;
	    			normals[ i + 2 ] *= n;
	
	    		}
	
	    	},
	
	    	toNonIndexed: function () {
	
	    		if ( this.index === null ) {
	
	    			console.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );
	    			return this;
	
	    		}
	
	    		var geometry2 = new BufferGeometry();
	
	    		var indices = this.index.array;
	    		var attributes = this.attributes;
	
	    		for ( var name in attributes ) {
	
	    			var attribute = attributes[ name ];
	
	    			var array = attribute.array;
	    			var itemSize = attribute.itemSize;
	
	    			var array2 = new array.constructor( indices.length * itemSize );
	
	    			var index = 0, index2 = 0;
	
	    			for ( var i = 0, l = indices.length; i < l; i ++ ) {
	
	    				index = indices[ i ] * itemSize;
	
	    				for ( var j = 0; j < itemSize; j ++ ) {
	
	    					array2[ index2 ++ ] = array[ index ++ ];
	
	    				}
	
	    			}
	
	    			geometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );
	
	    		}
	
	    		return geometry2;
	
	    	},
	
	    	toJSON: function () {
	
	    		var data = {
	    			metadata: {
	    				version: 4.4,
	    				type: 'BufferGeometry',
	    				generator: 'BufferGeometry.toJSON'
	    			}
	    		};
	
	    		// standard BufferGeometry serialization
	
	    		data.uuid = this.uuid;
	    		data.type = this.type;
	    		if ( this.name !== '' ) data.name = this.name;
	
	    		if ( this.parameters !== undefined ) {
	
	    			var parameters = this.parameters;
	
	    			for ( var key in parameters ) {
	
	    				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];
	
	    			}
	
	    			return data;
	
	    		}
	
	    		data.data = { attributes: {} };
	
	    		var index = this.index;
	
	    		if ( index !== null ) {
	
	    			var array = Array.prototype.slice.call( index.array );
	
	    			data.data.index = {
	    				type: index.array.constructor.name,
	    				array: array
	    			};
	
	    		}
	
	    		var attributes = this.attributes;
	
	    		for ( var key in attributes ) {
	
	    			var attribute = attributes[ key ];
	
	    			var array = Array.prototype.slice.call( attribute.array );
	
	    			data.data.attributes[ key ] = {
	    				itemSize: attribute.itemSize,
	    				type: attribute.array.constructor.name,
	    				array: array,
	    				normalized: attribute.normalized
	    			};
	
	    		}
	
	    		var groups = this.groups;
	
	    		if ( groups.length > 0 ) {
	
	    			data.data.groups = JSON.parse( JSON.stringify( groups ) );
	
	    		}
	
	    		var boundingSphere = this.boundingSphere;
	
	    		if ( boundingSphere !== null ) {
	
	    			data.data.boundingSphere = {
	    				center: boundingSphere.center.toArray(),
	    				radius: boundingSphere.radius
	    			};
	
	    		}
	
	    		return data;
	
	    	},
	
	    	clone: function () {
	
	    		/*
	    		// Handle primitives
	
	    		var parameters = this.parameters;
	
	    		if ( parameters !== undefined ) {
	
	    			var values = [];
	
	    			for ( var key in parameters ) {
	
	    				values.push( parameters[ key ] );
	
	    			}
	
	    			var geometry = Object.create( this.constructor.prototype );
	    			this.constructor.apply( geometry, values );
	    			return geometry;
	
	    		}
	
	    		return new this.constructor().copy( this );
	    		*/
	
	    		return new BufferGeometry().copy( this );
	
	    	},
	
	    	copy: function ( source ) {
	
	    		var index = source.index;
	
	    		if ( index !== null ) {
	
	    			this.setIndex( index.clone() );
	
	    		}
	
	    		var attributes = source.attributes;
	
	    		for ( var name in attributes ) {
	
	    			var attribute = attributes[ name ];
	    			this.addAttribute( name, attribute.clone() );
	
	    		}
	
	    		var groups = source.groups;
	
	    		for ( var i = 0, l = groups.length; i < l; i ++ ) {
	
	    			var group = groups[ i ];
	    			this.addGroup( group.start, group.count, group.materialIndex );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	dispose: function () {
	
	    		this.dispatchEvent( { type: 'dispose' } );
	
	    	}
	
	    } );
	
	    BufferGeometry.MaxIndex = 65535;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     * @author mikael emtinger / http://gomo.se/
	     * @author jonobr1 / http://jonobr1.com/
	     */
	
	    function Mesh( geometry, material ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Mesh';
	
	    	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	    	this.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );
	
	    	this.drawMode = TrianglesDrawMode;
	
	    	this.updateMorphTargets();
	
	    }
	
	    Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Mesh,
	
	    	isMesh: true,
	
	    	setDrawMode: function ( value ) {
	
	    		this.drawMode = value;
	
	    	},
	
	    	copy: function ( source ) {
	
	    		Object3D.prototype.copy.call( this, source );
	
	    		this.drawMode = source.drawMode;
	
	    		return this;
	
	    	},
	
	    	updateMorphTargets: function () {
	
	    		var morphTargets = this.geometry.morphTargets;
	
	    		if ( morphTargets !== undefined && morphTargets.length > 0 ) {
	
	    			this.morphTargetInfluences = [];
	    			this.morphTargetDictionary = {};
	
	    			for ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {
	
	    				this.morphTargetInfluences.push( 0 );
	    				this.morphTargetDictionary[ morphTargets[ m ].name ] = m;
	
	    			}
	
	    		}
	
	    	},
	
	    	raycast: ( function () {
	
	    		var inverseMatrix = new Matrix4();
	    		var ray = new Ray();
	    		var sphere = new Sphere();
	
	    		var vA = new Vector3();
	    		var vB = new Vector3();
	    		var vC = new Vector3();
	
	    		var tempA = new Vector3();
	    		var tempB = new Vector3();
	    		var tempC = new Vector3();
	
	    		var uvA = new Vector2();
	    		var uvB = new Vector2();
	    		var uvC = new Vector2();
	
	    		var barycoord = new Vector3();
	
	    		var intersectionPoint = new Vector3();
	    		var intersectionPointWorld = new Vector3();
	
	    		function uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {
	
	    			Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );
	
	    			uv1.multiplyScalar( barycoord.x );
	    			uv2.multiplyScalar( barycoord.y );
	    			uv3.multiplyScalar( barycoord.z );
	
	    			uv1.add( uv2 ).add( uv3 );
	
	    			return uv1.clone();
	
	    		}
	
	    		function checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {
	
	    			var intersect;
	    			var material = object.material;
	
	    			if ( material.side === BackSide ) {
	
	    				intersect = ray.intersectTriangle( pC, pB, pA, true, point );
	
	    			} else {
	
	    				intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );
	
	    			}
	
	    			if ( intersect === null ) return null;
	
	    			intersectionPointWorld.copy( point );
	    			intersectionPointWorld.applyMatrix4( object.matrixWorld );
	
	    			var distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );
	
	    			if ( distance < raycaster.near || distance > raycaster.far ) return null;
	
	    			return {
	    				distance: distance,
	    				point: intersectionPointWorld.clone(),
	    				object: object
	    			};
	
	    		}
	
	    		function checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {
	
	    			vA.fromArray( positions, a * 3 );
	    			vB.fromArray( positions, b * 3 );
	    			vC.fromArray( positions, c * 3 );
	
	    			var intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );
	
	    			if ( intersection ) {
	
	    				if ( uvs ) {
	
	    					uvA.fromArray( uvs, a * 2 );
	    					uvB.fromArray( uvs, b * 2 );
	    					uvC.fromArray( uvs, c * 2 );
	
	    					intersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );
	
	    				}
	
	    				intersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );
	    				intersection.faceIndex = a;
	
	    			}
	
	    			return intersection;
	
	    		}
	
	    		return function raycast( raycaster, intersects ) {
	
	    			var geometry = this.geometry;
	    			var material = this.material;
	    			var matrixWorld = this.matrixWorld;
	
	    			if ( material === undefined ) return;
	
	    			// Checking boundingSphere distance to ray
	
	    			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();
	
	    			sphere.copy( geometry.boundingSphere );
	    			sphere.applyMatrix4( matrixWorld );
	
	    			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;
	
	    			//
	
	    			inverseMatrix.getInverse( matrixWorld );
	    			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );
	
	    			// Check boundingBox before continuing
	
	    			if ( geometry.boundingBox !== null ) {
	
	    				if ( ray.intersectsBox( geometry.boundingBox ) === false ) return;
	
	    			}
	
	    			var uvs, intersection;
	
	    			if ( (geometry && geometry.isBufferGeometry) ) {
	
	    				var a, b, c;
	    				var index = geometry.index;
	    				var attributes = geometry.attributes;
	    				var positions = attributes.position.array;
	
	    				if ( attributes.uv !== undefined ) {
	
	    					uvs = attributes.uv.array;
	
	    				}
	
	    				if ( index !== null ) {
	
	    					var indices = index.array;
	
	    					for ( var i = 0, l = indices.length; i < l; i += 3 ) {
	
	    						a = indices[ i ];
	    						b = indices[ i + 1 ];
	    						c = indices[ i + 2 ];
	
	    						intersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );
	
	    						if ( intersection ) {
	
	    							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics
	    							intersects.push( intersection );
	
	    						}
	
	    					}
	
	    				} else {
	
	
	    					for ( var i = 0, l = positions.length; i < l; i += 9 ) {
	
	    						a = i / 3;
	    						b = a + 1;
	    						c = a + 2;
	
	    						intersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );
	
	    						if ( intersection ) {
	
	    							intersection.index = a; // triangle number in positions buffer semantics
	    							intersects.push( intersection );
	
	    						}
	
	    					}
	
	    				}
	
	    			} else if ( (geometry && geometry.isGeometry) ) {
	
	    				var fvA, fvB, fvC;
	    				var isFaceMaterial = (material && material.isMultiMaterial);
	    				var materials = isFaceMaterial === true ? material.materials : null;
	
	    				var vertices = geometry.vertices;
	    				var faces = geometry.faces;
	    				var faceVertexUvs = geometry.faceVertexUvs[ 0 ];
	    				if ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;
	
	    				for ( var f = 0, fl = faces.length; f < fl; f ++ ) {
	
	    					var face = faces[ f ];
	    					var faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;
	
	    					if ( faceMaterial === undefined ) continue;
	
	    					fvA = vertices[ face.a ];
	    					fvB = vertices[ face.b ];
	    					fvC = vertices[ face.c ];
	
	    					if ( faceMaterial.morphTargets === true ) {
	
	    						var morphTargets = geometry.morphTargets;
	    						var morphInfluences = this.morphTargetInfluences;
	
	    						vA.set( 0, 0, 0 );
	    						vB.set( 0, 0, 0 );
	    						vC.set( 0, 0, 0 );
	
	    						for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {
	
	    							var influence = morphInfluences[ t ];
	
	    							if ( influence === 0 ) continue;
	
	    							var targets = morphTargets[ t ].vertices;
	
	    							vA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );
	    							vB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );
	    							vC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );
	
	    						}
	
	    						vA.add( fvA );
	    						vB.add( fvB );
	    						vC.add( fvC );
	
	    						fvA = vA;
	    						fvB = vB;
	    						fvC = vC;
	
	    					}
	
	    					intersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );
	
	    					if ( intersection ) {
	
	    						if ( uvs ) {
	
	    							var uvs_f = uvs[ f ];
	    							uvA.copy( uvs_f[ 0 ] );
	    							uvB.copy( uvs_f[ 1 ] );
	    							uvC.copy( uvs_f[ 2 ] );
	
	    							intersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );
	
	    						}
	
	    						intersection.face = face;
	    						intersection.faceIndex = f;
	    						intersects.push( intersection );
	
	    					}
	
	    				}
	
	    			}
	
	    		};
	
	    	}() ),
	
	    	clone: function () {
	
	    		return new this.constructor( this.geometry, this.material ).copy( this );
	
	    	}
	
	    } );
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     */
	
	    function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'BoxBufferGeometry';
	
	    	this.parameters = {
	    		width: width,
	    		height: height,
	    		depth: depth,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments,
	    		depthSegments: depthSegments
	    	};
	
	    	var scope = this;
	
	    	// segments
	    	widthSegments = Math.floor( widthSegments ) || 1;
	    	heightSegments = Math.floor( heightSegments ) || 1;
	    	depthSegments = Math.floor( depthSegments ) || 1;
	
	    	// these are used to calculate buffer length
	    	var vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );
	    	var indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );
	
	    	// buffers
	    	var indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );
	    	var vertices = new Float32Array( vertexCount * 3 );
	    	var normals = new Float32Array( vertexCount * 3 );
	    	var uvs = new Float32Array( vertexCount * 2 );
	
	    	// offset variables
	    	var vertexBufferOffset = 0;
	    	var uvBufferOffset = 0;
	    	var indexBufferOffset = 0;
	    	var numberOfVertices = 0;
	
	    	// group variables
	    	var groupStart = 0;
	
	    	// build each side of the box geometry
	    	buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px
	    	buildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx
	    	buildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py
	    	buildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny
	    	buildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz
	    	buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz
	
	    	// build geometry
	    	this.setIndex( new BufferAttribute( indices, 1 ) );
	    	this.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );
	    	this.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );
	    	this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );
	
	    	// helper functions
	
	    	function calculateVertexCount( w, h, d ) {
	
	    		var vertices = 0;
	
	    		// calculate the amount of vertices for each side (plane)
	    		vertices += (w + 1) * (h + 1) * 2; // xy
	    		vertices += (w + 1) * (d + 1) * 2; // xz
	    		vertices += (d + 1) * (h + 1) * 2; // zy
	
	    		return vertices;
	
	    	}
	
	    	function calculateIndexCount( w, h, d ) {
	
	    		var index = 0;
	
	    		// calculate the amount of squares for each side
	    		index += w * h * 2; // xy
	    		index += w * d * 2; // xz
	    		index += d * h * 2; // zy
	
	    		return index * 6; // two triangles per square => six vertices per square
	
	    	}
	
	    	function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {
	
	    		var segmentWidth	= width / gridX;
	    		var segmentHeight = height / gridY;
	
	    		var widthHalf = width / 2;
	    		var heightHalf = height / 2;
	    		var depthHalf = depth / 2;
	
	    		var gridX1 = gridX + 1;
	    		var gridY1 = gridY + 1;
	
	    		var vertexCounter = 0;
	    		var groupCount = 0;
	
	    		var vector = new Vector3();
	
	    		// generate vertices, normals and uvs
	
	    		for ( var iy = 0; iy < gridY1; iy ++ ) {
	
	    			var y = iy * segmentHeight - heightHalf;
	
	    			for ( var ix = 0; ix < gridX1; ix ++ ) {
	
	    				var x = ix * segmentWidth - widthHalf;
	
	    				// set values to correct vector component
	    				vector[ u ] = x * udir;
	    				vector[ v ] = y * vdir;
	    				vector[ w ] = depthHalf;
	
	    				// now apply vector to vertex buffer
	    				vertices[ vertexBufferOffset ] = vector.x;
	    				vertices[ vertexBufferOffset + 1 ] = vector.y;
	    				vertices[ vertexBufferOffset + 2 ] = vector.z;
	
	    				// set values to correct vector component
	    				vector[ u ] = 0;
	    				vector[ v ] = 0;
	    				vector[ w ] = depth > 0 ? 1 : - 1;
	
	    				// now apply vector to normal buffer
	    				normals[ vertexBufferOffset ] = vector.x;
	    				normals[ vertexBufferOffset + 1 ] = vector.y;
	    				normals[ vertexBufferOffset + 2 ] = vector.z;
	
	    				// uvs
	    				uvs[ uvBufferOffset ] = ix / gridX;
	    				uvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );
	
	    				// update offsets and counters
	    				vertexBufferOffset += 3;
	    				uvBufferOffset += 2;
	    				vertexCounter += 1;
	
	    			}
	
	    		}
	
	    		// 1. you need three indices to draw a single face
	    		// 2. a single segment consists of two faces
	    		// 3. so we need to generate six (2*3) indices per segment
	
	    		for ( iy = 0; iy < gridY; iy ++ ) {
	
	    			for ( ix = 0; ix < gridX; ix ++ ) {
	
	    				// indices
	    				var a = numberOfVertices + ix + gridX1 * iy;
	    				var b = numberOfVertices + ix + gridX1 * ( iy + 1 );
	    				var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );
	    				var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;
	
	    				// face one
	    				indices[ indexBufferOffset ] = a;
	    				indices[ indexBufferOffset + 1 ] = b;
	    				indices[ indexBufferOffset + 2 ] = d;
	
	    				// face two
	    				indices[ indexBufferOffset + 3 ] = b;
	    				indices[ indexBufferOffset + 4 ] = c;
	    				indices[ indexBufferOffset + 5 ] = d;
	
	    				// update offsets and counters
	    				indexBufferOffset += 6;
	    				groupCount += 6;
	
	    			}
	
	    		}
	
	    		// add a group to the geometry. this will ensure multi material support
	    		scope.addGroup( groupStart, groupCount, materialIndex );
	
	    		// calculate new start value for groups
	    		groupStart += groupCount;
	
	    		// update total number of vertices
	    		numberOfVertices += vertexCounter;
	
	    	}
	
	    }
	
	    BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as
	     */
	
	    function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'PlaneBufferGeometry';
	
	    	this.parameters = {
	    		width: width,
	    		height: height,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments
	    	};
	
	    	var width_half = width / 2;
	    	var height_half = height / 2;
	
	    	var gridX = Math.floor( widthSegments ) || 1;
	    	var gridY = Math.floor( heightSegments ) || 1;
	
	    	var gridX1 = gridX + 1;
	    	var gridY1 = gridY + 1;
	
	    	var segment_width = width / gridX;
	    	var segment_height = height / gridY;
	
	    	var vertices = new Float32Array( gridX1 * gridY1 * 3 );
	    	var normals = new Float32Array( gridX1 * gridY1 * 3 );
	    	var uvs = new Float32Array( gridX1 * gridY1 * 2 );
	
	    	var offset = 0;
	    	var offset2 = 0;
	
	    	for ( var iy = 0; iy < gridY1; iy ++ ) {
	
	    		var y = iy * segment_height - height_half;
	
	    		for ( var ix = 0; ix < gridX1; ix ++ ) {
	
	    			var x = ix * segment_width - width_half;
	
	    			vertices[ offset ] = x;
	    			vertices[ offset + 1 ] = - y;
	
	    			normals[ offset + 2 ] = 1;
	
	    			uvs[ offset2 ] = ix / gridX;
	    			uvs[ offset2 + 1 ] = 1 - ( iy / gridY );
	
	    			offset += 3;
	    			offset2 += 2;
	
	    		}
	
	    	}
	
	    	offset = 0;
	
	    	var indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );
	
	    	for ( var iy = 0; iy < gridY; iy ++ ) {
	
	    		for ( var ix = 0; ix < gridX; ix ++ ) {
	
	    			var a = ix + gridX1 * iy;
	    			var b = ix + gridX1 * ( iy + 1 );
	    			var c = ( ix + 1 ) + gridX1 * ( iy + 1 );
	    			var d = ( ix + 1 ) + gridX1 * iy;
	
	    			indices[ offset ] = a;
	    			indices[ offset + 1 ] = b;
	    			indices[ offset + 2 ] = d;
	
	    			indices[ offset + 3 ] = b;
	    			indices[ offset + 4 ] = c;
	    			indices[ offset + 5 ] = d;
	
	    			offset += 6;
	
	    		}
	
	    	}
	
	    	this.setIndex( new BufferAttribute( indices, 1 ) );
	    	this.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );
	    	this.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );
	    	this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );
	
	    }
	
	    PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author mikael emtinger / http://gomo.se/
	     * @author WestLangley / http://github.com/WestLangley
	    */
	
	    function Camera() {
	
	    	Object3D.call( this );
	
	    	this.type = 'Camera';
	
	    	this.matrixWorldInverse = new Matrix4();
	    	this.projectionMatrix = new Matrix4();
	
	    }
	
	    Camera.prototype = Object.create( Object3D.prototype );
	    Camera.prototype.constructor = Camera;
	
	    Camera.prototype.isCamera = true;
	
	    Camera.prototype.getWorldDirection = function () {
	
	    	var quaternion = new Quaternion();
	
	    	return function getWorldDirection( optionalTarget ) {
	
	    		var result = optionalTarget || new Vector3();
	
	    		this.getWorldQuaternion( quaternion );
	
	    		return result.set( 0, 0, - 1 ).applyQuaternion( quaternion );
	
	    	};
	
	    }();
	
	    Camera.prototype.lookAt = function () {
	
	    	// This routine does not support cameras with rotated and/or translated parent(s)
	
	    	var m1 = new Matrix4();
	
	    	return function lookAt( vector ) {
	
	    		m1.lookAt( this.position, vector, this.up );
	
	    		this.quaternion.setFromRotationMatrix( m1 );
	
	    	};
	
	    }();
	
	    Camera.prototype.clone = function () {
	
	    	return new this.constructor().copy( this );
	
	    };
	
	    Camera.prototype.copy = function ( source ) {
	
	    	Object3D.prototype.copy.call( this, source );
	
	    	this.matrixWorldInverse.copy( source.matrixWorldInverse );
	    	this.projectionMatrix.copy( source.projectionMatrix );
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author greggman / http://games.greggman.com/
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * @author tschw
	     */
	
	    function PerspectiveCamera( fov, aspect, near, far ) {
	
	    	Camera.call( this );
	
	    	this.type = 'PerspectiveCamera';
	
	    	this.fov = fov !== undefined ? fov : 50;
	    	this.zoom = 1;
	
	    	this.near = near !== undefined ? near : 0.1;
	    	this.far = far !== undefined ? far : 2000;
	    	this.focus = 10;
	
	    	this.aspect = aspect !== undefined ? aspect : 1;
	    	this.view = null;
	
	    	this.filmGauge = 35;	// width of the film (default in millimeters)
	    	this.filmOffset = 0;	// horizontal film offset (same unit as gauge)
	
	    	this.updateProjectionMatrix();
	
	    }
	
	    PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {
	
	    	constructor: PerspectiveCamera,
	
	    	isPerspectiveCamera: true,
	
	    	copy: function ( source ) {
	
	    		Camera.prototype.copy.call( this, source );
	
	    		this.fov = source.fov;
	    		this.zoom = source.zoom;
	
	    		this.near = source.near;
	    		this.far = source.far;
	    		this.focus = source.focus;
	
	    		this.aspect = source.aspect;
	    		this.view = source.view === null ? null : Object.assign( {}, source.view );
	
	    		this.filmGauge = source.filmGauge;
	    		this.filmOffset = source.filmOffset;
	
	    		return this;
	
	    	},
	
	    	/**
	    	 * Sets the FOV by focal length in respect to the current .filmGauge.
	    	 *
	    	 * The default film gauge is 35, so that the focal length can be specified for
	    	 * a 35mm (full frame) camera.
	    	 *
	    	 * Values for focal length and film gauge must have the same unit.
	    	 */
	    	setFocalLength: function ( focalLength ) {
	
	    		// see http://www.bobatkins.com/photography/technical/field_of_view.html
	    		var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;
	
	    		this.fov = exports.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );
	    		this.updateProjectionMatrix();
	
	    	},
	
	    	/**
	    	 * Calculates the focal length from the current .fov and .filmGauge.
	    	 */
	    	getFocalLength: function () {
	
	    		var vExtentSlope = Math.tan( exports.Math.DEG2RAD * 0.5 * this.fov );
	
	    		return 0.5 * this.getFilmHeight() / vExtentSlope;
	
	    	},
	
	    	getEffectiveFOV: function () {
	
	    		return exports.Math.RAD2DEG * 2 * Math.atan(
	    				Math.tan( exports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );
	
	    	},
	
	    	getFilmWidth: function () {
	
	    		// film not completely covered in portrait format (aspect < 1)
	    		return this.filmGauge * Math.min( this.aspect, 1 );
	
	    	},
	
	    	getFilmHeight: function () {
	
	    		// film not completely covered in landscape format (aspect > 1)
	    		return this.filmGauge / Math.max( this.aspect, 1 );
	
	    	},
	
	    	/**
	    	 * Sets an offset in a larger frustum. This is useful for multi-window or
	    	 * multi-monitor/multi-machine setups.
	    	 *
	    	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	    	 * the monitors are in grid like this
	    	 *
	    	 *   +---+---+---+
	    	 *   | A | B | C |
	    	 *   +---+---+---+
	    	 *   | D | E | F |
	    	 *   +---+---+---+
	    	 *
	    	 * then for each monitor you would call it like this
	    	 *
	    	 *   var w = 1920;
	    	 *   var h = 1080;
	    	 *   var fullWidth = w * 3;
	    	 *   var fullHeight = h * 2;
	    	 *
	    	 *   --A--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	    	 *   --B--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	    	 *   --C--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	    	 *   --D--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	    	 *   --E--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	    	 *   --F--
	    	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	    	 *
	    	 *   Note there is no reason monitors have to be the same size or in a grid.
	    	 */
	    	setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {
	
	    		this.aspect = fullWidth / fullHeight;
	
	    		this.view = {
	    			fullWidth: fullWidth,
	    			fullHeight: fullHeight,
	    			offsetX: x,
	    			offsetY: y,
	    			width: width,
	    			height: height
	    		};
	
	    		this.updateProjectionMatrix();
	
	    	},
	
	    	clearViewOffset: function() {
	
	    		this.view = null;
	    		this.updateProjectionMatrix();
	
	    	},
	
	    	updateProjectionMatrix: function () {
	
	    		var near = this.near,
	    			top = near * Math.tan(
	    					exports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,
	    			height = 2 * top,
	    			width = this.aspect * height,
	    			left = - 0.5 * width,
	    			view = this.view;
	
	    		if ( view !== null ) {
	
	    			var fullWidth = view.fullWidth,
	    				fullHeight = view.fullHeight;
	
	    			left += view.offsetX * width / fullWidth;
	    			top -= view.offsetY * height / fullHeight;
	    			width *= view.width / fullWidth;
	    			height *= view.height / fullHeight;
	
	    		}
	
	    		var skew = this.filmOffset;
	    		if ( skew !== 0 ) left += near * skew / this.getFilmWidth();
	
	    		this.projectionMatrix.makeFrustum(
	    				left, left + width, top - height, top, near, this.far );
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		var data = Object3D.prototype.toJSON.call( this, meta );
	
	    		data.object.fov = this.fov;
	    		data.object.zoom = this.zoom;
	
	    		data.object.near = this.near;
	    		data.object.far = this.far;
	    		data.object.focus = this.focus;
	
	    		data.object.aspect = this.aspect;
	
	    		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );
	
	    		data.object.filmGauge = this.filmGauge;
	    		data.object.filmOffset = this.filmOffset;
	
	    		return data;
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author arose / http://github.com/arose
	     */
	
	    function OrthographicCamera( left, right, top, bottom, near, far ) {
	
	    	Camera.call( this );
	
	    	this.type = 'OrthographicCamera';
	
	    	this.zoom = 1;
	    	this.view = null;
	
	    	this.left = left;
	    	this.right = right;
	    	this.top = top;
	    	this.bottom = bottom;
	
	    	this.near = ( near !== undefined ) ? near : 0.1;
	    	this.far = ( far !== undefined ) ? far : 2000;
	
	    	this.updateProjectionMatrix();
	
	    }
	
	    OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {
	
	    	constructor: OrthographicCamera,
	
	    	isOrthographicCamera: true,
	
	    	copy: function ( source ) {
	
	    		Camera.prototype.copy.call( this, source );
	
	    		this.left = source.left;
	    		this.right = source.right;
	    		this.top = source.top;
	    		this.bottom = source.bottom;
	    		this.near = source.near;
	    		this.far = source.far;
	
	    		this.zoom = source.zoom;
	    		this.view = source.view === null ? null : Object.assign( {}, source.view );
	
	    		return this;
	
	    	},
	
	    	setViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {
	
	    		this.view = {
	    			fullWidth: fullWidth,
	    			fullHeight: fullHeight,
	    			offsetX: x,
	    			offsetY: y,
	    			width: width,
	    			height: height
	    		};
	
	    		this.updateProjectionMatrix();
	
	    	},
	
	    	clearViewOffset: function() {
	
	    		this.view = null;
	    		this.updateProjectionMatrix();
	
	    	},
	
	    	updateProjectionMatrix: function () {
	
	    		var dx = ( this.right - this.left ) / ( 2 * this.zoom );
	    		var dy = ( this.top - this.bottom ) / ( 2 * this.zoom );
	    		var cx = ( this.right + this.left ) / 2;
	    		var cy = ( this.top + this.bottom ) / 2;
	
	    		var left = cx - dx;
	    		var right = cx + dx;
	    		var top = cy + dy;
	    		var bottom = cy - dy;
	
	    		if ( this.view !== null ) {
	
	    			var zoomW = this.zoom / ( this.view.width / this.view.fullWidth );
	    			var zoomH = this.zoom / ( this.view.height / this.view.fullHeight );
	    			var scaleW = ( this.right - this.left ) / this.view.width;
	    			var scaleH = ( this.top - this.bottom ) / this.view.height;
	
	    			left += scaleW * ( this.view.offsetX / zoomW );
	    			right = left + scaleW * ( this.view.width / zoomW );
	    			top -= scaleH * ( this.view.offsetY / zoomH );
	    			bottom = top - scaleH * ( this.view.height / zoomH );
	
	    		}
	
	    		this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		var data = Object3D.prototype.toJSON.call( this, meta );
	
	    		data.object.zoom = this.zoom;
	    		data.object.left = this.left;
	    		data.object.right = this.right;
	    		data.object.top = this.top;
	    		data.object.bottom = this.bottom;
	    		data.object.near = this.near;
	    		data.object.far = this.far;
	
	    		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );
	
	    		return data;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {
	
	    	var mode;
	
	    	function setMode( value ) {
	
	    		mode = value;
	
	    	}
	
	    	var type, size;
	
	    	function setIndex( index ) {
	
	    		if ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {
	
	    			type = gl.UNSIGNED_INT;
	    			size = 4;
	
	    		} else {
	
	    			type = gl.UNSIGNED_SHORT;
	    			size = 2;
	
	    		}
	
	    	}
	
	    	function render( start, count ) {
	
	    		gl.drawElements( mode, count, type, start * size );
	
	    		infoRender.calls ++;
	    		infoRender.vertices += count;
	
	    		if ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;
	
	    	}
	
	    	function renderInstances( geometry, start, count ) {
	
	    		var extension = extensions.get( 'ANGLE_instanced_arrays' );
	
	    		if ( extension === null ) {
	
	    			console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
	    			return;
	
	    		}
	
	    		extension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );
	
	    		infoRender.calls ++;
	    		infoRender.vertices += count * geometry.maxInstancedCount;
	
	    		if ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;
	
	    	}
	
	    	return {
	
	    		setMode: setMode,
	    		setIndex: setIndex,
	    		render: render,
	    		renderInstances: renderInstances
	
	    	};
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function WebGLBufferRenderer( gl, extensions, infoRender ) {
	
	    	var mode;
	
	    	function setMode( value ) {
	
	    		mode = value;
	
	    	}
	
	    	function render( start, count ) {
	
	    		gl.drawArrays( mode, start, count );
	
	    		infoRender.calls ++;
	    		infoRender.vertices += count;
	
	    		if ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;
	
	    	}
	
	    	function renderInstances( geometry ) {
	
	    		var extension = extensions.get( 'ANGLE_instanced_arrays' );
	
	    		if ( extension === null ) {
	
	    			console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
	    			return;
	
	    		}
	
	    		var position = geometry.attributes.position;
	
	    		var count = 0;
	
	    		if ( (position && position.isInterleavedBufferAttribute) ) {
	
	    			count = position.data.count;
	
	    			extension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );
	
	    		} else {
	
	    			count = position.count;
	
	    			extension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );
	
	    		}
	
	    		infoRender.calls ++;
	    		infoRender.vertices += count * geometry.maxInstancedCount;
	
	    		if ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;
	
	    	}
	
	    	return {
	    		setMode: setMode,
	    		render: render,
	    		renderInstances: renderInstances
	    	};
	
	    }
	
	    function WebGLLights() {
	
	    	var lights = {};
	
	    	return {
	
	    		get: function ( light ) {
	
	    			if ( lights[ light.id ] !== undefined ) {
	
	    				return lights[ light.id ];
	
	    			}
	
	    			var uniforms;
	
	    			switch ( light.type ) {
	
	    				case 'DirectionalLight':
	    					uniforms = {
	    						direction: new Vector3(),
	    						color: new Color(),
	
	    						shadow: false,
	    						shadowBias: 0,
	    						shadowRadius: 1,
	    						shadowMapSize: new Vector2()
	    					};
	    					break;
	
	    				case 'SpotLight':
	    					uniforms = {
	    						position: new Vector3(),
	    						direction: new Vector3(),
	    						color: new Color(),
	    						distance: 0,
	    						coneCos: 0,
	    						penumbraCos: 0,
	    						decay: 0,
	
	    						shadow: false,
	    						shadowBias: 0,
	    						shadowRadius: 1,
	    						shadowMapSize: new Vector2()
	    					};
	    					break;
	
	    				case 'PointLight':
	    					uniforms = {
	    						position: new Vector3(),
	    						color: new Color(),
	    						distance: 0,
	    						decay: 0,
	
	    						shadow: false,
	    						shadowBias: 0,
	    						shadowRadius: 1,
	    						shadowMapSize: new Vector2()
	    					};
	    					break;
	
	    				case 'HemisphereLight':
	    					uniforms = {
	    						direction: new Vector3(),
	    						skyColor: new Color(),
	    						groundColor: new Color()
	    					};
	    					break;
	
	    			}
	
	    			lights[ light.id ] = uniforms;
	
	    			return uniforms;
	
	    		}
	
	    	};
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function addLineNumbers( string ) {
	
	    	var lines = string.split( '\n' );
	
	    	for ( var i = 0; i < lines.length; i ++ ) {
	
	    		lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];
	
	    	}
	
	    	return lines.join( '\n' );
	
	    }
	
	    function WebGLShader( gl, type, string ) {
	
	    	var shader = gl.createShader( type );
	
	    	gl.shaderSource( shader, string );
	    	gl.compileShader( shader );
	
	    	if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {
	
	    		console.error( 'THREE.WebGLShader: Shader couldn\'t compile.' );
	
	    	}
	
	    	if ( gl.getShaderInfoLog( shader ) !== '' ) {
	
	    		console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );
	
	    	}
	
	    	// --enable-privileged-webgl-extension
	    	// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
	
	    	return shader;
	
	    }
	
	    var programIdCount = 0;
	
	    function getEncodingComponents( encoding ) {
	
	    	switch ( encoding ) {
	
	    		case LinearEncoding:
	    			return [ 'Linear','( value )' ];
	    		case sRGBEncoding:
	    			return [ 'sRGB','( value )' ];
	    		case RGBEEncoding:
	    			return [ 'RGBE','( value )' ];
	    		case RGBM7Encoding:
	    			return [ 'RGBM','( value, 7.0 )' ];
	    		case RGBM16Encoding:
	    			return [ 'RGBM','( value, 16.0 )' ];
	    		case RGBDEncoding:
	    			return [ 'RGBD','( value, 256.0 )' ];
	    		case GammaEncoding:
	    			return [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];
	    		default:
	    			throw new Error( 'unsupported encoding: ' + encoding );
	
	    	}
	
	    }
	
	    function getTexelDecodingFunction( functionName, encoding ) {
	
	    	var components = getEncodingComponents( encoding );
	    	return "vec4 " + functionName + "( vec4 value ) { return " + components[ 0 ] + "ToLinear" + components[ 1 ] + "; }";
	
	    }
	
	    function getTexelEncodingFunction( functionName, encoding ) {
	
	    	var components = getEncodingComponents( encoding );
	    	return "vec4 " + functionName + "( vec4 value ) { return LinearTo" + components[ 0 ] + components[ 1 ] + "; }";
	
	    }
	
	    function getToneMappingFunction( functionName, toneMapping ) {
	
	    	var toneMappingName;
	
	    	switch ( toneMapping ) {
	
	    		case LinearToneMapping:
	    			toneMappingName = "Linear";
	    			break;
	
	    		case ReinhardToneMapping:
	    			toneMappingName = "Reinhard";
	    			break;
	
	    		case Uncharted2ToneMapping:
	    			toneMappingName = "Uncharted2";
	    			break;
	
	    		case CineonToneMapping:
	    			toneMappingName = "OptimizedCineon";
	    			break;
	
	    		default:
	    			throw new Error( 'unsupported toneMapping: ' + toneMapping );
	
	    	}
	
	    	return "vec3 " + functionName + "( vec3 color ) { return " + toneMappingName + "ToneMapping( color ); }";
	
	    }
	
	    function generateExtensions( extensions, parameters, rendererExtensions ) {
	
	    	extensions = extensions || {};
	
	    	var chunks = [
	    		( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',
	    		( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',
	    		( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',
	    		( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',
	    	];
	
	    	return chunks.filter( filterEmptyLine ).join( '\n' );
	
	    }
	
	    function generateDefines( defines ) {
	
	    	var chunks = [];
	
	    	for ( var name in defines ) {
	
	    		var value = defines[ name ];
	
	    		if ( value === false ) continue;
	
	    		chunks.push( '#define ' + name + ' ' + value );
	
	    	}
	
	    	return chunks.join( '\n' );
	
	    }
	
	    function fetchAttributeLocations( gl, program, identifiers ) {
	
	    	var attributes = {};
	
	    	var n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );
	
	    	for ( var i = 0; i < n; i ++ ) {
	
	    		var info = gl.getActiveAttrib( program, i );
	    		var name = info.name;
	
	    		// console.log("THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:", name, i );
	
	    		attributes[ name ] = gl.getAttribLocation( program, name );
	
	    	}
	
	    	return attributes;
	
	    }
	
	    function filterEmptyLine( string ) {
	
	    	return string !== '';
	
	    }
	
	    function replaceLightNums( string, parameters ) {
	
	    	return string
	    		.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )
	    		.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )
	    		.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )
	    		.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );
	
	    }
	
	    function parseIncludes( string ) {
	
	    	var pattern = /#include +<([\w\d.]+)>/g;
	
	    	function replace( match, include ) {
	
	    		var replace = ShaderChunk[ include ];
	
	    		if ( replace === undefined ) {
	
	    			throw new Error( 'Can not resolve #include <' + include + '>' );
	
	    		}
	
	    		return parseIncludes( replace );
	
	    	}
	
	    	return string.replace( pattern, replace );
	
	    }
	
	    function unrollLoops( string ) {
	
	    	var pattern = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
	
	    	function replace( match, start, end, snippet ) {
	
	    		var unroll = '';
	
	    		for ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {
	
	    			unroll += snippet.replace( /\[ i \]/g, '[ ' + i + ' ]' );
	
	    		}
	
	    		return unroll;
	
	    	}
	
	    	return string.replace( pattern, replace );
	
	    }
	
	    function WebGLProgram( renderer, code, material, parameters ) {
	
	    	var gl = renderer.context;
	
	    	var extensions = material.extensions;
	    	var defines = material.defines;
	
	    	var vertexShader = material.__webglShader.vertexShader;
	    	var fragmentShader = material.__webglShader.fragmentShader;
	
	    	var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';
	
	    	if ( parameters.shadowMapType === PCFShadowMap ) {
	
	    		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';
	
	    	} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {
	
	    		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';
	
	    	}
	
	    	var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
	    	var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';
	    	var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
	
	    	if ( parameters.envMap ) {
	
	    		switch ( material.envMap.mapping ) {
	
	    			case CubeReflectionMapping:
	    			case CubeRefractionMapping:
	    				envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
	    				break;
	
	    			case CubeUVReflectionMapping:
	    			case CubeUVRefractionMapping:
	    				envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';
	    				break;
	
	    			case EquirectangularReflectionMapping:
	    			case EquirectangularRefractionMapping:
	    				envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';
	    				break;
	
	    			case SphericalReflectionMapping:
	    				envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';
	    				break;
	
	    		}
	
	    		switch ( material.envMap.mapping ) {
	
	    			case CubeRefractionMapping:
	    			case EquirectangularRefractionMapping:
	    				envMapModeDefine = 'ENVMAP_MODE_REFRACTION';
	    				break;
	
	    		}
	
	    		switch ( material.combine ) {
	
	    			case MultiplyOperation:
	    				envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
	    				break;
	
	    			case MixOperation:
	    				envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';
	    				break;
	
	    			case AddOperation:
	    				envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';
	    				break;
	
	    		}
	
	    	}
	
	    	var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;
	
	    	// console.log( 'building new program ' );
	
	    	//
	
	    	var customExtensions = generateExtensions( extensions, parameters, renderer.extensions );
	
	    	var customDefines = generateDefines( defines );
	
	    	//
	
	    	var program = gl.createProgram();
	
	    	var prefixVertex, prefixFragment;
	
	    	if ( material.isRawShaderMaterial ) {
	
	    		prefixVertex = [
	
	    			customDefines,
	
	    			'\n'
	
	    		].filter( filterEmptyLine ).join( '\n' );
	
	    		prefixFragment = [
	
	    			customExtensions,
	    			customDefines,
	
	    			'\n'
	
	    		].filter( filterEmptyLine ).join( '\n' );
	
	    	} else {
	
	    		prefixVertex = [
	
	    			'precision ' + parameters.precision + ' float;',
	    			'precision ' + parameters.precision + ' int;',
	
	    			'#define SHADER_NAME ' + material.__webglShader.name,
	
	    			customDefines,
	
	    			parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',
	
	    			'#define GAMMA_FACTOR ' + gammaFactorDefine,
	
	    			'#define MAX_BONES ' + parameters.maxBones,
	
	    			parameters.map ? '#define USE_MAP' : '',
	    			parameters.envMap ? '#define USE_ENVMAP' : '',
	    			parameters.envMap ? '#define ' + envMapModeDefine : '',
	    			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
	    			parameters.aoMap ? '#define USE_AOMAP' : '',
	    			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
	    			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
	    			parameters.normalMap ? '#define USE_NORMALMAP' : '',
	    			parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',
	    			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
	    			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
	    			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
	    			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
	    			parameters.vertexColors ? '#define USE_COLOR' : '',
	
	    			parameters.flatShading ? '#define FLAT_SHADED' : '',
	
	    			parameters.skinning ? '#define USE_SKINNING' : '',
	    			parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',
	
	    			parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',
	    			parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',
	    			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
	    			parameters.flipSided ? '#define FLIP_SIDED' : '',
	
	    			'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,
	
	    			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
	    			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',
	
	    			parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',
	
	    			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
	    			parameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',
	
	    			'uniform mat4 modelMatrix;',
	    			'uniform mat4 modelViewMatrix;',
	    			'uniform mat4 projectionMatrix;',
	    			'uniform mat4 viewMatrix;',
	    			'uniform mat3 normalMatrix;',
	    			'uniform vec3 cameraPosition;',
	
	    			'attribute vec3 position;',
	    			'attribute vec3 normal;',
	    			'attribute vec2 uv;',
	
	    			'#ifdef USE_COLOR',
	
	    			'	attribute vec3 color;',
	
	    			'#endif',
	
	    			'#ifdef USE_MORPHTARGETS',
	
	    			'	attribute vec3 morphTarget0;',
	    			'	attribute vec3 morphTarget1;',
	    			'	attribute vec3 morphTarget2;',
	    			'	attribute vec3 morphTarget3;',
	
	    			'	#ifdef USE_MORPHNORMALS',
	
	    			'		attribute vec3 morphNormal0;',
	    			'		attribute vec3 morphNormal1;',
	    			'		attribute vec3 morphNormal2;',
	    			'		attribute vec3 morphNormal3;',
	
	    			'	#else',
	
	    			'		attribute vec3 morphTarget4;',
	    			'		attribute vec3 morphTarget5;',
	    			'		attribute vec3 morphTarget6;',
	    			'		attribute vec3 morphTarget7;',
	
	    			'	#endif',
	
	    			'#endif',
	
	    			'#ifdef USE_SKINNING',
	
	    			'	attribute vec4 skinIndex;',
	    			'	attribute vec4 skinWeight;',
	
	    			'#endif',
	
	    			'\n'
	
	    		].filter( filterEmptyLine ).join( '\n' );
	
	    		prefixFragment = [
	
	    			customExtensions,
	
	    			'precision ' + parameters.precision + ' float;',
	    			'precision ' + parameters.precision + ' int;',
	
	    			'#define SHADER_NAME ' + material.__webglShader.name,
	
	    			customDefines,
	
	    			parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',
	
	    			'#define GAMMA_FACTOR ' + gammaFactorDefine,
	
	    			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
	    			( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',
	
	    			parameters.map ? '#define USE_MAP' : '',
	    			parameters.envMap ? '#define USE_ENVMAP' : '',
	    			parameters.envMap ? '#define ' + envMapTypeDefine : '',
	    			parameters.envMap ? '#define ' + envMapModeDefine : '',
	    			parameters.envMap ? '#define ' + envMapBlendingDefine : '',
	    			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
	    			parameters.aoMap ? '#define USE_AOMAP' : '',
	    			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
	    			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
	    			parameters.normalMap ? '#define USE_NORMALMAP' : '',
	    			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
	    			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
	    			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
	    			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
	    			parameters.vertexColors ? '#define USE_COLOR' : '',
	
	    			parameters.flatShading ? '#define FLAT_SHADED' : '',
	
	    			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
	    			parameters.flipSided ? '#define FLIP_SIDED' : '',
	
	    			'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,
	
	    			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
	    			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',
	
	    			parameters.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : '',
	
	    			parameters.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : '',
	
	    			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
	    			parameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',
	
	    			parameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',
	
	    			'uniform mat4 viewMatrix;',
	    			'uniform vec3 cameraPosition;',
	
	    			( parameters.toneMapping !== NoToneMapping ) ? "#define TONE_MAPPING" : '',
	    			( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below
	    			( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( "toneMapping", parameters.toneMapping ) : '',
	
	    			( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below
	    			parameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',
	    			parameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',
	    			parameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',
	    			parameters.outputEncoding ? getTexelEncodingFunction( "linearToOutputTexel", parameters.outputEncoding ) : '',
	
	    			parameters.depthPacking ? "#define DEPTH_PACKING " + material.depthPacking : '',
	
	    			'\n'
	
	    		].filter( filterEmptyLine ).join( '\n' );
	
	    	}
	
	    	vertexShader = parseIncludes( vertexShader, parameters );
	    	vertexShader = replaceLightNums( vertexShader, parameters );
	
	    	fragmentShader = parseIncludes( fragmentShader, parameters );
	    	fragmentShader = replaceLightNums( fragmentShader, parameters );
	
	    	if ( ! material.isShaderMaterial ) {
	
	    		vertexShader = unrollLoops( vertexShader );
	    		fragmentShader = unrollLoops( fragmentShader );
	
	    	}
	
	    	var vertexGlsl = prefixVertex + vertexShader;
	    	var fragmentGlsl = prefixFragment + fragmentShader;
	
	    	// console.log( '*VERTEX*', vertexGlsl );
	    	// console.log( '*FRAGMENT*', fragmentGlsl );
	
	    	var glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );
	    	var glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );
	
	    	gl.attachShader( program, glVertexShader );
	    	gl.attachShader( program, glFragmentShader );
	
	    	// Force a particular attribute to index 0.
	
	    	if ( material.index0AttributeName !== undefined ) {
	
	    		gl.bindAttribLocation( program, 0, material.index0AttributeName );
	
	    	} else if ( parameters.morphTargets === true ) {
	
	    		// programs with morphTargets displace position out of attribute 0
	    		gl.bindAttribLocation( program, 0, 'position' );
	
	    	}
	
	    	gl.linkProgram( program );
	
	    	var programLog = gl.getProgramInfoLog( program );
	    	var vertexLog = gl.getShaderInfoLog( glVertexShader );
	    	var fragmentLog = gl.getShaderInfoLog( glFragmentShader );
	
	    	var runnable = true;
	    	var haveDiagnostics = true;
	
	    	// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );
	    	// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );
	
	    	if ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {
	
	    		runnable = false;
	
	    		console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );
	
	    	} else if ( programLog !== '' ) {
	
	    		console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );
	
	    	} else if ( vertexLog === '' || fragmentLog === '' ) {
	
	    		haveDiagnostics = false;
	
	    	}
	
	    	if ( haveDiagnostics ) {
	
	    		this.diagnostics = {
	
	    			runnable: runnable,
	    			material: material,
	
	    			programLog: programLog,
	
	    			vertexShader: {
	
	    				log: vertexLog,
	    				prefix: prefixVertex
	
	    			},
	
	    			fragmentShader: {
	
	    				log: fragmentLog,
	    				prefix: prefixFragment
	
	    			}
	
	    		};
	
	    	}
	
	    	// clean up
	
	    	gl.deleteShader( glVertexShader );
	    	gl.deleteShader( glFragmentShader );
	
	    	// set up caching for uniform locations
	
	    	var cachedUniforms;
	
	    	this.getUniforms = function() {
	
	    		if ( cachedUniforms === undefined ) {
	
	    			cachedUniforms =
	    					new WebGLUniforms( gl, program, renderer );
	
	    		}
	
	    		return cachedUniforms;
	
	    	};
	
	    	// set up caching for attribute locations
	
	    	var cachedAttributes;
	
	    	this.getAttributes = function() {
	
	    		if ( cachedAttributes === undefined ) {
	
	    			cachedAttributes = fetchAttributeLocations( gl, program );
	
	    		}
	
	    		return cachedAttributes;
	
	    	};
	
	    	// free resource
	
	    	this.destroy = function() {
	
	    		gl.deleteProgram( program );
	    		this.program = undefined;
	
	    	};
	
	    	// DEPRECATED
	
	    	Object.defineProperties( this, {
	
	    		uniforms: {
	    			get: function() {
	
	    				console.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );
	    				return this.getUniforms();
	
	    			}
	    		},
	
	    		attributes: {
	    			get: function() {
	
	    				console.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );
	    				return this.getAttributes();
	
	    			}
	    		}
	
	    	} );
	
	
	    	//
	
	    	this.id = programIdCount ++;
	    	this.code = code;
	    	this.usedTimes = 1;
	    	this.program = program;
	    	this.vertexShader = glVertexShader;
	    	this.fragmentShader = glFragmentShader;
	
	    	return this;
	
	    }
	
	    function WebGLPrograms( renderer, capabilities ) {
	
	    	var programs = [];
	
	    	var shaderIDs = {
	    		MeshDepthMaterial: 'depth',
	    		MeshNormalMaterial: 'normal',
	    		MeshBasicMaterial: 'basic',
	    		MeshLambertMaterial: 'lambert',
	    		MeshPhongMaterial: 'phong',
	    		MeshStandardMaterial: 'physical',
	    		MeshPhysicalMaterial: 'physical',
	    		LineBasicMaterial: 'basic',
	    		LineDashedMaterial: 'dashed',
	    		PointsMaterial: 'points'
	    	};
	
	    	var parameterNames = [
	    		"precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding",
	    		"lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap",
	    		"roughnessMap", "metalnessMap",
	    		"alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp",
	    		"flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning",
	    		"maxBones", "useVertexTexture", "morphTargets", "morphNormals",
	    		"maxMorphTargets", "maxMorphNormals", "premultipliedAlpha",
	    		"numDirLights", "numPointLights", "numSpotLights", "numHemiLights",
	    		"shadowMapEnabled", "shadowMapType", "toneMapping", 'physicallyCorrectLights',
	    		"alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "depthPacking"
	    	];
	
	
	    	function allocateBones( object ) {
	
	    		if ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {
	
	    			return 1024;
	
	    		} else {
	
	    			// default for when object is not specified
	    			// ( for example when prebuilding shader to be used with multiple objects )
	    			//
	    			//  - leave some extra space for other uniforms
	    			//  - limit here is ANGLE's 254 max uniform vectors
	    			//    (up to 54 should be safe)
	
	    			var nVertexUniforms = capabilities.maxVertexUniforms;
	    			var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );
	
	    			var maxBones = nVertexMatrices;
	
	    			if ( object !== undefined && (object && object.isSkinnedMesh) ) {
	
	    				maxBones = Math.min( object.skeleton.bones.length, maxBones );
	
	    				if ( maxBones < object.skeleton.bones.length ) {
	
	    					console.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );
	
	    				}
	
	    			}
	
	    			return maxBones;
	
	    		}
	
	    	}
	
	    	function getTextureEncodingFromMap( map, gammaOverrideLinear ) {
	
	    		var encoding;
	
	    		if ( ! map ) {
	
	    			encoding = LinearEncoding;
	
	    		} else if ( (map && map.isTexture) ) {
	
	    			encoding = map.encoding;
	
	    		} else if ( (map && map.isWebGLRenderTarget) ) {
	
	    			console.warn( "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead." );
	    			encoding = map.texture.encoding;
	
	    		}
	
	    		// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.
	    		if ( encoding === LinearEncoding && gammaOverrideLinear ) {
	
	    			encoding = GammaEncoding;
	
	    		}
	
	    		return encoding;
	
	    	}
	
	    	this.getParameters = function ( material, lights, fog, nClipPlanes, object ) {
	
	    		var shaderID = shaderIDs[ material.type ];
	
	    		// heuristics to create shader parameters according to lights in the scene
	    		// (not to blow over maxLights budget)
	
	    		var maxBones = allocateBones( object );
	    		var precision = renderer.getPrecision();
	
	    		if ( material.precision !== null ) {
	
	    			precision = capabilities.getMaxPrecision( material.precision );
	
	    			if ( precision !== material.precision ) {
	
	    				console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );
	
	    			}
	
	    		}
	
	    		var currentRenderTarget = renderer.getCurrentRenderTarget();
	
	    		var parameters = {
	
	    			shaderID: shaderID,
	
	    			precision: precision,
	    			supportsVertexTextures: capabilities.vertexTextures,
	    			outputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),
	    			map: !! material.map,
	    			mapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),
	    			envMap: !! material.envMap,
	    			envMapMode: material.envMap && material.envMap.mapping,
	    			envMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),
	    			envMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),
	    			lightMap: !! material.lightMap,
	    			aoMap: !! material.aoMap,
	    			emissiveMap: !! material.emissiveMap,
	    			emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),
	    			bumpMap: !! material.bumpMap,
	    			normalMap: !! material.normalMap,
	    			displacementMap: !! material.displacementMap,
	    			roughnessMap: !! material.roughnessMap,
	    			metalnessMap: !! material.metalnessMap,
	    			specularMap: !! material.specularMap,
	    			alphaMap: !! material.alphaMap,
	
	    			combine: material.combine,
	
	    			vertexColors: material.vertexColors,
	
	    			fog: !! fog,
	    			useFog: material.fog,
	    			fogExp: (fog && fog.isFogExp2),
	
	    			flatShading: material.shading === FlatShading,
	
	    			sizeAttenuation: material.sizeAttenuation,
	    			logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,
	
	    			skinning: material.skinning,
	    			maxBones: maxBones,
	    			useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,
	
	    			morphTargets: material.morphTargets,
	    			morphNormals: material.morphNormals,
	    			maxMorphTargets: renderer.maxMorphTargets,
	    			maxMorphNormals: renderer.maxMorphNormals,
	
	    			numDirLights: lights.directional.length,
	    			numPointLights: lights.point.length,
	    			numSpotLights: lights.spot.length,
	    			numHemiLights: lights.hemi.length,
	
	    			numClippingPlanes: nClipPlanes,
	
	    			shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,
	    			shadowMapType: renderer.shadowMap.type,
	
	    			toneMapping: renderer.toneMapping,
	    			physicallyCorrectLights: renderer.physicallyCorrectLights,
	
	    			premultipliedAlpha: material.premultipliedAlpha,
	
	    			alphaTest: material.alphaTest,
	    			doubleSided: material.side === DoubleSide,
	    			flipSided: material.side === BackSide,
	
	    			depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false
	
	    		};
	
	    		return parameters;
	
	    	};
	
	    	this.getProgramCode = function ( material, parameters ) {
	
	    		var array = [];
	
	    		if ( parameters.shaderID ) {
	
	    			array.push( parameters.shaderID );
	
	    		} else {
	
	    			array.push( material.fragmentShader );
	    			array.push( material.vertexShader );
	
	    		}
	
	    		if ( material.defines !== undefined ) {
	
	    			for ( var name in material.defines ) {
	
	    				array.push( name );
	    				array.push( material.defines[ name ] );
	
	    			}
	
	    		}
	
	    		for ( var i = 0; i < parameterNames.length; i ++ ) {
	
	    			array.push( parameters[ parameterNames[ i ] ] );
	
	    		}
	
	    		return array.join();
	
	    	};
	
	    	this.acquireProgram = function ( material, parameters, code ) {
	
	    		var program;
	
	    		// Check if code has been already compiled
	    		for ( var p = 0, pl = programs.length; p < pl; p ++ ) {
	
	    			var programInfo = programs[ p ];
	
	    			if ( programInfo.code === code ) {
	
	    				program = programInfo;
	    				++ program.usedTimes;
	
	    				break;
	
	    			}
	
	    		}
	
	    		if ( program === undefined ) {
	
	    			program = new WebGLProgram( renderer, code, material, parameters );
	    			programs.push( program );
	
	    		}
	
	    		return program;
	
	    	};
	
	    	this.releaseProgram = function( program ) {
	
	    		if ( -- program.usedTimes === 0 ) {
	
	    			// Remove from unordered set
	    			var i = programs.indexOf( program );
	    			programs[ i ] = programs[ programs.length - 1 ];
	    			programs.pop();
	
	    			// Free WebGL resources
	    			program.destroy();
	
	    		}
	
	    	};
	
	    	// Exposed for resource monitoring & error feedback via renderer.info:
	    	this.programs = programs;
	
	    }
	
	    function WebGLGeometries( gl, properties, info ) {
	
	    	var geometries = {};
	
	    	function onGeometryDispose( event ) {
	
	    		var geometry = event.target;
	    		var buffergeometry = geometries[ geometry.id ];
	
	    		if ( buffergeometry.index !== null ) {
	
	    			deleteAttribute( buffergeometry.index );
	
	    		}
	
	    		deleteAttributes( buffergeometry.attributes );
	
	    		geometry.removeEventListener( 'dispose', onGeometryDispose );
	
	    		delete geometries[ geometry.id ];
	
	    		// TODO
	
	    		var property = properties.get( geometry );
	
	    		if ( property.wireframe ) {
	
	    			deleteAttribute( property.wireframe );
	
	    		}
	
	    		properties.delete( geometry );
	
	    		var bufferproperty = properties.get( buffergeometry );
	
	    		if ( bufferproperty.wireframe ) {
	
	    			deleteAttribute( bufferproperty.wireframe );
	
	    		}
	
	    		properties.delete( buffergeometry );
	
	    		//
	
	    		info.memory.geometries --;
	
	    	}
	
	    	function getAttributeBuffer( attribute ) {
	
	    		if ( attribute.isInterleavedBufferAttribute ) {
	
	    			return properties.get( attribute.data ).__webglBuffer;
	
	    		}
	
	    		return properties.get( attribute ).__webglBuffer;
	
	    	}
	
	    	function deleteAttribute( attribute ) {
	
	    		var buffer = getAttributeBuffer( attribute );
	
	    		if ( buffer !== undefined ) {
	
	    			gl.deleteBuffer( buffer );
	    			removeAttributeBuffer( attribute );
	
	    		}
	
	    	}
	
	    	function deleteAttributes( attributes ) {
	
	    		for ( var name in attributes ) {
	
	    			deleteAttribute( attributes[ name ] );
	
	    		}
	
	    	}
	
	    	function removeAttributeBuffer( attribute ) {
	
	    		if ( attribute.isInterleavedBufferAttribute ) {
	
	    			properties.delete( attribute.data );
	
	    		} else {
	
	    			properties.delete( attribute );
	
	    		}
	
	    	}
	
	    	return {
	
	    		get: function ( object ) {
	
	    			var geometry = object.geometry;
	
	    			if ( geometries[ geometry.id ] !== undefined ) {
	
	    				return geometries[ geometry.id ];
	
	    			}
	
	    			geometry.addEventListener( 'dispose', onGeometryDispose );
	
	    			var buffergeometry;
	
	    			if ( geometry.isBufferGeometry ) {
	
	    				buffergeometry = geometry;
	
	    			} else if ( geometry.isGeometry ) {
	
	    				if ( geometry._bufferGeometry === undefined ) {
	
	    					geometry._bufferGeometry = new BufferGeometry().setFromObject( object );
	
	    				}
	
	    				buffergeometry = geometry._bufferGeometry;
	
	    			}
	
	    			geometries[ geometry.id ] = buffergeometry;
	
	    			info.memory.geometries ++;
	
	    			return buffergeometry;
	
	    		}
	
	    	};
	
	    }
	
	    function WebGLObjects( gl, properties, info ) {
	
	    	var geometries = new WebGLGeometries( gl, properties, info );
	
	    	//
	
	    	function update( object ) {
	
	    		// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.
	
	    		var geometry = geometries.get( object );
	
	    		if ( object.geometry.isGeometry ) {
	
	    			geometry.updateFromObject( object );
	
	    		}
	
	    		var index = geometry.index;
	    		var attributes = geometry.attributes;
	
	    		if ( index !== null ) {
	
	    			updateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );
	
	    		}
	
	    		for ( var name in attributes ) {
	
	    			updateAttribute( attributes[ name ], gl.ARRAY_BUFFER );
	
	    		}
	
	    		// morph targets
	
	    		var morphAttributes = geometry.morphAttributes;
	
	    		for ( var name in morphAttributes ) {
	
	    			var array = morphAttributes[ name ];
	
	    			for ( var i = 0, l = array.length; i < l; i ++ ) {
	
	    				updateAttribute( array[ i ], gl.ARRAY_BUFFER );
	
	    			}
	
	    		}
	
	    		return geometry;
	
	    	}
	
	    	function updateAttribute( attribute, bufferType ) {
	
	    		var data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;
	
	    		var attributeProperties = properties.get( data );
	
	    		if ( attributeProperties.__webglBuffer === undefined ) {
	
	    			createBuffer( attributeProperties, data, bufferType );
	
	    		} else if ( attributeProperties.version !== data.version ) {
	
	    			updateBuffer( attributeProperties, data, bufferType );
	
	    		}
	
	    	}
	
	    	function createBuffer( attributeProperties, data, bufferType ) {
	
	    		attributeProperties.__webglBuffer = gl.createBuffer();
	    		gl.bindBuffer( bufferType, attributeProperties.__webglBuffer );
	
	    		var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;
	
	    		gl.bufferData( bufferType, data.array, usage );
	
	    		attributeProperties.version = data.version;
	
	    	}
	
	    	function updateBuffer( attributeProperties, data, bufferType ) {
	
	    		gl.bindBuffer( bufferType, attributeProperties.__webglBuffer );
	
	    		if ( data.dynamic === false || data.updateRange.count === - 1 ) {
	
	    			// Not using update ranges
	
	    			gl.bufferSubData( bufferType, 0, data.array );
	
	    		} else if ( data.updateRange.count === 0 ) {
	
	    			console.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );
	
	    		} else {
	
	    			gl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,
	    							  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );
	
	    			data.updateRange.count = 0; // reset range
	
	    		}
	
	    		attributeProperties.version = data.version;
	
	    	}
	
	    	function getAttributeBuffer( attribute ) {
	
	    		if ( attribute.isInterleavedBufferAttribute ) {
	
	    			return properties.get( attribute.data ).__webglBuffer;
	
	    		}
	
	    		return properties.get( attribute ).__webglBuffer;
	
	    	}
	
	    	function getWireframeAttribute( geometry ) {
	
	    		var property = properties.get( geometry );
	
	    		if ( property.wireframe !== undefined ) {
	
	    			return property.wireframe;
	
	    		}
	
	    		var indices = [];
	
	    		var index = geometry.index;
	    		var attributes = geometry.attributes;
	    		var position = attributes.position;
	
	    		// console.time( 'wireframe' );
	
	    		if ( index !== null ) {
	
	    			var edges = {};
	    			var array = index.array;
	
	    			for ( var i = 0, l = array.length; i < l; i += 3 ) {
	
	    				var a = array[ i + 0 ];
	    				var b = array[ i + 1 ];
	    				var c = array[ i + 2 ];
	
	    				indices.push( a, b, b, c, c, a );
	
	    			}
	
	    		} else {
	
	    			var array = attributes.position.array;
	
	    			for ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {
	
	    				var a = i + 0;
	    				var b = i + 1;
	    				var c = i + 2;
	
	    				indices.push( a, b, b, c, c, a );
	
	    			}
	
	    		}
	
	    		// console.timeEnd( 'wireframe' );
	
	    		var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;
	    		var attribute = new BufferAttribute( new TypeArray( indices ), 1 );
	
	    		updateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );
	
	    		property.wireframe = attribute;
	
	    		return attribute;
	
	    	}
	
	    	return {
	
	    		getAttributeBuffer: getAttributeBuffer,
	    		getWireframeAttribute: getWireframeAttribute,
	
	    		update: update
	
	    	};
	
	    }
	
	    function WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {
	
	    	var _infoMemory = info.memory;
	    	var _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );
	
	    	//
	
	    	function clampToMaxSize( image, maxSize ) {
	
	    		if ( image.width > maxSize || image.height > maxSize ) {
	
	    			// Warning: Scaling through the canvas will only work with images that use
	    			// premultiplied alpha.
	
	    			var scale = maxSize / Math.max( image.width, image.height );
	
	    			var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	    			canvas.width = Math.floor( image.width * scale );
	    			canvas.height = Math.floor( image.height * scale );
	
	    			var context = canvas.getContext( '2d' );
	    			context.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );
	
	    			console.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );
	
	    			return canvas;
	
	    		}
	
	    		return image;
	
	    	}
	
	    	function isPowerOfTwo( image ) {
	
	    		return exports.Math.isPowerOfTwo( image.width ) && exports.Math.isPowerOfTwo( image.height );
	
	    	}
	
	    	function makePowerOfTwo( image ) {
	
	    		if ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {
	
	    			var canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	    			canvas.width = exports.Math.nearestPowerOfTwo( image.width );
	    			canvas.height = exports.Math.nearestPowerOfTwo( image.height );
	
	    			var context = canvas.getContext( '2d' );
	    			context.drawImage( image, 0, 0, canvas.width, canvas.height );
	
	    			console.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );
	
	    			return canvas;
	
	    		}
	
	    		return image;
	
	    	}
	
	    	function textureNeedsPowerOfTwo( texture ) {
	
	    		if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;
	    		if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;
	
	    		return false;
	
	    	}
	
	    	// Fallback filters for non-power-of-2 textures
	
	    	function filterFallback( f ) {
	
	    		if ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {
	
	    			return _gl.NEAREST;
	
	    		}
	
	    		return _gl.LINEAR;
	
	    	}
	
	    	//
	
	    	function onTextureDispose( event ) {
	
	    		var texture = event.target;
	
	    		texture.removeEventListener( 'dispose', onTextureDispose );
	
	    		deallocateTexture( texture );
	
	    		_infoMemory.textures --;
	
	
	    	}
	
	    	function onRenderTargetDispose( event ) {
	
	    		var renderTarget = event.target;
	
	    		renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );
	
	    		deallocateRenderTarget( renderTarget );
	
	    		_infoMemory.textures --;
	
	    	}
	
	    	//
	
	    	function deallocateTexture( texture ) {
	
	    		var textureProperties = properties.get( texture );
	
	    		if ( texture.image && textureProperties.__image__webglTextureCube ) {
	
	    			// cube texture
	
	    			_gl.deleteTexture( textureProperties.__image__webglTextureCube );
	
	    		} else {
	
	    			// 2D texture
	
	    			if ( textureProperties.__webglInit === undefined ) return;
	
	    			_gl.deleteTexture( textureProperties.__webglTexture );
	
	    		}
	
	    		// remove all webgl properties
	    		properties.delete( texture );
	
	    	}
	
	    	function deallocateRenderTarget( renderTarget ) {
	
	    		var renderTargetProperties = properties.get( renderTarget );
	    		var textureProperties = properties.get( renderTarget.texture );
	
	    		if ( ! renderTarget ) return;
	
	    		if ( textureProperties.__webglTexture !== undefined ) {
	
	    			_gl.deleteTexture( textureProperties.__webglTexture );
	
	    		}
	
	    		if ( renderTarget.depthTexture ) {
	
	    			renderTarget.depthTexture.dispose();
	
	    		}
	
	    		if ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {
	
	    			for ( var i = 0; i < 6; i ++ ) {
	
	    				_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );
	    				if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );
	
	    			}
	
	    		} else {
	
	    			_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );
	    			if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );
	
	    		}
	
	    		properties.delete( renderTarget.texture );
	    		properties.delete( renderTarget );
	
	    	}
	
	    	//
	
	
	
	    	function setTexture2D( texture, slot ) {
	
	    		var textureProperties = properties.get( texture );
	
	    		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {
	
	    			var image = texture.image;
	
	    			if ( image === undefined ) {
	
	    				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );
	
	    			} else if ( image.complete === false ) {
	
	    				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );
	
	    			} else {
	
	    				uploadTexture( textureProperties, texture, slot );
	    				return;
	
	    			}
	
	    		}
	
	    		state.activeTexture( _gl.TEXTURE0 + slot );
	    		state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );
	
	    	}
	
	    	function setTextureCube( texture, slot ) {
	
	    		var textureProperties = properties.get( texture );
	
	    		if ( texture.image.length === 6 ) {
	
	    			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {
	
	    				if ( ! textureProperties.__image__webglTextureCube ) {
	
	    					texture.addEventListener( 'dispose', onTextureDispose );
	
	    					textureProperties.__image__webglTextureCube = _gl.createTexture();
	
	    					_infoMemory.textures ++;
	
	    				}
	
	    				state.activeTexture( _gl.TEXTURE0 + slot );
	    				state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );
	
	    				_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );
	
	    				var isCompressed = (texture && texture.isCompressedTexture);
	    				var isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);
	
	    				var cubeImage = [];
	
	    				for ( var i = 0; i < 6; i ++ ) {
	
	    					if ( ! isCompressed && ! isDataTexture ) {
	
	    						cubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );
	
	    					} else {
	
	    						cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];
	
	    					}
	
	    				}
	
	    				var image = cubeImage[ 0 ],
	    				isPowerOfTwoImage = isPowerOfTwo( image ),
	    				glFormat = paramThreeToGL( texture.format ),
	    				glType = paramThreeToGL( texture.type );
	
	    				setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );
	
	    				for ( var i = 0; i < 6; i ++ ) {
	
	    					if ( ! isCompressed ) {
	
	    						if ( isDataTexture ) {
	
	    							state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );
	
	    						} else {
	
	    							state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );
	
	    						}
	
	    					} else {
	
	    						var mipmap, mipmaps = cubeImage[ i ].mipmaps;
	
	    						for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {
	
	    							mipmap = mipmaps[ j ];
	
	    							if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {
	
	    								if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {
	
	    									state.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );
	
	    								} else {
	
	    									console.warn( "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()" );
	
	    								}
	
	    							} else {
	
	    								state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );
	
	    							}
	
	    						}
	
	    					}
	
	    				}
	
	    				if ( texture.generateMipmaps && isPowerOfTwoImage ) {
	
	    					_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );
	
	    				}
	
	    				textureProperties.__version = texture.version;
	
	    				if ( texture.onUpdate ) texture.onUpdate( texture );
	
	    			} else {
	
	    				state.activeTexture( _gl.TEXTURE0 + slot );
	    				state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );
	
	    			}
	
	    		}
	
	    	}
	
	    	function setTextureCubeDynamic( texture, slot ) {
	
	    		state.activeTexture( _gl.TEXTURE0 + slot );
	    		state.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );
	
	    	}
	
	    	function setTextureParameters( textureType, texture, isPowerOfTwoImage ) {
	
	    		var extension;
	
	    		if ( isPowerOfTwoImage ) {
	
	    			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );
	    			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );
	
	    			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );
	    			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );
	
	    		} else {
	
	    			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );
	    			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );
	
	    			if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {
	
	    				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );
	
	    			}
	
	    			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );
	    			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );
	
	    			if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {
	
	    				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );
	
	    			}
	
	    		}
	
	    		extension = extensions.get( 'EXT_texture_filter_anisotropic' );
	
	    		if ( extension ) {
	
	    			if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;
	    			if ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;
	
	    			if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {
	
	    				_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );
	    				properties.get( texture ).__currentAnisotropy = texture.anisotropy;
	
	    			}
	
	    		}
	
	    	}
	
	    	function uploadTexture( textureProperties, texture, slot ) {
	
	    		if ( textureProperties.__webglInit === undefined ) {
	
	    			textureProperties.__webglInit = true;
	
	    			texture.addEventListener( 'dispose', onTextureDispose );
	
	    			textureProperties.__webglTexture = _gl.createTexture();
	
	    			_infoMemory.textures ++;
	
	    		}
	
	    		state.activeTexture( _gl.TEXTURE0 + slot );
	    		state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );
	
	    		_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );
	    		_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );
	    		_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );
	
	    		var image = clampToMaxSize( texture.image, capabilities.maxTextureSize );
	
	    		if ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {
	
	    			image = makePowerOfTwo( image );
	
	    		}
	
	    		var isPowerOfTwoImage = isPowerOfTwo( image ),
	    		glFormat = paramThreeToGL( texture.format ),
	    		glType = paramThreeToGL( texture.type );
	
	    		setTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );
	
	    		var mipmap, mipmaps = texture.mipmaps;
	
	    		if ( (texture && texture.isDepthTexture) ) {
	
	    			// populate depth texture with dummy data
	
	    			var internalFormat = _gl.DEPTH_COMPONENT;
	
	    			if ( texture.type === FloatType ) {
	
	    				if ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');
	    				internalFormat = _gl.DEPTH_COMPONENT32F;
	
	    			} else if ( _isWebGL2 ) {
	
	    				// WebGL 2.0 requires signed internalformat for glTexImage2D
	    				internalFormat = _gl.DEPTH_COMPONENT16;
	
	    			}
	
	    			// Depth stencil textures need the DEPTH_STENCIL internal format
	    			// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
	    			if ( texture.format === DepthStencilFormat ) {
	
	    				internalFormat = _gl.DEPTH_STENCIL;
	
	    			}
	
	    			state.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );
	
	    		} else if ( (texture && texture.isDataTexture) ) {
	
	    			// use manually created mipmaps if available
	    			// if there are no manual mipmaps
	    			// set 0 level mipmap and then use GL to generate other mipmap levels
	
	    			if ( mipmaps.length > 0 && isPowerOfTwoImage ) {
	
	    				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {
	
	    					mipmap = mipmaps[ i ];
	    					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );
	
	    				}
	
	    				texture.generateMipmaps = false;
	
	    			} else {
	
	    				state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );
	
	    			}
	
	    		} else if ( (texture && texture.isCompressedTexture) ) {
	
	    			for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {
	
	    				mipmap = mipmaps[ i ];
	
	    				if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {
	
	    					if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {
	
	    						state.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );
	
	    					} else {
	
	    						console.warn( "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()" );
	
	    					}
	
	    				} else {
	
	    					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );
	
	    				}
	
	    			}
	
	    		} else {
	
	    			// regular Texture (image, video, canvas)
	
	    			// use manually created mipmaps if available
	    			// if there are no manual mipmaps
	    			// set 0 level mipmap and then use GL to generate other mipmap levels
	
	    			if ( mipmaps.length > 0 && isPowerOfTwoImage ) {
	
	    				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {
	
	    					mipmap = mipmaps[ i ];
	    					state.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );
	
	    				}
	
	    				texture.generateMipmaps = false;
	
	    			} else {
	
	    				state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );
	
	    			}
	
	    		}
	
	    		if ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );
	
	    		textureProperties.__version = texture.version;
	
	    		if ( texture.onUpdate ) texture.onUpdate( texture );
	
	    	}
	
	    	// Render targets
	
	    	// Setup storage for target texture and bind it to correct framebuffer
	    	function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {
	
	    		var glFormat = paramThreeToGL( renderTarget.texture.format );
	    		var glType = paramThreeToGL( renderTarget.texture.type );
	    		state.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );
	    		_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
	    		_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );
	    		_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );
	
	    	}
	
	    	// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
	    	function setupRenderBufferStorage( renderbuffer, renderTarget ) {
	
	    		_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );
	
	    		if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {
	
	    			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );
	    			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );
	
	    		} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {
	
	    			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );
	    			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );
	
	    		} else {
	
	    			// FIXME: We don't support !depth !stencil
	    			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );
	
	    		}
	
	    		_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );
	
	    	}
	
	    	// Setup resources for a Depth Texture for a FBO (needs an extension)
	    	function setupDepthTexture( framebuffer, renderTarget ) {
	
	    		var isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );
	    		if ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');
	
	    		_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
	
	    		if ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {
	
	    			throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');
	
	    		}
	
	    		// upload an empty depth texture with framebuffer size
	    		if ( !properties.get( renderTarget.depthTexture ).__webglTexture ||
	    				renderTarget.depthTexture.image.width !== renderTarget.width ||
	    				renderTarget.depthTexture.image.height !== renderTarget.height ) {
	    			renderTarget.depthTexture.image.width = renderTarget.width;
	    			renderTarget.depthTexture.image.height = renderTarget.height;
	    			renderTarget.depthTexture.needsUpdate = true;
	    		}
	
	    		setTexture2D( renderTarget.depthTexture, 0 );
	
	    		var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;
	
	    		if ( renderTarget.depthTexture.format === DepthFormat ) {
	
	    			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );
	
	    		} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {
	
	    			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );
	
	    		} else {
	
	    			throw new Error('Unknown depthTexture format')
	
	    		}
	
	    	}
	
	    	// Setup GL resources for a non-texture depth buffer
	    	function setupDepthRenderbuffer( renderTarget ) {
	
	    		var renderTargetProperties = properties.get( renderTarget );
	
	    		var isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );
	
	    		if ( renderTarget.depthTexture ) {
	
	    			if ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');
	
	    			setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );
	
	    		} else {
	
	    			if ( isCube ) {
	
	    				renderTargetProperties.__webglDepthbuffer = [];
	
	    				for ( var i = 0; i < 6; i ++ ) {
	
	    					_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );
	    					renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();
	    					setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );
	
	    				}
	
	    			} else {
	
	    				_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );
	    				renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
	    				setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );
	
	    			}
	
	    		}
	
	    		_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );
	
	    	}
	
	    	// Set up GL resources for the render target
	    	function setupRenderTarget( renderTarget ) {
	
	    		var renderTargetProperties = properties.get( renderTarget );
	    		var textureProperties = properties.get( renderTarget.texture );
	
	    		renderTarget.addEventListener( 'dispose', onRenderTargetDispose );
	
	    		textureProperties.__webglTexture = _gl.createTexture();
	
	    		_infoMemory.textures ++;
	
	    		var isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );
	    		var isTargetPowerOfTwo = isPowerOfTwo( renderTarget );
	
	    		// Setup framebuffer
	
	    		if ( isCube ) {
	
	    			renderTargetProperties.__webglFramebuffer = [];
	
	    			for ( var i = 0; i < 6; i ++ ) {
	
	    				renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();
	
	    			}
	
	    		} else {
	
	    			renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();
	
	    		}
	
	    		// Setup color buffer
	
	    		if ( isCube ) {
	
	    			state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );
	    			setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );
	
	    			for ( var i = 0; i < 6; i ++ ) {
	
	    				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );
	
	    			}
	
	    			if ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );
	    			state.bindTexture( _gl.TEXTURE_CUBE_MAP, null );
	
	    		} else {
	
	    			state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );
	    			setTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );
	    			setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );
	
	    			if ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );
	    			state.bindTexture( _gl.TEXTURE_2D, null );
	
	    		}
	
	    		// Setup depth and stencil buffers
	
	    		if ( renderTarget.depthBuffer ) {
	
	    			setupDepthRenderbuffer( renderTarget );
	
	    		}
	
	    	}
	
	    	function updateRenderTargetMipmap( renderTarget ) {
	
	    		var texture = renderTarget.texture;
	
	    		if ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&
	    				texture.minFilter !== NearestFilter &&
	    				texture.minFilter !== LinearFilter ) {
	
	    			var target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;
	    			var webglTexture = properties.get( texture ).__webglTexture;
	
	    			state.bindTexture( target, webglTexture );
	    			_gl.generateMipmap( target );
	    			state.bindTexture( target, null );
	
	    		}
	
	    	}
	
	    	this.setTexture2D = setTexture2D;
	    	this.setTextureCube = setTextureCube;
	    	this.setTextureCubeDynamic = setTextureCubeDynamic;
	    	this.setupRenderTarget = setupRenderTarget;
	    	this.updateRenderTargetMipmap = updateRenderTargetMipmap;
	
	    }
	
	    /**
	     * @author fordacious / fordacious.github.io
	     */
	
	    function WebGLProperties() {
	
	    	var properties = {};
	
	    	return {
	
	    		get: function ( object ) {
	
	    			var uuid = object.uuid;
	    			var map = properties[ uuid ];
	
	    			if ( map === undefined ) {
	
	    				map = {};
	    				properties[ uuid ] = map;
	
	    			}
	
	    			return map;
	
	    		},
	
	    		delete: function ( object ) {
	
	    			delete properties[ object.uuid ];
	
	    		},
	
	    		clear: function () {
	
	    			properties = {};
	
	    		}
	
	    	};
	
	    }
	
	    function WebGLState( gl, extensions, paramThreeToGL ) {
	
	    	function ColorBuffer() {
	
	    		var locked = false;
	
	    		var color = new Vector4();
	    		var currentColorMask = null;
	    		var currentColorClear = new Vector4();
	
	    		return {
	
	    			setMask: function ( colorMask ) {
	
	    				if ( currentColorMask !== colorMask && ! locked ) {
	
	    					gl.colorMask( colorMask, colorMask, colorMask, colorMask );
	    					currentColorMask = colorMask;
	
	    				}
	
	    			},
	
	    			setLocked: function ( lock ) {
	
	    				locked = lock;
	
	    			},
	
	    			setClear: function ( r, g, b, a ) {
	
	    				color.set( r, g, b, a );
	
	    				if ( currentColorClear.equals( color ) === false ) {
	
	    					gl.clearColor( r, g, b, a );
	    					currentColorClear.copy( color );
	
	    				}
	
	    			},
	
	    			reset: function () {
	
	    				locked = false;
	
	    				currentColorMask = null;
	    				currentColorClear.set( 0, 0, 0, 1 );
	
	    			}
	
	    		};
	
	    	}
	
	    	function DepthBuffer() {
	
	    		var locked = false;
	
	    		var currentDepthMask = null;
	    		var currentDepthFunc = null;
	    		var currentDepthClear = null;
	
	    		return {
	
	    			setTest: function ( depthTest ) {
	
	    				if ( depthTest ) {
	
	    					enable( gl.DEPTH_TEST );
	
	    				} else {
	
	    					disable( gl.DEPTH_TEST );
	
	    				}
	
	    			},
	
	    			setMask: function ( depthMask ) {
	
	    				if ( currentDepthMask !== depthMask && ! locked ) {
	
	    					gl.depthMask( depthMask );
	    					currentDepthMask = depthMask;
	
	    				}
	
	    			},
	
	    			setFunc: function ( depthFunc ) {
	
	    				if ( currentDepthFunc !== depthFunc ) {
	
	    					if ( depthFunc ) {
	
	    						switch ( depthFunc ) {
	
	    							case NeverDepth:
	
	    								gl.depthFunc( gl.NEVER );
	    								break;
	
	    							case AlwaysDepth:
	
	    								gl.depthFunc( gl.ALWAYS );
	    								break;
	
	    							case LessDepth:
	
	    								gl.depthFunc( gl.LESS );
	    								break;
	
	    							case LessEqualDepth:
	
	    								gl.depthFunc( gl.LEQUAL );
	    								break;
	
	    							case EqualDepth:
	
	    								gl.depthFunc( gl.EQUAL );
	    								break;
	
	    							case GreaterEqualDepth:
	
	    								gl.depthFunc( gl.GEQUAL );
	    								break;
	
	    							case GreaterDepth:
	
	    								gl.depthFunc( gl.GREATER );
	    								break;
	
	    							case NotEqualDepth:
	
	    								gl.depthFunc( gl.NOTEQUAL );
	    								break;
	
	    							default:
	
	    								gl.depthFunc( gl.LEQUAL );
	
	    						}
	
	    					} else {
	
	    						gl.depthFunc( gl.LEQUAL );
	
	    					}
	
	    					currentDepthFunc = depthFunc;
	
	    				}
	
	    			},
	
	    			setLocked: function ( lock ) {
	
	    				locked = lock;
	
	    			},
	
	    			setClear: function ( depth ) {
	
	    				if ( currentDepthClear !== depth ) {
	
	    					gl.clearDepth( depth );
	    					currentDepthClear = depth;
	
	    				}
	
	    			},
	
	    			reset: function () {
	
	    				locked = false;
	
	    				currentDepthMask = null;
	    				currentDepthFunc = null;
	    				currentDepthClear = null;
	
	    			}
	
	    		};
	
	    	}
	
	    	function StencilBuffer() {
	
	    		var locked = false;
	
	    		var currentStencilMask = null;
	    		var currentStencilFunc = null;
	    		var currentStencilRef = null;
	    		var currentStencilFuncMask = null;
	    		var currentStencilFail  = null;
	    		var currentStencilZFail = null;
	    		var currentStencilZPass = null;
	    		var currentStencilClear = null;
	
	    		return {
	
	    			setTest: function ( stencilTest ) {
	
	    				if ( stencilTest ) {
	
	    					enable( gl.STENCIL_TEST );
	
	    				} else {
	
	    					disable( gl.STENCIL_TEST );
	
	    				}
	
	    			},
	
	    			setMask: function ( stencilMask ) {
	
	    				if ( currentStencilMask !== stencilMask && ! locked ) {
	
	    					gl.stencilMask( stencilMask );
	    					currentStencilMask = stencilMask;
	
	    				}
	
	    			},
	
	    			setFunc: function ( stencilFunc, stencilRef, stencilMask ) {
	
	    				if ( currentStencilFunc !== stencilFunc ||
	    				     currentStencilRef 	!== stencilRef 	||
	    				     currentStencilFuncMask !== stencilMask ) {
	
	    					gl.stencilFunc( stencilFunc,  stencilRef, stencilMask );
	
	    					currentStencilFunc = stencilFunc;
	    					currentStencilRef  = stencilRef;
	    					currentStencilFuncMask = stencilMask;
	
	    				}
	
	    			},
	
	    			setOp: function ( stencilFail, stencilZFail, stencilZPass ) {
	
	    				if ( currentStencilFail	 !== stencilFail 	||
	    				     currentStencilZFail !== stencilZFail ||
	    				     currentStencilZPass !== stencilZPass ) {
	
	    					gl.stencilOp( stencilFail,  stencilZFail, stencilZPass );
	
	    					currentStencilFail  = stencilFail;
	    					currentStencilZFail = stencilZFail;
	    					currentStencilZPass = stencilZPass;
	
	    				}
	
	    			},
	
	    			setLocked: function ( lock ) {
	
	    				locked = lock;
	
	    			},
	
	    			setClear: function ( stencil ) {
	
	    				if ( currentStencilClear !== stencil ) {
	
	    					gl.clearStencil( stencil );
	    					currentStencilClear = stencil;
	
	    				}
	
	    			},
	
	    			reset: function () {
	
	    				locked = false;
	
	    				currentStencilMask = null;
	    				currentStencilFunc = null;
	    				currentStencilRef = null;
	    				currentStencilFuncMask = null;
	    				currentStencilFail = null;
	    				currentStencilZFail = null;
	    				currentStencilZPass = null;
	    				currentStencilClear = null;
	
	    			}
	
	    		};
	
	    	}
	
	    	//
	
	    	var colorBuffer = new ColorBuffer();
	    	var depthBuffer = new DepthBuffer();
	    	var stencilBuffer = new StencilBuffer();
	
	    	var maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );
	    	var newAttributes = new Uint8Array( maxVertexAttributes );
	    	var enabledAttributes = new Uint8Array( maxVertexAttributes );
	    	var attributeDivisors = new Uint8Array( maxVertexAttributes );
	
	    	var capabilities = {};
	
	    	var compressedTextureFormats = null;
	
	    	var currentBlending = null;
	    	var currentBlendEquation = null;
	    	var currentBlendSrc = null;
	    	var currentBlendDst = null;
	    	var currentBlendEquationAlpha = null;
	    	var currentBlendSrcAlpha = null;
	    	var currentBlendDstAlpha = null;
	    	var currentPremultipledAlpha = false;
	
	    	var currentFlipSided = null;
	    	var currentCullFace = null;
	
	    	var currentLineWidth = null;
	
	    	var currentPolygonOffsetFactor = null;
	    	var currentPolygonOffsetUnits = null;
	
	    	var currentScissorTest = null;
	
	    	var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );
	
	    	var currentTextureSlot = null;
	    	var currentBoundTextures = {};
	
	    	var currentScissor = new Vector4();
	    	var currentViewport = new Vector4();
	
	    	function createTexture( type, target, count ) {
	
	    		var data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.
	    		var texture = gl.createTexture();
	
	    		gl.bindTexture( type, texture );
	    		gl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );
	    		gl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );
	
	    		for ( var i = 0; i < count; i ++ ) {
	
	    			gl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );
	
	    		}
	
	    		return texture;
	
	    	}
	
	    	var emptyTextures = {};
	    	emptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );
	    	emptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );
	
	    	//
	
	    	function init() {
	
	    		clearColor( 0, 0, 0, 1 );
	    		clearDepth( 1 );
	    		clearStencil( 0 );
	
	    		enable( gl.DEPTH_TEST );
	    		setDepthFunc( LessEqualDepth );
	
	    		setFlipSided( false );
	    		setCullFace( CullFaceBack );
	    		enable( gl.CULL_FACE );
	
	    		enable( gl.BLEND );
	    		setBlending( NormalBlending );
	
	    	}
	
	    	function initAttributes() {
	
	    		for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {
	
	    			newAttributes[ i ] = 0;
	
	    		}
	
	    	}
	
	    	function enableAttribute( attribute ) {
	
	    		newAttributes[ attribute ] = 1;
	
	    		if ( enabledAttributes[ attribute ] === 0 ) {
	
	    			gl.enableVertexAttribArray( attribute );
	    			enabledAttributes[ attribute ] = 1;
	
	    		}
	
	    		if ( attributeDivisors[ attribute ] !== 0 ) {
	
	    			var extension = extensions.get( 'ANGLE_instanced_arrays' );
	
	    			extension.vertexAttribDivisorANGLE( attribute, 0 );
	    			attributeDivisors[ attribute ] = 0;
	
	    		}
	
	    	}
	
	    	function enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {
	
	    		newAttributes[ attribute ] = 1;
	
	    		if ( enabledAttributes[ attribute ] === 0 ) {
	
	    			gl.enableVertexAttribArray( attribute );
	    			enabledAttributes[ attribute ] = 1;
	
	    		}
	
	    		if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {
	
	    			extension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );
	    			attributeDivisors[ attribute ] = meshPerAttribute;
	
	    		}
	
	    	}
	
	    	function disableUnusedAttributes() {
	
	    		for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {
	
	    			if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {
	
	    				gl.disableVertexAttribArray( i );
	    				enabledAttributes[ i ] = 0;
	
	    			}
	
	    		}
	
	    	}
	
	    	function enable( id ) {
	
	    		if ( capabilities[ id ] !== true ) {
	
	    			gl.enable( id );
	    			capabilities[ id ] = true;
	
	    		}
	
	    	}
	
	    	function disable( id ) {
	
	    		if ( capabilities[ id ] !== false ) {
	
	    			gl.disable( id );
	    			capabilities[ id ] = false;
	
	    		}
	
	    	}
	
	    	function getCompressedTextureFormats() {
	
	    		if ( compressedTextureFormats === null ) {
	
	    			compressedTextureFormats = [];
	
	    			if ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||
	    			     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||
	    			     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {
	
	    				var formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );
	
	    				for ( var i = 0; i < formats.length; i ++ ) {
	
	    					compressedTextureFormats.push( formats[ i ] );
	
	    				}
	
	    			}
	
	    		}
	
	    		return compressedTextureFormats;
	
	    	}
	
	    	function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {
	
	    		if ( blending !== NoBlending ) {
	
	    			enable( gl.BLEND );
	
	    		} else {
	
	    			disable( gl.BLEND );
	    			currentBlending = blending; // no blending, that is
	    			return;
	
	    		}
	
	    		if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {
	
	    			if ( blending === AdditiveBlending ) {
	
	    				if ( premultipliedAlpha ) {
	
	    					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
	    					gl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );
	
	    				} else {
	
	    					gl.blendEquation( gl.FUNC_ADD );
	    					gl.blendFunc( gl.SRC_ALPHA, gl.ONE );
	
	    				}
	
	    			} else if ( blending === SubtractiveBlending ) {
	
	    				if ( premultipliedAlpha ) {
	
	    					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
	    					gl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );
	
	    				} else {
	
	    					gl.blendEquation( gl.FUNC_ADD );
	    					gl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );
	
	    				}
	
	    			} else if ( blending === MultiplyBlending ) {
	
	    				if ( premultipliedAlpha ) {
	
	    					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
	    					gl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );
	
	    				} else {
	
	    					gl.blendEquation( gl.FUNC_ADD );
	    					gl.blendFunc( gl.ZERO, gl.SRC_COLOR );
	
	    				}
	
	    			} else {
	
	    				if ( premultipliedAlpha ) {
	
	    					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
	    					gl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );
	
	    				} else {
	
	    					gl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );
	    					gl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );
	
	    				}
	
	    			}
	
	    			currentBlending = blending;
	    			currentPremultipledAlpha = premultipliedAlpha;
	
	    		}
	
	    		if ( blending === CustomBlending ) {
	
	    			blendEquationAlpha = blendEquationAlpha || blendEquation;
	    			blendSrcAlpha = blendSrcAlpha || blendSrc;
	    			blendDstAlpha = blendDstAlpha || blendDst;
	
	    			if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {
	
	    				gl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );
	
	    				currentBlendEquation = blendEquation;
	    				currentBlendEquationAlpha = blendEquationAlpha;
	
	    			}
	
	    			if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {
	
	    				gl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );
	
	    				currentBlendSrc = blendSrc;
	    				currentBlendDst = blendDst;
	    				currentBlendSrcAlpha = blendSrcAlpha;
	    				currentBlendDstAlpha = blendDstAlpha;
	
	    			}
	
	    		} else {
	
	    			currentBlendEquation = null;
	    			currentBlendSrc = null;
	    			currentBlendDst = null;
	    			currentBlendEquationAlpha = null;
	    			currentBlendSrcAlpha = null;
	    			currentBlendDstAlpha = null;
	
	    		}
	
	    	}
	
	    	// TODO Deprecate
	
	    	function setColorWrite( colorWrite ) {
	
	    		colorBuffer.setMask( colorWrite );
	
	    	}
	
	    	function setDepthTest( depthTest ) {
	
	    		depthBuffer.setTest( depthTest );
	
	    	}
	
	    	function setDepthWrite( depthWrite ) {
	
	    		depthBuffer.setMask( depthWrite );
	
	    	}
	
	    	function setDepthFunc( depthFunc ) {
	
	    		depthBuffer.setFunc( depthFunc );
	
	    	}
	
	    	function setStencilTest( stencilTest ) {
	
	    		stencilBuffer.setTest( stencilTest );
	
	    	}
	
	    	function setStencilWrite( stencilWrite ) {
	
	    		stencilBuffer.setMask( stencilWrite );
	
	    	}
	
	    	function setStencilFunc( stencilFunc, stencilRef, stencilMask ) {
	
	    		stencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );
	
	    	}
	
	    	function setStencilOp( stencilFail, stencilZFail, stencilZPass ) {
	
	    		stencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );
	
	    	}
	
	    	//
	
	    	function setFlipSided( flipSided ) {
	
	    		if ( currentFlipSided !== flipSided ) {
	
	    			if ( flipSided ) {
	
	    				gl.frontFace( gl.CW );
	
	    			} else {
	
	    				gl.frontFace( gl.CCW );
	
	    			}
	
	    			currentFlipSided = flipSided;
	
	    		}
	
	    	}
	
	    	function setCullFace( cullFace ) {
	
	    		if ( cullFace !== CullFaceNone ) {
	
	    			enable( gl.CULL_FACE );
	
	    			if ( cullFace !== currentCullFace ) {
	
	    				if ( cullFace === CullFaceBack ) {
	
	    					gl.cullFace( gl.BACK );
	
	    				} else if ( cullFace === CullFaceFront ) {
	
	    					gl.cullFace( gl.FRONT );
	
	    				} else {
	
	    					gl.cullFace( gl.FRONT_AND_BACK );
	
	    				}
	
	    			}
	
	    		} else {
	
	    			disable( gl.CULL_FACE );
	
	    		}
	
	    		currentCullFace = cullFace;
	
	    	}
	
	    	function setLineWidth( width ) {
	
	    		if ( width !== currentLineWidth ) {
	
	    			gl.lineWidth( width );
	
	    			currentLineWidth = width;
	
	    		}
	
	    	}
	
	    	function setPolygonOffset( polygonOffset, factor, units ) {
	
	    		if ( polygonOffset ) {
	
	    			enable( gl.POLYGON_OFFSET_FILL );
	
	    			if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {
	
	    				gl.polygonOffset( factor, units );
	
	    				currentPolygonOffsetFactor = factor;
	    				currentPolygonOffsetUnits = units;
	
	    			}
	
	    		} else {
	
	    			disable( gl.POLYGON_OFFSET_FILL );
	
	    		}
	
	    	}
	
	    	function getScissorTest() {
	
	    		return currentScissorTest;
	
	    	}
	
	    	function setScissorTest( scissorTest ) {
	
	    		currentScissorTest = scissorTest;
	
	    		if ( scissorTest ) {
	
	    			enable( gl.SCISSOR_TEST );
	
	    		} else {
	
	    			disable( gl.SCISSOR_TEST );
	
	    		}
	
	    	}
	
	    	// texture
	
	    	function activeTexture( webglSlot ) {
	
	    		if ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;
	
	    		if ( currentTextureSlot !== webglSlot ) {
	
	    			gl.activeTexture( webglSlot );
	    			currentTextureSlot = webglSlot;
	
	    		}
	
	    	}
	
	    	function bindTexture( webglType, webglTexture ) {
	
	    		if ( currentTextureSlot === null ) {
	
	    			activeTexture();
	
	    		}
	
	    		var boundTexture = currentBoundTextures[ currentTextureSlot ];
	
	    		if ( boundTexture === undefined ) {
	
	    			boundTexture = { type: undefined, texture: undefined };
	    			currentBoundTextures[ currentTextureSlot ] = boundTexture;
	
	    		}
	
	    		if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {
	
	    			gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );
	
	    			boundTexture.type = webglType;
	    			boundTexture.texture = webglTexture;
	
	    		}
	
	    	}
	
	    	function compressedTexImage2D() {
	
	    		try {
	
	    			gl.compressedTexImage2D.apply( gl, arguments );
	
	    		} catch ( error ) {
	
	    			console.error( error );
	
	    		}
	
	    	}
	
	    	function texImage2D() {
	
	    		try {
	
	    			gl.texImage2D.apply( gl, arguments );
	
	    		} catch ( error ) {
	
	    			console.error( error );
	
	    		}
	
	    	}
	
	    	// TODO Deprecate
	
	    	function clearColor( r, g, b, a ) {
	
	    		colorBuffer.setClear( r, g, b, a );
	
	    	}
	
	    	function clearDepth( depth ) {
	
	    		depthBuffer.setClear( depth );
	
	    	}
	
	    	function clearStencil( stencil ) {
	
	    		stencilBuffer.setClear( stencil );
	
	    	}
	
	    	//
	
	    	function scissor( scissor ) {
	
	    		if ( currentScissor.equals( scissor ) === false ) {
	
	    			gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );
	    			currentScissor.copy( scissor );
	
	    		}
	
	    	}
	
	    	function viewport( viewport ) {
	
	    		if ( currentViewport.equals( viewport ) === false ) {
	
	    			gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );
	    			currentViewport.copy( viewport );
	
	    		}
	
	    	}
	
	    	//
	
	    	function reset() {
	
	    		for ( var i = 0; i < enabledAttributes.length; i ++ ) {
	
	    			if ( enabledAttributes[ i ] === 1 ) {
	
	    				gl.disableVertexAttribArray( i );
	    				enabledAttributes[ i ] = 0;
	
	    			}
	
	    		}
	
	    		capabilities = {};
	
	    		compressedTextureFormats = null;
	
	    		currentTextureSlot = null;
	    		currentBoundTextures = {};
	
	    		currentBlending = null;
	
	    		currentFlipSided = null;
	    		currentCullFace = null;
	
	    		colorBuffer.reset();
	    		depthBuffer.reset();
	    		stencilBuffer.reset();
	
	    	}
	
	    	return {
	
	    		buffers: {
	    			color: colorBuffer,
	    			depth: depthBuffer,
	    			stencil: stencilBuffer
	    		},
	
	    		init: init,
	    		initAttributes: initAttributes,
	    		enableAttribute: enableAttribute,
	    		enableAttributeAndDivisor: enableAttributeAndDivisor,
	    		disableUnusedAttributes: disableUnusedAttributes,
	    		enable: enable,
	    		disable: disable,
	    		getCompressedTextureFormats: getCompressedTextureFormats,
	
	    		setBlending: setBlending,
	
	    		setColorWrite: setColorWrite,
	    		setDepthTest: setDepthTest,
	    		setDepthWrite: setDepthWrite,
	    		setDepthFunc: setDepthFunc,
	    		setStencilTest: setStencilTest,
	    		setStencilWrite: setStencilWrite,
	    		setStencilFunc: setStencilFunc,
	    		setStencilOp: setStencilOp,
	
	    		setFlipSided: setFlipSided,
	    		setCullFace: setCullFace,
	
	    		setLineWidth: setLineWidth,
	    		setPolygonOffset: setPolygonOffset,
	
	    		getScissorTest: getScissorTest,
	    		setScissorTest: setScissorTest,
	
	    		activeTexture: activeTexture,
	    		bindTexture: bindTexture,
	    		compressedTexImage2D: compressedTexImage2D,
	    		texImage2D: texImage2D,
	
	    		clearColor: clearColor,
	    		clearDepth: clearDepth,
	    		clearStencil: clearStencil,
	
	    		scissor: scissor,
	    		viewport: viewport,
	
	    		reset: reset
	
	    	};
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function WebGLCapabilities( gl, extensions, parameters ) {
	
	    	var maxAnisotropy;
	
	    	function getMaxAnisotropy() {
	
	    		if ( maxAnisotropy !== undefined ) return maxAnisotropy;
	
	    		var extension = extensions.get( 'EXT_texture_filter_anisotropic' );
	
	    		if ( extension !== null ) {
	
	    			maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );
	
	    		} else {
	
	    			maxAnisotropy = 0;
	
	    		}
	
	    		return maxAnisotropy;
	
	    	}
	
	    	function getMaxPrecision( precision ) {
	
	    		if ( precision === 'highp' ) {
	
	    			if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&
	    			     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {
	
	    				return 'highp';
	
	    			}
	
	    			precision = 'mediump';
	
	    		}
	
	    		if ( precision === 'mediump' ) {
	
	    			if ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&
	    			     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {
	
	    				return 'mediump';
	
	    			}
	
	    		}
	
	    		return 'lowp';
	
	    	}
	
	    	var precision = parameters.precision !== undefined ? parameters.precision : 'highp';
	    	var maxPrecision = getMaxPrecision( precision );
	
	    	if ( maxPrecision !== precision ) {
	
	    		console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );
	    		precision = maxPrecision;
	
	    	}
	
	    	var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );
	
	    	var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );
	    	var maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );
	    	var maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );
	    	var maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );
	
	    	var maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );
	    	var maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );
	    	var maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );
	    	var maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );
	
	    	var vertexTextures = maxVertexTextures > 0;
	    	var floatFragmentTextures = !! extensions.get( 'OES_texture_float' );
	    	var floatVertexTextures = vertexTextures && floatFragmentTextures;
	
	    	return {
	
	    		getMaxAnisotropy: getMaxAnisotropy,
	    		getMaxPrecision: getMaxPrecision,
	
	    		precision: precision,
	    		logarithmicDepthBuffer: logarithmicDepthBuffer,
	
	    		maxTextures: maxTextures,
	    		maxVertexTextures: maxVertexTextures,
	    		maxTextureSize: maxTextureSize,
	    		maxCubemapSize: maxCubemapSize,
	
	    		maxAttributes: maxAttributes,
	    		maxVertexUniforms: maxVertexUniforms,
	    		maxVaryings: maxVaryings,
	    		maxFragmentUniforms: maxFragmentUniforms,
	
	    		vertexTextures: vertexTextures,
	    		floatFragmentTextures: floatFragmentTextures,
	    		floatVertexTextures: floatVertexTextures
	
	    	};
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function WebGLExtensions( gl ) {
	
	    	var extensions = {};
	
	    	return {
	
	    		get: function ( name ) {
	
	    			if ( extensions[ name ] !== undefined ) {
	
	    				return extensions[ name ];
	
	    			}
	
	    			var extension;
	
	    			switch ( name ) {
	
	    				case 'WEBGL_depth_texture':
	    					extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );
	    					break;
	
	    				case 'EXT_texture_filter_anisotropic':
	    					extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );
	    					break;
	
	    				case 'WEBGL_compressed_texture_s3tc':
	    					extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );
	    					break;
	
	    				case 'WEBGL_compressed_texture_pvrtc':
	    					extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );
	    					break;
	
	    				case 'WEBGL_compressed_texture_etc1':
	    					extension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );
	    					break;
	
	    				default:
	    					extension = gl.getExtension( name );
	
	    			}
	
	    			if ( extension === null ) {
	
	    				console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );
	
	    			}
	
	    			extensions[ name ] = extension;
	
	    			return extension;
	
	    		}
	
	    	};
	
	    }
	
	    function WebGLClipping() {
	
	    	var scope = this,
	
	    		globalState = null,
	    		numGlobalPlanes = 0,
	    		localClippingEnabled = false,
	    		renderingShadows = false,
	
	    		plane = new Plane(),
	    		viewNormalMatrix = new Matrix3(),
	
	    		uniform = { value: null, needsUpdate: false };
	
	    	this.uniform = uniform;
	    	this.numPlanes = 0;
	
	    	this.init = function( planes, enableLocalClipping, camera ) {
	
	    		var enabled =
	    			planes.length !== 0 ||
	    			enableLocalClipping ||
	    			// enable state of previous frame - the clipping code has to
	    			// run another frame in order to reset the state:
	    			numGlobalPlanes !== 0 ||
	    			localClippingEnabled;
	
	    		localClippingEnabled = enableLocalClipping;
	
	    		globalState = projectPlanes( planes, camera, 0 );
	    		numGlobalPlanes = planes.length;
	
	    		return enabled;
	
	    	};
	
	    	this.beginShadows = function() {
	
	    		renderingShadows = true;
	    		projectPlanes( null );
	
	    	};
	
	    	this.endShadows = function() {
	
	    		renderingShadows = false;
	    		resetGlobalState();
	
	    	};
	
	    	this.setState = function( planes, clipShadows, camera, cache, fromCache ) {
	
	    		if ( ! localClippingEnabled ||
	    				planes === null || planes.length === 0 ||
	    				renderingShadows && ! clipShadows ) {
	    			// there's no local clipping
	
	    			if ( renderingShadows ) {
	    				// there's no global clipping
	
	    				projectPlanes( null );
	
	    			} else {
	
	    				resetGlobalState();
	    			}
	
	    		} else {
	
	    			var nGlobal = renderingShadows ? 0 : numGlobalPlanes,
	    				lGlobal = nGlobal * 4,
	
	    				dstArray = cache.clippingState || null;
	
	    			uniform.value = dstArray; // ensure unique state
	
	    			dstArray = projectPlanes( planes, camera, lGlobal, fromCache );
	
	    			for ( var i = 0; i !== lGlobal; ++ i ) {
	
	    				dstArray[ i ] = globalState[ i ];
	
	    			}
	
	    			cache.clippingState = dstArray;
	    			this.numPlanes += nGlobal;
	
	    		}
	
	
	    	};
	
	    	function resetGlobalState() {
	
	    		if ( uniform.value !== globalState ) {
	
	    			uniform.value = globalState;
	    			uniform.needsUpdate = numGlobalPlanes > 0;
	
	    		}
	
	    		scope.numPlanes = numGlobalPlanes;
	
	    	}
	
	    	function projectPlanes( planes, camera, dstOffset, skipTransform ) {
	
	    		var nPlanes = planes !== null ? planes.length : 0,
	    			dstArray = null;
	
	    		if ( nPlanes !== 0 ) {
	
	    			dstArray = uniform.value;
	
	    			if ( skipTransform !== true || dstArray === null ) {
	
	    				var flatSize = dstOffset + nPlanes * 4,
	    					viewMatrix = camera.matrixWorldInverse;
	
	    				viewNormalMatrix.getNormalMatrix( viewMatrix );
	
	    				if ( dstArray === null || dstArray.length < flatSize ) {
	
	    					dstArray = new Float32Array( flatSize );
	
	    				}
	
	    				for ( var i = 0, i4 = dstOffset;
	    									i !== nPlanes; ++ i, i4 += 4 ) {
	
	    					plane.copy( planes[ i ] ).
	    							applyMatrix4( viewMatrix, viewNormalMatrix );
	
	    					plane.normal.toArray( dstArray, i4 );
	    					dstArray[ i4 + 3 ] = plane.constant;
	
	    				}
	
	    			}
	
	    			uniform.value = dstArray;
	    			uniform.needsUpdate = true;
	
	    		}
	
	    		scope.numPlanes = nPlanes;
	    		return dstArray;
	
	    	}
	
	    }
	
	    /**
	     * @author supereggbert / http://www.paulbrunt.co.uk/
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     * @author szimek / https://github.com/szimek/
	     * @author tschw
	     */
	
	    function WebGLRenderer( parameters ) {
	
	    	console.log( 'THREE.WebGLRenderer', REVISION );
	
	    	parameters = parameters || {};
	
	    	var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),
	    	_context = parameters.context !== undefined ? parameters.context : null,
	
	    	_alpha = parameters.alpha !== undefined ? parameters.alpha : false,
	    	_depth = parameters.depth !== undefined ? parameters.depth : true,
	    	_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
	    	_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
	    	_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
	    	_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;
	
	    	var lights = [];
	
	    	var opaqueObjects = [];
	    	var opaqueObjectsLastIndex = - 1;
	    	var transparentObjects = [];
	    	var transparentObjectsLastIndex = - 1;
	
	    	var morphInfluences = new Float32Array( 8 );
	
	    	var sprites = [];
	    	var lensFlares = [];
	
	    	// public properties
	
	    	this.domElement = _canvas;
	    	this.context = null;
	
	    	// clearing
	
	    	this.autoClear = true;
	    	this.autoClearColor = true;
	    	this.autoClearDepth = true;
	    	this.autoClearStencil = true;
	
	    	// scene graph
	
	    	this.sortObjects = true;
	
	    	// user-defined clipping
	
	    	this.clippingPlanes = [];
	    	this.localClippingEnabled = false;
	
	    	// physically based shading
	
	    	this.gammaFactor = 2.0;	// for backwards compatibility
	    	this.gammaInput = false;
	    	this.gammaOutput = false;
	
	    	// physical lights
	
	    	this.physicallyCorrectLights = false;
	
	    	// tone mapping
	
	    	this.toneMapping = LinearToneMapping;
	    	this.toneMappingExposure = 1.0;
	    	this.toneMappingWhitePoint = 1.0;
	
	    	// morphs
	
	    	this.maxMorphTargets = 8;
	    	this.maxMorphNormals = 4;
	
	    	// internal properties
	
	    	var _this = this,
	
	    	// internal state cache
	
	    	_currentProgram = null,
	    	_currentRenderTarget = null,
	    	_currentFramebuffer = null,
	    	_currentMaterialId = - 1,
	    	_currentGeometryProgram = '',
	    	_currentCamera = null,
	
	    	_currentScissor = new Vector4(),
	    	_currentScissorTest = null,
	
	    	_currentViewport = new Vector4(),
	
	    	//
	
	    	_usedTextureUnits = 0,
	
	    	//
	
	    	_clearColor = new Color( 0x000000 ),
	    	_clearAlpha = 0,
	
	    	_width = _canvas.width,
	    	_height = _canvas.height,
	
	    	_pixelRatio = 1,
	
	    	_scissor = new Vector4( 0, 0, _width, _height ),
	    	_scissorTest = false,
	
	    	_viewport = new Vector4( 0, 0, _width, _height ),
	
	    	// frustum
	
	    	_frustum = new Frustum(),
	
	    	// clipping
	
	    	_clipping = new WebGLClipping(),
	    	_clippingEnabled = false,
	    	_localClippingEnabled = false,
	
	    	_sphere = new Sphere(),
	
	    	// camera matrices cache
	
	    	_projScreenMatrix = new Matrix4(),
	
	    	_vector3 = new Vector3(),
	
	    	// light arrays cache
	
	    	_lights = {
	
	    		hash: '',
	
	    		ambient: [ 0, 0, 0 ],
	    		directional: [],
	    		directionalShadowMap: [],
	    		directionalShadowMatrix: [],
	    		spot: [],
	    		spotShadowMap: [],
	    		spotShadowMatrix: [],
	    		point: [],
	    		pointShadowMap: [],
	    		pointShadowMatrix: [],
	    		hemi: [],
	
	    		shadows: []
	
	    	},
	
	    	// info
	
	    	_infoRender = {
	
	    		calls: 0,
	    		vertices: 0,
	    		faces: 0,
	    		points: 0
	
	    	};
	
	    	this.info = {
	
	    		render: _infoRender,
	    		memory: {
	
	    			geometries: 0,
	    			textures: 0
	
	    		},
	    		programs: null
	
	    	};
	
	
	    	// initialize
	
	    	var _gl;
	
	    	try {
	
	    		var attributes = {
	    			alpha: _alpha,
	    			depth: _depth,
	    			stencil: _stencil,
	    			antialias: _antialias,
	    			premultipliedAlpha: _premultipliedAlpha,
	    			preserveDrawingBuffer: _preserveDrawingBuffer
	    		};
	
	    		_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );
	
	    		if ( _gl === null ) {
	
	    			if ( _canvas.getContext( 'webgl' ) !== null ) {
	
	    				throw 'Error creating WebGL context with your selected attributes.';
	
	    			} else {
	
	    				throw 'Error creating WebGL context.';
	
	    			}
	
	    		}
	
	    		// Some experimental-webgl implementations do not have getShaderPrecisionFormat
	
	    		if ( _gl.getShaderPrecisionFormat === undefined ) {
	
	    			_gl.getShaderPrecisionFormat = function () {
	
	    				return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };
	
	    			};
	
	    		}
	
	    		_canvas.addEventListener( 'webglcontextlost', onContextLost, false );
	
	    	} catch ( error ) {
	
	    		console.error( 'THREE.WebGLRenderer: ' + error );
	
	    	}
	
	    	var extensions = new WebGLExtensions( _gl );
	
	    	extensions.get( 'WEBGL_depth_texture' );
	    	extensions.get( 'OES_texture_float' );
	    	extensions.get( 'OES_texture_float_linear' );
	    	extensions.get( 'OES_texture_half_float' );
	    	extensions.get( 'OES_texture_half_float_linear' );
	    	extensions.get( 'OES_standard_derivatives' );
	    	extensions.get( 'ANGLE_instanced_arrays' );
	
	    	if ( extensions.get( 'OES_element_index_uint' ) ) {
	
	    		BufferGeometry.MaxIndex = 4294967296;
	
	    	}
	
	    	var capabilities = new WebGLCapabilities( _gl, extensions, parameters );
	
	    	var state = new WebGLState( _gl, extensions, paramThreeToGL );
	    	var properties = new WebGLProperties();
	    	var textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );
	    	var objects = new WebGLObjects( _gl, properties, this.info );
	    	var programCache = new WebGLPrograms( this, capabilities );
	    	var lightCache = new WebGLLights();
	
	    	this.info.programs = programCache.programs;
	
	    	var bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );
	    	var indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );
	
	    	//
	
	    	var backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );
	    	var backgroundCamera2 = new PerspectiveCamera();
	    	var backgroundPlaneMesh = new Mesh(
	    		new PlaneBufferGeometry( 2, 2 ),
	    		new MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )
	    	);
	    	var backgroundBoxShader = ShaderLib[ 'cube' ];
	    	var backgroundBoxMesh = new Mesh(
	    		new BoxBufferGeometry( 5, 5, 5 ),
	    		new ShaderMaterial( {
	    			uniforms: backgroundBoxShader.uniforms,
	    			vertexShader: backgroundBoxShader.vertexShader,
	    			fragmentShader: backgroundBoxShader.fragmentShader,
	    			side: BackSide,
	    			depthTest: false,
	    			depthWrite: false,
	    			fog: false
	    		} )
	    	);
	
	    	//
	
	    	function getTargetPixelRatio() {
	
	    		return _currentRenderTarget === null ? _pixelRatio : 1;
	
	    	}
	
	    	function glClearColor( r, g, b, a ) {
	
	    		if ( _premultipliedAlpha === true ) {
	
	    			r *= a; g *= a; b *= a;
	
	    		}
	
	    		state.clearColor( r, g, b, a );
	
	    	}
	
	    	function setDefaultGLState() {
	
	    		state.init();
	
	    		state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );
	    		state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );
	
	    		glClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );
	
	    	}
	
	    	function resetGLState() {
	
	    		_currentProgram = null;
	    		_currentCamera = null;
	
	    		_currentGeometryProgram = '';
	    		_currentMaterialId = - 1;
	
	    		state.reset();
	
	    	}
	
	    	setDefaultGLState();
	
	    	this.context = _gl;
	    	this.capabilities = capabilities;
	    	this.extensions = extensions;
	    	this.properties = properties;
	    	this.state = state;
	
	    	// shadow map
	
	    	var shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );
	
	    	this.shadowMap = shadowMap;
	
	
	    	// Plugins
	
	    	var spritePlugin = new SpritePlugin( this, sprites );
	    	var lensFlarePlugin = new LensFlarePlugin( this, lensFlares );
	
	    	// API
	
	    	this.getContext = function () {
	
	    		return _gl;
	
	    	};
	
	    	this.getContextAttributes = function () {
	
	    		return _gl.getContextAttributes();
	
	    	};
	
	    	this.forceContextLoss = function () {
	
	    		extensions.get( 'WEBGL_lose_context' ).loseContext();
	
	    	};
	
	    	this.getMaxAnisotropy = function () {
	
	    		return capabilities.getMaxAnisotropy();
	
	    	};
	
	    	this.getPrecision = function () {
	
	    		return capabilities.precision;
	
	    	};
	
	    	this.getPixelRatio = function () {
	
	    		return _pixelRatio;
	
	    	};
	
	    	this.setPixelRatio = function ( value ) {
	
	    		if ( value === undefined ) return;
	
	    		_pixelRatio = value;
	
	    		this.setSize( _viewport.z, _viewport.w, false );
	
	    	};
	
	    	this.getSize = function () {
	
	    		return {
	    			width: _width,
	    			height: _height
	    		};
	
	    	};
	
	    	this.setSize = function ( width, height, updateStyle ) {
	
	    		_width = width;
	    		_height = height;
	
	    		_canvas.width = width * _pixelRatio;
	    		_canvas.height = height * _pixelRatio;
	
	    		if ( updateStyle !== false ) {
	
	    			_canvas.style.width = width + 'px';
	    			_canvas.style.height = height + 'px';
	
	    		}
	
	    		this.setViewport( 0, 0, width, height );
	
	    	};
	
	    	this.setViewport = function ( x, y, width, height ) {
	
	    		state.viewport( _viewport.set( x, y, width, height ) );
	
	    	};
	
	    	this.setScissor = function ( x, y, width, height ) {
	
	    		state.scissor( _scissor.set( x, y, width, height ) );
	
	    	};
	
	    	this.setScissorTest = function ( boolean ) {
	
	    		state.setScissorTest( _scissorTest = boolean );
	
	    	};
	
	    	// Clearing
	
	    	this.getClearColor = function () {
	
	    		return _clearColor;
	
	    	};
	
	    	this.setClearColor = function ( color, alpha ) {
	
	    		_clearColor.set( color );
	
	    		_clearAlpha = alpha !== undefined ? alpha : 1;
	
	    		glClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );
	
	    	};
	
	    	this.getClearAlpha = function () {
	
	    		return _clearAlpha;
	
	    	};
	
	    	this.setClearAlpha = function ( alpha ) {
	
	    		_clearAlpha = alpha;
	
	    		glClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );
	
	    	};
	
	    	this.clear = function ( color, depth, stencil ) {
	
	    		var bits = 0;
	
	    		if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;
	    		if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;
	    		if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;
	
	    		_gl.clear( bits );
	
	    	};
	
	    	this.clearColor = function () {
	
	    		this.clear( true, false, false );
	
	    	};
	
	    	this.clearDepth = function () {
	
	    		this.clear( false, true, false );
	
	    	};
	
	    	this.clearStencil = function () {
	
	    		this.clear( false, false, true );
	
	    	};
	
	    	this.clearTarget = function ( renderTarget, color, depth, stencil ) {
	
	    		this.setRenderTarget( renderTarget );
	    		this.clear( color, depth, stencil );
	
	    	};
	
	    	// Reset
	
	    	this.resetGLState = resetGLState;
	
	    	this.dispose = function() {
	
	    		transparentObjects = [];
	    		transparentObjectsLastIndex = -1;
	    		opaqueObjects = [];
	    		opaqueObjectsLastIndex = -1;
	
	    		_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );
	
	    	};
	
	    	// Events
	
	    	function onContextLost( event ) {
	
	    		event.preventDefault();
	
	    		resetGLState();
	    		setDefaultGLState();
	
	    		properties.clear();
	
	    	}
	
	    	function onMaterialDispose( event ) {
	
	    		var material = event.target;
	
	    		material.removeEventListener( 'dispose', onMaterialDispose );
	
	    		deallocateMaterial( material );
	
	    	}
	
	    	// Buffer deallocation
	
	    	function deallocateMaterial( material ) {
	
	    		releaseMaterialProgramReference( material );
	
	    		properties.delete( material );
	
	    	}
	
	
	    	function releaseMaterialProgramReference( material ) {
	
	    		var programInfo = properties.get( material ).program;
	
	    		material.program = undefined;
	
	    		if ( programInfo !== undefined ) {
	
	    			programCache.releaseProgram( programInfo );
	
	    		}
	
	    	}
	
	    	// Buffer rendering
	
	    	this.renderBufferImmediate = function ( object, program, material ) {
	
	    		state.initAttributes();
	
	    		var buffers = properties.get( object );
	
	    		if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();
	    		if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();
	    		if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();
	    		if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();
	
	    		var attributes = program.getAttributes();
	
	    		if ( object.hasPositions ) {
	
	    			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );
	    			_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );
	
	    			state.enableAttribute( attributes.position );
	    			_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );
	
	    		}
	
	    		if ( object.hasNormals ) {
	
	    			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );
	
	    			if ( ! material.isMeshPhongMaterial &&
	    			     ! material.isMeshStandardMaterial &&
	    			       material.shading === FlatShading ) {
	
	    				for ( var i = 0, l = object.count * 3; i < l; i += 9 ) {
	
	    					var array = object.normalArray;
	
	    					var nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;
	    					var ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;
	    					var nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;
	
	    					array[ i + 0 ] = nx;
	    					array[ i + 1 ] = ny;
	    					array[ i + 2 ] = nz;
	
	    					array[ i + 3 ] = nx;
	    					array[ i + 4 ] = ny;
	    					array[ i + 5 ] = nz;
	
	    					array[ i + 6 ] = nx;
	    					array[ i + 7 ] = ny;
	    					array[ i + 8 ] = nz;
	
	    				}
	
	    			}
	
	    			_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );
	
	    			state.enableAttribute( attributes.normal );
	
	    			_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );
	
	    		}
	
	    		if ( object.hasUvs && material.map ) {
	
	    			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );
	    			_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );
	
	    			state.enableAttribute( attributes.uv );
	
	    			_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );
	
	    		}
	
	    		if ( object.hasColors && material.vertexColors !== NoColors ) {
	
	    			_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );
	    			_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );
	
	    			state.enableAttribute( attributes.color );
	
	    			_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );
	
	    		}
	
	    		state.disableUnusedAttributes();
	
	    		_gl.drawArrays( _gl.TRIANGLES, 0, object.count );
	
	    		object.count = 0;
	
	    	};
	
	    	this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {
	
	    		setMaterial( material );
	
	    		var program = setProgram( camera, fog, material, object );
	
	    		var updateBuffers = false;
	    		var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;
	
	    		if ( geometryProgram !== _currentGeometryProgram ) {
	
	    			_currentGeometryProgram = geometryProgram;
	    			updateBuffers = true;
	
	    		}
	
	    		// morph targets
	
	    		var morphTargetInfluences = object.morphTargetInfluences;
	
	    		if ( morphTargetInfluences !== undefined ) {
	
	    			var activeInfluences = [];
	
	    			for ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {
	
	    				var influence = morphTargetInfluences[ i ];
	    				activeInfluences.push( [ influence, i ] );
	
	    			}
	
	    			activeInfluences.sort( absNumericalSort );
	
	    			if ( activeInfluences.length > 8 ) {
	
	    				activeInfluences.length = 8;
	
	    			}
	
	    			var morphAttributes = geometry.morphAttributes;
	
	    			for ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {
	
	    				var influence = activeInfluences[ i ];
	    				morphInfluences[ i ] = influence[ 0 ];
	
	    				if ( influence[ 0 ] !== 0 ) {
	
	    					var index = influence[ 1 ];
	
	    					if ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );
	    					if ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );
	
	    				} else {
	
	    					if ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );
	    					if ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );
	
	    				}
	
	    			}
	
	    			for ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {
	
	    				morphInfluences[ i ] = 0.0;
	
	    			}
	
	    			program.getUniforms().setValue(
	    					_gl, 'morphTargetInfluences', morphInfluences );
	
	    			updateBuffers = true;
	
	    		}
	
	    		//
	
	    		var index = geometry.index;
	    		var position = geometry.attributes.position;
	    		var rangeFactor = 1;
	
	    		if ( material.wireframe === true ) {
	
	    			index = objects.getWireframeAttribute( geometry );
	    			rangeFactor = 2;
	
	    		}
	
	    		var renderer;
	
	    		if ( index !== null ) {
	
	    			renderer = indexedBufferRenderer;
	    			renderer.setIndex( index );
	
	    		} else {
	
	    			renderer = bufferRenderer;
	
	    		}
	
	    		if ( updateBuffers ) {
	
	    			setupVertexAttributes( material, program, geometry );
	
	    			if ( index !== null ) {
	
	    				_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );
	
	    			}
	
	    		}
	
	    		//
	
	    		var dataCount = 0;
	
	    		if ( index !== null ) {
	
	    			dataCount = index.count;
	
	    		} else if ( position !== undefined ) {
	
	    			dataCount = position.count;
	
	    		}
	
	    		var rangeStart = geometry.drawRange.start * rangeFactor;
	    		var rangeCount = geometry.drawRange.count * rangeFactor;
	
	    		var groupStart = group !== null ? group.start * rangeFactor : 0;
	    		var groupCount = group !== null ? group.count * rangeFactor : Infinity;
	
	    		var drawStart = Math.max( rangeStart, groupStart );
	    		var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;
	
	    		var drawCount = Math.max( 0, drawEnd - drawStart + 1 );
	
	    		if ( drawCount === 0 ) return;
	
	    		//
	
	    		if ( object.isMesh ) {
	
	    			if ( material.wireframe === true ) {
	
	    				state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );
	    				renderer.setMode( _gl.LINES );
	
	    			} else {
	
	    				switch ( object.drawMode ) {
	
	    					case TrianglesDrawMode:
	    						renderer.setMode( _gl.TRIANGLES );
	    						break;
	
	    					case TriangleStripDrawMode:
	    						renderer.setMode( _gl.TRIANGLE_STRIP );
	    						break;
	
	    					case TriangleFanDrawMode:
	    						renderer.setMode( _gl.TRIANGLE_FAN );
	    						break;
	
	    				}
	
	    			}
	
	
	    		} else if ( object.isLine ) {
	
	    			var lineWidth = material.linewidth;
	
	    			if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material
	
	    			state.setLineWidth( lineWidth * getTargetPixelRatio() );
	
	    			if ( object.isLineSegments ) {
	
	    				renderer.setMode( _gl.LINES );
	
	    			} else {
	
	    				renderer.setMode( _gl.LINE_STRIP );
	
	    			}
	
	    		} else if ( object.isPoints ) {
	
	    			renderer.setMode( _gl.POINTS );
	
	    		}
	
	    		if ( geometry && geometry.isInstancedBufferGeometry ) {
	
	    			if ( geometry.maxInstancedCount > 0 ) {
	
	    				renderer.renderInstances( geometry, drawStart, drawCount );
	
	    			}
	
	    		} else {
	
	    			renderer.render( drawStart, drawCount );
	
	    		}
	
	    	};
	
	    	function setupVertexAttributes( material, program, geometry, startIndex ) {
	
	    		var extension;
	
	    		if ( geometry && geometry.isInstancedBufferGeometry ) {
	
	    			extension = extensions.get( 'ANGLE_instanced_arrays' );
	
	    			if ( extension === null ) {
	
	    				console.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
	    				return;
	
	    			}
	
	    		}
	
	    		if ( startIndex === undefined ) startIndex = 0;
	
	    		state.initAttributes();
	
	    		var geometryAttributes = geometry.attributes;
	
	    		var programAttributes = program.getAttributes();
	
	    		var materialDefaultAttributeValues = material.defaultAttributeValues;
	
	    		for ( var name in programAttributes ) {
	
	    			var programAttribute = programAttributes[ name ];
	
	    			if ( programAttribute >= 0 ) {
	
	    				var geometryAttribute = geometryAttributes[ name ];
	
	    				if ( geometryAttribute !== undefined ) {
	
	    					var type = _gl.FLOAT;
	    					var array = geometryAttribute.array;
	    					var normalized = geometryAttribute.normalized;
	
	    					if ( array instanceof Float32Array ) {
	
	    						type = _gl.FLOAT;
	
	    					} else if ( array instanceof Float64Array ) {
	
	    						console.warn( "Unsupported data buffer format: Float64Array" );
	
	    					} else if ( array instanceof Uint16Array ) {
	
	    						type = _gl.UNSIGNED_SHORT;
	
	    					} else if ( array instanceof Int16Array ) {
	
	    						type = _gl.SHORT;
	
	    					} else if ( array instanceof Uint32Array ) {
	
	    						type = _gl.UNSIGNED_INT;
	
	    					} else if ( array instanceof Int32Array ) {
	
	    						type = _gl.INT;
	
	    					} else if ( array instanceof Int8Array ) {
	
	    						type = _gl.BYTE;
	
	    					} else if ( array instanceof Uint8Array ) {
	
	    						type = _gl.UNSIGNED_BYTE;
	
	    					}
	
	    					var size = geometryAttribute.itemSize;
	    					var buffer = objects.getAttributeBuffer( geometryAttribute );
	
	    					if ( geometryAttribute && geometryAttribute.isInterleavedBufferAttribute ) {
	
	    						var data = geometryAttribute.data;
	    						var stride = data.stride;
	    						var offset = geometryAttribute.offset;
	
	    						if ( data && data.isInstancedInterleavedBuffer ) {
	
	    							state.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );
	
	    							if ( geometry.maxInstancedCount === undefined ) {
	
	    								geometry.maxInstancedCount = data.meshPerAttribute * data.count;
	
	    							}
	
	    						} else {
	
	    							state.enableAttribute( programAttribute );
	
	    						}
	
	    						_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );
	    						_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );
	
	    					} else {
	
	    						if ( geometryAttribute && geometryAttribute.isInstancedBufferAttribute ) {
	
	    							state.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );
	
	    							if ( geometry.maxInstancedCount === undefined ) {
	
	    								geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;
	
	    							}
	
	    						} else {
	
	    							state.enableAttribute( programAttribute );
	
	    						}
	
	    						_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );
	    						_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );
	
	    					}
	
	    				} else if ( materialDefaultAttributeValues !== undefined ) {
	
	    					var value = materialDefaultAttributeValues[ name ];
	
	    					if ( value !== undefined ) {
	
	    						switch ( value.length ) {
	
	    							case 2:
	    								_gl.vertexAttrib2fv( programAttribute, value );
	    								break;
	
	    							case 3:
	    								_gl.vertexAttrib3fv( programAttribute, value );
	    								break;
	
	    							case 4:
	    								_gl.vertexAttrib4fv( programAttribute, value );
	    								break;
	
	    							default:
	    								_gl.vertexAttrib1fv( programAttribute, value );
	
	    						}
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		state.disableUnusedAttributes();
	
	    	}
	
	    	// Sorting
	
	    	function absNumericalSort( a, b ) {
	
	    		return Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );
	
	    	}
	
	    	function painterSortStable( a, b ) {
	
	    		if ( a.object.renderOrder !== b.object.renderOrder ) {
	
	    			return a.object.renderOrder - b.object.renderOrder;
	
	    		} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {
	
	    			return a.material.program.id - b.material.program.id;
	
	    		} else if ( a.material.id !== b.material.id ) {
	
	    			return a.material.id - b.material.id;
	
	    		} else if ( a.z !== b.z ) {
	
	    			return a.z - b.z;
	
	    		} else {
	
	    			return a.id - b.id;
	
	    		}
	
	    	}
	
	    	function reversePainterSortStable( a, b ) {
	
	    		if ( a.object.renderOrder !== b.object.renderOrder ) {
	
	    			return a.object.renderOrder - b.object.renderOrder;
	
	    		} if ( a.z !== b.z ) {
	
	    			return b.z - a.z;
	
	    		} else {
	
	    			return a.id - b.id;
	
	    		}
	
	    	}
	
	    	// Rendering
	
	    	this.render = function ( scene, camera, renderTarget, forceClear ) {
	
	    		if ( camera !== undefined && camera.isCamera !== true ) {
	
	    			console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
	    			return;
	
	    		}
	
	    		var fog = scene.fog;
	
	    		// reset caching for this frame
	
	    		_currentGeometryProgram = '';
	    		_currentMaterialId = - 1;
	    		_currentCamera = null;
	
	    		// update scene graph
	
	    		if ( scene.autoUpdate === true ) scene.updateMatrixWorld();
	
	    		// update camera matrices and frustum
	
	    		if ( camera.parent === null ) camera.updateMatrixWorld();
	
	    		camera.matrixWorldInverse.getInverse( camera.matrixWorld );
	
	    		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
	    		_frustum.setFromMatrix( _projScreenMatrix );
	
	    		lights.length = 0;
	
	    		opaqueObjectsLastIndex = - 1;
	    		transparentObjectsLastIndex = - 1;
	
	    		sprites.length = 0;
	    		lensFlares.length = 0;
	
	    		_localClippingEnabled = this.localClippingEnabled;
	    		_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );
	
	    		projectObject( scene, camera );
	
	    		opaqueObjects.length = opaqueObjectsLastIndex + 1;
	    		transparentObjects.length = transparentObjectsLastIndex + 1;
	
	    		if ( _this.sortObjects === true ) {
	
	    			opaqueObjects.sort( painterSortStable );
	    			transparentObjects.sort( reversePainterSortStable );
	
	    		}
	
	    		//
	
	    		if ( _clippingEnabled ) _clipping.beginShadows();
	
	    		setupShadows( lights );
	
	    		shadowMap.render( scene, camera );
	
	    		setupLights( lights, camera );
	
	    		if ( _clippingEnabled ) _clipping.endShadows();
	
	    		//
	
	    		_infoRender.calls = 0;
	    		_infoRender.vertices = 0;
	    		_infoRender.faces = 0;
	    		_infoRender.points = 0;
	
	    		if ( renderTarget === undefined ) {
	
	    			renderTarget = null;
	
	    		}
	
	    		this.setRenderTarget( renderTarget );
	
	    		//
	
	    		var background = scene.background;
	
	    		if ( background === null ) {
	
	    			glClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );
	
	    		} else if ( background && background.isColor ) {
	
	    			glClearColor( background.r, background.g, background.b, 1 );
	    			forceClear = true;
	
	    		}
	
	    		if ( this.autoClear || forceClear ) {
	
	    			this.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );
	
	    		}
	
	    		if ( background && background.isCubeTexture ) {
	
	    			backgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );
	
	    			backgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );
	    			backgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );
	
	    			backgroundBoxMesh.material.uniforms[ "tCube" ].value = background;
	    			backgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );
	
	    			objects.update( backgroundBoxMesh );
	
	    			_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );
	
	    		} else if ( background && background.isTexture ) {
	
	    			backgroundPlaneMesh.material.map = background;
	
	    			objects.update( backgroundPlaneMesh );
	
	    			_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );
	
	    		}
	
	    		//
	
	    		if ( scene.overrideMaterial ) {
	
	    			var overrideMaterial = scene.overrideMaterial;
	
	    			renderObjects( opaqueObjects, camera, fog, overrideMaterial );
	    			renderObjects( transparentObjects, camera, fog, overrideMaterial );
	
	    		} else {
	
	    			// opaque pass (front-to-back order)
	
	    			state.setBlending( NoBlending );
	    			renderObjects( opaqueObjects, camera, fog );
	
	    			// transparent pass (back-to-front order)
	
	    			renderObjects( transparentObjects, camera, fog );
	
	    		}
	
	    		// custom render plugins (post pass)
	
	    		spritePlugin.render( scene, camera );
	    		lensFlarePlugin.render( scene, camera, _currentViewport );
	
	    		// Generate mipmap if we're using any kind of mipmap filtering
	
	    		if ( renderTarget ) {
	
	    			textures.updateRenderTargetMipmap( renderTarget );
	
	    		}
	
	    		// Ensure depth buffer writing is enabled so it can be cleared on next render
	
	    		state.setDepthTest( true );
	    		state.setDepthWrite( true );
	    		state.setColorWrite( true );
	
	    		// _gl.finish();
	
	    	};
	
	    	function pushRenderItem( object, geometry, material, z, group ) {
	
	    		var array, index;
	
	    		// allocate the next position in the appropriate array
	
	    		if ( material.transparent ) {
	
	    			array = transparentObjects;
	    			index = ++ transparentObjectsLastIndex;
	
	    		} else {
	
	    			array = opaqueObjects;
	    			index = ++ opaqueObjectsLastIndex;
	
	    		}
	
	    		// recycle existing render item or grow the array
	
	    		var renderItem = array[ index ];
	
	    		if ( renderItem !== undefined ) {
	
	    			renderItem.id = object.id;
	    			renderItem.object = object;
	    			renderItem.geometry = geometry;
	    			renderItem.material = material;
	    			renderItem.z = _vector3.z;
	    			renderItem.group = group;
	
	    		} else {
	
	    			renderItem = {
	    				id: object.id,
	    				object: object,
	    				geometry: geometry,
	    				material: material,
	    				z: _vector3.z,
	    				group: group
	    			};
	
	    			// assert( index === array.length );
	    			array.push( renderItem );
	
	    		}
	
	    	}
	
	    	// TODO Duplicated code (Frustum)
	
	    	function isObjectViewable( object ) {
	
	    		var geometry = object.geometry;
	
	    		if ( geometry.boundingSphere === null )
	    			geometry.computeBoundingSphere();
	
	    		_sphere.copy( geometry.boundingSphere ).
	    			applyMatrix4( object.matrixWorld );
	
	    		return isSphereViewable( _sphere );
	
	    	}
	
	    	function isSpriteViewable( sprite ) {
	
	    		_sphere.center.set( 0, 0, 0 );
	    		_sphere.radius = 0.7071067811865476;
	    		_sphere.applyMatrix4( sprite.matrixWorld );
	
	    		return isSphereViewable( _sphere );
	
	    	}
	
	    	function isSphereViewable( sphere ) {
	
	    		if ( ! _frustum.intersectsSphere( sphere ) ) return false;
	
	    		var numPlanes = _clipping.numPlanes;
	
	    		if ( numPlanes === 0 ) return true;
	
	    		var planes = _this.clippingPlanes,
	
	    			center = sphere.center,
	    			negRad = - sphere.radius,
	    			i = 0;
	
	    		do {
	
	    			// out when deeper than radius in the negative halfspace
	    			if ( planes[ i ].distanceToPoint( center ) < negRad ) return false;
	
	    		} while ( ++ i !== numPlanes );
	
	    		return true;
	
	    	}
	
	    	function projectObject( object, camera ) {
	
	    		if ( object.visible === false ) return;
	
	    		var visible = ( object.layers.mask & camera.layers.mask ) !== 0;
	
	    		if ( visible ) {
	
	    			if ( object.isLight ) {
	
	    				lights.push( object );
	
	    			} else if ( object.isSprite ) {
	
	    				if ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {
	
	    					sprites.push( object );
	
	    				}
	
	    			} else if ( object.isLensFlare ) {
	
	    				lensFlares.push( object );
	
	    			} else if ( object.isImmediateRenderObject ) {
	
	    				if ( _this.sortObjects === true ) {
	
	    					_vector3.setFromMatrixPosition( object.matrixWorld );
	    					_vector3.applyProjection( _projScreenMatrix );
	
	    				}
	
	    				pushRenderItem( object, null, object.material, _vector3.z, null );
	
	    			} else if ( object.isMesh || object.isLine || object.isPoints ) {
	
	    				if ( object.isSkinnedMesh ) {
	
	    					object.skeleton.update();
	
	    				}
	
	    				if ( object.frustumCulled === false || isObjectViewable( object ) === true ) {
	
	    					var material = object.material;
	
	    					if ( material.visible === true ) {
	
	    						if ( _this.sortObjects === true ) {
	
	    							_vector3.setFromMatrixPosition( object.matrixWorld );
	    							_vector3.applyProjection( _projScreenMatrix );
	
	    						}
	
	    						var geometry = objects.update( object );
	
	    						if ( material.isMultiMaterial ) {
	
	    							var groups = geometry.groups;
	    							var materials = material.materials;
	
	    							for ( var i = 0, l = groups.length; i < l; i ++ ) {
	
	    								var group = groups[ i ];
	    								var groupMaterial = materials[ group.materialIndex ];
	
	    								if ( groupMaterial.visible === true ) {
	
	    									pushRenderItem( object, geometry, groupMaterial, _vector3.z, group );
	
	    								}
	
	    							}
	
	    						} else {
	
	    							pushRenderItem( object, geometry, material, _vector3.z, null );
	
	    						}
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		var children = object.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			projectObject( children[ i ], camera );
	
	    		}
	
	    	}
	
	    	function renderObjects( renderList, camera, fog, overrideMaterial ) {
	
	    		for ( var i = 0, l = renderList.length; i < l; i ++ ) {
	
	    			var renderItem = renderList[ i ];
	
	    			var object = renderItem.object;
	    			var geometry = renderItem.geometry;
	    			var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;
	    			var group = renderItem.group;
	
	    			object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );
	    			object.normalMatrix.getNormalMatrix( object.modelViewMatrix );
	
	    			if ( object.isImmediateRenderObject ) {
	
	    				setMaterial( material );
	
	    				var program = setProgram( camera, fog, material, object );
	
	    				_currentGeometryProgram = '';
	
	    				object.render( function ( object ) {
	
	    					_this.renderBufferImmediate( object, program, material );
	
	    				} );
	
	    			} else {
	
	    				if ( object.onBeforeRender !== null ) object.onBeforeRender();
	
	    				_this.renderBufferDirect( camera, fog, geometry, material, object, group );
	
	    			}
	
	    		}
	
	    	}
	
	    	function initMaterial( material, fog, object ) {
	
	    		var materialProperties = properties.get( material );
	
	    		var parameters = programCache.getParameters(
	    				material, _lights, fog, _clipping.numPlanes, object );
	
	    		var code = programCache.getProgramCode( material, parameters );
	
	    		var program = materialProperties.program;
	    		var programChange = true;
	
	    		if ( program === undefined ) {
	
	    			// new material
	    			material.addEventListener( 'dispose', onMaterialDispose );
	
	    		} else if ( program.code !== code ) {
	
	    			// changed glsl or parameters
	    			releaseMaterialProgramReference( material );
	
	    		} else if ( parameters.shaderID !== undefined ) {
	
	    			// same glsl and uniform list
	    			return;
	
	    		} else {
	
	    			// only rebuild uniform list
	    			programChange = false;
	
	    		}
	
	    		if ( programChange ) {
	
	    			if ( parameters.shaderID ) {
	
	    				var shader = ShaderLib[ parameters.shaderID ];
	
	    				materialProperties.__webglShader = {
	    					name: material.type,
	    					uniforms: exports.UniformsUtils.clone( shader.uniforms ),
	    					vertexShader: shader.vertexShader,
	    					fragmentShader: shader.fragmentShader
	    				};
	
	    			} else {
	
	    				materialProperties.__webglShader = {
	    					name: material.type,
	    					uniforms: material.uniforms,
	    					vertexShader: material.vertexShader,
	    					fragmentShader: material.fragmentShader
	    				};
	
	    			}
	
	    			material.__webglShader = materialProperties.__webglShader;
	
	    			program = programCache.acquireProgram( material, parameters, code );
	
	    			materialProperties.program = program;
	    			material.program = program;
	
	    		}
	
	    		var attributes = program.getAttributes();
	
	    		if ( material.morphTargets ) {
	
	    			material.numSupportedMorphTargets = 0;
	
	    			for ( var i = 0; i < _this.maxMorphTargets; i ++ ) {
	
	    				if ( attributes[ 'morphTarget' + i ] >= 0 ) {
	
	    					material.numSupportedMorphTargets ++;
	
	    				}
	
	    			}
	
	    		}
	
	    		if ( material.morphNormals ) {
	
	    			material.numSupportedMorphNormals = 0;
	
	    			for ( var i = 0; i < _this.maxMorphNormals; i ++ ) {
	
	    				if ( attributes[ 'morphNormal' + i ] >= 0 ) {
	
	    					material.numSupportedMorphNormals ++;
	
	    				}
	
	    			}
	
	    		}
	
	    		var uniforms = materialProperties.__webglShader.uniforms;
	
	    		if ( ! material.isShaderMaterial &&
	    		     ! material.isRawShaderMaterial ||
	    		       material.clipping === true ) {
	
	    			materialProperties.numClippingPlanes = _clipping.numPlanes;
	    			uniforms.clippingPlanes = _clipping.uniform;
	
	    		}
	
	    		materialProperties.fog = fog;
	
	    		// store the light setup it was created for
	
	    		materialProperties.lightsHash = _lights.hash;
	
	    		if ( material.lights ) {
	
	    			// wire up the material to this renderer's lighting state
	
	    			uniforms.ambientLightColor.value = _lights.ambient;
	    			uniforms.directionalLights.value = _lights.directional;
	    			uniforms.spotLights.value = _lights.spot;
	    			uniforms.pointLights.value = _lights.point;
	    			uniforms.hemisphereLights.value = _lights.hemi;
	
	    			uniforms.directionalShadowMap.value = _lights.directionalShadowMap;
	    			uniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;
	    			uniforms.spotShadowMap.value = _lights.spotShadowMap;
	    			uniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;
	    			uniforms.pointShadowMap.value = _lights.pointShadowMap;
	    			uniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;
	
	    		}
	
	    		var progUniforms = materialProperties.program.getUniforms(),
	    			uniformsList =
	    					WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );
	
	    		materialProperties.uniformsList = uniformsList;
	    		materialProperties.dynamicUniforms =
	    				WebGLUniforms.splitDynamic( uniformsList, uniforms );
	
	    	}
	
	    	function setMaterial( material ) {
	
	    		material.side === DoubleSide
	    			? state.disable( _gl.CULL_FACE )
	    			: state.enable( _gl.CULL_FACE );
	
	    		state.setFlipSided( material.side === BackSide );
	
	    		material.transparent === true
	    			? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )
	    			: state.setBlending( NoBlending );
	
	    		state.setDepthFunc( material.depthFunc );
	    		state.setDepthTest( material.depthTest );
	    		state.setDepthWrite( material.depthWrite );
	    		state.setColorWrite( material.colorWrite );
	    		state.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );
	
	    	}
	
	    	function setProgram( camera, fog, material, object ) {
	
	    		_usedTextureUnits = 0;
	
	    		var materialProperties = properties.get( material );
	
	    		if ( _clippingEnabled ) {
	
	    			if ( _localClippingEnabled || camera !== _currentCamera ) {
	
	    				var useCache =
	    						camera === _currentCamera &&
	    						material.id === _currentMaterialId;
	
	    				// we might want to call this function with some ClippingGroup
	    				// object instead of the material, once it becomes feasible
	    				// (#8465, #8379)
	    				_clipping.setState(
	    						material.clippingPlanes, material.clipShadows,
	    						camera, materialProperties, useCache );
	
	    			}
	
	    		}
	
	    		if ( material.needsUpdate === false ) {
	
	    			if ( materialProperties.program === undefined ) {
	
	    				material.needsUpdate = true;
	
	    			} else if ( material.fog && materialProperties.fog !== fog ) {
	
	    				material.needsUpdate = true;
	
	    			} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {
	
	    				material.needsUpdate = true;
	
	    			} else if ( materialProperties.numClippingPlanes !== undefined &&
	    				materialProperties.numClippingPlanes !== _clipping.numPlanes ) {
	
	    				material.needsUpdate = true;
	
	    			}
	
	    		}
	
	    		if ( material.needsUpdate ) {
	
	    			initMaterial( material, fog, object );
	    			material.needsUpdate = false;
	
	    		}
	
	    		var refreshProgram = false;
	    		var refreshMaterial = false;
	    		var refreshLights = false;
	
	    		var program = materialProperties.program,
	    			p_uniforms = program.getUniforms(),
	    			m_uniforms = materialProperties.__webglShader.uniforms;
	
	    		if ( program.id !== _currentProgram ) {
	
	    			_gl.useProgram( program.program );
	    			_currentProgram = program.id;
	
	    			refreshProgram = true;
	    			refreshMaterial = true;
	    			refreshLights = true;
	
	    		}
	
	    		if ( material.id !== _currentMaterialId ) {
	
	    			_currentMaterialId = material.id;
	
	    			refreshMaterial = true;
	
	    		}
	
	    		if ( refreshProgram || camera !== _currentCamera ) {
	
	    			p_uniforms.set( _gl, camera, 'projectionMatrix' );
	
	    			if ( capabilities.logarithmicDepthBuffer ) {
	
	    				p_uniforms.setValue( _gl, 'logDepthBufFC',
	    						2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );
	
	    			}
	
	
	    			if ( camera !== _currentCamera ) {
	
	    				_currentCamera = camera;
	
	    				// lighting uniforms depend on the camera so enforce an update
	    				// now, in case this material supports lights - or later, when
	    				// the next material that does gets activated:
	
	    				refreshMaterial = true;		// set to true on material change
	    				refreshLights = true;		// remains set until update done
	
	    			}
	
	    			// load material specific uniforms
	    			// (shader material also gets them for the sake of genericity)
	
	    			if ( material.isShaderMaterial ||
	    			     material.isMeshPhongMaterial ||
	    			     material.isMeshStandardMaterial ||
	    			     material.envMap ) {
	
	    				var uCamPos = p_uniforms.map.cameraPosition;
	
	    				if ( uCamPos !== undefined ) {
	
	    					uCamPos.setValue( _gl,
	    							_vector3.setFromMatrixPosition( camera.matrixWorld ) );
	
	    				}
	
	    			}
	
	    			if ( material.isMeshPhongMaterial ||
	    			     material.isMeshLambertMaterial ||
	    			     material.isMeshBasicMaterial ||
	    			     material.isMeshStandardMaterial ||
	    			     material.isShaderMaterial ||
	    			     material.skinning ) {
	
	    				p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );
	
	    			}
	
	    			p_uniforms.set( _gl, _this, 'toneMappingExposure' );
	    			p_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );
	
	    		}
	
	    		// skinning uniforms must be set even if material didn't change
	    		// auto-setting of texture unit for bone texture must go before other textures
	    		// not sure why, but otherwise weird things happen
	
	    		if ( material.skinning ) {
	
	    			p_uniforms.setOptional( _gl, object, 'bindMatrix' );
	    			p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );
	
	    			var skeleton = object.skeleton;
	
	    			if ( skeleton ) {
	
	    				if ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {
	
	    					p_uniforms.set( _gl, skeleton, 'boneTexture' );
	    					p_uniforms.set( _gl, skeleton, 'boneTextureWidth' );
	    					p_uniforms.set( _gl, skeleton, 'boneTextureHeight' );
	
	    				} else {
	
	    					p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );
	
	    				}
	
	    			}
	
	    		}
	
	    		if ( refreshMaterial ) {
	
	    			if ( material.lights ) {
	
	    				// the current material requires lighting info
	
	    				// note: all lighting uniforms are always set correctly
	    				// they simply reference the renderer's state for their
	    				// values
	    				//
	    				// use the current material's .needsUpdate flags to set
	    				// the GL state when required
	
	    				markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );
	
	    			}
	
	    			// refresh uniforms common to several materials
	
	    			if ( fog && material.fog ) {
	
	    				refreshUniformsFog( m_uniforms, fog );
	
	    			}
	
	    			if ( material.isMeshBasicMaterial ||
	    			     material.isMeshLambertMaterial ||
	    			     material.isMeshPhongMaterial ||
	    			     material.isMeshStandardMaterial ||
	    			     material.isMeshDepthMaterial ) {
	
	    				refreshUniformsCommon( m_uniforms, material );
	
	    			}
	
	    			// refresh single material specific uniforms
	
	    			if ( material.isLineBasicMaterial ) {
	
	    				refreshUniformsLine( m_uniforms, material );
	
	    			} else if ( material.isLineDashedMaterial ) {
	
	    				refreshUniformsLine( m_uniforms, material );
	    				refreshUniformsDash( m_uniforms, material );
	
	    			} else if ( material.isPointsMaterial ) {
	
	    				refreshUniformsPoints( m_uniforms, material );
	
	    			} else if ( material.isMeshLambertMaterial ) {
	
	    				refreshUniformsLambert( m_uniforms, material );
	
	    			} else if ( material.isMeshPhongMaterial ) {
	
	    				refreshUniformsPhong( m_uniforms, material );
	
	    			} else if ( material.isMeshPhysicalMaterial ) {
	
	    				refreshUniformsPhysical( m_uniforms, material );
	
	    			} else if ( material.isMeshStandardMaterial ) {
	
	    				refreshUniformsStandard( m_uniforms, material );
	
	    			} else if ( material.isMeshDepthMaterial ) {
	
	    				if ( material.displacementMap ) {
	
	    					m_uniforms.displacementMap.value = material.displacementMap;
	    					m_uniforms.displacementScale.value = material.displacementScale;
	    					m_uniforms.displacementBias.value = material.displacementBias;
	
	    				}
	
	    			} else if ( material.isMeshNormalMaterial ) {
	
	    				m_uniforms.opacity.value = material.opacity;
	
	    			}
	
	    			WebGLUniforms.upload(
	    					_gl, materialProperties.uniformsList, m_uniforms, _this );
	
	    		}
	
	
	    		// common matrices
	
	    		p_uniforms.set( _gl, object, 'modelViewMatrix' );
	    		p_uniforms.set( _gl, object, 'normalMatrix' );
	    		p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );
	
	
	    		// dynamic uniforms
	
	    		var dynUniforms = materialProperties.dynamicUniforms;
	
	    		if ( dynUniforms !== null ) {
	
	    			WebGLUniforms.evalDynamic( dynUniforms, m_uniforms, object, material, camera );
	    			WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );
	
	    		}
	
	    		return program;
	
	    	}
	
	    	// Uniforms (refresh uniforms objects)
	
	    	function refreshUniformsCommon( uniforms, material ) {
	
	    		uniforms.opacity.value = material.opacity;
	
	    		uniforms.diffuse.value = material.color;
	
	    		if ( material.emissive ) {
	
	    			uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );
	
	    		}
	
	    		uniforms.map.value = material.map;
	    		uniforms.specularMap.value = material.specularMap;
	    		uniforms.alphaMap.value = material.alphaMap;
	
	    		if ( material.aoMap ) {
	
	    			uniforms.aoMap.value = material.aoMap;
	    			uniforms.aoMapIntensity.value = material.aoMapIntensity;
	
	    		}
	
	    		// uv repeat and offset setting priorities
	    		// 1. color map
	    		// 2. specular map
	    		// 3. normal map
	    		// 4. bump map
	    		// 5. alpha map
	    		// 6. emissive map
	
	    		var uvScaleMap;
	
	    		if ( material.map ) {
	
	    			uvScaleMap = material.map;
	
	    		} else if ( material.specularMap ) {
	
	    			uvScaleMap = material.specularMap;
	
	    		} else if ( material.displacementMap ) {
	
	    			uvScaleMap = material.displacementMap;
	
	    		} else if ( material.normalMap ) {
	
	    			uvScaleMap = material.normalMap;
	
	    		} else if ( material.bumpMap ) {
	
	    			uvScaleMap = material.bumpMap;
	
	    		} else if ( material.roughnessMap ) {
	
	    			uvScaleMap = material.roughnessMap;
	
	    		} else if ( material.metalnessMap ) {
	
	    			uvScaleMap = material.metalnessMap;
	
	    		} else if ( material.alphaMap ) {
	
	    			uvScaleMap = material.alphaMap;
	
	    		} else if ( material.emissiveMap ) {
	
	    			uvScaleMap = material.emissiveMap;
	
	    		}
	
	    		if ( uvScaleMap !== undefined ) {
	
	    			// backwards compatibility
	    			if ( uvScaleMap.isWebGLRenderTarget ) {
	
	    				uvScaleMap = uvScaleMap.texture;
	
	    			}
	
	    			var offset = uvScaleMap.offset;
	    			var repeat = uvScaleMap.repeat;
	
	    			uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );
	
	    		}
	
	    		uniforms.envMap.value = material.envMap;
	
	    		// don't flip CubeTexture envMaps, flip everything else:
	    		//  WebGLRenderTargetCube will be flipped for backwards compatibility
	    		//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
	    		// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
	    		uniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;
	
	    		uniforms.reflectivity.value = material.reflectivity;
	    		uniforms.refractionRatio.value = material.refractionRatio;
	
	    	}
	
	    	function refreshUniformsLine( uniforms, material ) {
	
	    		uniforms.diffuse.value = material.color;
	    		uniforms.opacity.value = material.opacity;
	
	    	}
	
	    	function refreshUniformsDash( uniforms, material ) {
	
	    		uniforms.dashSize.value = material.dashSize;
	    		uniforms.totalSize.value = material.dashSize + material.gapSize;
	    		uniforms.scale.value = material.scale;
	
	    	}
	
	    	function refreshUniformsPoints( uniforms, material ) {
	
	    		uniforms.diffuse.value = material.color;
	    		uniforms.opacity.value = material.opacity;
	    		uniforms.size.value = material.size * _pixelRatio;
	    		uniforms.scale.value = _canvas.clientHeight * 0.5;
	
	    		uniforms.map.value = material.map;
	
	    		if ( material.map !== null ) {
	
	    			var offset = material.map.offset;
	    			var repeat = material.map.repeat;
	
	    			uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );
	
	    		}
	
	    	}
	
	    	function refreshUniformsFog( uniforms, fog ) {
	
	    		uniforms.fogColor.value = fog.color;
	
	    		if ( fog.isFog ) {
	
	    			uniforms.fogNear.value = fog.near;
	    			uniforms.fogFar.value = fog.far;
	
	    		} else if ( fog.isFogExp2 ) {
	
	    			uniforms.fogDensity.value = fog.density;
	
	    		}
	
	    	}
	
	    	function refreshUniformsLambert( uniforms, material ) {
	
	    		if ( material.lightMap ) {
	
	    			uniforms.lightMap.value = material.lightMap;
	    			uniforms.lightMapIntensity.value = material.lightMapIntensity;
	
	    		}
	
	    		if ( material.emissiveMap ) {
	
	    			uniforms.emissiveMap.value = material.emissiveMap;
	
	    		}
	
	    	}
	
	    	function refreshUniformsPhong( uniforms, material ) {
	
	    		uniforms.specular.value = material.specular;
	    		uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )
	
	    		if ( material.lightMap ) {
	
	    			uniforms.lightMap.value = material.lightMap;
	    			uniforms.lightMapIntensity.value = material.lightMapIntensity;
	
	    		}
	
	    		if ( material.emissiveMap ) {
	
	    			uniforms.emissiveMap.value = material.emissiveMap;
	
	    		}
	
	    		if ( material.bumpMap ) {
	
	    			uniforms.bumpMap.value = material.bumpMap;
	    			uniforms.bumpScale.value = material.bumpScale;
	
	    		}
	
	    		if ( material.normalMap ) {
	
	    			uniforms.normalMap.value = material.normalMap;
	    			uniforms.normalScale.value.copy( material.normalScale );
	
	    		}
	
	    		if ( material.displacementMap ) {
	
	    			uniforms.displacementMap.value = material.displacementMap;
	    			uniforms.displacementScale.value = material.displacementScale;
	    			uniforms.displacementBias.value = material.displacementBias;
	
	    		}
	
	    	}
	
	    	function refreshUniformsStandard( uniforms, material ) {
	
	    		uniforms.roughness.value = material.roughness;
	    		uniforms.metalness.value = material.metalness;
	
	    		if ( material.roughnessMap ) {
	
	    			uniforms.roughnessMap.value = material.roughnessMap;
	
	    		}
	
	    		if ( material.metalnessMap ) {
	
	    			uniforms.metalnessMap.value = material.metalnessMap;
	
	    		}
	
	    		if ( material.lightMap ) {
	
	    			uniforms.lightMap.value = material.lightMap;
	    			uniforms.lightMapIntensity.value = material.lightMapIntensity;
	
	    		}
	
	    		if ( material.emissiveMap ) {
	
	    			uniforms.emissiveMap.value = material.emissiveMap;
	
	    		}
	
	    		if ( material.bumpMap ) {
	
	    			uniforms.bumpMap.value = material.bumpMap;
	    			uniforms.bumpScale.value = material.bumpScale;
	
	    		}
	
	    		if ( material.normalMap ) {
	
	    			uniforms.normalMap.value = material.normalMap;
	    			uniforms.normalScale.value.copy( material.normalScale );
	
	    		}
	
	    		if ( material.displacementMap ) {
	
	    			uniforms.displacementMap.value = material.displacementMap;
	    			uniforms.displacementScale.value = material.displacementScale;
	    			uniforms.displacementBias.value = material.displacementBias;
	
	    		}
	
	    		if ( material.envMap ) {
	
	    			//uniforms.envMap.value = material.envMap; // part of uniforms common
	    			uniforms.envMapIntensity.value = material.envMapIntensity;
	
	    		}
	
	    	}
	
	    	function refreshUniformsPhysical( uniforms, material ) {
	
	    		uniforms.clearCoat.value = material.clearCoat;
	    		uniforms.clearCoatRoughness.value = material.clearCoatRoughness;
	
	    		refreshUniformsStandard( uniforms, material );
	
	    	}
	
	    	// If uniforms are marked as clean, they don't need to be loaded to the GPU.
	
	    	function markUniformsLightsNeedsUpdate( uniforms, value ) {
	
	    		uniforms.ambientLightColor.needsUpdate = value;
	
	    		uniforms.directionalLights.needsUpdate = value;
	    		uniforms.pointLights.needsUpdate = value;
	    		uniforms.spotLights.needsUpdate = value;
	    		uniforms.hemisphereLights.needsUpdate = value;
	
	    	}
	
	    	// Lighting
	
	    	function setupShadows( lights ) {
	
	    		var lightShadowsLength = 0;
	
	    		for ( var i = 0, l = lights.length; i < l; i ++ ) {
	
	    			var light = lights[ i ];
	
	    			if ( light.castShadow ) {
	
	    				_lights.shadows[ lightShadowsLength ++ ] = light;
	
	    			}
	
	    		}
	
	    		_lights.shadows.length = lightShadowsLength;
	
	    	}
	
	    	function setupLights( lights, camera ) {
	
	    		var l, ll, light,
	    		r = 0, g = 0, b = 0,
	    		color,
	    		intensity,
	    		distance,
	    		shadowMap,
	
	    		viewMatrix = camera.matrixWorldInverse,
	
	    		directionalLength = 0,
	    		pointLength = 0,
	    		spotLength = 0,
	    		hemiLength = 0;
	
	    		for ( l = 0, ll = lights.length; l < ll; l ++ ) {
	
	    			light = lights[ l ];
	
	    			color = light.color;
	    			intensity = light.intensity;
	    			distance = light.distance;
	
	    			shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;
	
	    			if ( light.isAmbientLight ) {
	
	    				r += color.r * intensity;
	    				g += color.g * intensity;
	    				b += color.b * intensity;
	
	    			} else if ( light.isDirectionalLight ) {
	
	    				var uniforms = lightCache.get( light );
	
	    				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
	    				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
	    				_vector3.setFromMatrixPosition( light.target.matrixWorld );
	    				uniforms.direction.sub( _vector3 );
	    				uniforms.direction.transformDirection( viewMatrix );
	
	    				uniforms.shadow = light.castShadow;
	
	    				if ( light.castShadow ) {
	
	    					uniforms.shadowBias = light.shadow.bias;
	    					uniforms.shadowRadius = light.shadow.radius;
	    					uniforms.shadowMapSize = light.shadow.mapSize;
	
	    				}
	
	    				_lights.directionalShadowMap[ directionalLength ] = shadowMap;
	    				_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;
	    				_lights.directional[ directionalLength ++ ] = uniforms;
	
	    			} else if ( light.isSpotLight ) {
	
	    				var uniforms = lightCache.get( light );
	
	    				uniforms.position.setFromMatrixPosition( light.matrixWorld );
	    				uniforms.position.applyMatrix4( viewMatrix );
	
	    				uniforms.color.copy( color ).multiplyScalar( intensity );
	    				uniforms.distance = distance;
	
	    				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
	    				_vector3.setFromMatrixPosition( light.target.matrixWorld );
	    				uniforms.direction.sub( _vector3 );
	    				uniforms.direction.transformDirection( viewMatrix );
	
	    				uniforms.coneCos = Math.cos( light.angle );
	    				uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );
	    				uniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;
	
	    				uniforms.shadow = light.castShadow;
	
	    				if ( light.castShadow ) {
	
	    					uniforms.shadowBias = light.shadow.bias;
	    					uniforms.shadowRadius = light.shadow.radius;
	    					uniforms.shadowMapSize = light.shadow.mapSize;
	
	    				}
	
	    				_lights.spotShadowMap[ spotLength ] = shadowMap;
	    				_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;
	    				_lights.spot[ spotLength ++ ] = uniforms;
	
	    			} else if ( light.isPointLight ) {
	
	    				var uniforms = lightCache.get( light );
	
	    				uniforms.position.setFromMatrixPosition( light.matrixWorld );
	    				uniforms.position.applyMatrix4( viewMatrix );
	
	    				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
	    				uniforms.distance = light.distance;
	    				uniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;
	
	    				uniforms.shadow = light.castShadow;
	
	    				if ( light.castShadow ) {
	
	    					uniforms.shadowBias = light.shadow.bias;
	    					uniforms.shadowRadius = light.shadow.radius;
	    					uniforms.shadowMapSize = light.shadow.mapSize;
	
	    				}
	
	    				_lights.pointShadowMap[ pointLength ] = shadowMap;
	
	    				if ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {
	
	    					_lights.pointShadowMatrix[ pointLength ] = new Matrix4();
	
	    				}
	
	    				// for point lights we set the shadow matrix to be a translation-only matrix
	    				// equal to inverse of the light's position
	    				_vector3.setFromMatrixPosition( light.matrixWorld ).negate();
	    				_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );
	
	    				_lights.point[ pointLength ++ ] = uniforms;
	
	    			} else if ( light.isHemisphereLight ) {
	
	    				var uniforms = lightCache.get( light );
	
	    				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
	    				uniforms.direction.transformDirection( viewMatrix );
	    				uniforms.direction.normalize();
	
	    				uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );
	    				uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );
	
	    				_lights.hemi[ hemiLength ++ ] = uniforms;
	
	    			}
	
	    		}
	
	    		_lights.ambient[ 0 ] = r;
	    		_lights.ambient[ 1 ] = g;
	    		_lights.ambient[ 2 ] = b;
	
	    		_lights.directional.length = directionalLength;
	    		_lights.spot.length = spotLength;
	    		_lights.point.length = pointLength;
	    		_lights.hemi.length = hemiLength;
	
	    		_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;
	
	    	}
	
	    	// GL state setting
	
	    	this.setFaceCulling = function ( cullFace, frontFaceDirection ) {
	
	    		state.setCullFace( cullFace );
	    		state.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );
	
	    	};
	
	    	// Textures
	
	    	function allocTextureUnit() {
	
	    		var textureUnit = _usedTextureUnits;
	
	    		if ( textureUnit >= capabilities.maxTextures ) {
	
	    			console.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );
	
	    		}
	
	    		_usedTextureUnits += 1;
	
	    		return textureUnit;
	
	    	}
	
	    	this.allocTextureUnit = allocTextureUnit;
	
	    	// this.setTexture2D = setTexture2D;
	    	this.setTexture2D = ( function() {
	
	    		var warned = false;
	
	    		// backwards compatibility: peel texture.texture
	    		return function setTexture2D( texture, slot ) {
	
	    			if ( texture && texture.isWebGLRenderTarget ) {
	
	    				if ( ! warned ) {
	
	    					console.warn( "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead." );
	    					warned = true;
	
	    				}
	
	    				texture = texture.texture;
	
	    			}
	
	    			textures.setTexture2D( texture, slot );
	
	    		};
	
	    	}() );
	
	    	this.setTexture = ( function() {
	
	    		var warned = false;
	
	    		return function setTexture( texture, slot ) {
	
	    			if ( ! warned ) {
	
	    				console.warn( "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead." );
	    				warned = true;
	
	    			}
	
	    			textures.setTexture2D( texture, slot );
	
	    		};
	
	    	}() );
	
	    	this.setTextureCube = ( function() {
	
	    		var warned = false;
	
	    		return function setTextureCube( texture, slot ) {
	
	    			// backwards compatibility: peel texture.texture
	    			if ( texture && texture.isWebGLRenderTargetCube ) {
	
	    				if ( ! warned ) {
	
	    					console.warn( "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead." );
	    					warned = true;
	
	    				}
	
	    				texture = texture.texture;
	
	    			}
	
	    			// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture
	    			// TODO: unify these code paths
	    			if ( ( texture && texture.isCubeTexture ) ||
	    				 ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {
	
	    				// CompressedTexture can have Array in image :/
	
	    				// this function alone should take care of cube textures
	    				textures.setTextureCube( texture, slot );
	
	    			} else {
	
	    				// assumed: texture property of THREE.WebGLRenderTargetCube
	
	    				textures.setTextureCubeDynamic( texture, slot );
	
	    			}
	
	    		};
	
	    	}() );
	
	    	this.getCurrentRenderTarget = function() {
	
	    		return _currentRenderTarget;
	
	    	};
	
	    	this.setRenderTarget = function ( renderTarget ) {
	
	    		_currentRenderTarget = renderTarget;
	
	    		if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {
	
	    			textures.setupRenderTarget( renderTarget );
	
	    		}
	
	    		var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );
	    		var framebuffer;
	
	    		if ( renderTarget ) {
	
	    			var renderTargetProperties = properties.get( renderTarget );
	
	    			if ( isCube ) {
	
	    				framebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];
	
	    			} else {
	
	    				framebuffer = renderTargetProperties.__webglFramebuffer;
	
	    			}
	
	    			_currentScissor.copy( renderTarget.scissor );
	    			_currentScissorTest = renderTarget.scissorTest;
	
	    			_currentViewport.copy( renderTarget.viewport );
	
	    		} else {
	
	    			framebuffer = null;
	
	    			_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );
	    			_currentScissorTest = _scissorTest;
	
	    			_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );
	
	    		}
	
	    		if ( _currentFramebuffer !== framebuffer ) {
	
	    			_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
	    			_currentFramebuffer = framebuffer;
	
	    		}
	
	    		state.scissor( _currentScissor );
	    		state.setScissorTest( _currentScissorTest );
	
	    		state.viewport( _currentViewport );
	
	    		if ( isCube ) {
	
	    			var textureProperties = properties.get( renderTarget.texture );
	    			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );
	
	    		}
	
	    	};
	
	    	this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {
	
	    		if ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {
	
	    			console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );
	    			return;
	
	    		}
	
	    		var framebuffer = properties.get( renderTarget ).__webglFramebuffer;
	
	    		if ( framebuffer ) {
	
	    			var restore = false;
	
	    			if ( framebuffer !== _currentFramebuffer ) {
	
	    				_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
	
	    				restore = true;
	
	    			}
	
	    			try {
	
	    				var texture = renderTarget.texture;
	    				var textureFormat = texture.format;
	    				var textureType = texture.type;
	
	    				if ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {
	
	    					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );
	    					return;
	
	    				}
	
	    				if ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)
	    				     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox
	    				     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {
	
	    					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );
	    					return;
	
	    				}
	
	    				if ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {
	
	    					// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
	
	    					if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {
	
	    						_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );
	
	    					}
	
	    				} else {
	
	    					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );
	
	    				}
	
	    			} finally {
	
	    				if ( restore ) {
	
	    					_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );
	
	    				}
	
	    			}
	
	    		}
	
	    	};
	
	    	// Map three.js constants to WebGL constants
	
	    	function paramThreeToGL( p ) {
	
	    		var extension;
	
	    		if ( p === RepeatWrapping ) return _gl.REPEAT;
	    		if ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;
	    		if ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;
	
	    		if ( p === NearestFilter ) return _gl.NEAREST;
	    		if ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;
	    		if ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;
	
	    		if ( p === LinearFilter ) return _gl.LINEAR;
	    		if ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;
	    		if ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;
	
	    		if ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;
	    		if ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;
	    		if ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;
	    		if ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;
	
	    		if ( p === ByteType ) return _gl.BYTE;
	    		if ( p === ShortType ) return _gl.SHORT;
	    		if ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;
	    		if ( p === IntType ) return _gl.INT;
	    		if ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;
	    		if ( p === FloatType ) return _gl.FLOAT;
	
	    		extension = extensions.get( 'OES_texture_half_float' );
	
	    		if ( extension !== null ) {
	
	    			if ( p === HalfFloatType ) return extension.HALF_FLOAT_OES;
	
	    		}
	
	    		if ( p === AlphaFormat ) return _gl.ALPHA;
	    		if ( p === RGBFormat ) return _gl.RGB;
	    		if ( p === RGBAFormat ) return _gl.RGBA;
	    		if ( p === LuminanceFormat ) return _gl.LUMINANCE;
	    		if ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;
	    		if ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;
	    		if ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;
	
	    		if ( p === AddEquation ) return _gl.FUNC_ADD;
	    		if ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;
	    		if ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;
	
	    		if ( p === ZeroFactor ) return _gl.ZERO;
	    		if ( p === OneFactor ) return _gl.ONE;
	    		if ( p === SrcColorFactor ) return _gl.SRC_COLOR;
	    		if ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;
	    		if ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;
	    		if ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;
	    		if ( p === DstAlphaFactor ) return _gl.DST_ALPHA;
	    		if ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;
	
	    		if ( p === DstColorFactor ) return _gl.DST_COLOR;
	    		if ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;
	    		if ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;
	
	    		extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );
	
	    		if ( extension !== null ) {
	
	    			if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;
	    			if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
	    			if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;
	    			if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;
	
	    		}
	
	    		extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );
	
	    		if ( extension !== null ) {
	
	    			if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
	    			if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
	    			if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
	    			if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
	
	    		}
	
	    		extension = extensions.get( 'WEBGL_compressed_texture_etc1' );
	
	    		if ( extension !== null ) {
	
	    			if ( p === RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;
	
	    		}
	
	    		extension = extensions.get( 'EXT_blend_minmax' );
	
	    		if ( extension !== null ) {
	
	    			if ( p === MinEquation ) return extension.MIN_EXT;
	    			if ( p === MaxEquation ) return extension.MAX_EXT;
	
	    		}
	
	    		extension = extensions.get( 'WEBGL_depth_texture' );
	
	    		if ( extension !== null ){
	
	    			if ( p === UnsignedInt248Type ) return extension.UNSIGNED_INT_24_8_WEBGL;
	
	    		}
	
	    		return 0;
	
	    	}
	
	    }
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function FogExp2 ( color, density ) {
	
	    	this.name = '';
	
	    	this.color = new Color( color );
	    	this.density = ( density !== undefined ) ? density : 0.00025;
	
	    }
	
	    FogExp2.prototype.isFogExp2 = true;
	
	    FogExp2.prototype.clone = function () {
	
	    	return new FogExp2( this.color.getHex(), this.density );
	
	    };
	
	    FogExp2.prototype.toJSON = function ( meta ) {
	
	    	return {
	    		type: 'FogExp2',
	    		color: this.color.getHex(),
	    		density: this.density
	    	};
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Fog ( color, near, far ) {
	
	    	this.name = '';
	
	    	this.color = new Color( color );
	
	    	this.near = ( near !== undefined ) ? near : 1;
	    	this.far = ( far !== undefined ) ? far : 1000;
	
	    }
	
	    Fog.prototype.isFog = true;
	
	    Fog.prototype.clone = function () {
	
	    	return new Fog( this.color.getHex(), this.near, this.far );
	
	    };
	
	    Fog.prototype.toJSON = function ( meta ) {
	
	    	return {
	    		type: 'Fog',
	    		color: this.color.getHex(),
	    		near: this.near,
	    		far: this.far
	    	};
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Scene () {
	
	    	Object3D.call( this );
	
	    	this.type = 'Scene';
	
	    	this.background = null;
	    	this.fog = null;
	    	this.overrideMaterial = null;
	
	    	this.autoUpdate = true; // checked by the renderer
	
	    }
	
	    Scene.prototype = Object.create( Object3D.prototype );
	
	    Scene.prototype.constructor = Scene;
	
	    Scene.prototype.copy = function ( source, recursive ) {
	
	    	Object3D.prototype.copy.call( this, source, recursive );
	
	    	if ( source.background !== null ) this.background = source.background.clone();
	    	if ( source.fog !== null ) this.fog = source.fog.clone();
	    	if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();
	
	    	this.autoUpdate = source.autoUpdate;
	    	this.matrixAutoUpdate = source.matrixAutoUpdate;
	
	    	return this;
	
	    };
	
	    Scene.prototype.toJSON = function ( meta ) {
	
	    	var data = Object3D.prototype.toJSON.call( this, meta );
	
	    	if ( this.background !== null ) data.object.background = this.background.toJSON( meta );
	    	if ( this.fog !== null ) data.object.fog = this.fog.toJSON();
	
	    	return data;
	
	    };
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function LensFlare( texture, size, distance, blending, color ) {
	
	    	Object3D.call( this );
	
	    	this.lensFlares = [];
	
	    	this.positionScreen = new Vector3();
	    	this.customUpdateCallback = undefined;
	
	    	if ( texture !== undefined ) {
	
	    		this.add( texture, size, distance, blending, color );
	
	    	}
	
	    }
	
	    LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: LensFlare,
	
	    	isLensFlare: true,
	
	    	copy: function ( source ) {
	
	    		Object3D.prototype.copy.call( this, source );
	
	    		this.positionScreen.copy( source.positionScreen );
	    		this.customUpdateCallback = source.customUpdateCallback;
	
	    		for ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {
	
	    			this.lensFlares.push( source.lensFlares[ i ] );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	add: function ( texture, size, distance, blending, color, opacity ) {
	
	    		if ( size === undefined ) size = - 1;
	    		if ( distance === undefined ) distance = 0;
	    		if ( opacity === undefined ) opacity = 1;
	    		if ( color === undefined ) color = new Color( 0xffffff );
	    		if ( blending === undefined ) blending = NormalBlending;
	
	    		distance = Math.min( distance, Math.max( 0, distance ) );
	
	    		this.lensFlares.push( {
	    			texture: texture,	// THREE.Texture
	    			size: size, 		// size in pixels (-1 = use texture.width)
	    			distance: distance, 	// distance (0-1) from light source (0=at light source)
	    			x: 0, y: 0, z: 0,	// screen position (-1 => 1) z = 0 is in front z = 1 is back
	    			scale: 1, 		// scale
	    			rotation: 0, 		// rotation
	    			opacity: opacity,	// opacity
	    			color: color,		// color
	    			blending: blending	// blending
	    		} );
	
	    	},
	
	    	/*
	    	 * Update lens flares update positions on all flares based on the screen position
	    	 * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.
	    	 */
	
	    	updateLensFlares: function () {
	
	    		var f, fl = this.lensFlares.length;
	    		var flare;
	    		var vecX = - this.positionScreen.x * 2;
	    		var vecY = - this.positionScreen.y * 2;
	
	    		for ( f = 0; f < fl; f ++ ) {
	
	    			flare = this.lensFlares[ f ];
	
	    			flare.x = this.positionScreen.x + vecX * flare.distance;
	    			flare.y = this.positionScreen.y + vecY * flare.distance;
	
	    			flare.wantedRotation = flare.x * Math.PI * 0.25;
	    			flare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;
	
	    		}
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *	uvOffset: new THREE.Vector2(),
	     *	uvScale: new THREE.Vector2()
	     * }
	     */
	
	    function SpriteMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'SpriteMaterial';
	
	    	this.color = new Color( 0xffffff );
	    	this.map = null;
	
	    	this.rotation = 0;
	
	    	this.fog = false;
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    SpriteMaterial.prototype = Object.create( Material.prototype );
	    SpriteMaterial.prototype.constructor = SpriteMaterial;
	
	    SpriteMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	    	this.map = source.map;
	
	    	this.rotation = source.rotation;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Sprite( material ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Sprite';
	
	    	this.material = ( material !== undefined ) ? material : new SpriteMaterial();
	
	    }
	
	    Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Sprite,
	
	    	isSprite: true,
	
	    	raycast: ( function () {
	
	    		var matrixPosition = new Vector3();
	
	    		return function raycast( raycaster, intersects ) {
	
	    			matrixPosition.setFromMatrixPosition( this.matrixWorld );
	
	    			var distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );
	    			var guessSizeSq = this.scale.x * this.scale.y / 4;
	
	    			if ( distanceSq > guessSizeSq ) {
	
	    				return;
	
	    			}
	
	    			intersects.push( {
	
	    				distance: Math.sqrt( distanceSq ),
	    				point: this.position,
	    				face: null,
	    				object: this
	
	    			} );
	
	    		};
	
	    	}() ),
	
	    	clone: function () {
	
	    		return new this.constructor( this.material ).copy( this );
	
	    	}
	
	    } );
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function LOD() {
	
	    	Object3D.call( this );
	
	    	this.type = 'LOD';
	
	    	Object.defineProperties( this, {
	    		levels: {
	    			enumerable: true,
	    			value: []
	    		}
	    	} );
	
	    }
	
	
	    LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: LOD,
	
	    	copy: function ( source ) {
	
	    		Object3D.prototype.copy.call( this, source, false );
	
	    		var levels = source.levels;
	
	    		for ( var i = 0, l = levels.length; i < l; i ++ ) {
	
	    			var level = levels[ i ];
	
	    			this.addLevel( level.object.clone(), level.distance );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	addLevel: function ( object, distance ) {
	
	    		if ( distance === undefined ) distance = 0;
	
	    		distance = Math.abs( distance );
	
	    		var levels = this.levels;
	
	    		for ( var l = 0; l < levels.length; l ++ ) {
	
	    			if ( distance < levels[ l ].distance ) {
	
	    				break;
	
	    			}
	
	    		}
	
	    		levels.splice( l, 0, { distance: distance, object: object } );
	
	    		this.add( object );
	
	    	},
	
	    	getObjectForDistance: function ( distance ) {
	
	    		var levels = this.levels;
	
	    		for ( var i = 1, l = levels.length; i < l; i ++ ) {
	
	    			if ( distance < levels[ i ].distance ) {
	
	    				break;
	
	    			}
	
	    		}
	
	    		return levels[ i - 1 ].object;
	
	    	},
	
	    	raycast: ( function () {
	
	    		var matrixPosition = new Vector3();
	
	    		return function raycast( raycaster, intersects ) {
	
	    			matrixPosition.setFromMatrixPosition( this.matrixWorld );
	
	    			var distance = raycaster.ray.origin.distanceTo( matrixPosition );
	
	    			this.getObjectForDistance( distance ).raycast( raycaster, intersects );
	
	    		};
	
	    	}() ),
	
	    	update: function () {
	
	    		var v1 = new Vector3();
	    		var v2 = new Vector3();
	
	    		return function update( camera ) {
	
	    			var levels = this.levels;
	
	    			if ( levels.length > 1 ) {
	
	    				v1.setFromMatrixPosition( camera.matrixWorld );
	    				v2.setFromMatrixPosition( this.matrixWorld );
	
	    				var distance = v1.distanceTo( v2 );
	
	    				levels[ 0 ].object.visible = true;
	
	    				for ( var i = 1, l = levels.length; i < l; i ++ ) {
	
	    					if ( distance >= levels[ i ].distance ) {
	
	    						levels[ i - 1 ].object.visible = false;
	    						levels[ i ].object.visible = true;
	
	    					} else {
	
	    						break;
	
	    					}
	
	    				}
	
	    				for ( ; i < l; i ++ ) {
	
	    					levels[ i ].object.visible = false;
	
	    				}
	
	    			}
	
	    		};
	
	    	}(),
	
	    	toJSON: function ( meta ) {
	
	    		var data = Object3D.prototype.toJSON.call( this, meta );
	
	    		data.object.levels = [];
	
	    		var levels = this.levels;
	
	    		for ( var i = 0, l = levels.length; i < l; i ++ ) {
	
	    			var level = levels[ i ];
	
	    			data.object.levels.push( {
	    				object: level.object.uuid,
	    				distance: level.distance
	    			} );
	
	    		}
	
	    		return data;
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {
	
	    	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );
	
	    	this.image = { data: data, width: width, height: height };
	
	    	this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
	    	this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;
	
	    	this.flipY = false;
	    	this.generateMipmaps  = false;
	
	    }
	
	    DataTexture.prototype = Object.create( Texture.prototype );
	    DataTexture.prototype.constructor = DataTexture;
	
	    DataTexture.prototype.isDataTexture = true;
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author michael guerrero / http://realitymeltdown.com
	     * @author ikerr / http://verold.com
	     */
	
	    function Skeleton( bones, boneInverses, useVertexTexture ) {
	
	    	this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;
	
	    	this.identityMatrix = new Matrix4();
	
	    	// copy the bone array
	
	    	bones = bones || [];
	
	    	this.bones = bones.slice( 0 );
	
	    	// create a bone texture or an array of floats
	
	    	if ( this.useVertexTexture ) {
	
	    		// layout (1 matrix = 4 pixels)
	    		//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
	    		//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
	    		//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
	    		//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
	    		//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
	
	
	    		var size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix
	    		size = exports.Math.nextPowerOfTwo( Math.ceil( size ) );
	    		size = Math.max( size, 4 );
	
	    		this.boneTextureWidth = size;
	    		this.boneTextureHeight = size;
	
	    		this.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel
	    		this.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );
	
	    	} else {
	
	    		this.boneMatrices = new Float32Array( 16 * this.bones.length );
	
	    	}
	
	    	// use the supplied bone inverses or calculate the inverses
	
	    	if ( boneInverses === undefined ) {
	
	    		this.calculateInverses();
	
	    	} else {
	
	    		if ( this.bones.length === boneInverses.length ) {
	
	    			this.boneInverses = boneInverses.slice( 0 );
	
	    		} else {
	
	    			console.warn( 'THREE.Skeleton bonInverses is the wrong length.' );
	
	    			this.boneInverses = [];
	
	    			for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {
	
	    				this.boneInverses.push( new Matrix4() );
	
	    			}
	
	    		}
	
	    	}
	
	    }
	
	    Object.assign( Skeleton.prototype, {
	
	    	calculateInverses: function () {
	
	    		this.boneInverses = [];
	
	    		for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {
	
	    			var inverse = new Matrix4();
	
	    			if ( this.bones[ b ] ) {
	
	    				inverse.getInverse( this.bones[ b ].matrixWorld );
	
	    			}
	
	    			this.boneInverses.push( inverse );
	
	    		}
	
	    	},
	
	    	pose: function () {
	
	    		var bone;
	
	    		// recover the bind-time world matrices
	
	    		for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {
	
	    			bone = this.bones[ b ];
	
	    			if ( bone ) {
	
	    				bone.matrixWorld.getInverse( this.boneInverses[ b ] );
	
	    			}
	
	    		}
	
	    		// compute the local matrices, positions, rotations and scales
	
	    		for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {
	
	    			bone = this.bones[ b ];
	
	    			if ( bone ) {
	
	    				if ( (bone.parent && bone.parent.isBone) ) {
	
	    					bone.matrix.getInverse( bone.parent.matrixWorld );
	    					bone.matrix.multiply( bone.matrixWorld );
	
	    				} else {
	
	    					bone.matrix.copy( bone.matrixWorld );
	
	    				}
	
	    				bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );
	
	    			}
	
	    		}
	
	    	},
	
	    	update: ( function () {
	
	    		var offsetMatrix = new Matrix4();
	
	    		return function update() {
	
	    			// flatten bone matrices to array
	
	    			for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {
	
	    				// compute the offset between the current and the original transform
	
	    				var matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;
	
	    				offsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );
	    				offsetMatrix.toArray( this.boneMatrices, b * 16 );
	
	    			}
	
	    			if ( this.useVertexTexture ) {
	
	    				this.boneTexture.needsUpdate = true;
	
	    			}
	
	    		};
	
	    	} )(),
	
	    	clone: function () {
	
	    		return new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );
	
	    	}
	
	    } );
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author ikerr / http://verold.com
	     */
	
	    function Bone( skin ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Bone';
	
	    	this.skin = skin;
	
	    }
	
	    Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Bone,
	
	    	isBone: true,
	
	    	copy: function ( source ) {
	
	    		Object3D.prototype.copy.call( this, source );
	
	    		this.skin = source.skin;
	
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mikael emtinger / http://gomo.se/
	     * @author alteredq / http://alteredqualia.com/
	     * @author ikerr / http://verold.com
	     */
	
	    function SkinnedMesh( geometry, material, useVertexTexture ) {
	
	    	Mesh.call( this, geometry, material );
	
	    	this.type = 'SkinnedMesh';
	
	    	this.bindMode = "attached";
	    	this.bindMatrix = new Matrix4();
	    	this.bindMatrixInverse = new Matrix4();
	
	    	// init bones
	
	    	// TODO: remove bone creation as there is no reason (other than
	    	// convenience) for THREE.SkinnedMesh to do this.
	
	    	var bones = [];
	
	    	if ( this.geometry && this.geometry.bones !== undefined ) {
	
	    		var bone, gbone;
	
	    		for ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {
	
	    			gbone = this.geometry.bones[ b ];
	
	    			bone = new Bone( this );
	    			bones.push( bone );
	
	    			bone.name = gbone.name;
	    			bone.position.fromArray( gbone.pos );
	    			bone.quaternion.fromArray( gbone.rotq );
	    			if ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );
	
	    		}
	
	    		for ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {
	
	    			gbone = this.geometry.bones[ b ];
	
	    			if ( gbone.parent !== - 1 && gbone.parent !== null &&
	    					bones[ gbone.parent ] !== undefined ) {
	
	    				bones[ gbone.parent ].add( bones[ b ] );
	
	    			} else {
	
	    				this.add( bones[ b ] );
	
	    			}
	
	    		}
	
	    	}
	
	    	this.normalizeSkinWeights();
	
	    	this.updateMatrixWorld( true );
	    	this.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );
	
	    }
	
	
	    SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {
	
	    	constructor: SkinnedMesh,
	
	    	isSkinnedMesh: true,
	
	    	bind: function( skeleton, bindMatrix ) {
	
	    		this.skeleton = skeleton;
	
	    		if ( bindMatrix === undefined ) {
	
	    			this.updateMatrixWorld( true );
	
	    			this.skeleton.calculateInverses();
	
	    			bindMatrix = this.matrixWorld;
	
	    		}
	
	    		this.bindMatrix.copy( bindMatrix );
	    		this.bindMatrixInverse.getInverse( bindMatrix );
	
	    	},
	
	    	pose: function () {
	
	    		this.skeleton.pose();
	
	    	},
	
	    	normalizeSkinWeights: function () {
	
	    		if ( (this.geometry && this.geometry.isGeometry) ) {
	
	    			for ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {
	
	    				var sw = this.geometry.skinWeights[ i ];
	
	    				var scale = 1.0 / sw.lengthManhattan();
	
	    				if ( scale !== Infinity ) {
	
	    					sw.multiplyScalar( scale );
	
	    				} else {
	
	    					sw.set( 1, 0, 0, 0 ); // do something reasonable
	
	    				}
	
	    			}
	
	    		} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {
	
	    			var vec = new Vector4();
	
	    			var skinWeight = this.geometry.attributes.skinWeight;
	
	    			for ( var i = 0; i < skinWeight.count; i ++ ) {
	
	    				vec.x = skinWeight.getX( i );
	    				vec.y = skinWeight.getY( i );
	    				vec.z = skinWeight.getZ( i );
	    				vec.w = skinWeight.getW( i );
	
	    				var scale = 1.0 / vec.lengthManhattan();
	
	    				if ( scale !== Infinity ) {
	
	    					vec.multiplyScalar( scale );
	
	    				} else {
	
	    					vec.set( 1, 0, 0, 0 ); // do something reasonable
	
	    				}
	
	    				skinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );
	
	    			}
	
	    		}
	
	    	},
	
	    	updateMatrixWorld: function( force ) {
	
	    		Mesh.prototype.updateMatrixWorld.call( this, true );
	
	    		if ( this.bindMode === "attached" ) {
	
	    			this.bindMatrixInverse.getInverse( this.matrixWorld );
	
	    		} else if ( this.bindMode === "detached" ) {
	
	    			this.bindMatrixInverse.getInverse( this.bindMatrix );
	
	    		} else {
	
	    			console.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );
	
	    		}
	
	    	},
	
	    	clone: function() {
	
	    		return new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *
	     *  linewidth: <float>,
	     *  linecap: "round",
	     *  linejoin: "round"
	     * }
	     */
	
	    function LineBasicMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'LineBasicMaterial';
	
	    	this.color = new Color( 0xffffff );
	
	    	this.linewidth = 1;
	    	this.linecap = 'round';
	    	this.linejoin = 'round';
	
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    LineBasicMaterial.prototype = Object.create( Material.prototype );
	    LineBasicMaterial.prototype.constructor = LineBasicMaterial;
	
	    LineBasicMaterial.prototype.isLineBasicMaterial = true;
	
	    LineBasicMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	
	    	this.linewidth = source.linewidth;
	    	this.linecap = source.linecap;
	    	this.linejoin = source.linejoin;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Line( geometry, material, mode ) {
	
	    	if ( mode === 1 ) {
	
	    		console.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );
	    		return new LineSegments( geometry, material );
	
	    	}
	
	    	Object3D.call( this );
	
	    	this.type = 'Line';
	
	    	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	    	this.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );
	
	    }
	
	    Line.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Line,
	
	    	isLine: true,
	
	    	raycast: ( function () {
	
	    		var inverseMatrix = new Matrix4();
	    		var ray = new Ray();
	    		var sphere = new Sphere();
	
	    		return function raycast( raycaster, intersects ) {
	
	    			var precision = raycaster.linePrecision;
	    			var precisionSq = precision * precision;
	
	    			var geometry = this.geometry;
	    			var matrixWorld = this.matrixWorld;
	
	    			// Checking boundingSphere distance to ray
	
	    			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();
	
	    			sphere.copy( geometry.boundingSphere );
	    			sphere.applyMatrix4( matrixWorld );
	
	    			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;
	
	    			//
	
	    			inverseMatrix.getInverse( matrixWorld );
	    			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );
	
	    			var vStart = new Vector3();
	    			var vEnd = new Vector3();
	    			var interSegment = new Vector3();
	    			var interRay = new Vector3();
	    			var step = (this && this.isLineSegments) ? 2 : 1;
	
	    			if ( (geometry && geometry.isBufferGeometry) ) {
	
	    				var index = geometry.index;
	    				var attributes = geometry.attributes;
	    				var positions = attributes.position.array;
	
	    				if ( index !== null ) {
	
	    					var indices = index.array;
	
	    					for ( var i = 0, l = indices.length - 1; i < l; i += step ) {
	
	    						var a = indices[ i ];
	    						var b = indices[ i + 1 ];
	
	    						vStart.fromArray( positions, a * 3 );
	    						vEnd.fromArray( positions, b * 3 );
	
	    						var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );
	
	    						if ( distSq > precisionSq ) continue;
	
	    						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation
	
	    						var distance = raycaster.ray.origin.distanceTo( interRay );
	
	    						if ( distance < raycaster.near || distance > raycaster.far ) continue;
	
	    						intersects.push( {
	
	    							distance: distance,
	    							// What do we want? intersection point on the ray or on the segment??
	    							// point: raycaster.ray.at( distance ),
	    							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
	    							index: i,
	    							face: null,
	    							faceIndex: null,
	    							object: this
	
	    						} );
	
	    					}
	
	    				} else {
	
	    					for ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {
	
	    						vStart.fromArray( positions, 3 * i );
	    						vEnd.fromArray( positions, 3 * i + 3 );
	
	    						var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );
	
	    						if ( distSq > precisionSq ) continue;
	
	    						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation
	
	    						var distance = raycaster.ray.origin.distanceTo( interRay );
	
	    						if ( distance < raycaster.near || distance > raycaster.far ) continue;
	
	    						intersects.push( {
	
	    							distance: distance,
	    							// What do we want? intersection point on the ray or on the segment??
	    							// point: raycaster.ray.at( distance ),
	    							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
	    							index: i,
	    							face: null,
	    							faceIndex: null,
	    							object: this
	
	    						} );
	
	    					}
	
	    				}
	
	    			} else if ( (geometry && geometry.isGeometry) ) {
	
	    				var vertices = geometry.vertices;
	    				var nbVertices = vertices.length;
	
	    				for ( var i = 0; i < nbVertices - 1; i += step ) {
	
	    					var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );
	
	    					if ( distSq > precisionSq ) continue;
	
	    					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation
	
	    					var distance = raycaster.ray.origin.distanceTo( interRay );
	
	    					if ( distance < raycaster.near || distance > raycaster.far ) continue;
	
	    					intersects.push( {
	
	    						distance: distance,
	    						// What do we want? intersection point on the ray or on the segment??
	    						// point: raycaster.ray.at( distance ),
	    						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
	    						index: i,
	    						face: null,
	    						faceIndex: null,
	    						object: this
	
	    					} );
	
	    				}
	
	    			}
	
	    		};
	
	    	}() ),
	
	    	clone: function () {
	
	    		return new this.constructor( this.geometry, this.material ).copy( this );
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function LineSegments( geometry, material ) {
	
	    	Line.call( this, geometry, material );
	
	    	this.type = 'LineSegments';
	
	    }
	
	    LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {
	
	    	constructor: LineSegments,
	
	    	isLineSegments: true
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  size: <float>,
	     *  sizeAttenuation: <bool>
	     * }
	     */
	
	    function PointsMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'PointsMaterial';
	
	    	this.color = new Color( 0xffffff );
	
	    	this.map = null;
	
	    	this.size = 1;
	    	this.sizeAttenuation = true;
	
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    PointsMaterial.prototype = Object.create( Material.prototype );
	    PointsMaterial.prototype.constructor = PointsMaterial;
	
	    PointsMaterial.prototype.isPointsMaterial = true;
	
	    PointsMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	
	    	this.map = source.map;
	
	    	this.size = source.size;
	    	this.sizeAttenuation = source.sizeAttenuation;
	
	    	return this;
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Points( geometry, material ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Points';
	
	    	this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
	    	this.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );
	
	    }
	
	    Points.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Points,
	
	    	isPoints: true,
	
	    	raycast: ( function () {
	
	    		var inverseMatrix = new Matrix4();
	    		var ray = new Ray();
	    		var sphere = new Sphere();
	
	    		return function raycast( raycaster, intersects ) {
	
	    			var object = this;
	    			var geometry = this.geometry;
	    			var matrixWorld = this.matrixWorld;
	    			var threshold = raycaster.params.Points.threshold;
	
	    			// Checking boundingSphere distance to ray
	
	    			if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();
	
	    			sphere.copy( geometry.boundingSphere );
	    			sphere.applyMatrix4( matrixWorld );
	
	    			if ( raycaster.ray.intersectsSphere( sphere ) === false ) return;
	
	    			//
	
	    			inverseMatrix.getInverse( matrixWorld );
	    			ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );
	
	    			var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
	    			var localThresholdSq = localThreshold * localThreshold;
	    			var position = new Vector3();
	
	    			function testPoint( point, index ) {
	
	    				var rayPointDistanceSq = ray.distanceSqToPoint( point );
	
	    				if ( rayPointDistanceSq < localThresholdSq ) {
	
	    					var intersectPoint = ray.closestPointToPoint( point );
	    					intersectPoint.applyMatrix4( matrixWorld );
	
	    					var distance = raycaster.ray.origin.distanceTo( intersectPoint );
	
	    					if ( distance < raycaster.near || distance > raycaster.far ) return;
	
	    					intersects.push( {
	
	    						distance: distance,
	    						distanceToRay: Math.sqrt( rayPointDistanceSq ),
	    						point: intersectPoint.clone(),
	    						index: index,
	    						face: null,
	    						object: object
	
	    					} );
	
	    				}
	
	    			}
	
	    			if ( (geometry && geometry.isBufferGeometry) ) {
	
	    				var index = geometry.index;
	    				var attributes = geometry.attributes;
	    				var positions = attributes.position.array;
	
	    				if ( index !== null ) {
	
	    					var indices = index.array;
	
	    					for ( var i = 0, il = indices.length; i < il; i ++ ) {
	
	    						var a = indices[ i ];
	
	    						position.fromArray( positions, a * 3 );
	
	    						testPoint( position, a );
	
	    					}
	
	    				} else {
	
	    					for ( var i = 0, l = positions.length / 3; i < l; i ++ ) {
	
	    						position.fromArray( positions, i * 3 );
	
	    						testPoint( position, i );
	
	    					}
	
	    				}
	
	    			} else {
	
	    				var vertices = geometry.vertices;
	
	    				for ( var i = 0, l = vertices.length; i < l; i ++ ) {
	
	    					testPoint( vertices[ i ], i );
	
	    				}
	
	    			}
	
	    		};
	
	    	}() ),
	
	    	clone: function () {
	
	    		return new this.constructor( this.geometry, this.material ).copy( this );
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Group() {
	
	    	Object3D.call( this );
	
	    	this.type = 'Group';
	
	    }
	
	    Group.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Group
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {
	
	    	Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );
	
	    	this.generateMipmaps = false;
	
	    	var scope = this;
	
	    	function update() {
	
	    		requestAnimationFrame( update );
	
	    		if ( video.readyState >= video.HAVE_CURRENT_DATA ) {
	
	    			scope.needsUpdate = true;
	
	    		}
	
	    	}
	
	    	update();
	
	    }
	
	    VideoTexture.prototype = Object.create( Texture.prototype );
	    VideoTexture.prototype.constructor = VideoTexture;
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {
	
	    	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );
	
	    	this.image = { width: width, height: height };
	    	this.mipmaps = mipmaps;
	
	    	// no flipping for cube textures
	    	// (also flipping doesn't work for compressed textures )
	
	    	this.flipY = false;
	
	    	// can't generate mipmaps for compressed textures
	    	// mips must be embedded in DDS files
	
	    	this.generateMipmaps = false;
	
	    }
	
	    CompressedTexture.prototype = Object.create( Texture.prototype );
	    CompressedTexture.prototype.constructor = CompressedTexture;
	
	    CompressedTexture.prototype.isCompressedTexture = true;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {
	
	    	Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );
	
	    	this.needsUpdate = true;
	
	    }
	
	    CanvasTexture.prototype = Object.create( Texture.prototype );
	    CanvasTexture.prototype.constructor = CanvasTexture;
	
	    /**
	     * @author Matt DesLauriers / @mattdesl
	     * @author atix / arthursilber.de
	     */
	
	    function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {
	
	    	format = format !== undefined ? format : DepthFormat;
	
	    	if ( format !== DepthFormat && format !== DepthStencilFormat ) {
	
	    		throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )
	
	    	}
	
	    	Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );
	
	    	this.image = { width: width, height: height };
	
	    	this.type = type !== undefined ? type : UnsignedShortType;
	
	    	this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
	    	this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;
	
	    	this.flipY = false;
	    	this.generateMipmaps	= false;
	
	    }
	
	    DepthTexture.prototype = Object.create( Texture.prototype );
	    DepthTexture.prototype.constructor = DepthTexture;
	    DepthTexture.prototype.isDepthTexture = true;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function WireframeGeometry( geometry ) {
	
	    	BufferGeometry.call( this );
	
	    	var edge = [ 0, 0 ], hash = {};
	
	    	function sortFunction( a, b ) {
	
	    		return a - b;
	
	    	}
	
	    	var keys = [ 'a', 'b', 'c' ];
	
	    	if ( (geometry && geometry.isGeometry) ) {
	
	    		var vertices = geometry.vertices;
	    		var faces = geometry.faces;
	    		var numEdges = 0;
	
	    		// allocate maximal size
	    		var edges = new Uint32Array( 6 * faces.length );
	
	    		for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    			var face = faces[ i ];
	
	    			for ( var j = 0; j < 3; j ++ ) {
	
	    				edge[ 0 ] = face[ keys[ j ] ];
	    				edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];
	    				edge.sort( sortFunction );
	
	    				var key = edge.toString();
	
	    				if ( hash[ key ] === undefined ) {
	
	    					edges[ 2 * numEdges ] = edge[ 0 ];
	    					edges[ 2 * numEdges + 1 ] = edge[ 1 ];
	    					hash[ key ] = true;
	    					numEdges ++;
	
	    				}
	
	    			}
	
	    		}
	
	    		var coords = new Float32Array( numEdges * 2 * 3 );
	
	    		for ( var i = 0, l = numEdges; i < l; i ++ ) {
	
	    			for ( var j = 0; j < 2; j ++ ) {
	
	    				var vertex = vertices[ edges [ 2 * i + j ] ];
	
	    				var index = 6 * i + 3 * j;
	    				coords[ index + 0 ] = vertex.x;
	    				coords[ index + 1 ] = vertex.y;
	    				coords[ index + 2 ] = vertex.z;
	
	    			}
	
	    		}
	
	    		this.addAttribute( 'position', new BufferAttribute( coords, 3 ) );
	
	    	} else if ( (geometry && geometry.isBufferGeometry) ) {
	
	    		if ( geometry.index !== null ) {
	
	    			// Indexed BufferGeometry
	
	    			var indices = geometry.index.array;
	    			var vertices = geometry.attributes.position;
	    			var groups = geometry.groups;
	    			var numEdges = 0;
	
	    			if ( groups.length === 0 ) {
	
	    				geometry.addGroup( 0, indices.length );
	
	    			}
	
	    			// allocate maximal size
	    			var edges = new Uint32Array( 2 * indices.length );
	
	    			for ( var o = 0, ol = groups.length; o < ol; ++ o ) {
	
	    				var group = groups[ o ];
	
	    				var start = group.start;
	    				var count = group.count;
	
	    				for ( var i = start, il = start + count; i < il; i += 3 ) {
	
	    					for ( var j = 0; j < 3; j ++ ) {
	
	    						edge[ 0 ] = indices[ i + j ];
	    						edge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];
	    						edge.sort( sortFunction );
	
	    						var key = edge.toString();
	
	    						if ( hash[ key ] === undefined ) {
	
	    							edges[ 2 * numEdges ] = edge[ 0 ];
	    							edges[ 2 * numEdges + 1 ] = edge[ 1 ];
	    							hash[ key ] = true;
	    							numEdges ++;
	
	    						}
	
	    					}
	
	    				}
	
	    			}
	
	    			var coords = new Float32Array( numEdges * 2 * 3 );
	
	    			for ( var i = 0, l = numEdges; i < l; i ++ ) {
	
	    				for ( var j = 0; j < 2; j ++ ) {
	
	    					var index = 6 * i + 3 * j;
	    					var index2 = edges[ 2 * i + j ];
	
	    					coords[ index + 0 ] = vertices.getX( index2 );
	    					coords[ index + 1 ] = vertices.getY( index2 );
	    					coords[ index + 2 ] = vertices.getZ( index2 );
	
	    				}
	
	    			}
	
	    			this.addAttribute( 'position', new BufferAttribute( coords, 3 ) );
	
	    		} else {
	
	    			// non-indexed BufferGeometry
	
	    			var vertices = geometry.attributes.position.array;
	    			var numEdges = vertices.length / 3;
	    			var numTris = numEdges / 3;
	
	    			var coords = new Float32Array( numEdges * 2 * 3 );
	
	    			for ( var i = 0, l = numTris; i < l; i ++ ) {
	
	    				for ( var j = 0; j < 3; j ++ ) {
	
	    					var index = 18 * i + 6 * j;
	
	    					var index1 = 9 * i + 3 * j;
	    					coords[ index + 0 ] = vertices[ index1 ];
	    					coords[ index + 1 ] = vertices[ index1 + 1 ];
	    					coords[ index + 2 ] = vertices[ index1 + 2 ];
	
	    					var index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );
	    					coords[ index + 3 ] = vertices[ index2 ];
	    					coords[ index + 4 ] = vertices[ index2 + 1 ];
	    					coords[ index + 5 ] = vertices[ index2 + 2 ];
	
	    				}
	
	    			}
	
	    			this.addAttribute( 'position', new BufferAttribute( coords, 3 ) );
	
	    		}
	
	    	}
	
	    }
	
	    WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );
	    WireframeGeometry.prototype.constructor = WireframeGeometry;
	
	    /**
	     * @author zz85 / https://github.com/zz85
	     * Parametric Surfaces Geometry
	     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
	     *
	     * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );
	     *
	     */
	
	    function ParametricGeometry( func, slices, stacks ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'ParametricGeometry';
	
	    	this.parameters = {
	    		func: func,
	    		slices: slices,
	    		stacks: stacks
	    	};
	
	    	var verts = this.vertices;
	    	var faces = this.faces;
	    	var uvs = this.faceVertexUvs[ 0 ];
	
	    	var i, j, p;
	    	var u, v;
	
	    	var sliceCount = slices + 1;
	
	    	for ( i = 0; i <= stacks; i ++ ) {
	
	    		v = i / stacks;
	
	    		for ( j = 0; j <= slices; j ++ ) {
	
	    			u = j / slices;
	
	    			p = func( u, v );
	    			verts.push( p );
	
	    		}
	
	    	}
	
	    	var a, b, c, d;
	    	var uva, uvb, uvc, uvd;
	
	    	for ( i = 0; i < stacks; i ++ ) {
	
	    		for ( j = 0; j < slices; j ++ ) {
	
	    			a = i * sliceCount + j;
	    			b = i * sliceCount + j + 1;
	    			c = ( i + 1 ) * sliceCount + j + 1;
	    			d = ( i + 1 ) * sliceCount + j;
	
	    			uva = new Vector2( j / slices, i / stacks );
	    			uvb = new Vector2( ( j + 1 ) / slices, i / stacks );
	    			uvc = new Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );
	    			uvd = new Vector2( j / slices, ( i + 1 ) / stacks );
	
	    			faces.push( new Face3( a, b, d ) );
	    			uvs.push( [ uva, uvb, uvd ] );
	
	    			faces.push( new Face3( b, c, d ) );
	    			uvs.push( [ uvb.clone(), uvc, uvd.clone() ] );
	
	    		}
	
	    	}
	
	    	// console.log(this);
	
	    	// magic bullet
	    	// var diff = this.mergeVertices();
	    	// console.log('removed ', diff, ' vertices by merging');
	
	    	this.computeFaceNormals();
	    	this.computeVertexNormals();
	
	    }
	
	    ParametricGeometry.prototype = Object.create( Geometry.prototype );
	    ParametricGeometry.prototype.constructor = ParametricGeometry;
	
	    /**
	     * @author clockworkgeek / https://github.com/clockworkgeek
	     * @author timothypratley / https://github.com/timothypratley
	     * @author WestLangley / http://github.com/WestLangley
	    */
	
	    function PolyhedronGeometry( vertices, indices, radius, detail ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'PolyhedronGeometry';
	
	    	this.parameters = {
	    		vertices: vertices,
	    		indices: indices,
	    		radius: radius,
	    		detail: detail
	    	};
	
	    	radius = radius || 1;
	    	detail = detail || 0;
	
	    	var that = this;
	
	    	for ( var i = 0, l = vertices.length; i < l; i += 3 ) {
	
	    		prepare( new Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );
	
	    	}
	
	    	var p = this.vertices;
	
	    	var faces = [];
	
	    	for ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {
	
	    		var v1 = p[ indices[ i ] ];
	    		var v2 = p[ indices[ i + 1 ] ];
	    		var v3 = p[ indices[ i + 2 ] ];
	
	    		faces[ j ] = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );
	
	    	}
	
	    	var centroid = new Vector3();
	
	    	for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    		subdivide( faces[ i ], detail );
	
	    	}
	
	
	    	// Handle case when face straddles the seam
	
	    	for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {
	
	    		var uvs = this.faceVertexUvs[ 0 ][ i ];
	
	    		var x0 = uvs[ 0 ].x;
	    		var x1 = uvs[ 1 ].x;
	    		var x2 = uvs[ 2 ].x;
	
	    		var max = Math.max( x0, x1, x2 );
	    		var min = Math.min( x0, x1, x2 );
	
	    		if ( max > 0.9 && min < 0.1 ) {
	
	    			// 0.9 is somewhat arbitrary
	
	    			if ( x0 < 0.2 ) uvs[ 0 ].x += 1;
	    			if ( x1 < 0.2 ) uvs[ 1 ].x += 1;
	    			if ( x2 < 0.2 ) uvs[ 2 ].x += 1;
	
	    		}
	
	    	}
	
	
	    	// Apply radius
	
	    	for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {
	
	    		this.vertices[ i ].multiplyScalar( radius );
	
	    	}
	
	
	    	// Merge vertices
	
	    	this.mergeVertices();
	
	    	this.computeFaceNormals();
	
	    	this.boundingSphere = new Sphere( new Vector3(), radius );
	
	
	    	// Project vector onto sphere's surface
	
	    	function prepare( vector ) {
	
	    		var vertex = vector.normalize().clone();
	    		vertex.index = that.vertices.push( vertex ) - 1;
	
	    		// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.
	
	    		var u = azimuth( vector ) / 2 / Math.PI + 0.5;
	    		var v = inclination( vector ) / Math.PI + 0.5;
	    		vertex.uv = new Vector2( u, 1 - v );
	
	    		return vertex;
	
	    	}
	
	
	    	// Approximate a curved face with recursively sub-divided triangles.
	
	    	function make( v1, v2, v3 ) {
	
	    		var face = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );
	    		that.faces.push( face );
	
	    		centroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );
	
	    		var azi = azimuth( centroid );
	
	    		that.faceVertexUvs[ 0 ].push( [
	    			correctUV( v1.uv, v1, azi ),
	    			correctUV( v2.uv, v2, azi ),
	    			correctUV( v3.uv, v3, azi )
	    		] );
	
	    	}
	
	
	    	// Analytically subdivide a face to the required detail level.
	
	    	function subdivide( face, detail ) {
	
	    		var cols = Math.pow( 2, detail );
	    		var a = prepare( that.vertices[ face.a ] );
	    		var b = prepare( that.vertices[ face.b ] );
	    		var c = prepare( that.vertices[ face.c ] );
	    		var v = [];
	
	    		// Construct all of the vertices for this subdivision.
	
	    		for ( var i = 0 ; i <= cols; i ++ ) {
	
	    			v[ i ] = [];
	
	    			var aj = prepare( a.clone().lerp( c, i / cols ) );
	    			var bj = prepare( b.clone().lerp( c, i / cols ) );
	    			var rows = cols - i;
	
	    			for ( var j = 0; j <= rows; j ++ ) {
	
	    				if ( j === 0 && i === cols ) {
	
	    					v[ i ][ j ] = aj;
	
	    				} else {
	
	    					v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );
	
	    				}
	
	    			}
	
	    		}
	
	    		// Construct all of the faces.
	
	    		for ( var i = 0; i < cols ; i ++ ) {
	
	    			for ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {
	
	    				var k = Math.floor( j / 2 );
	
	    				if ( j % 2 === 0 ) {
	
	    					make(
	    						v[ i ][ k + 1 ],
	    						v[ i + 1 ][ k ],
	    						v[ i ][ k ]
	    					);
	
	    				} else {
	
	    					make(
	    						v[ i ][ k + 1 ],
	    						v[ i + 1 ][ k + 1 ],
	    						v[ i + 1 ][ k ]
	    					);
	
	    				}
	
	    			}
	
	    		}
	
	    	}
	
	
	    	// Angle around the Y axis, counter-clockwise when looking from above.
	
	    	function azimuth( vector ) {
	
	    		return Math.atan2( vector.z, - vector.x );
	
	    	}
	
	
	    	// Angle above the XZ plane.
	
	    	function inclination( vector ) {
	
	    		return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );
	
	    	}
	
	
	    	// Texture fixing helper. Spheres have some odd behaviours.
	
	    	function correctUV( uv, vector, azimuth ) {
	
	    		if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new Vector2( uv.x - 1, uv.y );
	    		if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );
	    		return uv.clone();
	
	    	}
	
	    }
	
	    PolyhedronGeometry.prototype = Object.create( Geometry.prototype );
	    PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;
	
	    /**
	     * @author timothypratley / https://github.com/timothypratley
	     */
	
	    function TetrahedronGeometry( radius, detail ) {
	
	    	var vertices = [
	    		 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1
	    	];
	
	    	var indices = [
	    		 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1
	    	];
	
	    	PolyhedronGeometry.call( this, vertices, indices, radius, detail );
	
	    	this.type = 'TetrahedronGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		detail: detail
	    	};
	
	    }
	
	    TetrahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );
	    TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;
	
	    /**
	     * @author timothypratley / https://github.com/timothypratley
	     */
	
	    function OctahedronGeometry( radius, detail ) {
	
	    	var vertices = [
	    		1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1
	    	];
	
	    	var indices = [
	    		0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2
	    	];
	
	    	PolyhedronGeometry.call( this, vertices, indices, radius, detail );
	
	    	this.type = 'OctahedronGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		detail: detail
	    	};
	
	    }
	
	    OctahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );
	    OctahedronGeometry.prototype.constructor = OctahedronGeometry;
	
	    /**
	     * @author timothypratley / https://github.com/timothypratley
	     */
	
	    function IcosahedronGeometry( radius, detail ) {
	
	    	var t = ( 1 + Math.sqrt( 5 ) ) / 2;
	
	    	var vertices = [
	    		- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,
	    		 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,
	    		 t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1
	    	];
	
	    	var indices = [
	    		 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,
	    		 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,
	    		 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,
	    		 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1
	    	];
	
	    	PolyhedronGeometry.call( this, vertices, indices, radius, detail );
	
	    	this.type = 'IcosahedronGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		detail: detail
	    	};
	
	    }
	
	    IcosahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );
	    IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;
	
	    /**
	     * @author Abe Pazos / https://hamoid.com
	     */
	
	    function DodecahedronGeometry( radius, detail ) {
	
	    	var t = ( 1 + Math.sqrt( 5 ) ) / 2;
	    	var r = 1 / t;
	
	    	var vertices = [
	
	    		// (±1, ±1, ±1)
	    		- 1, - 1, - 1,    - 1, - 1,  1,
	    		- 1,  1, - 1,    - 1,  1,  1,
	    		 1, - 1, - 1,     1, - 1,  1,
	    		 1,  1, - 1,     1,  1,  1,
	
	    		// (0, ±1/φ, ±φ)
	    		 0, - r, - t,     0, - r,  t,
	    		 0,  r, - t,     0,  r,  t,
	
	    		// (±1/φ, ±φ, 0)
	    		- r, - t,  0,    - r,  t,  0,
	    		 r, - t,  0,     r,  t,  0,
	
	    		// (±φ, 0, ±1/φ)
	    		- t,  0, - r,     t,  0, - r,
	    		- t,  0,  r,     t,  0,  r
	    	];
	
	    	var indices = [
	    		 3, 11,  7,      3,  7, 15,      3, 15, 13,
	    		 7, 19, 17,      7, 17,  6,      7,  6, 15,
	    		17,  4,  8,     17,  8, 10,     17, 10,  6,
	    		 8,  0, 16,      8, 16,  2,      8,  2, 10,
	    		 0, 12,  1,      0,  1, 18,      0, 18, 16,
	    		 6, 10,  2,      6,  2, 13,      6, 13, 15,
	    		 2, 16, 18,      2, 18,  3,      2,  3, 13,
	    		18,  1,  9,     18,  9, 11,     18, 11,  3,
	    		 4, 14, 12,      4, 12,  0,      4,  0,  8,
	    		11,  9,  5,     11,  5, 19,     11, 19,  7,
	    		19,  5, 14,     19, 14,  4,     19,  4, 17,
	    		 1, 12, 14,      1, 14,  5,      1,  5,  9
	    	];
	
	    	PolyhedronGeometry.call( this, vertices, indices, radius, detail );
	
	    	this.type = 'DodecahedronGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		detail: detail
	    	};
	
	    }
	
	    DodecahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );
	    DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;
	
	    /**
	     * @author WestLangley / https://github.com/WestLangley
	     * @author zz85 / https://github.com/zz85
	     * @author miningold / https://github.com/miningold
	     * @author jonobr1 / https://github.com/jonobr1
	     *
	     * Modified from the TorusKnotGeometry by @oosmoxiecode
	     *
	     * Creates a tube which extrudes along a 3d spline
	     *
	     * Uses parallel transport frames as described in
	     * http://www.cs.indiana.edu/pub/techreports/TR425.pdf
	     */
	
	    function TubeGeometry( path, segments, radius, radialSegments, closed, taper ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'TubeGeometry';
	
	    	this.parameters = {
	    		path: path,
	    		segments: segments,
	    		radius: radius,
	    		radialSegments: radialSegments,
	    		closed: closed,
	    		taper: taper
	    	};
	
	    	segments = segments || 64;
	    	radius = radius || 1;
	    	radialSegments = radialSegments || 8;
	    	closed = closed || false;
	    	taper = taper || TubeGeometry.NoTaper;
	
	    	var grid = [];
	
	    	var scope = this,
	
	    		tangent,
	    		normal,
	    		binormal,
	
	    		numpoints = segments + 1,
	
	    		u, v, r,
	
	    		cx, cy,
	    		pos, pos2 = new Vector3(),
	    		i, j,
	    		ip, jp,
	    		a, b, c, d,
	    		uva, uvb, uvc, uvd;
	
	    	var frames = new TubeGeometry.FrenetFrames( path, segments, closed ),
	    		tangents = frames.tangents,
	    		normals = frames.normals,
	    		binormals = frames.binormals;
	
	    	// proxy internals
	    	this.tangents = tangents;
	    	this.normals = normals;
	    	this.binormals = binormals;
	
	    	function vert( x, y, z ) {
	
	    		return scope.vertices.push( new Vector3( x, y, z ) ) - 1;
	
	    	}
	
	    	// construct the grid
	
	    	for ( i = 0; i < numpoints; i ++ ) {
	
	    		grid[ i ] = [];
	
	    		u = i / ( numpoints - 1 );
	
	    		pos = path.getPointAt( u );
	
	    		tangent = tangents[ i ];
	    		normal = normals[ i ];
	    		binormal = binormals[ i ];
	
	    		r = radius * taper( u );
	
	    		for ( j = 0; j < radialSegments; j ++ ) {
	
	    			v = j / radialSegments * 2 * Math.PI;
	
	    			cx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.
	    			cy = r * Math.sin( v );
	
	    			pos2.copy( pos );
	    			pos2.x += cx * normal.x + cy * binormal.x;
	    			pos2.y += cx * normal.y + cy * binormal.y;
	    			pos2.z += cx * normal.z + cy * binormal.z;
	
	    			grid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );
	
	    		}
	
	    	}
	
	
	    	// construct the mesh
	
	    	for ( i = 0; i < segments; i ++ ) {
	
	    		for ( j = 0; j < radialSegments; j ++ ) {
	
	    			ip = ( closed ) ? ( i + 1 ) % segments : i + 1;
	    			jp = ( j + 1 ) % radialSegments;
	
	    			a = grid[ i ][ j ];		// *** NOT NECESSARILY PLANAR ! ***
	    			b = grid[ ip ][ j ];
	    			c = grid[ ip ][ jp ];
	    			d = grid[ i ][ jp ];
	
	    			uva = new Vector2( i / segments, j / radialSegments );
	    			uvb = new Vector2( ( i + 1 ) / segments, j / radialSegments );
	    			uvc = new Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );
	    			uvd = new Vector2( i / segments, ( j + 1 ) / radialSegments );
	
	    			this.faces.push( new Face3( a, b, d ) );
	    			this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );
	
	    			this.faces.push( new Face3( b, c, d ) );
	    			this.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );
	
	    		}
	
	    	}
	
	    	this.computeFaceNormals();
	    	this.computeVertexNormals();
	
	    }
	
	    TubeGeometry.prototype = Object.create( Geometry.prototype );
	    TubeGeometry.prototype.constructor = TubeGeometry;
	
	    TubeGeometry.NoTaper = function ( u ) {
	
	    	return 1;
	
	    };
	
	    TubeGeometry.SinusoidalTaper = function ( u ) {
	
	    	return Math.sin( Math.PI * u );
	
	    };
	
	    // For computing of Frenet frames, exposing the tangents, normals and binormals the spline
	    TubeGeometry.FrenetFrames = function ( path, segments, closed ) {
	
	    	var	normal = new Vector3(),
	
	    		tangents = [],
	    		normals = [],
	    		binormals = [],
	
	    		vec = new Vector3(),
	    		mat = new Matrix4(),
	
	    		numpoints = segments + 1,
	    		theta,
	    		smallest,
	
	    		tx, ty, tz,
	    		i, u;
	
	
	    	// expose internals
	    	this.tangents = tangents;
	    	this.normals = normals;
	    	this.binormals = binormals;
	
	    	// compute the tangent vectors for each segment on the path
	
	    	for ( i = 0; i < numpoints; i ++ ) {
	
	    		u = i / ( numpoints - 1 );
	
	    		tangents[ i ] = path.getTangentAt( u );
	    		tangents[ i ].normalize();
	
	    	}
	
	    	initialNormal3();
	
	    	/*
	    	function initialNormal1(lastBinormal) {
	    		// fixed start binormal. Has dangers of 0 vectors
	    		normals[ 0 ] = new THREE.Vector3();
	    		binormals[ 0 ] = new THREE.Vector3();
	    		if (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );
	    		normals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();
	    		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();
	    	}
	
	    	function initialNormal2() {
	
	    		// This uses the Frenet-Serret formula for deriving binormal
	    		var t2 = path.getTangentAt( epsilon );
	
	    		normals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();
	    		binormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );
	
	    		normals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent
	    		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();
	
	    	}
	    	*/
	
	    	function initialNormal3() {
	
	    		// select an initial normal vector perpendicular to the first tangent vector,
	    		// and in the direction of the smallest tangent xyz component
	
	    		normals[ 0 ] = new Vector3();
	    		binormals[ 0 ] = new Vector3();
	    		smallest = Number.MAX_VALUE;
	    		tx = Math.abs( tangents[ 0 ].x );
	    		ty = Math.abs( tangents[ 0 ].y );
	    		tz = Math.abs( tangents[ 0 ].z );
	
	    		if ( tx <= smallest ) {
	
	    			smallest = tx;
	    			normal.set( 1, 0, 0 );
	
	    		}
	
	    		if ( ty <= smallest ) {
	
	    			smallest = ty;
	    			normal.set( 0, 1, 0 );
	
	    		}
	
	    		if ( tz <= smallest ) {
	
	    			normal.set( 0, 0, 1 );
	
	    		}
	
	    		vec.crossVectors( tangents[ 0 ], normal ).normalize();
	
	    		normals[ 0 ].crossVectors( tangents[ 0 ], vec );
	    		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );
	
	    	}
	
	
	    	// compute the slowly-varying normal and binormal vectors for each segment on the path
	
	    	for ( i = 1; i < numpoints; i ++ ) {
	
	    		normals[ i ] = normals[ i - 1 ].clone();
	
	    		binormals[ i ] = binormals[ i - 1 ].clone();
	
	    		vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );
	
	    		if ( vec.length() > Number.EPSILON ) {
	
	    			vec.normalize();
	
	    			theta = Math.acos( exports.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors
	
	    			normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );
	
	    		}
	
	    		binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );
	
	    	}
	
	
	    	// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
	
	    	if ( closed ) {
	
	    		theta = Math.acos( exports.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );
	    		theta /= ( numpoints - 1 );
	
	    		if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {
	
	    			theta = - theta;
	
	    		}
	
	    		for ( i = 1; i < numpoints; i ++ ) {
	
	    			// twist a little...
	    			normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
	    			binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );
	
	    		}
	
	    	}
	
	    };
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     *
	     * see: http://www.blackpawn.com/texts/pqtorus/
	     */
	    function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'TorusKnotBufferGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		tube: tube,
	    		tubularSegments: tubularSegments,
	    		radialSegments: radialSegments,
	    		p: p,
	    		q: q
	    	};
	
	    	radius = radius || 100;
	    	tube = tube || 40;
	    	tubularSegments = Math.floor( tubularSegments ) || 64;
	    	radialSegments = Math.floor( radialSegments ) || 8;
	    	p = p || 2;
	    	q = q || 3;
	
	    	// used to calculate buffer length
	    	var vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );
	    	var indexCount = radialSegments * tubularSegments * 2 * 3;
	
	    	// buffers
	    	var indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );
	    	var vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );
	
	    	// helper variables
	    	var i, j, index = 0, indexOffset = 0;
	
	    	var vertex = new Vector3();
	    	var normal = new Vector3();
	    	var uv = new Vector2();
	
	    	var P1 = new Vector3();
	    	var P2 = new Vector3();
	
	    	var B = new Vector3();
	    	var T = new Vector3();
	    	var N = new Vector3();
	
	    	// generate vertices, normals and uvs
	
	    	for ( i = 0; i <= tubularSegments; ++ i ) {
	
	    		// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
	
	    		var u = i / tubularSegments * p * Math.PI * 2;
	
	    		// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
	    		// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
	
	    		calculatePositionOnCurve( u, p, q, radius, P1 );
	    		calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );
	
	    		// calculate orthonormal basis
	
	    		T.subVectors( P2, P1 );
	    		N.addVectors( P2, P1 );
	    		B.crossVectors( T, N );
	    		N.crossVectors( B, T );
	
	    		// normalize B, N. T can be ignored, we don't use it
	
	    		B.normalize();
	    		N.normalize();
	
	    		for ( j = 0; j <= radialSegments; ++ j ) {
	
	    			// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
	    			// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
	
	    			var v = j / radialSegments * Math.PI * 2;
	    			var cx = - tube * Math.cos( v );
	    			var cy = tube * Math.sin( v );
	
	    			// now calculate the final vertex position.
	    			// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
	
	    			vertex.x = P1.x + ( cx * N.x + cy * B.x );
	    			vertex.y = P1.y + ( cx * N.y + cy * B.y );
	    			vertex.z = P1.z + ( cx * N.z + cy * B.z );
	
	    			// vertex
	    			vertices.setXYZ( index, vertex.x, vertex.y, vertex.z );
	
	    			// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
	    			normal.subVectors( vertex, P1 ).normalize();
	    			normals.setXYZ( index, normal.x, normal.y, normal.z );
	
	    			// uv
	    			uv.x = i / tubularSegments;
	    			uv.y = j / radialSegments;
	    			uvs.setXY( index, uv.x, uv.y );
	
	    			// increase index
	    			index ++;
	
	    		}
	
	    	}
	
	    	// generate indices
	
	    	for ( j = 1; j <= tubularSegments; j ++ ) {
	
	    		for ( i = 1; i <= radialSegments; i ++ ) {
	
	    			// indices
	    			var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
	    			var b = ( radialSegments + 1 ) * j + ( i - 1 );
	    			var c = ( radialSegments + 1 ) * j + i;
	    			var d = ( radialSegments + 1 ) * ( j - 1 ) + i;
	
	    			// face one
	    			indices.setX( indexOffset, a ); indexOffset++;
	    			indices.setX( indexOffset, b ); indexOffset++;
	    			indices.setX( indexOffset, d ); indexOffset++;
	
	    			// face two
	    			indices.setX( indexOffset, b ); indexOffset++;
	    			indices.setX( indexOffset, c ); indexOffset++;
	    			indices.setX( indexOffset, d ); indexOffset++;
	
	    		}
	
	    	}
	
	    	// build geometry
	
	    	this.setIndex( indices );
	    	this.addAttribute( 'position', vertices );
	    	this.addAttribute( 'normal', normals );
	    	this.addAttribute( 'uv', uvs );
	
	    	// this function calculates the current position on the torus curve
	
	    	function calculatePositionOnCurve( u, p, q, radius, position ) {
	
	    		var cu = Math.cos( u );
	    		var su = Math.sin( u );
	    		var quOverP = q / p * u;
	    		var cs = Math.cos( quOverP );
	
	    		position.x = radius * ( 2 + cs ) * 0.5 * cu;
	    		position.y = radius * ( 2 + cs ) * su * 0.5;
	    		position.z = radius * Math.sin( quOverP ) * 0.5;
	
	    	}
	
	    }
	
	    TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;
	
	    /**
	     * @author oosmoxiecode
	     */
	
	    function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'TorusKnotGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		tube: tube,
	    		tubularSegments: tubularSegments,
	    		radialSegments: radialSegments,
	    		p: p,
	    		q: q
	    	};
	
	    	if( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );
	
	    	this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );
	    	this.mergeVertices();
	
	    }
	
	    TorusKnotGeometry.prototype = Object.create( Geometry.prototype );
	    TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     */
	
	    function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'TorusBufferGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		tube: tube,
	    		radialSegments: radialSegments,
	    		tubularSegments: tubularSegments,
	    		arc: arc
	    	};
	
	    	radius = radius || 100;
	    	tube = tube || 40;
	    	radialSegments = Math.floor( radialSegments ) || 8;
	    	tubularSegments = Math.floor( tubularSegments ) || 6;
	    	arc = arc || Math.PI * 2;
	
	    	// used to calculate buffer length
	    	var vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );
	    	var indexCount = radialSegments * tubularSegments * 2 * 3;
	
	    	// buffers
	    	var indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );
	    	var vertices = new Float32Array( vertexCount * 3 );
	    	var normals = new Float32Array( vertexCount * 3 );
	    	var uvs = new Float32Array( vertexCount * 2 );
	
	    	// offset variables
	    	var vertexBufferOffset = 0;
	    	var uvBufferOffset = 0;
	    	var indexBufferOffset = 0;
	
	    	// helper variables
	    	var center = new Vector3();
	    	var vertex = new Vector3();
	    	var normal = new Vector3();
	
	    	var j, i;
	
	    	// generate vertices, normals and uvs
	
	    	for ( j = 0; j <= radialSegments; j ++ ) {
	
	    		for ( i = 0; i <= tubularSegments; i ++ ) {
	
	    			var u = i / tubularSegments * arc;
	    			var v = j / radialSegments * Math.PI * 2;
	
	    			// vertex
	    			vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );
	    			vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );
	    			vertex.z = tube * Math.sin( v );
	
	    			vertices[ vertexBufferOffset ] = vertex.x;
	    			vertices[ vertexBufferOffset + 1 ] = vertex.y;
	    			vertices[ vertexBufferOffset + 2 ] = vertex.z;
	
	    			// this vector is used to calculate the normal
	    			center.x = radius * Math.cos( u );
	    			center.y = radius * Math.sin( u );
	
	    			// normal
	    			normal.subVectors( vertex, center ).normalize();
	
	    			normals[ vertexBufferOffset ] = normal.x;
	    			normals[ vertexBufferOffset + 1 ] = normal.y;
	    			normals[ vertexBufferOffset + 2 ] = normal.z;
	
	    			// uv
	    			uvs[ uvBufferOffset ] = i / tubularSegments;
	    			uvs[ uvBufferOffset + 1 ] = j / radialSegments;
	
	    			// update offsets
	    			vertexBufferOffset += 3;
	    			uvBufferOffset += 2;
	
	    		}
	
	    	}
	
	    	// generate indices
	
	    	for ( j = 1; j <= radialSegments; j ++ ) {
	
	    		for ( i = 1; i <= tubularSegments; i ++ ) {
	
	    			// indices
	    			var a = ( tubularSegments + 1 ) * j + i - 1;
	    			var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;
	    			var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;
	    			var d = ( tubularSegments + 1 ) * j + i;
	
	    			// face one
	    			indices[ indexBufferOffset ] = a;
	    			indices[ indexBufferOffset + 1 ] = b;
	    			indices[ indexBufferOffset + 2 ] = d;
	
	    			// face two
	    			indices[ indexBufferOffset + 3 ] = b;
	    			indices[ indexBufferOffset + 4 ] = c;
	    			indices[ indexBufferOffset + 5 ] = d;
	
	    			// update offset
	    			indexBufferOffset += 6;
	
	    		}
	
	    	}
	
	    	// build geometry
	    	this.setIndex( new BufferAttribute( indices, 1 ) );
	    	this.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );
	    	this.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );
	    	this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );
	
	    }
	
	    TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;
	
	    /**
	     * @author oosmoxiecode
	     * @author mrdoob / http://mrdoob.com/
	     * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888
	     */
	
	    function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'TorusGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		tube: tube,
	    		radialSegments: radialSegments,
	    		tubularSegments: tubularSegments,
	    		arc: arc
	    	};
	
	    	this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );
	
	    }
	
	    TorusGeometry.prototype = Object.create( Geometry.prototype );
	    TorusGeometry.prototype.constructor = TorusGeometry;
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     */
	
	    exports.ShapeUtils = {
	
	    	// calculate area of the contour polygon
	
	    	area: function ( contour ) {
	
	    		var n = contour.length;
	    		var a = 0.0;
	
	    		for ( var p = n - 1, q = 0; q < n; p = q ++ ) {
	
	    			a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;
	
	    		}
	
	    		return a * 0.5;
	
	    	},
	
	    	triangulate: ( function () {
	
	    		/**
	    		 * This code is a quick port of code written in C++ which was submitted to
	    		 * flipcode.com by John W. Ratcliff  // July 22, 2000
	    		 * See original code and more information here:
	    		 * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
	    		 *
	    		 * ported to actionscript by Zevan Rosser
	    		 * www.actionsnippet.com
	    		 *
	    		 * ported to javascript by Joshua Koo
	    		 * http://www.lab4games.net/zz85/blog
	    		 *
	    		 */
	
	    		function snip( contour, u, v, w, n, verts ) {
	
	    			var p;
	    			var ax, ay, bx, by;
	    			var cx, cy, px, py;
	
	    			ax = contour[ verts[ u ] ].x;
	    			ay = contour[ verts[ u ] ].y;
	
	    			bx = contour[ verts[ v ] ].x;
	    			by = contour[ verts[ v ] ].y;
	
	    			cx = contour[ verts[ w ] ].x;
	    			cy = contour[ verts[ w ] ].y;
	
	    			if ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;
	
	    			var aX, aY, bX, bY, cX, cY;
	    			var apx, apy, bpx, bpy, cpx, cpy;
	    			var cCROSSap, bCROSScp, aCROSSbp;
	
	    			aX = cx - bx;  aY = cy - by;
	    			bX = ax - cx;  bY = ay - cy;
	    			cX = bx - ax;  cY = by - ay;
	
	    			for ( p = 0; p < n; p ++ ) {
	
	    				px = contour[ verts[ p ] ].x;
	    				py = contour[ verts[ p ] ].y;
	
	    				if ( ( ( px === ax ) && ( py === ay ) ) ||
	    					 ( ( px === bx ) && ( py === by ) ) ||
	    					 ( ( px === cx ) && ( py === cy ) ) )	continue;
	
	    				apx = px - ax;  apy = py - ay;
	    				bpx = px - bx;  bpy = py - by;
	    				cpx = px - cx;  cpy = py - cy;
	
	    				// see if p is inside triangle abc
	
	    				aCROSSbp = aX * bpy - aY * bpx;
	    				cCROSSap = cX * apy - cY * apx;
	    				bCROSScp = bX * cpy - bY * cpx;
	
	    				if ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;
	
	    			}
	
	    			return true;
	
	    		}
	
	    		// takes in an contour array and returns
	
	    		return function triangulate( contour, indices ) {
	
	    			var n = contour.length;
	
	    			if ( n < 3 ) return null;
	
	    			var result = [],
	    				verts = [],
	    				vertIndices = [];
	
	    			/* we want a counter-clockwise polygon in verts */
	
	    			var u, v, w;
	
	    			if ( exports.ShapeUtils.area( contour ) > 0.0 ) {
	
	    				for ( v = 0; v < n; v ++ ) verts[ v ] = v;
	
	    			} else {
	
	    				for ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;
	
	    			}
	
	    			var nv = n;
	
	    			/*  remove nv - 2 vertices, creating 1 triangle every time */
	
	    			var count = 2 * nv;   /* error detection */
	
	    			for ( v = nv - 1; nv > 2; ) {
	
	    				/* if we loop, it is probably a non-simple polygon */
	
	    				if ( ( count -- ) <= 0 ) {
	
	    					//** Triangulate: ERROR - probable bad polygon!
	
	    					//throw ( "Warning, unable to triangulate polygon!" );
	    					//return null;
	    					// Sometimes warning is fine, especially polygons are triangulated in reverse.
	    					console.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );
	
	    					if ( indices ) return vertIndices;
	    					return result;
	
	    				}
	
	    				/* three consecutive vertices in current polygon, <u,v,w> */
	
	    				u = v; 	 	if ( nv <= u ) u = 0;     /* previous */
	    				v = u + 1;  if ( nv <= v ) v = 0;     /* new v    */
	    				w = v + 1;  if ( nv <= w ) w = 0;     /* next     */
	
	    				if ( snip( contour, u, v, w, nv, verts ) ) {
	
	    					var a, b, c, s, t;
	
	    					/* true names of the vertices */
	
	    					a = verts[ u ];
	    					b = verts[ v ];
	    					c = verts[ w ];
	
	    					/* output Triangle */
	
	    					result.push( [ contour[ a ],
	    						contour[ b ],
	    						contour[ c ] ] );
	
	
	    					vertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );
	
	    					/* remove v from the remaining polygon */
	
	    					for ( s = v, t = v + 1; t < nv; s ++, t ++ ) {
	
	    						verts[ s ] = verts[ t ];
	
	    					}
	
	    					nv --;
	
	    					/* reset error detection counter */
	
	    					count = 2 * nv;
	
	    				}
	
	    			}
	
	    			if ( indices ) return vertIndices;
	    			return result;
	
	    		}
	
	    	} )(),
	
	    	triangulateShape: function ( contour, holes ) {
	
	    		function removeDupEndPts(points) {
	
	    			var l = points.length;
	
	    			if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {
	
	    				points.pop();
	
	    			}
	
	    		}
	
	    		removeDupEndPts( contour );
	    		holes.forEach( removeDupEndPts );
	
	    		function point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {
	
	    			// inOtherPt needs to be collinear to the inSegment
	    			if ( inSegPt1.x !== inSegPt2.x ) {
	
	    				if ( inSegPt1.x < inSegPt2.x ) {
	
	    					return	( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );
	
	    				} else {
	
	    					return	( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );
	
	    				}
	
	    			} else {
	
	    				if ( inSegPt1.y < inSegPt2.y ) {
	
	    					return	( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );
	
	    				} else {
	
	    					return	( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );
	
	    				}
	
	    			}
	
	    		}
	
	    		function intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {
	
	    			var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;
	    			var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;
	
	    			var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;
	    			var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;
	
	    			var limit		= seg1dy * seg2dx - seg1dx * seg2dy;
	    			var perpSeg1	= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;
	
	    			if ( Math.abs( limit ) > Number.EPSILON ) {
	
	    				// not parallel
	
	    				var perpSeg2;
	    				if ( limit > 0 ) {
	
	    					if ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) 		return [];
	    					perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;
	    					if ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) 		return [];
	
	    				} else {
	
	    					if ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) 		return [];
	    					perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;
	    					if ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) 		return [];
	
	    				}
	
	    				// i.e. to reduce rounding errors
	    				// intersection at endpoint of segment#1?
	    				if ( perpSeg2 === 0 ) {
	
	    					if ( ( inExcludeAdjacentSegs ) &&
	    						 ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )		return [];
	    					return [ inSeg1Pt1 ];
	
	    				}
	    				if ( perpSeg2 === limit ) {
	
	    					if ( ( inExcludeAdjacentSegs ) &&
	    						 ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )		return [];
	    					return [ inSeg1Pt2 ];
	
	    				}
	    				// intersection at endpoint of segment#2?
	    				if ( perpSeg1 === 0 )		return [ inSeg2Pt1 ];
	    				if ( perpSeg1 === limit )	return [ inSeg2Pt2 ];
	
	    				// return real intersection point
	    				var factorSeg1 = perpSeg2 / limit;
	    				return	[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,
	    							y: inSeg1Pt1.y + factorSeg1 * seg1dy } ];
	
	    			} else {
	
	    				// parallel or collinear
	    				if ( ( perpSeg1 !== 0 ) ||
	    					 ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) 			return [];
	
	    				// they are collinear or degenerate
	    				var seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );	// segment1 is just a point?
	    				var seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );	// segment2 is just a point?
	    				// both segments are points
	    				if ( seg1Pt && seg2Pt ) {
	
	    					if ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||
	    						 ( inSeg1Pt1.y !== inSeg2Pt1.y ) )		return [];	// they are distinct  points
	    					return [ inSeg1Pt1 ];                 						// they are the same point
	
	    				}
	    				// segment#1  is a single point
	    				if ( seg1Pt ) {
	
	    					if ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )		return [];		// but not in segment#2
	    					return [ inSeg1Pt1 ];
	
	    				}
	    				// segment#2  is a single point
	    				if ( seg2Pt ) {
	
	    					if ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )		return [];		// but not in segment#1
	    					return [ inSeg2Pt1 ];
	
	    				}
	
	    				// they are collinear segments, which might overlap
	    				var seg1min, seg1max, seg1minVal, seg1maxVal;
	    				var seg2min, seg2max, seg2minVal, seg2maxVal;
	    				if ( seg1dx !== 0 ) {
	
	    					// the segments are NOT on a vertical line
	    					if ( inSeg1Pt1.x < inSeg1Pt2.x ) {
	
	    						seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;
	    						seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;
	
	    					} else {
	
	    						seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;
	    						seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;
	
	    					}
	    					if ( inSeg2Pt1.x < inSeg2Pt2.x ) {
	
	    						seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;
	    						seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;
	
	    					} else {
	
	    						seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;
	    						seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;
	
	    					}
	
	    				} else {
	
	    					// the segments are on a vertical line
	    					if ( inSeg1Pt1.y < inSeg1Pt2.y ) {
	
	    						seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;
	    						seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;
	
	    					} else {
	
	    						seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;
	    						seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;
	
	    					}
	    					if ( inSeg2Pt1.y < inSeg2Pt2.y ) {
	
	    						seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;
	    						seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;
	
	    					} else {
	
	    						seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;
	    						seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;
	
	    					}
	
	    				}
	    				if ( seg1minVal <= seg2minVal ) {
	
	    					if ( seg1maxVal <  seg2minVal )	return [];
	    					if ( seg1maxVal === seg2minVal )	{
	
	    						if ( inExcludeAdjacentSegs )		return [];
	    						return [ seg2min ];
	
	    					}
	    					if ( seg1maxVal <= seg2maxVal )	return [ seg2min, seg1max ];
	    					return	[ seg2min, seg2max ];
	
	    				} else {
	
	    					if ( seg1minVal >  seg2maxVal )	return [];
	    					if ( seg1minVal === seg2maxVal )	{
	
	    						if ( inExcludeAdjacentSegs )		return [];
	    						return [ seg1min ];
	
	    					}
	    					if ( seg1maxVal <= seg2maxVal )	return [ seg1min, seg1max ];
	    					return	[ seg1min, seg2max ];
	
	    				}
	
	    			}
	
	    		}
	
	    		function isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {
	
	    			// The order of legs is important
	
	    			// translation of all points, so that Vertex is at (0,0)
	    			var legFromPtX	= inLegFromPt.x - inVertex.x,  legFromPtY	= inLegFromPt.y - inVertex.y;
	    			var legToPtX	= inLegToPt.x	- inVertex.x,  legToPtY		= inLegToPt.y	- inVertex.y;
	    			var otherPtX	= inOtherPt.x	- inVertex.x,  otherPtY		= inOtherPt.y	- inVertex.y;
	
	    			// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.
	    			var from2toAngle	= legFromPtX * legToPtY - legFromPtY * legToPtX;
	    			var from2otherAngle	= legFromPtX * otherPtY - legFromPtY * otherPtX;
	
	    			if ( Math.abs( from2toAngle ) > Number.EPSILON ) {
	
	    				// angle != 180 deg.
	
	    				var other2toAngle		= otherPtX * legToPtY - otherPtY * legToPtX;
	    				// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );
	
	    				if ( from2toAngle > 0 ) {
	
	    					// main angle < 180 deg.
	    					return	( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );
	
	    				} else {
	
	    					// main angle > 180 deg.
	    					return	( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );
	
	    				}
	
	    			} else {
	
	    				// angle == 180 deg.
	    				// console.log( "from2to: 180 deg., from2other: " + from2otherAngle  );
	    				return	( from2otherAngle > 0 );
	
	    			}
	
	    		}
	
	
	    		function removeHoles( contour, holes ) {
	
	    			var shape = contour.concat(); // work on this shape
	    			var hole;
	
	    			function isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {
	
	    				// Check if hole point lies within angle around shape point
	    				var lastShapeIdx = shape.length - 1;
	
	    				var prevShapeIdx = inShapeIdx - 1;
	    				if ( prevShapeIdx < 0 )			prevShapeIdx = lastShapeIdx;
	
	    				var nextShapeIdx = inShapeIdx + 1;
	    				if ( nextShapeIdx > lastShapeIdx )	nextShapeIdx = 0;
	
	    				var insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );
	    				if ( ! insideAngle ) {
	
	    					// console.log( "Vertex (Shape): " + inShapeIdx + ", Point: " + hole[inHoleIdx].x + "/" + hole[inHoleIdx].y );
	    					return	false;
	
	    				}
	
	    				// Check if shape point lies within angle around hole point
	    				var lastHoleIdx = hole.length - 1;
	
	    				var prevHoleIdx = inHoleIdx - 1;
	    				if ( prevHoleIdx < 0 )			prevHoleIdx = lastHoleIdx;
	
	    				var nextHoleIdx = inHoleIdx + 1;
	    				if ( nextHoleIdx > lastHoleIdx )	nextHoleIdx = 0;
	
	    				insideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );
	    				if ( ! insideAngle ) {
	
	    					// console.log( "Vertex (Hole): " + inHoleIdx + ", Point: " + shape[inShapeIdx].x + "/" + shape[inShapeIdx].y );
	    					return	false;
	
	    				}
	
	    				return	true;
	
	    			}
	
	    			function intersectsShapeEdge( inShapePt, inHolePt ) {
	
	    				// checks for intersections with shape edges
	    				var sIdx, nextIdx, intersection;
	    				for ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {
	
	    					nextIdx = sIdx + 1; nextIdx %= shape.length;
	    					intersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );
	    					if ( intersection.length > 0 )		return	true;
	
	    				}
	
	    				return	false;
	
	    			}
	
	    			var indepHoles = [];
	
	    			function intersectsHoleEdge( inShapePt, inHolePt ) {
	
	    				// checks for intersections with hole edges
	    				var ihIdx, chkHole,
	    					hIdx, nextIdx, intersection;
	    				for ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {
	
	    					chkHole = holes[ indepHoles[ ihIdx ]];
	    					for ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {
	
	    						nextIdx = hIdx + 1; nextIdx %= chkHole.length;
	    						intersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );
	    						if ( intersection.length > 0 )		return	true;
	
	    					}
	
	    				}
	    				return	false;
	
	    			}
	
	    			var holeIndex, shapeIndex,
	    				shapePt, holePt,
	    				holeIdx, cutKey, failedCuts = [],
	    				tmpShape1, tmpShape2,
	    				tmpHole1, tmpHole2;
	
	    			for ( var h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    				indepHoles.push( h );
	
	    			}
	
	    			var minShapeIndex = 0;
	    			var counter = indepHoles.length * 2;
	    			while ( indepHoles.length > 0 ) {
	
	    				counter --;
	    				if ( counter < 0 ) {
	
	    					console.log( "Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!" );
	    					break;
	
	    				}
	
	    				// search for shape-vertex and hole-vertex,
	    				// which can be connected without intersections
	    				for ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {
	
	    					shapePt = shape[ shapeIndex ];
	    					holeIndex	= - 1;
	
	    					// search for hole which can be reached without intersections
	    					for ( var h = 0; h < indepHoles.length; h ++ ) {
	
	    						holeIdx = indepHoles[ h ];
	
	    						// prevent multiple checks
	    						cutKey = shapePt.x + ":" + shapePt.y + ":" + holeIdx;
	    						if ( failedCuts[ cutKey ] !== undefined )			continue;
	
	    						hole = holes[ holeIdx ];
	    						for ( var h2 = 0; h2 < hole.length; h2 ++ ) {
	
	    							holePt = hole[ h2 ];
	    							if ( ! isCutLineInsideAngles( shapeIndex, h2 ) )		continue;
	    							if ( intersectsShapeEdge( shapePt, holePt ) )		continue;
	    							if ( intersectsHoleEdge( shapePt, holePt ) )		continue;
	
	    							holeIndex = h2;
	    							indepHoles.splice( h, 1 );
	
	    							tmpShape1 = shape.slice( 0, shapeIndex + 1 );
	    							tmpShape2 = shape.slice( shapeIndex );
	    							tmpHole1 = hole.slice( holeIndex );
	    							tmpHole2 = hole.slice( 0, holeIndex + 1 );
	
	    							shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );
	
	    							minShapeIndex = shapeIndex;
	
	    							// Debug only, to show the selected cuts
	    							// glob_CutLines.push( [ shapePt, holePt ] );
	
	    							break;
	
	    						}
	    						if ( holeIndex >= 0 )	break;		// hole-vertex found
	
	    						failedCuts[ cutKey ] = true;			// remember failure
	
	    					}
	    					if ( holeIndex >= 0 )	break;		// hole-vertex found
	
	    				}
	
	    			}
	
	    			return shape; 			/* shape with no holes */
	
	    		}
	
	
	    		var i, il, f, face,
	    			key, index,
	    			allPointsMap = {};
	
	    		// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.
	
	    		var allpoints = contour.concat();
	
	    		for ( var h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    			Array.prototype.push.apply( allpoints, holes[ h ] );
	
	    		}
	
	    		//console.log( "allpoints",allpoints, allpoints.length );
	
	    		// prepare all points map
	
	    		for ( i = 0, il = allpoints.length; i < il; i ++ ) {
	
	    			key = allpoints[ i ].x + ":" + allpoints[ i ].y;
	
	    			if ( allPointsMap[ key ] !== undefined ) {
	
	    				console.warn( "THREE.ShapeUtils: Duplicate point", key, i );
	
	    			}
	
	    			allPointsMap[ key ] = i;
	
	    		}
	
	    		// remove holes by cutting paths to holes and adding them to the shape
	    		var shapeWithoutHoles = removeHoles( contour, holes );
	
	    		var triangles = exports.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape
	    		//console.log( "triangles",triangles, triangles.length );
	
	    		// check all face vertices against all points map
	
	    		for ( i = 0, il = triangles.length; i < il; i ++ ) {
	
	    			face = triangles[ i ];
	
	    			for ( f = 0; f < 3; f ++ ) {
	
	    				key = face[ f ].x + ":" + face[ f ].y;
	
	    				index = allPointsMap[ key ];
	
	    				if ( index !== undefined ) {
	
	    					face[ f ] = index;
	
	    				}
	
	    			}
	
	    		}
	
	    		return triangles.concat();
	
	    	},
	
	    	isClockWise: function ( pts ) {
	
	    		return exports.ShapeUtils.area( pts ) < 0;
	
	    	},
	
	    	// Bezier Curves formulas obtained from
	    	// http://en.wikipedia.org/wiki/B%C3%A9zier_curve
	
	    	// Quad Bezier Functions
	
	    	b2: ( function () {
	
	    		function b2p0( t, p ) {
	
	    			var k = 1 - t;
	    			return k * k * p;
	
	    		}
	
	    		function b2p1( t, p ) {
	
	    			return 2 * ( 1 - t ) * t * p;
	
	    		}
	
	    		function b2p2( t, p ) {
	
	    			return t * t * p;
	
	    		}
	
	    		return function b2( t, p0, p1, p2 ) {
	
	    			return b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );
	
	    		};
	
	    	} )(),
	
	    	// Cubic Bezier Functions
	
	    	b3: ( function () {
	
	    		function b3p0( t, p ) {
	
	    			var k = 1 - t;
	    			return k * k * k * p;
	
	    		}
	
	    		function b3p1( t, p ) {
	
	    			var k = 1 - t;
	    			return 3 * k * k * t * p;
	
	    		}
	
	    		function b3p2( t, p ) {
	
	    			var k = 1 - t;
	    			return 3 * k * t * t * p;
	
	    		}
	
	    		function b3p3( t, p ) {
	
	    			return t * t * t * p;
	
	    		}
	
	    		return function b3( t, p0, p1, p2, p3 ) {
	
	    			return b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );
	
	    		};
	
	    	} )()
	
	    };
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     *
	     * Creates extruded geometry from a path shape.
	     *
	     * parameters = {
	     *
	     *  curveSegments: <int>, // number of points on the curves
	     *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
	     *  amount: <int>, // Depth to extrude the shape
	     *
	     *  bevelEnabled: <bool>, // turn on bevel
	     *  bevelThickness: <float>, // how deep into the original shape bevel goes
	     *  bevelSize: <float>, // how far from shape outline is bevel
	     *  bevelSegments: <int>, // number of bevel layers
	     *
	     *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)
	     *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals
	     *
	     *  uvGenerator: <Object> // object that provides UV generator functions
	     *
	     * }
	     **/
	
	    function ExtrudeGeometry( shapes, options ) {
	
	    	if ( typeof( shapes ) === "undefined" ) {
	
	    		shapes = [];
	    		return;
	
	    	}
	
	    	Geometry.call( this );
	
	    	this.type = 'ExtrudeGeometry';
	
	    	shapes = Array.isArray( shapes ) ? shapes : [ shapes ];
	
	    	this.addShapeList( shapes, options );
	
	    	this.computeFaceNormals();
	
	    	// can't really use automatic vertex normals
	    	// as then front and back sides get smoothed too
	    	// should do separate smoothing just for sides
	
	    	//this.computeVertexNormals();
	
	    	//console.log( "took", ( Date.now() - startTime ) );
	
	    }
	
	    ExtrudeGeometry.prototype = Object.create( Geometry.prototype );
	    ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;
	
	    ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {
	
	    	var sl = shapes.length;
	
	    	for ( var s = 0; s < sl; s ++ ) {
	
	    		var shape = shapes[ s ];
	    		this.addShape( shape, options );
	
	    	}
	
	    };
	
	    ExtrudeGeometry.prototype.addShape = function ( shape, options ) {
	
	    	var amount = options.amount !== undefined ? options.amount : 100;
	
	    	var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10
	    	var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8
	    	var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;
	
	    	var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false
	
	    	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;
	
	    	var steps = options.steps !== undefined ? options.steps : 1;
	
	    	var extrudePath = options.extrudePath;
	    	var extrudePts, extrudeByPath = false;
	
	    	// Use default WorldUVGenerator if no UV generators are specified.
	    	var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;
	
	    	var splineTube, binormal, normal, position2;
	    	if ( extrudePath ) {
	
	    		extrudePts = extrudePath.getSpacedPoints( steps );
	
	    		extrudeByPath = true;
	    		bevelEnabled = false; // bevels not supported for path extrusion
	
	    		// SETUP TNB variables
	
	    		// Reuse TNB from TubeGeomtry for now.
	    		// TODO1 - have a .isClosed in spline?
	
	    		splineTube = options.frames !== undefined ? options.frames : new TubeGeometry.FrenetFrames( extrudePath, steps, false );
	
	    		// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
	
	    		binormal = new Vector3();
	    		normal = new Vector3();
	    		position2 = new Vector3();
	
	    	}
	
	    	// Safeguards if bevels are not enabled
	
	    	if ( ! bevelEnabled ) {
	
	    		bevelSegments = 0;
	    		bevelThickness = 0;
	    		bevelSize = 0;
	
	    	}
	
	    	// Variables initialization
	
	    	var ahole, h, hl; // looping of holes
	    	var scope = this;
	
	    	var shapesOffset = this.vertices.length;
	
	    	var shapePoints = shape.extractPoints( curveSegments );
	
	    	var vertices = shapePoints.shape;
	    	var holes = shapePoints.holes;
	
	    	var reverse = ! exports.ShapeUtils.isClockWise( vertices );
	
	    	if ( reverse ) {
	
	    		vertices = vertices.reverse();
	
	    		// Maybe we should also check if holes are in the opposite direction, just to be safe ...
	
	    		for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    			ahole = holes[ h ];
	
	    			if ( exports.ShapeUtils.isClockWise( ahole ) ) {
	
	    				holes[ h ] = ahole.reverse();
	
	    			}
	
	    		}
	
	    		reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!
	
	    	}
	
	
	    	var faces = exports.ShapeUtils.triangulateShape( vertices, holes );
	
	    	/* Vertices */
	
	    	var contour = vertices; // vertices has all points but contour has only points of circumference
	
	    	for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    		ahole = holes[ h ];
	
	    		vertices = vertices.concat( ahole );
	
	    	}
	
	
	    	function scalePt2( pt, vec, size ) {
	
	    		if ( ! vec ) console.error( "THREE.ExtrudeGeometry: vec does not exist" );
	
	    		return vec.clone().multiplyScalar( size ).add( pt );
	
	    	}
	
	    	var b, bs, t, z,
	    		vert, vlen = vertices.length,
	    		face, flen = faces.length;
	
	
	    	// Find directions for point movement
	
	
	    	function getBevelVec( inPt, inPrev, inNext ) {
	
	    		// computes for inPt the corresponding point inPt' on a new contour
	    		//   shifted by 1 unit (length of normalized vector) to the left
	    		// if we walk along contour clockwise, this new contour is outside the old one
	    		//
	    		// inPt' is the intersection of the two lines parallel to the two
	    		//  adjacent edges of inPt at a distance of 1 unit on the left side.
	
	    		var v_trans_x, v_trans_y, shrink_by = 1;		// resulting translation vector for inPt
	
	    		// good reading for geometry algorithms (here: line-line intersection)
	    		// http://geomalgorithms.com/a05-_intersect-1.html
	
	    		var v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;
	    		var v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;
	
	    		var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );
	
	    		// check for collinear edges
	    		var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );
	
	    		if ( Math.abs( collinear0 ) > Number.EPSILON ) {
	
	    			// not collinear
	
	    			// length of vectors for normalizing
	
	    			var v_prev_len = Math.sqrt( v_prev_lensq );
	    			var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );
	
	    			// shift adjacent points by unit vectors to the left
	
	    			var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );
	    			var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );
	
	    			var ptNextShift_x = ( inNext.x - v_next_y / v_next_len );
	    			var ptNextShift_y = ( inNext.y + v_next_x / v_next_len );
	
	    			// scaling factor for v_prev to intersection point
	
	    			var sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -
	    						( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /
	    					  ( v_prev_x * v_next_y - v_prev_y * v_next_x );
	
	    			// vector from inPt to intersection point
	
	    			v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );
	    			v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );
	
	    			// Don't normalize!, otherwise sharp corners become ugly
	    			//  but prevent crazy spikes
	    			var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );
	    			if ( v_trans_lensq <= 2 ) {
	
	    				return	new Vector2( v_trans_x, v_trans_y );
	
	    			} else {
	
	    				shrink_by = Math.sqrt( v_trans_lensq / 2 );
	
	    			}
	
	    		} else {
	
	    			// handle special case of collinear edges
	
	    			var direction_eq = false;		// assumes: opposite
	    			if ( v_prev_x > Number.EPSILON ) {
	
	    				if ( v_next_x > Number.EPSILON ) {
	
	    					direction_eq = true;
	
	    				}
	
	    			} else {
	
	    				if ( v_prev_x < - Number.EPSILON ) {
	
	    					if ( v_next_x < - Number.EPSILON ) {
	
	    						direction_eq = true;
	
	    					}
	
	    				} else {
	
	    					if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {
	
	    						direction_eq = true;
	
	    					}
	
	    				}
	
	    			}
	
	    			if ( direction_eq ) {
	
	    				// console.log("Warning: lines are a straight sequence");
	    				v_trans_x = - v_prev_y;
	    				v_trans_y =  v_prev_x;
	    				shrink_by = Math.sqrt( v_prev_lensq );
	
	    			} else {
	
	    				// console.log("Warning: lines are a straight spike");
	    				v_trans_x = v_prev_x;
	    				v_trans_y = v_prev_y;
	    				shrink_by = Math.sqrt( v_prev_lensq / 2 );
	
	    			}
	
	    		}
	
	    		return	new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );
	
	    	}
	
	
	    	var contourMovements = [];
	
	    	for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {
	
	    		if ( j === il ) j = 0;
	    		if ( k === il ) k = 0;
	
	    		//  (j)---(i)---(k)
	    		// console.log('i,j,k', i, j , k)
	
	    		contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );
	
	    	}
	
	    	var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();
	
	    	for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    		ahole = holes[ h ];
	
	    		oneHoleMovements = [];
	
	    		for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {
	
	    			if ( j === il ) j = 0;
	    			if ( k === il ) k = 0;
	
	    			//  (j)---(i)---(k)
	    			oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );
	
	    		}
	
	    		holesMovements.push( oneHoleMovements );
	    		verticesMovements = verticesMovements.concat( oneHoleMovements );
	
	    	}
	
	
	    	// Loop bevelSegments, 1 for the front, 1 for the back
	
	    	for ( b = 0; b < bevelSegments; b ++ ) {
	
	    		//for ( b = bevelSegments; b > 0; b -- ) {
	
	    		t = b / bevelSegments;
	    		z = bevelThickness * Math.cos( t * Math.PI / 2 );
	    		bs = bevelSize * Math.sin( t * Math.PI / 2 );
	
	    		// contract shape
	
	    		for ( i = 0, il = contour.length; i < il; i ++ ) {
	
	    			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
	
	    			v( vert.x, vert.y,  - z );
	
	    		}
	
	    		// expand holes
	
	    		for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    			ahole = holes[ h ];
	    			oneHoleMovements = holesMovements[ h ];
	
	    			for ( i = 0, il = ahole.length; i < il; i ++ ) {
	
	    				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );
	
	    				v( vert.x, vert.y,  - z );
	
	    			}
	
	    		}
	
	    	}
	
	    	bs = bevelSize;
	
	    	// Back facing vertices
	
	    	for ( i = 0; i < vlen; i ++ ) {
	
	    		vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];
	
	    		if ( ! extrudeByPath ) {
	
	    			v( vert.x, vert.y, 0 );
	
	    		} else {
	
	    			// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
	
	    			normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );
	    			binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );
	
	    			position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );
	
	    			v( position2.x, position2.y, position2.z );
	
	    		}
	
	    	}
	
	    	// Add stepped vertices...
	    	// Including front facing vertices
	
	    	var s;
	
	    	for ( s = 1; s <= steps; s ++ ) {
	
	    		for ( i = 0; i < vlen; i ++ ) {
	
	    			vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];
	
	    			if ( ! extrudeByPath ) {
	
	    				v( vert.x, vert.y, amount / steps * s );
	
	    			} else {
	
	    				// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
	
	    				normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );
	    				binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );
	
	    				position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );
	
	    				v( position2.x, position2.y, position2.z );
	
	    			}
	
	    		}
	
	    	}
	
	
	    	// Add bevel segments planes
	
	    	//for ( b = 1; b <= bevelSegments; b ++ ) {
	    	for ( b = bevelSegments - 1; b >= 0; b -- ) {
	
	    		t = b / bevelSegments;
	    		z = bevelThickness * Math.cos ( t * Math.PI / 2 );
	    		bs = bevelSize * Math.sin( t * Math.PI / 2 );
	
	    		// contract shape
	
	    		for ( i = 0, il = contour.length; i < il; i ++ ) {
	
	    			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
	    			v( vert.x, vert.y,  amount + z );
	
	    		}
	
	    		// expand holes
	
	    		for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    			ahole = holes[ h ];
	    			oneHoleMovements = holesMovements[ h ];
	
	    			for ( i = 0, il = ahole.length; i < il; i ++ ) {
	
	    				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );
	
	    				if ( ! extrudeByPath ) {
	
	    					v( vert.x, vert.y,  amount + z );
	
	    				} else {
	
	    					v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );
	
	    				}
	
	    			}
	
	    		}
	
	    	}
	
	    	/* Faces */
	
	    	// Top and bottom faces
	
	    	buildLidFaces();
	
	    	// Sides faces
	
	    	buildSideFaces();
	
	
	    	/////  Internal functions
	
	    	function buildLidFaces() {
	
	    		if ( bevelEnabled ) {
	
	    			var layer = 0; // steps + 1
	    			var offset = vlen * layer;
	
	    			// Bottom faces
	
	    			for ( i = 0; i < flen; i ++ ) {
	
	    				face = faces[ i ];
	    				f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );
	
	    			}
	
	    			layer = steps + bevelSegments * 2;
	    			offset = vlen * layer;
	
	    			// Top faces
	
	    			for ( i = 0; i < flen; i ++ ) {
	
	    				face = faces[ i ];
	    				f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );
	
	    			}
	
	    		} else {
	
	    			// Bottom faces
	
	    			for ( i = 0; i < flen; i ++ ) {
	
	    				face = faces[ i ];
	    				f3( face[ 2 ], face[ 1 ], face[ 0 ] );
	
	    			}
	
	    			// Top faces
	
	    			for ( i = 0; i < flen; i ++ ) {
	
	    				face = faces[ i ];
	    				f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );
	
	    			}
	
	    		}
	
	    	}
	
	    	// Create faces for the z-sides of the shape
	
	    	function buildSideFaces() {
	
	    		var layeroffset = 0;
	    		sidewalls( contour, layeroffset );
	    		layeroffset += contour.length;
	
	    		for ( h = 0, hl = holes.length; h < hl; h ++ ) {
	
	    			ahole = holes[ h ];
	    			sidewalls( ahole, layeroffset );
	
	    			//, true
	    			layeroffset += ahole.length;
	
	    		}
	
	    	}
	
	    	function sidewalls( contour, layeroffset ) {
	
	    		var j, k;
	    		i = contour.length;
	
	    		while ( -- i >= 0 ) {
	
	    			j = i;
	    			k = i - 1;
	    			if ( k < 0 ) k = contour.length - 1;
	
	    			//console.log('b', i,j, i-1, k,vertices.length);
	
	    			var s = 0, sl = steps  + bevelSegments * 2;
	
	    			for ( s = 0; s < sl; s ++ ) {
	
	    				var slen1 = vlen * s;
	    				var slen2 = vlen * ( s + 1 );
	
	    				var a = layeroffset + j + slen1,
	    					b = layeroffset + k + slen1,
	    					c = layeroffset + k + slen2,
	    					d = layeroffset + j + slen2;
	
	    				f4( a, b, c, d, contour, s, sl, j, k );
	
	    			}
	
	    		}
	
	    	}
	
	
	    	function v( x, y, z ) {
	
	    		scope.vertices.push( new Vector3( x, y, z ) );
	
	    	}
	
	    	function f3( a, b, c ) {
	
	    		a += shapesOffset;
	    		b += shapesOffset;
	    		c += shapesOffset;
	
	    		scope.faces.push( new Face3( a, b, c, null, null, 0 ) );
	
	    		var uvs = uvgen.generateTopUV( scope, a, b, c );
	
	    		scope.faceVertexUvs[ 0 ].push( uvs );
	
	    	}
	
	    	function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {
	
	    		a += shapesOffset;
	    		b += shapesOffset;
	    		c += shapesOffset;
	    		d += shapesOffset;
	
	    		scope.faces.push( new Face3( a, b, d, null, null, 1 ) );
	    		scope.faces.push( new Face3( b, c, d, null, null, 1 ) );
	
	    		var uvs = uvgen.generateSideWallUV( scope, a, b, c, d );
	
	    		scope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );
	    		scope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );
	
	    	}
	
	    };
	
	    ExtrudeGeometry.WorldUVGenerator = {
	
	    	generateTopUV: function ( geometry, indexA, indexB, indexC ) {
	
	    		var vertices = geometry.vertices;
	
	    		var a = vertices[ indexA ];
	    		var b = vertices[ indexB ];
	    		var c = vertices[ indexC ];
	
	    		return [
	    			new Vector2( a.x, a.y ),
	    			new Vector2( b.x, b.y ),
	    			new Vector2( c.x, c.y )
	    		];
	
	    	},
	
	    	generateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {
	
	    		var vertices = geometry.vertices;
	
	    		var a = vertices[ indexA ];
	    		var b = vertices[ indexB ];
	    		var c = vertices[ indexC ];
	    		var d = vertices[ indexD ];
	
	    		if ( Math.abs( a.y - b.y ) < 0.01 ) {
	
	    			return [
	    				new Vector2( a.x, 1 - a.z ),
	    				new Vector2( b.x, 1 - b.z ),
	    				new Vector2( c.x, 1 - c.z ),
	    				new Vector2( d.x, 1 - d.z )
	    			];
	
	    		} else {
	
	    			return [
	    				new Vector2( a.y, 1 - a.z ),
	    				new Vector2( b.y, 1 - b.z ),
	    				new Vector2( c.y, 1 - c.z ),
	    				new Vector2( d.y, 1 - d.z )
	    			];
	
	    		}
	
	    	}
	    };
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * Text = 3D Text
	     *
	     * parameters = {
	     *  font: <THREE.Font>, // font
	     *
	     *  size: <float>, // size of the text
	     *  height: <float>, // thickness to extrude text
	     *  curveSegments: <int>, // number of points on the curves
	     *
	     *  bevelEnabled: <bool>, // turn on bevel
	     *  bevelThickness: <float>, // how deep into text bevel goes
	     *  bevelSize: <float> // how far from text outline is bevel
	     * }
	     */
	
	    function TextGeometry( text, parameters ) {
	
	    	parameters = parameters || {};
	
	    	var font = parameters.font;
	
	    	if ( (font && font.isFont) === false ) {
	
	    		console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );
	    		return new Geometry();
	
	    	}
	
	    	var shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );
	
	    	// translate parameters to ExtrudeGeometry API
	
	    	parameters.amount = parameters.height !== undefined ? parameters.height : 50;
	
	    	// defaults
	
	    	if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;
	    	if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;
	    	if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;
	
	    	ExtrudeGeometry.call( this, shapes, parameters );
	
	    	this.type = 'TextGeometry';
	
	    }
	
	    TextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );
	    TextGeometry.prototype.constructor = TextGeometry;
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     * based on THREE.SphereGeometry
	     */
	
	    function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'SphereBufferGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments,
	    		phiStart: phiStart,
	    		phiLength: phiLength,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	radius = radius || 50;
	
	    	widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );
	    	heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );
	
	    	phiStart = phiStart !== undefined ? phiStart : 0;
	    	phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;
	
	    	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	    	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;
	
	    	var thetaEnd = thetaStart + thetaLength;
	
	    	var vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );
	
	    	var positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );
	
	    	var index = 0, vertices = [], normal = new Vector3();
	
	    	for ( var y = 0; y <= heightSegments; y ++ ) {
	
	    		var verticesRow = [];
	
	    		var v = y / heightSegments;
	
	    		for ( var x = 0; x <= widthSegments; x ++ ) {
	
	    			var u = x / widthSegments;
	
	    			var px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
	    			var py = radius * Math.cos( thetaStart + v * thetaLength );
	    			var pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
	
	    			normal.set( px, py, pz ).normalize();
	
	    			positions.setXYZ( index, px, py, pz );
	    			normals.setXYZ( index, normal.x, normal.y, normal.z );
	    			uvs.setXY( index, u, 1 - v );
	
	    			verticesRow.push( index );
	
	    			index ++;
	
	    		}
	
	    		vertices.push( verticesRow );
	
	    	}
	
	    	var indices = [];
	
	    	for ( var y = 0; y < heightSegments; y ++ ) {
	
	    		for ( var x = 0; x < widthSegments; x ++ ) {
	
	    			var v1 = vertices[ y ][ x + 1 ];
	    			var v2 = vertices[ y ][ x ];
	    			var v3 = vertices[ y + 1 ][ x ];
	    			var v4 = vertices[ y + 1 ][ x + 1 ];
	
	    			if ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );
	    			if ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );
	
	    		}
	
	    	}
	
	    	this.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );
	    	this.addAttribute( 'position', positions );
	    	this.addAttribute( 'normal', normals );
	    	this.addAttribute( 'uv', uvs );
	
	    	this.boundingSphere = new Sphere( new Vector3(), radius );
	
	    }
	
	    SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'SphereGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments,
	    		phiStart: phiStart,
	    		phiLength: phiLength,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );
	
	    }
	
	    SphereGeometry.prototype = Object.create( Geometry.prototype );
	    SphereGeometry.prototype.constructor = SphereGeometry;
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     */
	
	    function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'RingBufferGeometry';
	
	    	this.parameters = {
	    		innerRadius: innerRadius,
	    		outerRadius: outerRadius,
	    		thetaSegments: thetaSegments,
	    		phiSegments: phiSegments,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	innerRadius = innerRadius || 20;
	    	outerRadius = outerRadius || 50;
	
	    	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	    	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;
	
	    	thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;
	    	phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;
	
	    	// these are used to calculate buffer length
	    	var vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );
	    	var indexCount = thetaSegments * phiSegments * 2 * 3;
	
	    	// buffers
	    	var indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );
	    	var vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );
	
	    	// some helper variables
	    	var index = 0, indexOffset = 0, segment;
	    	var radius = innerRadius;
	    	var radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );
	    	var vertex = new Vector3();
	    	var uv = new Vector2();
	    	var j, i;
	
	    	// generate vertices, normals and uvs
	
	    	// values are generate from the inside of the ring to the outside
	
	    	for ( j = 0; j <= phiSegments; j ++ ) {
	
	    		for ( i = 0; i <= thetaSegments; i ++ ) {
	
	    			segment = thetaStart + i / thetaSegments * thetaLength;
	
	    			// vertex
	    			vertex.x = radius * Math.cos( segment );
	    			vertex.y = radius * Math.sin( segment );
	    			vertices.setXYZ( index, vertex.x, vertex.y, vertex.z );
	
	    			// normal
	    			normals.setXYZ( index, 0, 0, 1 );
	
	    			// uv
	    			uv.x = ( vertex.x / outerRadius + 1 ) / 2;
	    			uv.y = ( vertex.y / outerRadius + 1 ) / 2;
	    			uvs.setXY( index, uv.x, uv.y );
	
	    			// increase index
	    			index++;
	
	    		}
	
	    		// increase the radius for next row of vertices
	    		radius += radiusStep;
	
	    	}
	
	    	// generate indices
	
	    	for ( j = 0; j < phiSegments; j ++ ) {
	
	    		var thetaSegmentLevel = j * ( thetaSegments + 1 );
	
	    		for ( i = 0; i < thetaSegments; i ++ ) {
	
	    			segment = i + thetaSegmentLevel;
	
	    			// indices
	    			var a = segment;
	    			var b = segment + thetaSegments + 1;
	    			var c = segment + thetaSegments + 2;
	    			var d = segment + 1;
	
	    			// face one
	    			indices.setX( indexOffset, a ); indexOffset++;
	    			indices.setX( indexOffset, b ); indexOffset++;
	    			indices.setX( indexOffset, c ); indexOffset++;
	
	    			// face two
	    			indices.setX( indexOffset, a ); indexOffset++;
	    			indices.setX( indexOffset, c ); indexOffset++;
	    			indices.setX( indexOffset, d ); indexOffset++;
	
	    		}
	
	    	}
	
	    	// build geometry
	
	    	this.setIndex( indices );
	    	this.addAttribute( 'position', vertices );
	    	this.addAttribute( 'normal', normals );
	    	this.addAttribute( 'uv', uvs );
	
	    }
	
	    RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    RingBufferGeometry.prototype.constructor = RingBufferGeometry;
	
	    /**
	     * @author Kaleb Murphy
	     */
	
	    function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'RingGeometry';
	
	    	this.parameters = {
	    		innerRadius: innerRadius,
	    		outerRadius: outerRadius,
	    		thetaSegments: thetaSegments,
	    		phiSegments: phiSegments,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );
	
	    }
	
	    RingGeometry.prototype = Object.create( Geometry.prototype );
	    RingGeometry.prototype.constructor = RingGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as
	     */
	
	    function PlaneGeometry( width, height, widthSegments, heightSegments ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'PlaneGeometry';
	
	    	this.parameters = {
	    		width: width,
	    		height: height,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments
	    	};
	
	    	this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );
	
	    }
	
	    PlaneGeometry.prototype = Object.create( Geometry.prototype );
	    PlaneGeometry.prototype.constructor = PlaneGeometry;
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     */
	
	     // points - to create a closed torus, one must use a set of points
	     //    like so: [ a, b, c, d, a ], see first is the same as last.
	     // segments - the number of circumference segments to create
	     // phiStart - the starting radian
	     // phiLength - the radian (0 to 2PI) range of the lathed section
	     //    2PI is a closed lathe, less than 2PI is a portion.
	
	    function LatheBufferGeometry( points, segments, phiStart, phiLength ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'LatheBufferGeometry';
	
	    	this.parameters = {
	    		points: points,
	    		segments: segments,
	    		phiStart: phiStart,
	    		phiLength: phiLength
	    	};
	
	    	segments = Math.floor( segments ) || 12;
	    	phiStart = phiStart || 0;
	    	phiLength = phiLength || Math.PI * 2;
	
	    	// clamp phiLength so it's in range of [ 0, 2PI ]
	    	phiLength = exports.Math.clamp( phiLength, 0, Math.PI * 2 );
	
	    	// these are used to calculate buffer length
	    	var vertexCount = ( segments + 1 ) * points.length;
	    	var indexCount = segments * points.length * 2 * 3;
	
	    	// buffers
	    	var indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );
	    	var vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );
	
	    	// helper variables
	    	var index = 0, indexOffset = 0, base;
	    	var inverseSegments = 1.0 / segments;
	    	var vertex = new Vector3();
	    	var uv = new Vector2();
	    	var i, j;
	
	    	// generate vertices and uvs
	
	    	for ( i = 0; i <= segments; i ++ ) {
	
	    		var phi = phiStart + i * inverseSegments * phiLength;
	
	    		var sin = Math.sin( phi );
	    		var cos = Math.cos( phi );
	
	    		for ( j = 0; j <= ( points.length - 1 ); j ++ ) {
	
	    			// vertex
	    			vertex.x = points[ j ].x * sin;
	    			vertex.y = points[ j ].y;
	    			vertex.z = points[ j ].x * cos;
	    			vertices.setXYZ( index, vertex.x, vertex.y, vertex.z );
	
	    			// uv
	    			uv.x = i / segments;
	    			uv.y = j / ( points.length - 1 );
	    			uvs.setXY( index, uv.x, uv.y );
	
	    			// increase index
	    			index ++;
	
	    		}
	
	    	}
	
	    	// generate indices
	
	    	for ( i = 0; i < segments; i ++ ) {
	
	    		for ( j = 0; j < ( points.length - 1 ); j ++ ) {
	
	    			base = j + i * points.length;
	
	    			// indices
	    			var a = base;
	    			var b = base + points.length;
	    			var c = base + points.length + 1;
	    			var d = base + 1;
	
	    			// face one
	    			indices.setX( indexOffset, a ); indexOffset++;
	    			indices.setX( indexOffset, b ); indexOffset++;
	    			indices.setX( indexOffset, d ); indexOffset++;
	
	    			// face two
	    			indices.setX( indexOffset, b ); indexOffset++;
	    			indices.setX( indexOffset, c ); indexOffset++;
	    			indices.setX( indexOffset, d ); indexOffset++;
	
	    		}
	
	    	}
	
	    	// build geometry
	
	    	this.setIndex( indices );
	    	this.addAttribute( 'position', vertices );
	    	this.addAttribute( 'uv', uvs );
	
	    	// generate normals
	
	    	this.computeVertexNormals();
	
	    	// if the geometry is closed, we need to average the normals along the seam.
	    	// because the corresponding vertices are identical (but still have different UVs).
	
	    	if( phiLength === Math.PI * 2 ) {
	
	    		var normals = this.attributes.normal.array;
	    		var n1 = new Vector3();
	    		var n2 = new Vector3();
	    		var n = new Vector3();
	
	    		// this is the buffer offset for the last line of vertices
	    		base = segments * points.length * 3;
	
	    		for( i = 0, j = 0; i < points.length; i ++, j += 3 ) {
	
	    			// select the normal of the vertex in the first line
	    			n1.x = normals[ j + 0 ];
	    			n1.y = normals[ j + 1 ];
	    			n1.z = normals[ j + 2 ];
	
	    			// select the normal of the vertex in the last line
	    			n2.x = normals[ base + j + 0 ];
	    			n2.y = normals[ base + j + 1 ];
	    			n2.z = normals[ base + j + 2 ];
	
	    			// average normals
	    			n.addVectors( n1, n2 ).normalize();
	
	    			// assign the new values to both normals
	    			normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;
	    			normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;
	    			normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;
	
	    		} // next row
	
	    	}
	
	    }
	
	    LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;
	
	    /**
	     * @author astrodud / http://astrodud.isgreat.org/
	     * @author zz85 / https://github.com/zz85
	     * @author bhouston / http://clara.io
	     */
	
	    // points - to create a closed torus, one must use a set of points
	    //    like so: [ a, b, c, d, a ], see first is the same as last.
	    // segments - the number of circumference segments to create
	    // phiStart - the starting radian
	    // phiLength - the radian (0 to 2PI) range of the lathed section
	    //    2PI is a closed lathe, less than 2PI is a portion.
	
	    function LatheGeometry( points, segments, phiStart, phiLength ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'LatheGeometry';
	
	    	this.parameters = {
	    		points: points,
	    		segments: segments,
	    		phiStart: phiStart,
	    		phiLength: phiLength
	    	};
	
	    	this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );
	    	this.mergeVertices();
	
	    }
	
	    LatheGeometry.prototype = Object.create( Geometry.prototype );
	    LatheGeometry.prototype.constructor = LatheGeometry;
	
	    /**
	     * @author jonobr1 / http://jonobr1.com
	     *
	     * Creates a one-sided polygonal geometry from a path shape. Similar to
	     * ExtrudeGeometry.
	     *
	     * parameters = {
	     *
	     *	curveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.
	     *
	     *	material: <int> // material index for front and back faces
	     *	uvGenerator: <Object> // object that provides UV generator functions
	     *
	     * }
	     **/
	
	    function ShapeGeometry( shapes, options ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'ShapeGeometry';
	
	    	if ( Array.isArray( shapes ) === false ) shapes = [ shapes ];
	
	    	this.addShapeList( shapes, options );
	
	    	this.computeFaceNormals();
	
	    }
	
	    ShapeGeometry.prototype = Object.create( Geometry.prototype );
	    ShapeGeometry.prototype.constructor = ShapeGeometry;
	
	    /**
	     * Add an array of shapes to THREE.ShapeGeometry.
	     */
	    ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {
	
	    	for ( var i = 0, l = shapes.length; i < l; i ++ ) {
	
	    		this.addShape( shapes[ i ], options );
	
	    	}
	
	    	return this;
	
	    };
	
	    /**
	     * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.
	     */
	    ShapeGeometry.prototype.addShape = function ( shape, options ) {
	
	    	if ( options === undefined ) options = {};
	    	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;
	
	    	var material = options.material;
	    	var uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;
	
	    	//
	
	    	var i, l, hole;
	
	    	var shapesOffset = this.vertices.length;
	    	var shapePoints = shape.extractPoints( curveSegments );
	
	    	var vertices = shapePoints.shape;
	    	var holes = shapePoints.holes;
	
	    	var reverse = ! exports.ShapeUtils.isClockWise( vertices );
	
	    	if ( reverse ) {
	
	    		vertices = vertices.reverse();
	
	    		// Maybe we should also check if holes are in the opposite direction, just to be safe...
	
	    		for ( i = 0, l = holes.length; i < l; i ++ ) {
	
	    			hole = holes[ i ];
	
	    			if ( exports.ShapeUtils.isClockWise( hole ) ) {
	
	    				holes[ i ] = hole.reverse();
	
	    			}
	
	    		}
	
	    		reverse = false;
	
	    	}
	
	    	var faces = exports.ShapeUtils.triangulateShape( vertices, holes );
	
	    	// Vertices
	
	    	for ( i = 0, l = holes.length; i < l; i ++ ) {
	
	    		hole = holes[ i ];
	    		vertices = vertices.concat( hole );
	
	    	}
	
	    	//
	
	    	var vert, vlen = vertices.length;
	    	var face, flen = faces.length;
	
	    	for ( i = 0; i < vlen; i ++ ) {
	
	    		vert = vertices[ i ];
	
	    		this.vertices.push( new Vector3( vert.x, vert.y, 0 ) );
	
	    	}
	
	    	for ( i = 0; i < flen; i ++ ) {
	
	    		face = faces[ i ];
	
	    		var a = face[ 0 ] + shapesOffset;
	    		var b = face[ 1 ] + shapesOffset;
	    		var c = face[ 2 ] + shapesOffset;
	
	    		this.faces.push( new Face3( a, b, c, null, null, material ) );
	    		this.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );
	
	    	}
	
	    };
	
	    /**
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function EdgesGeometry( geometry, thresholdAngle ) {
	
	    	BufferGeometry.call( this );
	
	    	thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;
	
	    	var thresholdDot = Math.cos( exports.Math.DEG2RAD * thresholdAngle );
	
	    	var edge = [ 0, 0 ], hash = {};
	
	    	function sortFunction( a, b ) {
	
	    		return a - b;
	
	    	}
	
	    	var keys = [ 'a', 'b', 'c' ];
	
	    	var geometry2;
	
	    	if ( (geometry && geometry.isBufferGeometry) ) {
	
	    		geometry2 = new Geometry();
	    		geometry2.fromBufferGeometry( geometry );
	
	    	} else {
	
	    		geometry2 = geometry.clone();
	
	    	}
	
	    	geometry2.mergeVertices();
	    	geometry2.computeFaceNormals();
	
	    	var vertices = geometry2.vertices;
	    	var faces = geometry2.faces;
	
	    	for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    		var face = faces[ i ];
	
	    		for ( var j = 0; j < 3; j ++ ) {
	
	    			edge[ 0 ] = face[ keys[ j ] ];
	    			edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];
	    			edge.sort( sortFunction );
	
	    			var key = edge.toString();
	
	    			if ( hash[ key ] === undefined ) {
	
	    				hash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };
	
	    			} else {
	
	    				hash[ key ].face2 = i;
	
	    			}
	
	    		}
	
	    	}
	
	    	var coords = [];
	
	    	for ( var key in hash ) {
	
	    		var h = hash[ key ];
	
	    		if ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {
	
	    			var vertex = vertices[ h.vert1 ];
	    			coords.push( vertex.x );
	    			coords.push( vertex.y );
	    			coords.push( vertex.z );
	
	    			vertex = vertices[ h.vert2 ];
	    			coords.push( vertex.x );
	    			coords.push( vertex.y );
	    			coords.push( vertex.z );
	
	    		}
	
	    	}
	
	    	this.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );
	
	    }
	
	    EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );
	    EdgesGeometry.prototype.constructor = EdgesGeometry;
	
	    /**
	     * @author Mugen87 / https://github.com/Mugen87
	     */
	
	    function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'CylinderBufferGeometry';
	
	    	this.parameters = {
	    		radiusTop: radiusTop,
	    		radiusBottom: radiusBottom,
	    		height: height,
	    		radialSegments: radialSegments,
	    		heightSegments: heightSegments,
	    		openEnded: openEnded,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	var scope = this;
	
	    	radiusTop = radiusTop !== undefined ? radiusTop : 20;
	    	radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;
	    	height = height !== undefined ? height : 100;
	
	    	radialSegments = Math.floor( radialSegments ) || 8;
	    	heightSegments = Math.floor( heightSegments ) || 1;
	
	    	openEnded = openEnded !== undefined ? openEnded : false;
	    	thetaStart = thetaStart !== undefined ? thetaStart : 0.0;
	    	thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;
	
	    	// used to calculate buffer length
	
	    	var nbCap = 0;
	
	    	if ( openEnded === false ) {
	
	    		if ( radiusTop > 0 ) nbCap ++;
	    		if ( radiusBottom > 0 ) nbCap ++;
	
	    	}
	
	    	var vertexCount = calculateVertexCount();
	    	var indexCount = calculateIndexCount();
	
	    	// buffers
	
	    	var indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );
	    	var vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );
	    	var uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );
	
	    	// helper variables
	
	    	var index = 0,
	    	    indexOffset = 0,
	    	    indexArray = [],
	    	    halfHeight = height / 2;
	
	    	// group variables
	    	var groupStart = 0;
	
	    	// generate geometry
	
	    	generateTorso();
	
	    	if ( openEnded === false ) {
	
	    		if ( radiusTop > 0 ) generateCap( true );
	    		if ( radiusBottom > 0 ) generateCap( false );
	
	    	}
	
	    	// build geometry
	
	    	this.setIndex( indices );
	    	this.addAttribute( 'position', vertices );
	    	this.addAttribute( 'normal', normals );
	    	this.addAttribute( 'uv', uvs );
	
	    	// helper functions
	
	    	function calculateVertexCount() {
	
	    		var count = ( radialSegments + 1 ) * ( heightSegments + 1 );
	
	    		if ( openEnded === false ) {
	
	    			count += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );
	
	    		}
	
	    		return count;
	
	    	}
	
	    	function calculateIndexCount() {
	
	    		var count = radialSegments * heightSegments * 2 * 3;
	
	    		if ( openEnded === false ) {
	
	    			count += radialSegments * nbCap * 3;
	
	    		}
	
	    		return count;
	
	    	}
	
	    	function generateTorso() {
	
	    		var x, y;
	    		var normal = new Vector3();
	    		var vertex = new Vector3();
	
	    		var groupCount = 0;
	
	    		// this will be used to calculate the normal
	    		var slope = ( radiusBottom - radiusTop ) / height;
	
	    		// generate vertices, normals and uvs
	
	    		for ( y = 0; y <= heightSegments; y ++ ) {
	
	    			var indexRow = [];
	
	    			var v = y / heightSegments;
	
	    			// calculate the radius of the current row
	    			var radius = v * ( radiusBottom - radiusTop ) + radiusTop;
	
	    			for ( x = 0; x <= radialSegments; x ++ ) {
	
	    				var u = x / radialSegments;
	
	    				var theta = u * thetaLength + thetaStart;
	
	    				var sinTheta = Math.sin( theta );
	    				var cosTheta = Math.cos( theta );
	
	    				// vertex
	    				vertex.x = radius * sinTheta;
	    				vertex.y = - v * height + halfHeight;
	    				vertex.z = radius * cosTheta;
	    				vertices.setXYZ( index, vertex.x, vertex.y, vertex.z );
	
	    				// normal
	    				normal.set( sinTheta, slope, cosTheta ).normalize();
	    				normals.setXYZ( index, normal.x, normal.y, normal.z );
	
	    				// uv
	    				uvs.setXY( index, u, 1 - v );
	
	    				// save index of vertex in respective row
	    				indexRow.push( index );
	
	    				// increase index
	    				index ++;
	
	    			}
	
	    			// now save vertices of the row in our index array
	    			indexArray.push( indexRow );
	
	    		}
	
	    		// generate indices
	
	    		for ( x = 0; x < radialSegments; x ++ ) {
	
	    			for ( y = 0; y < heightSegments; y ++ ) {
	
	    				// we use the index array to access the correct indices
	    				var i1 = indexArray[ y ][ x ];
	    				var i2 = indexArray[ y + 1 ][ x ];
	    				var i3 = indexArray[ y + 1 ][ x + 1 ];
	    				var i4 = indexArray[ y ][ x + 1 ];
	
	    				// face one
	    				indices.setX( indexOffset, i1 ); indexOffset ++;
	    				indices.setX( indexOffset, i2 ); indexOffset ++;
	    				indices.setX( indexOffset, i4 ); indexOffset ++;
	
	    				// face two
	    				indices.setX( indexOffset, i2 ); indexOffset ++;
	    				indices.setX( indexOffset, i3 ); indexOffset ++;
	    				indices.setX( indexOffset, i4 ); indexOffset ++;
	
	    				// update counters
	    				groupCount += 6;
	
	    			}
	
	    		}
	
	    		// add a group to the geometry. this will ensure multi material support
	    		scope.addGroup( groupStart, groupCount, 0 );
	
	    		// calculate new start value for groups
	    		groupStart += groupCount;
	
	    	}
	
	    	function generateCap( top ) {
	
	    		var x, centerIndexStart, centerIndexEnd;
	
	    		var uv = new Vector2();
	    		var vertex = new Vector3();
	
	    		var groupCount = 0;
	
	    		var radius = ( top === true ) ? radiusTop : radiusBottom;
	    		var sign = ( top === true ) ? 1 : - 1;
	
	    		// save the index of the first center vertex
	    		centerIndexStart = index;
	
	    		// first we generate the center vertex data of the cap.
	    		// because the geometry needs one set of uvs per face,
	    		// we must generate a center vertex per face/segment
	
	    		for ( x = 1; x <= radialSegments; x ++ ) {
	
	    			// vertex
	    			vertices.setXYZ( index, 0, halfHeight * sign, 0 );
	
	    			// normal
	    			normals.setXYZ( index, 0, sign, 0 );
	
	    			// uv
	    			uv.x = 0.5;
	    			uv.y = 0.5;
	
	    			uvs.setXY( index, uv.x, uv.y );
	
	    			// increase index
	    			index ++;
	
	    		}
	
	    		// save the index of the last center vertex
	    		centerIndexEnd = index;
	
	    		// now we generate the surrounding vertices, normals and uvs
	
	    		for ( x = 0; x <= radialSegments; x ++ ) {
	
	    			var u = x / radialSegments;
	    			var theta = u * thetaLength + thetaStart;
	
	    			var cosTheta = Math.cos( theta );
	    			var sinTheta = Math.sin( theta );
	
	    			// vertex
	    			vertex.x = radius * sinTheta;
	    			vertex.y = halfHeight * sign;
	    			vertex.z = radius * cosTheta;
	    			vertices.setXYZ( index, vertex.x, vertex.y, vertex.z );
	
	    			// normal
	    			normals.setXYZ( index, 0, sign, 0 );
	
	    			// uv
	    			uv.x = ( cosTheta * 0.5 ) + 0.5;
	    			uv.y = ( sinTheta * 0.5 * sign ) + 0.5;
	    			uvs.setXY( index, uv.x, uv.y );
	
	    			// increase index
	    			index ++;
	
	    		}
	
	    		// generate indices
	
	    		for ( x = 0; x < radialSegments; x ++ ) {
	
	    			var c = centerIndexStart + x;
	    			var i = centerIndexEnd + x;
	
	    			if ( top === true ) {
	
	    				// face top
	    				indices.setX( indexOffset, i ); indexOffset ++;
	    				indices.setX( indexOffset, i + 1 ); indexOffset ++;
	    				indices.setX( indexOffset, c ); indexOffset ++;
	
	    			} else {
	
	    				// face bottom
	    				indices.setX( indexOffset, i + 1 ); indexOffset ++;
	    				indices.setX( indexOffset, i ); indexOffset ++;
	    				indices.setX( indexOffset, c ); indexOffset ++;
	
	    			}
	
	    			// update counters
	    			groupCount += 3;
	
	    		}
	
	    		// add a group to the geometry. this will ensure multi material support
	    		scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );
	
	    		// calculate new start value for groups
	    		groupStart += groupCount;
	
	    	}
	
	    }
	
	    CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'CylinderGeometry';
	
	    	this.parameters = {
	    		radiusTop: radiusTop,
	    		radiusBottom: radiusBottom,
	    		height: height,
	    		radialSegments: radialSegments,
	    		heightSegments: heightSegments,
	    		openEnded: openEnded,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );
	    	this.mergeVertices();
	
	    }
	
	    CylinderGeometry.prototype = Object.create( Geometry.prototype );
	    CylinderGeometry.prototype.constructor = CylinderGeometry;
	
	    /**
	     * @author abelnation / http://github.com/abelnation
	     */
	
	    function ConeGeometry(
	    	radius, height,
	    	radialSegments, heightSegments,
	    	openEnded, thetaStart, thetaLength ) {
	
	    	CylinderGeometry.call( this,
	    		0, radius, height,
	    		radialSegments, heightSegments,
	    		openEnded, thetaStart, thetaLength );
	
	    	this.type = 'ConeGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		height: height,
	    		radialSegments: radialSegments,
	    		heightSegments: heightSegments,
	    		openEnded: openEnded,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    }
	
	    ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );
	    ConeGeometry.prototype.constructor = ConeGeometry;
	
	    /*
	     * @author: abelnation / http://github.com/abelnation
	     */
	
	    function ConeBufferGeometry(
	    	radius, height,
	    	radialSegments, heightSegments,
	    	openEnded, thetaStart, thetaLength ) {
	
	    	CylinderBufferGeometry.call( this,
	    		0, radius, height,
	    		radialSegments, heightSegments,
	    		openEnded, thetaStart, thetaLength );
	
	    	this.type = 'ConeBufferGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		height: height,
	    		radialSegments: radialSegments,
	    		heightSegments: heightSegments,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    }
	
	    ConeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'CircleBufferGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		segments: segments,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	radius = radius || 50;
	    	segments = segments !== undefined ? Math.max( 3, segments ) : 8;
	
	    	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	    	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;
	
	    	var vertices = segments + 2;
	
	    	var positions = new Float32Array( vertices * 3 );
	    	var normals = new Float32Array( vertices * 3 );
	    	var uvs = new Float32Array( vertices * 2 );
	
	    	// center data is already zero, but need to set a few extras
	    	normals[ 2 ] = 1.0;
	    	uvs[ 0 ] = 0.5;
	    	uvs[ 1 ] = 0.5;
	
	    	for ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {
	
	    		var segment = thetaStart + s / segments * thetaLength;
	
	    		positions[ i ] = radius * Math.cos( segment );
	    		positions[ i + 1 ] = radius * Math.sin( segment );
	
	    		normals[ i + 2 ] = 1; // normal z
	
	    		uvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;
	    		uvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;
	
	    	}
	
	    	var indices = [];
	
	    	for ( var i = 1; i <= segments; i ++ ) {
	
	    		indices.push( i, i + 1, 0 );
	
	    	}
	
	    	this.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );
	    	this.addAttribute( 'position', new BufferAttribute( positions, 3 ) );
	    	this.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );
	    	this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );
	
	    	this.boundingSphere = new Sphere( new Vector3(), radius );
	
	    }
	
	    CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;
	
	    /**
	     * @author hughes
	     */
	
	    function CircleGeometry( radius, segments, thetaStart, thetaLength ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'CircleGeometry';
	
	    	this.parameters = {
	    		radius: radius,
	    		segments: segments,
	    		thetaStart: thetaStart,
	    		thetaLength: thetaLength
	    	};
	
	    	this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );
	
	    }
	
	    CircleGeometry.prototype = Object.create( Geometry.prototype );
	    CircleGeometry.prototype.constructor = CircleGeometry;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as
	     */
	
	    function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {
	
	    	Geometry.call( this );
	
	    	this.type = 'BoxGeometry';
	
	    	this.parameters = {
	    		width: width,
	    		height: height,
	    		depth: depth,
	    		widthSegments: widthSegments,
	    		heightSegments: heightSegments,
	    		depthSegments: depthSegments
	    	};
	
	    	this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );
	    	this.mergeVertices();
	
	    }
	
	    BoxGeometry.prototype = Object.create( Geometry.prototype );
	    BoxGeometry.prototype.constructor = BoxGeometry;
	
	
	
	    var Geometries = Object.freeze({
	    	WireframeGeometry: WireframeGeometry,
	    	ParametricGeometry: ParametricGeometry,
	    	TetrahedronGeometry: TetrahedronGeometry,
	    	OctahedronGeometry: OctahedronGeometry,
	    	IcosahedronGeometry: IcosahedronGeometry,
	    	DodecahedronGeometry: DodecahedronGeometry,
	    	PolyhedronGeometry: PolyhedronGeometry,
	    	TubeGeometry: TubeGeometry,
	    	TorusKnotGeometry: TorusKnotGeometry,
	    	TorusKnotBufferGeometry: TorusKnotBufferGeometry,
	    	TorusGeometry: TorusGeometry,
	    	TorusBufferGeometry: TorusBufferGeometry,
	    	TextGeometry: TextGeometry,
	    	SphereBufferGeometry: SphereBufferGeometry,
	    	SphereGeometry: SphereGeometry,
	    	RingGeometry: RingGeometry,
	    	RingBufferGeometry: RingBufferGeometry,
	    	PlaneBufferGeometry: PlaneBufferGeometry,
	    	PlaneGeometry: PlaneGeometry,
	    	LatheGeometry: LatheGeometry,
	    	LatheBufferGeometry: LatheBufferGeometry,
	    	ShapeGeometry: ShapeGeometry,
	    	ExtrudeGeometry: ExtrudeGeometry,
	    	EdgesGeometry: EdgesGeometry,
	    	ConeGeometry: ConeGeometry,
	    	ConeBufferGeometry: ConeBufferGeometry,
	    	CylinderGeometry: CylinderGeometry,
	    	CylinderBufferGeometry: CylinderBufferGeometry,
	    	CircleBufferGeometry: CircleBufferGeometry,
	    	CircleGeometry: CircleGeometry,
	    	BoxBufferGeometry: BoxBufferGeometry,
	    	BoxGeometry: BoxGeometry
	    });
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function ShadowMaterial() {
	
	    	ShaderMaterial.call( this, {
	    		uniforms: exports.UniformsUtils.merge( [
	    			UniformsLib[ "lights" ],
	    			{
	    				opacity: { value: 1.0 }
	    			}
	    		] ),
	    		vertexShader: ShaderChunk[ 'shadow_vert' ],
	    		fragmentShader: ShaderChunk[ 'shadow_frag' ]
	    	} );
	
	    	this.lights = true;
	    	this.transparent = true;
	
	    	Object.defineProperties( this, {
	    		opacity: {
	    			enumerable: true,
	    			get: function () {
	    				return this.uniforms.opacity.value;
	    			},
	    			set: function ( value ) {
	    				this.uniforms.opacity.value = value;
	    			}
	    		}
	    	} );
	
	    }
	
	    ShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );
	    ShadowMaterial.prototype.constructor = ShadowMaterial;
	
	    ShadowMaterial.prototype.isShadowMaterial = true;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function RawShaderMaterial( parameters ) {
	
	    	ShaderMaterial.call( this, parameters );
	
	    	this.type = 'RawShaderMaterial';
	
	    }
	
	    RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );
	    RawShaderMaterial.prototype.constructor = RawShaderMaterial;
	
	    RawShaderMaterial.prototype.isRawShaderMaterial = true;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function MultiMaterial( materials ) {
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.type = 'MultiMaterial';
	
	    	this.materials = materials instanceof Array ? materials : [];
	
	    	this.visible = true;
	
	    }
	
	    MultiMaterial.prototype = {
	
	    	constructor: MultiMaterial,
	
	    	isMultiMaterial: true,
	
	    	toJSON: function ( meta ) {
	
	    		var output = {
	    			metadata: {
	    				version: 4.2,
	    				type: 'material',
	    				generator: 'MaterialExporter'
	    			},
	    			uuid: this.uuid,
	    			type: this.type,
	    			materials: []
	    		};
	
	    		var materials = this.materials;
	
	    		for ( var i = 0, l = materials.length; i < l; i ++ ) {
	
	    			var material = materials[ i ].toJSON( meta );
	    			delete material.metadata;
	
	    			output.materials.push( material );
	
	    		}
	
	    		output.visible = this.visible;
	
	    		return output;
	
	    	},
	
	    	clone: function () {
	
	    		var material = new this.constructor();
	
	    		for ( var i = 0; i < this.materials.length; i ++ ) {
	
	    			material.materials.push( this.materials[ i ].clone() );
	
	    		}
	
	    		material.visible = this.visible;
	
	    		return material;
	
	    	}
	
	    };
	
	    /**
	     * @author WestLangley / http://github.com/WestLangley
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  roughness: <float>,
	     *  metalness: <float>,
	     *  opacity: <float>,
	     *
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  lightMap: new THREE.Texture( <Image> ),
	     *  lightMapIntensity: <float>
	     *
	     *  aoMap: new THREE.Texture( <Image> ),
	     *  aoMapIntensity: <float>
	     *
	     *  emissive: <hex>,
	     *  emissiveIntensity: <float>
	     *  emissiveMap: new THREE.Texture( <Image> ),
	     *
	     *  bumpMap: new THREE.Texture( <Image> ),
	     *  bumpScale: <float>,
	     *
	     *  normalMap: new THREE.Texture( <Image> ),
	     *  normalScale: <Vector2>,
	     *
	     *  displacementMap: new THREE.Texture( <Image> ),
	     *  displacementScale: <float>,
	     *  displacementBias: <float>,
	     *
	     *  roughnessMap: new THREE.Texture( <Image> ),
	     *
	     *  metalnessMap: new THREE.Texture( <Image> ),
	     *
	     *  alphaMap: new THREE.Texture( <Image> ),
	     *
	     *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
	     *  envMapIntensity: <float>
	     *
	     *  refractionRatio: <float>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>,
	     *
	     *  skinning: <bool>,
	     *  morphTargets: <bool>,
	     *  morphNormals: <bool>
	     * }
	     */
	
	    function MeshStandardMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.defines = { 'STANDARD': '' };
	
	    	this.type = 'MeshStandardMaterial';
	
	    	this.color = new Color( 0xffffff ); // diffuse
	    	this.roughness = 0.5;
	    	this.metalness = 0.5;
	
	    	this.map = null;
	
	    	this.lightMap = null;
	    	this.lightMapIntensity = 1.0;
	
	    	this.aoMap = null;
	    	this.aoMapIntensity = 1.0;
	
	    	this.emissive = new Color( 0x000000 );
	    	this.emissiveIntensity = 1.0;
	    	this.emissiveMap = null;
	
	    	this.bumpMap = null;
	    	this.bumpScale = 1;
	
	    	this.normalMap = null;
	    	this.normalScale = new Vector2( 1, 1 );
	
	    	this.displacementMap = null;
	    	this.displacementScale = 1;
	    	this.displacementBias = 0;
	
	    	this.roughnessMap = null;
	
	    	this.metalnessMap = null;
	
	    	this.alphaMap = null;
	
	    	this.envMap = null;
	    	this.envMapIntensity = 1.0;
	
	    	this.refractionRatio = 0.98;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	    	this.wireframeLinecap = 'round';
	    	this.wireframeLinejoin = 'round';
	
	    	this.skinning = false;
	    	this.morphTargets = false;
	    	this.morphNormals = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshStandardMaterial.prototype = Object.create( Material.prototype );
	    MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;
	
	    MeshStandardMaterial.prototype.isMeshStandardMaterial = true;
	
	    MeshStandardMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.defines = { 'STANDARD': '' };
	
	    	this.color.copy( source.color );
	    	this.roughness = source.roughness;
	    	this.metalness = source.metalness;
	
	    	this.map = source.map;
	
	    	this.lightMap = source.lightMap;
	    	this.lightMapIntensity = source.lightMapIntensity;
	
	    	this.aoMap = source.aoMap;
	    	this.aoMapIntensity = source.aoMapIntensity;
	
	    	this.emissive.copy( source.emissive );
	    	this.emissiveMap = source.emissiveMap;
	    	this.emissiveIntensity = source.emissiveIntensity;
	
	    	this.bumpMap = source.bumpMap;
	    	this.bumpScale = source.bumpScale;
	
	    	this.normalMap = source.normalMap;
	    	this.normalScale.copy( source.normalScale );
	
	    	this.displacementMap = source.displacementMap;
	    	this.displacementScale = source.displacementScale;
	    	this.displacementBias = source.displacementBias;
	
	    	this.roughnessMap = source.roughnessMap;
	
	    	this.metalnessMap = source.metalnessMap;
	
	    	this.alphaMap = source.alphaMap;
	
	    	this.envMap = source.envMap;
	    	this.envMapIntensity = source.envMapIntensity;
	
	    	this.refractionRatio = source.refractionRatio;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	    	this.wireframeLinecap = source.wireframeLinecap;
	    	this.wireframeLinejoin = source.wireframeLinejoin;
	
	    	this.skinning = source.skinning;
	    	this.morphTargets = source.morphTargets;
	    	this.morphNormals = source.morphNormals;
	
	    	return this;
	
	    };
	
	    /**
	     * @author WestLangley / http://github.com/WestLangley
	     *
	     * parameters = {
	     *  reflectivity: <float>
	     * }
	     */
	
	    function MeshPhysicalMaterial( parameters ) {
	
	    	MeshStandardMaterial.call( this );
	
	    	this.defines = { 'PHYSICAL': '' };
	
	    	this.type = 'MeshPhysicalMaterial';
	
	    	this.reflectivity = 0.5; // maps to F0 = 0.04
	
	    	this.clearCoat = 0.0;
	    	this.clearCoatRoughness = 0.0;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );
	    MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;
	
	    MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;
	
	    MeshPhysicalMaterial.prototype.copy = function ( source ) {
	
	    	MeshStandardMaterial.prototype.copy.call( this, source );
	
	    	this.defines = { 'PHYSICAL': '' };
	
	    	this.reflectivity = source.reflectivity;
	
	    	this.clearCoat = source.clearCoat;
	    	this.clearCoatRoughness = source.clearCoatRoughness;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  specular: <hex>,
	     *  shininess: <float>,
	     *  opacity: <float>,
	     *
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  lightMap: new THREE.Texture( <Image> ),
	     *  lightMapIntensity: <float>
	     *
	     *  aoMap: new THREE.Texture( <Image> ),
	     *  aoMapIntensity: <float>
	     *
	     *  emissive: <hex>,
	     *  emissiveIntensity: <float>
	     *  emissiveMap: new THREE.Texture( <Image> ),
	     *
	     *  bumpMap: new THREE.Texture( <Image> ),
	     *  bumpScale: <float>,
	     *
	     *  normalMap: new THREE.Texture( <Image> ),
	     *  normalScale: <Vector2>,
	     *
	     *  displacementMap: new THREE.Texture( <Image> ),
	     *  displacementScale: <float>,
	     *  displacementBias: <float>,
	     *
	     *  specularMap: new THREE.Texture( <Image> ),
	     *
	     *  alphaMap: new THREE.Texture( <Image> ),
	     *
	     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
	     *  combine: THREE.Multiply,
	     *  reflectivity: <float>,
	     *  refractionRatio: <float>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>,
	     *
	     *  skinning: <bool>,
	     *  morphTargets: <bool>,
	     *  morphNormals: <bool>
	     * }
	     */
	
	    function MeshPhongMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'MeshPhongMaterial';
	
	    	this.color = new Color( 0xffffff ); // diffuse
	    	this.specular = new Color( 0x111111 );
	    	this.shininess = 30;
	
	    	this.map = null;
	
	    	this.lightMap = null;
	    	this.lightMapIntensity = 1.0;
	
	    	this.aoMap = null;
	    	this.aoMapIntensity = 1.0;
	
	    	this.emissive = new Color( 0x000000 );
	    	this.emissiveIntensity = 1.0;
	    	this.emissiveMap = null;
	
	    	this.bumpMap = null;
	    	this.bumpScale = 1;
	
	    	this.normalMap = null;
	    	this.normalScale = new Vector2( 1, 1 );
	
	    	this.displacementMap = null;
	    	this.displacementScale = 1;
	    	this.displacementBias = 0;
	
	    	this.specularMap = null;
	
	    	this.alphaMap = null;
	
	    	this.envMap = null;
	    	this.combine = MultiplyOperation;
	    	this.reflectivity = 1;
	    	this.refractionRatio = 0.98;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	    	this.wireframeLinecap = 'round';
	    	this.wireframeLinejoin = 'round';
	
	    	this.skinning = false;
	    	this.morphTargets = false;
	    	this.morphNormals = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshPhongMaterial.prototype = Object.create( Material.prototype );
	    MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;
	
	    MeshPhongMaterial.prototype.isMeshPhongMaterial = true;
	
	    MeshPhongMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	    	this.specular.copy( source.specular );
	    	this.shininess = source.shininess;
	
	    	this.map = source.map;
	
	    	this.lightMap = source.lightMap;
	    	this.lightMapIntensity = source.lightMapIntensity;
	
	    	this.aoMap = source.aoMap;
	    	this.aoMapIntensity = source.aoMapIntensity;
	
	    	this.emissive.copy( source.emissive );
	    	this.emissiveMap = source.emissiveMap;
	    	this.emissiveIntensity = source.emissiveIntensity;
	
	    	this.bumpMap = source.bumpMap;
	    	this.bumpScale = source.bumpScale;
	
	    	this.normalMap = source.normalMap;
	    	this.normalScale.copy( source.normalScale );
	
	    	this.displacementMap = source.displacementMap;
	    	this.displacementScale = source.displacementScale;
	    	this.displacementBias = source.displacementBias;
	
	    	this.specularMap = source.specularMap;
	
	    	this.alphaMap = source.alphaMap;
	
	    	this.envMap = source.envMap;
	    	this.combine = source.combine;
	    	this.reflectivity = source.reflectivity;
	    	this.refractionRatio = source.refractionRatio;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	    	this.wireframeLinecap = source.wireframeLinecap;
	    	this.wireframeLinejoin = source.wireframeLinejoin;
	
	    	this.skinning = source.skinning;
	    	this.morphTargets = source.morphTargets;
	    	this.morphNormals = source.morphNormals;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     *
	     * parameters = {
	     *  opacity: <float>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>
	     * }
	     */
	
	    function MeshNormalMaterial( parameters ) {
	
	    	Material.call( this, parameters );
	
	    	this.type = 'MeshNormalMaterial';
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	
	    	this.fog = false;
	    	this.lights = false;
	    	this.morphTargets = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshNormalMaterial.prototype = Object.create( Material.prototype );
	    MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;
	
	    MeshNormalMaterial.prototype.isMeshNormalMaterial = true;
	
	    MeshNormalMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *
	     *  map: new THREE.Texture( <Image> ),
	     *
	     *  lightMap: new THREE.Texture( <Image> ),
	     *  lightMapIntensity: <float>
	     *
	     *  aoMap: new THREE.Texture( <Image> ),
	     *  aoMapIntensity: <float>
	     *
	     *  emissive: <hex>,
	     *  emissiveIntensity: <float>
	     *  emissiveMap: new THREE.Texture( <Image> ),
	     *
	     *  specularMap: new THREE.Texture( <Image> ),
	     *
	     *  alphaMap: new THREE.Texture( <Image> ),
	     *
	     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
	     *  combine: THREE.Multiply,
	     *  reflectivity: <float>,
	     *  refractionRatio: <float>,
	     *
	     *  wireframe: <boolean>,
	     *  wireframeLinewidth: <float>,
	     *
	     *  skinning: <bool>,
	     *  morphTargets: <bool>,
	     *  morphNormals: <bool>
	     * }
	     */
	
	    function MeshLambertMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'MeshLambertMaterial';
	
	    	this.color = new Color( 0xffffff ); // diffuse
	
	    	this.map = null;
	
	    	this.lightMap = null;
	    	this.lightMapIntensity = 1.0;
	
	    	this.aoMap = null;
	    	this.aoMapIntensity = 1.0;
	
	    	this.emissive = new Color( 0x000000 );
	    	this.emissiveIntensity = 1.0;
	    	this.emissiveMap = null;
	
	    	this.specularMap = null;
	
	    	this.alphaMap = null;
	
	    	this.envMap = null;
	    	this.combine = MultiplyOperation;
	    	this.reflectivity = 1;
	    	this.refractionRatio = 0.98;
	
	    	this.wireframe = false;
	    	this.wireframeLinewidth = 1;
	    	this.wireframeLinecap = 'round';
	    	this.wireframeLinejoin = 'round';
	
	    	this.skinning = false;
	    	this.morphTargets = false;
	    	this.morphNormals = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    MeshLambertMaterial.prototype = Object.create( Material.prototype );
	    MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;
	
	    MeshLambertMaterial.prototype.isMeshLambertMaterial = true;
	
	    MeshLambertMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	
	    	this.map = source.map;
	
	    	this.lightMap = source.lightMap;
	    	this.lightMapIntensity = source.lightMapIntensity;
	
	    	this.aoMap = source.aoMap;
	    	this.aoMapIntensity = source.aoMapIntensity;
	
	    	this.emissive.copy( source.emissive );
	    	this.emissiveMap = source.emissiveMap;
	    	this.emissiveIntensity = source.emissiveIntensity;
	
	    	this.specularMap = source.specularMap;
	
	    	this.alphaMap = source.alphaMap;
	
	    	this.envMap = source.envMap;
	    	this.combine = source.combine;
	    	this.reflectivity = source.reflectivity;
	    	this.refractionRatio = source.refractionRatio;
	
	    	this.wireframe = source.wireframe;
	    	this.wireframeLinewidth = source.wireframeLinewidth;
	    	this.wireframeLinecap = source.wireframeLinecap;
	    	this.wireframeLinejoin = source.wireframeLinejoin;
	
	    	this.skinning = source.skinning;
	    	this.morphTargets = source.morphTargets;
	    	this.morphNormals = source.morphNormals;
	
	    	return this;
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     *
	     * parameters = {
	     *  color: <hex>,
	     *  opacity: <float>,
	     *
	     *  linewidth: <float>,
	     *
	     *  scale: <float>,
	     *  dashSize: <float>,
	     *  gapSize: <float>
	     * }
	     */
	
	    function LineDashedMaterial( parameters ) {
	
	    	Material.call( this );
	
	    	this.type = 'LineDashedMaterial';
	
	    	this.color = new Color( 0xffffff );
	
	    	this.linewidth = 1;
	
	    	this.scale = 1;
	    	this.dashSize = 3;
	    	this.gapSize = 1;
	
	    	this.lights = false;
	
	    	this.setValues( parameters );
	
	    }
	
	    LineDashedMaterial.prototype = Object.create( Material.prototype );
	    LineDashedMaterial.prototype.constructor = LineDashedMaterial;
	
	    LineDashedMaterial.prototype.isLineDashedMaterial = true;
	
	    LineDashedMaterial.prototype.copy = function ( source ) {
	
	    	Material.prototype.copy.call( this, source );
	
	    	this.color.copy( source.color );
	
	    	this.linewidth = source.linewidth;
	
	    	this.scale = source.scale;
	    	this.dashSize = source.dashSize;
	    	this.gapSize = source.gapSize;
	
	    	return this;
	
	    };
	
	
	
	    var Materials = Object.freeze({
	    	ShadowMaterial: ShadowMaterial,
	    	SpriteMaterial: SpriteMaterial,
	    	RawShaderMaterial: RawShaderMaterial,
	    	ShaderMaterial: ShaderMaterial,
	    	PointsMaterial: PointsMaterial,
	    	MultiMaterial: MultiMaterial,
	    	MeshPhysicalMaterial: MeshPhysicalMaterial,
	    	MeshStandardMaterial: MeshStandardMaterial,
	    	MeshPhongMaterial: MeshPhongMaterial,
	    	MeshNormalMaterial: MeshNormalMaterial,
	    	MeshLambertMaterial: MeshLambertMaterial,
	    	MeshDepthMaterial: MeshDepthMaterial,
	    	MeshBasicMaterial: MeshBasicMaterial,
	    	LineDashedMaterial: LineDashedMaterial,
	    	LineBasicMaterial: LineBasicMaterial,
	    	Material: Material
	    });
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    exports.Cache = {
	
	    	enabled: false,
	
	    	files: {},
	
	    	add: function ( key, file ) {
	
	    		if ( this.enabled === false ) return;
	
	    		// console.log( 'THREE.Cache', 'Adding key:', key );
	
	    		this.files[ key ] = file;
	
	    	},
	
	    	get: function ( key ) {
	
	    		if ( this.enabled === false ) return;
	
	    		// console.log( 'THREE.Cache', 'Checking key:', key );
	
	    		return this.files[ key ];
	
	    	},
	
	    	remove: function ( key ) {
	
	    		delete this.files[ key ];
	
	    	},
	
	    	clear: function () {
	
	    		this.files = {};
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function LoadingManager( onLoad, onProgress, onError ) {
	
	    	var scope = this;
	
	    	var isLoading = false, itemsLoaded = 0, itemsTotal = 0;
	
	    	this.onStart = undefined;
	    	this.onLoad = onLoad;
	    	this.onProgress = onProgress;
	    	this.onError = onError;
	
	    	this.itemStart = function ( url ) {
	
	    		itemsTotal ++;
	
	    		if ( isLoading === false ) {
	
	    			if ( scope.onStart !== undefined ) {
	
	    				scope.onStart( url, itemsLoaded, itemsTotal );
	
	    			}
	
	    		}
	
	    		isLoading = true;
	
	    	};
	
	    	this.itemEnd = function ( url ) {
	
	    		itemsLoaded ++;
	
	    		if ( scope.onProgress !== undefined ) {
	
	    			scope.onProgress( url, itemsLoaded, itemsTotal );
	
	    		}
	
	    		if ( itemsLoaded === itemsTotal ) {
	
	    			isLoading = false;
	
	    			if ( scope.onLoad !== undefined ) {
	
	    				scope.onLoad();
	
	    			}
	
	    		}
	
	    	};
	
	    	this.itemError = function ( url ) {
	
	    		if ( scope.onError !== undefined ) {
	
	    			scope.onError( url );
	
	    		}
	
	    	};
	
	    }
	
	    exports.DefaultLoadingManager = new LoadingManager();
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function XHRLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( XHRLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		if ( this.path !== undefined ) url = this.path + url;
	
	    		var scope = this;
	
	    		var cached = exports.Cache.get( url );
	
	    		if ( cached !== undefined ) {
	
	    			scope.manager.itemStart( url );
	
	    			setTimeout( function () {
	
	    				if ( onLoad ) onLoad( cached );
	
	    				scope.manager.itemEnd( url );
	
	    			}, 0 );
	
	    			return cached;
	
	    		}
	
	    		var request = new XMLHttpRequest();
	    		request.open( 'GET', url, true );
	
	    		request.addEventListener( 'load', function ( event ) {
	
	    			var response = event.target.response;
	
	    			exports.Cache.add( url, response );
	
	    			if ( this.status === 200 ) {
	
	    				if ( onLoad ) onLoad( response );
	
	    				scope.manager.itemEnd( url );
	
	    			} else if ( this.status === 0 ) {
	
	    				// Some browsers return HTTP Status 0 when using non-http protocol
	    				// e.g. 'file://' or 'data://'. Handle as success.
	
	    				console.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );
	
	    				if ( onLoad ) onLoad( response );
	
	    				scope.manager.itemEnd( url );
	
	    			} else {
	
	    				if ( onError ) onError( event );
	
	    				scope.manager.itemError( url );
	
	    			}
	
	    		}, false );
	
	    		if ( onProgress !== undefined ) {
	
	    			request.addEventListener( 'progress', function ( event ) {
	
	    				onProgress( event );
	
	    			}, false );
	
	    		}
	
	    		request.addEventListener( 'error', function ( event ) {
	
	    			if ( onError ) onError( event );
	
	    			scope.manager.itemError( url );
	
	    		}, false );
	
	    		if ( this.responseType !== undefined ) request.responseType = this.responseType;
	    		if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;
	
	    		if ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );
	
	    		request.send( null );
	
	    		scope.manager.itemStart( url );
	
	    		return request;
	
	    	},
	
	    	setPath: function ( value ) {
	
	    		this.path = value;
	    		return this;
	
	    	},
	
	    	setResponseType: function ( value ) {
	
	    		this.responseType = value;
	    		return this;
	
	    	},
	
	    	setWithCredentials: function ( value ) {
	
	    		this.withCredentials = value;
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     *
	     * Abstract Base class to block based textures loader (dds, pvr, ...)
	     */
	
	    function CompressedTextureLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    	// override in sub classes
	    	this._parser = null;
	
	    }
	
	    Object.assign( CompressedTextureLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var images = [];
	
	    		var texture = new CompressedTexture();
	    		texture.image = images;
	
	    		var loader = new XHRLoader( this.manager );
	    		loader.setPath( this.path );
	    		loader.setResponseType( 'arraybuffer' );
	
	    		function loadTexture( i ) {
	
	    			loader.load( url[ i ], function ( buffer ) {
	
	    				var texDatas = scope._parser( buffer, true );
	
	    				images[ i ] = {
	    					width: texDatas.width,
	    					height: texDatas.height,
	    					format: texDatas.format,
	    					mipmaps: texDatas.mipmaps
	    				};
	
	    				loaded += 1;
	
	    				if ( loaded === 6 ) {
	
	    					if ( texDatas.mipmapCount === 1 )
	    						texture.minFilter = LinearFilter;
	
	    					texture.format = texDatas.format;
	    					texture.needsUpdate = true;
	
	    					if ( onLoad ) onLoad( texture );
	
	    				}
	
	    			}, onProgress, onError );
	
	    		}
	
	    		if ( Array.isArray( url ) ) {
	
	    			var loaded = 0;
	
	    			for ( var i = 0, il = url.length; i < il; ++ i ) {
	
	    				loadTexture( i );
	
	    			}
	
	    		} else {
	
	    			// compressed cubemap texture stored in a single DDS file
	
	    			loader.load( url, function ( buffer ) {
	
	    				var texDatas = scope._parser( buffer, true );
	
	    				if ( texDatas.isCubemap ) {
	
	    					var faces = texDatas.mipmaps.length / texDatas.mipmapCount;
	
	    					for ( var f = 0; f < faces; f ++ ) {
	
	    						images[ f ] = { mipmaps : [] };
	
	    						for ( var i = 0; i < texDatas.mipmapCount; i ++ ) {
	
	    							images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );
	    							images[ f ].format = texDatas.format;
	    							images[ f ].width = texDatas.width;
	    							images[ f ].height = texDatas.height;
	
	    						}
	
	    					}
	
	    				} else {
	
	    					texture.image.width = texDatas.width;
	    					texture.image.height = texDatas.height;
	    					texture.mipmaps = texDatas.mipmaps;
	
	    				}
	
	    				if ( texDatas.mipmapCount === 1 ) {
	
	    					texture.minFilter = LinearFilter;
	
	    				}
	
	    				texture.format = texDatas.format;
	    				texture.needsUpdate = true;
	
	    				if ( onLoad ) onLoad( texture );
	
	    			}, onProgress, onError );
	
	    		}
	
	    		return texture;
	
	    	},
	
	    	setPath: function ( value ) {
	
	    		this.path = value;
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author Nikos M. / https://github.com/foo123/
	     *
	     * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
	     */
	
	    var DataTextureLoader = BinaryTextureLoader;
	    function BinaryTextureLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    	// override in sub classes
	    	this._parser = null;
	
	    }
	
	    Object.assign( BinaryTextureLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var texture = new DataTexture();
	
	    		var loader = new XHRLoader( this.manager );
	    		loader.setResponseType( 'arraybuffer' );
	
	    		loader.load( url, function ( buffer ) {
	
	    			var texData = scope._parser( buffer );
	
	    			if ( ! texData ) return;
	
	    			if ( undefined !== texData.image ) {
	
	    				texture.image = texData.image;
	
	    			} else if ( undefined !== texData.data ) {
	
	    				texture.image.width = texData.width;
	    				texture.image.height = texData.height;
	    				texture.image.data = texData.data;
	
	    			}
	
	    			texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;
	    			texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;
	
	    			texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;
	    			texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;
	
	    			texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;
	
	    			if ( undefined !== texData.format ) {
	
	    				texture.format = texData.format;
	
	    			}
	    			if ( undefined !== texData.type ) {
	
	    				texture.type = texData.type;
	
	    			}
	
	    			if ( undefined !== texData.mipmaps ) {
	
	    				texture.mipmaps = texData.mipmaps;
	
	    			}
	
	    			if ( 1 === texData.mipmapCount ) {
	
	    				texture.minFilter = LinearFilter;
	
	    			}
	
	    			texture.needsUpdate = true;
	
	    			if ( onLoad ) onLoad( texture, texData );
	
	    		}, onProgress, onError );
	
	
	    		return texture;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function ImageLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( ImageLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );
	    		image.onload = function () {
	
	    			image.onload = null;
	
	    			URL.revokeObjectURL( image.src );
	
	    			if ( onLoad ) onLoad( image );
	
	    			scope.manager.itemEnd( url );
	
	    		};
	
	    		if ( url.indexOf( 'data:' ) === 0 ) {
	
	    			image.src = url;
	
	    		} else {
	
	    			var loader = new XHRLoader();
	    			loader.setPath( this.path );
	    			loader.setResponseType( 'blob' );
	    			loader.setWithCredentials( this.withCredentials );
	    			loader.load( url, function ( blob ) {
	
	    				image.src = URL.createObjectURL( blob );
	
	    			}, onProgress, onError );
	
	    		}
	
	    		scope.manager.itemStart( url );
	
	    		return image;
	
	    	},
	
	    	setCrossOrigin: function ( value ) {
	
	    		this.crossOrigin = value;
	    		return this;
	
	    	},
	
	    	setWithCredentials: function ( value ) {
	
	    		this.withCredentials = value;
	    		return this;
	
	    	},
	
	    	setPath: function ( value ) {
	
	    		this.path = value;
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function CubeTextureLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( CubeTextureLoader.prototype, {
	
	    	load: function ( urls, onLoad, onProgress, onError ) {
	
	    		var texture = new CubeTexture();
	
	    		var loader = new ImageLoader( this.manager );
	    		loader.setCrossOrigin( this.crossOrigin );
	    		loader.setPath( this.path );
	
	    		var loaded = 0;
	
	    		function loadTexture( i ) {
	
	    			loader.load( urls[ i ], function ( image ) {
	
	    				texture.images[ i ] = image;
	
	    				loaded ++;
	
	    				if ( loaded === 6 ) {
	
	    					texture.needsUpdate = true;
	
	    					if ( onLoad ) onLoad( texture );
	
	    				}
	
	    			}, undefined, onError );
	
	    		}
	
	    		for ( var i = 0; i < urls.length; ++ i ) {
	
	    			loadTexture( i );
	
	    		}
	
	    		return texture;
	
	    	},
	
	    	setCrossOrigin: function ( value ) {
	
	    		this.crossOrigin = value;
	    		return this;
	
	    	},
	
	    	setPath: function ( value ) {
	
	    		this.path = value;
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function TextureLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( TextureLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var texture = new Texture();
	
	    		var loader = new ImageLoader( this.manager );
	    		loader.setCrossOrigin( this.crossOrigin );
	    		loader.setWithCredentials( this.withCredentials );
	    		loader.setPath( this.path );
	    		loader.load( url, function ( image ) {
	
	    			// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
	    			var isJPEG = url.search( /\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\:image\/jpeg/ ) === 0;
	
	    			texture.format = isJPEG ? RGBFormat : RGBAFormat;
	    			texture.image = image;
	    			texture.needsUpdate = true;
	
	    			if ( onLoad !== undefined ) {
	
	    				onLoad( texture );
	
	    			}
	
	    		}, onProgress, onError );
	
	    		return texture;
	
	    	},
	
	    	setCrossOrigin: function ( value ) {
	
	    		this.crossOrigin = value;
	    		return this;
	
	    	},
	
	    	setWithCredentials: function ( value ) {
	
	    		this.withCredentials = value;
	    		return this;
	
	    	},
	
	    	setPath: function ( value ) {
	
	    		this.path = value;
	    		return this;
	
	    	}
	
	
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Light( color, intensity ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Light';
	
	    	this.color = new Color( color );
	    	this.intensity = intensity !== undefined ? intensity : 1;
	
	    	this.receiveShadow = undefined;
	
	    }
	
	    Light.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Light,
	
	    	isLight: true,
	
	    	copy: function ( source ) {
	
	    		Object3D.prototype.copy.call( this, source );
	
	    		this.color.copy( source.color );
	    		this.intensity = source.intensity;
	
	    		return this;
	
	    	},
	
	    	toJSON: function ( meta ) {
	
	    		var data = Object3D.prototype.toJSON.call( this, meta );
	
	    		data.object.color = this.color.getHex();
	    		data.object.intensity = this.intensity;
	
	    		if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();
	
	    		if ( this.distance !== undefined ) data.object.distance = this.distance;
	    		if ( this.angle !== undefined ) data.object.angle = this.angle;
	    		if ( this.decay !== undefined ) data.object.decay = this.decay;
	    		if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;
	
	    		if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();
	
	    		return data;
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function HemisphereLight( skyColor, groundColor, intensity ) {
	
	    	Light.call( this, skyColor, intensity );
	
	    	this.type = 'HemisphereLight';
	
	    	this.castShadow = undefined;
	
	    	this.position.copy( Object3D.DefaultUp );
	    	this.updateMatrix();
	
	    	this.groundColor = new Color( groundColor );
	
	    }
	
	    HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {
	
	    	constructor: HemisphereLight,
	
	    	isHemisphereLight: true,
	
	    	copy: function ( source ) {
	
	    		Light.prototype.copy.call( this, source );
	
	    		this.groundColor.copy( source.groundColor );
	
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function LightShadow( camera ) {
	
	    	this.camera = camera;
	
	    	this.bias = 0;
	    	this.radius = 1;
	
	    	this.mapSize = new Vector2( 512, 512 );
	
	    	this.map = null;
	    	this.matrix = new Matrix4();
	
	    }
	
	    Object.assign( LightShadow.prototype, {
	
	    	copy: function ( source ) {
	
	    		this.camera = source.camera.clone();
	
	    		this.bias = source.bias;
	    		this.radius = source.radius;
	
	    		this.mapSize.copy( source.mapSize );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	toJSON: function () {
	
	    		var object = {};
	
	    		if ( this.bias !== 0 ) object.bias = this.bias;
	    		if ( this.radius !== 1 ) object.radius = this.radius;
	    		if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();
	
	    		object.camera = this.camera.toJSON( false ).object;
	    		delete object.camera.matrix;
	
	    		return object;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function SpotLightShadow() {
	
	    	LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );
	
	    }
	
	    SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {
	
	    	constructor: SpotLightShadow,
	
	    	isSpotLightShadow: true,
	
	    	update: function ( light ) {
	
	    		var fov = exports.Math.RAD2DEG * 2 * light.angle;
	    		var aspect = this.mapSize.width / this.mapSize.height;
	    		var far = light.distance || 500;
	
	    		var camera = this.camera;
	
	    		if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {
	
	    			camera.fov = fov;
	    			camera.aspect = aspect;
	    			camera.far = far;
	    			camera.updateProjectionMatrix();
	
	    		}
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function SpotLight( color, intensity, distance, angle, penumbra, decay ) {
	
	    	Light.call( this, color, intensity );
	
	    	this.type = 'SpotLight';
	
	    	this.position.copy( Object3D.DefaultUp );
	    	this.updateMatrix();
	
	    	this.target = new Object3D();
	
	    	Object.defineProperty( this, 'power', {
	    		get: function () {
	    			// intensity = power per solid angle.
	    			// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
	    			return this.intensity * Math.PI;
	    		},
	    		set: function ( power ) {
	    			// intensity = power per solid angle.
	    			// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
	    			this.intensity = power / Math.PI;
	    		}
	    	} );
	
	    	this.distance = ( distance !== undefined ) ? distance : 0;
	    	this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;
	    	this.penumbra = ( penumbra !== undefined ) ? penumbra : 0;
	    	this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.
	
	    	this.shadow = new SpotLightShadow();
	
	    }
	
	    SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {
	
	    	constructor: SpotLight,
	
	    	isSpotLight: true,
	
	    	copy: function ( source ) {
	
	    		Light.prototype.copy.call( this, source );
	
	    		this.distance = source.distance;
	    		this.angle = source.angle;
	    		this.penumbra = source.penumbra;
	    		this.decay = source.decay;
	
	    		this.target = source.target.clone();
	
	    		this.shadow = source.shadow.clone();
	
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	
	    function PointLight( color, intensity, distance, decay ) {
	
	    	Light.call( this, color, intensity );
	
	    	this.type = 'PointLight';
	
	    	Object.defineProperty( this, 'power', {
	    		get: function () {
	    			// intensity = power per solid angle.
	    			// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
	    			return this.intensity * 4 * Math.PI;
	
	    		},
	    		set: function ( power ) {
	    			// intensity = power per solid angle.
	    			// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
	    			this.intensity = power / ( 4 * Math.PI );
	    		}
	    	} );
	
	    	this.distance = ( distance !== undefined ) ? distance : 0;
	    	this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.
	
	    	this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );
	
	    }
	
	    PointLight.prototype = Object.assign( Object.create( Light.prototype ), {
	
	    	constructor: PointLight,
	
	    	isPointLight: true,
	
	    	copy: function ( source ) {
	
	    		Light.prototype.copy.call( this, source );
	
	    		this.distance = source.distance;
	    		this.decay = source.decay;
	
	    		this.shadow = source.shadow.clone();
	
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function DirectionalLightShadow( light ) {
	
	    	LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );
	
	    }
	
	    DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {
	
	    	constructor: DirectionalLightShadow
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function DirectionalLight( color, intensity ) {
	
	    	Light.call( this, color, intensity );
	
	    	this.type = 'DirectionalLight';
	
	    	this.position.copy( Object3D.DefaultUp );
	    	this.updateMatrix();
	
	    	this.target = new Object3D();
	
	    	this.shadow = new DirectionalLightShadow();
	
	    }
	
	    DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {
	
	    	constructor: DirectionalLight,
	
	    	isDirectionalLight: true,
	
	    	copy: function ( source ) {
	
	    		Light.prototype.copy.call( this, source );
	
	    		this.target = source.target.clone();
	
	    		this.shadow = source.shadow.clone();
	
	    		return this;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function AmbientLight( color, intensity ) {
	
	    	Light.call( this, color, intensity );
	
	    	this.type = 'AmbientLight';
	
	    	this.castShadow = undefined;
	
	    }
	
	    AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {
	
	    	constructor: AmbientLight,
	
	    	isAmbientLight: true,
	
	    } );
	
	    /**
	     * @author tschw
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     */
	
	    exports.AnimationUtils = {
	
	    	// same as Array.prototype.slice, but also works on typed arrays
	    	arraySlice: function( array, from, to ) {
	
	    		if ( exports.AnimationUtils.isTypedArray( array ) ) {
	
	    			return new array.constructor( array.subarray( from, to ) );
	
	    		}
	
	    		return array.slice( from, to );
	
	    	},
	
	    	// converts an array to a specific type
	    	convertArray: function( array, type, forceClone ) {
	
	    		if ( ! array || // let 'undefined' and 'null' pass
	    				! forceClone && array.constructor === type ) return array;
	
	    		if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {
	
	    			return new type( array ); // create typed array
	
	    		}
	
	    		return Array.prototype.slice.call( array ); // create Array
	
	    	},
	
	    	isTypedArray: function( object ) {
	
	    		return ArrayBuffer.isView( object ) &&
	    				! ( object instanceof DataView );
	
	    	},
	
	    	// returns an array by which times and values can be sorted
	    	getKeyframeOrder: function( times ) {
	
	    		function compareTime( i, j ) {
	
	    			return times[ i ] - times[ j ];
	
	    		}
	
	    		var n = times.length;
	    		var result = new Array( n );
	    		for ( var i = 0; i !== n; ++ i ) result[ i ] = i;
	
	    		result.sort( compareTime );
	
	    		return result;
	
	    	},
	
	    	// uses the array previously returned by 'getKeyframeOrder' to sort data
	    	sortedArray: function( values, stride, order ) {
	
	    		var nValues = values.length;
	    		var result = new values.constructor( nValues );
	
	    		for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {
	
	    			var srcOffset = order[ i ] * stride;
	
	    			for ( var j = 0; j !== stride; ++ j ) {
	
	    				result[ dstOffset ++ ] = values[ srcOffset + j ];
	
	    			}
	
	    		}
	
	    		return result;
	
	    	},
	
	    	// function for parsing AOS keyframe formats
	    	flattenJSON: function( jsonKeys, times, values, valuePropertyName ) {
	
	    		var i = 1, key = jsonKeys[ 0 ];
	
	    		while ( key !== undefined && key[ valuePropertyName ] === undefined ) {
	
	    			key = jsonKeys[ i ++ ];
	
	    		}
	
	    		if ( key === undefined ) return; // no data
	
	    		var value = key[ valuePropertyName ];
	    		if ( value === undefined ) return; // no data
	
	    		if ( Array.isArray( value ) ) {
	
	    			do {
	
	    				value = key[ valuePropertyName ];
	
	    				if ( value !== undefined ) {
	
	    					times.push( key.time );
	    					values.push.apply( values, value ); // push all elements
	
	    				}
	
	    				key = jsonKeys[ i ++ ];
	
	    			} while ( key !== undefined );
	
	    		} else if ( value.toArray !== undefined ) {
	    			// ...assume THREE.Math-ish
	
	    			do {
	
	    				value = key[ valuePropertyName ];
	
	    				if ( value !== undefined ) {
	
	    					times.push( key.time );
	    					value.toArray( values, values.length );
	
	    				}
	
	    				key = jsonKeys[ i ++ ];
	
	    			} while ( key !== undefined );
	
	    		} else {
	    			// otherwise push as-is
	
	    			do {
	
	    				value = key[ valuePropertyName ];
	
	    				if ( value !== undefined ) {
	
	    					times.push( key.time );
	    					values.push( value );
	
	    				}
	
	    				key = jsonKeys[ i ++ ];
	
	    			} while ( key !== undefined );
	
	    		}
	
	    	}
	
	    };
	
	    /**
	     * Abstract base class of interpolants over parametric samples.
	     *
	     * The parameter domain is one dimensional, typically the time or a path
	     * along a curve defined by the data.
	     *
	     * The sample values can have any dimensionality and derived classes may
	     * apply special interpretations to the data.
	     *
	     * This class provides the interval seek in a Template Method, deferring
	     * the actual interpolation to derived classes.
	     *
	     * Time complexity is O(1) for linear access crossing at most two points
	     * and O(log N) for random access, where N is the number of positions.
	     *
	     * References:
	     *
	     * 		http://www.oodesign.com/template-method-pattern.html
	     *
	     * @author tschw
	     */
	
	    function Interpolant(
	    		parameterPositions, sampleValues, sampleSize, resultBuffer ) {
	
	    	this.parameterPositions = parameterPositions;
	    	this._cachedIndex = 0;
	
	    	this.resultBuffer = resultBuffer !== undefined ?
	    			resultBuffer : new sampleValues.constructor( sampleSize );
	    	this.sampleValues = sampleValues;
	    	this.valueSize = sampleSize;
	
	    }
	
	    Interpolant.prototype = {
	
	    	constructor: Interpolant,
	
	    	evaluate: function( t ) {
	
	    		var pp = this.parameterPositions,
	    			i1 = this._cachedIndex,
	
	    			t1 = pp[   i1   ],
	    			t0 = pp[ i1 - 1 ];
	
	    		validate_interval: {
	
	    			seek: {
	
	    				var right;
	
	    				linear_scan: {
	    //- See http://jsperf.com/comparison-to-undefined/3
	    //- slower code:
	    //-
	    //- 				if ( t >= t1 || t1 === undefined ) {
	    					forward_scan: if ( ! ( t < t1 ) ) {
	
	    						for ( var giveUpAt = i1 + 2; ;) {
	
	    							if ( t1 === undefined ) {
	
	    								if ( t < t0 ) break forward_scan;
	
	    								// after end
	
	    								i1 = pp.length;
	    								this._cachedIndex = i1;
	    								return this.afterEnd_( i1 - 1, t, t0 );
	
	    							}
	
	    							if ( i1 === giveUpAt ) break; // this loop
	
	    							t0 = t1;
	    							t1 = pp[ ++ i1 ];
	
	    							if ( t < t1 ) {
	
	    								// we have arrived at the sought interval
	    								break seek;
	
	    							}
	
	    						}
	
	    						// prepare binary search on the right side of the index
	    						right = pp.length;
	    						break linear_scan;
	
	    					}
	
	    //- slower code:
	    //-					if ( t < t0 || t0 === undefined ) {
	    					if ( ! ( t >= t0 ) ) {
	
	    						// looping?
	
	    						var t1global = pp[ 1 ];
	
	    						if ( t < t1global ) {
	
	    							i1 = 2; // + 1, using the scan for the details
	    							t0 = t1global;
	
	    						}
	
	    						// linear reverse scan
	
	    						for ( var giveUpAt = i1 - 2; ;) {
	
	    							if ( t0 === undefined ) {
	
	    								// before start
	
	    								this._cachedIndex = 0;
	    								return this.beforeStart_( 0, t, t1 );
	
	    							}
	
	    							if ( i1 === giveUpAt ) break; // this loop
	
	    							t1 = t0;
	    							t0 = pp[ -- i1 - 1 ];
	
	    							if ( t >= t0 ) {
	
	    								// we have arrived at the sought interval
	    								break seek;
	
	    							}
	
	    						}
	
	    						// prepare binary search on the left side of the index
	    						right = i1;
	    						i1 = 0;
	    						break linear_scan;
	
	    					}
	
	    					// the interval is valid
	
	    					break validate_interval;
	
	    				} // linear scan
	
	    				// binary search
	
	    				while ( i1 < right ) {
	
	    					var mid = ( i1 + right ) >>> 1;
	
	    					if ( t < pp[ mid ] ) {
	
	    						right = mid;
	
	    					} else {
	
	    						i1 = mid + 1;
	
	    					}
	
	    				}
	
	    				t1 = pp[   i1   ];
	    				t0 = pp[ i1 - 1 ];
	
	    				// check boundary cases, again
	
	    				if ( t0 === undefined ) {
	
	    					this._cachedIndex = 0;
	    					return this.beforeStart_( 0, t, t1 );
	
	    				}
	
	    				if ( t1 === undefined ) {
	
	    					i1 = pp.length;
	    					this._cachedIndex = i1;
	    					return this.afterEnd_( i1 - 1, t0, t );
	
	    				}
	
	    			} // seek
	
	    			this._cachedIndex = i1;
	
	    			this.intervalChanged_( i1, t0, t1 );
	
	    		} // validate_interval
	
	    		return this.interpolate_( i1, t0, t, t1 );
	
	    	},
	
	    	settings: null, // optional, subclass-specific settings structure
	    	// Note: The indirection allows central control of many interpolants.
	
	    	// --- Protected interface
	
	    	DefaultSettings_: {},
	
	    	getSettings_: function() {
	
	    		return this.settings || this.DefaultSettings_;
	
	    	},
	
	    	copySampleValue_: function( index ) {
	
	    		// copies a sample value to the result buffer
	
	    		var result = this.resultBuffer,
	    			values = this.sampleValues,
	    			stride = this.valueSize,
	    			offset = index * stride;
	
	    		for ( var i = 0; i !== stride; ++ i ) {
	
	    			result[ i ] = values[ offset + i ];
	
	    		}
	
	    		return result;
	
	    	},
	
	    	// Template methods for derived classes:
	
	    	interpolate_: function( i1, t0, t, t1 ) {
	
	    		throw new Error( "call to abstract method" );
	    		// implementations shall return this.resultBuffer
	
	    	},
	
	    	intervalChanged_: function( i1, t0, t1 ) {
	
	    		// empty
	
	    	}
	
	    };
	
	    Object.assign( Interpolant.prototype, {
	
	    	beforeStart_: //( 0, t, t0 ), returns this.resultBuffer
	    		Interpolant.prototype.copySampleValue_,
	
	    	afterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer
	    		Interpolant.prototype.copySampleValue_
	
	    } );
	
	    /**
	     * Fast and simple cubic spline interpolant.
	     *
	     * It was derived from a Hermitian construction setting the first derivative
	     * at each sample position to the linear slope between neighboring positions
	     * over their parameter interval.
	     *
	     * @author tschw
	     */
	
	    function CubicInterpolant(
	    		parameterPositions, sampleValues, sampleSize, resultBuffer ) {
	
	    	Interpolant.call(
	    			this, parameterPositions, sampleValues, sampleSize, resultBuffer );
	
	    	this._weightPrev = -0;
	    	this._offsetPrev = -0;
	    	this._weightNext = -0;
	    	this._offsetNext = -0;
	
	    }
	
	    CubicInterpolant.prototype =
	    		Object.assign( Object.create( Interpolant.prototype ), {
	
	    	constructor: CubicInterpolant,
	
	    	DefaultSettings_: {
	
	    		endingStart: 	ZeroCurvatureEnding,
	    		endingEnd:		ZeroCurvatureEnding
	
	    	},
	
	    	intervalChanged_: function( i1, t0, t1 ) {
	
	    		var pp = this.parameterPositions,
	    			iPrev = i1 - 2,
	    			iNext = i1 + 1,
	
	    			tPrev = pp[ iPrev ],
	    			tNext = pp[ iNext ];
	
	    		if ( tPrev === undefined ) {
	
	    			switch ( this.getSettings_().endingStart ) {
	
	    				case ZeroSlopeEnding:
	
	    					// f'(t0) = 0
	    					iPrev = i1;
	    					tPrev = 2 * t0 - t1;
	
	    					break;
	
	    				case WrapAroundEnding:
	
	    					// use the other end of the curve
	    					iPrev = pp.length - 2;
	    					tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];
	
	    					break;
	
	    				default: // ZeroCurvatureEnding
	
	    					// f''(t0) = 0 a.k.a. Natural Spline
	    					iPrev = i1;
	    					tPrev = t1;
	
	    			}
	
	    		}
	
	    		if ( tNext === undefined ) {
	
	    			switch ( this.getSettings_().endingEnd ) {
	
	    				case ZeroSlopeEnding:
	
	    					// f'(tN) = 0
	    					iNext = i1;
	    					tNext = 2 * t1 - t0;
	
	    					break;
	
	    				case WrapAroundEnding:
	
	    					// use the other end of the curve
	    					iNext = 1;
	    					tNext = t1 + pp[ 1 ] - pp[ 0 ];
	
	    					break;
	
	    				default: // ZeroCurvatureEnding
	
	    					// f''(tN) = 0, a.k.a. Natural Spline
	    					iNext = i1 - 1;
	    					tNext = t0;
	
	    			}
	
	    		}
	
	    		var halfDt = ( t1 - t0 ) * 0.5,
	    			stride = this.valueSize;
	
	    		this._weightPrev = halfDt / ( t0 - tPrev );
	    		this._weightNext = halfDt / ( tNext - t1 );
	    		this._offsetPrev = iPrev * stride;
	    		this._offsetNext = iNext * stride;
	
	    	},
	
	    	interpolate_: function( i1, t0, t, t1 ) {
	
	    		var result = this.resultBuffer,
	    			values = this.sampleValues,
	    			stride = this.valueSize,
	
	    			o1 = i1 * stride,		o0 = o1 - stride,
	    			oP = this._offsetPrev, 	oN = this._offsetNext,
	    			wP = this._weightPrev,	wN = this._weightNext,
	
	    			p = ( t - t0 ) / ( t1 - t0 ),
	    			pp = p * p,
	    			ppp = pp * p;
	
	    		// evaluate polynomials
	
	    		var sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;
	    		var s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;
	    		var s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;
	    		var sN =       wN   * ppp   -           wN      * pp;
	
	    		// combine data linearly
	
	    		for ( var i = 0; i !== stride; ++ i ) {
	
	    			result[ i ] =
	    					sP * values[ oP + i ] +
	    					s0 * values[ o0 + i ] +
	    					s1 * values[ o1 + i ] +
	    					sN * values[ oN + i ];
	
	    		}
	
	    		return result;
	
	    	}
	
	    } );
	
	    /**
	     * @author tschw
	     */
	
	    function LinearInterpolant(
	    		parameterPositions, sampleValues, sampleSize, resultBuffer ) {
	
	    	Interpolant.call(
	    			this, parameterPositions, sampleValues, sampleSize, resultBuffer );
	
	    }
	
	    LinearInterpolant.prototype =
	    		Object.assign( Object.create( Interpolant.prototype ), {
	
	    	constructor: LinearInterpolant,
	
	    	interpolate_: function( i1, t0, t, t1 ) {
	
	    		var result = this.resultBuffer,
	    			values = this.sampleValues,
	    			stride = this.valueSize,
	
	    			offset1 = i1 * stride,
	    			offset0 = offset1 - stride,
	
	    			weight1 = ( t - t0 ) / ( t1 - t0 ),
	    			weight0 = 1 - weight1;
	
	    		for ( var i = 0; i !== stride; ++ i ) {
	
	    			result[ i ] =
	    					values[ offset0 + i ] * weight0 +
	    					values[ offset1 + i ] * weight1;
	
	    		}
	
	    		return result;
	
	    	}
	
	    } );
	
	    /**
	     *
	     * Interpolant that evaluates to the sample value at the position preceeding
	     * the parameter.
	     *
	     * @author tschw
	     */
	
	    function DiscreteInterpolant(
	    		parameterPositions, sampleValues, sampleSize, resultBuffer ) {
	
	    	Interpolant.call(
	    			this, parameterPositions, sampleValues, sampleSize, resultBuffer );
	
	    }
	
	    DiscreteInterpolant.prototype =
	    		Object.assign( Object.create( Interpolant.prototype ), {
	
	    	constructor: DiscreteInterpolant,
	
	    	interpolate_: function( i1, t0, t, t1 ) {
	
	    		return this.copySampleValue_( i1 - 1 );
	
	    	}
	
	    } );
	
	    var KeyframeTrackPrototype;
	
	    KeyframeTrackPrototype = {
	
	    	TimeBufferType: Float32Array,
	    	ValueBufferType: Float32Array,
	
	    	DefaultInterpolation: InterpolateLinear,
	
	    	InterpolantFactoryMethodDiscrete: function( result ) {
	
	    		return new DiscreteInterpolant(
	    				this.times, this.values, this.getValueSize(), result );
	
	    	},
	
	    	InterpolantFactoryMethodLinear: function( result ) {
	
	    		return new LinearInterpolant(
	    				this.times, this.values, this.getValueSize(), result );
	
	    	},
	
	    	InterpolantFactoryMethodSmooth: function( result ) {
	
	    		return new CubicInterpolant(
	    				this.times, this.values, this.getValueSize(), result );
	
	    	},
	
	    	setInterpolation: function( interpolation ) {
	
	    		var factoryMethod;
	
	    		switch ( interpolation ) {
	
	    			case InterpolateDiscrete:
	
	    				factoryMethod = this.InterpolantFactoryMethodDiscrete;
	
	    				break;
	
	    			case InterpolateLinear:
	
	    				factoryMethod = this.InterpolantFactoryMethodLinear;
	
	    				break;
	
	    			case InterpolateSmooth:
	
	    				factoryMethod = this.InterpolantFactoryMethodSmooth;
	
	    				break;
	
	    		}
	
	    		if ( factoryMethod === undefined ) {
	
	    			var message = "unsupported interpolation for " +
	    					this.ValueTypeName + " keyframe track named " + this.name;
	
	    			if ( this.createInterpolant === undefined ) {
	
	    				// fall back to default, unless the default itself is messed up
	    				if ( interpolation !== this.DefaultInterpolation ) {
	
	    					this.setInterpolation( this.DefaultInterpolation );
	
	    				} else {
	
	    					throw new Error( message ); // fatal, in this case
	
	    				}
	
	    			}
	
	    			console.warn( message );
	    			return;
	
	    		}
	
	    		this.createInterpolant = factoryMethod;
	
	    	},
	
	    	getInterpolation: function() {
	
	    		switch ( this.createInterpolant ) {
	
	    			case this.InterpolantFactoryMethodDiscrete:
	
	    				return InterpolateDiscrete;
	
	    			case this.InterpolantFactoryMethodLinear:
	
	    				return InterpolateLinear;
	
	    			case this.InterpolantFactoryMethodSmooth:
	
	    				return InterpolateSmooth;
	
	    		}
	
	    	},
	
	    	getValueSize: function() {
	
	    		return this.values.length / this.times.length;
	
	    	},
	
	    	// move all keyframes either forwards or backwards in time
	    	shift: function( timeOffset ) {
	
	    		if( timeOffset !== 0.0 ) {
	
	    			var times = this.times;
	
	    			for( var i = 0, n = times.length; i !== n; ++ i ) {
	
	    				times[ i ] += timeOffset;
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
	    	scale: function( timeScale ) {
	
	    		if( timeScale !== 1.0 ) {
	
	    			var times = this.times;
	
	    			for( var i = 0, n = times.length; i !== n; ++ i ) {
	
	    				times[ i ] *= timeScale;
	
	    			}
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
	    	// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
	    	trim: function( startTime, endTime ) {
	
	    		var times = this.times,
	    			nKeys = times.length,
	    			from = 0,
	    			to = nKeys - 1;
	
	    		while ( from !== nKeys && times[ from ] < startTime ) ++ from;
	    		while ( to !== -1 && times[ to ] > endTime ) -- to;
	
	    		++ to; // inclusive -> exclusive bound
	
	    		if( from !== 0 || to !== nKeys ) {
	
	    			// empty tracks are forbidden, so keep at least one keyframe
	    			if ( from >= to ) to = Math.max( to , 1 ), from = to - 1;
	
	    			var stride = this.getValueSize();
	    			this.times = exports.AnimationUtils.arraySlice( times, from, to );
	    			this.values = exports.AnimationUtils.
	    					arraySlice( this.values, from * stride, to * stride );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
	    	validate: function() {
	
	    		var valid = true;
	
	    		var valueSize = this.getValueSize();
	    		if ( valueSize - Math.floor( valueSize ) !== 0 ) {
	
	    			console.error( "invalid value size in track", this );
	    			valid = false;
	
	    		}
	
	    		var times = this.times,
	    			values = this.values,
	
	    			nKeys = times.length;
	
	    		if( nKeys === 0 ) {
	
	    			console.error( "track is empty", this );
	    			valid = false;
	
	    		}
	
	    		var prevTime = null;
	
	    		for( var i = 0; i !== nKeys; i ++ ) {
	
	    			var currTime = times[ i ];
	
	    			if ( typeof currTime === 'number' && isNaN( currTime ) ) {
	
	    				console.error( "time is not a valid number", this, i, currTime );
	    				valid = false;
	    				break;
	
	    			}
	
	    			if( prevTime !== null && prevTime > currTime ) {
	
	    				console.error( "out of order keys", this, i, currTime, prevTime );
	    				valid = false;
	    				break;
	
	    			}
	
	    			prevTime = currTime;
	
	    		}
	
	    		if ( values !== undefined ) {
	
	    			if ( exports.AnimationUtils.isTypedArray( values ) ) {
	
	    				for ( var i = 0, n = values.length; i !== n; ++ i ) {
	
	    					var value = values[ i ];
	
	    					if ( isNaN( value ) ) {
	
	    						console.error( "value is not a valid number", this, i, value );
	    						valid = false;
	    						break;
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		return valid;
	
	    	},
	
	    	// removes equivalent sequential keys as common in morph target sequences
	    	// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
	    	optimize: function() {
	
	    		var times = this.times,
	    			values = this.values,
	    			stride = this.getValueSize(),
	
	    			smoothInterpolation = this.getInterpolation() === InterpolateSmooth,
	
	    			writeIndex = 1,
	    			lastIndex = times.length - 1;
	
	    		for( var i = 1; i < lastIndex; ++ i ) {
	
	    			var keep = false;
	
	    			var time = times[ i ];
	    			var timeNext = times[ i + 1 ];
	
	    			// remove adjacent keyframes scheduled at the same time
	
	    			if ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {
	
	    				if ( ! smoothInterpolation ) {
	
	    					// remove unnecessary keyframes same as their neighbors
	
	    					var offset = i * stride,
	    						offsetP = offset - stride,
	    						offsetN = offset + stride;
	
	    					for ( var j = 0; j !== stride; ++ j ) {
	
	    						var value = values[ offset + j ];
	
	    						if ( value !== values[ offsetP + j ] ||
	    								value !== values[ offsetN + j ] ) {
	
	    							keep = true;
	    							break;
	
	    						}
	
	    					}
	
	    				} else keep = true;
	
	    			}
	
	    			// in-place compaction
	
	    			if ( keep ) {
	
	    				if ( i !== writeIndex ) {
	
	    					times[ writeIndex ] = times[ i ];
	
	    					var readOffset = i * stride,
	    						writeOffset = writeIndex * stride;
	
	    					for ( var j = 0; j !== stride; ++ j )
	
	    						values[ writeOffset + j ] = values[ readOffset + j ];
	
	    				}
	
	    				++ writeIndex;
	
	    			}
	
	    		}
	
	    		// flush last keyframe (compaction looks ahead)
	
	    		if ( lastIndex > 0 ) {
	
	    			times[ writeIndex ] = times[ lastIndex ];
	
	    			for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )
	
	    				values[ writeOffset + j ] = values[ readOffset + j ];
	
	    			++ writeIndex;
	
	    		}
	
	    		if ( writeIndex !== times.length ) {
	
	    			this.times = exports.AnimationUtils.arraySlice( times, 0, writeIndex );
	    			this.values = exports.AnimationUtils.arraySlice( values, 0, writeIndex * stride );
	
	    		}
	
	    		return this;
	
	    	}
	
	    }
	
	    function KeyframeTrackConstructor( name, times, values, interpolation ) {
	
	    	if( name === undefined ) throw new Error( "track name is undefined" );
	
	    	if( times === undefined || times.length === 0 ) {
	
	    		throw new Error( "no keyframes in track named " + name );
	
	    	}
	
	    	this.name = name;
	
	    	this.times = exports.AnimationUtils.convertArray( times, this.TimeBufferType );
	    	this.values = exports.AnimationUtils.convertArray( values, this.ValueBufferType );
	
	    	this.setInterpolation( interpolation || this.DefaultInterpolation );
	
	    	this.validate();
	    	this.optimize();
	
	    }
	
	    /**
	     *
	     * A Track of vectored keyframe values.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function VectorKeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values, interpolation );
	
	    }
	
	    VectorKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: VectorKeyframeTrack,
	
	    	ValueTypeName: 'vector'
	
	    	// ValueBufferType is inherited
	
	    	// DefaultInterpolation is inherited
	
	    } );
	
	    /**
	     * Spherical linear unit quaternion interpolant.
	     *
	     * @author tschw
	     */
	
	    function QuaternionLinearInterpolant(
	    		parameterPositions, sampleValues, sampleSize, resultBuffer ) {
	
	    	Interpolant.call(
	    			this, parameterPositions, sampleValues, sampleSize, resultBuffer );
	
	    }
	
	    QuaternionLinearInterpolant.prototype =
	    		Object.assign( Object.create( Interpolant.prototype ), {
	
	    	constructor: QuaternionLinearInterpolant,
	
	    	interpolate_: function( i1, t0, t, t1 ) {
	
	    		var result = this.resultBuffer,
	    			values = this.sampleValues,
	    			stride = this.valueSize,
	
	    			offset = i1 * stride,
	
	    			alpha = ( t - t0 ) / ( t1 - t0 );
	
	    		for ( var end = offset + stride; offset !== end; offset += 4 ) {
	
	    			Quaternion.slerpFlat( result, 0,
	    					values, offset - stride, values, offset, alpha );
	
	    		}
	
	    		return result;
	
	    	}
	
	    } );
	
	    /**
	     *
	     * A Track of quaternion keyframe values.
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function QuaternionKeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values, interpolation );
	
	    }
	
	    QuaternionKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: QuaternionKeyframeTrack,
	
	    	ValueTypeName: 'quaternion',
	
	    	// ValueBufferType is inherited
	
	    	DefaultInterpolation: InterpolateLinear,
	
	    	InterpolantFactoryMethodLinear: function( result ) {
	
	    		return new QuaternionLinearInterpolant(
	    				this.times, this.values, this.getValueSize(), result );
	
	    	},
	
	    	InterpolantFactoryMethodSmooth: undefined // not yet implemented
	
	    } );
	
	    /**
	     *
	     * A Track of numeric keyframe values.
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function NumberKeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values, interpolation );
	
	    }
	
	    NumberKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: NumberKeyframeTrack,
	
	    	ValueTypeName: 'number',
	
	    	// ValueBufferType is inherited
	
	    	// DefaultInterpolation is inherited
	
	    } );
	
	    /**
	     *
	     * A Track that interpolates Strings
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function StringKeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values, interpolation );
	
	    }
	
	    StringKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: StringKeyframeTrack,
	
	    	ValueTypeName: 'string',
	    	ValueBufferType: Array,
	
	    	DefaultInterpolation: InterpolateDiscrete,
	
	    	InterpolantFactoryMethodLinear: undefined,
	
	    	InterpolantFactoryMethodSmooth: undefined
	
	    } );
	
	    /**
	     *
	     * A Track of Boolean keyframe values.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function BooleanKeyframeTrack( name, times, values ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values );
	
	    }
	
	    BooleanKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: BooleanKeyframeTrack,
	
	    	ValueTypeName: 'bool',
	    	ValueBufferType: Array,
	
	    	DefaultInterpolation: InterpolateDiscrete,
	
	    	InterpolantFactoryMethodLinear: undefined,
	    	InterpolantFactoryMethodSmooth: undefined
	
	    	// Note: Actually this track could have a optimized / compressed
	    	// representation of a single value and a custom interpolant that
	    	// computes "firstValue ^ isOdd( index )".
	
	    } );
	
	    /**
	     *
	     * A Track of keyframe values that represent color.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function ColorKeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.call( this, name, times, values, interpolation );
	
	    }
	
	    ColorKeyframeTrack.prototype =
	    		Object.assign( Object.create( KeyframeTrackPrototype ), {
	
	    	constructor: ColorKeyframeTrack,
	
	    	ValueTypeName: 'color'
	
	    	// ValueBufferType is inherited
	
	    	// DefaultInterpolation is inherited
	
	
	    	// Note: Very basic implementation and nothing special yet.
	    	// However, this is the place for color space parameterization.
	
	    } );
	
	    /**
	     *
	     * A timed sequence of keyframes for a specific property.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function KeyframeTrack( name, times, values, interpolation ) {
	
	    	KeyframeTrackConstructor.apply( this, arguments );
	
	    }
	
	    KeyframeTrack.prototype = KeyframeTrackPrototype;
	    KeyframeTrackPrototype.constructor = KeyframeTrack;
	
	    // Static methods:
	
	    Object.assign( KeyframeTrack, {
	
	    	// Serialization (in static context, because of constructor invocation
	    	// and automatic invocation of .toJSON):
	
	    	parse: function( json ) {
	
	    		if( json.type === undefined ) {
	
	    			throw new Error( "track type undefined, can not parse" );
	
	    		}
	
	    		var trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );
	
	    		if ( json.times === undefined ) {
	
	    			var times = [], values = [];
	
	    			exports.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );
	
	    			json.times = times;
	    			json.values = values;
	
	    		}
	
	    		// derived classes can define a static parse method
	    		if ( trackType.parse !== undefined ) {
	
	    			return trackType.parse( json );
	
	    		} else {
	
	    			// by default, we asssume a constructor compatible with the base
	    			return new trackType(
	    					json.name, json.times, json.values, json.interpolation );
	
	    		}
	
	    	},
	
	    	toJSON: function( track ) {
	
	    		var trackType = track.constructor;
	
	    		var json;
	
	    		// derived classes can define a static toJSON method
	    		if ( trackType.toJSON !== undefined ) {
	
	    			json = trackType.toJSON( track );
	
	    		} else {
	
	    			// by default, we assume the data can be serialized as-is
	    			json = {
	
	    				'name': track.name,
	    				'times': exports.AnimationUtils.convertArray( track.times, Array ),
	    				'values': exports.AnimationUtils.convertArray( track.values, Array )
	
	    			};
	
	    			var interpolation = track.getInterpolation();
	
	    			if ( interpolation !== track.DefaultInterpolation ) {
	
	    				json.interpolation = interpolation;
	
	    			}
	
	    		}
	
	    		json.type = track.ValueTypeName; // mandatory
	
	    		return json;
	
	    	},
	
	    	_getTrackTypeForValueTypeName: function( typeName ) {
	
	    		switch( typeName.toLowerCase() ) {
	
	    			case "scalar":
	    			case "double":
	    			case "float":
	    			case "number":
	    			case "integer":
	
	    				return NumberKeyframeTrack;
	
	    			case "vector":
	    			case "vector2":
	    			case "vector3":
	    			case "vector4":
	
	    				return VectorKeyframeTrack;
	
	    			case "color":
	
	    				return ColorKeyframeTrack;
	
	    			case "quaternion":
	
	    				return QuaternionKeyframeTrack;
	
	    			case "bool":
	    			case "boolean":
	
	    				return BooleanKeyframeTrack;
	
	    			case "string":
	
	    				return StringKeyframeTrack;
	
	    		}
	
	    		throw new Error( "Unsupported typeName: " + typeName );
	
	    	}
	
	    } );
	
	    /**
	     *
	     * Reusable set of Tracks that represent an animation.
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     */
	
	    function AnimationClip( name, duration, tracks ) {
	
	    	this.name = name;
	    	this.tracks = tracks;
	    	this.duration = ( duration !== undefined ) ? duration : -1;
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	// this means it should figure out its duration by scanning the tracks
	    	if ( this.duration < 0 ) {
	
	    		this.resetDuration();
	
	    	}
	
	    	this.optimize();
	
	    }
	
	    AnimationClip.prototype = {
	
	    	constructor: AnimationClip,
	
	    	resetDuration: function() {
	
	    		var tracks = this.tracks,
	    			duration = 0;
	
	    		for ( var i = 0, n = tracks.length; i !== n; ++ i ) {
	
	    			var track = this.tracks[ i ];
	
	    			duration = Math.max(
	    					duration, track.times[ track.times.length - 1 ] );
	
	    		}
	
	    		this.duration = duration;
	
	    	},
	
	    	trim: function() {
	
	    		for ( var i = 0; i < this.tracks.length; i ++ ) {
	
	    			this.tracks[ i ].trim( 0, this.duration );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	optimize: function() {
	
	    		for ( var i = 0; i < this.tracks.length; i ++ ) {
	
	    			this.tracks[ i ].optimize();
	
	    		}
	
	    		return this;
	
	    	}
	
	    };
	
	    // Static methods:
	
	    Object.assign( AnimationClip, {
	
	    	parse: function( json ) {
	
	    		var tracks = [],
	    			jsonTracks = json.tracks,
	    			frameTime = 1.0 / ( json.fps || 1.0 );
	
	    		for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {
	
	    			tracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );
	
	    		}
	
	    		return new AnimationClip( json.name, json.duration, tracks );
	
	    	},
	
	
	    	toJSON: function( clip ) {
	
	    		var tracks = [],
	    			clipTracks = clip.tracks;
	
	    		var json = {
	
	    			'name': clip.name,
	    			'duration': clip.duration,
	    			'tracks': tracks
	
	    		};
	
	    		for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {
	
	    			tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );
	
	    		}
	
	    		return json;
	
	    	},
	
	
	    	CreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {
	
	    		var numMorphTargets = morphTargetSequence.length;
	    		var tracks = [];
	
	    		for ( var i = 0; i < numMorphTargets; i ++ ) {
	
	    			var times = [];
	    			var values = [];
	
	    			times.push(
	    					( i + numMorphTargets - 1 ) % numMorphTargets,
	    					i,
	    					( i + 1 ) % numMorphTargets );
	
	    			values.push( 0, 1, 0 );
	
	    			var order = exports.AnimationUtils.getKeyframeOrder( times );
	    			times = exports.AnimationUtils.sortedArray( times, 1, order );
	    			values = exports.AnimationUtils.sortedArray( values, 1, order );
	
	    			// if there is a key at the first frame, duplicate it as the
	    			// last frame as well for perfect loop.
	    			if ( ! noLoop && times[ 0 ] === 0 ) {
	
	    				times.push( numMorphTargets );
	    				values.push( values[ 0 ] );
	
	    			}
	
	    			tracks.push(
	    					new NumberKeyframeTrack(
	    						'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',
	    						times, values
	    					).scale( 1.0 / fps ) );
	    		}
	
	    		return new AnimationClip( name, -1, tracks );
	
	    	},
	
	    	findByName: function( objectOrClipArray, name ) {
	
	    		var clipArray = objectOrClipArray;
	
	    		if ( ! Array.isArray( objectOrClipArray ) ) {
	
	    			var o = objectOrClipArray;
	    			clipArray = o.geometry && o.geometry.animations || o.animations;
	
	    		}
	
	    		for ( var i = 0; i < clipArray.length; i ++ ) {
	
	    			if ( clipArray[ i ].name === name ) {
	
	    				return clipArray[ i ];
	
	    			}
	    		}
	
	    		return null;
	
	    	},
	
	    	CreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {
	
	    		var animationToMorphTargets = {};
	
	    		// tested with https://regex101.com/ on trick sequences
	    		// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
	    		var pattern = /^([\w-]*?)([\d]+)$/;
	
	    		// sort morph target names into animation groups based
	    		// patterns like Walk_001, Walk_002, Run_001, Run_002
	    		for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {
	
	    			var morphTarget = morphTargets[ i ];
	    			var parts = morphTarget.name.match( pattern );
	
	    			if ( parts && parts.length > 1 ) {
	
	    				var name = parts[ 1 ];
	
	    				var animationMorphTargets = animationToMorphTargets[ name ];
	    				if ( ! animationMorphTargets ) {
	
	    					animationToMorphTargets[ name ] = animationMorphTargets = [];
	
	    				}
	
	    				animationMorphTargets.push( morphTarget );
	
	    			}
	
	    		}
	
	    		var clips = [];
	
	    		for ( var name in animationToMorphTargets ) {
	
	    			clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );
	
	    		}
	
	    		return clips;
	
	    	},
	
	    	// parse the animation.hierarchy format
	    	parseAnimation: function( animation, bones ) {
	
	    		if ( ! animation ) {
	
	    			console.error( "  no animation in JSONLoader data" );
	    			return null;
	
	    		}
	
	    		var addNonemptyTrack = function(
	    				trackType, trackName, animationKeys, propertyName, destTracks ) {
	
	    			// only return track if there are actually keys.
	    			if ( animationKeys.length !== 0 ) {
	
	    				var times = [];
	    				var values = [];
	
	    				exports.AnimationUtils.flattenJSON(
	    						animationKeys, times, values, propertyName );
	
	    				// empty keys are filtered out, so check again
	    				if ( times.length !== 0 ) {
	
	    					destTracks.push( new trackType( trackName, times, values ) );
	
	    				}
	
	    			}
	
	    		};
	
	    		var tracks = [];
	
	    		var clipName = animation.name || 'default';
	    		// automatic length determination in AnimationClip.
	    		var duration = animation.length || -1;
	    		var fps = animation.fps || 30;
	
	    		var hierarchyTracks = animation.hierarchy || [];
	
	    		for ( var h = 0; h < hierarchyTracks.length; h ++ ) {
	
	    			var animationKeys = hierarchyTracks[ h ].keys;
	
	    			// skip empty tracks
	    			if ( ! animationKeys || animationKeys.length === 0 ) continue;
	
	    			// process morph targets in a way exactly compatible
	    			// with AnimationHandler.init( animation )
	    			if ( animationKeys[0].morphTargets ) {
	
	    				// figure out all morph targets used in this track
	    				var morphTargetNames = {};
	    				for ( var k = 0; k < animationKeys.length; k ++ ) {
	
	    					if ( animationKeys[k].morphTargets ) {
	
	    						for ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {
	
	    							morphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;
	    						}
	
	    					}
	
	    				}
	
	    				// create a track for each morph target with all zero
	    				// morphTargetInfluences except for the keys in which
	    				// the morphTarget is named.
	    				for ( var morphTargetName in morphTargetNames ) {
	
	    					var times = [];
	    					var values = [];
	
	    					for ( var m = 0;
	    							m !== animationKeys[k].morphTargets.length; ++ m ) {
	
	    						var animationKey = animationKeys[k];
	
	    						times.push( animationKey.time );
	    						values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );
	
	    					}
	
	    					tracks.push( new NumberKeyframeTrack(
	    							'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );
	
	    				}
	
	    				duration = morphTargetNames.length * ( fps || 1.0 );
	
	    			} else {
	    				// ...assume skeletal animation
	
	    				var boneName = '.bones[' + bones[ h ].name + ']';
	
	    				addNonemptyTrack(
	    						VectorKeyframeTrack, boneName + '.position',
	    						animationKeys, 'pos', tracks );
	
	    				addNonemptyTrack(
	    						QuaternionKeyframeTrack, boneName + '.quaternion',
	    						animationKeys, 'rot', tracks );
	
	    				addNonemptyTrack(
	    						VectorKeyframeTrack, boneName + '.scale',
	    						animationKeys, 'scl', tracks );
	
	    			}
	
	    		}
	
	    		if ( tracks.length === 0 ) {
	
	    			return null;
	
	    		}
	
	    		var clip = new AnimationClip( clipName, duration, tracks );
	
	    		return clip;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function MaterialLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	    	this.textures = {};
	
	    }
	
	    Object.assign( MaterialLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var loader = new XHRLoader( scope.manager );
	    		loader.load( url, function ( text ) {
	
	    			onLoad( scope.parse( JSON.parse( text ) ) );
	
	    		}, onProgress, onError );
	
	    	},
	
	    	setTextures: function ( value ) {
	
	    		this.textures = value;
	
	    	},
	
	    	parse: function ( json ) {
	
	    		var textures = this.textures;
	
	    		function getTexture( name ) {
	
	    			if ( textures[ name ] === undefined ) {
	
	    				console.warn( 'THREE.MaterialLoader: Undefined texture', name );
	
	    			}
	
	    			return textures[ name ];
	
	    		}
	
	    		var material = new Materials[ json.type ]();
	
	    		if ( json.uuid !== undefined ) material.uuid = json.uuid;
	    		if ( json.name !== undefined ) material.name = json.name;
	    		if ( json.color !== undefined ) material.color.setHex( json.color );
	    		if ( json.roughness !== undefined ) material.roughness = json.roughness;
	    		if ( json.metalness !== undefined ) material.metalness = json.metalness;
	    		if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );
	    		if ( json.specular !== undefined ) material.specular.setHex( json.specular );
	    		if ( json.shininess !== undefined ) material.shininess = json.shininess;
	    		if ( json.uniforms !== undefined ) material.uniforms = json.uniforms;
	    		if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;
	    		if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;
	    		if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;
	    		if ( json.fog !== undefined ) material.fog = json.fog;
	    		if ( json.shading !== undefined ) material.shading = json.shading;
	    		if ( json.blending !== undefined ) material.blending = json.blending;
	    		if ( json.side !== undefined ) material.side = json.side;
	    		if ( json.opacity !== undefined ) material.opacity = json.opacity;
	    		if ( json.transparent !== undefined ) material.transparent = json.transparent;
	    		if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;
	    		if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;
	    		if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;
	    		if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;
	    		if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;
	    		if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;
	    		if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;
	    		if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;
	    		if ( json.skinning !== undefined ) material.skinning = json.skinning;
	    		if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;
	
	    		// for PointsMaterial
	
	    		if ( json.size !== undefined ) material.size = json.size;
	    		if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;
	
	    		// maps
	
	    		if ( json.map !== undefined ) material.map = getTexture( json.map );
	
	    		if ( json.alphaMap !== undefined ) {
	
	    			material.alphaMap = getTexture( json.alphaMap );
	    			material.transparent = true;
	
	    		}
	
	    		if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );
	    		if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;
	
	    		if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );
	    		if ( json.normalScale !== undefined ) {
	
	    			var normalScale = json.normalScale;
	
	    			if ( Array.isArray( normalScale ) === false ) {
	
	    				// Blender exporter used to export a scalar. See #7459
	
	    				normalScale = [ normalScale, normalScale ];
	
	    			}
	
	    			material.normalScale = new Vector2().fromArray( normalScale );
	
	    		}
	
	    		if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );
	    		if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;
	    		if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;
	
	    		if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );
	    		if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );
	
	    		if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );
	    		if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;
	
	    		if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );
	
	    		if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );
	
	    		if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;
	
	    		if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );
	    		if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;
	
	    		if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );
	    		if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;
	
	    		// MultiMaterial
	
	    		if ( json.materials !== undefined ) {
	
	    			for ( var i = 0, l = json.materials.length; i < l; i ++ ) {
	
	    				material.materials.push( this.parse( json.materials[ i ] ) );
	
	    			}
	
	    		}
	
	    		return material;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function BufferGeometryLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( BufferGeometryLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var loader = new XHRLoader( scope.manager );
	    		loader.load( url, function ( text ) {
	
	    			onLoad( scope.parse( JSON.parse( text ) ) );
	
	    		}, onProgress, onError );
	
	    	},
	
	    	parse: function ( json ) {
	
	    		var geometry = new BufferGeometry();
	
	    		var index = json.data.index;
	
	    		var TYPED_ARRAYS = {
	    			'Int8Array': Int8Array,
	    			'Uint8Array': Uint8Array,
	    			'Uint8ClampedArray': Uint8ClampedArray,
	    			'Int16Array': Int16Array,
	    			'Uint16Array': Uint16Array,
	    			'Int32Array': Int32Array,
	    			'Uint32Array': Uint32Array,
	    			'Float32Array': Float32Array,
	    			'Float64Array': Float64Array
	    		};
	
	    		if ( index !== undefined ) {
	
	    			var typedArray = new TYPED_ARRAYS[ index.type ]( index.array );
	    			geometry.setIndex( new BufferAttribute( typedArray, 1 ) );
	
	    		}
	
	    		var attributes = json.data.attributes;
	
	    		for ( var key in attributes ) {
	
	    			var attribute = attributes[ key ];
	    			var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );
	
	    			geometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );
	
	    		}
	
	    		var groups = json.data.groups || json.data.drawcalls || json.data.offsets;
	
	    		if ( groups !== undefined ) {
	
	    			for ( var i = 0, n = groups.length; i !== n; ++ i ) {
	
	    				var group = groups[ i ];
	
	    				geometry.addGroup( group.start, group.count, group.materialIndex );
	
	    			}
	
	    		}
	
	    		var boundingSphere = json.data.boundingSphere;
	
	    		if ( boundingSphere !== undefined ) {
	
	    			var center = new Vector3();
	
	    			if ( boundingSphere.center !== undefined ) {
	
	    				center.fromArray( boundingSphere.center );
	
	    			}
	
	    			geometry.boundingSphere = new Sphere( center, boundingSphere.radius );
	
	    		}
	
	    		return geometry;
	
	    	}
	
	    } );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Loader() {
	
	    	this.onLoadStart = function () {};
	    	this.onLoadProgress = function () {};
	    	this.onLoadComplete = function () {};
	
	    }
	
	    Loader.prototype = {
	
	    	constructor: Loader,
	
	    	crossOrigin: undefined,
	
	    	extractUrlBase: function ( url ) {
	
	    		var parts = url.split( '/' );
	
	    		if ( parts.length === 1 ) return './';
	
	    		parts.pop();
	
	    		return parts.join( '/' ) + '/';
	
	    	},
	
	    	initMaterials: function ( materials, texturePath, crossOrigin ) {
	
	    		var array = [];
	
	    		for ( var i = 0; i < materials.length; ++ i ) {
	
	    			array[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );
	
	    		}
	
	    		return array;
	
	    	},
	
	    	createMaterial: ( function () {
	
	    		var color, textureLoader, materialLoader;
	
	    		return function createMaterial( m, texturePath, crossOrigin ) {
	
	    			if ( color === undefined ) color = new Color();
	    			if ( textureLoader === undefined ) textureLoader = new TextureLoader();
	    			if ( materialLoader === undefined ) materialLoader = new MaterialLoader();
	
	    			// convert from old material format
	
	    			var textures = {};
	
	    			function loadTexture( path, repeat, offset, wrap, anisotropy ) {
	
	    				var fullPath = texturePath + path;
	    				var loader = Loader.Handlers.get( fullPath );
	
	    				var texture;
	
	    				if ( loader !== null ) {
	
	    					texture = loader.load( fullPath );
	
	    				} else {
	
	    					textureLoader.setCrossOrigin( crossOrigin );
	    					texture = textureLoader.load( fullPath );
	
	    				}
	
	    				if ( repeat !== undefined ) {
	
	    					texture.repeat.fromArray( repeat );
	
	    					if ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;
	    					if ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;
	
	    				}
	
	    				if ( offset !== undefined ) {
	
	    					texture.offset.fromArray( offset );
	
	    				}
	
	    				if ( wrap !== undefined ) {
	
	    					if ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;
	    					if ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;
	
	    					if ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;
	    					if ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;
	
	    				}
	
	    				if ( anisotropy !== undefined ) {
	
	    					texture.anisotropy = anisotropy;
	
	    				}
	
	    				var uuid = exports.Math.generateUUID();
	
	    				textures[ uuid ] = texture;
	
	    				return uuid;
	
	    			}
	
	    			//
	
	    			var json = {
	    				uuid: exports.Math.generateUUID(),
	    				type: 'MeshLambertMaterial'
	    			};
	
	    			for ( var name in m ) {
	
	    				var value = m[ name ];
	
	    				switch ( name ) {
	    					case 'DbgColor':
	    					case 'DbgIndex':
	    					case 'opticalDensity':
	    					case 'illumination':
	    						break;
	    					case 'DbgName':
	    						json.name = value;
	    						break;
	    					case 'blending':
	    						json.blending = BlendingMode[ value ];
	    						break;
	    					case 'colorAmbient':
	    					case 'mapAmbient':
	    						console.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );
	    						break;
	    					case 'colorDiffuse':
	    						json.color = color.fromArray( value ).getHex();
	    						break;
	    					case 'colorSpecular':
	    						json.specular = color.fromArray( value ).getHex();
	    						break;
	    					case 'colorEmissive':
	    						json.emissive = color.fromArray( value ).getHex();
	    						break;
	    					case 'specularCoef':
	    						json.shininess = value;
	    						break;
	    					case 'shading':
	    						if ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';
	    						if ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';
	    						if ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';
	    						break;
	    					case 'mapDiffuse':
	    						json.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );
	    						break;
	    					case 'mapDiffuseRepeat':
	    					case 'mapDiffuseOffset':
	    					case 'mapDiffuseWrap':
	    					case 'mapDiffuseAnisotropy':
	    						break;
	    					case 'mapEmissive':
	    						json.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );
	    						break;
	    					case 'mapEmissiveRepeat':
	    					case 'mapEmissiveOffset':
	    					case 'mapEmissiveWrap':
	    					case 'mapEmissiveAnisotropy':
	    						break;
	    					case 'mapLight':
	    						json.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );
	    						break;
	    					case 'mapLightRepeat':
	    					case 'mapLightOffset':
	    					case 'mapLightWrap':
	    					case 'mapLightAnisotropy':
	    						break;
	    					case 'mapAO':
	    						json.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );
	    						break;
	    					case 'mapAORepeat':
	    					case 'mapAOOffset':
	    					case 'mapAOWrap':
	    					case 'mapAOAnisotropy':
	    						break;
	    					case 'mapBump':
	    						json.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );
	    						break;
	    					case 'mapBumpScale':
	    						json.bumpScale = value;
	    						break;
	    					case 'mapBumpRepeat':
	    					case 'mapBumpOffset':
	    					case 'mapBumpWrap':
	    					case 'mapBumpAnisotropy':
	    						break;
	    					case 'mapNormal':
	    						json.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );
	    						break;
	    					case 'mapNormalFactor':
	    						json.normalScale = [ value, value ];
	    						break;
	    					case 'mapNormalRepeat':
	    					case 'mapNormalOffset':
	    					case 'mapNormalWrap':
	    					case 'mapNormalAnisotropy':
	    						break;
	    					case 'mapSpecular':
	    						json.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );
	    						break;
	    					case 'mapSpecularRepeat':
	    					case 'mapSpecularOffset':
	    					case 'mapSpecularWrap':
	    					case 'mapSpecularAnisotropy':
	    						break;
	    					case 'mapMetalness':
	    						json.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );
	    						break;
	    					case 'mapMetalnessRepeat':
	    					case 'mapMetalnessOffset':
	    					case 'mapMetalnessWrap':
	    					case 'mapMetalnessAnisotropy':
	    						break;
	    					case 'mapRoughness':
	    						json.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );
	    						break;
	    					case 'mapRoughnessRepeat':
	    					case 'mapRoughnessOffset':
	    					case 'mapRoughnessWrap':
	    					case 'mapRoughnessAnisotropy':
	    						break;
	    					case 'mapAlpha':
	    						json.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );
	    						break;
	    					case 'mapAlphaRepeat':
	    					case 'mapAlphaOffset':
	    					case 'mapAlphaWrap':
	    					case 'mapAlphaAnisotropy':
	    						break;
	    					case 'flipSided':
	    						json.side = BackSide;
	    						break;
	    					case 'doubleSided':
	    						json.side = DoubleSide;
	    						break;
	    					case 'transparency':
	    						console.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );
	    						json.opacity = value;
	    						break;
	    					case 'depthTest':
	    					case 'depthWrite':
	    					case 'colorWrite':
	    					case 'opacity':
	    					case 'reflectivity':
	    					case 'transparent':
	    					case 'visible':
	    					case 'wireframe':
	    						json[ name ] = value;
	    						break;
	    					case 'vertexColors':
	    						if ( value === true ) json.vertexColors = VertexColors;
	    						if ( value === 'face' ) json.vertexColors = FaceColors;
	    						break;
	    					default:
	    						console.error( 'THREE.Loader.createMaterial: Unsupported', name, value );
	    						break;
	    				}
	
	    			}
	
	    			if ( json.type === 'MeshBasicMaterial' ) delete json.emissive;
	    			if ( json.type !== 'MeshPhongMaterial' ) delete json.specular;
	
	    			if ( json.opacity < 1 ) json.transparent = true;
	
	    			materialLoader.setTextures( textures );
	
	    			return materialLoader.parse( json );
	
	    		};
	
	    	} )()
	
	    };
	
	    Loader.Handlers = {
	
	    	handlers: [],
	
	    	add: function ( regex, loader ) {
	
	    		this.handlers.push( regex, loader );
	
	    	},
	
	    	get: function ( file ) {
	
	    		var handlers = this.handlers;
	
	    		for ( var i = 0, l = handlers.length; i < l; i += 2 ) {
	
	    			var regex = handlers[ i ];
	    			var loader  = handlers[ i + 1 ];
	
	    			if ( regex.test( file ) ) {
	
	    				return loader;
	
	    			}
	
	    		}
	
	    		return null;
	
	    	}
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function JSONLoader( manager ) {
	
	    	if ( typeof manager === 'boolean' ) {
	
	    		console.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );
	    		manager = undefined;
	
	    	}
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    	this.withCredentials = false;
	
	    }
	
	    Object.assign( JSONLoader.prototype, {
	
	    	load: function( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var texturePath = this.texturePath && ( typeof this.texturePath === "string" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );
	
	    		var loader = new XHRLoader( this.manager );
	    		loader.setWithCredentials( this.withCredentials );
	    		loader.load( url, function ( text ) {
	
	    			var json = JSON.parse( text );
	    			var metadata = json.metadata;
	
	    			if ( metadata !== undefined ) {
	
	    				var type = metadata.type;
	
	    				if ( type !== undefined ) {
	
	    					if ( type.toLowerCase() === 'object' ) {
	
	    						console.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );
	    						return;
	
	    					}
	
	    					if ( type.toLowerCase() === 'scene' ) {
	
	    						console.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );
	    						return;
	
	    					}
	
	    				}
	
	    			}
	
	    			var object = scope.parse( json, texturePath );
	    			onLoad( object.geometry, object.materials );
	
	    		}, onProgress, onError );
	
	    	},
	
	    	setTexturePath: function ( value ) {
	
	    		this.texturePath = value;
	
	    	},
	
	    	parse: function ( json, texturePath ) {
	
	    		var geometry = new Geometry(),
	    		scale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;
	
	    		parseModel( scale );
	
	    		parseSkin();
	    		parseMorphing( scale );
	    		parseAnimations();
	
	    		geometry.computeFaceNormals();
	    		geometry.computeBoundingSphere();
	
	    		function parseModel( scale ) {
	
	    			function isBitSet( value, position ) {
	
	    				return value & ( 1 << position );
	
	    			}
	
	    			var i, j, fi,
	
	    			offset, zLength,
	
	    		colorIndex, normalIndex, uvIndex, materialIndex,
	
	    			type,
	    			isQuad,
	    			hasMaterial,
	    			hasFaceVertexUv,
	    			hasFaceNormal, hasFaceVertexNormal,
	    			hasFaceColor, hasFaceVertexColor,
	
	    		vertex, face, faceA, faceB, hex, normal,
	
	    			uvLayer, uv, u, v,
	
	    			faces = json.faces,
	    			vertices = json.vertices,
	    			normals = json.normals,
	    			colors = json.colors,
	
	    			nUvLayers = 0;
	
	    			if ( json.uvs !== undefined ) {
	
	    				// disregard empty arrays
	
	    				for ( i = 0; i < json.uvs.length; i ++ ) {
	
	    					if ( json.uvs[ i ].length ) nUvLayers ++;
	
	    				}
	
	    				for ( i = 0; i < nUvLayers; i ++ ) {
	
	    					geometry.faceVertexUvs[ i ] = [];
	
	    				}
	
	    			}
	
	    			offset = 0;
	    			zLength = vertices.length;
	
	    			while ( offset < zLength ) {
	
	    				vertex = new Vector3();
	
	    				vertex.x = vertices[ offset ++ ] * scale;
	    				vertex.y = vertices[ offset ++ ] * scale;
	    				vertex.z = vertices[ offset ++ ] * scale;
	
	    				geometry.vertices.push( vertex );
	
	    			}
	
	    			offset = 0;
	    			zLength = faces.length;
	
	    			while ( offset < zLength ) {
	
	    				type = faces[ offset ++ ];
	
	
	    				isQuad              = isBitSet( type, 0 );
	    				hasMaterial         = isBitSet( type, 1 );
	    				hasFaceVertexUv     = isBitSet( type, 3 );
	    				hasFaceNormal       = isBitSet( type, 4 );
	    				hasFaceVertexNormal = isBitSet( type, 5 );
	    				hasFaceColor	     = isBitSet( type, 6 );
	    				hasFaceVertexColor  = isBitSet( type, 7 );
	
	    				// console.log("type", type, "bits", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);
	
	    				if ( isQuad ) {
	
	    					faceA = new Face3();
	    					faceA.a = faces[ offset ];
	    					faceA.b = faces[ offset + 1 ];
	    					faceA.c = faces[ offset + 3 ];
	
	    					faceB = new Face3();
	    					faceB.a = faces[ offset + 1 ];
	    					faceB.b = faces[ offset + 2 ];
	    					faceB.c = faces[ offset + 3 ];
	
	    					offset += 4;
	
	    					if ( hasMaterial ) {
	
	    						materialIndex = faces[ offset ++ ];
	    						faceA.materialIndex = materialIndex;
	    						faceB.materialIndex = materialIndex;
	
	    					}
	
	    					// to get face <=> uv index correspondence
	
	    					fi = geometry.faces.length;
	
	    					if ( hasFaceVertexUv ) {
	
	    						for ( i = 0; i < nUvLayers; i ++ ) {
	
	    							uvLayer = json.uvs[ i ];
	
	    							geometry.faceVertexUvs[ i ][ fi ] = [];
	    							geometry.faceVertexUvs[ i ][ fi + 1 ] = [];
	
	    							for ( j = 0; j < 4; j ++ ) {
	
	    								uvIndex = faces[ offset ++ ];
	
	    								u = uvLayer[ uvIndex * 2 ];
	    								v = uvLayer[ uvIndex * 2 + 1 ];
	
	    								uv = new Vector2( u, v );
	
	    								if ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );
	    								if ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );
	
	    							}
	
	    						}
	
	    					}
	
	    					if ( hasFaceNormal ) {
	
	    						normalIndex = faces[ offset ++ ] * 3;
	
	    						faceA.normal.set(
	    							normals[ normalIndex ++ ],
	    							normals[ normalIndex ++ ],
	    							normals[ normalIndex ]
	    						);
	
	    						faceB.normal.copy( faceA.normal );
	
	    					}
	
	    					if ( hasFaceVertexNormal ) {
	
	    						for ( i = 0; i < 4; i ++ ) {
	
	    							normalIndex = faces[ offset ++ ] * 3;
	
	    							normal = new Vector3(
	    								normals[ normalIndex ++ ],
	    								normals[ normalIndex ++ ],
	    								normals[ normalIndex ]
	    							);
	
	
	    							if ( i !== 2 ) faceA.vertexNormals.push( normal );
	    							if ( i !== 0 ) faceB.vertexNormals.push( normal );
	
	    						}
	
	    					}
	
	
	    					if ( hasFaceColor ) {
	
	    						colorIndex = faces[ offset ++ ];
	    						hex = colors[ colorIndex ];
	
	    						faceA.color.setHex( hex );
	    						faceB.color.setHex( hex );
	
	    					}
	
	
	    					if ( hasFaceVertexColor ) {
	
	    						for ( i = 0; i < 4; i ++ ) {
	
	    							colorIndex = faces[ offset ++ ];
	    							hex = colors[ colorIndex ];
	
	    							if ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );
	    							if ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );
	
	    						}
	
	    					}
	
	    					geometry.faces.push( faceA );
	    					geometry.faces.push( faceB );
	
	    				} else {
	
	    					face = new Face3();
	    					face.a = faces[ offset ++ ];
	    					face.b = faces[ offset ++ ];
	    					face.c = faces[ offset ++ ];
	
	    					if ( hasMaterial ) {
	
	    						materialIndex = faces[ offset ++ ];
	    						face.materialIndex = materialIndex;
	
	    					}
	
	    					// to get face <=> uv index correspondence
	
	    					fi = geometry.faces.length;
	
	    					if ( hasFaceVertexUv ) {
	
	    						for ( i = 0; i < nUvLayers; i ++ ) {
	
	    							uvLayer = json.uvs[ i ];
	
	    							geometry.faceVertexUvs[ i ][ fi ] = [];
	
	    							for ( j = 0; j < 3; j ++ ) {
	
	    								uvIndex = faces[ offset ++ ];
	
	    								u = uvLayer[ uvIndex * 2 ];
	    								v = uvLayer[ uvIndex * 2 + 1 ];
	
	    								uv = new Vector2( u, v );
	
	    								geometry.faceVertexUvs[ i ][ fi ].push( uv );
	
	    							}
	
	    						}
	
	    					}
	
	    					if ( hasFaceNormal ) {
	
	    						normalIndex = faces[ offset ++ ] * 3;
	
	    						face.normal.set(
	    							normals[ normalIndex ++ ],
	    							normals[ normalIndex ++ ],
	    							normals[ normalIndex ]
	    						);
	
	    					}
	
	    					if ( hasFaceVertexNormal ) {
	
	    						for ( i = 0; i < 3; i ++ ) {
	
	    							normalIndex = faces[ offset ++ ] * 3;
	
	    							normal = new Vector3(
	    								normals[ normalIndex ++ ],
	    								normals[ normalIndex ++ ],
	    								normals[ normalIndex ]
	    							);
	
	    							face.vertexNormals.push( normal );
	
	    						}
	
	    					}
	
	
	    					if ( hasFaceColor ) {
	
	    						colorIndex = faces[ offset ++ ];
	    						face.color.setHex( colors[ colorIndex ] );
	
	    					}
	
	
	    					if ( hasFaceVertexColor ) {
	
	    						for ( i = 0; i < 3; i ++ ) {
	
	    							colorIndex = faces[ offset ++ ];
	    							face.vertexColors.push( new Color( colors[ colorIndex ] ) );
	
	    						}
	
	    					}
	
	    					geometry.faces.push( face );
	
	    				}
	
	    			}
	
	    		}
	
	    		function parseSkin() {
	
	    			var influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;
	
	    			if ( json.skinWeights ) {
	
	    				for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {
	
	    					var x =                               json.skinWeights[ i ];
	    					var y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;
	    					var z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;
	    					var w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;
	
	    					geometry.skinWeights.push( new Vector4( x, y, z, w ) );
	
	    				}
	
	    			}
	
	    			if ( json.skinIndices ) {
	
	    				for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {
	
	    					var a =                               json.skinIndices[ i ];
	    					var b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;
	    					var c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;
	    					var d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;
	
	    					geometry.skinIndices.push( new Vector4( a, b, c, d ) );
	
	    				}
	
	    			}
	
	    			geometry.bones = json.bones;
	
	    			if ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {
	
	    				console.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +
	    					geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );
	
	    			}
	
	    		}
	
	    		function parseMorphing( scale ) {
	
	    			if ( json.morphTargets !== undefined ) {
	
	    				for ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {
	
	    					geometry.morphTargets[ i ] = {};
	    					geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;
	    					geometry.morphTargets[ i ].vertices = [];
	
	    					var dstVertices = geometry.morphTargets[ i ].vertices;
	    					var srcVertices = json.morphTargets[ i ].vertices;
	
	    					for ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {
	
	    						var vertex = new Vector3();
	    						vertex.x = srcVertices[ v ] * scale;
	    						vertex.y = srcVertices[ v + 1 ] * scale;
	    						vertex.z = srcVertices[ v + 2 ] * scale;
	
	    						dstVertices.push( vertex );
	
	    					}
	
	    				}
	
	    			}
	
	    			if ( json.morphColors !== undefined && json.morphColors.length > 0 ) {
	
	    				console.warn( 'THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.' );
	
	    				var faces = geometry.faces;
	    				var morphColors = json.morphColors[ 0 ].colors;
	
	    				for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    					faces[ i ].color.fromArray( morphColors, i * 3 );
	
	    				}
	
	    			}
	
	    		}
	
	    		function parseAnimations() {
	
	    			var outputAnimations = [];
	
	    			// parse old style Bone/Hierarchy animations
	    			var animations = [];
	
	    			if ( json.animation !== undefined ) {
	
	    				animations.push( json.animation );
	
	    			}
	
	    			if ( json.animations !== undefined ) {
	
	    				if ( json.animations.length ) {
	
	    					animations = animations.concat( json.animations );
	
	    				} else {
	
	    					animations.push( json.animations );
	
	    				}
	
	    			}
	
	    			for ( var i = 0; i < animations.length; i ++ ) {
	
	    				var clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );
	    				if ( clip ) outputAnimations.push( clip );
	
	    			}
	
	    			// parse implicit morph animations
	    			if ( geometry.morphTargets ) {
	
	    				// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.
	    				var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );
	    				outputAnimations = outputAnimations.concat( morphAnimationClips );
	
	    			}
	
	    			if ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;
	
	    		}
	
	    		if ( json.materials === undefined || json.materials.length === 0 ) {
	
	    			return { geometry: geometry };
	
	    		} else {
	
	    			var materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );
	
	    			return { geometry: geometry, materials: materials };
	
	    		}
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function ObjectLoader ( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	    	this.texturePath = '';
	
	    }
	
	    Object.assign( ObjectLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		if ( this.texturePath === '' ) {
	
	    			this.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );
	
	    		}
	
	    		var scope = this;
	
	    		var loader = new XHRLoader( scope.manager );
	    		loader.load( url, function ( text ) {
	
	    			scope.parse( JSON.parse( text ), onLoad );
	
	    		}, onProgress, onError );
	
	    	},
	
	    	setTexturePath: function ( value ) {
	
	    		this.texturePath = value;
	
	    	},
	
	    	setCrossOrigin: function ( value ) {
	
	    		this.crossOrigin = value;
	
	    	},
	
	    	parse: function ( json, onLoad ) {
	
	    		var geometries = this.parseGeometries( json.geometries );
	
	    		var images = this.parseImages( json.images, function () {
	
	    			if ( onLoad !== undefined ) onLoad( object );
	
	    		} );
	
	    		var textures  = this.parseTextures( json.textures, images );
	    		var materials = this.parseMaterials( json.materials, textures );
	
	    		var object = this.parseObject( json.object, geometries, materials );
	
	    		if ( json.animations ) {
	
	    			object.animations = this.parseAnimations( json.animations );
	
	    		}
	
	    		if ( json.images === undefined || json.images.length === 0 ) {
	
	    			if ( onLoad !== undefined ) onLoad( object );
	
	    		}
	
	    		return object;
	
	    	},
	
	    	parseGeometries: function ( json ) {
	
	    		var geometries = {};
	
	    		if ( json !== undefined ) {
	
	    			var geometryLoader = new JSONLoader();
	    			var bufferGeometryLoader = new BufferGeometryLoader();
	
	    			for ( var i = 0, l = json.length; i < l; i ++ ) {
	
	    				var geometry;
	    				var data = json[ i ];
	
	    				switch ( data.type ) {
	
	    					case 'PlaneGeometry':
	    					case 'PlaneBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.width,
	    							data.height,
	    							data.widthSegments,
	    							data.heightSegments
	    						);
	
	    						break;
	
	    					case 'BoxGeometry':
	    					case 'BoxBufferGeometry':
	    					case 'CubeGeometry': // backwards compatible
	
	    						geometry = new Geometries[ data.type ](
	    							data.width,
	    							data.height,
	    							data.depth,
	    							data.widthSegments,
	    							data.heightSegments,
	    							data.depthSegments
	    						);
	
	    						break;
	
	    					case 'CircleGeometry':
	    					case 'CircleBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.segments,
	    							data.thetaStart,
	    							data.thetaLength
	    						);
	
	    						break;
	
	    					case 'CylinderGeometry':
	    					case 'CylinderBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radiusTop,
	    							data.radiusBottom,
	    							data.height,
	    							data.radialSegments,
	    							data.heightSegments,
	    							data.openEnded,
	    							data.thetaStart,
	    							data.thetaLength
	    						);
	
	    						break;
	
	    					case 'ConeGeometry':
	    					case 'ConeBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.height,
	    							data.radialSegments,
	    							data.heightSegments,
	    							data.openEnded,
	    							data.thetaStart,
	    							data.thetaLength
	    						);
	
	    						break;
	
	    					case 'SphereGeometry':
	    					case 'SphereBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.widthSegments,
	    							data.heightSegments,
	    							data.phiStart,
	    							data.phiLength,
	    							data.thetaStart,
	    							data.thetaLength
	    						);
	
	    						break;
	
	    					case 'DodecahedronGeometry':
	    					case 'IcosahedronGeometry':
	    					case 'OctahedronGeometry':
	    					case 'TetrahedronGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.detail
	    						);
	
	    						break;
	
	    					case 'RingGeometry':
	    					case 'RingBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.innerRadius,
	    							data.outerRadius,
	    							data.thetaSegments,
	    							data.phiSegments,
	    							data.thetaStart,
	    							data.thetaLength
	    						);
	
	    						break;
	
	    					case 'TorusGeometry':
	    					case 'TorusBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.tube,
	    							data.radialSegments,
	    							data.tubularSegments,
	    							data.arc
	    						);
	
	    						break;
	
	    					case 'TorusKnotGeometry':
	    					case 'TorusKnotBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.radius,
	    							data.tube,
	    							data.tubularSegments,
	    							data.radialSegments,
	    							data.p,
	    							data.q
	    						);
	
	    						break;
	
	    					case 'LatheGeometry':
	    					case 'LatheBufferGeometry':
	
	    						geometry = new Geometries[ data.type ](
	    							data.points,
	    							data.segments,
	    							data.phiStart,
	    							data.phiLength
	    						);
	
	    						break;
	
	    					case 'BufferGeometry':
	
	    						geometry = bufferGeometryLoader.parse( data );
	
	    						break;
	
	    					case 'Geometry':
	
	    						geometry = geometryLoader.parse( data.data, this.texturePath ).geometry;
	
	    						break;
	
	    					default:
	
	    						console.warn( 'THREE.ObjectLoader: Unsupported geometry type "' + data.type + '"' );
	
	    						continue;
	
	    				}
	
	    				geometry.uuid = data.uuid;
	
	    				if ( data.name !== undefined ) geometry.name = data.name;
	
	    				geometries[ data.uuid ] = geometry;
	
	    			}
	
	    		}
	
	    		return geometries;
	
	    	},
	
	    	parseMaterials: function ( json, textures ) {
	
	    		var materials = {};
	
	    		if ( json !== undefined ) {
	
	    			var loader = new MaterialLoader();
	    			loader.setTextures( textures );
	
	    			for ( var i = 0, l = json.length; i < l; i ++ ) {
	
	    				var material = loader.parse( json[ i ] );
	    				materials[ material.uuid ] = material;
	
	    			}
	
	    		}
	
	    		return materials;
	
	    	},
	
	    	parseAnimations: function ( json ) {
	
	    		var animations = [];
	
	    		for ( var i = 0; i < json.length; i ++ ) {
	
	    			var clip = AnimationClip.parse( json[ i ] );
	
	    			animations.push( clip );
	
	    		}
	
	    		return animations;
	
	    	},
	
	    	parseImages: function ( json, onLoad ) {
	
	    		var scope = this;
	    		var images = {};
	
	    		function loadImage( url ) {
	
	    			scope.manager.itemStart( url );
	
	    			return loader.load( url, function () {
	
	    				scope.manager.itemEnd( url );
	
	    			}, undefined, function () {
	
	    				scope.manager.itemError( url );
	
	    			} );
	
	    		}
	
	    		if ( json !== undefined && json.length > 0 ) {
	
	    			var manager = new LoadingManager( onLoad );
	
	    			var loader = new ImageLoader( manager );
	    			loader.setCrossOrigin( this.crossOrigin );
	
	    			for ( var i = 0, l = json.length; i < l; i ++ ) {
	
	    				var image = json[ i ];
	    				var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;
	
	    				images[ image.uuid ] = loadImage( path );
	
	    			}
	
	    		}
	
	    		return images;
	
	    	},
	
	    	parseTextures: function ( json, images ) {
	
	    		function parseConstant( value, type ) {
	
	    			if ( typeof( value ) === 'number' ) return value;
	
	    			console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );
	
	    			return type[ value ];
	
	    		}
	
	    		var textures = {};
	
	    		if ( json !== undefined ) {
	
	    			for ( var i = 0, l = json.length; i < l; i ++ ) {
	
	    				var data = json[ i ];
	
	    				if ( data.image === undefined ) {
	
	    					console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid );
	
	    				}
	
	    				if ( images[ data.image ] === undefined ) {
	
	    					console.warn( 'THREE.ObjectLoader: Undefined image', data.image );
	
	    				}
	
	    				var texture = new Texture( images[ data.image ] );
	    				texture.needsUpdate = true;
	
	    				texture.uuid = data.uuid;
	
	    				if ( data.name !== undefined ) texture.name = data.name;
	
	    				if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );
	
	    				if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );
	    				if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );
	    				if ( data.wrap !== undefined ) {
	
	    					texture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );
	    					texture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );
	
	    				}
	
	    				if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );
	    				if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );
	    				if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;
	
	    				if ( data.flipY !== undefined ) texture.flipY = data.flipY;
	
	    				textures[ data.uuid ] = texture;
	
	    			}
	
	    		}
	
	    		return textures;
	
	    	},
	
	    	parseObject: function () {
	
	    		var matrix = new Matrix4();
	
	    		return function parseObject( data, geometries, materials ) {
	
	    			var object;
	
	    			function getGeometry( name ) {
	
	    				if ( geometries[ name ] === undefined ) {
	
	    					console.warn( 'THREE.ObjectLoader: Undefined geometry', name );
	
	    				}
	
	    				return geometries[ name ];
	
	    			}
	
	    			function getMaterial( name ) {
	
	    				if ( name === undefined ) return undefined;
	
	    				if ( materials[ name ] === undefined ) {
	
	    					console.warn( 'THREE.ObjectLoader: Undefined material', name );
	
	    				}
	
	    				return materials[ name ];
	
	    			}
	
	    			switch ( data.type ) {
	
	    				case 'Scene':
	
	    					object = new Scene();
	
	    					if ( data.background !== undefined ) {
	
	    						if ( Number.isInteger( data.background ) ) {
	
	    							object.background = new Color( data.background );
	
	    						}
	
	    					}
	
	    					if ( data.fog !== undefined ) {
	
	    						if ( data.fog.type === 'Fog' ) {
	
	    							object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );
	
	    						} else if ( data.fog.type === 'FogExp2' ) {
	
	    							object.fog = new FogExp2( data.fog.color, data.fog.density );
	
	    						}
	
	    					}
	
	    					break;
	
	    				case 'PerspectiveCamera':
	
	    					object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );
	
	    					if ( data.focus !== undefined ) object.focus = data.focus;
	    					if ( data.zoom !== undefined ) object.zoom = data.zoom;
	    					if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;
	    					if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;
	    					if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );
	
	    					break;
	
	    				case 'OrthographicCamera':
	
	    					object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );
	
	    					break;
	
	    				case 'AmbientLight':
	
	    					object = new AmbientLight( data.color, data.intensity );
	
	    					break;
	
	    				case 'DirectionalLight':
	
	    					object = new DirectionalLight( data.color, data.intensity );
	
	    					break;
	
	    				case 'PointLight':
	
	    					object = new PointLight( data.color, data.intensity, data.distance, data.decay );
	
	    					break;
	
	    				case 'SpotLight':
	
	    					object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );
	
	    					break;
	
	    				case 'HemisphereLight':
	
	    					object = new HemisphereLight( data.color, data.groundColor, data.intensity );
	
	    					break;
	
	    				case 'Mesh':
	
	    					var geometry = getGeometry( data.geometry );
	    					var material = getMaterial( data.material );
	
	    					if ( geometry.bones && geometry.bones.length > 0 ) {
	
	    						object = new SkinnedMesh( geometry, material );
	
	    					} else {
	
	    						object = new Mesh( geometry, material );
	
	    					}
	
	    					break;
	
	    				case 'LOD':
	
	    					object = new LOD();
	
	    					break;
	
	    				case 'Line':
	
	    					object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );
	
	    					break;
	
	    				case 'LineSegments':
	
	    					object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );
	
	    					break;
	
	    				case 'PointCloud':
	    				case 'Points':
	
	    					object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );
	
	    					break;
	
	    				case 'Sprite':
	
	    					object = new Sprite( getMaterial( data.material ) );
	
	    					break;
	
	    				case 'Group':
	
	    					object = new Group();
	
	    					break;
	
	    				default:
	
	    					object = new Object3D();
	
	    			}
	
	    			object.uuid = data.uuid;
	
	    			if ( data.name !== undefined ) object.name = data.name;
	    			if ( data.matrix !== undefined ) {
	
	    				matrix.fromArray( data.matrix );
	    				matrix.decompose( object.position, object.quaternion, object.scale );
	
	    			} else {
	
	    				if ( data.position !== undefined ) object.position.fromArray( data.position );
	    				if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );
	    				if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );
	    				if ( data.scale !== undefined ) object.scale.fromArray( data.scale );
	
	    			}
	
	    			if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;
	    			if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;
	
	    			if ( data.shadow ) {
	
	    				if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;
	    				if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;
	    				if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );
	    				if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );
	
	    			}
	
	    			if ( data.visible !== undefined ) object.visible = data.visible;
	    			if ( data.userData !== undefined ) object.userData = data.userData;
	
	    			if ( data.children !== undefined ) {
	
	    				for ( var child in data.children ) {
	
	    					object.add( this.parseObject( data.children[ child ], geometries, materials ) );
	
	    				}
	
	    			}
	
	    			if ( data.type === 'LOD' ) {
	
	    				var levels = data.levels;
	
	    				for ( var l = 0; l < levels.length; l ++ ) {
	
	    					var level = levels[ l ];
	    					var child = object.getObjectByProperty( 'uuid', level.object );
	
	    					if ( child !== undefined ) {
	
	    						object.addLevel( child, level.distance );
	
	    					}
	
	    				}
	
	    			}
	
	    			return object;
	
	    		};
	
	    	}()
	
	    } );
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * Extensible curve object
	     *
	     * Some common of Curve methods
	     * .getPoint(t), getTangent(t)
	     * .getPointAt(u), getTangentAt(u)
	     * .getPoints(), .getSpacedPoints()
	     * .getLength()
	     * .updateArcLengths()
	     *
	     * This following classes subclasses THREE.Curve:
	     *
	     * -- 2d classes --
	     * THREE.LineCurve
	     * THREE.QuadraticBezierCurve
	     * THREE.CubicBezierCurve
	     * THREE.SplineCurve
	     * THREE.ArcCurve
	     * THREE.EllipseCurve
	     *
	     * -- 3d classes --
	     * THREE.LineCurve3
	     * THREE.QuadraticBezierCurve3
	     * THREE.CubicBezierCurve3
	     * THREE.SplineCurve3
	     *
	     * A series of curves can be represented as a THREE.CurvePath
	     *
	     **/
	
	    /**************************************************************
	     *	Abstract Curve base class
	     **************************************************************/
	
	    function Curve() {}
	
	    Curve.prototype = {
	
	    	constructor: Curve,
	
	    	// Virtual base class method to overwrite and implement in subclasses
	    	//	- t [0 .. 1]
	
	    	getPoint: function ( t ) {
	
	    		console.warn( "THREE.Curve: Warning, getPoint() not implemented!" );
	    		return null;
	
	    	},
	
	    	// Get point at relative position in curve according to arc length
	    	// - u [0 .. 1]
	
	    	getPointAt: function ( u ) {
	
	    		var t = this.getUtoTmapping( u );
	    		return this.getPoint( t );
	
	    	},
	
	    	// Get sequence of points using getPoint( t )
	
	    	getPoints: function ( divisions ) {
	
	    		if ( ! divisions ) divisions = 5;
	
	    		var points = [];
	
	    		for ( var d = 0; d <= divisions; d ++ ) {
	
	    			points.push( this.getPoint( d / divisions ) );
	
	    		}
	
	    		return points;
	
	    	},
	
	    	// Get sequence of points using getPointAt( u )
	
	    	getSpacedPoints: function ( divisions ) {
	
	    		if ( ! divisions ) divisions = 5;
	
	    		var points = [];
	
	    		for ( var d = 0; d <= divisions; d ++ ) {
	
	    			points.push( this.getPointAt( d / divisions ) );
	
	    		}
	
	    		return points;
	
	    	},
	
	    	// Get total curve arc length
	
	    	getLength: function () {
	
	    		var lengths = this.getLengths();
	    		return lengths[ lengths.length - 1 ];
	
	    	},
	
	    	// Get list of cumulative segment lengths
	
	    	getLengths: function ( divisions ) {
	
	    		if ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;
	
	    		if ( this.cacheArcLengths
	    			&& ( this.cacheArcLengths.length === divisions + 1 )
	    			&& ! this.needsUpdate ) {
	
	    			//console.log( "cached", this.cacheArcLengths );
	    			return this.cacheArcLengths;
	
	    		}
	
	    		this.needsUpdate = false;
	
	    		var cache = [];
	    		var current, last = this.getPoint( 0 );
	    		var p, sum = 0;
	
	    		cache.push( 0 );
	
	    		for ( p = 1; p <= divisions; p ++ ) {
	
	    			current = this.getPoint ( p / divisions );
	    			sum += current.distanceTo( last );
	    			cache.push( sum );
	    			last = current;
	
	    		}
	
	    		this.cacheArcLengths = cache;
	
	    		return cache; // { sums: cache, sum:sum }; Sum is in the last element.
	
	    	},
	
	    	updateArcLengths: function() {
	
	    		this.needsUpdate = true;
	    		this.getLengths();
	
	    	},
	
	    	// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
	
	    	getUtoTmapping: function ( u, distance ) {
	
	    		var arcLengths = this.getLengths();
	
	    		var i = 0, il = arcLengths.length;
	
	    		var targetArcLength; // The targeted u distance value to get
	
	    		if ( distance ) {
	
	    			targetArcLength = distance;
	
	    		} else {
	
	    			targetArcLength = u * arcLengths[ il - 1 ];
	
	    		}
	
	    		//var time = Date.now();
	
	    		// binary search for the index with largest value smaller than target u distance
	
	    		var low = 0, high = il - 1, comparison;
	
	    		while ( low <= high ) {
	
	    			i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats
	
	    			comparison = arcLengths[ i ] - targetArcLength;
	
	    			if ( comparison < 0 ) {
	
	    				low = i + 1;
	
	    			} else if ( comparison > 0 ) {
	
	    				high = i - 1;
	
	    			} else {
	
	    				high = i;
	    				break;
	
	    				// DONE
	
	    			}
	
	    		}
	
	    		i = high;
	
	    		//console.log('b' , i, low, high, Date.now()- time);
	
	    		if ( arcLengths[ i ] === targetArcLength ) {
	
	    			var t = i / ( il - 1 );
	    			return t;
	
	    		}
	
	    		// we could get finer grain at lengths, or use simple interpolation between two points
	
	    		var lengthBefore = arcLengths[ i ];
	    		var lengthAfter = arcLengths[ i + 1 ];
	
	    		var segmentLength = lengthAfter - lengthBefore;
	
	    		// determine where we are between the 'before' and 'after' points
	
	    		var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;
	
	    		// add that fractional amount to t
	
	    		var t = ( i + segmentFraction ) / ( il - 1 );
	
	    		return t;
	
	    	},
	
	    	// Returns a unit vector tangent at t
	    	// In case any sub curve does not implement its tangent derivation,
	    	// 2 points a small delta apart will be used to find its gradient
	    	// which seems to give a reasonable approximation
	
	    	getTangent: function( t ) {
	
	    		var delta = 0.0001;
	    		var t1 = t - delta;
	    		var t2 = t + delta;
	
	    		// Capping in case of danger
	
	    		if ( t1 < 0 ) t1 = 0;
	    		if ( t2 > 1 ) t2 = 1;
	
	    		var pt1 = this.getPoint( t1 );
	    		var pt2 = this.getPoint( t2 );
	
	    		var vec = pt2.clone().sub( pt1 );
	    		return vec.normalize();
	
	    	},
	
	    	getTangentAt: function ( u ) {
	
	    		var t = this.getUtoTmapping( u );
	    		return this.getTangent( t );
	
	    	}
	
	    };
	
	    // TODO: Transformation for Curves?
	
	    /**************************************************************
	     *	3D Curves
	     **************************************************************/
	
	    // A Factory method for creating new curve subclasses
	
	    Curve.create = function ( constructor, getPointFunc ) {
	
	    	constructor.prototype = Object.create( Curve.prototype );
	    	constructor.prototype.constructor = constructor;
	    	constructor.prototype.getPoint = getPointFunc;
	
	    	return constructor;
	
	    };
	
	    /**************************************************************
	     *	Line
	     **************************************************************/
	
	    function LineCurve( v1, v2 ) {
	
	    	this.v1 = v1;
	    	this.v2 = v2;
	
	    }
	
	    LineCurve.prototype = Object.create( Curve.prototype );
	    LineCurve.prototype.constructor = LineCurve;
	
	    LineCurve.prototype.isLineCurve = true;
	
	    LineCurve.prototype.getPoint = function ( t ) {
	
	    	if ( t === 1 ) {
	
	    		return this.v2.clone();
	
	    	}
	
	    	var point = this.v2.clone().sub( this.v1 );
	    	point.multiplyScalar( t ).add( this.v1 );
	
	    	return point;
	
	    };
	
	    // Line curve is linear, so we can overwrite default getPointAt
	
	    LineCurve.prototype.getPointAt = function ( u ) {
	
	    	return this.getPoint( u );
	
	    };
	
	    LineCurve.prototype.getTangent = function( t ) {
	
	    	var tangent = this.v2.clone().sub( this.v1 );
	
	    	return tangent.normalize();
	
	    };
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     *
	     **/
	
	    /**************************************************************
	     *	Curved Path - a curve path is simply a array of connected
	     *  curves, but retains the api of a curve
	     **************************************************************/
	
	    function CurvePath() {
	
	    	this.curves = [];
	
	    	this.autoClose = false; // Automatically closes the path
	
	    }
	
	    CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {
	
	    	constructor: CurvePath,
	
	    	add: function ( curve ) {
	
	    		this.curves.push( curve );
	
	    	},
	
	    	closePath: function () {
	
	    		// Add a line curve if start and end of lines are not connected
	    		var startPoint = this.curves[ 0 ].getPoint( 0 );
	    		var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );
	
	    		if ( ! startPoint.equals( endPoint ) ) {
	
	    			this.curves.push( new LineCurve( endPoint, startPoint ) );
	
	    		}
	
	    	},
	
	    	// To get accurate point with reference to
	    	// entire path distance at time t,
	    	// following has to be done:
	
	    	// 1. Length of each sub path have to be known
	    	// 2. Locate and identify type of curve
	    	// 3. Get t for the curve
	    	// 4. Return curve.getPointAt(t')
	
	    	getPoint: function ( t ) {
	
	    		var d = t * this.getLength();
	    		var curveLengths = this.getCurveLengths();
	    		var i = 0;
	
	    		// To think about boundaries points.
	
	    		while ( i < curveLengths.length ) {
	
	    			if ( curveLengths[ i ] >= d ) {
	
	    				var diff = curveLengths[ i ] - d;
	    				var curve = this.curves[ i ];
	
	    				var segmentLength = curve.getLength();
	    				var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;
	
	    				return curve.getPointAt( u );
	
	    			}
	
	    			i ++;
	
	    		}
	
	    		return null;
	
	    		// loop where sum != 0, sum > d , sum+1 <d
	
	    	},
	
	    	// We cannot use the default THREE.Curve getPoint() with getLength() because in
	    	// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
	    	// getPoint() depends on getLength
	
	    	getLength: function () {
	
	    		var lens = this.getCurveLengths();
	    		return lens[ lens.length - 1 ];
	
	    	},
	
	    	// cacheLengths must be recalculated.
	    	updateArcLengths: function () {
	
	    		this.needsUpdate = true;
	    		this.cacheLengths = null;
	    		this.getLengths();
	
	    	},
	
	    	// Compute lengths and cache them
	    	// We cannot overwrite getLengths() because UtoT mapping uses it.
	
	    	getCurveLengths: function () {
	
	    		// We use cache values if curves and cache array are same length
	
	    		if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {
	
	    			return this.cacheLengths;
	
	    		}
	
	    		// Get length of sub-curve
	    		// Push sums into cached array
	
	    		var lengths = [], sums = 0;
	
	    		for ( var i = 0, l = this.curves.length; i < l; i ++ ) {
	
	    			sums += this.curves[ i ].getLength();
	    			lengths.push( sums );
	
	    		}
	
	    		this.cacheLengths = lengths;
	
	    		return lengths;
	
	    	},
	
	    	getSpacedPoints: function ( divisions ) {
	
	    		if ( ! divisions ) divisions = 40;
	
	    		var points = [];
	
	    		for ( var i = 0; i <= divisions; i ++ ) {
	
	    			points.push( this.getPoint( i / divisions ) );
	
	    		}
	
	    		if ( this.autoClose ) {
	
	    			points.push( points[ 0 ] );
	
	    		}
	
	    		return points;
	
	    	},
	
	    	getPoints: function ( divisions ) {
	
	    		divisions = divisions || 12;
	
	    		var points = [], last;
	
	    		for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {
	
	    			var curve = curves[ i ];
	    			var resolution = (curve && curve.isEllipseCurve) ? divisions * 2
	    				: (curve && curve.isLineCurve) ? 1
	    				: (curve && curve.isSplineCurve) ? divisions * curve.points.length
	    				: divisions;
	
	    			var pts = curve.getPoints( resolution );
	
	    			for ( var j = 0; j < pts.length; j++ ) {
	
	    				var point = pts[ j ];
	
	    				if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates
	
	    				points.push( point );
	    				last = point;
	
	    			}
	
	    		}
	
	    		if ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {
	
	    			points.push( points[ 0 ] );
	
	    		}
	
	    		return points;
	
	    	},
	
	    	/**************************************************************
	    	 *	Create Geometries Helpers
	    	 **************************************************************/
	
	    	/// Generate geometry from path points (for Line or Points objects)
	
	    	createPointsGeometry: function ( divisions ) {
	
	    		var pts = this.getPoints( divisions );
	    		return this.createGeometry( pts );
	
	    	},
	
	    	// Generate geometry from equidistant sampling along the path
	
	    	createSpacedPointsGeometry: function ( divisions ) {
	
	    		var pts = this.getSpacedPoints( divisions );
	    		return this.createGeometry( pts );
	
	    	},
	
	    	createGeometry: function ( points ) {
	
	    		var geometry = new Geometry();
	
	    		for ( var i = 0, l = points.length; i < l; i ++ ) {
	
	    			var point = points[ i ];
	    			geometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );
	
	    		}
	
	    		return geometry;
	
	    	}
	
	    } );
	
	    /**************************************************************
	     *	Ellipse curve
	     **************************************************************/
	
	    function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {
	
	    	this.aX = aX;
	    	this.aY = aY;
	
	    	this.xRadius = xRadius;
	    	this.yRadius = yRadius;
	
	    	this.aStartAngle = aStartAngle;
	    	this.aEndAngle = aEndAngle;
	
	    	this.aClockwise = aClockwise;
	
	    	this.aRotation = aRotation || 0;
	
	    }
	
	    EllipseCurve.prototype = Object.create( Curve.prototype );
	    EllipseCurve.prototype.constructor = EllipseCurve;
	
	    EllipseCurve.prototype.isEllipseCurve = true;
	
	    EllipseCurve.prototype.getPoint = function( t ) {
	
	    	var twoPi = Math.PI * 2;
	    	var deltaAngle = this.aEndAngle - this.aStartAngle;
	    	var samePoints = Math.abs( deltaAngle ) < Number.EPSILON;
	
	    	// ensures that deltaAngle is 0 .. 2 PI
	    	while ( deltaAngle < 0 ) deltaAngle += twoPi;
	    	while ( deltaAngle > twoPi ) deltaAngle -= twoPi;
	
	    	if ( deltaAngle < Number.EPSILON ) {
	
	    		if ( samePoints ) {
	
	    			deltaAngle = 0;
	
	    		} else {
	
	    			deltaAngle = twoPi;
	
	    		}
	
	    	}
	
	    	if ( this.aClockwise === true && ! samePoints ) {
	
	    		if ( deltaAngle === twoPi ) {
	
	    			deltaAngle = - twoPi;
	
	    		} else {
	
	    			deltaAngle = deltaAngle - twoPi;
	
	    		}
	
	    	}
	
	    	var angle = this.aStartAngle + t * deltaAngle;
	    	var x = this.aX + this.xRadius * Math.cos( angle );
	    	var y = this.aY + this.yRadius * Math.sin( angle );
	
	    	if ( this.aRotation !== 0 ) {
	
	    		var cos = Math.cos( this.aRotation );
	    		var sin = Math.sin( this.aRotation );
	
	    		var tx = x - this.aX;
	    		var ty = y - this.aY;
	
	    		// Rotate the point about the center of the ellipse.
	    		x = tx * cos - ty * sin + this.aX;
	    		y = tx * sin + ty * cos + this.aY;
	
	    	}
	
	    	return new Vector2( x, y );
	
	    };
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     */
	
	    exports.CurveUtils = {
	
	    	tangentQuadraticBezier: function ( t, p0, p1, p2 ) {
	
	    		return 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );
	
	    	},
	
	    	// Puay Bing, thanks for helping with this derivative!
	
	    	tangentCubicBezier: function ( t, p0, p1, p2, p3 ) {
	
	    		return - 3 * p0 * ( 1 - t ) * ( 1 - t )  +
	    			3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +
	    			6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +
	    			3 * t * t * p3;
	
	    	},
	
	    	tangentSpline: function ( t, p0, p1, p2, p3 ) {
	
	    		// To check if my formulas are correct
	
	    		var h00 = 6 * t * t - 6 * t; 	// derived from 2t^3 − 3t^2 + 1
	    		var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t
	    		var h01 = - 6 * t * t + 6 * t; 	// − 2t3 + 3t2
	    		var h11 = 3 * t * t - 2 * t;	// t3 − t2
	
	    		return h00 + h10 + h01 + h11;
	
	    	},
	
	    	// Catmull-Rom
	
	    	interpolate: function( p0, p1, p2, p3, t ) {
	
	    		var v0 = ( p2 - p0 ) * 0.5;
	    		var v1 = ( p3 - p1 ) * 0.5;
	    		var t2 = t * t;
	    		var t3 = t * t2;
	    		return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;
	
	    	}
	
	    };
	
	    /**************************************************************
	     *	Spline curve
	     **************************************************************/
	
	    function SplineCurve( points /* array of Vector2 */ ) {
	
	    	this.points = ( points === undefined ) ? [] : points;
	
	    }
	
	    SplineCurve.prototype = Object.create( Curve.prototype );
	    SplineCurve.prototype.constructor = SplineCurve;
	
	    SplineCurve.prototype.isSplineCurve = true;
	
	    SplineCurve.prototype.getPoint = function ( t ) {
	
	    	var points = this.points;
	    	var point = ( points.length - 1 ) * t;
	
	    	var intPoint = Math.floor( point );
	    	var weight = point - intPoint;
	
	    	var point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];
	    	var point1 = points[ intPoint ];
	    	var point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
	    	var point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];
	
	    	var interpolate = exports.CurveUtils.interpolate;
	
	    	return new Vector2(
	    		interpolate( point0.x, point1.x, point2.x, point3.x, weight ),
	    		interpolate( point0.y, point1.y, point2.y, point3.y, weight )
	    	);
	
	    };
	
	    /**************************************************************
	     *	Cubic Bezier curve
	     **************************************************************/
	
	    function CubicBezierCurve( v0, v1, v2, v3 ) {
	
	    	this.v0 = v0;
	    	this.v1 = v1;
	    	this.v2 = v2;
	    	this.v3 = v3;
	
	    }
	
	    CubicBezierCurve.prototype = Object.create( Curve.prototype );
	    CubicBezierCurve.prototype.constructor = CubicBezierCurve;
	
	    CubicBezierCurve.prototype.getPoint = function ( t ) {
	
	    	var b3 = exports.ShapeUtils.b3;
	
	    	return new Vector2(
	    		b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),
	    		b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )
	    	);
	
	    };
	
	    CubicBezierCurve.prototype.getTangent = function( t ) {
	
	    	var tangentCubicBezier = exports.CurveUtils.tangentCubicBezier;
	
	    	return new Vector2(
	    		tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),
	    		tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )
	    	).normalize();
	
	    };
	
	    /**************************************************************
	     *	Quadratic Bezier curve
	     **************************************************************/
	
	
	    function QuadraticBezierCurve( v0, v1, v2 ) {
	
	    	this.v0 = v0;
	    	this.v1 = v1;
	    	this.v2 = v2;
	
	    }
	
	    QuadraticBezierCurve.prototype = Object.create( Curve.prototype );
	    QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;
	
	
	    QuadraticBezierCurve.prototype.getPoint = function ( t ) {
	
	    	var b2 = exports.ShapeUtils.b2;
	
	    	return new Vector2(
	    		b2( t, this.v0.x, this.v1.x, this.v2.x ),
	    		b2( t, this.v0.y, this.v1.y, this.v2.y )
	    	);
	
	    };
	
	
	    QuadraticBezierCurve.prototype.getTangent = function( t ) {
	
	    	var tangentQuadraticBezier = exports.CurveUtils.tangentQuadraticBezier;
	
	    	return new Vector2(
	    		tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),
	    		tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )
	    	).normalize();
	
	    };
	
	    var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {
	
	    	fromPoints: function ( vectors ) {
	
	    		this.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );
	
	    		for ( var i = 1, l = vectors.length; i < l; i ++ ) {
	
	    			this.lineTo( vectors[ i ].x, vectors[ i ].y );
	
	    		}
	
	    	},
	
	    	moveTo: function ( x, y ) {
	
	    		this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?
	
	    	},
	
	    	lineTo: function ( x, y ) {
	
	    		var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );
	    		this.curves.push( curve );
	
	    		this.currentPoint.set( x, y );
	
	    	},
	
	    	quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {
	
	    		var curve = new QuadraticBezierCurve(
	    			this.currentPoint.clone(),
	    			new Vector2( aCPx, aCPy ),
	    			new Vector2( aX, aY )
	    		);
	
	    		this.curves.push( curve );
	
	    		this.currentPoint.set( aX, aY );
	
	    	},
	
	    	bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {
	
	    		var curve = new CubicBezierCurve(
	    			this.currentPoint.clone(),
	    			new Vector2( aCP1x, aCP1y ),
	    			new Vector2( aCP2x, aCP2y ),
	    			new Vector2( aX, aY )
	    		);
	
	    		this.curves.push( curve );
	
	    		this.currentPoint.set( aX, aY );
	
	    	},
	
	    	splineThru: function ( pts /*Array of Vector*/ ) {
	
	    		var npts = [ this.currentPoint.clone() ].concat( pts );
	
	    		var curve = new SplineCurve( npts );
	    		this.curves.push( curve );
	
	    		this.currentPoint.copy( pts[ pts.length - 1 ] );
	
	    	},
	
	    	arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {
	
	    		var x0 = this.currentPoint.x;
	    		var y0 = this.currentPoint.y;
	
	    		this.absarc( aX + x0, aY + y0, aRadius,
	    			aStartAngle, aEndAngle, aClockwise );
	
	    	},
	
	    	absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {
	
	    		this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );
	
	    	},
	
	    	ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {
	
	    		var x0 = this.currentPoint.x;
	    		var y0 = this.currentPoint.y;
	
	    		this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );
	
	    	},
	
	    	absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {
	
	    		var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );
	
	    		if ( this.curves.length > 0 ) {
	
	    			// if a previous curve is present, attempt to join
	    			var firstPoint = curve.getPoint( 0 );
	
	    			if ( ! firstPoint.equals( this.currentPoint ) ) {
	
	    				this.lineTo( firstPoint.x, firstPoint.y );
	
	    			}
	
	    		}
	
	    		this.curves.push( curve );
	
	    		var lastPoint = curve.getPoint( 1 );
	    		this.currentPoint.copy( lastPoint );
	
	    	}
	
	    } );
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * Defines a 2d shape plane using paths.
	     **/
	
	    // STEP 1 Create a path.
	    // STEP 2 Turn path into shape.
	    // STEP 3 ExtrudeGeometry takes in Shape/Shapes
	    // STEP 3a - Extract points from each shape, turn to vertices
	    // STEP 3b - Triangulate each shape, add faces.
	
	    function Shape() {
	
	    	Path.apply( this, arguments );
	
	    	this.holes = [];
	
	    }
	
	    Shape.prototype = Object.assign( Object.create( PathPrototype ), {
	
	    	constructor: Shape,
	
	    	getPointsHoles: function ( divisions ) {
	
	    		var holesPts = [];
	
	    		for ( var i = 0, l = this.holes.length; i < l; i ++ ) {
	
	    			holesPts[ i ] = this.holes[ i ].getPoints( divisions );
	
	    		}
	
	    		return holesPts;
	
	    	},
	
	    	// Get points of shape and holes (keypoints based on segments parameter)
	
	    	extractAllPoints: function ( divisions ) {
	
	    		return {
	
	    			shape: this.getPoints( divisions ),
	    			holes: this.getPointsHoles( divisions )
	
	    		};
	
	    	},
	
	    	extractPoints: function ( divisions ) {
	
	    		return this.extractAllPoints( divisions );
	
	    	}
	
	    } );
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * Creates free form 2d path using series of points, lines or curves.
	     *
	     **/
	
	    function Path( points ) {
	
	    	CurvePath.call( this );
	    	this.currentPoint = new Vector2();
	
	    	if ( points ) {
	
	    		this.fromPoints( points );
	
	    	}
	
	    }
	
	    Path.prototype = PathPrototype;
	    PathPrototype.constructor = Path;
	
	
	    // minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
	    function ShapePath() {
	    	this.subPaths = [];
	    	this.currentPath = null;
	    }
	
	    ShapePath.prototype = {
	    	moveTo: function ( x, y ) {
	    		this.currentPath = new Path();
	    		this.subPaths.push(this.currentPath);
	    		this.currentPath.moveTo( x, y );
	    	},
	    	lineTo: function ( x, y ) {
	    		this.currentPath.lineTo( x, y );
	    	},
	    	quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {
	    		this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );
	    	},
	    	bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {
	    		this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );
	    	},
	    	splineThru: function ( pts ) {
	    		this.currentPath.splineThru( pts );
	    	},
	
	    	toShapes: function ( isCCW, noHoles ) {
	
	    		function toShapesNoHoles( inSubpaths ) {
	
	    			var shapes = [];
	
	    			for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {
	
	    				var tmpPath = inSubpaths[ i ];
	
	    				var tmpShape = new Shape();
	    				tmpShape.curves = tmpPath.curves;
	
	    				shapes.push( tmpShape );
	
	    			}
	
	    			return shapes;
	
	    		}
	
	    		function isPointInsidePolygon( inPt, inPolygon ) {
	
	    			var polyLen = inPolygon.length;
	
	    			// inPt on polygon contour => immediate success    or
	    			// toggling of inside/outside at every single! intersection point of an edge
	    			//  with the horizontal line through inPt, left of inPt
	    			//  not counting lowerY endpoints of edges and whole edges on that line
	    			var inside = false;
	    			for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {
	
	    				var edgeLowPt  = inPolygon[ p ];
	    				var edgeHighPt = inPolygon[ q ];
	
	    				var edgeDx = edgeHighPt.x - edgeLowPt.x;
	    				var edgeDy = edgeHighPt.y - edgeLowPt.y;
	
	    				if ( Math.abs( edgeDy ) > Number.EPSILON ) {
	
	    					// not parallel
	    					if ( edgeDy < 0 ) {
	
	    						edgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;
	    						edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;
	
	    					}
	    					if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) 		continue;
	
	    					if ( inPt.y === edgeLowPt.y ) {
	
	    						if ( inPt.x === edgeLowPt.x )		return	true;		// inPt is on contour ?
	    						// continue;				// no intersection or edgeLowPt => doesn't count !!!
	
	    					} else {
	
	    						var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );
	    						if ( perpEdge === 0 )				return	true;		// inPt is on contour ?
	    						if ( perpEdge < 0 ) 				continue;
	    						inside = ! inside;		// true intersection left of inPt
	
	    					}
	
	    				} else {
	
	    					// parallel or collinear
	    					if ( inPt.y !== edgeLowPt.y ) 		continue;			// parallel
	    					// edge lies on the same horizontal line as inPt
	    					if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||
	    						 ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )		return	true;	// inPt: Point on contour !
	    					// continue;
	
	    				}
	
	    			}
	
	    			return	inside;
	
	    		}
	
	    		var isClockWise = exports.ShapeUtils.isClockWise;
	
	    		var subPaths = this.subPaths;
	    		if ( subPaths.length === 0 ) return [];
	
	    		if ( noHoles === true )	return	toShapesNoHoles( subPaths );
	
	
	    		var solid, tmpPath, tmpShape, shapes = [];
	
	    		if ( subPaths.length === 1 ) {
	
	    			tmpPath = subPaths[ 0 ];
	    			tmpShape = new Shape();
	    			tmpShape.curves = tmpPath.curves;
	    			shapes.push( tmpShape );
	    			return shapes;
	
	    		}
	
	    		var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );
	    		holesFirst = isCCW ? ! holesFirst : holesFirst;
	
	    		// console.log("Holes first", holesFirst);
	
	    		var betterShapeHoles = [];
	    		var newShapes = [];
	    		var newShapeHoles = [];
	    		var mainIdx = 0;
	    		var tmpPoints;
	
	    		newShapes[ mainIdx ] = undefined;
	    		newShapeHoles[ mainIdx ] = [];
	
	    		for ( var i = 0, l = subPaths.length; i < l; i ++ ) {
	
	    			tmpPath = subPaths[ i ];
	    			tmpPoints = tmpPath.getPoints();
	    			solid = isClockWise( tmpPoints );
	    			solid = isCCW ? ! solid : solid;
	
	    			if ( solid ) {
	
	    				if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )	mainIdx ++;
	
	    				newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };
	    				newShapes[ mainIdx ].s.curves = tmpPath.curves;
	
	    				if ( holesFirst )	mainIdx ++;
	    				newShapeHoles[ mainIdx ] = [];
	
	    				//console.log('cw', i);
	
	    			} else {
	
	    				newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );
	
	    				//console.log('ccw', i);
	
	    			}
	
	    		}
	
	    		// only Holes? -> probably all Shapes with wrong orientation
	    		if ( ! newShapes[ 0 ] )	return	toShapesNoHoles( subPaths );
	
	
	    		if ( newShapes.length > 1 ) {
	
	    			var ambiguous = false;
	    			var toChange = [];
	
	    			for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {
	
	    				betterShapeHoles[ sIdx ] = [];
	
	    			}
	
	    			for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {
	
	    				var sho = newShapeHoles[ sIdx ];
	
	    				for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {
	
	    					var ho = sho[ hIdx ];
	    					var hole_unassigned = true;
	
	    					for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {
	
	    						if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {
	
	    							if ( sIdx !== s2Idx )	toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );
	    							if ( hole_unassigned ) {
	
	    								hole_unassigned = false;
	    								betterShapeHoles[ s2Idx ].push( ho );
	
	    							} else {
	
	    								ambiguous = true;
	
	    							}
	
	    						}
	
	    					}
	    					if ( hole_unassigned ) {
	
	    						betterShapeHoles[ sIdx ].push( ho );
	
	    					}
	
	    				}
	
	    			}
	    			// console.log("ambiguous: ", ambiguous);
	    			if ( toChange.length > 0 ) {
	
	    				// console.log("to change: ", toChange);
	    				if ( ! ambiguous )	newShapeHoles = betterShapeHoles;
	
	    			}
	
	    		}
	
	    		var tmpHoles;
	
	    		for ( var i = 0, il = newShapes.length; i < il; i ++ ) {
	
	    			tmpShape = newShapes[ i ].s;
	    			shapes.push( tmpShape );
	    			tmpHoles = newShapeHoles[ i ];
	
	    			for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {
	
	    				tmpShape.holes.push( tmpHoles[ j ].h );
	
	    			}
	
	    		}
	
	    		//console.log("shape", shapes);
	
	    		return shapes;
	
	    	}
	    }
	
	    /**
	     * @author zz85 / http://www.lab4games.net/zz85/blog
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Font( data ) {
	
	    	this.data = data;
	
	    }
	
	    Object.assign( Font.prototype, {
	
	    	isFont: true,
	
	    	generateShapes: function ( text, size, divisions ) {
	
	    		function createPaths( text ) {
	
	    			var chars = String( text ).split( '' );
	    			var scale = size / data.resolution;
	    			var offset = 0;
	
	    			var paths = [];
	
	    			for ( var i = 0; i < chars.length; i ++ ) {
	
	    				var ret = createPath( chars[ i ], scale, offset );
	    				offset += ret.offset;
	
	    				paths.push( ret.path );
	
	    			}
	
	    			return paths;
	
	    		}
	
	    		function createPath( c, scale, offset ) {
	
	    			var glyph = data.glyphs[ c ] || data.glyphs[ '?' ];
	
	    			if ( ! glyph ) return;
	
	    			var path = new ShapePath();
	
	    			var pts = [], b2 = exports.ShapeUtils.b2, b3 = exports.ShapeUtils.b3;
	    			var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;
	
	    			if ( glyph.o ) {
	
	    				var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );
	
	    				for ( var i = 0, l = outline.length; i < l; ) {
	
	    					var action = outline[ i ++ ];
	
	    					switch ( action ) {
	
	    						case 'm': // moveTo
	
	    							x = outline[ i ++ ] * scale + offset;
	    							y = outline[ i ++ ] * scale;
	
	    							path.moveTo( x, y );
	
	    							break;
	
	    						case 'l': // lineTo
	
	    							x = outline[ i ++ ] * scale + offset;
	    							y = outline[ i ++ ] * scale;
	
	    							path.lineTo( x, y );
	
	    							break;
	
	    						case 'q': // quadraticCurveTo
	
	    							cpx  = outline[ i ++ ] * scale + offset;
	    							cpy  = outline[ i ++ ] * scale;
	    							cpx1 = outline[ i ++ ] * scale + offset;
	    							cpy1 = outline[ i ++ ] * scale;
	
	    							path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );
	
	    							laste = pts[ pts.length - 1 ];
	
	    							if ( laste ) {
	
	    								cpx0 = laste.x;
	    								cpy0 = laste.y;
	
	    								for ( var i2 = 1; i2 <= divisions; i2 ++ ) {
	
	    									var t = i2 / divisions;
	    									b2( t, cpx0, cpx1, cpx );
	    									b2( t, cpy0, cpy1, cpy );
	
	    								}
	
	    							}
	
	    							break;
	
	    						case 'b': // bezierCurveTo
	
	    							cpx  = outline[ i ++ ] * scale + offset;
	    							cpy  = outline[ i ++ ] * scale;
	    							cpx1 = outline[ i ++ ] * scale + offset;
	    							cpy1 = outline[ i ++ ] * scale;
	    							cpx2 = outline[ i ++ ] * scale + offset;
	    							cpy2 = outline[ i ++ ] * scale;
	
	    							path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );
	
	    							laste = pts[ pts.length - 1 ];
	
	    							if ( laste ) {
	
	    								cpx0 = laste.x;
	    								cpy0 = laste.y;
	
	    								for ( var i2 = 1; i2 <= divisions; i2 ++ ) {
	
	    									var t = i2 / divisions;
	    									b3( t, cpx0, cpx1, cpx2, cpx );
	    									b3( t, cpy0, cpy1, cpy2, cpy );
	
	    								}
	
	    							}
	
	    							break;
	
	    					}
	
	    				}
	
	    			}
	
	    			return { offset: glyph.ha * scale, path: path };
	
	    		}
	
	    		//
	
	    		if ( size === undefined ) size = 100;
	    		if ( divisions === undefined ) divisions = 4;
	
	    		var data = this.data;
	
	    		var paths = createPaths( text );
	    		var shapes = [];
	
	    		for ( var p = 0, pl = paths.length; p < pl; p ++ ) {
	
	    			Array.prototype.push.apply( shapes, paths[ p ].toShapes() );
	
	    		}
	
	    		return shapes;
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function FontLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( FontLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var scope = this;
	
	    		var loader = new XHRLoader( this.manager );
	    		loader.load( url, function ( text ) {
	
	    			var json;
	
	    			try {
	
	    				json = JSON.parse( text );
	
	    			} catch ( e ) {
	
	    				console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );
	    				json = JSON.parse( text.substring( 65, text.length - 2 ) );
	
	    			}
	
	    			var font = scope.parse( json );
	
	    			if ( onLoad ) onLoad( font );
	
	    		}, onProgress, onError );
	
	    	},
	
	    	parse: function ( json ) {
	
	    		return new Font( json );
	
	    	}
	
	    } );
	
	    var context;
	
	    function getAudioContext() {
	
	    	if ( context === undefined ) {
	
	    		context = new ( window.AudioContext || window.webkitAudioContext )();
	
	    	}
	
	    	return context;
	
	    }
	
	    /**
	     * @author Reece Aaron Lecrivain / http://reecenotes.com/
	     */
	
	    function AudioLoader( manager ) {
	
	    	this.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;
	
	    }
	
	    Object.assign( AudioLoader.prototype, {
	
	    	load: function ( url, onLoad, onProgress, onError ) {
	
	    		var loader = new XHRLoader( this.manager );
	    		loader.setResponseType( 'arraybuffer' );
	    		loader.load( url, function ( buffer ) {
	
	    			var context = getAudioContext();
	
	    			context.decodeAudioData( buffer, function ( audioBuffer ) {
	
	    				onLoad( audioBuffer );
	
	    			} );
	
	    		}, onProgress, onError );
	
	    	}
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function StereoCamera() {
	
	    	this.type = 'StereoCamera';
	
	    	this.aspect = 1;
	
	    	this.eyeSep = 0.064;
	
	    	this.cameraL = new PerspectiveCamera();
	    	this.cameraL.layers.enable( 1 );
	    	this.cameraL.matrixAutoUpdate = false;
	
	    	this.cameraR = new PerspectiveCamera();
	    	this.cameraR.layers.enable( 2 );
	    	this.cameraR.matrixAutoUpdate = false;
	
	    }
	
	    Object.assign( StereoCamera.prototype, {
	
	    	update: ( function () {
	
	    		var instance, focus, fov, aspect, near, far, zoom;
	
	    		var eyeRight = new Matrix4();
	    		var eyeLeft = new Matrix4();
	
	    		return function update( camera ) {
	
	    			var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||
	    												aspect !== camera.aspect * this.aspect || near !== camera.near ||
	    												far !== camera.far || zoom !== camera.zoom;
	
	    			if ( needsUpdate ) {
	
	    				instance = this;
	    				focus = camera.focus;
	    				fov = camera.fov;
	    				aspect = camera.aspect * this.aspect;
	    				near = camera.near;
	    				far = camera.far;
	    				zoom = camera.zoom;
	
	    				// Off-axis stereoscopic effect based on
	    				// http://paulbourke.net/stereographics/stereorender/
	
	    				var projectionMatrix = camera.projectionMatrix.clone();
	    				var eyeSep = this.eyeSep / 2;
	    				var eyeSepOnProjection = eyeSep * near / focus;
	    				var ymax = ( near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 ) ) / zoom;
	    				var xmin, xmax;
	
	    				// translate xOffset
	
	    				eyeLeft.elements[ 12 ] = - eyeSep;
	    				eyeRight.elements[ 12 ] = eyeSep;
	
	    				// for left eye
	
	    				xmin = - ymax * aspect + eyeSepOnProjection;
	    				xmax = ymax * aspect + eyeSepOnProjection;
	
	    				projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );
	    				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );
	
	    				this.cameraL.projectionMatrix.copy( projectionMatrix );
	
	    				// for right eye
	
	    				xmin = - ymax * aspect - eyeSepOnProjection;
	    				xmax = ymax * aspect - eyeSepOnProjection;
	
	    				projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );
	    				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );
	
	    				this.cameraR.projectionMatrix.copy( projectionMatrix );
	
	    			}
	
	    			this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );
	    			this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );
	
	    		};
	
	    	} )()
	
	    } );
	
	    /**
	     * Camera for rendering cube maps
	     *	- renders scene into axis-aligned cube
	     *
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function CubeCamera( near, far, cubeResolution ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'CubeCamera';
	
	    	var fov = 90, aspect = 1;
	
	    	var cameraPX = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraPX.up.set( 0, - 1, 0 );
	    	cameraPX.lookAt( new Vector3( 1, 0, 0 ) );
	    	this.add( cameraPX );
	
	    	var cameraNX = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraNX.up.set( 0, - 1, 0 );
	    	cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );
	    	this.add( cameraNX );
	
	    	var cameraPY = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraPY.up.set( 0, 0, 1 );
	    	cameraPY.lookAt( new Vector3( 0, 1, 0 ) );
	    	this.add( cameraPY );
	
	    	var cameraNY = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraNY.up.set( 0, 0, - 1 );
	    	cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );
	    	this.add( cameraNY );
	
	    	var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraPZ.up.set( 0, - 1, 0 );
	    	cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );
	    	this.add( cameraPZ );
	
	    	var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );
	    	cameraNZ.up.set( 0, - 1, 0 );
	    	cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );
	    	this.add( cameraNZ );
	
	    	var options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };
	
	    	this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );
	
	    	this.updateCubeMap = function ( renderer, scene ) {
	
	    		if ( this.parent === null ) this.updateMatrixWorld();
	
	    		var renderTarget = this.renderTarget;
	    		var generateMipmaps = renderTarget.texture.generateMipmaps;
	
	    		renderTarget.texture.generateMipmaps = false;
	
	    		renderTarget.activeCubeFace = 0;
	    		renderer.render( scene, cameraPX, renderTarget );
	
	    		renderTarget.activeCubeFace = 1;
	    		renderer.render( scene, cameraNX, renderTarget );
	
	    		renderTarget.activeCubeFace = 2;
	    		renderer.render( scene, cameraPY, renderTarget );
	
	    		renderTarget.activeCubeFace = 3;
	    		renderer.render( scene, cameraNY, renderTarget );
	
	    		renderTarget.activeCubeFace = 4;
	    		renderer.render( scene, cameraPZ, renderTarget );
	
	    		renderTarget.texture.generateMipmaps = generateMipmaps;
	
	    		renderTarget.activeCubeFace = 5;
	    		renderer.render( scene, cameraNZ, renderTarget );
	
	    		renderer.setRenderTarget( null );
	
	    	};
	
	    }
	
	    CubeCamera.prototype = Object.create( Object3D.prototype );
	    CubeCamera.prototype.constructor = CubeCamera;
	
	    function AudioListener() {
	
	    	Object3D.call( this );
	
	    	this.type = 'AudioListener';
	
	    	this.context = getAudioContext();
	
	    	this.gain = this.context.createGain();
	    	this.gain.connect( this.context.destination );
	
	    	this.filter = null;
	
	    }
	
	    AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: AudioListener,
	
	    	getInput: function () {
	
	    		return this.gain;
	
	    	},
	
	    	removeFilter: function ( ) {
	
	    		if ( this.filter !== null ) {
	
	    			this.gain.disconnect( this.filter );
	    			this.filter.disconnect( this.context.destination );
	    			this.gain.connect( this.context.destination );
	    			this.filter = null;
	
	    		}
	
	    	},
	
	    	getFilter: function () {
	
	    		return this.filter;
	
	    	},
	
	    	setFilter: function ( value ) {
	
	    		if ( this.filter !== null ) {
	
	    			this.gain.disconnect( this.filter );
	    			this.filter.disconnect( this.context.destination );
	
	    		} else {
	
	    			this.gain.disconnect( this.context.destination );
	
	    		}
	
	    		this.filter = value;
	    		this.gain.connect( this.filter );
	    		this.filter.connect( this.context.destination );
	
	    	},
	
	    	getMasterVolume: function () {
	
	    		return this.gain.gain.value;
	
	    	},
	
	    	setMasterVolume: function ( value ) {
	
	    		this.gain.gain.value = value;
	
	    	},
	
	    	updateMatrixWorld: ( function () {
	
	    		var position = new Vector3();
	    		var quaternion = new Quaternion();
	    		var scale = new Vector3();
	
	    		var orientation = new Vector3();
	
	    		return function updateMatrixWorld( force ) {
	
	    			Object3D.prototype.updateMatrixWorld.call( this, force );
	
	    			var listener = this.context.listener;
	    			var up = this.up;
	
	    			this.matrixWorld.decompose( position, quaternion, scale );
	
	    			orientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );
	
	    			listener.setPosition( position.x, position.y, position.z );
	    			listener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );
	
	    		};
	
	    	} )()
	
	    } );
	
	    function Audio( listener ) {
	
	    	Object3D.call( this );
	
	    	this.type = 'Audio';
	
	    	this.context = listener.context;
	    	this.source = this.context.createBufferSource();
	    	this.source.onended = this.onEnded.bind( this );
	
	    	this.gain = this.context.createGain();
	    	this.gain.connect( listener.getInput() );
	
	    	this.autoplay = false;
	
	    	this.startTime = 0;
	    	this.playbackRate = 1;
	    	this.isPlaying = false;
	    	this.hasPlaybackControl = true;
	    	this.sourceType = 'empty';
	
	    	this.filters = [];
	
	    }
	
	    Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {
	
	    	constructor: Audio,
	
	    	getOutput: function () {
	
	    		return this.gain;
	
	    	},
	
	    	setNodeSource: function ( audioNode ) {
	
	    		this.hasPlaybackControl = false;
	    		this.sourceType = 'audioNode';
	    		this.source = audioNode;
	    		this.connect();
	
	    		return this;
	
	    	},
	
	    	setBuffer: function ( audioBuffer ) {
	
	    		this.source.buffer = audioBuffer;
	    		this.sourceType = 'buffer';
	
	    		if ( this.autoplay ) this.play();
	
	    		return this;
	
	    	},
	
	    	play: function () {
	
	    		if ( this.isPlaying === true ) {
	
	    			console.warn( 'THREE.Audio: Audio is already playing.' );
	    			return;
	
	    		}
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return;
	
	    		}
	
	    		var source = this.context.createBufferSource();
	
	    		source.buffer = this.source.buffer;
	    		source.loop = this.source.loop;
	    		source.onended = this.source.onended;
	    		source.start( 0, this.startTime );
	    		source.playbackRate.value = this.playbackRate;
	
	    		this.isPlaying = true;
	
	    		this.source = source;
	
	    		return this.connect();
	
	    	},
	
	    	pause: function () {
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return;
	
	    		}
	
	    		this.source.stop();
	    		this.startTime = this.context.currentTime;
	    		this.isPlaying = false;
	
	    		return this;
	
	    	},
	
	    	stop: function () {
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return;
	
	    		}
	
	    		this.source.stop();
	    		this.startTime = 0;
	    		this.isPlaying = false;
	
	    		return this;
	
	    	},
	
	    	connect: function () {
	
	    		if ( this.filters.length > 0 ) {
	
	    			this.source.connect( this.filters[ 0 ] );
	
	    			for ( var i = 1, l = this.filters.length; i < l; i ++ ) {
	
	    				this.filters[ i - 1 ].connect( this.filters[ i ] );
	
	    			}
	
	    			this.filters[ this.filters.length - 1 ].connect( this.getOutput() );
	
	    		} else {
	
	    			this.source.connect( this.getOutput() );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	disconnect: function () {
	
	    		if ( this.filters.length > 0 ) {
	
	    			this.source.disconnect( this.filters[ 0 ] );
	
	    			for ( var i = 1, l = this.filters.length; i < l; i ++ ) {
	
	    				this.filters[ i - 1 ].disconnect( this.filters[ i ] );
	
	    			}
	
	    			this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );
	
	    		} else {
	
	    			this.source.disconnect( this.getOutput() );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	getFilters: function () {
	
	    		return this.filters;
	
	    	},
	
	    	setFilters: function ( value ) {
	
	    		if ( ! value ) value = [];
	
	    		if ( this.isPlaying === true ) {
	
	    			this.disconnect();
	    			this.filters = value;
	    			this.connect();
	
	    		} else {
	
	    			this.filters = value;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	getFilter: function () {
	
	    		return this.getFilters()[ 0 ];
	
	    	},
	
	    	setFilter: function ( filter ) {
	
	    		return this.setFilters( filter ? [ filter ] : [] );
	
	    	},
	
	    	setPlaybackRate: function ( value ) {
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return;
	
	    		}
	
	    		this.playbackRate = value;
	
	    		if ( this.isPlaying === true ) {
	
	    			this.source.playbackRate.value = this.playbackRate;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	getPlaybackRate: function () {
	
	    		return this.playbackRate;
	
	    	},
	
	    	onEnded: function () {
	
	    		this.isPlaying = false;
	
	    	},
	
	    	getLoop: function () {
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return false;
	
	    		}
	
	    		return this.source.loop;
	
	    	},
	
	    	setLoop: function ( value ) {
	
	    		if ( this.hasPlaybackControl === false ) {
	
	    			console.warn( 'THREE.Audio: this Audio has no playback control.' );
	    			return;
	
	    		}
	
	    		this.source.loop = value;
	
	    	},
	
	    	getVolume: function () {
	
	    		return this.gain.gain.value;
	
	    	},
	
	
	    	setVolume: function ( value ) {
	
	    		this.gain.gain.value = value;
	
	    		return this;
	
	    	}
	
	    } );
	
	    function PositionalAudio( listener ) {
	
	    	Audio.call( this, listener );
	
	    	this.panner = this.context.createPanner();
	    	this.panner.connect( this.gain );
	
	    }
	
	    PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {
	
	    	constructor: PositionalAudio,
	
	    	getOutput: function () {
	
	    		return this.panner;
	
	    	},
	
	    	getRefDistance: function () {
	
	    		return this.panner.refDistance;
	
	    	},
	
	    	setRefDistance: function ( value ) {
	
	    		this.panner.refDistance = value;
	
	    	},
	
	    	getRolloffFactor: function () {
	
	    		return this.panner.rolloffFactor;
	
	    	},
	
	    	setRolloffFactor: function ( value ) {
	
	    		this.panner.rolloffFactor = value;
	
	    	},
	
	    	getDistanceModel: function () {
	
	    		return this.panner.distanceModel;
	
	    	},
	
	    	setDistanceModel: function ( value ) {
	
	    		this.panner.distanceModel = value;
	
	    	},
	
	    	getMaxDistance: function () {
	
	    		return this.panner.maxDistance;
	
	    	},
	
	    	setMaxDistance: function ( value ) {
	
	    		this.panner.maxDistance = value;
	
	    	},
	
	    	updateMatrixWorld: ( function () {
	
	    		var position = new Vector3();
	
	    		return function updateMatrixWorld( force ) {
	
	    			Object3D.prototype.updateMatrixWorld.call( this, force );
	
	    			position.setFromMatrixPosition( this.matrixWorld );
	
	    			this.panner.setPosition( position.x, position.y, position.z );
	
	    		};
	
	    	} )()
	
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function AudioAnalyser( audio, fftSize ) {
	
	    	this.analyser = audio.context.createAnalyser();
	    	this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;
	
	    	this.data = new Uint8Array( this.analyser.frequencyBinCount );
	
	    	audio.getOutput().connect( this.analyser );
	
	    }
	
	    Object.assign( AudioAnalyser.prototype, {
	
	    	getFrequencyData: function () {
	
	    		this.analyser.getByteFrequencyData( this.data );
	
	    		return this.data;
	
	    	},
	
	    	getAverageFrequency: function () {
	
	    		var value = 0, data = this.getFrequencyData();
	
	    		for ( var i = 0; i < data.length; i ++ ) {
	
	    			value += data[ i ];
	
	    		}
	
	    		return value / data.length;
	
	    	}
	
	    } );
	
	    /**
	     *
	     * Buffered scene graph property that allows weighted accumulation.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function PropertyMixer( binding, typeName, valueSize ) {
	
	    	this.binding = binding;
	    	this.valueSize = valueSize;
	
	    	var bufferType = Float64Array,
	    		mixFunction;
	
	    	switch ( typeName ) {
	
	    		case 'quaternion':			mixFunction = this._slerp;		break;
	
	    		case 'string':
	    		case 'bool':
	
	    			bufferType = Array,		mixFunction = this._select;		break;
	
	    		default:					mixFunction = this._lerp;
	
	    	}
	
	    	this.buffer = new bufferType( valueSize * 4 );
	    	// layout: [ incoming | accu0 | accu1 | orig ]
	    	//
	    	// interpolators can use .buffer as their .result
	    	// the data then goes to 'incoming'
	    	//
	    	// 'accu0' and 'accu1' are used frame-interleaved for
	    	// the cumulative result and are compared to detect
	    	// changes
	    	//
	    	// 'orig' stores the original state of the property
	
	    	this._mixBufferRegion = mixFunction;
	
	    	this.cumulativeWeight = 0;
	
	    	this.useCount = 0;
	    	this.referenceCount = 0;
	
	    }
	
	    PropertyMixer.prototype = {
	
	    	constructor: PropertyMixer,
	
	    	// accumulate data in the 'incoming' region into 'accu<i>'
	    	accumulate: function( accuIndex, weight ) {
	
	    		// note: happily accumulating nothing when weight = 0, the caller knows
	    		// the weight and shouldn't have made the call in the first place
	
	    		var buffer = this.buffer,
	    			stride = this.valueSize,
	    			offset = accuIndex * stride + stride,
	
	    			currentWeight = this.cumulativeWeight;
	
	    		if ( currentWeight === 0 ) {
	
	    			// accuN := incoming * weight
	
	    			for ( var i = 0; i !== stride; ++ i ) {
	
	    				buffer[ offset + i ] = buffer[ i ];
	
	    			}
	
	    			currentWeight = weight;
	
	    		} else {
	
	    			// accuN := accuN + incoming * weight
	
	    			currentWeight += weight;
	    			var mix = weight / currentWeight;
	    			this._mixBufferRegion( buffer, offset, 0, mix, stride );
	
	    		}
	
	    		this.cumulativeWeight = currentWeight;
	
	    	},
	
	    	// apply the state of 'accu<i>' to the binding when accus differ
	    	apply: function( accuIndex ) {
	
	    		var stride = this.valueSize,
	    			buffer = this.buffer,
	    			offset = accuIndex * stride + stride,
	
	    			weight = this.cumulativeWeight,
	
	    			binding = this.binding;
	
	    		this.cumulativeWeight = 0;
	
	    		if ( weight < 1 ) {
	
	    			// accuN := accuN + original * ( 1 - cumulativeWeight )
	
	    			var originalValueOffset = stride * 3;
	
	    			this._mixBufferRegion(
	    					buffer, offset, originalValueOffset, 1 - weight, stride );
	
	    		}
	
	    		for ( var i = stride, e = stride + stride; i !== e; ++ i ) {
	
	    			if ( buffer[ i ] !== buffer[ i + stride ] ) {
	
	    				// value has changed -> update scene graph
	
	    				binding.setValue( buffer, offset );
	    				break;
	
	    			}
	
	    		}
	
	    	},
	
	    	// remember the state of the bound property and copy it to both accus
	    	saveOriginalState: function() {
	
	    		var binding = this.binding;
	
	    		var buffer = this.buffer,
	    			stride = this.valueSize,
	
	    			originalValueOffset = stride * 3;
	
	    		binding.getValue( buffer, originalValueOffset );
	
	    		// accu[0..1] := orig -- initially detect changes against the original
	    		for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {
	
	    			buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];
	
	    		}
	
	    		this.cumulativeWeight = 0;
	
	    	},
	
	    	// apply the state previously taken via 'saveOriginalState' to the binding
	    	restoreOriginalState: function() {
	
	    		var originalValueOffset = this.valueSize * 3;
	    		this.binding.setValue( this.buffer, originalValueOffset );
	
	    	},
	
	
	    	// mix functions
	
	    	_select: function( buffer, dstOffset, srcOffset, t, stride ) {
	
	    		if ( t >= 0.5 ) {
	
	    			for ( var i = 0; i !== stride; ++ i ) {
	
	    				buffer[ dstOffset + i ] = buffer[ srcOffset + i ];
	
	    			}
	
	    		}
	
	    	},
	
	    	_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {
	
	    		Quaternion.slerpFlat( buffer, dstOffset,
	    				buffer, dstOffset, buffer, srcOffset, t );
	
	    	},
	
	    	_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {
	
	    		var s = 1 - t;
	
	    		for ( var i = 0; i !== stride; ++ i ) {
	
	    			var j = dstOffset + i;
	
	    			buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;
	
	    		}
	
	    	}
	
	    };
	
	    /**
	     *
	     * A reference to a real property in the scene graph.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function PropertyBinding( rootNode, path, parsedPath ) {
	
	    	this.path = path;
	    	this.parsedPath = parsedPath ||
	    			PropertyBinding.parseTrackName( path );
	
	    	this.node = PropertyBinding.findNode(
	    			rootNode, this.parsedPath.nodeName ) || rootNode;
	
	    	this.rootNode = rootNode;
	
	    }
	
	    PropertyBinding.prototype = {
	
	    	constructor: PropertyBinding,
	
	    	getValue: function getValue_unbound( targetArray, offset ) {
	
	    		this.bind();
	    		this.getValue( targetArray, offset );
	
	    		// Note: This class uses a State pattern on a per-method basis:
	    		// 'bind' sets 'this.getValue' / 'setValue' and shadows the
	    		// prototype version of these methods with one that represents
	    		// the bound state. When the property is not found, the methods
	    		// become no-ops.
	
	    	},
	
	    	setValue: function getValue_unbound( sourceArray, offset ) {
	
	    		this.bind();
	    		this.setValue( sourceArray, offset );
	
	    	},
	
	    	// create getter / setter pair for a property in the scene graph
	    	bind: function() {
	
	    		var targetObject = this.node,
	    			parsedPath = this.parsedPath,
	
	    			objectName = parsedPath.objectName,
	    			propertyName = parsedPath.propertyName,
	    			propertyIndex = parsedPath.propertyIndex;
	
	    		if ( ! targetObject ) {
	
	    			targetObject = PropertyBinding.findNode(
	    					this.rootNode, parsedPath.nodeName ) || this.rootNode;
	
	    			this.node = targetObject;
	
	    		}
	
	    		// set fail state so we can just 'return' on error
	    		this.getValue = this._getValue_unavailable;
	    		this.setValue = this._setValue_unavailable;
	
	     		// ensure there is a value node
	    		if ( ! targetObject ) {
	
	    			console.error( "  trying to update node for track: " + this.path + " but it wasn't found." );
	    			return;
	
	    		}
	
	    		if ( objectName ) {
	
	    			var objectIndex = parsedPath.objectIndex;
	
	    			// special cases were we need to reach deeper into the hierarchy to get the face materials....
	    			switch ( objectName ) {
	
	    				case 'materials':
	
	    					if ( ! targetObject.material ) {
	
	    						console.error( '  can not bind to material as node does not have a material', this );
	    						return;
	
	    					}
	
	    					if ( ! targetObject.material.materials ) {
	
	    						console.error( '  can not bind to material.materials as node.material does not have a materials array', this );
	    						return;
	
	    					}
	
	    					targetObject = targetObject.material.materials;
	
	    					break;
	
	    				case 'bones':
	
	    					if ( ! targetObject.skeleton ) {
	
	    						console.error( '  can not bind to bones as node does not have a skeleton', this );
	    						return;
	
	    					}
	
	    					// potential future optimization: skip this if propertyIndex is already an integer
	    					// and convert the integer string to a true integer.
	
	    					targetObject = targetObject.skeleton.bones;
	
	    					// support resolving morphTarget names into indices.
	    					for ( var i = 0; i < targetObject.length; i ++ ) {
	
	    						if ( targetObject[ i ].name === objectIndex ) {
	
	    							objectIndex = i;
	    							break;
	
	    						}
	
	    					}
	
	    					break;
	
	    				default:
	
	    					if ( targetObject[ objectName ] === undefined ) {
	
	    						console.error( '  can not bind to objectName of node, undefined', this );
	    						return;
	
	    					}
	
	    					targetObject = targetObject[ objectName ];
	
	    			}
	
	
	    			if ( objectIndex !== undefined ) {
	
	    				if ( targetObject[ objectIndex ] === undefined ) {
	
	    					console.error( "  trying to bind to objectIndex of objectName, but is undefined:", this, targetObject );
	    					return;
	
	    				}
	
	    				targetObject = targetObject[ objectIndex ];
	
	    			}
	
	    		}
	
	    		// resolve property
	    		var nodeProperty = targetObject[ propertyName ];
	
	    		if ( nodeProperty === undefined ) {
	
	    			var nodeName = parsedPath.nodeName;
	
	    			console.error( "  trying to update property for track: " + nodeName +
	    					'.' + propertyName + " but it wasn't found.", targetObject );
	    			return;
	
	    		}
	
	    		// determine versioning scheme
	    		var versioning = this.Versioning.None;
	
	    		if ( targetObject.needsUpdate !== undefined ) { // material
	
	    			versioning = this.Versioning.NeedsUpdate;
	    			this.targetObject = targetObject;
	
	    		} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform
	
	    			versioning = this.Versioning.MatrixWorldNeedsUpdate;
	    			this.targetObject = targetObject;
	
	    		}
	
	    		// determine how the property gets bound
	    		var bindingType = this.BindingType.Direct;
	
	    		if ( propertyIndex !== undefined ) {
	    			// access a sub element of the property array (only primitives are supported right now)
	
	    			if ( propertyName === "morphTargetInfluences" ) {
	    				// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
	
	    				// support resolving morphTarget names into indices.
	    				if ( ! targetObject.geometry ) {
	
	    					console.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );
	    					return;
	
	    				}
	
	    				if ( ! targetObject.geometry.morphTargets ) {
	
	    					console.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );
	    					return;
	
	    				}
	
	    				for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {
	
	    					if ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {
	
	    						propertyIndex = i;
	    						break;
	
	    					}
	
	    				}
	
	    			}
	
	    			bindingType = this.BindingType.ArrayElement;
	
	    			this.resolvedProperty = nodeProperty;
	    			this.propertyIndex = propertyIndex;
	
	    		} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {
	    			// must use copy for Object3D.Euler/Quaternion
	
	    			bindingType = this.BindingType.HasFromToArray;
	
	    			this.resolvedProperty = nodeProperty;
	
	    		} else if ( nodeProperty.length !== undefined ) {
	
	    			bindingType = this.BindingType.EntireArray;
	
	    			this.resolvedProperty = nodeProperty;
	
	    		} else {
	
	    			this.propertyName = propertyName;
	
	    		}
	
	    		// select getter / setter
	    		this.getValue = this.GetterByBindingType[ bindingType ];
	    		this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];
	
	    	},
	
	    	unbind: function() {
	
	    		this.node = null;
	
	    		// back to the prototype version of getValue / setValue
	    		// note: avoiding to mutate the shape of 'this' via 'delete'
	    		this.getValue = this._getValue_unbound;
	    		this.setValue = this._setValue_unbound;
	
	    	}
	
	    };
	
	    Object.assign( PropertyBinding.prototype, { // prototype, continued
	
	    	// these are used to "bind" a nonexistent property
	    	_getValue_unavailable: function() {},
	    	_setValue_unavailable: function() {},
	
	    	// initial state of these methods that calls 'bind'
	    	_getValue_unbound: PropertyBinding.prototype.getValue,
	    	_setValue_unbound: PropertyBinding.prototype.setValue,
	
	    	BindingType: {
	    		Direct: 0,
	    		EntireArray: 1,
	    		ArrayElement: 2,
	    		HasFromToArray: 3
	    	},
	
	    	Versioning: {
	    		None: 0,
	    		NeedsUpdate: 1,
	    		MatrixWorldNeedsUpdate: 2
	    	},
	
	    	GetterByBindingType: [
	
	    		function getValue_direct( buffer, offset ) {
	
	    			buffer[ offset ] = this.node[ this.propertyName ];
	
	    		},
	
	    		function getValue_array( buffer, offset ) {
	
	    			var source = this.resolvedProperty;
	
	    			for ( var i = 0, n = source.length; i !== n; ++ i ) {
	
	    				buffer[ offset ++ ] = source[ i ];
	
	    			}
	
	    		},
	
	    		function getValue_arrayElement( buffer, offset ) {
	
	    			buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];
	
	    		},
	
	    		function getValue_toArray( buffer, offset ) {
	
	    			this.resolvedProperty.toArray( buffer, offset );
	
	    		}
	
	    	],
	
	    	SetterByBindingTypeAndVersioning: [
	
	    		[
	    			// Direct
	
	    			function setValue_direct( buffer, offset ) {
	
	    				this.node[ this.propertyName ] = buffer[ offset ];
	
	    			},
	
	    			function setValue_direct_setNeedsUpdate( buffer, offset ) {
	
	    				this.node[ this.propertyName ] = buffer[ offset ];
	    				this.targetObject.needsUpdate = true;
	
	    			},
	
	    			function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {
	
	    				this.node[ this.propertyName ] = buffer[ offset ];
	    				this.targetObject.matrixWorldNeedsUpdate = true;
	
	    			}
	
	    		], [
	
	    			// EntireArray
	
	    			function setValue_array( buffer, offset ) {
	
	    				var dest = this.resolvedProperty;
	
	    				for ( var i = 0, n = dest.length; i !== n; ++ i ) {
	
	    					dest[ i ] = buffer[ offset ++ ];
	
	    				}
	
	    			},
	
	    			function setValue_array_setNeedsUpdate( buffer, offset ) {
	
	    				var dest = this.resolvedProperty;
	
	    				for ( var i = 0, n = dest.length; i !== n; ++ i ) {
	
	    					dest[ i ] = buffer[ offset ++ ];
	
	    				}
	
	    				this.targetObject.needsUpdate = true;
	
	    			},
	
	    			function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {
	
	    				var dest = this.resolvedProperty;
	
	    				for ( var i = 0, n = dest.length; i !== n; ++ i ) {
	
	    					dest[ i ] = buffer[ offset ++ ];
	
	    				}
	
	    				this.targetObject.matrixWorldNeedsUpdate = true;
	
	    			}
	
	    		], [
	
	    			// ArrayElement
	
	    			function setValue_arrayElement( buffer, offset ) {
	
	    				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
	
	    			},
	
	    			function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {
	
	    				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
	    				this.targetObject.needsUpdate = true;
	
	    			},
	
	    			function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {
	
	    				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
	    				this.targetObject.matrixWorldNeedsUpdate = true;
	
	    			}
	
	    		], [
	
	    			// HasToFromArray
	
	    			function setValue_fromArray( buffer, offset ) {
	
	    				this.resolvedProperty.fromArray( buffer, offset );
	
	    			},
	
	    			function setValue_fromArray_setNeedsUpdate( buffer, offset ) {
	
	    				this.resolvedProperty.fromArray( buffer, offset );
	    				this.targetObject.needsUpdate = true;
	
	    			},
	
	    			function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {
	
	    				this.resolvedProperty.fromArray( buffer, offset );
	    				this.targetObject.matrixWorldNeedsUpdate = true;
	
	    			}
	
	    		]
	
	    	]
	
	    } );
	
	    PropertyBinding.Composite =
	    		function( targetGroup, path, optionalParsedPath ) {
	
	    	var parsedPath = optionalParsedPath ||
	    			PropertyBinding.parseTrackName( path );
	
	    	this._targetGroup = targetGroup;
	    	this._bindings = targetGroup.subscribe_( path, parsedPath );
	
	    };
	
	    PropertyBinding.Composite.prototype = {
	
	    	constructor: PropertyBinding.Composite,
	
	    	getValue: function( array, offset ) {
	
	    		this.bind(); // bind all binding
	
	    		var firstValidIndex = this._targetGroup.nCachedObjects_,
	    			binding = this._bindings[ firstValidIndex ];
	
	    		// and only call .getValue on the first
	    		if ( binding !== undefined ) binding.getValue( array, offset );
	
	    	},
	
	    	setValue: function( array, offset ) {
	
	    		var bindings = this._bindings;
	
	    		for ( var i = this._targetGroup.nCachedObjects_,
	    				n = bindings.length; i !== n; ++ i ) {
	
	    			bindings[ i ].setValue( array, offset );
	
	    		}
	
	    	},
	
	    	bind: function() {
	
	    		var bindings = this._bindings;
	
	    		for ( var i = this._targetGroup.nCachedObjects_,
	    				n = bindings.length; i !== n; ++ i ) {
	
	    			bindings[ i ].bind();
	
	    		}
	
	    	},
	
	    	unbind: function() {
	
	    		var bindings = this._bindings;
	
	    		for ( var i = this._targetGroup.nCachedObjects_,
	    				n = bindings.length; i !== n; ++ i ) {
	
	    			bindings[ i ].unbind();
	
	    		}
	
	    	}
	
	    };
	
	    PropertyBinding.create = function( root, path, parsedPath ) {
	
	    	if ( ! ( (root && root.isAnimationObjectGroup) ) ) {
	
	    		return new PropertyBinding( root, path, parsedPath );
	
	    	} else {
	
	    		return new PropertyBinding.Composite( root, path, parsedPath );
	
	    	}
	
	    };
	
	    PropertyBinding.parseTrackName = function( trackName ) {
	
	    	// matches strings in the form of:
	    	//    nodeName.property
	    	//    nodeName.property[accessor]
	    	//    nodeName.material.property[accessor]
	    	//    uuid.property[accessor]
	    	//    uuid.objectName[objectIndex].propertyName[propertyIndex]
	    	//    parentName/nodeName.property
	    	//    parentName/parentName/nodeName.property[index]
	    	//    .bone[Armature.DEF_cog].position
	    	//    scene:helium_balloon_model:helium_balloon_model.position
	    	// created and tested via https://regex101.com/#javascript
	
	    	var re = /^((?:\w+[\/:])*)(\w+)?(?:\.(\w+)(?:\[(.+)\])?)?\.(\w+)(?:\[(.+)\])?$/;
	    	var matches = re.exec( trackName );
	
	    	if ( ! matches ) {
	
	    		throw new Error( "cannot parse trackName at all: " + trackName );
	
	    	}
	
	    	var results = {
	    		// directoryName: matches[ 1 ], // (tschw) currently unused
	    		nodeName: matches[ 2 ], 	// allowed to be null, specified root node.
	    		objectName: matches[ 3 ],
	    		objectIndex: matches[ 4 ],
	    		propertyName: matches[ 5 ],
	    		propertyIndex: matches[ 6 ]	// allowed to be null, specifies that the whole property is set.
	    	};
	
	    	if ( results.propertyName === null || results.propertyName.length === 0 ) {
	
	    		throw new Error( "can not parse propertyName from trackName: " + trackName );
	
	    	}
	
	    	return results;
	
	    };
	
	    PropertyBinding.findNode = function( root, nodeName ) {
	
	    	if ( ! nodeName || nodeName === "" || nodeName === "root" || nodeName === "." || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {
	
	    		return root;
	
	    	}
	
	    	// search into skeleton bones.
	    	if ( root.skeleton ) {
	
	    		var searchSkeleton = function( skeleton ) {
	
	    			for( var i = 0; i < skeleton.bones.length; i ++ ) {
	
	    				var bone = skeleton.bones[ i ];
	
	    				if ( bone.name === nodeName ) {
	
	    					return bone;
	
	    				}
	    			}
	
	    			return null;
	
	    		};
	
	    		var bone = searchSkeleton( root.skeleton );
	
	    		if ( bone ) {
	
	    			return bone;
	
	    		}
	    	}
	
	    	// search into node subtree.
	    	if ( root.children ) {
	
	    		var searchNodeSubtree = function( children ) {
	
	    			for( var i = 0; i < children.length; i ++ ) {
	
	    				var childNode = children[ i ];
	
	    				if ( childNode.name === nodeName || childNode.uuid === nodeName ) {
	
	    					return childNode;
	
	    				}
	
	    				var result = searchNodeSubtree( childNode.children );
	
	    				if ( result ) return result;
	
	    			}
	
	    			return null;
	
	    		};
	
	    		var subTreeNode = searchNodeSubtree( root.children );
	
	    		if ( subTreeNode ) {
	
	    			return subTreeNode;
	
	    		}
	
	    	}
	
	    	return null;
	
	    };
	
	    /**
	     *
	     * A group of objects that receives a shared animation state.
	     *
	     * Usage:
	     *
	     * 	-	Add objects you would otherwise pass as 'root' to the
	     * 		constructor or the .clipAction method of AnimationMixer.
	     *
	     * 	-	Instead pass this object as 'root'.
	     *
	     * 	-	You can also add and remove objects later when the mixer
	     * 		is running.
	     *
	     * Note:
	     *
	     *  	Objects of this class appear as one object to the mixer,
	     *  	so cache control of the individual objects must be done
	     *  	on the group.
	     *
	     * Limitation:
	     *
	     * 	- 	The animated properties must be compatible among the
	     * 		all objects in the group.
	     *
	     *  -	A single property can either be controlled through a
	     *  	target group or directly, but not both.
	     *
	     * @author tschw
	     */
	
	    function AnimationObjectGroup( var_args ) {
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	// cached objects followed by the active ones
	    	this._objects = Array.prototype.slice.call( arguments );
	
	    	this.nCachedObjects_ = 0;			// threshold
	    	// note: read by PropertyBinding.Composite
	
	    	var indices = {};
	    	this._indicesByUUID = indices;		// for bookkeeping
	
	    	for ( var i = 0, n = arguments.length; i !== n; ++ i ) {
	
	    		indices[ arguments[ i ].uuid ] = i;
	
	    	}
	
	    	this._paths = [];					// inside: string
	    	this._parsedPaths = [];				// inside: { we don't care, here }
	    	this._bindings = []; 				// inside: Array< PropertyBinding >
	    	this._bindingsIndicesByPath = {}; 	// inside: indices in these arrays
	
	    	var scope = this;
	
	    	this.stats = {
	
	    		objects: {
	    			get total() { return scope._objects.length; },
	    			get inUse() { return this.total - scope.nCachedObjects_;  }
	    		},
	
	    		get bindingsPerObject() { return scope._bindings.length; }
	
	    	};
	
	    }
	
	    AnimationObjectGroup.prototype = {
	
	    	constructor: AnimationObjectGroup,
	
	    	isAnimationObjectGroup: true,
	
	    	add: function( var_args ) {
	
	    		var objects = this._objects,
	    			nObjects = objects.length,
	    			nCachedObjects = this.nCachedObjects_,
	    			indicesByUUID = this._indicesByUUID,
	    			paths = this._paths,
	    			parsedPaths = this._parsedPaths,
	    			bindings = this._bindings,
	    			nBindings = bindings.length;
	
	    		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {
	
	    			var object = arguments[ i ],
	    				uuid = object.uuid,
	    				index = indicesByUUID[ uuid ];
	
	    			if ( index === undefined ) {
	
	    				// unknown object -> add it to the ACTIVE region
	
	    				index = nObjects ++;
	    				indicesByUUID[ uuid ] = index;
	    				objects.push( object );
	
	    				// accounting is done, now do the same for all bindings
	
	    				for ( var j = 0, m = nBindings; j !== m; ++ j ) {
	
	    					bindings[ j ].push(
	    							new PropertyBinding(
	    								object, paths[ j ], parsedPaths[ j ] ) );
	
	    				}
	
	    			} else if ( index < nCachedObjects ) {
	
	    				var knownObject = objects[ index ];
	
	    				// move existing object to the ACTIVE region
	
	    				var firstActiveIndex = -- nCachedObjects,
	    					lastCachedObject = objects[ firstActiveIndex ];
	
	    				indicesByUUID[ lastCachedObject.uuid ] = index;
	    				objects[ index ] = lastCachedObject;
	
	    				indicesByUUID[ uuid ] = firstActiveIndex;
	    				objects[ firstActiveIndex ] = object;
	
	    				// accounting is done, now do the same for all bindings
	
	    				for ( var j = 0, m = nBindings; j !== m; ++ j ) {
	
	    					var bindingsForPath = bindings[ j ],
	    						lastCached = bindingsForPath[ firstActiveIndex ],
	    						binding = bindingsForPath[ index ];
	
	    					bindingsForPath[ index ] = lastCached;
	
	    					if ( binding === undefined ) {
	
	    						// since we do not bother to create new bindings
	    						// for objects that are cached, the binding may
	    						// or may not exist
	
	    						binding = new PropertyBinding(
	    								object, paths[ j ], parsedPaths[ j ] );
	
	    					}
	
	    					bindingsForPath[ firstActiveIndex ] = binding;
	
	    				}
	
	    			} else if ( objects[ index ] !== knownObject) {
	
	    				console.error( "Different objects with the same UUID " +
	    						"detected. Clean the caches or recreate your " +
	    						"infrastructure when reloading scenes..." );
	
	    			} // else the object is already where we want it to be
	
	    		} // for arguments
	
	    		this.nCachedObjects_ = nCachedObjects;
	
	    	},
	
	    	remove: function( var_args ) {
	
	    		var objects = this._objects,
	    			nCachedObjects = this.nCachedObjects_,
	    			indicesByUUID = this._indicesByUUID,
	    			bindings = this._bindings,
	    			nBindings = bindings.length;
	
	    		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {
	
	    			var object = arguments[ i ],
	    				uuid = object.uuid,
	    				index = indicesByUUID[ uuid ];
	
	    			if ( index !== undefined && index >= nCachedObjects ) {
	
	    				// move existing object into the CACHED region
	
	    				var lastCachedIndex = nCachedObjects ++,
	    					firstActiveObject = objects[ lastCachedIndex ];
	
	    				indicesByUUID[ firstActiveObject.uuid ] = index;
	    				objects[ index ] = firstActiveObject;
	
	    				indicesByUUID[ uuid ] = lastCachedIndex;
	    				objects[ lastCachedIndex ] = object;
	
	    				// accounting is done, now do the same for all bindings
	
	    				for ( var j = 0, m = nBindings; j !== m; ++ j ) {
	
	    					var bindingsForPath = bindings[ j ],
	    						firstActive = bindingsForPath[ lastCachedIndex ],
	    						binding = bindingsForPath[ index ];
	
	    					bindingsForPath[ index ] = firstActive;
	    					bindingsForPath[ lastCachedIndex ] = binding;
	
	    				}
	
	    			}
	
	    		} // for arguments
	
	    		this.nCachedObjects_ = nCachedObjects;
	
	    	},
	
	    	// remove & forget
	    	uncache: function( var_args ) {
	
	    		var objects = this._objects,
	    			nObjects = objects.length,
	    			nCachedObjects = this.nCachedObjects_,
	    			indicesByUUID = this._indicesByUUID,
	    			bindings = this._bindings,
	    			nBindings = bindings.length;
	
	    		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {
	
	    			var object = arguments[ i ],
	    				uuid = object.uuid,
	    				index = indicesByUUID[ uuid ];
	
	    			if ( index !== undefined ) {
	
	    				delete indicesByUUID[ uuid ];
	
	    				if ( index < nCachedObjects ) {
	
	    					// object is cached, shrink the CACHED region
	
	    					var firstActiveIndex = -- nCachedObjects,
	    						lastCachedObject = objects[ firstActiveIndex ],
	    						lastIndex = -- nObjects,
	    						lastObject = objects[ lastIndex ];
	
	    					// last cached object takes this object's place
	    					indicesByUUID[ lastCachedObject.uuid ] = index;
	    					objects[ index ] = lastCachedObject;
	
	    					// last object goes to the activated slot and pop
	    					indicesByUUID[ lastObject.uuid ] = firstActiveIndex;
	    					objects[ firstActiveIndex ] = lastObject;
	    					objects.pop();
	
	    					// accounting is done, now do the same for all bindings
	
	    					for ( var j = 0, m = nBindings; j !== m; ++ j ) {
	
	    						var bindingsForPath = bindings[ j ],
	    							lastCached = bindingsForPath[ firstActiveIndex ],
	    							last = bindingsForPath[ lastIndex ];
	
	    						bindingsForPath[ index ] = lastCached;
	    						bindingsForPath[ firstActiveIndex ] = last;
	    						bindingsForPath.pop();
	
	    					}
	
	    				} else {
	
	    					// object is active, just swap with the last and pop
	
	    					var lastIndex = -- nObjects,
	    						lastObject = objects[ lastIndex ];
	
	    					indicesByUUID[ lastObject.uuid ] = index;
	    					objects[ index ] = lastObject;
	    					objects.pop();
	
	    					// accounting is done, now do the same for all bindings
	
	    					for ( var j = 0, m = nBindings; j !== m; ++ j ) {
	
	    						var bindingsForPath = bindings[ j ];
	
	    						bindingsForPath[ index ] = bindingsForPath[ lastIndex ];
	    						bindingsForPath.pop();
	
	    					}
	
	    				} // cached or active
	
	    			} // if object is known
	
	    		} // for arguments
	
	    		this.nCachedObjects_ = nCachedObjects;
	
	    	},
	
	    	// Internal interface used by befriended PropertyBinding.Composite:
	
	    	subscribe_: function( path, parsedPath ) {
	    		// returns an array of bindings for the given path that is changed
	    		// according to the contained objects in the group
	
	    		var indicesByPath = this._bindingsIndicesByPath,
	    			index = indicesByPath[ path ],
	    			bindings = this._bindings;
	
	    		if ( index !== undefined ) return bindings[ index ];
	
	    		var paths = this._paths,
	    			parsedPaths = this._parsedPaths,
	    			objects = this._objects,
	    			nObjects = objects.length,
	    			nCachedObjects = this.nCachedObjects_,
	    			bindingsForPath = new Array( nObjects );
	
	    		index = bindings.length;
	
	    		indicesByPath[ path ] = index;
	
	    		paths.push( path );
	    		parsedPaths.push( parsedPath );
	    		bindings.push( bindingsForPath );
	
	    		for ( var i = nCachedObjects,
	    				n = objects.length; i !== n; ++ i ) {
	
	    			var object = objects[ i ];
	
	    			bindingsForPath[ i ] =
	    					new PropertyBinding( object, path, parsedPath );
	
	    		}
	
	    		return bindingsForPath;
	
	    	},
	
	    	unsubscribe_: function( path ) {
	    		// tells the group to forget about a property path and no longer
	    		// update the array previously obtained with 'subscribe_'
	
	    		var indicesByPath = this._bindingsIndicesByPath,
	    			index = indicesByPath[ path ];
	
	    		if ( index !== undefined ) {
	
	    			var paths = this._paths,
	    				parsedPaths = this._parsedPaths,
	    				bindings = this._bindings,
	    				lastBindingsIndex = bindings.length - 1,
	    				lastBindings = bindings[ lastBindingsIndex ],
	    				lastBindingsPath = path[ lastBindingsIndex ];
	
	    			indicesByPath[ lastBindingsPath ] = index;
	
	    			bindings[ index ] = lastBindings;
	    			bindings.pop();
	
	    			parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];
	    			parsedPaths.pop();
	
	    			paths[ index ] = paths[ lastBindingsIndex ];
	    			paths.pop();
	
	    		}
	
	    	}
	
	    };
	
	    /**
	     *
	     * Action provided by AnimationMixer for scheduling clip playback on specific
	     * objects.
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     *
	     */
	
	    function AnimationAction( mixer, clip, localRoot ) {
	
	    	this._mixer = mixer;
	    	this._clip = clip;
	    	this._localRoot = localRoot || null;
	
	    	var tracks = clip.tracks,
	    		nTracks = tracks.length,
	    		interpolants = new Array( nTracks );
	
	    	var interpolantSettings = {
	    			endingStart: 	ZeroCurvatureEnding,
	    			endingEnd:		ZeroCurvatureEnding
	    	};
	
	    	for ( var i = 0; i !== nTracks; ++ i ) {
	
	    		var interpolant = tracks[ i ].createInterpolant( null );
	    		interpolants[ i ] = interpolant;
	    		interpolant.settings = interpolantSettings;
	
	    	}
	
	    	this._interpolantSettings = interpolantSettings;
	
	    	this._interpolants = interpolants;	// bound by the mixer
	
	    	// inside: PropertyMixer (managed by the mixer)
	    	this._propertyBindings = new Array( nTracks );
	
	    	this._cacheIndex = null;			// for the memory manager
	    	this._byClipCacheIndex = null;		// for the memory manager
	
	    	this._timeScaleInterpolant = null;
	    	this._weightInterpolant = null;
	
	    	this.loop = LoopRepeat;
	    	this._loopCount = -1;
	
	    	// global mixer time when the action is to be started
	    	// it's set back to 'null' upon start of the action
	    	this._startTime = null;
	
	    	// scaled local time of the action
	    	// gets clamped or wrapped to 0..clip.duration according to loop
	    	this.time = 0;
	
	    	this.timeScale = 1;
	    	this._effectiveTimeScale = 1;
	
	    	this.weight = 1;
	    	this._effectiveWeight = 1;
	
	    	this.repetitions = Infinity; 		// no. of repetitions when looping
	
	    	this.paused = false;				// false -> zero effective time scale
	    	this.enabled = true;				// true -> zero effective weight
	
	    	this.clampWhenFinished 	= false;	// keep feeding the last frame?
	
	    	this.zeroSlopeAtStart 	= true;		// for smooth interpolation w/o separate
	    	this.zeroSlopeAtEnd		= true;		// clips for start, loop and end
	
	    };
	
	    AnimationAction.prototype = {
	
	    	constructor: AnimationAction,
	
	    	// State & Scheduling
	
	    	play: function() {
	
	    		this._mixer._activateAction( this );
	
	    		return this;
	
	    	},
	
	    	stop: function() {
	
	    		this._mixer._deactivateAction( this );
	
	    		return this.reset();
	
	    	},
	
	    	reset: function() {
	
	    		this.paused = false;
	    		this.enabled = true;
	
	    		this.time = 0;			// restart clip
	    		this._loopCount = -1;	// forget previous loops
	    		this._startTime = null;	// forget scheduling
	
	    		return this.stopFading().stopWarping();
	
	    	},
	
	    	isRunning: function() {
	
	    		return this.enabled && ! this.paused && this.timeScale !== 0 &&
	    				this._startTime === null && this._mixer._isActiveAction( this );
	
	    	},
	
	    	// return true when play has been called
	    	isScheduled: function() {
	
	    		return this._mixer._isActiveAction( this );
	
	    	},
	
	    	startAt: function( time ) {
	
	    		this._startTime = time;
	
	    		return this;
	
	    	},
	
	    	setLoop: function( mode, repetitions ) {
	
	    		this.loop = mode;
	    		this.repetitions = repetitions;
	
	    		return this;
	
	    	},
	
	    	// Weight
	
	    	// set the weight stopping any scheduled fading
	    	// although .enabled = false yields an effective weight of zero, this
	    	// method does *not* change .enabled, because it would be confusing
	    	setEffectiveWeight: function( weight ) {
	
	    		this.weight = weight;
	
	    		// note: same logic as when updated at runtime
	    		this._effectiveWeight = this.enabled ? weight : 0;
	
	    		return this.stopFading();
	
	    	},
	
	    	// return the weight considering fading and .enabled
	    	getEffectiveWeight: function() {
	
	    		return this._effectiveWeight;
	
	    	},
	
	    	fadeIn: function( duration ) {
	
	    		return this._scheduleFading( duration, 0, 1 );
	
	    	},
	
	    	fadeOut: function( duration ) {
	
	    		return this._scheduleFading( duration, 1, 0 );
	
	    	},
	
	    	crossFadeFrom: function( fadeOutAction, duration, warp ) {
	
	    		fadeOutAction.fadeOut( duration );
	    		this.fadeIn( duration );
	
	    		if( warp ) {
	
	    			var fadeInDuration = this._clip.duration,
	    				fadeOutDuration = fadeOutAction._clip.duration,
	
	    				startEndRatio = fadeOutDuration / fadeInDuration,
	    				endStartRatio = fadeInDuration / fadeOutDuration;
	
	    			fadeOutAction.warp( 1.0, startEndRatio, duration );
	    			this.warp( endStartRatio, 1.0, duration );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	crossFadeTo: function( fadeInAction, duration, warp ) {
	
	    		return fadeInAction.crossFadeFrom( this, duration, warp );
	
	    	},
	
	    	stopFading: function() {
	
	    		var weightInterpolant = this._weightInterpolant;
	
	    		if ( weightInterpolant !== null ) {
	
	    			this._weightInterpolant = null;
	    			this._mixer._takeBackControlInterpolant( weightInterpolant );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// Time Scale Control
	
	    	// set the weight stopping any scheduled warping
	    	// although .paused = true yields an effective time scale of zero, this
	    	// method does *not* change .paused, because it would be confusing
	    	setEffectiveTimeScale: function( timeScale ) {
	
	    		this.timeScale = timeScale;
	    		this._effectiveTimeScale = this.paused ? 0 :timeScale;
	
	    		return this.stopWarping();
	
	    	},
	
	    	// return the time scale considering warping and .paused
	    	getEffectiveTimeScale: function() {
	
	    		return this._effectiveTimeScale;
	
	    	},
	
	    	setDuration: function( duration ) {
	
	    		this.timeScale = this._clip.duration / duration;
	
	    		return this.stopWarping();
	
	    	},
	
	    	syncWith: function( action ) {
	
	    		this.time = action.time;
	    		this.timeScale = action.timeScale;
	
	    		return this.stopWarping();
	
	    	},
	
	    	halt: function( duration ) {
	
	    		return this.warp( this._effectiveTimeScale, 0, duration );
	
	    	},
	
	    	warp: function( startTimeScale, endTimeScale, duration ) {
	
	    		var mixer = this._mixer, now = mixer.time,
	    			interpolant = this._timeScaleInterpolant,
	
	    			timeScale = this.timeScale;
	
	    		if ( interpolant === null ) {
	
	    			interpolant = mixer._lendControlInterpolant(),
	    			this._timeScaleInterpolant = interpolant;
	
	    		}
	
	    		var times = interpolant.parameterPositions,
	    			values = interpolant.sampleValues;
	
	    		times[ 0 ] = now;
	    		times[ 1 ] = now + duration;
	
	    		values[ 0 ] = startTimeScale / timeScale;
	    		values[ 1 ] = endTimeScale / timeScale;
	
	    		return this;
	
	    	},
	
	    	stopWarping: function() {
	
	    		var timeScaleInterpolant = this._timeScaleInterpolant;
	
	    		if ( timeScaleInterpolant !== null ) {
	
	    			this._timeScaleInterpolant = null;
	    			this._mixer._takeBackControlInterpolant( timeScaleInterpolant );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// Object Accessors
	
	    	getMixer: function() {
	
	    		return this._mixer;
	
	    	},
	
	    	getClip: function() {
	
	    		return this._clip;
	
	    	},
	
	    	getRoot: function() {
	
	    		return this._localRoot || this._mixer._root;
	
	    	},
	
	    	// Interna
	
	    	_update: function( time, deltaTime, timeDirection, accuIndex ) {
	    		// called by the mixer
	
	    		var startTime = this._startTime;
	
	    		if ( startTime !== null ) {
	
	    			// check for scheduled start of action
	
	    			var timeRunning = ( time - startTime ) * timeDirection;
	    			if ( timeRunning < 0 || timeDirection === 0 ) {
	
	    				return; // yet to come / don't decide when delta = 0
	
	    			}
	
	    			// start
	
	    			this._startTime = null; // unschedule
	    			deltaTime = timeDirection * timeRunning;
	
	    		}
	
	    		// apply time scale and advance time
	
	    		deltaTime *= this._updateTimeScale( time );
	    		var clipTime = this._updateTime( deltaTime );
	
	    		// note: _updateTime may disable the action resulting in
	    		// an effective weight of 0
	
	    		var weight = this._updateWeight( time );
	
	    		if ( weight > 0 ) {
	
	    			var interpolants = this._interpolants;
	    			var propertyMixers = this._propertyBindings;
	
	    			for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {
	
	    				interpolants[ j ].evaluate( clipTime );
	    				propertyMixers[ j ].accumulate( accuIndex, weight );
	
	    			}
	
	    		}
	
	    	},
	
	    	_updateWeight: function( time ) {
	
	    		var weight = 0;
	
	    		if ( this.enabled ) {
	
	    			weight = this.weight;
	    			var interpolant = this._weightInterpolant;
	
	    			if ( interpolant !== null ) {
	
	    				var interpolantValue = interpolant.evaluate( time )[ 0 ];
	
	    				weight *= interpolantValue;
	
	    				if ( time > interpolant.parameterPositions[ 1 ] ) {
	
	    					this.stopFading();
	
	    					if ( interpolantValue === 0 ) {
	
	    						// faded out, disable
	    						this.enabled = false;
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		this._effectiveWeight = weight;
	    		return weight;
	
	    	},
	
	    	_updateTimeScale: function( time ) {
	
	    		var timeScale = 0;
	
	    		if ( ! this.paused ) {
	
	    			timeScale = this.timeScale;
	
	    			var interpolant = this._timeScaleInterpolant;
	
	    			if ( interpolant !== null ) {
	
	    				var interpolantValue = interpolant.evaluate( time )[ 0 ];
	
	    				timeScale *= interpolantValue;
	
	    				if ( time > interpolant.parameterPositions[ 1 ] ) {
	
	    					this.stopWarping();
	
	    					if ( timeScale === 0 ) {
	
	    						// motion has halted, pause
	    						this.paused = true;
	
	    					} else {
	
	    						// warp done - apply final time scale
	    						this.timeScale = timeScale;
	
	    					}
	
	    				}
	
	    			}
	
	    		}
	
	    		this._effectiveTimeScale = timeScale;
	    		return timeScale;
	
	    	},
	
	    	_updateTime: function( deltaTime ) {
	
	    		var time = this.time + deltaTime;
	
	    		if ( deltaTime === 0 ) return time;
	
	    		var duration = this._clip.duration,
	
	    			loop = this.loop,
	    			loopCount = this._loopCount;
	
	    		if ( loop === LoopOnce ) {
	
	    			if ( loopCount === -1 ) {
	    				// just started
	
	    				this.loopCount = 0;
	    				this._setEndings( true, true, false );
	
	    			}
	
	    			handle_stop: {
	
	    				if ( time >= duration ) {
	
	    					time = duration;
	
	    				} else if ( time < 0 ) {
	
	    					time = 0;
	
	    				} else break handle_stop;
	
	    				if ( this.clampWhenFinished ) this.paused = true;
	    				else this.enabled = false;
	
	    				this._mixer.dispatchEvent( {
	    					type: 'finished', action: this,
	    					direction: deltaTime < 0 ? -1 : 1
	    				} );
	
	    			}
	
	    		} else { // repetitive Repeat or PingPong
	
	    			var pingPong = ( loop === LoopPingPong );
	
	    			if ( loopCount === -1 ) {
	    				// just started
	
	    				if ( deltaTime >= 0 ) {
	
	    					loopCount = 0;
	
	    					this._setEndings(
	    							true, this.repetitions === 0, pingPong );
	
	    				} else {
	
	    					// when looping in reverse direction, the initial
	    					// transition through zero counts as a repetition,
	    					// so leave loopCount at -1
	
	    					this._setEndings(
	    							this.repetitions === 0, true, pingPong );
	
	    				}
	
	    			}
	
	    			if ( time >= duration || time < 0 ) {
	    				// wrap around
	
	    				var loopDelta = Math.floor( time / duration ); // signed
	    				time -= duration * loopDelta;
	
	    				loopCount += Math.abs( loopDelta );
	
	    				var pending = this.repetitions - loopCount;
	
	    				if ( pending < 0 ) {
	    					// have to stop (switch state, clamp time, fire event)
	
	    					if ( this.clampWhenFinished ) this.paused = true;
	    					else this.enabled = false;
	
	    					time = deltaTime > 0 ? duration : 0;
	
	    					this._mixer.dispatchEvent( {
	    						type: 'finished', action: this,
	    						direction: deltaTime > 0 ? 1 : -1
	    					} );
	
	    				} else {
	    					// keep running
	
	    					if ( pending === 0 ) {
	    						// entering the last round
	
	    						var atStart = deltaTime < 0;
	    						this._setEndings( atStart, ! atStart, pingPong );
	
	    					} else {
	
	    						this._setEndings( false, false, pingPong );
	
	    					}
	
	    					this._loopCount = loopCount;
	
	    					this._mixer.dispatchEvent( {
	    						type: 'loop', action: this, loopDelta: loopDelta
	    					} );
	
	    				}
	
	    			}
	
	    			if ( pingPong && ( loopCount & 1 ) === 1 ) {
	    				// invert time for the "pong round"
	
	    				this.time = time;
	    				return duration - time;
	
	    			}
	
	    		}
	
	    		this.time = time;
	    		return time;
	
	    	},
	
	    	_setEndings: function( atStart, atEnd, pingPong ) {
	
	    		var settings = this._interpolantSettings;
	
	    		if ( pingPong ) {
	
	    			settings.endingStart 	= ZeroSlopeEnding;
	    			settings.endingEnd		= ZeroSlopeEnding;
	
	    		} else {
	
	    			// assuming for LoopOnce atStart == atEnd == true
	
	    			if ( atStart ) {
	
	    				settings.endingStart = this.zeroSlopeAtStart ?
	    						ZeroSlopeEnding : ZeroCurvatureEnding;
	
	    			} else {
	
	    				settings.endingStart = WrapAroundEnding;
	
	    			}
	
	    			if ( atEnd ) {
	
	    				settings.endingEnd = this.zeroSlopeAtEnd ?
	    						ZeroSlopeEnding : ZeroCurvatureEnding;
	
	    			} else {
	
	    				settings.endingEnd 	 = WrapAroundEnding;
	
	    			}
	
	    		}
	
	    	},
	
	    	_scheduleFading: function( duration, weightNow, weightThen ) {
	
	    		var mixer = this._mixer, now = mixer.time,
	    			interpolant = this._weightInterpolant;
	
	    		if ( interpolant === null ) {
	
	    			interpolant = mixer._lendControlInterpolant(),
	    			this._weightInterpolant = interpolant;
	
	    		}
	
	    		var times = interpolant.parameterPositions,
	    			values = interpolant.sampleValues;
	
	    		times[ 0 ] = now; 				values[ 0 ] = weightNow;
	    		times[ 1 ] = now + duration;	values[ 1 ] = weightThen;
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     *
	     * Player for AnimationClips.
	     *
	     *
	     * @author Ben Houston / http://clara.io/
	     * @author David Sarno / http://lighthaus.us/
	     * @author tschw
	     */
	
	    function AnimationMixer( root ) {
	
	    	this._root = root;
	    	this._initMemoryManager();
	    	this._accuIndex = 0;
	
	    	this.time = 0;
	
	    	this.timeScale = 1.0;
	
	    }
	
	    Object.assign( AnimationMixer.prototype, EventDispatcher.prototype, {
	
	    	// return an action for a clip optionally using a custom root target
	    	// object (this method allocates a lot of dynamic memory in case a
	    	// previously unknown clip/root combination is specified)
	    	clipAction: function( clip, optionalRoot ) {
	
	    		var root = optionalRoot || this._root,
	    			rootUuid = root.uuid,
	
	    			clipObject = typeof clip === 'string' ?
	    					AnimationClip.findByName( root, clip ) : clip,
	
	    			clipUuid = clipObject !== null ? clipObject.uuid : clip,
	
	    			actionsForClip = this._actionsByClip[ clipUuid ],
	    			prototypeAction = null;
	
	    		if ( actionsForClip !== undefined ) {
	
	    			var existingAction =
	    					actionsForClip.actionByRoot[ rootUuid ];
	
	    			if ( existingAction !== undefined ) {
	
	    				return existingAction;
	
	    			}
	
	    			// we know the clip, so we don't have to parse all
	    			// the bindings again but can just copy
	    			prototypeAction = actionsForClip.knownActions[ 0 ];
	
	    			// also, take the clip from the prototype action
	    			if ( clipObject === null )
	    				clipObject = prototypeAction._clip;
	
	    		}
	
	    		// clip must be known when specified via string
	    		if ( clipObject === null ) return null;
	
	    		// allocate all resources required to run it
	    		var newAction = new AnimationAction( this, clipObject, optionalRoot );
	
	    		this._bindAction( newAction, prototypeAction );
	
	    		// and make the action known to the memory manager
	    		this._addInactiveAction( newAction, clipUuid, rootUuid );
	
	    		return newAction;
	
	    	},
	
	    	// get an existing action
	    	existingAction: function( clip, optionalRoot ) {
	
	    		var root = optionalRoot || this._root,
	    			rootUuid = root.uuid,
	
	    			clipObject = typeof clip === 'string' ?
	    					AnimationClip.findByName( root, clip ) : clip,
	
	    			clipUuid = clipObject ? clipObject.uuid : clip,
	
	    			actionsForClip = this._actionsByClip[ clipUuid ];
	
	    		if ( actionsForClip !== undefined ) {
	
	    			return actionsForClip.actionByRoot[ rootUuid ] || null;
	
	    		}
	
	    		return null;
	
	    	},
	
	    	// deactivates all previously scheduled actions
	    	stopAllAction: function() {
	
	    		var actions = this._actions,
	    			nActions = this._nActiveActions,
	    			bindings = this._bindings,
	    			nBindings = this._nActiveBindings;
	
	    		this._nActiveActions = 0;
	    		this._nActiveBindings = 0;
	
	    		for ( var i = 0; i !== nActions; ++ i ) {
	
	    			actions[ i ].reset();
	
	    		}
	
	    		for ( var i = 0; i !== nBindings; ++ i ) {
	
	    			bindings[ i ].useCount = 0;
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// advance the time and update apply the animation
	    	update: function( deltaTime ) {
	
	    		deltaTime *= this.timeScale;
	
	    		var actions = this._actions,
	    			nActions = this._nActiveActions,
	
	    			time = this.time += deltaTime,
	    			timeDirection = Math.sign( deltaTime ),
	
	    			accuIndex = this._accuIndex ^= 1;
	
	    		// run active actions
	
	    		for ( var i = 0; i !== nActions; ++ i ) {
	
	    			var action = actions[ i ];
	
	    			if ( action.enabled ) {
	
	    				action._update( time, deltaTime, timeDirection, accuIndex );
	
	    			}
	
	    		}
	
	    		// update scene graph
	
	    		var bindings = this._bindings,
	    			nBindings = this._nActiveBindings;
	
	    		for ( var i = 0; i !== nBindings; ++ i ) {
	
	    			bindings[ i ].apply( accuIndex );
	
	    		}
	
	    		return this;
	
	    	},
	
	    	// return this mixer's root target object
	    	getRoot: function() {
	
	    		return this._root;
	
	    	},
	
	    	// free all resources specific to a particular clip
	    	uncacheClip: function( clip ) {
	
	    		var actions = this._actions,
	    			clipUuid = clip.uuid,
	    			actionsByClip = this._actionsByClip,
	    			actionsForClip = actionsByClip[ clipUuid ];
	
	    		if ( actionsForClip !== undefined ) {
	
	    			// note: just calling _removeInactiveAction would mess up the
	    			// iteration state and also require updating the state we can
	    			// just throw away
	
	    			var actionsToRemove = actionsForClip.knownActions;
	
	    			for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {
	
	    				var action = actionsToRemove[ i ];
	
	    				this._deactivateAction( action );
	
	    				var cacheIndex = action._cacheIndex,
	    					lastInactiveAction = actions[ actions.length - 1 ];
	
	    				action._cacheIndex = null;
	    				action._byClipCacheIndex = null;
	
	    				lastInactiveAction._cacheIndex = cacheIndex;
	    				actions[ cacheIndex ] = lastInactiveAction;
	    				actions.pop();
	
	    				this._removeInactiveBindingsForAction( action );
	
	    			}
	
	    			delete actionsByClip[ clipUuid ];
	
	    		}
	
	    	},
	
	    	// free all resources specific to a particular root target object
	    	uncacheRoot: function( root ) {
	
	    		var rootUuid = root.uuid,
	    			actionsByClip = this._actionsByClip;
	
	    		for ( var clipUuid in actionsByClip ) {
	
	    			var actionByRoot = actionsByClip[ clipUuid ].actionByRoot,
	    				action = actionByRoot[ rootUuid ];
	
	    			if ( action !== undefined ) {
	
	    				this._deactivateAction( action );
	    				this._removeInactiveAction( action );
	
	    			}
	
	    		}
	
	    		var bindingsByRoot = this._bindingsByRootAndName,
	    			bindingByName = bindingsByRoot[ rootUuid ];
	
	    		if ( bindingByName !== undefined ) {
	
	    			for ( var trackName in bindingByName ) {
	
	    				var binding = bindingByName[ trackName ];
	    				binding.restoreOriginalState();
	    				this._removeInactiveBinding( binding );
	
	    			}
	
	    		}
	
	    	},
	
	    	// remove a targeted clip from the cache
	    	uncacheAction: function( clip, optionalRoot ) {
	
	    		var action = this.existingAction( clip, optionalRoot );
	
	    		if ( action !== null ) {
	
	    			this._deactivateAction( action );
	    			this._removeInactiveAction( action );
	
	    		}
	
	    	}
	
	    } );
	
	    // Implementation details:
	
	    Object.assign( AnimationMixer.prototype, {
	
	    	_bindAction: function( action, prototypeAction ) {
	
	    		var root = action._localRoot || this._root,
	    			tracks = action._clip.tracks,
	    			nTracks = tracks.length,
	    			bindings = action._propertyBindings,
	    			interpolants = action._interpolants,
	    			rootUuid = root.uuid,
	    			bindingsByRoot = this._bindingsByRootAndName,
	    			bindingsByName = bindingsByRoot[ rootUuid ];
	
	    		if ( bindingsByName === undefined ) {
	
	    			bindingsByName = {};
	    			bindingsByRoot[ rootUuid ] = bindingsByName;
	
	    		}
	
	    		for ( var i = 0; i !== nTracks; ++ i ) {
	
	    			var track = tracks[ i ],
	    				trackName = track.name,
	    				binding = bindingsByName[ trackName ];
	
	    			if ( binding !== undefined ) {
	
	    				bindings[ i ] = binding;
	
	    			} else {
	
	    				binding = bindings[ i ];
	
	    				if ( binding !== undefined ) {
	
	    					// existing binding, make sure the cache knows
	
	    					if ( binding._cacheIndex === null ) {
	
	    						++ binding.referenceCount;
	    						this._addInactiveBinding( binding, rootUuid, trackName );
	
	    					}
	
	    					continue;
	
	    				}
	
	    				var path = prototypeAction && prototypeAction.
	    						_propertyBindings[ i ].binding.parsedPath;
	
	    				binding = new PropertyMixer(
	    						PropertyBinding.create( root, trackName, path ),
	    						track.ValueTypeName, track.getValueSize() );
	
	    				++ binding.referenceCount;
	    				this._addInactiveBinding( binding, rootUuid, trackName );
	
	    				bindings[ i ] = binding;
	
	    			}
	
	    			interpolants[ i ].resultBuffer = binding.buffer;
	
	    		}
	
	    	},
	
	    	_activateAction: function( action ) {
	
	    		if ( ! this._isActiveAction( action ) ) {
	
	    			if ( action._cacheIndex === null ) {
	
	    				// this action has been forgotten by the cache, but the user
	    				// appears to be still using it -> rebind
	
	    				var rootUuid = ( action._localRoot || this._root ).uuid,
	    					clipUuid = action._clip.uuid,
	    					actionsForClip = this._actionsByClip[ clipUuid ];
	
	    				this._bindAction( action,
	    						actionsForClip && actionsForClip.knownActions[ 0 ] );
	
	    				this._addInactiveAction( action, clipUuid, rootUuid );
	
	    			}
	
	    			var bindings = action._propertyBindings;
	
	    			// increment reference counts / sort out state
	    			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {
	
	    				var binding = bindings[ i ];
	
	    				if ( binding.useCount ++ === 0 ) {
	
	    					this._lendBinding( binding );
	    					binding.saveOriginalState();
	
	    				}
	
	    			}
	
	    			this._lendAction( action );
	
	    		}
	
	    	},
	
	    	_deactivateAction: function( action ) {
	
	    		if ( this._isActiveAction( action ) ) {
	
	    			var bindings = action._propertyBindings;
	
	    			// decrement reference counts / sort out state
	    			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {
	
	    				var binding = bindings[ i ];
	
	    				if ( -- binding.useCount === 0 ) {
	
	    					binding.restoreOriginalState();
	    					this._takeBackBinding( binding );
	
	    				}
	
	    			}
	
	    			this._takeBackAction( action );
	
	    		}
	
	    	},
	
	    	// Memory manager
	
	    	_initMemoryManager: function() {
	
	    		this._actions = []; // 'nActiveActions' followed by inactive ones
	    		this._nActiveActions = 0;
	
	    		this._actionsByClip = {};
	    		// inside:
	    		// {
	    		// 		knownActions: Array< AnimationAction >	- used as prototypes
	    		// 		actionByRoot: AnimationAction			- lookup
	    		// }
	
	
	    		this._bindings = []; // 'nActiveBindings' followed by inactive ones
	    		this._nActiveBindings = 0;
	
	    		this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >
	
	
	    		this._controlInterpolants = []; // same game as above
	    		this._nActiveControlInterpolants = 0;
	
	    		var scope = this;
	
	    		this.stats = {
	
	    			actions: {
	    				get total() { return scope._actions.length; },
	    				get inUse() { return scope._nActiveActions; }
	    			},
	    			bindings: {
	    				get total() { return scope._bindings.length; },
	    				get inUse() { return scope._nActiveBindings; }
	    			},
	    			controlInterpolants: {
	    				get total() { return scope._controlInterpolants.length; },
	    				get inUse() { return scope._nActiveControlInterpolants; }
	    			}
	
	    		};
	
	    	},
	
	    	// Memory management for AnimationAction objects
	
	    	_isActiveAction: function( action ) {
	
	    		var index = action._cacheIndex;
	    		return index !== null && index < this._nActiveActions;
	
	    	},
	
	    	_addInactiveAction: function( action, clipUuid, rootUuid ) {
	
	    		var actions = this._actions,
	    			actionsByClip = this._actionsByClip,
	    			actionsForClip = actionsByClip[ clipUuid ];
	
	    		if ( actionsForClip === undefined ) {
	
	    			actionsForClip = {
	
	    				knownActions: [ action ],
	    				actionByRoot: {}
	
	    			};
	
	    			action._byClipCacheIndex = 0;
	
	    			actionsByClip[ clipUuid ] = actionsForClip;
	
	    		} else {
	
	    			var knownActions = actionsForClip.knownActions;
	
	    			action._byClipCacheIndex = knownActions.length;
	    			knownActions.push( action );
	
	    		}
	
	    		action._cacheIndex = actions.length;
	    		actions.push( action );
	
	    		actionsForClip.actionByRoot[ rootUuid ] = action;
	
	    	},
	
	    	_removeInactiveAction: function( action ) {
	
	    		var actions = this._actions,
	    			lastInactiveAction = actions[ actions.length - 1 ],
	    			cacheIndex = action._cacheIndex;
	
	    		lastInactiveAction._cacheIndex = cacheIndex;
	    		actions[ cacheIndex ] = lastInactiveAction;
	    		actions.pop();
	
	    		action._cacheIndex = null;
	
	
	    		var clipUuid = action._clip.uuid,
	    			actionsByClip = this._actionsByClip,
	    			actionsForClip = actionsByClip[ clipUuid ],
	    			knownActionsForClip = actionsForClip.knownActions,
	
	    			lastKnownAction =
	    				knownActionsForClip[ knownActionsForClip.length - 1 ],
	
	    			byClipCacheIndex = action._byClipCacheIndex;
	
	    		lastKnownAction._byClipCacheIndex = byClipCacheIndex;
	    		knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;
	    		knownActionsForClip.pop();
	
	    		action._byClipCacheIndex = null;
	
	
	    		var actionByRoot = actionsForClip.actionByRoot,
	    			rootUuid = ( actions._localRoot || this._root ).uuid;
	
	    		delete actionByRoot[ rootUuid ];
	
	    		if ( knownActionsForClip.length === 0 ) {
	
	    			delete actionsByClip[ clipUuid ];
	
	    		}
	
	    		this._removeInactiveBindingsForAction( action );
	
	    	},
	
	    	_removeInactiveBindingsForAction: function( action ) {
	
	    		var bindings = action._propertyBindings;
	    		for ( var i = 0, n = bindings.length; i !== n; ++ i ) {
	
	    			var binding = bindings[ i ];
	
	    			if ( -- binding.referenceCount === 0 ) {
	
	    				this._removeInactiveBinding( binding );
	
	    			}
	
	    		}
	
	    	},
	
	    	_lendAction: function( action ) {
	
	    		// [ active actions |  inactive actions  ]
	    		// [  active actions >| inactive actions ]
	    		//                 s        a
	    		//                  <-swap->
	    		//                 a        s
	
	    		var actions = this._actions,
	    			prevIndex = action._cacheIndex,
	
	    			lastActiveIndex = this._nActiveActions ++,
	
	    			firstInactiveAction = actions[ lastActiveIndex ];
	
	    		action._cacheIndex = lastActiveIndex;
	    		actions[ lastActiveIndex ] = action;
	
	    		firstInactiveAction._cacheIndex = prevIndex;
	    		actions[ prevIndex ] = firstInactiveAction;
	
	    	},
	
	    	_takeBackAction: function( action ) {
	
	    		// [  active actions  | inactive actions ]
	    		// [ active actions |< inactive actions  ]
	    		//        a        s
	    		//         <-swap->
	    		//        s        a
	
	    		var actions = this._actions,
	    			prevIndex = action._cacheIndex,
	
	    			firstInactiveIndex = -- this._nActiveActions,
	
	    			lastActiveAction = actions[ firstInactiveIndex ];
	
	    		action._cacheIndex = firstInactiveIndex;
	    		actions[ firstInactiveIndex ] = action;
	
	    		lastActiveAction._cacheIndex = prevIndex;
	    		actions[ prevIndex ] = lastActiveAction;
	
	    	},
	
	    	// Memory management for PropertyMixer objects
	
	    	_addInactiveBinding: function( binding, rootUuid, trackName ) {
	
	    		var bindingsByRoot = this._bindingsByRootAndName,
	    			bindingByName = bindingsByRoot[ rootUuid ],
	
	    			bindings = this._bindings;
	
	    		if ( bindingByName === undefined ) {
	
	    			bindingByName = {};
	    			bindingsByRoot[ rootUuid ] = bindingByName;
	
	    		}
	
	    		bindingByName[ trackName ] = binding;
	
	    		binding._cacheIndex = bindings.length;
	    		bindings.push( binding );
	
	    	},
	
	    	_removeInactiveBinding: function( binding ) {
	
	    		var bindings = this._bindings,
	    			propBinding = binding.binding,
	    			rootUuid = propBinding.rootNode.uuid,
	    			trackName = propBinding.path,
	    			bindingsByRoot = this._bindingsByRootAndName,
	    			bindingByName = bindingsByRoot[ rootUuid ],
	
	    			lastInactiveBinding = bindings[ bindings.length - 1 ],
	    			cacheIndex = binding._cacheIndex;
	
	    		lastInactiveBinding._cacheIndex = cacheIndex;
	    		bindings[ cacheIndex ] = lastInactiveBinding;
	    		bindings.pop();
	
	    		delete bindingByName[ trackName ];
	
	    		remove_empty_map: {
	
	    			for ( var _ in bindingByName ) break remove_empty_map;
	
	    			delete bindingsByRoot[ rootUuid ];
	
	    		}
	
	    	},
	
	    	_lendBinding: function( binding ) {
	
	    		var bindings = this._bindings,
	    			prevIndex = binding._cacheIndex,
	
	    			lastActiveIndex = this._nActiveBindings ++,
	
	    			firstInactiveBinding = bindings[ lastActiveIndex ];
	
	    		binding._cacheIndex = lastActiveIndex;
	    		bindings[ lastActiveIndex ] = binding;
	
	    		firstInactiveBinding._cacheIndex = prevIndex;
	    		bindings[ prevIndex ] = firstInactiveBinding;
	
	    	},
	
	    	_takeBackBinding: function( binding ) {
	
	    		var bindings = this._bindings,
	    			prevIndex = binding._cacheIndex,
	
	    			firstInactiveIndex = -- this._nActiveBindings,
	
	    			lastActiveBinding = bindings[ firstInactiveIndex ];
	
	    		binding._cacheIndex = firstInactiveIndex;
	    		bindings[ firstInactiveIndex ] = binding;
	
	    		lastActiveBinding._cacheIndex = prevIndex;
	    		bindings[ prevIndex ] = lastActiveBinding;
	
	    	},
	
	
	    	// Memory management of Interpolants for weight and time scale
	
	    	_lendControlInterpolant: function() {
	
	    		var interpolants = this._controlInterpolants,
	    			lastActiveIndex = this._nActiveControlInterpolants ++,
	    			interpolant = interpolants[ lastActiveIndex ];
	
	    		if ( interpolant === undefined ) {
	
	    			interpolant = new LinearInterpolant(
	    					new Float32Array( 2 ), new Float32Array( 2 ),
	    						1, this._controlInterpolantsResultBuffer );
	
	    			interpolant.__cacheIndex = lastActiveIndex;
	    			interpolants[ lastActiveIndex ] = interpolant;
	
	    		}
	
	    		return interpolant;
	
	    	},
	
	    	_takeBackControlInterpolant: function( interpolant ) {
	
	    		var interpolants = this._controlInterpolants,
	    			prevIndex = interpolant.__cacheIndex,
	
	    			firstInactiveIndex = -- this._nActiveControlInterpolants,
	
	    			lastActiveInterpolant = interpolants[ firstInactiveIndex ];
	
	    		interpolant.__cacheIndex = firstInactiveIndex;
	    		interpolants[ firstInactiveIndex ] = interpolant;
	
	    		lastActiveInterpolant.__cacheIndex = prevIndex;
	    		interpolants[ prevIndex ] = lastActiveInterpolant;
	
	    	},
	
	    	_controlInterpolantsResultBuffer: new Float32Array( 1 )
	
	    } );
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function Uniform( value ) {
	
	    	if ( typeof value === 'string' ) {
	
	    		console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );
	    		value = arguments[ 1 ];
	
	    	}
	
	    	this.value = value;
	
	    	this.dynamic = false;
	
	    }
	
	    Uniform.prototype = {
	
	    	constructor: Uniform,
	
	    	onUpdate: function ( callback ) {
	
	    		this.dynamic = true;
	    		this.onUpdateCallback = callback;
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function InstancedBufferGeometry() {
	
	    	BufferGeometry.call( this );
	
	    	this.type = 'InstancedBufferGeometry';
	    	this.maxInstancedCount = undefined;
	
	    }
	
	    InstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	    InstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;
	
	    InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;
	
	    InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {
	
	    	this.groups.push( {
	
	    		start: start,
	    		count: count,
	    		instances: instances
	
	    	} );
	
	    };
	
	    InstancedBufferGeometry.prototype.copy = function ( source ) {
	
	    	var index = source.index;
	
	    	if ( index !== null ) {
	
	    		this.setIndex( index.clone() );
	
	    	}
	
	    	var attributes = source.attributes;
	
	    	for ( var name in attributes ) {
	
	    		var attribute = attributes[ name ];
	    		this.addAttribute( name, attribute.clone() );
	
	    	}
	
	    	var groups = source.groups;
	
	    	for ( var i = 0, l = groups.length; i < l; i ++ ) {
	
	    		var group = groups[ i ];
	    		this.addGroup( group.start, group.count, group.instances );
	
	    	}
	
	    	return this;
	
	    };
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.data = interleavedBuffer;
	    	this.itemSize = itemSize;
	    	this.offset = offset;
	
	    	this.normalized = normalized === true;
	
	    }
	
	
	    InterleavedBufferAttribute.prototype = {
	
	    	constructor: InterleavedBufferAttribute,
	
	    	isInterleavedBufferAttribute: true,
	
	    	get count() {
	
	    		return this.data.count;
	
	    	},
	
	    	get array() {
	
	    		return this.data.array;
	
	    	},
	
	    	setX: function ( index, x ) {
	
	    		this.data.array[ index * this.data.stride + this.offset ] = x;
	
	    		return this;
	
	    	},
	
	    	setY: function ( index, y ) {
	
	    		this.data.array[ index * this.data.stride + this.offset + 1 ] = y;
	
	    		return this;
	
	    	},
	
	    	setZ: function ( index, z ) {
	
	    		this.data.array[ index * this.data.stride + this.offset + 2 ] = z;
	
	    		return this;
	
	    	},
	
	    	setW: function ( index, w ) {
	
	    		this.data.array[ index * this.data.stride + this.offset + 3 ] = w;
	
	    		return this;
	
	    	},
	
	    	getX: function ( index ) {
	
	    		return this.data.array[ index * this.data.stride + this.offset ];
	
	    	},
	
	    	getY: function ( index ) {
	
	    		return this.data.array[ index * this.data.stride + this.offset + 1 ];
	
	    	},
	
	    	getZ: function ( index ) {
	
	    		return this.data.array[ index * this.data.stride + this.offset + 2 ];
	
	    	},
	
	    	getW: function ( index ) {
	
	    		return this.data.array[ index * this.data.stride + this.offset + 3 ];
	
	    	},
	
	    	setXY: function ( index, x, y ) {
	
	    		index = index * this.data.stride + this.offset;
	
	    		this.data.array[ index + 0 ] = x;
	    		this.data.array[ index + 1 ] = y;
	
	    		return this;
	
	    	},
	
	    	setXYZ: function ( index, x, y, z ) {
	
	    		index = index * this.data.stride + this.offset;
	
	    		this.data.array[ index + 0 ] = x;
	    		this.data.array[ index + 1 ] = y;
	    		this.data.array[ index + 2 ] = z;
	
	    		return this;
	
	    	},
	
	    	setXYZW: function ( index, x, y, z, w ) {
	
	    		index = index * this.data.stride + this.offset;
	
	    		this.data.array[ index + 0 ] = x;
	    		this.data.array[ index + 1 ] = y;
	    		this.data.array[ index + 2 ] = z;
	    		this.data.array[ index + 3 ] = w;
	
	    		return this;
	
	    	}
	
	    };
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function InterleavedBuffer( array, stride ) {
	
	    	this.uuid = exports.Math.generateUUID();
	
	    	this.array = array;
	    	this.stride = stride;
	    	this.count = array !== undefined ? array.length / stride : 0;
	
	    	this.dynamic = false;
	    	this.updateRange = { offset: 0, count: - 1 };
	
	    	this.version = 0;
	
	    }
	
	    InterleavedBuffer.prototype = {
	
	    	constructor: InterleavedBuffer,
	
	    	isInterleavedBuffer: true,
	
	    	set needsUpdate( value ) {
	
	    		if ( value === true ) this.version ++;
	
	    	},
	
	    	setDynamic: function ( value ) {
	
	    		this.dynamic = value;
	
	    		return this;
	
	    	},
	
	    	copy: function ( source ) {
	
	    		this.array = new source.array.constructor( source.array );
	    		this.count = source.count;
	    		this.stride = source.stride;
	    		this.dynamic = source.dynamic;
	
	    		return this;
	
	    	},
	
	    	copyAt: function ( index1, attribute, index2 ) {
	
	    		index1 *= this.stride;
	    		index2 *= attribute.stride;
	
	    		for ( var i = 0, l = this.stride; i < l; i ++ ) {
	
	    			this.array[ index1 + i ] = attribute.array[ index2 + i ];
	
	    		}
	
	    		return this;
	
	    	},
	
	    	set: function ( value, offset ) {
	
	    		if ( offset === undefined ) offset = 0;
	
	    		this.array.set( value, offset );
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	}
	
	    };
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {
	
	    	InterleavedBuffer.call( this, array, stride );
	
	    	this.meshPerAttribute = meshPerAttribute || 1;
	
	    }
	
	    InstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );
	    InstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;
	
	    InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;
	
	    InstancedInterleavedBuffer.prototype.copy = function ( source ) {
	
	    	InterleavedBuffer.prototype.copy.call( this, source );
	
	    	this.meshPerAttribute = source.meshPerAttribute;
	
	    	return this;
	
	    };
	
	    /**
	     * @author benaadams / https://twitter.com/ben_a_adams
	     */
	
	    function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {
	
	    	BufferAttribute.call( this, array, itemSize );
	
	    	this.meshPerAttribute = meshPerAttribute || 1;
	
	    }
	
	    InstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	    InstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;
	
	    InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;
	
	    InstancedBufferAttribute.prototype.copy = function ( source ) {
	
	    	BufferAttribute.prototype.copy.call( this, source );
	
	    	this.meshPerAttribute = source.meshPerAttribute;
	
	    	return this;
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author bhouston / http://clara.io/
	     * @author stephomi / http://stephaneginier.com/
	     */
	
	    function Raycaster( origin, direction, near, far ) {
	
	    	this.ray = new Ray( origin, direction );
	    	// direction is assumed to be normalized (for accurate distance calculations)
	
	    	this.near = near || 0;
	    	this.far = far || Infinity;
	
	    	this.params = {
	    		Mesh: {},
	    		Line: {},
	    		LOD: {},
	    		Points: { threshold: 1 },
	    		Sprite: {}
	    	};
	
	    	Object.defineProperties( this.params, {
	    		PointCloud: {
	    			get: function () {
	    				console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );
	    				return this.Points;
	    			}
	    		}
	    	} );
	
	    }
	
	    function ascSort( a, b ) {
	
	    	return a.distance - b.distance;
	
	    }
	
	    function intersectObject( object, raycaster, intersects, recursive ) {
	
	    	if ( object.visible === false ) return;
	
	    	object.raycast( raycaster, intersects );
	
	    	if ( recursive === true ) {
	
	    		var children = object.children;
	
	    		for ( var i = 0, l = children.length; i < l; i ++ ) {
	
	    			intersectObject( children[ i ], raycaster, intersects, true );
	
	    		}
	
	    	}
	
	    }
	
	    //
	
	    Raycaster.prototype = {
	
	    	constructor: Raycaster,
	
	    	linePrecision: 1,
	
	    	set: function ( origin, direction ) {
	
	    		// direction is assumed to be normalized (for accurate distance calculations)
	
	    		this.ray.set( origin, direction );
	
	    	},
	
	    	setFromCamera: function ( coords, camera ) {
	
	    		if ( (camera && camera.isPerspectiveCamera) ) {
	
	    			this.ray.origin.setFromMatrixPosition( camera.matrixWorld );
	    			this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();
	
	    		} else if ( (camera && camera.isOrthographicCamera) ) {
	
	    			this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera
	    			this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );
	
	    		} else {
	
	    			console.error( 'THREE.Raycaster: Unsupported camera type.' );
	
	    		}
	
	    	},
	
	    	intersectObject: function ( object, recursive ) {
	
	    		var intersects = [];
	
	    		intersectObject( object, this, intersects, recursive );
	
	    		intersects.sort( ascSort );
	
	    		return intersects;
	
	    	},
	
	    	intersectObjects: function ( objects, recursive ) {
	
	    		var intersects = [];
	
	    		if ( Array.isArray( objects ) === false ) {
	
	    			console.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );
	    			return intersects;
	
	    		}
	
	    		for ( var i = 0, l = objects.length; i < l; i ++ ) {
	
	    			intersectObject( objects[ i ], this, intersects, recursive );
	
	    		}
	
	    		intersects.sort( ascSort );
	
	    		return intersects;
	
	    	}
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Clock( autoStart ) {
	
	    	this.autoStart = ( autoStart !== undefined ) ? autoStart : true;
	
	    	this.startTime = 0;
	    	this.oldTime = 0;
	    	this.elapsedTime = 0;
	
	    	this.running = false;
	
	    }
	
	    Clock.prototype = {
	
	    	constructor: Clock,
	
	    	start: function () {
	
	    		this.startTime = ( performance || Date ).now();
	
	    		this.oldTime = this.startTime;
	    		this.running = true;
	
	    	},
	
	    	stop: function () {
	
	    		this.getElapsedTime();
	    		this.running = false;
	
	    	},
	
	    	getElapsedTime: function () {
	
	    		this.getDelta();
	    		return this.elapsedTime;
	
	    	},
	
	    	getDelta: function () {
	
	    		var diff = 0;
	
	    		if ( this.autoStart && ! this.running ) {
	
	    			this.start();
	
	    		}
	
	    		if ( this.running ) {
	
	    			var newTime = ( performance || Date ).now();
	
	    			diff = ( newTime - this.oldTime ) / 1000;
	    			this.oldTime = newTime;
	
	    			this.elapsedTime += diff;
	
	    		}
	
	    		return diff;
	
	    	}
	
	    };
	
	    /**
	     * Spline from Tween.js, slightly optimized (and trashed)
	     * http://sole.github.com/tween.js/examples/05_spline.html
	     *
	     * @author mrdoob / http://mrdoob.com/
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function Spline( points ) {
	
	    	this.points = points;
	
	    	var c = [], v3 = { x: 0, y: 0, z: 0 },
	    	point, intPoint, weight, w2, w3,
	    	pa, pb, pc, pd;
	
	    	this.initFromArray = function ( a ) {
	
	    		this.points = [];
	
	    		for ( var i = 0; i < a.length; i ++ ) {
	
	    			this.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };
	
	    		}
	
	    	};
	
	    	this.getPoint = function ( k ) {
	
	    		point = ( this.points.length - 1 ) * k;
	    		intPoint = Math.floor( point );
	    		weight = point - intPoint;
	
	    		c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;
	    		c[ 1 ] = intPoint;
	    		c[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;
	    		c[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;
	
	    		pa = this.points[ c[ 0 ] ];
	    		pb = this.points[ c[ 1 ] ];
	    		pc = this.points[ c[ 2 ] ];
	    		pd = this.points[ c[ 3 ] ];
	
	    		w2 = weight * weight;
	    		w3 = weight * w2;
	
	    		v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );
	    		v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );
	    		v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );
	
	    		return v3;
	
	    	};
	
	    	this.getControlPointsArray = function () {
	
	    		var i, p, l = this.points.length,
	    			coords = [];
	
	    		for ( i = 0; i < l; i ++ ) {
	
	    			p = this.points[ i ];
	    			coords[ i ] = [ p.x, p.y, p.z ];
	
	    		}
	
	    		return coords;
	
	    	};
	
	    	// approximate length by summing linear segments
	
	    	this.getLength = function ( nSubDivisions ) {
	
	    		var i, index, nSamples, position,
	    			point = 0, intPoint = 0, oldIntPoint = 0,
	    			oldPosition = new Vector3(),
	    			tmpVec = new Vector3(),
	    			chunkLengths = [],
	    			totalLength = 0;
	
	    		// first point has 0 length
	
	    		chunkLengths[ 0 ] = 0;
	
	    		if ( ! nSubDivisions ) nSubDivisions = 100;
	
	    		nSamples = this.points.length * nSubDivisions;
	
	    		oldPosition.copy( this.points[ 0 ] );
	
	    		for ( i = 1; i < nSamples; i ++ ) {
	
	    			index = i / nSamples;
	
	    			position = this.getPoint( index );
	    			tmpVec.copy( position );
	
	    			totalLength += tmpVec.distanceTo( oldPosition );
	
	    			oldPosition.copy( position );
	
	    			point = ( this.points.length - 1 ) * index;
	    			intPoint = Math.floor( point );
	
	    			if ( intPoint !== oldIntPoint ) {
	
	    				chunkLengths[ intPoint ] = totalLength;
	    				oldIntPoint = intPoint;
	
	    			}
	
	    		}
	
	    		// last point ends with total length
	
	    		chunkLengths[ chunkLengths.length ] = totalLength;
	
	    		return { chunks: chunkLengths, total: totalLength };
	
	    	};
	
	    	this.reparametrizeByArcLength = function ( samplingCoef ) {
	
	    		var i, j,
	    			index, indexCurrent, indexNext,
	    			realDistance,
	    			sampling, position,
	    			newpoints = [],
	    			tmpVec = new Vector3(),
	    			sl = this.getLength();
	
	    		newpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );
	
	    		for ( i = 1; i < this.points.length; i ++ ) {
	
	    			//tmpVec.copy( this.points[ i - 1 ] );
	    			//linearDistance = tmpVec.distanceTo( this.points[ i ] );
	
	    			realDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];
	
	    			sampling = Math.ceil( samplingCoef * realDistance / sl.total );
	
	    			indexCurrent = ( i - 1 ) / ( this.points.length - 1 );
	    			indexNext = i / ( this.points.length - 1 );
	
	    			for ( j = 1; j < sampling - 1; j ++ ) {
	
	    				index = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );
	
	    				position = this.getPoint( index );
	    				newpoints.push( tmpVec.copy( position ).clone() );
	
	    			}
	
	    			newpoints.push( tmpVec.copy( this.points[ i ] ).clone() );
	
	    		}
	
	    		this.points = newpoints;
	
	    	};
	
	    	// Catmull-Rom
	
	    	function interpolate( p0, p1, p2, p3, t, t2, t3 ) {
	
	    		var v0 = ( p2 - p0 ) * 0.5,
	    			v1 = ( p3 - p1 ) * 0.5;
	
	    		return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;
	
	    	}
	
	    }
	
	    /**
	     * @author bhouston / http://clara.io
	     * @author WestLangley / http://github.com/WestLangley
	     *
	     * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
	     *
	     * The poles (phi) are at the positive and negative y axis.
	     * The equator starts at positive z.
	     */
	
	    function Spherical( radius, phi, theta ) {
	
	    	this.radius = ( radius !== undefined ) ? radius : 1.0;
	    	this.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole
	    	this.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere
	
	    	return this;
	
	    }
	
	    Spherical.prototype = {
	
	    	constructor: Spherical,
	
	    	set: function ( radius, phi, theta ) {
	
	    		this.radius = radius;
	    		this.phi = phi;
	    		this.theta = theta;
	
	    		return this;
	
	    	},
	
	    	clone: function () {
	
	    		return new this.constructor().copy( this );
	
	    	},
	
	    	copy: function ( other ) {
	
	    		this.radius.copy( other.radius );
	    		this.phi.copy( other.phi );
	    		this.theta.copy( other.theta );
	
	    		return this;
	
	    	},
	
	    	// restrict phi to be betwee EPS and PI-EPS
	    	makeSafe: function() {
	
	    		var EPS = 0.000001;
	    		this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );
	
	    		return this;
	
	    	},
	
	    	setFromVector3: function( vec3 ) {
	
	    		this.radius = vec3.length();
	
	    		if ( this.radius === 0 ) {
	
	    			this.theta = 0;
	    			this.phi = 0;
	
	    		} else {
	
	    			this.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis
	    			this.phi = Math.acos( exports.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle
	
	    		}
	
	    		return this;
	
	    	},
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function MorphBlendMesh( geometry, material ) {
	
	    	Mesh.call( this, geometry, material );
	
	    	this.animationsMap = {};
	    	this.animationsList = [];
	
	    	// prepare default animation
	    	// (all frames played together in 1 second)
	
	    	var numFrames = this.geometry.morphTargets.length;
	
	    	var name = "__default";
	
	    	var startFrame = 0;
	    	var endFrame = numFrames - 1;
	
	    	var fps = numFrames / 1;
	
	    	this.createAnimation( name, startFrame, endFrame, fps );
	    	this.setAnimationWeight( name, 1 );
	
	    }
	
	    MorphBlendMesh.prototype = Object.create( Mesh.prototype );
	    MorphBlendMesh.prototype.constructor = MorphBlendMesh;
	
	    MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {
	
	    	var animation = {
	
	    		start: start,
	    		end: end,
	
	    		length: end - start + 1,
	
	    		fps: fps,
	    		duration: ( end - start ) / fps,
	
	    		lastFrame: 0,
	    		currentFrame: 0,
	
	    		active: false,
	
	    		time: 0,
	    		direction: 1,
	    		weight: 1,
	
	    		directionBackwards: false,
	    		mirroredLoop: false
	
	    	};
	
	    	this.animationsMap[ name ] = animation;
	    	this.animationsList.push( animation );
	
	    };
	
	    MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {
	
	    	var pattern = /([a-z]+)_?(\d+)/i;
	
	    	var firstAnimation, frameRanges = {};
	
	    	var geometry = this.geometry;
	
	    	for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {
	
	    		var morph = geometry.morphTargets[ i ];
	    		var chunks = morph.name.match( pattern );
	
	    		if ( chunks && chunks.length > 1 ) {
	
	    			var name = chunks[ 1 ];
	
	    			if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };
	
	    			var range = frameRanges[ name ];
	
	    			if ( i < range.start ) range.start = i;
	    			if ( i > range.end ) range.end = i;
	
	    			if ( ! firstAnimation ) firstAnimation = name;
	
	    		}
	
	    	}
	
	    	for ( var name in frameRanges ) {
	
	    		var range = frameRanges[ name ];
	    		this.createAnimation( name, range.start, range.end, fps );
	
	    	}
	
	    	this.firstAnimation = firstAnimation;
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.direction = 1;
	    		animation.directionBackwards = false;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.direction = - 1;
	    		animation.directionBackwards = true;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.fps = fps;
	    		animation.duration = ( animation.end - animation.start ) / animation.fps;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.duration = duration;
	    		animation.fps = ( animation.end - animation.start ) / animation.duration;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.weight = weight;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.time = time;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.getAnimationTime = function ( name ) {
	
	    	var time = 0;
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		time = animation.time;
	
	    	}
	
	    	return time;
	
	    };
	
	    MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {
	
	    	var duration = - 1;
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		duration = animation.duration;
	
	    	}
	
	    	return duration;
	
	    };
	
	    MorphBlendMesh.prototype.playAnimation = function ( name ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.time = 0;
	    		animation.active = true;
	
	    	} else {
	
	    		console.warn( "THREE.MorphBlendMesh: animation[" + name + "] undefined in .playAnimation()" );
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.stopAnimation = function ( name ) {
	
	    	var animation = this.animationsMap[ name ];
	
	    	if ( animation ) {
	
	    		animation.active = false;
	
	    	}
	
	    };
	
	    MorphBlendMesh.prototype.update = function ( delta ) {
	
	    	for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {
	
	    		var animation = this.animationsList[ i ];
	
	    		if ( ! animation.active ) continue;
	
	    		var frameTime = animation.duration / animation.length;
	
	    		animation.time += animation.direction * delta;
	
	    		if ( animation.mirroredLoop ) {
	
	    			if ( animation.time > animation.duration || animation.time < 0 ) {
	
	    				animation.direction *= - 1;
	
	    				if ( animation.time > animation.duration ) {
	
	    					animation.time = animation.duration;
	    					animation.directionBackwards = true;
	
	    				}
	
	    				if ( animation.time < 0 ) {
	
	    					animation.time = 0;
	    					animation.directionBackwards = false;
	
	    				}
	
	    			}
	
	    		} else {
	
	    			animation.time = animation.time % animation.duration;
	
	    			if ( animation.time < 0 ) animation.time += animation.duration;
	
	    		}
	
	    		var keyframe = animation.start + exports.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );
	    		var weight = animation.weight;
	
	    		if ( keyframe !== animation.currentFrame ) {
	
	    			this.morphTargetInfluences[ animation.lastFrame ] = 0;
	    			this.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;
	
	    			this.morphTargetInfluences[ keyframe ] = 0;
	
	    			animation.lastFrame = animation.currentFrame;
	    			animation.currentFrame = keyframe;
	
	    		}
	
	    		var mix = ( animation.time % frameTime ) / frameTime;
	
	    		if ( animation.directionBackwards ) mix = 1 - mix;
	
	    		if ( animation.currentFrame !== animation.lastFrame ) {
	
	    			this.morphTargetInfluences[ animation.currentFrame ] = mix * weight;
	    			this.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;
	
	    		} else {
	
	    			this.morphTargetInfluences[ animation.currentFrame ] = weight;
	
	    		}
	
	    	}
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    function ImmediateRenderObject( material ) {
	
	    	Object3D.call( this );
	
	    	this.material = material;
	    	this.render = function ( renderCallback ) {};
	
	    }
	
	    ImmediateRenderObject.prototype = Object.create( Object3D.prototype );
	    ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;
	
	    ImmediateRenderObject.prototype.isImmediateRenderObject = true;
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author WestLangley / http://github.com/WestLangley
	    */
	
	    function VertexNormalsHelper( object, size, hex, linewidth ) {
	
	    	this.object = object;
	
	    	this.size = ( size !== undefined ) ? size : 1;
	
	    	var color = ( hex !== undefined ) ? hex : 0xff0000;
	
	    	var width = ( linewidth !== undefined ) ? linewidth : 1;
	
	    	//
	
	    	var nNormals = 0;
	
	    	var objGeometry = this.object.geometry;
	
	    	if ( (objGeometry && objGeometry.isGeometry) ) {
	
	    		nNormals = objGeometry.faces.length * 3;
	
	    	} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {
	
	    		nNormals = objGeometry.attributes.normal.count;
	
	    	}
	
	    	//
	
	    	var geometry = new BufferGeometry();
	
	    	var positions = new Float32Attribute( nNormals * 2 * 3, 3 );
	
	    	geometry.addAttribute( 'position', positions );
	
	    	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );
	
	    	//
	
	    	this.matrixAutoUpdate = false;
	
	    	this.update();
	
	    }
	
	    VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );
	    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;
	
	    VertexNormalsHelper.prototype.update = ( function () {
	
	    	var v1 = new Vector3();
	    	var v2 = new Vector3();
	    	var normalMatrix = new Matrix3();
	
	    	return function update() {
	
	    		var keys = [ 'a', 'b', 'c' ];
	
	    		this.object.updateMatrixWorld( true );
	
	    		normalMatrix.getNormalMatrix( this.object.matrixWorld );
	
	    		var matrixWorld = this.object.matrixWorld;
	
	    		var position = this.geometry.attributes.position;
	
	    		//
	
	    		var objGeometry = this.object.geometry;
	
	    		if ( (objGeometry && objGeometry.isGeometry) ) {
	
	    			var vertices = objGeometry.vertices;
	
	    			var faces = objGeometry.faces;
	
	    			var idx = 0;
	
	    			for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    				var face = faces[ i ];
	
	    				for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {
	
	    					var vertex = vertices[ face[ keys[ j ] ] ];
	
	    					var normal = face.vertexNormals[ j ];
	
	    					v1.copy( vertex ).applyMatrix4( matrixWorld );
	
	    					v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );
	
	    					position.setXYZ( idx, v1.x, v1.y, v1.z );
	
	    					idx = idx + 1;
	
	    					position.setXYZ( idx, v2.x, v2.y, v2.z );
	
	    					idx = idx + 1;
	
	    				}
	
	    			}
	
	    		} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {
	
	    			var objPos = objGeometry.attributes.position;
	
	    			var objNorm = objGeometry.attributes.normal;
	
	    			var idx = 0;
	
	    			// for simplicity, ignore index and drawcalls, and render every normal
	
	    			for ( var j = 0, jl = objPos.count; j < jl; j ++ ) {
	
	    				v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );
	
	    				v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );
	
	    				v2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );
	
	    				position.setXYZ( idx, v1.x, v1.y, v1.z );
	
	    				idx = idx + 1;
	
	    				position.setXYZ( idx, v2.x, v2.y, v2.z );
	
	    				idx = idx + 1;
	
	    			}
	
	    		}
	
	    		position.needsUpdate = true;
	
	    		return this;
	
	    	};
	
	    }() );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     * @author WestLangley / http://github.com/WestLangley
	    */
	
	    function SpotLightHelper( light ) {
	
	    	Object3D.call( this );
	
	    	this.light = light;
	    	this.light.updateMatrixWorld();
	
	    	this.matrix = light.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	var geometry = new BufferGeometry();
	
	    	var positions = [
	    		0, 0, 0,   0,   0,   1,
	    		0, 0, 0,   1,   0,   1,
	    		0, 0, 0, - 1,   0,   1,
	    		0, 0, 0,   0,   1,   1,
	    		0, 0, 0,   0, - 1,   1
	    	];
	
	    	for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {
	
	    		var p1 = ( i / l ) * Math.PI * 2;
	    		var p2 = ( j / l ) * Math.PI * 2;
	
	    		positions.push(
	    			Math.cos( p1 ), Math.sin( p1 ), 1,
	    			Math.cos( p2 ), Math.sin( p2 ), 1
	    		);
	
	    	}
	
	    	geometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );
	
	    	var material = new LineBasicMaterial( { fog: false } );
	
	    	this.cone = new LineSegments( geometry, material );
	    	this.add( this.cone );
	
	    	this.update();
	
	    }
	
	    SpotLightHelper.prototype = Object.create( Object3D.prototype );
	    SpotLightHelper.prototype.constructor = SpotLightHelper;
	
	    SpotLightHelper.prototype.dispose = function () {
	
	    	this.cone.geometry.dispose();
	    	this.cone.material.dispose();
	
	    };
	
	    SpotLightHelper.prototype.update = function () {
	
	    	var vector = new Vector3();
	    	var vector2 = new Vector3();
	
	    	return function update() {
	
	    		var coneLength = this.light.distance ? this.light.distance : 1000;
	    		var coneWidth = coneLength * Math.tan( this.light.angle );
	
	    		this.cone.scale.set( coneWidth, coneWidth, coneLength );
	
	    		vector.setFromMatrixPosition( this.light.matrixWorld );
	    		vector2.setFromMatrixPosition( this.light.target.matrixWorld );
	
	    		this.cone.lookAt( vector2.sub( vector ) );
	
	    		this.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	
	    	};
	
	    }();
	
	    /**
	     * @author Sean Griffin / http://twitter.com/sgrif
	     * @author Michael Guerrero / http://realitymeltdown.com
	     * @author mrdoob / http://mrdoob.com/
	     * @author ikerr / http://verold.com
	     */
	
	    function SkeletonHelper( object ) {
	
	    	this.bones = this.getBoneList( object );
	
	    	var geometry = new Geometry();
	
	    	for ( var i = 0; i < this.bones.length; i ++ ) {
	
	    		var bone = this.bones[ i ];
	
	    		if ( (bone.parent && bone.parent.isBone) ) {
	
	    			geometry.vertices.push( new Vector3() );
	    			geometry.vertices.push( new Vector3() );
	    			geometry.colors.push( new Color( 0, 0, 1 ) );
	    			geometry.colors.push( new Color( 0, 1, 0 ) );
	
	    		}
	
	    	}
	
	    	geometry.dynamic = true;
	
	    	var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );
	
	    	LineSegments.call( this, geometry, material );
	
	    	this.root = object;
	
	    	this.matrix = object.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	this.update();
	
	    }
	
	
	    SkeletonHelper.prototype = Object.create( LineSegments.prototype );
	    SkeletonHelper.prototype.constructor = SkeletonHelper;
	
	    SkeletonHelper.prototype.getBoneList = function( object ) {
	
	    	var boneList = [];
	
	    	if ( (object && object.isBone) ) {
	
	    		boneList.push( object );
	
	    	}
	
	    	for ( var i = 0; i < object.children.length; i ++ ) {
	
	    		boneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );
	
	    	}
	
	    	return boneList;
	
	    };
	
	    SkeletonHelper.prototype.update = function () {
	
	    	var geometry = this.geometry;
	
	    	var matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );
	
	    	var boneMatrix = new Matrix4();
	
	    	var j = 0;
	
	    	for ( var i = 0; i < this.bones.length; i ++ ) {
	
	    		var bone = this.bones[ i ];
	
	    		if ( (bone.parent && bone.parent.isBone) ) {
	
	    			boneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );
	    			geometry.vertices[ j ].setFromMatrixPosition( boneMatrix );
	
	    			boneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );
	    			geometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );
	
	    			j += 2;
	
	    		}
	
	    	}
	
	    	geometry.verticesNeedUpdate = true;
	
	    	geometry.computeBoundingSphere();
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function PointLightHelper( light, sphereSize ) {
	
	    	this.light = light;
	    	this.light.updateMatrixWorld();
	
	    	var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );
	    	var material = new MeshBasicMaterial( { wireframe: true, fog: false } );
	    	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	
	    	Mesh.call( this, geometry, material );
	
	    	this.matrix = this.light.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	/*
	    	var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );
	    	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );
	
	    	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	    	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );
	
	    	var d = light.distance;
	
	    	if ( d === 0.0 ) {
	
	    		this.lightDistance.visible = false;
	
	    	} else {
	
	    		this.lightDistance.scale.set( d, d, d );
	
	    	}
	
	    	this.add( this.lightDistance );
	    	*/
	
	    }
	
	    PointLightHelper.prototype = Object.create( Mesh.prototype );
	    PointLightHelper.prototype.constructor = PointLightHelper;
	
	    PointLightHelper.prototype.dispose = function () {
	
	    	this.geometry.dispose();
	    	this.material.dispose();
	
	    };
	
	    PointLightHelper.prototype.update = function () {
	
	    	this.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	
	    	/*
	    	var d = this.light.distance;
	
	    	if ( d === 0.0 ) {
	
	    		this.lightDistance.visible = false;
	
	    	} else {
	
	    		this.lightDistance.visible = true;
	    		this.lightDistance.scale.set( d, d, d );
	
	    	}
	    	*/
	
	    };
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function HemisphereLightHelper( light, sphereSize ) {
	
	    	Object3D.call( this );
	
	    	this.light = light;
	    	this.light.updateMatrixWorld();
	
	    	this.matrix = light.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	this.colors = [ new Color(), new Color() ];
	
	    	var geometry = new SphereGeometry( sphereSize, 4, 2 );
	    	geometry.rotateX( - Math.PI / 2 );
	
	    	for ( var i = 0, il = 8; i < il; i ++ ) {
	
	    		geometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];
	
	    	}
	
	    	var material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );
	
	    	this.lightSphere = new Mesh( geometry, material );
	    	this.add( this.lightSphere );
	
	    	this.update();
	
	    }
	
	    HemisphereLightHelper.prototype = Object.create( Object3D.prototype );
	    HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;
	
	    HemisphereLightHelper.prototype.dispose = function () {
	
	    	this.lightSphere.geometry.dispose();
	    	this.lightSphere.material.dispose();
	
	    };
	
	    HemisphereLightHelper.prototype.update = function () {
	
	    	var vector = new Vector3();
	
	    	return function update() {
	
	    		this.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );
	    		this.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );
	
	    		this.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );
	    		this.lightSphere.geometry.colorsNeedUpdate = true;
	
	    	};
	
	    }();
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function GridHelper( size, divisions, color1, color2 ) {
	
	    	divisions = divisions || 1;
	    	color1 = new Color( color1 !== undefined ? color1 : 0x444444 );
	    	color2 = new Color( color2 !== undefined ? color2 : 0x888888 );
	
	    	var center = divisions / 2;
	    	var step = ( size * 2 ) / divisions;
	    	var vertices = [], colors = [];
	
	    	for ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {
	
	    		vertices.push( - size, 0, k, size, 0, k );
	    		vertices.push( k, 0, - size, k, 0, size );
	
	    		var color = i === center ? color1 : color2;
	
	    		color.toArray( colors, j ); j += 3;
	    		color.toArray( colors, j ); j += 3;
	    		color.toArray( colors, j ); j += 3;
	    		color.toArray( colors, j ); j += 3;
	
	    	}
	
	    	var geometry = new BufferGeometry();
	    	geometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );
	    	geometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );
	
	    	var material = new LineBasicMaterial( { vertexColors: VertexColors } );
	
	    	LineSegments.call( this, geometry, material );
	
	    }
	
	    GridHelper.prototype = Object.create( LineSegments.prototype );
	    GridHelper.prototype.constructor = GridHelper;
	
	    GridHelper.prototype.setColors = function () {
	
	    	console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     * @author WestLangley / http://github.com/WestLangley
	    */
	
	    function FaceNormalsHelper( object, size, hex, linewidth ) {
	
	    	// FaceNormalsHelper only supports THREE.Geometry
	
	    	this.object = object;
	
	    	this.size = ( size !== undefined ) ? size : 1;
	
	    	var color = ( hex !== undefined ) ? hex : 0xffff00;
	
	    	var width = ( linewidth !== undefined ) ? linewidth : 1;
	
	    	//
	
	    	var nNormals = 0;
	
	    	var objGeometry = this.object.geometry;
	
	    	if ( (objGeometry && objGeometry.isGeometry) ) {
	
	    		nNormals = objGeometry.faces.length;
	
	    	} else {
	
	    		console.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );
	
	    	}
	
	    	//
	
	    	var geometry = new BufferGeometry();
	
	    	var positions = new Float32Attribute( nNormals * 2 * 3, 3 );
	
	    	geometry.addAttribute( 'position', positions );
	
	    	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );
	
	    	//
	
	    	this.matrixAutoUpdate = false;
	    	this.update();
	
	    }
	
	    FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );
	    FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;
	
	    FaceNormalsHelper.prototype.update = ( function () {
	
	    	var v1 = new Vector3();
	    	var v2 = new Vector3();
	    	var normalMatrix = new Matrix3();
	
	    	return function update() {
	
	    		this.object.updateMatrixWorld( true );
	
	    		normalMatrix.getNormalMatrix( this.object.matrixWorld );
	
	    		var matrixWorld = this.object.matrixWorld;
	
	    		var position = this.geometry.attributes.position;
	
	    		//
	
	    		var objGeometry = this.object.geometry;
	
	    		var vertices = objGeometry.vertices;
	
	    		var faces = objGeometry.faces;
	
	    		var idx = 0;
	
	    		for ( var i = 0, l = faces.length; i < l; i ++ ) {
	
	    			var face = faces[ i ];
	
	    			var normal = face.normal;
	
	    			v1.copy( vertices[ face.a ] )
	    				.add( vertices[ face.b ] )
	    				.add( vertices[ face.c ] )
	    				.divideScalar( 3 )
	    				.applyMatrix4( matrixWorld );
	
	    			v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );
	
	    			position.setXYZ( idx, v1.x, v1.y, v1.z );
	
	    			idx = idx + 1;
	
	    			position.setXYZ( idx, v2.x, v2.y, v2.z );
	
	    			idx = idx + 1;
	
	    		}
	
	    		position.needsUpdate = true;
	
	    		return this;
	
	    	};
	
	    }() );
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     * @author mrdoob / http://mrdoob.com/
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    function DirectionalLightHelper( light, size ) {
	
	    	Object3D.call( this );
	
	    	this.light = light;
	    	this.light.updateMatrixWorld();
	
	    	this.matrix = light.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	if ( size === undefined ) size = 1;
	
	    	var geometry = new BufferGeometry();
	    	geometry.addAttribute( 'position', new Float32Attribute( [
	    		- size,   size, 0,
	    		  size,   size, 0,
	    		  size, - size, 0,
	    		- size, - size, 0,
	    		- size,   size, 0
	    	], 3 ) );
	
	    	var material = new LineBasicMaterial( { fog: false } );
	
	    	this.add( new Line( geometry, material ) );
	
	    	geometry = new BufferGeometry();
	    	geometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );
	
	    	this.add( new Line( geometry, material ));
	
	    	this.update();
	
	    }
	
	    DirectionalLightHelper.prototype = Object.create( Object3D.prototype );
	    DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;
	
	    DirectionalLightHelper.prototype.dispose = function () {
	
	    	var lightPlane = this.children[ 0 ];
	    	var targetLine = this.children[ 1 ];
	
	    	lightPlane.geometry.dispose();
	    	lightPlane.material.dispose();
	    	targetLine.geometry.dispose();
	    	targetLine.material.dispose();
	
	    };
	
	    DirectionalLightHelper.prototype.update = function () {
	
	    	var v1 = new Vector3();
	    	var v2 = new Vector3();
	    	var v3 = new Vector3();
	
	    	return function update() {
	
	    		v1.setFromMatrixPosition( this.light.matrixWorld );
	    		v2.setFromMatrixPosition( this.light.target.matrixWorld );
	    		v3.subVectors( v2, v1 );
	
	    		var lightPlane = this.children[ 0 ];
	    		var targetLine = this.children[ 1 ];
	
	    		lightPlane.lookAt( v3 );
	    		lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	
	    		targetLine.lookAt( v3 );
	    		targetLine.scale.z = v3.length();
	
	    	};
	
	    }();
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     *
	     *	- shows frustum, line of sight and up of the camera
	     *	- suitable for fast updates
	     * 	- based on frustum visualization in lightgl.js shadowmap example
	     *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
	     */
	
	    function CameraHelper( camera ) {
	
	    	var geometry = new Geometry();
	    	var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );
	
	    	var pointMap = {};
	
	    	// colors
	
	    	var hexFrustum = 0xffaa00;
	    	var hexCone = 0xff0000;
	    	var hexUp = 0x00aaff;
	    	var hexTarget = 0xffffff;
	    	var hexCross = 0x333333;
	
	    	// near
	
	    	addLine( "n1", "n2", hexFrustum );
	    	addLine( "n2", "n4", hexFrustum );
	    	addLine( "n4", "n3", hexFrustum );
	    	addLine( "n3", "n1", hexFrustum );
	
	    	// far
	
	    	addLine( "f1", "f2", hexFrustum );
	    	addLine( "f2", "f4", hexFrustum );
	    	addLine( "f4", "f3", hexFrustum );
	    	addLine( "f3", "f1", hexFrustum );
	
	    	// sides
	
	    	addLine( "n1", "f1", hexFrustum );
	    	addLine( "n2", "f2", hexFrustum );
	    	addLine( "n3", "f3", hexFrustum );
	    	addLine( "n4", "f4", hexFrustum );
	
	    	// cone
	
	    	addLine( "p", "n1", hexCone );
	    	addLine( "p", "n2", hexCone );
	    	addLine( "p", "n3", hexCone );
	    	addLine( "p", "n4", hexCone );
	
	    	// up
	
	    	addLine( "u1", "u2", hexUp );
	    	addLine( "u2", "u3", hexUp );
	    	addLine( "u3", "u1", hexUp );
	
	    	// target
	
	    	addLine( "c", "t", hexTarget );
	    	addLine( "p", "c", hexCross );
	
	    	// cross
	
	    	addLine( "cn1", "cn2", hexCross );
	    	addLine( "cn3", "cn4", hexCross );
	
	    	addLine( "cf1", "cf2", hexCross );
	    	addLine( "cf3", "cf4", hexCross );
	
	    	function addLine( a, b, hex ) {
	
	    		addPoint( a, hex );
	    		addPoint( b, hex );
	
	    	}
	
	    	function addPoint( id, hex ) {
	
	    		geometry.vertices.push( new Vector3() );
	    		geometry.colors.push( new Color( hex ) );
	
	    		if ( pointMap[ id ] === undefined ) {
	
	    			pointMap[ id ] = [];
	
	    		}
	
	    		pointMap[ id ].push( geometry.vertices.length - 1 );
	
	    	}
	
	    	LineSegments.call( this, geometry, material );
	
	    	this.camera = camera;
	    	if( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();
	
	    	this.matrix = camera.matrixWorld;
	    	this.matrixAutoUpdate = false;
	
	    	this.pointMap = pointMap;
	
	    	this.update();
	
	    }
	
	    CameraHelper.prototype = Object.create( LineSegments.prototype );
	    CameraHelper.prototype.constructor = CameraHelper;
	
	    CameraHelper.prototype.update = function () {
	
	    	var geometry, pointMap;
	
	    	var vector = new Vector3();
	    	var camera = new Camera();
	
	    	function setPoint( point, x, y, z ) {
	
	    		vector.set( x, y, z ).unproject( camera );
	
	    		var points = pointMap[ point ];
	
	    		if ( points !== undefined ) {
	
	    			for ( var i = 0, il = points.length; i < il; i ++ ) {
	
	    				geometry.vertices[ points[ i ] ].copy( vector );
	
	    			}
	
	    		}
	
	    	}
	
	    	return function update() {
	
	    		geometry = this.geometry;
	    		pointMap = this.pointMap;
	
	    		var w = 1, h = 1;
	
	    		// we need just camera projection matrix
	    		// world matrix must be identity
	
	    		camera.projectionMatrix.copy( this.camera.projectionMatrix );
	
	    		// center / target
	
	    		setPoint( "c", 0, 0, - 1 );
	    		setPoint( "t", 0, 0,  1 );
	
	    		// near
	
	    		setPoint( "n1", - w, - h, - 1 );
	    		setPoint( "n2",   w, - h, - 1 );
	    		setPoint( "n3", - w,   h, - 1 );
	    		setPoint( "n4",   w,   h, - 1 );
	
	    		// far
	
	    		setPoint( "f1", - w, - h, 1 );
	    		setPoint( "f2",   w, - h, 1 );
	    		setPoint( "f3", - w,   h, 1 );
	    		setPoint( "f4",   w,   h, 1 );
	
	    		// up
	
	    		setPoint( "u1",   w * 0.7, h * 1.1, - 1 );
	    		setPoint( "u2", - w * 0.7, h * 1.1, - 1 );
	    		setPoint( "u3",         0, h * 2,   - 1 );
	
	    		// cross
	
	    		setPoint( "cf1", - w,   0, 1 );
	    		setPoint( "cf2",   w,   0, 1 );
	    		setPoint( "cf3",   0, - h, 1 );
	    		setPoint( "cf4",   0,   h, 1 );
	
	    		setPoint( "cn1", - w,   0, - 1 );
	    		setPoint( "cn2",   w,   0, - 1 );
	    		setPoint( "cn3",   0, - h, - 1 );
	    		setPoint( "cn4",   0,   h, - 1 );
	
	    		geometry.verticesNeedUpdate = true;
	
	    	};
	
	    }();
	
	    /**
	     * @author WestLangley / http://github.com/WestLangley
	     */
	
	    // a helper to show the world-axis-aligned bounding box for an object
	
	    function BoundingBoxHelper( object, hex ) {
	
	    	var color = ( hex !== undefined ) ? hex : 0x888888;
	
	    	this.object = object;
	
	    	this.box = new Box3();
	
	    	Mesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );
	
	    }
	
	    BoundingBoxHelper.prototype = Object.create( Mesh.prototype );
	    BoundingBoxHelper.prototype.constructor = BoundingBoxHelper;
	
	    BoundingBoxHelper.prototype.update = function () {
	
	    	this.box.setFromObject( this.object );
	
	    	this.box.size( this.scale );
	
	    	this.box.getCenter( this.position );
	
	    };
	
	    /**
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function BoxHelper( object, color ) {
	
	    	if ( color === undefined ) color = 0xffff00;
	
	    	var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );
	    	var positions = new Float32Array( 8 * 3 );
	
	    	var geometry = new BufferGeometry();
	    	geometry.setIndex( new BufferAttribute( indices, 1 ) );
	    	geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );
	
	    	LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );
	
	    	if ( object !== undefined ) {
	
	    		this.update( object );
	
	    	}
	
	    }
	
	    BoxHelper.prototype = Object.create( LineSegments.prototype );
	    BoxHelper.prototype.constructor = BoxHelper;
	
	    BoxHelper.prototype.update = ( function () {
	
	    	var box = new Box3();
	
	    	return function update( object ) {
	
	    		if ( (object && object.isBox3) ) {
	
	    			box.copy( object );
	
	    		} else {
	
	    			box.setFromObject( object );
	
	    		}
	
	    		if ( box.isEmpty() ) return;
	
	    		var min = box.min;
	    		var max = box.max;
	
	    		/*
	    		  5____4
	    		1/___0/|
	    		| 6__|_7
	    		2/___3/
	
	    		0: max.x, max.y, max.z
	    		1: min.x, max.y, max.z
	    		2: min.x, min.y, max.z
	    		3: max.x, min.y, max.z
	    		4: max.x, max.y, min.z
	    		5: min.x, max.y, min.z
	    		6: min.x, min.y, min.z
	    		7: max.x, min.y, min.z
	    		*/
	
	    		var position = this.geometry.attributes.position;
	    		var array = position.array;
	
	    		array[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;
	    		array[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;
	    		array[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;
	    		array[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;
	    		array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;
	    		array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;
	    		array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;
	    		array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;
	
	    		position.needsUpdate = true;
	
	    		this.geometry.computeBoundingSphere();
	
	    	};
	
	    } )();
	
	    var lineGeometry = new BufferGeometry();
	    lineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );
	
	    var coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );
	    coneGeometry.translate( 0, - 0.5, 0 );
	
	    function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {
	
	    	// dir is assumed to be normalized
	
	    	Object3D.call( this );
	
	    	if ( color === undefined ) color = 0xffff00;
	    	if ( length === undefined ) length = 1;
	    	if ( headLength === undefined ) headLength = 0.2 * length;
	    	if ( headWidth === undefined ) headWidth = 0.2 * headLength;
	
	    	this.position.copy( origin );
	
	    	this.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );
	    	this.line.matrixAutoUpdate = false;
	    	this.add( this.line );
	
	    	this.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );
	    	this.cone.matrixAutoUpdate = false;
	    	this.add( this.cone );
	
	    	this.setDirection( dir );
	    	this.setLength( length, headLength, headWidth );
	
	    }
	
	    ArrowHelper.prototype = Object.create( Object3D.prototype );
	    ArrowHelper.prototype.constructor = ArrowHelper;
	
	    ArrowHelper.prototype.setDirection = ( function () {
	
	    	var axis = new Vector3();
	    	var radians;
	
	    	return function setDirection( dir ) {
	
	    		// dir is assumed to be normalized
	
	    		if ( dir.y > 0.99999 ) {
	
	    			this.quaternion.set( 0, 0, 0, 1 );
	
	    		} else if ( dir.y < - 0.99999 ) {
	
	    			this.quaternion.set( 1, 0, 0, 0 );
	
	    		} else {
	
	    			axis.set( dir.z, 0, - dir.x ).normalize();
	
	    			radians = Math.acos( dir.y );
	
	    			this.quaternion.setFromAxisAngle( axis, radians );
	
	    		}
	
	    	};
	
	    }() );
	
	    ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {
	
	    	if ( headLength === undefined ) headLength = 0.2 * length;
	    	if ( headWidth === undefined ) headWidth = 0.2 * headLength;
	
	    	this.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );
	    	this.line.updateMatrix();
	
	    	this.cone.scale.set( headWidth, headLength, headWidth );
	    	this.cone.position.y = length;
	    	this.cone.updateMatrix();
	
	    };
	
	    ArrowHelper.prototype.setColor = function ( color ) {
	
	    	this.line.material.color.copy( color );
	    	this.cone.material.color.copy( color );
	
	    };
	
	    /**
	     * @author sroucheray / http://sroucheray.org/
	     * @author mrdoob / http://mrdoob.com/
	     */
	
	    function AxisHelper( size ) {
	
	    	size = size || 1;
	
	    	var vertices = new Float32Array( [
	    		0, 0, 0,  size, 0, 0,
	    		0, 0, 0,  0, size, 0,
	    		0, 0, 0,  0, 0, size
	    	] );
	
	    	var colors = new Float32Array( [
	    		1, 0, 0,  1, 0.6, 0,
	    		0, 1, 0,  0.6, 1, 0,
	    		0, 0, 1,  0, 0.6, 1
	    	] );
	
	    	var geometry = new BufferGeometry();
	    	geometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );
	    	geometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );
	
	    	var material = new LineBasicMaterial( { vertexColors: VertexColors } );
	
	    	LineSegments.call( this, geometry, material );
	
	    }
	
	    AxisHelper.prototype = Object.create( LineSegments.prototype );
	    AxisHelper.prototype.constructor = AxisHelper;
	
	    /**
	     * @author zz85 https://github.com/zz85
	     *
	     * Centripetal CatmullRom Curve - which is useful for avoiding
	     * cusps and self-intersections in non-uniform catmull rom curves.
	     * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
	     *
	     * curve.type accepts centripetal(default), chordal and catmullrom
	     * curve.tension is used for catmullrom which defaults to 0.5
	     */
	
	    exports.CatmullRomCurve3 = ( function() {
	
	    	var
	    		tmp = new Vector3(),
	    		px = new CubicPoly(),
	    		py = new CubicPoly(),
	    		pz = new CubicPoly();
	
	    	/*
	    	Based on an optimized c++ solution in
	    	 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
	    	 - http://ideone.com/NoEbVM
	
	    	This CubicPoly class could be used for reusing some variables and calculations,
	    	but for three.js curve use, it could be possible inlined and flatten into a single function call
	    	which can be placed in CurveUtils.
	    	*/
	
	    	function CubicPoly() {
	
	    	}
	
	    	/*
	    	 * Compute coefficients for a cubic polynomial
	    	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	    	 * such that
	    	 *   p(0) = x0, p(1) = x1
	    	 *  and
	    	 *   p'(0) = t0, p'(1) = t1.
	    	 */
	    	CubicPoly.prototype.init = function( x0, x1, t0, t1 ) {
	
	    		this.c0 = x0;
	    		this.c1 = t0;
	    		this.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;
	    		this.c3 = 2 * x0 - 2 * x1 + t0 + t1;
	
	    	};
	
	    	CubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {
	
	    		// compute tangents when parameterized in [t1,t2]
	    		var t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;
	    		var t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;
	
	    		// rescale tangents for parametrization in [0,1]
	    		t1 *= dt1;
	    		t2 *= dt1;
	
	    		// initCubicPoly
	    		this.init( x1, x2, t1, t2 );
	
	    	};
	
	    	// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4
	    	CubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {
	
	    		this.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );
	
	    	};
	
	    	CubicPoly.prototype.calc = function( t ) {
	
	    		var t2 = t * t;
	    		var t3 = t2 * t;
	    		return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;
	
	    	};
	
	    	// Subclass Three.js curve
	    	return Curve.create(
	
	    		function ( p /* array of Vector3 */ ) {
	
	    			this.points = p || [];
	    			this.closed = false;
	
	    		},
	
	    		function ( t ) {
	
	    			var points = this.points,
	    				point, intPoint, weight, l;
	
	    			l = points.length;
	
	    			if ( l < 2 ) console.log( 'duh, you need at least 2 points' );
	
	    			point = ( l - ( this.closed ? 0 : 1 ) ) * t;
	    			intPoint = Math.floor( point );
	    			weight = point - intPoint;
	
	    			if ( this.closed ) {
	
	    				intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;
	
	    			} else if ( weight === 0 && intPoint === l - 1 ) {
	
	    				intPoint = l - 2;
	    				weight = 1;
	
	    			}
	
	    			var p0, p1, p2, p3; // 4 points
	
	    			if ( this.closed || intPoint > 0 ) {
	
	    				p0 = points[ ( intPoint - 1 ) % l ];
	
	    			} else {
	
	    				// extrapolate first point
	    				tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );
	    				p0 = tmp;
	
	    			}
	
	    			p1 = points[ intPoint % l ];
	    			p2 = points[ ( intPoint + 1 ) % l ];
	
	    			if ( this.closed || intPoint + 2 < l ) {
	
	    				p3 = points[ ( intPoint + 2 ) % l ];
	
	    			} else {
	
	    				// extrapolate last point
	    				tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );
	    				p3 = tmp;
	
	    			}
	
	    			if ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {
	
	    				// init Centripetal / Chordal Catmull-Rom
	    				var pow = this.type === 'chordal' ? 0.5 : 0.25;
	    				var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );
	    				var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );
	    				var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );
	
	    				// safety check for repeated points
	    				if ( dt1 < 1e-4 ) dt1 = 1.0;
	    				if ( dt0 < 1e-4 ) dt0 = dt1;
	    				if ( dt2 < 1e-4 ) dt2 = dt1;
	
	    				px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );
	    				py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );
	    				pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );
	
	    			} else if ( this.type === 'catmullrom' ) {
	
	    				var tension = this.tension !== undefined ? this.tension : 0.5;
	    				px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );
	    				py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );
	    				pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );
	
	    			}
	
	    			var v = new Vector3(
	    				px.calc( weight ),
	    				py.calc( weight ),
	    				pz.calc( weight )
	    			);
	
	    			return v;
	
	    		}
	
	    	);
	
	    } )();
	
	    /**************************************************************
	     *	Closed Spline 3D curve
	     **************************************************************/
	
	
	    function ClosedSplineCurve3( points ) {
	
	    	console.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );
	
	    	exports.CatmullRomCurve3.call( this, points );
	    	this.type = 'catmullrom';
	    	this.closed = true;
	
	    }
	
	    ClosedSplineCurve3.prototype = Object.create( exports.CatmullRomCurve3.prototype );
	
	    /**************************************************************
	     *	Spline 3D curve
	     **************************************************************/
	
	
	    var SplineCurve3 = Curve.create(
	
	    	function ( points /* array of Vector3 */ ) {
	
	    		console.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );
	    		this.points = ( points === undefined ) ? [] : points;
	
	    	},
	
	    	function ( t ) {
	
	    		var points = this.points;
	    		var point = ( points.length - 1 ) * t;
	
	    		var intPoint = Math.floor( point );
	    		var weight = point - intPoint;
	
	    		var point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];
	    		var point1 = points[ intPoint ];
	    		var point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
	    		var point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];
	
	    		var interpolate = exports.CurveUtils.interpolate;
	
	    		return new Vector3(
	    			interpolate( point0.x, point1.x, point2.x, point3.x, weight ),
	    			interpolate( point0.y, point1.y, point2.y, point3.y, weight ),
	    			interpolate( point0.z, point1.z, point2.z, point3.z, weight )
	    		);
	
	    	}
	
	    );
	
	    /**************************************************************
	     *	Cubic Bezier 3D curve
	     **************************************************************/
	
	    exports.CubicBezierCurve3 = Curve.create(
	
	    	function ( v0, v1, v2, v3 ) {
	
	    		this.v0 = v0;
	    		this.v1 = v1;
	    		this.v2 = v2;
	    		this.v3 = v3;
	
	    	},
	
	    	function ( t ) {
	
	    		var b3 = exports.ShapeUtils.b3;
	
	    		return new Vector3(
	    			b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),
	    			b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),
	    			b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )
	    		);
	
	    	}
	
	    );
	
	    /**************************************************************
	     *	Quadratic Bezier 3D curve
	     **************************************************************/
	
	    exports.QuadraticBezierCurve3 = Curve.create(
	
	    	function ( v0, v1, v2 ) {
	
	    		this.v0 = v0;
	    		this.v1 = v1;
	    		this.v2 = v2;
	
	    	},
	
	    	function ( t ) {
	
	    		var b2 = exports.ShapeUtils.b2;		
	
	    		return new Vector3(
	    			b2( t, this.v0.x, this.v1.x, this.v2.x ),
	    			b2( t, this.v0.y, this.v1.y, this.v2.y ),
	    			b2( t, this.v0.z, this.v1.z, this.v2.z )
	    		);
	
	    	}
	
	    );
	
	    /**************************************************************
	     *	Line3D
	     **************************************************************/
	
	    exports.LineCurve3 = Curve.create(
	
	    	function ( v1, v2 ) {
	
	    		this.v1 = v1;
	    		this.v2 = v2;
	
	    	},
	
	    	function ( t ) {
	
	    		if ( t === 1 ) {
	
	    			return this.v2.clone();
	
	    		}
	
	    		var vector = new Vector3();
	
	    		vector.subVectors( this.v2, this.v1 ); // diff
	    		vector.multiplyScalar( t );
	    		vector.add( this.v1 );
	
	    		return vector;
	
	    	}
	
	    );
	
	    /**************************************************************
	     *	Arc curve
	     **************************************************************/
	
	    function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {
	
	    	EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );
	
	    }
	
	    ArcCurve.prototype = Object.create( EllipseCurve.prototype );
	    ArcCurve.prototype.constructor = ArcCurve;
	
	    /**
	     * @author alteredq / http://alteredqualia.com/
	     */
	
	    exports.SceneUtils = {
	
	    	createMultiMaterialObject: function ( geometry, materials ) {
	
	    		var group = new Group();
	
	    		for ( var i = 0, l = materials.length; i < l; i ++ ) {
	
	    			group.add( new Mesh( geometry, materials[ i ] ) );
	
	    		}
	
	    		return group;
	
	    	},
	
	    	detach: function ( child, parent, scene ) {
	
	    		child.applyMatrix( parent.matrixWorld );
	    		parent.remove( child );
	    		scene.add( child );
	
	    	},
	
	    	attach: function ( child, scene, parent ) {
	
	    		var matrixWorldInverse = new Matrix4();
	    		matrixWorldInverse.getInverse( parent.matrixWorld );
	    		child.applyMatrix( matrixWorldInverse );
	
	    		scene.remove( child );
	    		parent.add( child );
	
	    	}
	
	    };
	
	    function Face4 ( a, b, c, d, normal, color, materialIndex ) {
	    	console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );
	    	return new Face3( a, b, c, normal, color, materialIndex );
	    }
	
	    var LineStrip = 0;
	
	    var LinePieces = 1;
	
	    function PointCloud ( geometry, material ) {
	    	console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );
	    	return new Points( geometry, material );
	    }
	
	    function ParticleSystem ( geometry, material ) {
	    	console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );
	    	return new Points( geometry, material );
	    }
	
	    function PointCloudMaterial ( parameters ) {
	    	console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );
	    	return new PointsMaterial( parameters );
	    }
	
	    function ParticleBasicMaterial ( parameters ) {
	    	console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );
	    	return new PointsMaterial( parameters );
	    }
	
	    function ParticleSystemMaterial ( parameters ) {
	    	console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );
	    	return new PointsMaterial( parameters );
	    }
	
	    function Vertex ( x, y, z ) {
	    	console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );
	    	return new Vector3( x, y, z );
	    }
	
	    //
	
	    function EdgesHelper( object, hex ) {
	    	console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );
	    	return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );
	    }
	
	    function WireframeHelper( object, hex ) {
	    	console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );
	    	return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );
	    }
	
	    //
	
	    Object.assign( Box2.prototype, {
	    	center: function ( optionalTarget ) {
	    		console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );
	    		return this.getCenter( optionalTarget );
	    	},
	    	empty: function () {
	    		console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );
	    		return this.isEmpty();
	    	},
	    	isIntersectionBox: function ( box ) {
	    		console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );
	    		return this.intersectsBox( box );
	    	},
	    	size: function ( optionalTarget ) {
	    		console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );
	    		return this.getSize( optionalTarget );
	    	}
	    } );
	
	    Object.assign( Box3.prototype, {
	    	center: function ( optionalTarget ) {
	    		console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );
	    		return this.getCenter( optionalTarget );
	    	},
	    	empty: function () {
	    		console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );
	    		return this.isEmpty();
	    	},
	    	isIntersectionBox: function ( box ) {
	    		console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );
	    		return this.intersectsBox( box );
	    	},
	    	isIntersectionSphere: function ( sphere ) {
	    		console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	    		return this.intersectsSphere( sphere );
	    	},
	    	size: function ( optionalTarget ) {
	    		console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );
	    		return this.getSize( optionalTarget );
	    	}
	    } );
	
	    Object.assign( Line3.prototype, {
	    	center: function ( optionalTarget ) {
	    		console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );
	    		return this.getCenter( optionalTarget );
	    	}
	    } );
	
	    Object.assign( Matrix3.prototype, {
	    	multiplyVector3: function ( vector ) {
	    		console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
	    		return vector.applyMatrix3( this );
	    	},
	    	multiplyVector3Array: function ( a ) {
	    		console.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );
	    		return this.applyToVector3Array( a );
	    	}
	    } );
	
	    Object.assign( Matrix4.prototype, {
	    	extractPosition: function ( m ) {
	    		console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );
	    		return this.copyPosition( m );
	    	},
	    	setRotationFromQuaternion: function ( q ) {
	    		console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );
	    		return this.makeRotationFromQuaternion( q );
	    	},
	    	multiplyVector3: function ( vector ) {
	    		console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );
	    		return vector.applyProjection( this );
	    	},
	    	multiplyVector4: function ( vector ) {
	    		console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	    		return vector.applyMatrix4( this );
	    	},
	    	multiplyVector3Array: function ( a ) {
	    		console.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );
	    		return this.applyToVector3Array( a );
	    	},
	    	rotateAxis: function ( v ) {
	    		console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );
	    		v.transformDirection( this );
	    	},
	    	crossVector: function ( vector ) {
	    		console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	    		return vector.applyMatrix4( this );
	    	},
	    	translate: function ( v ) {
	    		console.error( 'THREE.Matrix4: .translate() has been removed.' );
	    	},
	    	rotateX: function ( angle ) {
	    		console.error( 'THREE.Matrix4: .rotateX() has been removed.' );
	    	},
	    	rotateY: function ( angle ) {
	    		console.error( 'THREE.Matrix4: .rotateY() has been removed.' );
	    	},
	    	rotateZ: function ( angle ) {
	    		console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );
	    	},
	    	rotateByAxis: function ( axis, angle ) {
	    		console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );
	    	}
	    } );
	
	    Object.assign( Plane.prototype, {
	    	isIntersectionLine: function ( line ) {
	    		console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );
	    		return this.intersectsLine( line );
	    	}
	    } );
	
	    Object.assign( Quaternion.prototype, {
	    	multiplyVector3: function ( vector ) {
	    		console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
	    		return vector.applyQuaternion( this );
	    	}
	    } );
	
	    Object.assign( Ray.prototype, {
	    	isIntersectionBox: function ( box ) {
	    		console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );
	    		return this.intersectsBox( box );
	    	},
	    	isIntersectionPlane: function ( plane ) {
	    		console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );
	    		return this.intersectsPlane( plane );
	    	},
	    	isIntersectionSphere: function ( sphere ) {
	    		console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	    		return this.intersectsSphere( sphere );
	    	}
	    } );
	
	    Object.assign( Shape.prototype, {
	    	extrude: function ( options ) {
	    		console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );
	    		return new ExtrudeGeometry( this, options );
	    	},
	    	makeGeometry: function ( options ) {
	    		console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );
	    		return new ShapeGeometry( this, options );
	    	}
	    } );
	
	    Object.assign( Vector3.prototype, {
	    	setEulerFromRotationMatrix: function () {
	    		console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );
	    	},
	    	setEulerFromQuaternion: function () {
	    		console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );
	    	},
	    	getPositionFromMatrix: function ( m ) {
	    		console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );
	    		return this.setFromMatrixPosition( m );
	    	},
	    	getScaleFromMatrix: function ( m ) {
	    		console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );
	    		return this.setFromMatrixScale( m );
	    	},
	    	getColumnFromMatrix: function ( index, matrix ) {
	    		console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );
	    		return this.setFromMatrixColumn( matrix, index );
	    	}
	    } );
	
	    //
	
	    Object.assign( Object3D.prototype, {
	    	getChildByName: function ( name ) {
	    		console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );
	    		return this.getObjectByName( name );
	    	},
	    	renderDepth: function ( value ) {
	    		console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );
	    	},
	    	translate: function ( distance, axis ) {
	    		console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );
	    		return this.translateOnAxis( axis, distance );
	    	}
	    } );
	
	    Object.defineProperties( Object3D.prototype, {
	    	eulerOrder: {
	    		get: function () {
	    			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
	    			return this.rotation.order;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
	    			this.rotation.order = value;
	    		}
	    	},
	    	useQuaternion: {
	    		get: function () {
	    			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );
	    		}
	    	}
	    } );
	
	    Object.defineProperties( LOD.prototype, {
	    	objects: {
	    		get: function () {
	    			console.warn( 'THREE.LOD: .objects has been renamed to .levels.' );
	    			return this.levels;
	    		}
	    	}
	    } );
	
	    //
	
	    PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {
	
	    	console.warn( "THREE.PerspectiveCamera.setLens is deprecated. " +
	    			"Use .setFocalLength and .filmGauge for a photographic setup." );
	
	    	if ( filmGauge !== undefined ) this.filmGauge = filmGauge;
	    	this.setFocalLength( focalLength );
	
	    };
	
	    //
	
	    Object.defineProperties( Light.prototype, {
	    	onlyShadow: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .onlyShadow has been removed.' );
	    		}
	    	},
	    	shadowCameraFov: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );
	    			this.shadow.camera.fov = value;
	    		}
	    	},
	    	shadowCameraLeft: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );
	    			this.shadow.camera.left = value;
	    		}
	    	},
	    	shadowCameraRight: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );
	    			this.shadow.camera.right = value;
	    		}
	    	},
	    	shadowCameraTop: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );
	    			this.shadow.camera.top = value;
	    		}
	    	},
	    	shadowCameraBottom: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );
	    			this.shadow.camera.bottom = value;
	    		}
	    	},
	    	shadowCameraNear: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );
	    			this.shadow.camera.near = value;
	    		}
	    	},
	    	shadowCameraFar: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );
	    			this.shadow.camera.far = value;
	    		}
	    	},
	    	shadowCameraVisible: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );
	    		}
	    	},
	    	shadowBias: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );
	    			this.shadow.bias = value;
	    		}
	    	},
	    	shadowDarkness: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowDarkness has been removed.' );
	    		}
	    	},
	    	shadowMapWidth: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );
	    			this.shadow.mapSize.width = value;
	    		}
	    	},
	    	shadowMapHeight: {
	    		set: function ( value ) {
	    			console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );
	    			this.shadow.mapSize.height = value;
	    		}
	    	}
	    } );
	
	    //
	
	    Object.defineProperties( BufferAttribute.prototype, {
	    	length: {
	    		get: function () {
	    			console.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );
	    			return this.array.length;
	    		}
	    	}
	    } );
	
	    Object.assign( BufferGeometry.prototype, {
	    	addIndex: function ( index ) {
	    		console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );
	    		this.setIndex( index );
	    	},
	    	addDrawCall: function ( start, count, indexOffset ) {
	    		if ( indexOffset !== undefined ) {
	    			console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );
	    		}
	    		console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );
	    		this.addGroup( start, count );
	    	},
	    	clearDrawCalls: function () {
	    		console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );
	    		this.clearGroups();
	    	},
	    	computeTangents: function () {
	    		console.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );
	    	},
	    	computeOffsets: function () {
	    		console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );
	    	}
	    } );
	
	    Object.defineProperties( BufferGeometry.prototype, {
	    	drawcalls: {
	    		get: function () {
	    			console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );
	    			return this.groups;
	    		}
	    	},
	    	offsets: {
	    		get: function () {
	    			console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );
	    			return this.groups;
	    		}
	    	}
	    } );
	
	    //
	
	    Object.defineProperties( Material.prototype, {
	    	wrapAround: {
	    		get: function () {
	    			console.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );
	    		}
	    	},
	    	wrapRGB: {
	    		get: function () {
	    			console.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );
	    			return new Color();
	    		}
	    	}
	    } );
	
	    Object.defineProperties( MeshPhongMaterial.prototype, {
	    	metal: {
	    		get: function () {
	    			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );
	    			return false;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );
	    		}
	    	}
	    } );
	
	    Object.defineProperties( ShaderMaterial.prototype, {
	    	derivatives: {
	    		get: function () {
	    			console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
	    			return this.extensions.derivatives;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
	    			this.extensions.derivatives = value;
	    		}
	    	}
	    } );
	
	    //
	
	    EventDispatcher.prototype = Object.assign( Object.create( {
	
	    	// Note: Extra base ensures these properties are not 'assign'ed.
	
	    	constructor: EventDispatcher,
	
	    	apply: function ( target ) {
	
	    		console.warn( "THREE.EventDispatcher: .apply is deprecated, " +
	    				"just inherit or Object.assign the prototype to mix-in." );
	
	    		Object.assign( target, this );
	
	    	}
	
	    } ), EventDispatcher.prototype );
	
	    //
	
	    Object.assign( WebGLRenderer.prototype, {
	    	supportsFloatTextures: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' );
	    		return this.extensions.get( 'OES_texture_float' );
	    	},
	    	supportsHalfFloatTextures: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' );
	    		return this.extensions.get( 'OES_texture_half_float' );
	    	},
	    	supportsStandardDerivatives: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' );
	    		return this.extensions.get( 'OES_standard_derivatives' );
	    	},
	    	supportsCompressedTextureS3TC: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' );
	    		return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );
	    	},
	    	supportsCompressedTexturePVRTC: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' );
	    		return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );
	    	},
	    	supportsBlendMinMax: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' );
	    		return this.extensions.get( 'EXT_blend_minmax' );
	    	},
	    	supportsVertexTextures: function () {
	    		return this.capabilities.vertexTextures;
	    	},
	    	supportsInstancedArrays: function () {
	    		console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' );
	    		return this.extensions.get( 'ANGLE_instanced_arrays' );
	    	},
	    	enableScissorTest: function ( boolean ) {
	    		console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );
	    		this.setScissorTest( boolean );
	    	},
	    	initMaterial: function () {
	    		console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );
	    	},
	    	addPrePlugin: function () {
	    		console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );
	    	},
	    	addPostPlugin: function () {
	    		console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );
	    	},
	    	updateShadowMap: function () {
	    		console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );
	    	}
	    } );
	
	    Object.defineProperties( WebGLRenderer.prototype, {
	    	shadowMapEnabled: {
	    		get: function () {
	    			return this.shadowMap.enabled;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );
	    			this.shadowMap.enabled = value;
	    		}
	    	},
	    	shadowMapType: {
	    		get: function () {
	    			return this.shadowMap.type;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );
	    			this.shadowMap.type = value;
	    		}
	    	},
	    	shadowMapCullFace: {
	    		get: function () {
	    			return this.shadowMap.cullFace;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );
	    			this.shadowMap.cullFace = value;
	    		}
	    	}
	    } );
	
	    Object.defineProperties( WebGLShadowMap.prototype, {
	    	cullFace: {
	    		get: function () {
	    			return this.renderReverseSided ? CullFaceFront : CullFaceBack;
	    		},
	    		set: function ( cullFace ) {
	    			var value = ( cullFace !== CullFaceBack );
	    			console.warn( "WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + value + "." );
	    			this.renderReverseSided = value;
	    		}
	    	}
	    } );
	
	    //
	
	    Object.defineProperties( WebGLRenderTarget.prototype, {
	    	wrapS: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
	    			return this.texture.wrapS;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
	    			this.texture.wrapS = value;
	    		}
	    	},
	    	wrapT: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
	    			return this.texture.wrapT;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
	    			this.texture.wrapT = value;
	    		}
	    	},
	    	magFilter: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
	    			return this.texture.magFilter;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
	    			this.texture.magFilter = value;
	    		}
	    	},
	    	minFilter: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
	    			return this.texture.minFilter;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
	    			this.texture.minFilter = value;
	    		}
	    	},
	    	anisotropy: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
	    			return this.texture.anisotropy;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
	    			this.texture.anisotropy = value;
	    		}
	    	},
	    	offset: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
	    			return this.texture.offset;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
	    			this.texture.offset = value;
	    		}
	    	},
	    	repeat: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
	    			return this.texture.repeat;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
	    			this.texture.repeat = value;
	    		}
	    	},
	    	format: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
	    			return this.texture.format;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
	    			this.texture.format = value;
	    		}
	    	},
	    	type: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
	    			return this.texture.type;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
	    			this.texture.type = value;
	    		}
	    	},
	    	generateMipmaps: {
	    		get: function () {
	    			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
	    			return this.texture.generateMipmaps;
	    		},
	    		set: function ( value ) {
	    			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
	    			this.texture.generateMipmaps = value;
	    		}
	    	}
	    } );
	
	    //
	
	    Object.assign( Audio.prototype, {
	    	load: function ( file ) {
	    		console.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );
	    		var scope = this;
	    		var audioLoader = new AudioLoader();
	    		audioLoader.load( file, function ( buffer ) {
	    			scope.setBuffer( buffer );
	    		} );
	    		return this;
	    	}
	    } );
	
	    Object.assign( AudioAnalyser.prototype, {
	    	getData: function ( file ) {
	    		console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );
	    		return this.getFrequencyData();
	    	}
	    } );
	
	    //
	
	    var GeometryUtils = {
	
	    	merge: function ( geometry1, geometry2, materialIndexOffset ) {
	
	    		console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );
	
	    		var matrix;
	
	    		if ( geometry2.isMesh ) {
	
	    			geometry2.matrixAutoUpdate && geometry2.updateMatrix();
	
	    			matrix = geometry2.matrix;
	    			geometry2 = geometry2.geometry;
	
	    		}
	
	    		geometry1.merge( geometry2, matrix, materialIndexOffset );
	
	    	},
	
	    	center: function ( geometry ) {
	
	    		console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );
	    		return geometry.center();
	
	    	}
	
	    };
	
	    var ImageUtils = {
	
	    	crossOrigin: undefined,
	
	    	loadTexture: function ( url, mapping, onLoad, onError ) {
	
	    		console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );
	
	    		var loader = new TextureLoader();
	    		loader.setCrossOrigin( this.crossOrigin );
	
	    		var texture = loader.load( url, onLoad, undefined, onError );
	
	    		if ( mapping ) texture.mapping = mapping;
	
	    		return texture;
	
	    	},
	
	    	loadTextureCube: function ( urls, mapping, onLoad, onError ) {
	
	    		console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );
	
	    		var loader = new CubeTextureLoader();
	    		loader.setCrossOrigin( this.crossOrigin );
	
	    		var texture = loader.load( urls, onLoad, undefined, onError );
	
	    		if ( mapping ) texture.mapping = mapping;
	
	    		return texture;
	
	    	},
	
	    	loadCompressedTexture: function () {
	
	    		console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );
	
	    	},
	
	    	loadCompressedTextureCube: function () {
	
	    		console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );
	
	    	}
	
	    };
	
	    //
	
	    function Projector () {
	
	    	console.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );
	
	    	this.projectVector = function ( vector, camera ) {
	
	    		console.warn( 'THREE.Projector: .projectVector() is now vector.project().' );
	    		vector.project( camera );
	
	    	};
	
	    	this.unprojectVector = function ( vector, camera ) {
	
	    		console.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );
	    		vector.unproject( camera );
	
	    	};
	
	    	this.pickingRay = function ( vector, camera ) {
	
	    		console.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );
	
	    	};
	
	    }
	
	    //
	
	    function CanvasRenderer () {
	
	    	console.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );
	
	    	this.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	    	this.clear = function () {};
	    	this.render = function () {};
	    	this.setClearColor = function () {};
	    	this.setSize = function () {};
	
	    }
	
	    Object.defineProperty( exports, 'AudioContext', {
	    	get: function () {
	    		return exports.getAudioContext();
	    	}
	    });
	
	    exports.WebGLRenderTargetCube = WebGLRenderTargetCube;
	    exports.WebGLRenderTarget = WebGLRenderTarget;
	    exports.WebGLRenderer = WebGLRenderer;
	    exports.ShaderLib = ShaderLib;
	    exports.UniformsLib = UniformsLib;
	    exports.ShaderChunk = ShaderChunk;
	    exports.FogExp2 = FogExp2;
	    exports.Fog = Fog;
	    exports.Scene = Scene;
	    exports.LensFlare = LensFlare;
	    exports.Sprite = Sprite;
	    exports.LOD = LOD;
	    exports.SkinnedMesh = SkinnedMesh;
	    exports.Skeleton = Skeleton;
	    exports.Bone = Bone;
	    exports.Mesh = Mesh;
	    exports.LineSegments = LineSegments;
	    exports.Line = Line;
	    exports.Points = Points;
	    exports.Group = Group;
	    exports.VideoTexture = VideoTexture;
	    exports.DataTexture = DataTexture;
	    exports.CompressedTexture = CompressedTexture;
	    exports.CubeTexture = CubeTexture;
	    exports.CanvasTexture = CanvasTexture;
	    exports.DepthTexture = DepthTexture;
	    exports.TextureIdCount = TextureIdCount;
	    exports.Texture = Texture;
	    exports.MaterialIdCount = MaterialIdCount;
	    exports.CompressedTextureLoader = CompressedTextureLoader;
	    exports.BinaryTextureLoader = BinaryTextureLoader;
	    exports.DataTextureLoader = DataTextureLoader;
	    exports.CubeTextureLoader = CubeTextureLoader;
	    exports.TextureLoader = TextureLoader;
	    exports.ObjectLoader = ObjectLoader;
	    exports.MaterialLoader = MaterialLoader;
	    exports.BufferGeometryLoader = BufferGeometryLoader;
	    exports.LoadingManager = LoadingManager;
	    exports.JSONLoader = JSONLoader;
	    exports.ImageLoader = ImageLoader;
	    exports.FontLoader = FontLoader;
	    exports.XHRLoader = XHRLoader;
	    exports.Loader = Loader;
	    exports.AudioLoader = AudioLoader;
	    exports.SpotLightShadow = SpotLightShadow;
	    exports.SpotLight = SpotLight;
	    exports.PointLight = PointLight;
	    exports.HemisphereLight = HemisphereLight;
	    exports.DirectionalLightShadow = DirectionalLightShadow;
	    exports.DirectionalLight = DirectionalLight;
	    exports.AmbientLight = AmbientLight;
	    exports.LightShadow = LightShadow;
	    exports.Light = Light;
	    exports.StereoCamera = StereoCamera;
	    exports.PerspectiveCamera = PerspectiveCamera;
	    exports.OrthographicCamera = OrthographicCamera;
	    exports.CubeCamera = CubeCamera;
	    exports.Camera = Camera;
	    exports.AudioListener = AudioListener;
	    exports.PositionalAudio = PositionalAudio;
	    exports.getAudioContext = getAudioContext;
	    exports.AudioAnalyser = AudioAnalyser;
	    exports.Audio = Audio;
	    exports.VectorKeyframeTrack = VectorKeyframeTrack;
	    exports.StringKeyframeTrack = StringKeyframeTrack;
	    exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;
	    exports.NumberKeyframeTrack = NumberKeyframeTrack;
	    exports.ColorKeyframeTrack = ColorKeyframeTrack;
	    exports.BooleanKeyframeTrack = BooleanKeyframeTrack;
	    exports.PropertyMixer = PropertyMixer;
	    exports.PropertyBinding = PropertyBinding;
	    exports.KeyframeTrack = KeyframeTrack;
	    exports.AnimationObjectGroup = AnimationObjectGroup;
	    exports.AnimationMixer = AnimationMixer;
	    exports.AnimationClip = AnimationClip;
	    exports.Uniform = Uniform;
	    exports.InstancedBufferGeometry = InstancedBufferGeometry;
	    exports.BufferGeometry = BufferGeometry;
	    exports.GeometryIdCount = GeometryIdCount;
	    exports.Geometry = Geometry;
	    exports.InterleavedBufferAttribute = InterleavedBufferAttribute;
	    exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;
	    exports.InterleavedBuffer = InterleavedBuffer;
	    exports.InstancedBufferAttribute = InstancedBufferAttribute;
	    exports.DynamicBufferAttribute = DynamicBufferAttribute;
	    exports.Float64Attribute = Float64Attribute;
	    exports.Float32Attribute = Float32Attribute;
	    exports.Uint32Attribute = Uint32Attribute;
	    exports.Int32Attribute = Int32Attribute;
	    exports.Uint16Attribute = Uint16Attribute;
	    exports.Int16Attribute = Int16Attribute;
	    exports.Uint8ClampedAttribute = Uint8ClampedAttribute;
	    exports.Uint8Attribute = Uint8Attribute;
	    exports.Int8Attribute = Int8Attribute;
	    exports.BufferAttribute = BufferAttribute;
	    exports.Face3 = Face3;
	    exports.Object3DIdCount = Object3DIdCount;
	    exports.Object3D = Object3D;
	    exports.Raycaster = Raycaster;
	    exports.Layers = Layers;
	    exports.EventDispatcher = EventDispatcher;
	    exports.Clock = Clock;
	    exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;
	    exports.LinearInterpolant = LinearInterpolant;
	    exports.DiscreteInterpolant = DiscreteInterpolant;
	    exports.CubicInterpolant = CubicInterpolant;
	    exports.Interpolant = Interpolant;
	    exports.Triangle = Triangle;
	    exports.Spline = Spline;
	    exports.Spherical = Spherical;
	    exports.Plane = Plane;
	    exports.Frustum = Frustum;
	    exports.Sphere = Sphere;
	    exports.Ray = Ray;
	    exports.Matrix4 = Matrix4;
	    exports.Matrix3 = Matrix3;
	    exports.Box3 = Box3;
	    exports.Box2 = Box2;
	    exports.Line3 = Line3;
	    exports.Euler = Euler;
	    exports.Vector4 = Vector4;
	    exports.Vector3 = Vector3;
	    exports.Vector2 = Vector2;
	    exports.Quaternion = Quaternion;
	    exports.Color = Color;
	    exports.MorphBlendMesh = MorphBlendMesh;
	    exports.ImmediateRenderObject = ImmediateRenderObject;
	    exports.VertexNormalsHelper = VertexNormalsHelper;
	    exports.SpotLightHelper = SpotLightHelper;
	    exports.SkeletonHelper = SkeletonHelper;
	    exports.PointLightHelper = PointLightHelper;
	    exports.HemisphereLightHelper = HemisphereLightHelper;
	    exports.GridHelper = GridHelper;
	    exports.FaceNormalsHelper = FaceNormalsHelper;
	    exports.DirectionalLightHelper = DirectionalLightHelper;
	    exports.CameraHelper = CameraHelper;
	    exports.BoundingBoxHelper = BoundingBoxHelper;
	    exports.BoxHelper = BoxHelper;
	    exports.ArrowHelper = ArrowHelper;
	    exports.AxisHelper = AxisHelper;
	    exports.ClosedSplineCurve3 = ClosedSplineCurve3;
	    exports.SplineCurve3 = SplineCurve3;
	    exports.ArcCurve = ArcCurve;
	    exports.EllipseCurve = EllipseCurve;
	    exports.SplineCurve = SplineCurve;
	    exports.CubicBezierCurve = CubicBezierCurve;
	    exports.QuadraticBezierCurve = QuadraticBezierCurve;
	    exports.LineCurve = LineCurve;
	    exports.Shape = Shape;
	    exports.ShapePath = ShapePath;
	    exports.Path = Path;
	    exports.Font = Font;
	    exports.CurvePath = CurvePath;
	    exports.Curve = Curve;
	    exports.WireframeGeometry = WireframeGeometry;
	    exports.ParametricGeometry = ParametricGeometry;
	    exports.TetrahedronGeometry = TetrahedronGeometry;
	    exports.OctahedronGeometry = OctahedronGeometry;
	    exports.IcosahedronGeometry = IcosahedronGeometry;
	    exports.DodecahedronGeometry = DodecahedronGeometry;
	    exports.PolyhedronGeometry = PolyhedronGeometry;
	    exports.TubeGeometry = TubeGeometry;
	    exports.TorusKnotGeometry = TorusKnotGeometry;
	    exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;
	    exports.TorusGeometry = TorusGeometry;
	    exports.TorusBufferGeometry = TorusBufferGeometry;
	    exports.TextGeometry = TextGeometry;
	    exports.SphereBufferGeometry = SphereBufferGeometry;
	    exports.SphereGeometry = SphereGeometry;
	    exports.RingGeometry = RingGeometry;
	    exports.RingBufferGeometry = RingBufferGeometry;
	    exports.PlaneBufferGeometry = PlaneBufferGeometry;
	    exports.PlaneGeometry = PlaneGeometry;
	    exports.LatheGeometry = LatheGeometry;
	    exports.LatheBufferGeometry = LatheBufferGeometry;
	    exports.ShapeGeometry = ShapeGeometry;
	    exports.ExtrudeGeometry = ExtrudeGeometry;
	    exports.EdgesGeometry = EdgesGeometry;
	    exports.ConeGeometry = ConeGeometry;
	    exports.ConeBufferGeometry = ConeBufferGeometry;
	    exports.CylinderGeometry = CylinderGeometry;
	    exports.CylinderBufferGeometry = CylinderBufferGeometry;
	    exports.CircleBufferGeometry = CircleBufferGeometry;
	    exports.CircleGeometry = CircleGeometry;
	    exports.BoxBufferGeometry = BoxBufferGeometry;
	    exports.BoxGeometry = BoxGeometry;
	    exports.ShadowMaterial = ShadowMaterial;
	    exports.SpriteMaterial = SpriteMaterial;
	    exports.RawShaderMaterial = RawShaderMaterial;
	    exports.ShaderMaterial = ShaderMaterial;
	    exports.PointsMaterial = PointsMaterial;
	    exports.MultiMaterial = MultiMaterial;
	    exports.MeshPhysicalMaterial = MeshPhysicalMaterial;
	    exports.MeshStandardMaterial = MeshStandardMaterial;
	    exports.MeshPhongMaterial = MeshPhongMaterial;
	    exports.MeshNormalMaterial = MeshNormalMaterial;
	    exports.MeshLambertMaterial = MeshLambertMaterial;
	    exports.MeshDepthMaterial = MeshDepthMaterial;
	    exports.MeshBasicMaterial = MeshBasicMaterial;
	    exports.LineDashedMaterial = LineDashedMaterial;
	    exports.LineBasicMaterial = LineBasicMaterial;
	    exports.Material = Material;
	    exports.REVISION = REVISION;
	    exports.MOUSE = MOUSE;
	    exports.CullFaceNone = CullFaceNone;
	    exports.CullFaceBack = CullFaceBack;
	    exports.CullFaceFront = CullFaceFront;
	    exports.CullFaceFrontBack = CullFaceFrontBack;
	    exports.FrontFaceDirectionCW = FrontFaceDirectionCW;
	    exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;
	    exports.BasicShadowMap = BasicShadowMap;
	    exports.PCFShadowMap = PCFShadowMap;
	    exports.PCFSoftShadowMap = PCFSoftShadowMap;
	    exports.FrontSide = FrontSide;
	    exports.BackSide = BackSide;
	    exports.DoubleSide = DoubleSide;
	    exports.FlatShading = FlatShading;
	    exports.SmoothShading = SmoothShading;
	    exports.NoColors = NoColors;
	    exports.FaceColors = FaceColors;
	    exports.VertexColors = VertexColors;
	    exports.NoBlending = NoBlending;
	    exports.NormalBlending = NormalBlending;
	    exports.AdditiveBlending = AdditiveBlending;
	    exports.SubtractiveBlending = SubtractiveBlending;
	    exports.MultiplyBlending = MultiplyBlending;
	    exports.CustomBlending = CustomBlending;
	    exports.BlendingMode = BlendingMode;
	    exports.AddEquation = AddEquation;
	    exports.SubtractEquation = SubtractEquation;
	    exports.ReverseSubtractEquation = ReverseSubtractEquation;
	    exports.MinEquation = MinEquation;
	    exports.MaxEquation = MaxEquation;
	    exports.ZeroFactor = ZeroFactor;
	    exports.OneFactor = OneFactor;
	    exports.SrcColorFactor = SrcColorFactor;
	    exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;
	    exports.SrcAlphaFactor = SrcAlphaFactor;
	    exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;
	    exports.DstAlphaFactor = DstAlphaFactor;
	    exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;
	    exports.DstColorFactor = DstColorFactor;
	    exports.OneMinusDstColorFactor = OneMinusDstColorFactor;
	    exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;
	    exports.NeverDepth = NeverDepth;
	    exports.AlwaysDepth = AlwaysDepth;
	    exports.LessDepth = LessDepth;
	    exports.LessEqualDepth = LessEqualDepth;
	    exports.EqualDepth = EqualDepth;
	    exports.GreaterEqualDepth = GreaterEqualDepth;
	    exports.GreaterDepth = GreaterDepth;
	    exports.NotEqualDepth = NotEqualDepth;
	    exports.MultiplyOperation = MultiplyOperation;
	    exports.MixOperation = MixOperation;
	    exports.AddOperation = AddOperation;
	    exports.NoToneMapping = NoToneMapping;
	    exports.LinearToneMapping = LinearToneMapping;
	    exports.ReinhardToneMapping = ReinhardToneMapping;
	    exports.Uncharted2ToneMapping = Uncharted2ToneMapping;
	    exports.CineonToneMapping = CineonToneMapping;
	    exports.UVMapping = UVMapping;
	    exports.CubeReflectionMapping = CubeReflectionMapping;
	    exports.CubeRefractionMapping = CubeRefractionMapping;
	    exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;
	    exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;
	    exports.SphericalReflectionMapping = SphericalReflectionMapping;
	    exports.CubeUVReflectionMapping = CubeUVReflectionMapping;
	    exports.CubeUVRefractionMapping = CubeUVRefractionMapping;
	    exports.TextureMapping = TextureMapping;
	    exports.RepeatWrapping = RepeatWrapping;
	    exports.ClampToEdgeWrapping = ClampToEdgeWrapping;
	    exports.MirroredRepeatWrapping = MirroredRepeatWrapping;
	    exports.TextureWrapping = TextureWrapping;
	    exports.NearestFilter = NearestFilter;
	    exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;
	    exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;
	    exports.LinearFilter = LinearFilter;
	    exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;
	    exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;
	    exports.TextureFilter = TextureFilter;
	    exports.UnsignedByteType = UnsignedByteType;
	    exports.ByteType = ByteType;
	    exports.ShortType = ShortType;
	    exports.UnsignedShortType = UnsignedShortType;
	    exports.IntType = IntType;
	    exports.UnsignedIntType = UnsignedIntType;
	    exports.FloatType = FloatType;
	    exports.HalfFloatType = HalfFloatType;
	    exports.UnsignedShort4444Type = UnsignedShort4444Type;
	    exports.UnsignedShort5551Type = UnsignedShort5551Type;
	    exports.UnsignedShort565Type = UnsignedShort565Type;
	    exports.UnsignedInt248Type = UnsignedInt248Type;
	    exports.AlphaFormat = AlphaFormat;
	    exports.RGBFormat = RGBFormat;
	    exports.RGBAFormat = RGBAFormat;
	    exports.LuminanceFormat = LuminanceFormat;
	    exports.LuminanceAlphaFormat = LuminanceAlphaFormat;
	    exports.RGBEFormat = RGBEFormat;
	    exports.DepthFormat = DepthFormat;
	    exports.DepthStencilFormat = DepthStencilFormat;
	    exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;
	    exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;
	    exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;
	    exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;
	    exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;
	    exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;
	    exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;
	    exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;
	    exports.RGB_ETC1_Format = RGB_ETC1_Format;
	    exports.LoopOnce = LoopOnce;
	    exports.LoopRepeat = LoopRepeat;
	    exports.LoopPingPong = LoopPingPong;
	    exports.InterpolateDiscrete = InterpolateDiscrete;
	    exports.InterpolateLinear = InterpolateLinear;
	    exports.InterpolateSmooth = InterpolateSmooth;
	    exports.ZeroCurvatureEnding = ZeroCurvatureEnding;
	    exports.ZeroSlopeEnding = ZeroSlopeEnding;
	    exports.WrapAroundEnding = WrapAroundEnding;
	    exports.TrianglesDrawMode = TrianglesDrawMode;
	    exports.TriangleStripDrawMode = TriangleStripDrawMode;
	    exports.TriangleFanDrawMode = TriangleFanDrawMode;
	    exports.LinearEncoding = LinearEncoding;
	    exports.sRGBEncoding = sRGBEncoding;
	    exports.GammaEncoding = GammaEncoding;
	    exports.RGBEEncoding = RGBEEncoding;
	    exports.LogLuvEncoding = LogLuvEncoding;
	    exports.RGBM7Encoding = RGBM7Encoding;
	    exports.RGBM16Encoding = RGBM16Encoding;
	    exports.RGBDEncoding = RGBDEncoding;
	    exports.BasicDepthPacking = BasicDepthPacking;
	    exports.RGBADepthPacking = RGBADepthPacking;
	    exports.CubeGeometry = BoxGeometry;
	    exports.Face4 = Face4;
	    exports.LineStrip = LineStrip;
	    exports.LinePieces = LinePieces;
	    exports.MeshFaceMaterial = MultiMaterial;
	    exports.PointCloud = PointCloud;
	    exports.Particle = Sprite;
	    exports.ParticleSystem = ParticleSystem;
	    exports.PointCloudMaterial = PointCloudMaterial;
	    exports.ParticleBasicMaterial = ParticleBasicMaterial;
	    exports.ParticleSystemMaterial = ParticleSystemMaterial;
	    exports.Vertex = Vertex;
	    exports.EdgesHelper = EdgesHelper;
	    exports.WireframeHelper = WireframeHelper;
	    exports.GeometryUtils = GeometryUtils;
	    exports.ImageUtils = ImageUtils;
	    exports.Projector = Projector;
	    exports.CanvasRenderer = CanvasRenderer;
	
	    Object.defineProperty(exports, '__esModule', { value: true });
	
	})));

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Camera = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _dec, _desc, _value, _class, _class2, _temp;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	var _Loop = __webpack_require__(399);
	
	var _CoreObject2 = __webpack_require__(400);
	
	var _decorators = __webpack_require__(394);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var _set = function _set(x, y, z) {
	  undefined.x = x;
	  undefined.y = y;
	  undefined.z = z;
	};
	
	var Camera = (_dec = (0, _decorators.deprecate)('0.0.11'), (_class = (_temp = _class2 = function (_CoreObject) {
	  (0, _inherits3.default)(Camera, _CoreObject);
	
	  function Camera(params) {
	    var type = arguments.length <= 1 || arguments[1] === undefined ? 'camera' : arguments[1];
	    var localWindow = arguments.length <= 2 || arguments[2] === undefined ? window : arguments[2];
	    (0, _classCallCheck3.default)(this, Camera);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Camera.__proto__ || Object.getPrototypeOf(Camera)).call(this));
	
	    _this.helper = null;
	
	
	    Camera.defaults.camera = {
	      fov: 45,
	      aspect: localWindow.innerWidth / localWindow.innerHeight,
	      near: 1,
	      far: 1000,
	      left: localWindow.innerWidth / -2,
	      right: localWindow.innerWidth / 2,
	      top: localWindow.innerHeight / 2,
	      bottom: localWindow.innerHeight / -2,
	      cubeResolution: 128
	    };
	
	    params.useTarget = Boolean(params.target);
	
	    if (params instanceof THREE.Camera) {
	      _this.params = (0, _index.extend)({
	        pos: { x: params.position.x, y: params.position.y, z: params.position.z },
	        rot: { x: params.rotation.x, y: params.rotation.y, z: params.rotation.z }
	      }, Camera.defaults);
	    } else _this.params = (0, _index.extend)(params, Camera.defaults);
	
	    if (params instanceof THREE.Camera) _this.native = params;
	    _this.type = type;
	    return _this;
	  }
	
	  (0, _createClass3.default)(Camera, [{
	    key: 'wrap',
	    value: function wrap() {
	      var _this2 = this;
	
	      for (var _len = arguments.length, tags = Array(_len), _key = 0; _key < _len; _key++) {
	        tags[_key] = arguments[_key];
	      }
	
	      return new Promise(function (resolve, reject) {
	        var _native = _this2.native,
	            _params = _this2.params;
	
	        _this2.position.set(_params.pos.x, _params.pos.y, _params.pos.z);
	
	        _this2.rotation.set(_params.rot.x, _params.rot.y, _params.rot.z);
	
	        if (_params.useTarget) _this2.lookAt(_params.target);
	        if (_params.helper) _this2.helper = new THREE.CameraHelper(_native);
	
	        tags.forEach(function (tag) {
	          _this2[tag] = true;
	        });
	
	        _this2.emit('ready');
	
	        resolve(_this2);
	      });
	    }
	  }, {
	    key: 'addTo',
	    value: function addTo(parent) {
	      var _this3 = this;
	
	      this.parent = parent;
	
	      var _helper = this.helper,
	          _scene = this.parent.scene;
	
	      return new Promise(function (resolve, reject) {
	        _scene.add(_this3.native);
	        _this3.parent.children.push(_this3);
	
	        if (_helper) _scene.add(_helper);
	
	        resolve(_this3);
	      });
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Camera(this.params, this.type).copy(this);
	    }
	  }, {
	    key: 'copy',
	    value: function copy(source) {
	      if (source.native) {
	        this.native = source.native.clone();
	        this.params = Object.create(source.params);
	
	        this.wrap();'';
	
	        this.position = source.position.clone();
	        this.rotation = source.rotation.clone();
	      } else this.params = source.params;
	
	      this.type = source.type;
	
	      return this;
	    }
	  }, {
	    key: 'follow',
	    value: function follow(curve) {
	      var time = arguments.length <= 1 || arguments[1] === undefined ? 1000 : arguments[1];
	      var loop = arguments[2];
	      var lookAt = arguments[3];
	
	      var _scope = this,
	          gEnd = time;
	
	      var animation = new _Loop.Loop(function (clock) {
	        var u = clock.getElapsedTime() * 1000 / gEnd,
	            vec1 = curve.getPoint(u),
	            vec2 = curve.getPoint((u + 0.01) % 1);
	
	        _scope.position.set(vec1.x, vec1.y, vec1.z);
	
	        if (!lookAt) _scope.lookAt(vec2);else if (lookAt instanceof TVector3) _scope.lookAt(lookAt);else if (lookAt instanceof TCurve || lookAt instanceof TCurvePath) _scope.lookAt(lookAt.getPoint(u));
	      });
	
	      animation.start();
	
	      if (loop) {
	        setInterval(function () {
	          animation.stop();
	
	          animation = new _Loop.Loop(function (clock) {
	            var u = clock.getElapsedTime() * 1000 / gEnd,
	                vec1 = curve.getPoint(u),
	                vec2 = curve.getPoint((u + 0.01) % 1);
	
	            _scope.position.set(vec1.x, vec1.y, vec1.z);
	
	            if (!lookAt) _scope.lookAt(vec2);else if (lookAt instanceof TVector3) _scope.lookAt(lookAt);else if (lookAt instanceof TCurve || lookAt instanceof TCurvePath) _scope.lookAt(lookAt.getPoint(u));
	          });
	
	          animation.start();
	        }, time);
	      } else {
	        setTimeout(function () {
	          animation.stop();
	        }, time);
	      }
	    }
	  }, {
	    key: 'lookAt',
	    value: function lookAt(vector3) {
	      return this.native.lookAt(vector3);
	    }
	  }, {
	    key: 'getWorldDirection',
	    value: function getWorldDirection(vector3) {
	      return this.native.getWorldDirection(vector3);
	    }
	  }, {
	    key: 'position',
	    get: function get() {
	      return this.native.position;
	    },
	    set: function set(vector3) {
	      return this.native.position.copy(vector3);
	    }
	  }, {
	    key: 'rotation',
	    get: function get() {
	      return this.native.rotation;
	    },
	    set: function set(euler) {
	      return this.native.rotation.copy(euler);
	    }
	  }, {
	    key: 'quaternion',
	    get: function get() {
	      return this.native.quaternion;
	    },
	    set: function set(euler) {
	      return this.native.quaternion.copy(euler);
	    }
	  }]);
	  return Camera;
	}(_CoreObject2.CoreObject), _class2.defaults = {
	  helper: false,
	
	  pos: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  rot: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  target: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  }
	}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'follow', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'follow'), _class.prototype)), _class));
	exports.Camera = Camera;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _decorators = __webpack_require__(394);
	
	Object.keys(_decorators).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _decorators[key];
	    }
	  });
	});
	
	var _extend = __webpack_require__(395);
	
	Object.keys(_extend).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _extend[key];
	    }
	  });
	});
	
	var _loaders = __webpack_require__(396);
	
	Object.keys(_loaders).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _loaders[key];
	    }
	  });
	});
	
	var _loadMaterial = __webpack_require__(397);
	
	Object.keys(_loadMaterial).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _loadMaterial[key];
	    }
	  });
	});
	
	var _texture = __webpack_require__(398);
	
	Object.keys(_texture).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _texture[key];
	    }
	  });
	});

/***/ },
/* 394 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var deprecate = exports.deprecate = function deprecate(version) {
	  return function (target, name, descriptor) {
	    if (descriptor && typeof descriptor.value === 'function') {
	      return {
	        writable: descriptor.writable,
	        configurable: descriptor.configurable,
	        enumerable: descriptor.enumerable,
	        value: function depricationWrapper() {
	          console.warn('Method ' + name + '() is deprecated since v' + version, [target]);
	          return descriptor.value.apply(this, arguments);
	        }
	      };
	    } else {
	      target.prototype.onRun = function () {
	        console.warn('Class WHS.' + target.name + ' is deprecated since v' + version, [target]);
	      };
	    }
	  };
	};

/***/ },
/* 395 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var extend = exports.extend = function extend(object) {
	  for (var _len = arguments.length, extensions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    extensions[_key - 1] = arguments[_key];
	  }
	
	  // $.extend alternative, ... is the spread operator.
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = extensions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var extension = _step.value;
	
	      // console.log(extension);
	      // console.log(typeof extension);
	
	      if (!extension) continue; // Ignore null and undefined objects and paramaters.
	
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = Object.getOwnPropertyNames(extension)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var prop = _step2.value;
	          // Do not traverse the prototype chain.
	          if (object[prop] !== undefined && object[prop].toString() === '[object Object]' && extension[prop].toString() === '[object Object]') {
	
	            // Goes deep only if object[prop] and extension[prop] are both objects !
	            if (extension[prop].uuid) object[prop] = extension[prop];else extend(object[prop], extension[prop]);
	          } else object[prop] = object[prop] === 0 ? 0 : object[prop];
	          if (typeof object[prop] === 'undefined') object[prop] = extension[prop]; // Add values that do not already exist.
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  return object;
	};

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.MaterialLoader = exports.ImageLoader = exports.AudioLoader = exports.XHRLoader = exports.FontLoader = exports.TextureLoader = exports.ObjectLoader = exports.BufferGeometryLoader = exports.JSONLoader = undefined;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// Models.
	var JSONLoader = new THREE.JSONLoader();
	// const OBJLoader = new THREE.OBJLoader();
	// const BabylonLoader = new THREE.BabylonLoader();
	var BufferGeometryLoader = new THREE.BufferGeometryLoader();
	// const ColladaLoader = new THREE.ColladaLoader();
	// const glTFLoader = new THREE.glTFLoader();
	var ObjectLoader = new THREE.ObjectLoader();
	// const PDBLoader = new THREE.PDBLoader();
	// const SVGLoader = new THREE.SVGLoader();
	// const TGALoader = new THREE.TGALoader();
	
	
	// Other.
	var TextureLoader = new THREE.TextureLoader();
	var FontLoader = new THREE.FontLoader();
	var XHRLoader = new THREE.XHRLoader();
	var AudioLoader = new THREE.AudioLoader();
	var ImageLoader = new THREE.ImageLoader();
	var MaterialLoader = new THREE.MaterialLoader();
	// const MTLLoader = new THREE.MTLLoader();
	
	exports.JSONLoader = JSONLoader;
	exports.BufferGeometryLoader = BufferGeometryLoader;
	exports.ObjectLoader = ObjectLoader;
	exports.TextureLoader = TextureLoader;
	exports.FontLoader = FontLoader;
	exports.XHRLoader = XHRLoader;
	exports.AudioLoader = AudioLoader;
	exports.ImageLoader = ImageLoader;
	exports.MaterialLoader = MaterialLoader;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.loadMaterial = undefined;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var loadMaterial = exports.loadMaterial = function loadMaterial() {
	  var material = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (material instanceof THREE.Material) {
	    return material;
	  } else {
	    var materialThree = void 0;
	
	    var params = Object.assign({}, material);
	
	    delete params.kind;
	    delete params.useCustomMaterial;
	    delete params.useVertexColors;
	
	    switch (material.kind) {
	      case 'basic':
	        materialThree = new THREE.MeshBasicMaterial(params);
	        break;
	
	      case 'linebasic':
	        materialThree = new THREE.LineBasicMaterial(params);
	        break;
	
	      case 'linedashed':
	        materialThree = new THREE.LineDashedMaterial(params);
	        break;
	
	      case 'material':
	        materialThree = new THREE.Material(params);
	        break;
	
	      case 'depth':
	        materialThree = new THREE.MeshDepthMaterial(params);
	        break;
	
	      case 'face':
	        materialThree = new THREE.MeshFaceMaterial(params);
	        break;
	
	      case 'lambert':
	        materialThree = new THREE.MeshLambertMaterial(params);
	        break;
	
	      case 'normal':
	        materialThree = new THREE.MeshNormalMaterial(params);
	        break;
	
	      case 'phong':
	        materialThree = new THREE.MeshPhongMaterial(params);
	        break;
	
	      case 'points':
	        materialThree = new THREE.PointsMaterial(params);
	        break;
	
	      case 'standard':
	        materialThree = new THREE.MeshStandardMaterial(params);
	        break;
	
	      case 'pointcloud':
	        materialThree = new THREE.PointCloudMaterial(params);
	        break;
	
	      case 'rawshader':
	        materialThree = new THREE.RawShaderMaterial(params);
	        break;
	
	      case 'shader':
	        materialThree = new THREE.ShaderMaterial(params);
	        break;
	
	      case 'spritecanvas':
	        materialThree = new THREE.SpriteCanvasMaterial(params);
	        break;
	
	      case 'sprite':
	        materialThree = new THREE.SpriteMaterial(params);
	        break;
	
	      default:
	        materialThree = new THREE.MeshBasicMaterial(params);
	        break;
	    }
	
	    return materialThree;
	  }
	};

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.texture = undefined;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _loaders = __webpack_require__(396);
	
	var _extend = __webpack_require__(395);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var texture = exports.texture = function texture(url) {
	  var repeat = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	  var texture = _loaders.TextureLoader.load(url);
	
	  if (repeat) {
	    var opt = (0, _extend.extend)(repeat, {
	      offset: {
	        x: 0,
	        y: 0
	      },
	      repeat: {
	        x: 1,
	        y: 1
	      }
	    });
	
	    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
	
	    texture.offset.set(opt.offset.x, opt.offset.y);
	    texture.repeat.set(opt.repeat.x, opt.repeat.y);
	
	    texture.magFilter = THREE.NearestFilter;
	    texture.minFilter = THREE.LinearMipMapLinearFilter;
	  }
	
	  return texture;
	};

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Loop = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Loop = function () {
	  function Loop(func) {
	    (0, _classCallCheck3.default)(this, Loop);
	
	    this.func = func;
	    this.clock = new THREE.Clock();
	    this.enabled = false;
	  }
	
	  (0, _createClass3.default)(Loop, [{
	    key: 'start',
	    value: function start(world) {
	      if (world) world.addLoop(this);
	
	      this.clock.start();
	      this.enabled = true;
	    }
	  }, {
	    key: 'stop',
	    value: function stop(world) {
	      this.clock.stop();
	      this.enabled = false;
	
	      if (world) world.removeLoop(this);
	    }
	  }, {
	    key: 'execute',
	    value: function execute() {
	      return this.func(this.clock);
	    }
	  }]);
	  return Loop;
	}();
	
	exports.Loop = Loop;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CoreObject = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _minivents = __webpack_require__(401);
	
	var _minivents2 = _interopRequireDefault(_minivents);
	
	var _index = __webpack_require__(393);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CoreObject = (_temp = _class = function (_Events) {
	  (0, _inherits3.default)(CoreObject, _Events);
	
	  function CoreObject() {
	    (0, _classCallCheck3.default)(this, CoreObject);
	
	    // For decorators behavior.
	    var _this = (0, _possibleConstructorReturn3.default)(this, (CoreObject.__proto__ || Object.getPrototypeOf(CoreObject)).call(this));
	
	    _this.parent = null;
	    _this.params = {};
	    _this.children = [];
	    if (_this.onRun) _this.onRun();
	    return _this;
	  }
	
	  (0, _createClass3.default)(CoreObject, [{
	    key: 'updateParams',
	    value: function updateParams() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      this.params = (0, _index.extend)(params, this.params);
	      return this.params;
	    }
	  }, {
	    key: 'add',
	    value: function add(children) {
	      var _this2 = this;
	
	      if (children.addTo) return children.addTo(this);else if (children instanceof Object) {
	        return new Promise(function (resolve) {
	          children.parent = _this2;
	
	          _this2.native.add(children.native);
	          _this2.children.push(_this2);
	
	          resolve();
	        });
	      }
	    }
	  }, {
	    key: 'remove',
	    value: function remove(source) {
	      this.native.remove(source.native);
	
	      this.children.splice(this.children.indexOf(source), 1);
	      source.parent = null;
	      source.emit('remove');
	
	      return this;
	    }
	  }]);
	  return CoreObject;
	}(_minivents2.default), _class.defaults = {}, _temp);
	exports.CoreObject = CoreObject;

/***/ },
/* 401 */
/***/ function(module, exports) {

	module.exports=function(n){var t={},e=[];n=n||this,n.on=function(n,e,l){(t[n]=t[n]||[]).push([e,l])},n.off=function(n,l){n||(t={});for(var o=t[n]||e,i=o.length=l?o.length:0;i--;)l==o[i][0]&&o.splice(i,1)},n.emit=function(n){for(var l,o=t[n]||e,i=o.length>0?o.slice(0,o.length):o,c=0;l=i[c++];)l[0].apply(l[1],e.slice.call(arguments,1))}};

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.OrtographicCamera = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Camera2 = __webpack_require__(392);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var OrtographicCamera = function (_Camera) {
	  (0, _inherits3.default)(OrtographicCamera, _Camera);
	
	  function OrtographicCamera() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var localWindow = arguments.length <= 1 || arguments[1] === undefined ? window : arguments[1];
	    (0, _classCallCheck3.default)(this, OrtographicCamera);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (OrtographicCamera.__proto__ || Object.getPrototypeOf(OrtographicCamera)).call(this, params, 'ortographiccamera'));
	
	    _this.build(params);
	    (0, _get3.default)(OrtographicCamera.prototype.__proto__ || Object.getPrototypeOf(OrtographicCamera.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(OrtographicCamera, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.OrtographicCamera(params.camera.left, params.camera.right, params.camera.top, params.camera.bottom, params.camera.near, params.camera.far);
	
	        resolve();
	      });
	    }
	  }]);
	  return OrtographicCamera;
	}(_Camera2.Camera);
	
	exports.OrtographicCamera = OrtographicCamera;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PerspectiveCamera = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Camera2 = __webpack_require__(392);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PerspectiveCamera = function (_Camera) {
	  (0, _inherits3.default)(PerspectiveCamera, _Camera);
	
	  function PerspectiveCamera() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var localWindow = arguments.length <= 1 || arguments[1] === undefined ? window : arguments[1];
	    (0, _classCallCheck3.default)(this, PerspectiveCamera);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (PerspectiveCamera.__proto__ || Object.getPrototypeOf(PerspectiveCamera)).call(this, params, 'perspectivecamera', localWindow));
	
	    _this.build(params);
	    (0, _get3.default)(PerspectiveCamera.prototype.__proto__ || Object.getPrototypeOf(PerspectiveCamera.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(PerspectiveCamera, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.PerspectiveCamera(params.camera.fov, params.camera.aspect, params.camera.near, params.camera.far);
	
	        resolve();
	      });
	    }
	  }]);
	  return PerspectiveCamera;
	}(_Camera2.Camera);
	
	exports.PerspectiveCamera = PerspectiveCamera;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Camera = __webpack_require__(392);
	
	Object.keys(_Camera).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Camera[key];
	    }
	  });
	});
	
	var _Light = __webpack_require__(405);
	
	Object.keys(_Light).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Light[key];
	    }
	  });
	});
	
	var _CoreObject = __webpack_require__(400);
	
	Object.keys(_CoreObject).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _CoreObject[key];
	    }
	  });
	});
	
	var _Shape = __webpack_require__(446);
	
	Object.keys(_Shape).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Shape[key];
	    }
	  });
	});
	
	var _World = __webpack_require__(406);
	
	Object.keys(_World).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _World[key];
	    }
	  });
	});

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Light = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _dec, _desc, _value, _class, _class2, _temp;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	var _Loop = __webpack_require__(399);
	
	var _World = __webpack_require__(406);
	
	var _CoreObject2 = __webpack_require__(400);
	
	var _decorators = __webpack_require__(394);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var _set = function _set(x, y, z) {
	  undefined.x = x;
	  undefined.y = y;
	  undefined.z = z;
	};
	
	var Light = (_dec = (0, _decorators.deprecate)('0.0.11'), (_class = (_temp = _class2 = function (_CoreObject) {
	  (0, _inherits3.default)(Light, _CoreObject);
	
	  function Light() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var type = arguments.length <= 1 || arguments[1] === undefined ? 'light' : arguments[1];
	    (0, _classCallCheck3.default)(this, Light);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Light.__proto__ || Object.getPrototypeOf(Light)).call(this));
	
	    _this.helper = null;
	
	
	    if (params instanceof THREE.Light) {
	      _this.params = (0, _index.extend)({
	        pos: { x: params.position.x, y: params.position.y, z: params.position.z },
	        rot: { x: params.rotation.x, y: params.rotation.y, z: params.rotation.z }
	      }, Light.defaults);
	    } else _this.params = (0, _index.extend)(params, Light.defaults);
	
	    if (params instanceof THREE.Light) _this.native = params;
	    _this.type = type;
	    return _this;
	  }
	
	  (0, _createClass3.default)(Light, [{
	    key: 'wrap',
	    value: function wrap() {
	      var _this2 = this;
	
	      for (var _len = arguments.length, tags = Array(_len), _key = 0; _key < _len; _key++) {
	        tags[_key] = arguments[_key];
	      }
	
	      return new Promise(function (resolve, reject) {
	        var _native = _this2.native,
	            _params = _this2.params;
	
	        if (tags.indexOf('no-shadows') < 0) _this2.wrapShadow();
	
	        if (tags.indexOf('no-transforms') < 0) {
	          _this2.position.set(_params.pos.x, _params.pos.y, _params.pos.z);
	
	          _this2.rotation.set(_params.rot.x, _params.rot.y, _params.rot.z);
	
	          if (_this2.target) _this2.target = _params.target;
	        }
	
	        resolve(_this2);
	      });
	    }
	  }, {
	    key: 'addTo',
	    value: function addTo(parent) {
	      var _this3 = this;
	
	      this.parent = parent;
	
	      return new Promise(function (resolve, reject) {
	        var _native = _this3.native,
	            _parent = _this3.parent;
	
	        var parentNative = _parent instanceof _World.World ? _parent.scene : _parent.native;
	
	        parentNative.add(_native);
	        parent.children.push(_this3);
	
	        if (_this3.helper) parentNative.add(_this3.helper);
	        if (_native.target) parentNative.add(_native.target);
	
	        resolve(_this3);
	      });
	    }
	
	    /**
	     * Set shadow properties for light.
	     */
	
	  }, {
	    key: 'wrapShadow',
	    value: function wrapShadow() {
	      var _this4 = this;
	
	      return new Promise(function (resolve, reject) {
	        var _native = _this4.native,
	            _shadow = _this4.params.shadowmap;
	
	        _native.castShadow = _shadow.cast;
	        _native.shadow.mapSize.width = _shadow.width;
	        _native.shadow.mapSize.height = _shadow.height;
	        _native.shadow.bias = _shadow.bias;
	        _native.shadow.radius = _shadow.radius;
	
	        var _shadowCamera = _native.shadow.camera;
	
	        _shadowCamera.near = _shadow.near;
	        _shadowCamera.far = _shadow.far;
	        _shadowCamera.fov = _shadow.fov;
	
	        _shadowCamera.left = _shadow.left;
	        _shadowCamera.right = _shadow.right;
	        _shadowCamera.top = _shadow.top;
	        _shadowCamera.bottom = _shadow.bottom;
	
	        resolve(_this4);
	      });
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Light(this.params, this.type).copy(this);
	    }
	  }, {
	    key: 'copy',
	    value: function copy(source) {
	      if (source.native) {
	        this.native = source.native.clone();
	        if (source.helper) this.helper = source.helper.clone();
	        this.params = source.params;
	
	        this.wrap();
	
	        this.position = source.position.clone();
	        this.rotation = source.rotation.clone();
	        if (source.target) this.target = source.target.clone();
	      } else this.params = source.params;
	
	      this.type = source.type;
	
	      return this;
	    }
	  }, {
	    key: 'getParent',
	    value: function getParent() {
	      return this.parent;
	    }
	  }, {
	    key: 'getWorld',
	    value: function getWorld() {
	      var p = this.parent;
	
	      while (!(p instanceof _World.World)) {
	        if (p) p = p.parent;else return false;
	      }
	
	      return p;
	    }
	  }, {
	    key: 'follow',
	    value: function follow(curve) {
	      var time = arguments.length <= 1 || arguments[1] === undefined ? 1000 : arguments[1];
	      var loop = arguments[2];
	      var lookAt = arguments[3];
	
	      var _scope = this,
	          gEnd = time;
	
	      var animation = new _Loop.Loop(function (clock) {
	        var u = clock.getElapsedTime() * 1000 / gEnd,
	            vec1 = curve.getPoint(u),
	            vec2 = curve.getPoint((u + 0.01) % 1);
	
	        _scope.position.set(vec1.x, vec1.y, vec1.z);
	
	        if (!lookAt) _scope.lookAt(vec2);else if (lookAt instanceof THREE.Vector3) _scope.lookAt(lookAt);else if (lookAt instanceof THREE.Curve || lookAt instanceof THREE.CurvePath) _scope.lookAt(lookAt.getPoint(u));
	      });
	
	      animation.start();
	
	      if (loop) {
	        setInterval(function () {
	          animation.stop();
	
	          animation = new _Loop.Loop(function (clock) {
	            var u = clock.getElapsedtime() * 1000 / gEnd,
	                vec1 = curve.getPoint(u),
	                vec2 = curve.getPoint((u + 0.01) % 1);
	
	            _scope.position.set(vec1.x, vec1.y, vec1.z);
	
	            if (!lookAt) _scope.lookAt(vec2);else if (lookAt instanceof THREE.Vector3) _scope.lookAt(lookAt);else if (lookAt instanceof THREE.Curve || lookAt instanceof THREE.CurvePath) _scope.lookAt(lookAt.getPoint(u));
	          });
	
	          animation.start();
	        }, time);
	      } else {
	        setTimeout(function () {
	          animation.stop();
	        }, time);
	      }
	    }
	
	    /* VISIBILITY */
	
	  }, {
	    key: 'show',
	    value: function show() {
	      this.native.visible = true;
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.native.visible = false;
	    }
	  }, {
	    key: 'position',
	    get: function get() {
	      return this.native.position;
	    },
	    set: function set(vector3) {
	      return this.native.position.copy(vector3);
	    }
	  }, {
	    key: 'rotation',
	    get: function get() {
	      return this.native.rotation;
	    },
	    set: function set(euler) {
	      return this.native.rotation.copy(euler);
	    }
	  }, {
	    key: 'quaternion',
	    get: function get() {
	      return this.native.quaternion;
	    },
	    set: function set(euler) {
	      return this.native.quaternion.copy(euler);
	    }
	  }, {
	    key: 'target',
	    get: function get() {
	      return this.native.target;
	    },
	    set: function set(vector3) {
	      if (vector3 instanceof THREE.Object3D) this.native.target.copy(vector3); // THREE.Object3D in this case.
	      else this.native.target.position.copy(vector3);
	    }
	  }]);
	  return Light;
	}(_CoreObject2.CoreObject), _class2.defaults = {
	  light: {
	    color: 0xffffff,
	    skyColor: 0xffffff,
	    groundColor: 0xffffff,
	
	    intensity: 1,
	    distance: 100,
	    angle: Math.PI / 3,
	    exponent: 0,
	    decay: 1
	  },
	
	  helper: false,
	
	  shadowmap: {
	    cast: true,
	
	    bias: 0,
	    radius: 1,
	
	    width: 1024,
	    height: 1024,
	
	    near: true,
	    far: 400,
	    fov: 60,
	
	    top: 200,
	    bottom: -200,
	    left: -200,
	    right: 200
	  },
	
	  pos: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  rot: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  target: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  }
	}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'follow', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'follow'), _class.prototype)), _class));
	exports.Light = Light;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.World = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _stats = __webpack_require__(407);
	
	var _stats2 = _interopRequireDefault(_stats);
	
	var _index = __webpack_require__(408);
	
	var Physijs = _interopRequireWildcard(_index);
	
	var _index2 = __webpack_require__(393);
	
	var _PerspectiveCamera = __webpack_require__(403);
	
	var _Camera = __webpack_require__(392);
	
	var _Shape = __webpack_require__(446);
	
	var _Light = __webpack_require__(405);
	
	var _CoreObject2 = __webpack_require__(400);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var World = (_temp = _class = function (_CoreObject) {
	  (0, _inherits3.default)(World, _CoreObject);
	
	  function World() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var localWindow = arguments.length <= 1 || arguments[1] === undefined ? window : arguments[1];
	    (0, _classCallCheck3.default)(this, World);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (World.__proto__ || Object.getPrototypeOf(World)).call(this));
	
	    _this.render = false;
	    _this.simulate = false;
	    _this.loops = [];
	    _this.type = 'world';
	
	
	    World.defaults.width = localWindow.innerWidth;
	    World.defaults.height = localWindow.innerHeight;
	    World.defaults.container = localWindow.document.body;
	
	    _this.params = (0, _index2.extend)(params, World.defaults);
	
	    var _params = _this.params,
	        _initParams = _params.init;
	
	    // INIT.
	    _this._initDOM(localWindow);
	    if (_initParams.scene) _this._initScene();
	    if (_initParams.scene && _initParams.stats) _this._initStats();
	
	    if (_initParams.scene && _initParams.camera) _this._initCamera(localWindow);
	    if (_initParams.scene && _initParams.renderer) _this._initRenderer();
	    if (_initParams.scene && _initParams.helpers) _this._initHelpers();
	
	    // NOTE: ==================== Autoresize. ======================
	
	    if (_params.autoresize === "window") {
	      localWindow.addEventListener('resize', function () {
	        _this.setSize(Number(localWindow.innerWidth * _params.rWidth).toFixed(), Number(localWindow.innerHeight * _params.rHeight).toFixed());
	
	        _this.emit('resize');
	      });
	    } else if (_params.autoresize) {
	      localWindow.addEventListener('resize', function () {
	        _this.setSize(Number(_params.container.offsetWidth * _params.rWidth).toFixed(), Number(_params.container.offsetHeight * _params.rHeight).toFixed());
	
	        _this.emit('resize');
	      });
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(World, [{
	    key: '_initScene',
	    value: function _initScene() {
	      var params = this.params,
	          scene = Physijs.default !== false ? new Physijs.Scene({
	        fixedTimeStep: params.physics.fixedTimeStep,
	        broadphase: params.physics.broadphase
	      }, {
	        stats: params.stats,
	        world: this,
	        softbody: params.softbody
	      }) : new THREE.Scene();
	
	      if (Physijs.default !== false) {
	        scene.setGravity(new THREE.Vector3(params.gravity.x, params.gravity.y, params.gravity.z));
	
	        this.simulate = true;
	      }
	
	      if (params.fog.type === 'regular') scene.fog = new THREE.Fog(params.fog.hex, params.fog.near, params.fog.far);else if (params.fog.type === 'exp' || params.fog.type === 'expodential') scene.fog = new THREE.FogExp2(params.fog.hex, params.fog.density);
	
	      this.importScene(scene, false);
	
	      // Array for processing.
	      this.children = [];
	    }
	  }, {
	    key: 'addLoop',
	    value: function addLoop(loop) {
	      var _this2 = this;
	
	      return new Promise(function (resolve) {
	        _this2.loops.push(loop);
	        resolve(loop);
	      });
	    }
	  }, {
	    key: 'removeLoop',
	    value: function removeLoop(loop) {
	      var _this3 = this;
	
	      return new Promise(function (resolve) {
	        _this3.loops.filter(function (l) {
	          return l !== loop;
	        });
	        resolve(loop);
	      });
	    }
	  }, {
	    key: '_initDOM',
	    value: function _initDOM() {
	      var localWindow = arguments.length <= 0 || arguments[0] === undefined ? window : arguments[0];
	
	      var params = this.params;
	
	      params.container.style.margin = 0;
	      params.container.style.padding = 0;
	      params.container.style.position = 'relative';
	      params.container.style.overflow = 'hidden';
	
	      this._dom = localWindow.document.createElement('div');
	      this._dom.className = 'whs';
	
	      params.container.appendChild(this._dom);
	
	      return this._dom;
	    }
	  }, {
	    key: '_initStats',
	    value: function _initStats() {
	      var params = this.params;
	
	      if (params.stats) {
	        this.stats = new _stats2.default();
	
	        if (params.stats === 'fps') this.stats.setMode(0);else if (params.stats === 'ms') this.stats.setMode(1);else if (params.stats === 'mb') this.stats.setMode(1);else {
	          this.stats.setMode(0);
	          console.warn([this.stats], 'Please, apply stats mode [fps, ms, mb] .');
	        }
	
	        this.stats.domElement.style.position = 'absolute';
	        this.stats.domElement.style.left = '0px';
	        this.stats.domElement.style.bottom = '0px';
	
	        this._dom.appendChild(this.stats.domElement);
	      }
	    }
	  }, {
	    key: '_initCamera',
	    value: function _initCamera() {
	      var localWindow = arguments.length <= 0 || arguments[0] === undefined ? window : arguments[0];
	
	      var _params = this.params;
	
	      this.camera = new _PerspectiveCamera.PerspectiveCamera({
	        camera: {
	          fov: _params.camera.aspect,
	          aspect: _params.width / _params.height,
	          near: _params.camera.near,
	          far: _params.camera.far
	        },
	
	        pos: {
	          x: _params.camera.x,
	          y: _params.camera.y,
	          z: _params.camera.z
	        }
	      }, localWindow);
	
	      this.camera.addTo(this);
	    }
	  }, {
	    key: '_initRenderer',
	    value: function _initRenderer() {
	      this.render = true;
	
	      // Renderer.
	      this.renderer = new THREE.WebGLRenderer(this.params.renderer);
	
	      var _renderer = this.renderer;
	      _renderer.setClearColor(this.params.background.color, this.params.background.opacity);
	
	      // Shadowmap.
	      _renderer.shadowMap.enabled = this.params.shadowmap.enabled;
	      _renderer.shadowMap.type = this.params.shadowmap.type;
	      _renderer.shadowMap.cascade = true;
	
	      _renderer.setSize(Number(this.params.width * this.params.rWidth).toFixed(), Number(this.params.height * this.params.rHeight).toFixed());
	
	      _renderer.render(this.scene, this.camera.native);
	
	      this._dom.appendChild(_renderer.domElement);
	
	      _renderer.domElement.style.width = '100%';
	      _renderer.domElement.style.height = '100%';
	    }
	  }, {
	    key: '_initHelpers',
	    value: function _initHelpers() {
	      var _params = this.params,
	          _scene = this.scene;
	
	      if (_params.helpers.axis) {
	        _scene.add(new THREE.AxisHelper(_params.helpers.axis.size ? _params.helpers.axis.size : 5));
	      }
	
	      if (_params.helpers.grid) {
	        _scene.add(new THREE.GridHelper(_params.helpers.grid.size ? _params.helpers.grid.size : 10, _params.helpers.grid.step ? _params.helpers.grid.step : 1, _params.helpers.grid.color1, _params.helpers.grid.color2));
	      }
	    }
	
	    /**
	     * Start animation.
	     */
	
	  }, {
	    key: 'start',
	    value: function start() {
	      var localWindow = arguments.length <= 0 || arguments[0] === undefined ? window : arguments[0];
	
	      var clock = new THREE.Clock(),
	          _scope = this,
	          scene = _scope.scene,
	          cameraNative = _scope.camera.native,
	          renderer = _scope.renderer;
	
	      localWindow.requestAnimFrame = function () {
	        return localWindow.requestAnimationFrame || localWindow.webkitRequestAnimationFrame || localWindow.mozRequestAnimationFrame || function (callback) {
	          localWindow.setTimeout(callback, 1000 / 60);
	        };
	      }();
	
	      function reDraw(time) {
	        localWindow.requestAnimFrame(reDraw);
	
	        // Init stats.
	        if (_scope.stats) _scope.stats.begin();
	
	        _scope._process(clock.getDelta());
	        if (_scope.controls) _scope._updateControls();
	
	        if (_scope.simulate) scene.simulate(clock.getDelta(), 1);
	
	        // Effects rendering.
	        if (_scope.postProcessor && _scope.render) {
	          _scope.postProcessor.render(time);
	        } else if (_scope.render) renderer.render(scene, cameraNative);
	
	        _scope._execLoops();
	
	        // End helper.
	        if (_scope.stats) _scope.stats.end();
	      }
	
	      this._update = reDraw;
	
	      _scope._update();
	    }
	
	    /**
	     * Set a PostProcessor that will use this world renderer, scene and camera to draw post processing effects.
	     * @param  {WHS.PostProcessor} postProcessor : The post processor instance to set.
	     */
	
	  }, {
	    key: '_execLoops',
	
	
	    /**
	     * Execute all loops with a specific time.
	     *
	     * @params {number} time - The time value that will be passed to loops.
	     */
	    value: function _execLoops() {
	      for (var i = 0; i < this.loops.length; i++) {
	        var e = this.loops[i];
	        if (e.enabled) e.execute(e.clock);
	      }
	    }
	
	    /**
	     * Update controls time values.
	     */
	
	  }, {
	    key: '_updateControls',
	    value: function _updateControls() {
	      this.controls.update(Date.now() - this.time);
	      this.time = Date.now();
	    }
	
	    /**
	     * Update morphs animations.
	     *
	     * @params {THREE.Clock} clock - The clock object, which.
	     */
	
	  }, {
	    key: '_process',
	    value: function _process(delta) {
	      for (var i = 0; i < this.children.length; i++) {
	        if (this.children[i].type === 'morph') this.children[i].native.mixer.update(delta);
	      }
	    }
	
	    /**
	     * This functon will scene properties when it's called.
	     */
	
	  }, {
	    key: 'setSize',
	    value: function setSize() {
	      var width = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];
	      var height = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];
	
	      this.camera.native.aspect = width / height;
	      this.camera.native.updateProjectionMatrix();
	
	      this.renderer.setSize(Number(width * this.params.rWidth).toFixed(), Number(height * this.params.rHeight).toFixed());
	    }
	  }, {
	    key: 'importScene',
	    value: function importScene(scene) {
	      var _this4 = this;
	
	      var import_three = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
	
	      this.scene = scene;
	
	      if (import_three) {
	        (function () {
	          _this4.children = [];
	
	          var moveChildren = function moveChildren(object) {
	            for (var i = 0, max = object.children.length; i < max; i++) {
	              var obj3D = object.children[i];
	              var WHSobj = void 0;
	
	              if (obj3D instanceof THREE.Light) WHSobj = new _Light.Light(obj3D);else WHSobj = new _Shape.Shape(obj3D);
	
	              WHSobj.addTo(_this4);
	
	              if (obj3D.children.length) moveChildren(obj3D, WHSobj);
	            }
	          };
	
	          moveChildren(scene, _this4);
	        })();
	      }
	
	      return this.scene;
	    }
	  }, {
	    key: 'setControls',
	    value: function setControls(controls) {
	      var recieved = controls(this);
	
	      this.controls = recieved instanceof Array ? recieved[0] : recieved;
	
	      if (recieved instanceof Array && typeof recieved[1] === 'function') recieved[1](this);
	
	      return this.controls;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(source) {
	      this.scene.remove(source.native);
	
	      this.children.splice(this.children.indexOf(source), 1);
	      source.parent = null;
	
	      source.emit('remove');
	
	      return this;
	    }
	  }, {
	    key: 'postProcessor',
	    set: function set(postProcessor) {
	      this._postProcessor = postProcessor;
	      this._postProcessor.setContainerConfig(this.params.container);
	      this._postProcessor.setRenderScene(this.scene, this.camera);
	      this._postProcessor.renderer = this.renderer;
	    }
	
	    /**
	     * Get the PostProcessor associated with this World instance, otherwise undefined.
	     * @return {WHS.PostProcessor} The PostProcessor.
	     */
	    ,
	    get: function get() {
	      return this._postProcessor;
	    }
	  }]);
	  return World;
	}(_CoreObject2.CoreObject), _class.defaults = {
	  stats: false,
	  autoresize: false,
	  softbody: false,
	
	  shadowmap: {
	    enabled: true,
	    type: THREE.PCFSoftShadowMap
	  },
	
	  helpers: {
	    grid: false,
	    axis: false
	  },
	
	  gravity: {
	    x: 0,
	    y: 0,
	    z: 0
	  },
	
	  camera: {
	    aspect: 75,
	    near: 1,
	    far: 1000,
	
	    x: 0,
	    y: 0,
	    z: 0
	  },
	
	  rWidth: 1, // Resolution(width).
	  rHeight: 1, // Resolution(height).
	
	  physics: {
	    fixedTimeStep: 1 / 60,
	    broadphase: { type: 'dynamic' }
	  },
	
	  fog: {
	    type: false,
	
	    density: 0.00025,
	    hex: 0x000000,
	    near: 1,
	    far: 1000
	  },
	
	  init: {
	    scene: true,
	    stats: true,
	    camera: true,
	    helpers: true,
	    renderer: true
	  },
	
	  background: {
	    color: 0x000000,
	    opacity: 1
	  },
	
	  renderer: {}
	}, _temp);
	exports.World = World;

/***/ },
/* 407 */
/***/ function(module, exports) {

	// stats.js - http://github.com/mrdoob/stats.js
	var Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?"block":"none";l=a}var l=0,c=document.createElement("div");c.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000";c.addEventListener("click",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel("FPS","#0ff","#002")),f=h(new Stats.Panel("MS","#0f0","#020"));
	if(self.performance&&self.performance.memory)var t=h(new Stats.Panel("MB","#f08","#201"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};
	Stats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement("canvas");q.width=r;q.height=f;q.style.cssText="width:80px;height:48px";var b=q.getContext("2d");b.font="bold "+9*a+"px Helvetica,Arial,sans-serif";b.textBaseline="top";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,
	v){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+" "+h+" ("+e(c)+"-"+e(g)+")",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};"object"===typeof module&&(module.exports=Stats);


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _api = __webpack_require__(409);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var _eventable = __webpack_require__(410);
	
	Object.keys(_eventable).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _eventable[key];
	    }
	  });
	});
	
	var _index = __webpack_require__(411);
	
	Object.keys(_index).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index[key];
	    }
	  });
	});
	
	var _index2 = __webpack_require__(425);
	
	Object.keys(_index2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index2[key];
	    }
	  });
	});
	
	var _index3 = __webpack_require__(431);
	
	Object.keys(_index3).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index3[key];
	    }
	  });
	});
	
	var _index4 = __webpack_require__(445);
	
	Object.keys(_index4).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index4[key];
	    }
	  });
	});

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.temp1Quat = exports.temp1Matrix4 = exports.temp2Vector3 = exports.temp1Vector3 = exports.CONSTRAINTREPORT_ITEMSIZE = exports.VEHICLEREPORT_ITEMSIZE = exports.COLLISIONREPORT_ITEMSIZE = exports.REPORT_ITEMSIZE = exports.MESSAGE_TYPES = exports.addObjectChildren = exports.getObjectId = exports.convertWorldPositionToObject = exports.getQuatertionFromEuler = exports.getEulerXYZFromQuaternion = undefined;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var MESSAGE_TYPES = {
	  WORLDREPORT: 0,
	  COLLISIONREPORT: 1,
	  VEHICLEREPORT: 2,
	  CONSTRAINTREPORT: 3,
	  SOFTREPORT: 4
	};
	
	var REPORT_ITEMSIZE = 14,
	    COLLISIONREPORT_ITEMSIZE = 5,
	    VEHICLEREPORT_ITEMSIZE = 9,
	    CONSTRAINTREPORT_ITEMSIZE = 6;
	
	var temp1Vector3 = new THREE.Vector3(),
	    temp2Vector3 = new THREE.Vector3(),
	    temp1Matrix4 = new THREE.Matrix4(),
	    temp1Quat = new THREE.Quaternion();
	
	var getEulerXYZFromQuaternion = function getEulerXYZFromQuaternion(x, y, z, w) {
	  return new THREE.Vector3(Math.atan2(2 * (x * w - y * z), w * w - x * x - y * y + z * z), Math.asin(2 * (x * z + y * w)), Math.atan2(2 * (z * w - x * y), w * w + x * x - y * y - z * z));
	};
	
	var getQuatertionFromEuler = function getQuatertionFromEuler(x, y, z) {
	  var c1 = Math.cos(y);
	  var s1 = Math.sin(y);
	  var c2 = Math.cos(-z);
	  var s2 = Math.sin(-z);
	  var c3 = Math.cos(x);
	  var s3 = Math.sin(x);
	  var c1c2 = c1 * c2;
	  var s1s2 = s1 * s2;
	
	  return {
	    w: c1c2 * c3 - s1s2 * s3,
	    x: c1c2 * s3 + s1s2 * c3,
	    y: s1 * c2 * c3 + c1 * s2 * s3,
	    z: c1 * s2 * c3 - s1 * c2 * s3
	  };
	};
	
	var convertWorldPositionToObject = function convertWorldPositionToObject(position, object) {
	  temp1Matrix4.identity(); // reset temp matrix
	
	  // Set the temp matrix's rotation to the object's rotation
	  temp1Matrix4.identity().makeRotationFromQuaternion(object.quaternion);
	
	  // Invert rotation matrix in order to "unrotate" a point back to object space
	  temp1Matrix4.getInverse(temp1Matrix4);
	
	  // Yay! Temp vars!
	  temp1Vector3.copy(position);
	  temp2Vector3.copy(object.position);
	
	  // Apply the rotation
	  return temp1Vector3.sub(temp2Vector3).applyMatrix4(temp1Matrix4);
	};
	
	var addObjectChildren = function addObjectChildren(parent, object) {
	  for (var i = 0; i < object.children.length; i++) {
	    if (object.children[i]._physijs) {
	      object.children[i].updateMatrix();
	      object.children[i].updateMatrixWorld();
	
	      temp1Vector3.setFromMatrixPosition(object.children[i].matrixWorld);
	      temp1Quat.setFromRotationMatrix(object.children[i].matrixWorld);
	
	      object.children[i]._physijs.position_offset = {
	        x: temp1Vector3.x,
	        y: temp1Vector3.y,
	        z: temp1Vector3.z
	      };
	
	      object.children[i]._physijs.rotation = {
	        x: temp1Quat.x,
	        y: temp1Quat.y,
	        z: temp1Quat.z,
	        w: temp1Quat.w
	      };
	
	      parent._physijs.children.push(object.children[i]._physijs);
	    }
	
	    addObjectChildren(parent, object.children[i]);
	  }
	};
	
	var getObjectId = function () {
	  var _id = 1;
	  return function () {
	    return _id++;
	  };
	}();
	
	exports.getEulerXYZFromQuaternion = getEulerXYZFromQuaternion;
	exports.getQuatertionFromEuler = getQuatertionFromEuler;
	exports.convertWorldPositionToObject = convertWorldPositionToObject;
	exports.getObjectId = getObjectId;
	exports.addObjectChildren = addObjectChildren;
	exports.MESSAGE_TYPES = MESSAGE_TYPES;
	exports.REPORT_ITEMSIZE = REPORT_ITEMSIZE;
	exports.COLLISIONREPORT_ITEMSIZE = COLLISIONREPORT_ITEMSIZE;
	exports.VEHICLEREPORT_ITEMSIZE = VEHICLEREPORT_ITEMSIZE;
	exports.CONSTRAINTREPORT_ITEMSIZE = CONSTRAINTREPORT_ITEMSIZE;
	exports.temp1Vector3 = temp1Vector3;
	exports.temp2Vector3 = temp2Vector3;
	exports.temp1Matrix4 = temp1Matrix4;
	exports.temp1Quat = temp1Quat;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Eventable = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Eventable = exports.Eventable = function () {
	  function Eventable() {
	    (0, _classCallCheck3.default)(this, Eventable);
	
	    this._eventListeners = {};
	  }
	
	  (0, _createClass3.default)(Eventable, [{
	    key: "addEventListener",
	    value: function addEventListener(event_name, callback) {
	      if (!this._eventListeners.hasOwnProperty(event_name)) this._eventListeners[event_name] = [];
	
	      this._eventListeners[event_name].push(callback);
	    }
	  }, {
	    key: "removeEventListener",
	    value: function removeEventListener(event_name, callback) {
	      var index = void 0;
	
	      if (!this._eventListeners.hasOwnProperty(event_name)) return false;
	
	      if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {
	        this._eventListeners[event_name].splice(index, 1);
	        return true;
	      }
	
	      return false;
	    }
	  }, {
	    key: "dispatchEvent",
	    value: function dispatchEvent(event_name) {
	      var i = void 0;
	      var parameters = Array.prototype.splice.call(arguments, 1);
	
	      if (this._eventListeners.hasOwnProperty(event_name)) {
	        for (i = 0; i < this._eventListeners[event_name].length; i++) {
	          this._eventListeners[event_name][i].apply(this, parameters);
	        }
	      }
	    }
	  }], [{
	    key: "make",
	    value: function make(obj) {
	      obj.prototype.addEventListener = Eventable.prototype.addEventListener;
	      obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;
	      obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;
	    }
	  }]);
	  return Eventable;
	}();

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _mesh = __webpack_require__(412);
	
	Object.keys(_mesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _mesh[key];
	    }
	  });
	});
	
	var _scene = __webpack_require__(413);
	
	Object.keys(_scene).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _scene[key];
	    }
	  });
	});

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Mesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _eventable = __webpack_require__(410);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Mesh = exports.Mesh = function (_THREE$Mesh) {
	  (0, _inherits3.default)(Mesh, _THREE$Mesh);
	
	  function Mesh(geometry, material, mass) {
	    (0, _classCallCheck3.default)(this, Mesh);
	
	    if (!geometry) return (0, _possibleConstructorReturn3.default)(_this);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Mesh.__proto__ || Object.getPrototypeOf(Mesh)).call(this, geometry, material));
	
	    Object.assign(_this, new _eventable.Eventable());
	    _eventable.Eventable.make(Mesh);
	
	    if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	    _this._physijs = {
	      type: null,
	      id: (0, _api.getObjectId)(),
	      mass: mass || 0,
	      touches: [],
	      linearVelocity: new THREE.Vector3(),
	      angularVelocity: new THREE.Vector3()
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(Mesh, [{
	    key: 'applyCentralImpulse',
	    value: function applyCentralImpulse(force) {
	      if (this.world) this.world.execute('applyCentralImpulse', { id: this._physijs.id, x: force.x, y: force.y, z: force.z });
	    }
	  }, {
	    key: 'applyImpulse',
	    value: function applyImpulse(force, offset) {
	      if (this.world) {
	        this.world.execute('applyImpulse', {
	          id: this._physijs.id,
	          impulse_x: force.x,
	          impulse_y: force.y,
	          impulse_z: force.z,
	          x: offset.x,
	          y: offset.y,
	          z: offset.z
	        });
	      }
	    }
	  }, {
	    key: 'applyTorque',
	    value: function applyTorque(force) {
	      if (this.world) {
	        this.world.execute('applyTorque', {
	          id: this._physijs.id,
	          torque_x: force.x,
	          torque_y: force.y,
	          torque_z: force.z
	        });
	      }
	    }
	  }, {
	    key: 'applyCentralForce',
	    value: function applyCentralForce(force) {
	      if (this.world) this.world.execute('applyCentralForce', { id: this._physijs.id, x: force.x, y: force.y, z: force.z });
	    }
	  }, {
	    key: 'applyForce',
	    value: function applyForce(force, offset) {
	      if (this.world) {
	        this.world.execute('applyForce', {
	          id: this._physijs.id,
	          force_x: force.x,
	          force_y: force.y,
	          force_z: force.z,
	          x: offset.x,
	          y: offset.y,
	          z: offset.z
	        });
	      }
	    }
	  }, {
	    key: 'getAngularVelocity',
	    value: function getAngularVelocity() {
	      return this._physijs.angularVelocity;
	    }
	  }, {
	    key: 'setAngularVelocity',
	    value: function setAngularVelocity(velocity) {
	      if (this.world) this.world.execute('setAngularVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z });
	    }
	  }, {
	    key: 'getLinearVelocity',
	    value: function getLinearVelocity() {
	      return this._physijs.linearVelocity;
	    }
	  }, {
	    key: 'setLinearVelocity',
	    value: function setLinearVelocity(velocity) {
	      if (this.world) this.world.execute('setLinearVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z });
	    }
	  }, {
	    key: 'setAngularFactor',
	    value: function setAngularFactor(factor) {
	      if (this.world) this.world.execute('setAngularFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z });
	    }
	  }, {
	    key: 'setLinearFactor',
	    value: function setLinearFactor(factor) {
	      if (this.world) this.world.execute('setLinearFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z });
	    }
	  }, {
	    key: 'setDamping',
	    value: function setDamping(linear, angular) {
	      if (this.world) this.world.execute('setDamping', { id: this._physijs.id, linear: linear, angular: angular });
	    }
	  }, {
	    key: 'setCcdMotionThreshold',
	    value: function setCcdMotionThreshold(threshold) {
	      if (this.world) this.world.execute('setCcdMotionThreshold', { id: this._physijs.id, threshold: threshold });
	    }
	  }, {
	    key: 'setCcdSweptSphereRadius',
	    value: function setCcdSweptSphereRadius(radius) {
	      if (this.world) this.world.execute('setCcdSweptSphereRadius', { id: this._physijs.id, radius: radius });
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new this.constructor(this.geometry, this.material, params).copy(this);
	    }
	  }, {
	    key: 'mass',
	    get: function get() {
	      return this._physijs.mass;
	    },
	    set: function set(mass) {
	      this._physijs.mass = mass;
	      if (this.world) this.world.execute('updateMass', { id: this._physijs.id, mass: mass });
	    }
	  }]);
	  return Mesh;
	}(THREE.Mesh);

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Scene = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _inlineWorker = __webpack_require__(414);
	
	var _inlineWorker2 = _interopRequireDefault(_inlineWorker);
	
	var _stats = __webpack_require__(407);
	
	var _stats2 = _interopRequireDefault(_stats);
	
	var _vehicle = __webpack_require__(415);
	
	var _eventable = __webpack_require__(410);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Scene = exports.Scene = function (_THREE$Scene) {
	  (0, _inherits3.default)(Scene, _THREE$Scene);
	
	  function Scene() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var init = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	    (0, _classCallCheck3.default)(this, Scene);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Scene.__proto__ || Object.getPrototypeOf(Scene)).call(this));
	
	    Object.assign(_this, new _eventable.Eventable());
	    _eventable.Eventable.make(Scene);
	
	    _this._worker = new _inlineWorker2.default(__webpack_require__(417));
	    _this._worker.transferableMessage = _this._worker.webkitPostMessage || _this._worker.postMessage;
	    _this._materials_ref_counts = {};
	    _this._objects = {};
	    _this._vehicles = {};
	    _this._constraints = {};
	    _this._is_simulating = false;
	
	    var ab = new ArrayBuffer(1);
	    _this._worker.transferableMessage(ab, [ab]);
	    _this.SUPPORT_TRANSFERABLE = ab.byteLength === 0;
	
	    _this._worker.onmessage = function (event) {
	      var _temp = void 0,
	          data = event.data;
	
	      if (data instanceof ArrayBuffer && data.byteLength !== 1) // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test
	        data = new Float32Array(data);
	
	      if (data instanceof Float32Array) {
	        // transferable object
	        switch (data[0]) {
	          case _api.MESSAGE_TYPES.WORLDREPORT:
	            _this._updateScene(data);
	            break;
	
	          case _api.MESSAGE_TYPES.SOFTREPORT:
	            _this._updateSoftbodies(data);
	            break;
	
	          case _api.MESSAGE_TYPES.COLLISIONREPORT:
	            _this._updateCollisions(data);
	            break;
	
	          case _api.MESSAGE_TYPES.VEHICLEREPORT:
	            _this._updateVehicles(data);
	            break;
	
	          case _api.MESSAGE_TYPES.CONSTRAINTREPORT:
	            _this._updateConstraints(data);
	            break;
	          default:
	        }
	      } else if (data.cmd) {
	        // non-transferable object
	        switch (data.cmd) {
	          case 'objectReady':
	            _temp = data.params;
	            if (_this._objects[_temp]) _this._objects[_temp].dispatchEvent('ready');
	            break;
	
	          case 'worldReady':
	            _this.dispatchEvent('ready');
	            break;
	
	          case 'vehicle':
	            window.test = data;
	            break;
	
	          default:
	            // Do nothing, just show the message
	            console.debug('Received: ' + data.cmd);
	            console.dir(data.params);
	            break;
	        }
	      } else {
	        switch (data[0]) {
	          case _api.MESSAGE_TYPES.WORLDREPORT:
	            _this._updateScene(data);
	            break;
	
	          case _api.MESSAGE_TYPES.COLLISIONREPORT:
	            _this._updateCollisions(data);
	            break;
	
	          case _api.MESSAGE_TYPES.VEHICLEREPORT:
	            _this._updateVehicles(data);
	            break;
	
	          case _api.MESSAGE_TYPES.CONSTRAINTREPORT:
	            _this._updateConstraints(data);
	            break;
	          default:
	        }
	      }
	    };
	
	    params.fixedTimeStep = params.fixedTimeStep || 1 / 60;
	    params.rateLimit = params.rateLimit || true;
	
	    params.whs = {
	      softbody: init.softbody
	    };
	
	    _this._stats = init.stats ? new _stats2.default() : false;
	    _this._world = init.world || false;
	
	    if (_this._stats) {
	      _this._stats.setMode(0);
	      _this._stats.domElement.style.position = 'absolute';
	      _this._stats.domElement.style.left = '0px';
	      _this._stats.domElement.style.top = '48px';
	
	      _this._world._dom.appendChild(_this._stats.domElement);
	    }
	
	    _this.execute('init', params);
	    return _this;
	  }
	
	  (0, _createClass3.default)(Scene, [{
	    key: '_updateScene',
	    value: function _updateScene(data) {
	      var index = data[1];
	
	      while (index--) {
	        var offset = 2 + index * _api.REPORT_ITEMSIZE;
	        var object = this._objects[data[offset]];
	
	        if (object === null) continue;
	
	        if (object.__dirtyPosition === false) {
	          object.position.set(data[offset + 1], data[offset + 2], data[offset + 3]);
	
	          object.__dirtyPosition = false;
	        }
	
	        if (object.__dirtyRotation === false) {
	          object.quaternion.set(data[offset + 4], data[offset + 5], data[offset + 6], data[offset + 7]);
	
	          object.__dirtyRotation = false;
	        }
	
	        object._physijs.linearVelocity.set(data[offset + 8], data[offset + 9], data[offset + 10]);
	
	        object._physijs.angularVelocity.set(data[offset + 11], data[offset + 12], data[offset + 13]);
	      }
	
	      if (this.SUPPORT_TRANSFERABLE) this._worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker
	
	      this._is_simulating = false;
	      this.dispatchEvent('update');
	    }
	  }, {
	    key: '_updateSoftbodies',
	    value: function _updateSoftbodies(data) {
	      var index = data[1],
	          offset = 2;
	
	      while (index--) {
	        var size = data[offset + 1];
	        var object = this._objects[data[offset]];
	
	        if (object === null) continue;
	
	        var association = object._physijs.aIdxAssoc;
	        var attributes = object.geometry.attributes;
	
	        var volumePositions = attributes.position.array;
	
	        var offsetVert = offset + 2;
	
	        if (object._physijs.type === "softTrimesh") {
	          var volumeNormals = attributes.normal.array;
	
	          for (var i = 0; i < size; i++) {
	            var offs = offsetVert + i * 6;
	
	            var x = data[offs];
	            var y = data[offs + 1];
	            var z = data[offs + 2];
	
	            var nx = data[offs + 3];
	            var ny = data[offs + 4];
	            var nz = data[offs + 5];
	
	            var assocVertex = association[i];
	
	            for (var k = 0, kl = assocVertex.length; k < kl; k++) {
	              var indexVertex = assocVertex[k];
	
	              volumePositions[indexVertex] = x;
	              volumeNormals[indexVertex] = nx;
	              indexVertex++;
	
	              volumePositions[indexVertex] = y;
	              volumeNormals[indexVertex] = ny;
	              indexVertex++;
	
	              volumePositions[indexVertex] = z;
	              volumeNormals[indexVertex] = nz;
	            }
	          }
	
	          attributes.normal.needsUpdate = true;
	        } else if (object._physijs.type === "softRopeMesh") {
	          for (var _i = 0; _i < size; _i++) {
	            var _offs = offsetVert + _i * 3;
	
	            var _x3 = data[_offs];
	            var _y = data[_offs + 1];
	            var _z = data[_offs + 2];
	
	            volumePositions[_i * 3] = _x3;
	            volumePositions[_i * 3 + 1] = _y;
	            volumePositions[_i * 3 + 2] = _z;
	          }
	        } else {
	          var _volumeNormals = attributes.normal.array;
	
	          for (var _i2 = 0; _i2 < size; _i2++) {
	            var _offs2 = offsetVert + _i2 * 6;
	
	            var _x4 = data[_offs2];
	            var _y2 = data[_offs2 + 1];
	            var _z2 = data[_offs2 + 2];
	
	            var _nx = data[_offs2 + 3];
	            var _ny = data[_offs2 + 4];
	            var _nz = data[_offs2 + 5];
	
	            volumePositions[_i2 * 3] = _x4;
	            volumePositions[_i2 * 3 + 1] = _y2;
	            volumePositions[_i2 * 3 + 2] = _z2;
	
	            _volumeNormals[_i2 * 3] = _nx;
	            _volumeNormals[_i2 * 3 + 1] = _ny;
	            _volumeNormals[_i2 * 3 + 2] = _nz;
	          }
	
	          attributes.normal.needsUpdate = true;
	        }
	
	        attributes.position.needsUpdate = true;
	
	        offset += 2 + size * 6;
	      }
	
	      // if (this.SUPPORT_TRANSFERABLE)
	      //   this._worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker
	
	      this._is_simulating = false;
	    }
	  }, {
	    key: '_updateVehicles',
	    value: function _updateVehicles(data) {
	      var vehicle = void 0,
	          wheel = void 0;
	
	      for (var i = 0; i < (data.length - 1) / _api.VEHICLEREPORT_ITEMSIZE; i++) {
	        var offset = 1 + i * _api.VEHICLEREPORT_ITEMSIZE;
	        vehicle = this._vehicles[data[offset]];
	
	        if (vehicle === null) continue;
	
	        wheel = vehicle.wheels[data[offset + 1]];
	
	        wheel.position.set(data[offset + 2], data[offset + 3], data[offset + 4]);
	
	        wheel.quaternion.set(data[offset + 5], data[offset + 6], data[offset + 7], data[offset + 8]);
	      }
	
	      if (this.SUPPORT_TRANSFERABLE) this._worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker
	    }
	  }, {
	    key: '_updateConstraints',
	    value: function _updateConstraints(data) {
	      var constraint = void 0,
	          object = void 0;
	
	      for (var i = 0; i < (data.length - 1) / _api.CONSTRAINTREPORT_ITEMSIZE; i++) {
	        var offset = 1 + i * _api.CONSTRAINTREPORT_ITEMSIZE;
	        constraint = this._constraints[data[offset]];
	        object = this._objects[data[offset + 1]];
	
	        if (constraint === undefined || object === undefined) continue;
	
	        _api.temp1Vector3.set(data[offset + 2], data[offset + 3], data[offset + 4]);
	
	        _api.temp1Matrix4.extractRotation(object.matrix);
	        _api.temp1Vector3.applyMatrix4(_api.temp1Matrix4);
	
	        constraint.positiona.addVectors(object.position, _api.temp1Vector3);
	        constraint.appliedImpulse = data[offset + 5];
	      }
	
	      if (this.SUPPORT_TRANSFERABLE) this._worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker
	    }
	  }, {
	    key: '_updateCollisions',
	    value: function _updateCollisions(data) {
	      /**
	       * #TODO
	       * This is probably the worst way ever to handle collisions. The inherent evilness is a residual
	       * effect from the previous version's evilness which mutated when switching to transferable objects.
	       *
	       * If you feel inclined to make this better, please do so.
	       */
	
	      var collisions = {},
	          normal_offsets = {};
	
	      // Build collision manifest
	      for (var i = 0; i < data[1]; i++) {
	        var offset = 2 + i * _api.COLLISIONREPORT_ITEMSIZE;
	        var object = data[offset];
	        var object2 = data[offset + 1];
	
	        normal_offsets[object + '-' + object2] = offset + 2;
	        normal_offsets[object2 + '-' + object] = -1 * (offset + 2);
	
	        // Register collisions for both the object colliding and the object being collided with
	        if (!collisions[object]) collisions[object] = [];
	        collisions[object].push(object2);
	
	        if (!collisions[object2]) collisions[object2] = [];
	        collisions[object2].push(object);
	      }
	
	      // Deal with collisions
	      for (var id1 in this._objects) {
	        if (!this._objects.hasOwnProperty(id1)) continue;
	        var _object = this._objects[id1];
	        if (_object === null) continue;
	
	        // If object touches anything, ...
	        if (collisions[id1]) {
	          // Clean up touches array
	          for (var j = 0; j < _object._physijs.touches.length; j++) {
	            if (collisions[id1].indexOf(_object._physijs.touches[j]) === -1) _object._physijs.touches.splice(j--, 1);
	          }
	
	          // Handle each colliding object
	          for (var _j = 0; _j < collisions[id1].length; _j++) {
	            var id2 = collisions[id1][_j];
	            var _object2 = this._objects[id2];
	
	            if (_object2) {
	              // If object was not already touching object2, notify object
	              if (_object._physijs.touches.indexOf(id2) === -1) {
	                _object._physijs.touches.push(id2);
	
	                _api.temp1Vector3.subVectors(_object.getLinearVelocity(), _object2.getLinearVelocity());
	                var temp1 = _api.temp1Vector3.clone();
	
	                _api.temp1Vector3.subVectors(_object.getAngularVelocity(), _object2.getAngularVelocity());
	                var temp2 = _api.temp1Vector3.clone();
	
	                var normal_offset = normal_offsets[_object._physijs.id + '-' + _object2._physijs.id];
	
	                if (normal_offset > 0) {
	                  _api.temp1Vector3.set(-data[normal_offset], -data[normal_offset + 1], -data[normal_offset + 2]);
	                } else {
	                  normal_offset *= -1;
	
	                  _api.temp1Vector3.set(data[normal_offset], data[normal_offset + 1], data[normal_offset + 2]);
	                }
	
	                _object.dispatchEvent('collision', _object2, temp1, temp2, _api.temp1Vector3);
	              }
	            }
	          }
	        } else _object._physijs.touches.length = 0; // not touching other objects
	      }
	
	      this.collisions = collisions;
	
	      if (this.SUPPORT_TRANSFERABLE) this._worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker
	    }
	  }, {
	    key: 'addConstraint',
	    value: function addConstraint(constraint, show_marker) {
	      this._constraints[constraint.id] = constraint;
	      this.execute('addConstraint', constraint.getDefinition());
	
	      if (show_marker) {
	        var marker = void 0;
	
	        switch (constraint.type) {
	          case 'point':
	            marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());
	
	            marker.position.copy(constraint.positiona);
	            this._objects[constraint.objecta].add(marker);
	            break;
	
	          case 'hinge':
	            marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());
	
	            marker.position.copy(constraint.positiona);
	            this._objects[constraint.objecta].add(marker);
	            break;
	
	          case 'slider':
	            marker = new THREE.Mesh(new THREE.BoxGeometry(10, 1, 1), new THREE.MeshNormalMaterial());
	
	            marker.position.copy(constraint.positiona);
	
	            // This rotation isn't right if all three axis are non-0 values
	            // TODO: change marker's rotation order to ZYX
	            marker.rotation.set(constraint.axis.y, // yes, y and
	            constraint.axis.x, // x axis are swapped
	            constraint.axis.z);
	            this._objects[constraint.objecta].add(marker);
	            break;
	
	          case 'conetwist':
	            marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());
	
	            marker.position.copy(constraint.positiona);
	            this._objects[constraint.objecta].add(marker);
	            break;
	
	          case 'dof':
	            marker = new THREE.Mesh(new THREE.SphereGeometry(1.5), new THREE.MeshNormalMaterial());
	
	            marker.position.copy(constraint.positiona);
	            this._objects[constraint.objecta].add(marker);
	            break;
	          default:
	        }
	      }
	
	      return constraint;
	    }
	  }, {
	    key: 'onSimulationResume',
	    value: function onSimulationResume() {
	      this.execute('onSimulationResume', {});
	    }
	  }, {
	    key: 'removeConstraint',
	    value: function removeConstraint(constraint) {
	      if (this._constraints[constraint.id] !== undefined) {
	        this.execute('removeConstraint', { id: constraint.id });
	        delete this._constraints[constraint.id];
	      }
	    }
	  }, {
	    key: 'execute',
	    value: function execute(cmd, params) {
	      this._worker.postMessage({ cmd: cmd, params: params });
	    }
	  }, {
	    key: 'add',
	    value: function add(object) {
	      THREE.Mesh.prototype.add.call(this, object);
	
	      if (object._physijs) {
	        object.world = this;
	
	        if (object instanceof _vehicle.Vehicle) {
	          this.add(object.mesh);
	          this._vehicles[object._physijs.id] = object;
	          this.execute('addVehicle', object._physijs);
	        } else {
	          object.__dirtyPosition = false;
	          object.__dirtyRotation = false;
	          this._objects[object._physijs.id] = object;
	
	          if (object.children.length) {
	            object._physijs.children = [];
	            (0, _api.addObjectChildren)(object, object);
	          }
	
	          if (object.material._physijs) {
	            if (this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) this._materials_ref_counts[object.material._physijs.id]++;else {
	              this.execute('registerMaterial', object.material._physijs);
	              object._physijs.materialId = object.material._physijs.id;
	              this._materials_ref_counts[object.material._physijs.id] = 1;
	            }
	          }
	
	          // Object starting position + rotation
	          object._physijs.position = {
	            x: object.position.x,
	            y: object.position.y,
	            z: object.position.z
	          };
	
	          object._physijs.rotation = {
	            x: object.quaternion.x,
	            y: object.quaternion.y,
	            z: object.quaternion.z,
	            w: object.quaternion.w
	          };
	
	          // Check for scaling
	          // var mass_scaling = new THREE.Vector3(1, 1, 1);
	
	          if (object._physijs.width) object._physijs.width *= object.scale.x;
	          if (object._physijs.height) object._physijs.height *= object.scale.y;
	          if (object._physijs.depth) object._physijs.depth *= object.scale.z;
	
	          this.execute('addObject', object._physijs);
	        }
	      }
	    }
	  }, {
	    key: 'remove',
	    value: function remove(object) {
	      if (object instanceof _vehicle.Vehicle) {
	        this.execute('removeVehicle', { id: object._physijs.id });
	        while (object.wheels.length) {
	          this.remove(object.wheels.pop());
	        }this.remove(object.mesh);
	        this._vehicles[object._physijs.id] = null;
	      } else {
	        THREE.Mesh.prototype.remove.call(this, object);
	
	        if (object._physijs) {
	          this._objects[object._physijs.id] = null;
	          this.execute('removeObject', { id: object._physijs.id });
	        }
	      }
	      if (object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {
	        this._materials_ref_counts[object.material._physijs.id]--;
	
	        if (this._materials_ref_counts[object.material._physijs.id] === 0) {
	          this.execute('unRegisterMaterial', object.material._physijs);
	          this._materials_ref_counts[object.material._physijs.id] = null;
	        }
	      }
	    }
	  }, {
	    key: 'setFixedTimeStep',
	    value: function setFixedTimeStep(fixedTimeStep) {
	      if (fixedTimeStep) this.execute('setFixedTimeStep', fixedTimeStep);
	    }
	  }, {
	    key: 'setGravity',
	    value: function setGravity(gravity) {
	      if (gravity) this.execute('setGravity', gravity);
	    }
	  }, {
	    key: 'simulate',
	    value: function simulate(timeStep, maxSubSteps) {
	      if (this._stats) this._stats.begin();
	
	      if (this._is_simulating) return false;
	
	      this._is_simulating = true;
	
	      for (var object_id in this._objects) {
	        if (!this._objects.hasOwnProperty(object_id)) continue;
	
	        var object = this._objects[object_id];
	
	        if (object !== null && (object.__dirtyPosition || object.__dirtyRotation)) {
	          var update = { id: object._physijs.id };
	
	          if (object.__dirtyPosition) {
	            update.pos = {
	              x: object.position.x,
	              y: object.position.y,
	              z: object.position.z
	            };
	
	            if (object._physijs.type === 'softbody') object.position.set(0, 0, 0);
	
	            object.__dirtyPosition = false;
	          }
	
	          if (object.__dirtyRotation) {
	            update.quat = {
	              x: object.quaternion.x,
	              y: object.quaternion.y,
	              z: object.quaternion.z,
	              w: object.quaternion.w
	            };
	
	            if (object._physijs.type === 'softbody') object.rotation.set(0, 0, 0);
	
	            object.__dirtyRotation = false;
	          }
	
	          this.execute('updateTransform', update);
	        }
	      }
	
	      this.execute('simulate', { timeStep: timeStep, maxSubSteps: maxSubSteps });
	
	      if (this._stats) this._stats.end();
	      return true;
	    }
	  }]);
	  return Scene;
	}(THREE.Scene);

/***/ },
/* 414 */
/***/ function(module, exports) {

	var __webpack_require__ = arguments[2];
	var sources = __webpack_require__.m;
	var ENTRY_MODULE = __webpack_require__.s || "0";
	// In webpack 2 the moduleId property is called `i` instead of `id`.
	var webworkifyWebpackModuleId = arguments[0].id || arguments[0].i;
	
	var webpackBootstrapFunc = function(modules) {
	    var installedModules = {};
	    function __webpack_require__(moduleId) {
	      if(installedModules[moduleId])
	        return installedModules[moduleId].exports;
	      var module = installedModules[moduleId] = {
	        exports: {},
	        id: moduleId,
	        loaded: false
	      };
	      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	      module.loaded = true;
	      return module.exports;
	    }
	    __webpack_require__.m = modules;
	    __webpack_require__.c = installedModules;
	    __webpack_require__.oe = function(err) { throw err; };
	    __webpack_require__.p = "";
	    var f = __webpack_require__(__webpack_require__.s = entryModule);
	    return f.default || f; // try to call default if defined to also support babel esmodule exports
	}
	
	// http://stackoverflow.com/a/2593661/130442
	function quoteRegExp(str) {
	    return (str+'').replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
	}
	
	module.exports = function (fn) {
	    var moduleWrapperStrings = [];
	    var potentialFnModuleIds = [ENTRY_MODULE];
	
	    var sourcesKeys = Object.keys(sources); // when using the CommonChunks plugin, webpacl sometimes storing sources in object instead of array
	
	
	    // first, find the modules that required webworkify-webpack, and note their requires so that we can limit the number of potential duplicate matches
	    // while we're at it, save the string version for use later
	    var key;
	    for (var i = 0, l = sourcesKeys.length; i < l; i++) {
	        var k = sourcesKeys[i];
	        if (!sources[k]) {
	            continue;
	        }
	        var wrapperFuncString = sources[k].toString();
	        moduleWrapperStrings[k] = wrapperFuncString;
	
	        // __webpack_require__ is the third argument passed to the wrapper function, but it may have been renamed by minification
	        var wrapperSignature = wrapperFuncString.match(/^function\s?\(\w+,\s*\w+,\s*(\w+)\)/);
	        if (!wrapperSignature) {
	          // no matches means the module doesn't use __webpack_require__, and we can skip it entirely
	          continue;
	        }
	
	        var webpackRequireName = wrapperSignature[1];
	        if (wrapperFuncString.indexOf(webpackRequireName + '(' + webworkifyWebpackModuleId + ')') > -1) {
	            // find all calls that look like __webpack_require__(\d+), and aren't webworkify-webpack
	            var re = new RegExp(quoteRegExp(webpackRequireName) + '\\((\\d+)\\)', 'g');
	            var match;
	            while (match = re.exec(wrapperFuncString)) {
	                if (match[1] != ('' + webworkifyWebpackModuleId)) {
	                    potentialFnModuleIds.push(match[1]);
	                }
	            }
	        }
	    }
	
	    var fnString = fn.toString()
	        // FF adds a "use strict"; to the function body
	        .replace(/"use strict";\n\n/, '');
	
	    var fnStringNoSpace = fnString
	        .replace(/^function\s?\((.*)\)(\s?)\{(\n"use strict";\n)?/, 'function($1)$2{');
	    var fnStringWithSpace = fnString
	        .replace(/^function\s?\((.*)\)(\s?)\{(\n"use strict";\n)?/, 'function ($1)$2{');
	
	    // find the first moduleId from the above list that contains fnString
	    var key = potentialFnModuleIds.find(function (moduleId) {
	        var wrapperFuncString = sources[moduleId].toString();
	        if (wrapperFuncString.indexOf(fnStringNoSpace) > -1 || wrapperFuncString.indexOf(fnStringWithSpace) > -1) {
	          var exp = __webpack_require__(moduleId);
	
	          // Using babel as a transpiler to use esmodule, the export will always
	          // be an object with the default export as a property of it. To ensure
	          // the existing api and babel esmodule exports are both supported we
	          // check for both
	          if (!(exp && (exp === fn || exp.default === fn))) {
	              moduleWrapperStrings[moduleId] = wrapperFuncString.substring(0, wrapperFuncString.length - 1) + '\n' + fnString.match(/function\s?(.+?)\s?\(.*/)[1] + '();\n}';
	          }
	
	          return true;
	        }
	
	        return false;
	    });
	
	    if (typeof key === 'undefined') {
	        throw new Error('webworkify-webpack: Could not locate module containing worker function! Make sure you aren\'t using eval sourcemaps and that you pass named functions to webworkify-webpack!');
	    }
	
	    // window = {}; => https://github.com/borisirota/webworkify-webpack/issues/1
	    var src = 'window = {};\n'
	        + 'var fn = (' + webpackBootstrapFunc.toString().replace('entryModule', key) + ')(['
	        + moduleWrapperStrings.join(',')
	        + ']);\n'
	        + '(typeof fn === "function") && fn(self);'; // not a function when calling a function from the current scope
	
	    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;
	
	    return new Worker(URL.createObjectURL(
	        new Blob([src], { type: 'text/javascript' })
	    ));
	};


/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Vehicle = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _tunning = __webpack_require__(416);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Vehicle = exports.Vehicle = function () {
	  function Vehicle(mesh) {
	    var tuning = arguments.length <= 1 || arguments[1] === undefined ? new VehicleTuning() : arguments[1];
	    (0, _classCallCheck3.default)(this, Vehicle);
	
	    this.mesh = mesh;
	    this.wheels = [];
	
	    this._physijs = {
	      id: getObjectId(),
	      rigidBody: mesh._physijs.id,
	      suspension_stiffness: tuning.suspension_stiffness,
	      suspension_compression: tuning.suspension_compression,
	      suspension_damping: tuning.suspension_damping,
	      max_suspension_travel: tuning.max_suspension_travel,
	      friction_slip: tuning.friction_slip,
	      max_suspension_force: tuning.max_suspension_force
	    };
	  }
	
	  (0, _createClass3.default)(Vehicle, [{
	    key: 'addWheel',
	    value: function addWheel(wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {
	      var wheel = new THREE.Mesh(wheel_geometry, wheel_material);
	
	      wheel.castShadow = wheel.receiveShadow = true;
	      wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);
	
	      this.world.add(wheel);
	      this.wheels.push(wheel);
	
	      this.world.execute('addWheel', {
	        id: this._physijs.id,
	        connection_point: { x: connection_point.x, y: connection_point.y, z: connection_point.z },
	        wheel_direction: { x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z },
	        wheel_axle: { x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z },
	        suspension_rest_length: suspension_rest_length,
	        wheel_radius: wheel_radius,
	        is_front_wheel: is_front_wheel,
	        tuning: tuning
	      });
	    }
	  }, {
	    key: 'setSteering',
	    value: function setSteering(amount, wheel) {
	      if (wheel !== undefined && this.wheels[wheel] !== undefined) this.world.execute('setSteering', { id: this._physijs.id, wheel: wheel, steering: amount });else if (this.wheels.length > 0) {
	        for (var i = 0; i < this.wheels.length; i++) {
	          this.world.execute('setSteering', { id: this._physijs.id, wheel: i, steering: amount });
	        }
	      }
	    }
	  }, {
	    key: 'setBrake',
	    value: function setBrake(amount, wheel) {
	      if (wheel !== undefined && this.wheels[wheel] !== undefined) this.world.execute('setBrake', { id: this._physijs.id, wheel: wheel, brake: amount });else if (this.wheels.length > 0) {
	        for (var i = 0; i < this.wheels.length; i++) {
	          this.world.execute('setBrake', { id: this._physijs.id, wheel: i, brake: amount });
	        }
	      }
	    }
	  }, {
	    key: 'applyEngineForce',
	    value: function applyEngineForce(amount, wheel) {
	      if (wheel !== undefined && this.wheels[wheel] !== undefined) this.world.execute('applyEngineForce', { id: this._physijs.id, wheel: wheel, force: amount });else if (this.wheels.length > 0) {
	        for (var i = 0; i < this.wheels.length; i++) {
	          this.world.execute('applyEngineForce', { id: this._physijs.id, wheel: i, force: amount });
	        }
	      }
	    }
	  }]);
	  return Vehicle;
	}();

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.VehicleTunning = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var VehicleTunning = exports.VehicleTunning = function VehicleTunning() {
	  var suspension_stiffness = arguments.length <= 0 || arguments[0] === undefined ? 5.88 : arguments[0];
	  var suspension_compression = arguments.length <= 1 || arguments[1] === undefined ? 0.83 : arguments[1];
	  var suspension_damping = arguments.length <= 2 || arguments[2] === undefined ? 0.88 : arguments[2];
	  var max_suspension_travel = arguments.length <= 3 || arguments[3] === undefined ? 500 : arguments[3];
	  var friction_slip = arguments.length <= 4 || arguments[4] === undefined ? 10.5 : arguments[4];
	  var max_suspension_force = arguments.length <= 5 || arguments[5] === undefined ? 6000 : arguments[5];
	  (0, _classCallCheck3.default)(this, VehicleTunning);
	
	  this.suspension_stiffness = suspension_stiffness;
	  this.suspension_compression = suspension_compression;
	  this.suspension_damping = suspension_damping;
	  this.max_suspension_travel = max_suspension_travel;
	  this.friction_slip = friction_slip;
	  this.max_suspension_force = max_suspension_force;
	};

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _whsAmmo = __webpack_require__(418);
	
	var _whsAmmo2 = _interopRequireDefault(_whsAmmo);
	
	var _index = __webpack_require__(393);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = function (self) {
	  'use strict';
	
	  var transferableMessage = self.webkitPostMessage || self.postMessage,
	
	
	  // enum
	  MESSAGE_TYPES = {
	    WORLDREPORT: 0,
	    COLLISIONREPORT: 1,
	    VEHICLEREPORT: 2,
	    CONSTRAINTREPORT: 3,
	    SOFTREPORT: 4
	  },
	      softBodyHelpers = new _whsAmmo2.default.btSoftBodyHelpers();
	
	  // temp variables
	  var _object = void 0,
	      _vector = void 0,
	      _transform = void 0,
	      _transform_pos = void 0,
	      _softbody_enabled = false,
	      last_simulation_duration = 0,
	      _num_objects = 0,
	      _num_rigidbody_objects = 0,
	      _num_softbody_objects = 0,
	      _num_wheels = 0,
	      _num_constraints = 0,
	      _softbody_report_size = 0,
	
	
	  // world variables
	  fixedTimeStep = void 0,
	      // used when calling stepSimulation
	  last_simulation_time = void 0,
	      world = void 0,
	      _vec3_1 = void 0,
	      _vec3_2 = void 0,
	      _vec3_3 = void 0,
	      _quat = void 0;
	
	  // private cache
	  var public_functions = {},
	      _objects = [],
	      _vehicles = [],
	      _constraints = [],
	      _objects_ammo = {},
	      _object_shapes = {},
	
	
	  // The following objects are to track objects that ammo.js doesn't clean
	  // up. All are cleaned up when they're corresponding body is destroyed.
	  // Unfortunately, it's very difficult to get at these objects from the
	  // body, so we have to track them ourselves.
	  _motion_states = {},
	
	  // Don't need to worry about it for cached shapes.
	  _noncached_shapes = {},
	
	  // A body with a compound shape always has a regular shape as well, so we
	  // have track them separately.
	  _compound_shapes = {};
	
	  // object reporting
	  var REPORT_CHUNKSIZE = void 0,
	      // report array is increased in increments of this chunk size
	  worldreport = void 0,
	      softreport = void 0,
	      collisionreport = void 0,
	      vehiclereport = void 0,
	      constraintreport = void 0;
	
	  var WORLDREPORT_ITEMSIZE = 14,
	      // how many float values each reported item needs
	  COLLISIONREPORT_ITEMSIZE = 5,
	      // one float for each object id, and a Vec3 contact normal
	  VEHICLEREPORT_ITEMSIZE = 9,
	      // vehicle id, wheel index, 3 for position, 4 for rotation
	  CONSTRAINTREPORT_ITEMSIZE = 6; // constraint id, offset object, offset, applied impulse
	
	  var ab = new ArrayBuffer(1);
	
	  transferableMessage(ab, [ab]);
	  var SUPPORT_TRANSFERABLE = ab.byteLength === 0;
	
	  var getShapeFromCache = function getShapeFromCache(cache_key) {
	    if (_object_shapes[cache_key] !== undefined) return _object_shapes[cache_key];
	
	    return null;
	  };
	
	  var setShapeCache = function setShapeCache(cache_key, shape) {
	    _object_shapes[cache_key] = shape;
	  };
	
	  var createShape = function createShape(description) {
	    var shape = void 0;
	
	    _transform.setIdentity();
	    switch (description.type) {
	      case 'plane':
	        {
	          var cache_key = 'plane_' + description.normal.x + '_' + description.normal.y + '_' + description.normal.z;
	
	          if ((shape = getShapeFromCache(cache_key)) === null) {
	            _vec3_1.setX(description.normal.x);
	            _vec3_1.setY(description.normal.y);
	            _vec3_1.setZ(description.normal.z);
	            shape = new _whsAmmo2.default.btStaticPlaneShape(_vec3_1, 0);
	            setShapeCache(cache_key, shape);
	          }
	
	          break;
	        }
	      case 'box':
	        {
	          var _cache_key = 'box_' + description.width + '_' + description.height + '_' + description.depth;
	
	          if ((shape = getShapeFromCache(_cache_key)) === null) {
	            _vec3_1.setX(description.width / 2);
	            _vec3_1.setY(description.height / 2);
	            _vec3_1.setZ(description.depth / 2);
	            shape = new _whsAmmo2.default.btBoxShape(_vec3_1);
	            setShapeCache(_cache_key, shape);
	          }
	
	          break;
	        }
	      case 'sphere':
	        {
	          var _cache_key2 = 'sphere_' + description.radius;
	
	          if ((shape = getShapeFromCache(_cache_key2)) === null) {
	            shape = new _whsAmmo2.default.btSphereShape(description.radius);
	            setShapeCache(_cache_key2, shape);
	          }
	
	          break;
	        }
	      case 'cylinder':
	        {
	          var _cache_key3 = 'cylinder_' + description.width + '_' + description.height + '_' + description.depth;
	
	          if ((shape = getShapeFromCache(_cache_key3)) === null) {
	            _vec3_1.setX(description.width / 2);
	            _vec3_1.setY(description.height / 2);
	            _vec3_1.setZ(description.depth / 2);
	            shape = new _whsAmmo2.default.btCylinderShape(_vec3_1);
	            setShapeCache(_cache_key3, shape);
	          }
	
	          break;
	        }
	      case 'capsule':
	        {
	          var _cache_key4 = 'capsule_' + description.radius + '_' + description.height;
	
	          if ((shape = getShapeFromCache(_cache_key4)) === null) {
	            // In Bullet, capsule height excludes the end spheres
	            shape = new _whsAmmo2.default.btCapsuleShape(description.radius, description.height - 2 * description.radius);
	            setShapeCache(_cache_key4, shape);
	          }
	
	          break;
	        }
	      case 'cone':
	        {
	          var _cache_key5 = 'cone_' + description.radius + '_' + description.height;
	
	          if ((shape = getShapeFromCache(_cache_key5)) === null) {
	            shape = new _whsAmmo2.default.btConeShape(description.radius, description.height);
	            setShapeCache(_cache_key5, shape);
	          }
	
	          break;
	        }
	      case 'concave':
	        {
	          var triangle_mesh = new _whsAmmo2.default.btTriangleMesh();
	          if (!description.data.length) return false;
	          var data = description.data;
	
	          for (var i = 0; i < data.length / 9; i++) {
	            _vec3_1.setX(data[i * 9]);
	            _vec3_1.setY(data[i * 9 + 1]);
	            _vec3_1.setZ(data[i * 9 + 2]);
	
	            _vec3_2.setX(data[i * 9 + 3]);
	            _vec3_2.setY(data[i * 9 + 4]);
	            _vec3_2.setZ(data[i * 9 + 5]);
	
	            _vec3_3.setX(data[i * 9 + 6]);
	            _vec3_3.setY(data[i * 9 + 7]);
	            _vec3_3.setZ(data[i * 9 + 8]);
	
	            triangle_mesh.addTriangle(_vec3_1, _vec3_2, _vec3_3, false);
	          }
	
	          shape = new _whsAmmo2.default.btBvhTriangleMeshShape(triangle_mesh, true, true);
	
	          _noncached_shapes[description.id] = shape;
	
	          break;
	        }
	      case 'convex':
	        {
	          shape = new _whsAmmo2.default.btConvexHullShape();
	          var _data = description.data;
	
	          for (var _i = 0; _i < _data.length / 3; _i++) {
	            _vec3_1.setX(_data[_i * 3]);
	            _vec3_1.setY(_data[_i * 3 + 1]);
	            _vec3_1.setZ(_data[_i * 3 + 2]);
	
	            shape.addPoint(_vec3_1);
	          }
	
	          _noncached_shapes[description.id] = shape;
	
	          break;
	        }
	      case 'heightfield':
	        {
	          var xpts = description.xpts,
	              ypts = description.ypts,
	              points = description.points,
	              ptr = _whsAmmo2.default._malloc(4 * xpts * ypts);
	
	          for (var _i2 = 0, p = 0, p2 = 0; _i2 < xpts; _i2++) {
	            for (var j = 0; j < ypts; j++) {
	              _whsAmmo2.default.HEAPF32[ptr + p2 >> 2] = points[p];
	
	              p++;
	              p2 += 4;
	            }
	          }
	
	          shape = new _whsAmmo2.default.btHeightfieldTerrainShape(description.xpts, description.ypts, ptr, 1, -description.absMaxHeight, description.absMaxHeight, 2, 'PHY_FLOAT', false);
	
	          _vec3_1.setX(description.xsize / (description.xpts - 1));
	          _vec3_1.setY(description.ysize / (description.ypts - 1));
	          _vec3_1.setZ(1);
	
	          shape.setLocalScaling(_vec3_1);
	          _noncached_shapes[description.id] = shape;
	          break;
	        }
	      default:
	        // Not recognized
	        return;
	    }
	
	    return shape;
	  };
	
	  var createSoftBody = function createSoftBody(description) {
	    var body = void 0;
	
	    switch (description.type) {
	      case 'softTrimesh':
	        {
	          if (!description.aVertices.length) return false;
	
	          body = softBodyHelpers.CreateFromTriMesh(world.getWorldInfo(), description.aVertices, description.aIndices, description.aIndices.length / 3, true);
	
	          break;
	        }
	      case 'softClothMesh':
	        {
	          var cr = description.corners;
	
	          body = softBodyHelpers.CreatePatch(world.getWorldInfo(), new _whsAmmo2.default.btVector3(cr[0], cr[1], cr[2]), new _whsAmmo2.default.btVector3(cr[3], cr[4], cr[5]), new _whsAmmo2.default.btVector3(cr[6], cr[7], cr[8]), new _whsAmmo2.default.btVector3(cr[9], cr[10], cr[11]), description.segments[0], description.segments[1], 0, true);
	
	          break;
	        }
	      case 'softRopeMesh':
	        {
	          var data = description.data;
	
	          body = softBodyHelpers.CreateRope(world.getWorldInfo(), new _whsAmmo2.default.btVector3(data[0], data[1], data[2]), new _whsAmmo2.default.btVector3(data[3], data[4], data[5]), data[6] - 1, 0);
	
	          break;
	        }
	      default:
	        // Not recognized
	        return;
	    }
	
	    return body;
	  };
	
	  public_functions.init = function () {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    _transform = new _whsAmmo2.default.btTransform();
	    _transform_pos = new _whsAmmo2.default.btTransform();
	    _vec3_1 = new _whsAmmo2.default.btVector3(0, 0, 0);
	    _vec3_2 = new _whsAmmo2.default.btVector3(0, 0, 0);
	    _vec3_3 = new _whsAmmo2.default.btVector3(0, 0, 0);
	    _quat = new _whsAmmo2.default.btQuaternion(0, 0, 0, 0);
	
	    REPORT_CHUNKSIZE = params.reportsize || 50;
	
	    if (SUPPORT_TRANSFERABLE) {
	      // Transferable messages are supported, take advantage of them with TypedArrays
	      worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object
	      collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object
	      vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object
	      constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object
	    } else {
	      // Transferable messages are not supported, send data as normal arrays
	      worldreport = [];
	      collisionreport = [];
	      vehiclereport = [];
	      constraintreport = [];
	    }
	
	    worldreport[0] = MESSAGE_TYPES.WORLDREPORT;
	    collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;
	    vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
	    constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
	
	    var collisionConfiguration = params.whs.softbody ? new _whsAmmo2.default.btSoftBodyRigidBodyCollisionConfiguration() : new _whsAmmo2.default.btDefaultCollisionConfiguration(),
	        dispatcher = new _whsAmmo2.default.btCollisionDispatcher(collisionConfiguration),
	        solver = new _whsAmmo2.default.btSequentialImpulseConstraintSolver();
	
	    var broadphase = void 0;
	
	    if (!params.broadphase) params.broadphase = { type: 'dynamic' };
	    if (params.broadphase.type === 'sweepprune') {
	      (0, _index.extend)(params.broadphase, {
	        aabbmin: {
	          x: -50,
	          y: -50,
	          z: -50
	        },
	
	        aabbmax: {
	          x: 50,
	          y: 50,
	          z: 50
	        }
	      });
	    }
	
	    switch (params.broadphase.type) {
	      case 'sweepprune':
	        _vec3_1.setX(params.broadphase.aabbmin.x);
	        _vec3_1.setY(params.broadphase.aabbmin.y);
	        _vec3_1.setZ(params.broadphase.aabbmin.z);
	
	        _vec3_2.setX(params.broadphase.aabbmax.x);
	        _vec3_2.setY(params.broadphase.aabbmax.y);
	        _vec3_2.setZ(params.broadphase.aabbmax.z);
	
	        broadphase = new _whsAmmo2.default.btAxisSweep3(_vec3_1, _vec3_2);
	
	        break;
	      case 'dynamic':
	      default:
	        broadphase = new _whsAmmo2.default.btDbvtBroadphase();
	        break;
	    }
	
	    world = params.whs.softbody ? new _whsAmmo2.default.btSoftRigidDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration, new _whsAmmo2.default.btDefaultSoftBodySolver()) : new _whsAmmo2.default.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);
	    fixedTimeStep = params.fixedTimeStep;
	
	    if (params.whs.softbody) _softbody_enabled = true;
	
	    transferableMessage({ cmd: 'worldReady' });
	  };
	
	  public_functions.setFixedTimeStep = function (description) {
	    fixedTimeStep = description;
	  };
	
	  public_functions.setGravity = function (description) {
	    _vec3_1.setX(description.x);
	    _vec3_1.setY(description.y);
	    _vec3_1.setZ(description.z);
	    world.setGravity(_vec3_1);
	  };
	
	  public_functions.appendAnchor = function (description) {
	    _objects[description.obj].appendAnchor(description.node, _objects[description.obj2], description.collisionBetweenLinkedBodies, description.influence);
	  };
	
	  public_functions.addObject = function (description) {
	    var body = void 0,
	        motionState = void 0;
	
	    if (description.type.indexOf('soft') !== -1) {
	      body = createSoftBody(description);
	
	      var sbConfig = body.get_m_cfg(),
	          physParams = description.params;
	
	      if (physParams.viterations) sbConfig.set_viterations(physParams.viterations);
	      if (physParams.piterations) sbConfig.set_piterations(physParams.piterations);
	      if (physParams.diterations) sbConfig.set_diterations(physParams.diterations);
	      if (physParams.citerations) sbConfig.set_citerations(physParams.citerations);
	      sbConfig.set_collisions(0x11);
	      sbConfig.set_kDF(physParams.friction);
	      sbConfig.set_kDP(physParams.damping);
	      if (physParams.pressure) sbConfig.set_kPR(physParams.pressure);
	      if (physParams.drag) sbConfig.set_kDG(physParams.drag);
	      if (physParams.lift) sbConfig.set_kLF(physParams.lift);
	      if (physParams.anchorHardness) sbConfig.set_kAHR(physParams.anchorHardness);
	      if (physParams.rigidHardness) sbConfig.set_kCHR(physParams.rigidHardness);
	
	      if (physParams.klst) body.get_m_materials().at(0).set_m_kLST(physParams.klst);
	      if (physParams.kast) body.get_m_materials().at(0).set_m_kAST(physParams.kast);
	      if (physParams.kvst) body.get_m_materials().at(0).set_m_kVST(physParams.kvst);
	
	      _whsAmmo2.default.castObject(body, _whsAmmo2.default.btCollisionObject).getCollisionShape().setMargin(physParams.margin ? physParams.margin : 0.1);
	      body.setActivationState(physParams.state || 4);
	      body.type = 0; // SoftBody.
	      if (description.type === 'softRopeMesh') body.rope = true;
	
	      _transform.setIdentity();
	
	      _vec3_1.setX(description.position.x);
	      _vec3_1.setY(description.position.y);
	      _vec3_1.setZ(description.position.z);
	      _transform.setOrigin(_vec3_1);
	
	      _quat.setX(description.rotation.x);
	      _quat.setY(description.rotation.y);
	      _quat.setZ(description.rotation.z);
	      _quat.setW(description.rotation.w);
	      _transform.setRotation(_quat);
	
	      body.transform(_transform);
	
	      body.setTotalMass(description.mass, false);
	      world.addSoftBody(body, 1, -1);
	      _softbody_report_size += body.get_m_nodes().size();
	      _num_softbody_objects++;
	    } else {
	      var _physParams = description.params;
	      var shape = createShape(description);
	
	      if (!shape) return;
	
	      // If there are children then this is a compound shape
	      if (description.children) {
	        var compound_shape = new _whsAmmo2.default.btCompoundShape();
	        compound_shape.addChildShape(_transform, shape);
	
	        for (var i = 0; i < description.children.length; i++) {
	          var _child = description.children[i];
	
	          var trans = new _whsAmmo2.default.btTransform();
	          trans.setIdentity();
	
	          _vec3_1.setX(_child.position_offset.x);
	          _vec3_1.setY(_child.position_offset.y);
	          _vec3_1.setZ(_child.position_offset.z);
	          trans.setOrigin(_vec3_1);
	
	          _quat.setX(_child.rotation.x);
	          _quat.setY(_child.rotation.y);
	          _quat.setZ(_child.rotation.z);
	          _quat.setW(_child.rotation.w);
	          trans.setRotation(_quat);
	
	          shape = createShape(description.children[i]);
	          compound_shape.addChildShape(trans, shape);
	          _whsAmmo2.default.destroy(trans);
	        }
	
	        shape = compound_shape;
	        _compound_shapes[description.id] = shape;
	      }
	
	      _vec3_1.setX(0);
	      _vec3_1.setY(0);
	      _vec3_1.setZ(0);
	      shape.calculateLocalInertia(description.mass, _vec3_1);
	      if (_physParams.margin) shape.setMargin(_physParams.margin);
	
	      _transform.setIdentity();
	
	      _vec3_2.setX(description.position.x);
	      _vec3_2.setY(description.position.y);
	      _vec3_2.setZ(description.position.z);
	      _transform.setOrigin(_vec3_2);
	
	      _quat.setX(description.rotation.x);
	      _quat.setY(description.rotation.y);
	      _quat.setZ(description.rotation.z);
	      _quat.setW(description.rotation.w);
	      _transform.setRotation(_quat);
	
	      motionState = new _whsAmmo2.default.btDefaultMotionState(_transform); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement
	      var rbInfo = new _whsAmmo2.default.btRigidBodyConstructionInfo(description.mass, motionState, shape, _vec3_1);
	
	      rbInfo.set_m_friction(_physParams.friction);
	      rbInfo.set_m_restitution(_physParams.restitution);
	      rbInfo.set_m_linearDamping(_physParams.damping);
	      rbInfo.set_m_angularDamping(_physParams.damping);
	
	      body = new _whsAmmo2.default.btRigidBody(rbInfo);
	      body.setActivationState(_physParams.state || 4);
	      _whsAmmo2.default.destroy(rbInfo);
	
	      if (typeof description.collision_flags !== 'undefined') body.setCollisionFlags(description.collision_flags);
	
	      world.addRigidBody(body);
	      body.type = 1; // RigidBody.
	      _num_rigidbody_objects++;
	    }
	
	    body.activate();
	
	    body.id = description.id;
	    _objects[body.id] = body;
	    _motion_states[body.id] = motionState;
	
	    _objects_ammo[body.a === undefined ? body.ptr : body.a] = body.id;
	    _num_objects++;
	
	    transferableMessage({ cmd: 'objectReady', params: body.id });
	  };
	
	  public_functions.addVehicle = function (description) {
	    var vehicle_tuning = new _whsAmmo2.default.btVehicleTuning();
	
	    vehicle_tuning.set_m_suspensionStiffness(description.suspension_stiffness);
	    vehicle_tuning.set_m_suspensionCompression(description.suspension_compression);
	    vehicle_tuning.set_m_suspensionDamping(description.suspension_damping);
	    vehicle_tuning.set_m_maxSuspensionTravelCm(description.max_suspension_travel);
	    vehicle_tuning.set_m_maxSuspensionForce(description.max_suspension_force);
	
	    var vehicle = new _whsAmmo2.default.btRaycastVehicle(vehicle_tuning, _objects[description.rigidBody], new _whsAmmo2.default.btDefaultVehicleRaycaster(world));
	
	    vehicle.tuning = vehicle_tuning;
	    _objects[description.rigidBody].setActivationState(4);
	    vehicle.setCoordinateSystem(0, 1, 2);
	
	    world.addVehicle(vehicle);
	    _vehicles[description.id] = vehicle;
	  };
	  public_functions.removeVehicle = function (description) {
	    _vehicles[description.id] = null;
	  };
	
	  public_functions.addWheel = function (description) {
	    if (_vehicles[description.id] !== undefined) {
	      var tuning = _vehicles[description.id].tuning;
	      if (description.tuning !== undefined) {
	        tuning = new _whsAmmo2.default.btVehicleTuning();
	        tuning.set_m_suspensionStiffness(description.tuning.suspension_stiffness);
	        tuning.set_m_suspensionCompression(description.tuning.suspension_compression);
	        tuning.set_m_suspensionDamping(description.tuning.suspension_damping);
	        tuning.set_m_maxSuspensionTravelCm(description.tuning.max_suspension_travel);
	        tuning.set_m_maxSuspensionForce(description.tuning.max_suspension_force);
	      }
	
	      _vec3_1.setX(description.connection_point.x);
	      _vec3_1.setY(description.connection_point.y);
	      _vec3_1.setZ(description.connection_point.z);
	
	      _vec3_2.setX(description.wheel_direction.x);
	      _vec3_2.setY(description.wheel_direction.y);
	      _vec3_2.setZ(description.wheel_direction.z);
	
	      _vec3_3.setX(description.wheel_axle.x);
	      _vec3_3.setY(description.wheel_axle.y);
	      _vec3_3.setZ(description.wheel_axle.z);
	
	      _vehicles[description.id].addWheel(_vec3_1, _vec3_2, _vec3_3, description.suspension_rest_length, description.wheel_radius, tuning, description.is_front_wheel);
	    }
	
	    _num_wheels++;
	
	    if (SUPPORT_TRANSFERABLE) {
	      vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )
	      vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
	    } else vehiclereport = [MESSAGE_TYPES.VEHICLEREPORT];
	  };
	
	  public_functions.setSteering = function (details) {
	    if (_vehicles[details.id] !== undefined) _vehicles[details.id].setSteeringValue(details.steering, details.wheel);
	  };
	
	  public_functions.setBrake = function (details) {
	    if (_vehicles[details.id] !== undefined) _vehicles[details.id].setBrake(details.brake, details.wheel);
	  };
	
	  public_functions.applyEngineForce = function (details) {
	    if (_vehicles[details.id] !== undefined) _vehicles[details.id].applyEngineForce(details.force, details.wheel);
	  };
	
	  public_functions.removeObject = function (details) {
	    if (_objects[details.id].type === 0) {
	      _num_softbody_objects--;
	      _softbody_report_size -= _objects[details.id].get_m_nodes().size();
	      world.removeSoftBody(_objects[details.id]);
	    } else if (_objects[details.id].type === 1) {
	      _num_rigidbody_objects--;
	      world.removeRigidBody(_objects[details.id]);
	      _whsAmmo2.default.destroy(_motion_states[details.id]);
	    }
	
	    _whsAmmo2.default.destroy(_objects[details.id]);
	    if (_compound_shapes[details.id]) _whsAmmo2.default.destroy(_compound_shapes[details.id]);
	    if (_noncached_shapes[details.id]) _whsAmmo2.default.destroy(_noncached_shapes[details.id]);
	
	    _objects_ammo[_objects[details.id].a === undefined ? _objects[details.id].a : _objects[details.id].ptr] = null;
	    _objects[details.id] = null;
	    _motion_states[details.id] = null;
	
	    if (_compound_shapes[details.id]) _compound_shapes[details.id] = null;
	    if (_noncached_shapes[details.id]) _noncached_shapes[details.id] = null;
	    _num_objects--;
	  };
	
	  public_functions.updateTransform = function (details) {
	    _object = _objects[details.id];
	
	    if (_object.type === 1) {
	      _object.getMotionState().getWorldTransform(_transform);
	
	      if (details.pos) {
	        _vec3_1.setX(details.pos.x);
	        _vec3_1.setY(details.pos.y);
	        _vec3_1.setZ(details.pos.z);
	        _transform.setOrigin(_vec3_1);
	      }
	
	      if (details.quat) {
	        _quat.setX(details.quat.x);
	        _quat.setY(details.quat.y);
	        _quat.setZ(details.quat.z);
	        _quat.setW(details.quat.w);
	        _transform.setRotation(_quat);
	      }
	
	      _object.setWorldTransform(_transform);
	      _object.activate();
	    } else if (_object.type === 0) {
	      _object.getWorldTransform(_transform);
	
	      if (details.pos) {
	        _vec3_1.setX(details.pos.x);
	        _vec3_1.setY(details.pos.y);
	        _vec3_1.setZ(details.pos.z);
	        _transform.setOrigin(_vec3_1);
	      }
	
	      if (details.quat) {
	        _quat.setX(details.quat.x);
	        _quat.setY(details.quat.y);
	        _quat.setZ(details.quat.z);
	        _quat.setW(details.quat.w);
	        _transform.setRotation(_quat);
	      }
	
	      _object.transform(_transform);
	    }
	  };
	
	  public_functions.updateMass = function (details) {
	    // #TODO: changing a static object into dynamic is buggy
	    _object = _objects[details.id];
	
	    // Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816
	    world.removeRigidBody(_object);
	
	    _vec3_1.setX(0);
	    _vec3_1.setY(0);
	    _vec3_1.setZ(0);
	
	    _object.setMassProps(details.mass, _vec3_1);
	    world.addRigidBody(_object);
	    _object.activate();
	  };
	
	  public_functions.applyCentralImpulse = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].applyCentralImpulse(_vec3_1);
	    _objects[details.id].activate();
	  };
	
	  public_functions.applyImpulse = function (details) {
	    _vec3_1.setX(details.impulse_x);
	    _vec3_1.setY(details.impulse_y);
	    _vec3_1.setZ(details.impulse_z);
	
	    _vec3_2.setX(details.x);
	    _vec3_2.setY(details.y);
	    _vec3_2.setZ(details.z);
	
	    _objects[details.id].applyImpulse(_vec3_1, _vec3_2);
	    _objects[details.id].activate();
	  };
	
	  public_functions.applyTorque = function (details) {
	    _vec3_1.setX(details.torque_x);
	    _vec3_1.setY(details.torque_y);
	    _vec3_1.setZ(details.torque_z);
	
	    _objects[details.id].applyTorque(_vec3_1);
	    _objects[details.id].activate();
	  };
	
	  public_functions.applyCentralForce = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].applyCentralForce(_vec3_1);
	    _objects[details.id].activate();
	  };
	
	  public_functions.applyForce = function (details) {
	    _vec3_1.setX(details.force_x);
	    _vec3_1.setY(details.force_y);
	    _vec3_1.setZ(details.force_z);
	
	    _vec3_2.setX(details.x);
	    _vec3_2.setY(details.y);
	    _vec3_2.setZ(details.z);
	
	    _objects[details.id].applyForce(_vec3_1, _vec3_2);
	    _objects[details.id].activate();
	  };
	
	  public_functions.onSimulationResume = function () {
	    last_simulation_time = Date.now();
	  };
	
	  public_functions.setAngularVelocity = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].setAngularVelocity(_vec3_1);
	    _objects[details.id].activate();
	  };
	
	  public_functions.setLinearVelocity = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].setLinearVelocity(_vec3_1);
	    _objects[details.id].activate();
	  };
	
	  public_functions.setAngularFactor = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].setAngularFactor(_vec3_1);
	  };
	
	  public_functions.setLinearFactor = function (details) {
	    _vec3_1.setX(details.x);
	    _vec3_1.setY(details.y);
	    _vec3_1.setZ(details.z);
	
	    _objects[details.id].setLinearFactor(_vec3_1);
	  };
	
	  public_functions.setDamping = function (details) {
	    _objects[details.id].setDamping(details.linear, details.angular);
	  };
	
	  public_functions.setCcdMotionThreshold = function (details) {
	    _objects[details.id].setCcdMotionThreshold(details.threshold);
	  };
	
	  public_functions.setCcdSweptSphereRadius = function (details) {
	    _objects[details.id].setCcdSweptSphereRadius(details.radius);
	  };
	
	  public_functions.addConstraint = function (details) {
	    var constraint = void 0;
	
	    switch (details.type) {
	
	      case 'point':
	        {
	          if (details.objectb === undefined) {
	            _vec3_1.setX(details.positiona.x);
	            _vec3_1.setY(details.positiona.y);
	            _vec3_1.setZ(details.positiona.z);
	
	            constraint = new _whsAmmo2.default.btPoint2PointConstraint(_objects[details.objecta], _vec3_1);
	          } else {
	            _vec3_1.setX(details.positiona.x);
	            _vec3_1.setY(details.positiona.y);
	            _vec3_1.setZ(details.positiona.z);
	
	            _vec3_2.setX(details.positionb.x);
	            _vec3_2.setY(details.positionb.y);
	            _vec3_2.setZ(details.positionb.z);
	
	            constraint = new _whsAmmo2.default.btPoint2PointConstraint(_objects[details.objecta], _objects[details.objectb], _vec3_1, _vec3_2);
	          }
	          break;
	        }
	      case 'hinge':
	        {
	          if (details.objectb === undefined) {
	            _vec3_1.setX(details.positiona.x);
	            _vec3_1.setY(details.positiona.y);
	            _vec3_1.setZ(details.positiona.z);
	
	            _vec3_2.setX(details.axis.x);
	            _vec3_2.setY(details.axis.y);
	            _vec3_2.setZ(details.axis.z);
	
	            constraint = new _whsAmmo2.default.btHingeConstraint(_objects[details.objecta], _vec3_1, _vec3_2);
	          } else {
	            _vec3_1.setX(details.positiona.x);
	            _vec3_1.setY(details.positiona.y);
	            _vec3_1.setZ(details.positiona.z);
	
	            _vec3_2.setX(details.positionb.x);
	            _vec3_2.setY(details.positionb.y);
	            _vec3_2.setZ(details.positionb.z);
	
	            _vec3_3.setX(details.axis.x);
	            _vec3_3.setY(details.axis.y);
	            _vec3_3.setZ(details.axis.z);
	
	            constraint = new _whsAmmo2.default.btHingeConstraint(_objects[details.objecta], _objects[details.objectb], _vec3_1, _vec3_2, _vec3_3, _vec3_3);
	          }
	          break;
	        }
	      case 'slider':
	        {
	          var _transformb = void 0;
	          var _transforma = new _whsAmmo2.default.btTransform();
	
	          _vec3_1.setX(details.positiona.x);
	          _vec3_1.setY(details.positiona.y);
	          _vec3_1.setZ(details.positiona.z);
	
	          _transforma.setOrigin(_vec3_1);
	
	          var rotation = _transforma.getRotation();
	          rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);
	          _transforma.setRotation(rotation);
	
	          if (details.objectb) {
	            _transformb = new _whsAmmo2.default.btTransform();
	
	            _vec3_2.setX(details.positionb.x);
	            _vec3_2.setY(details.positionb.y);
	            _vec3_2.setZ(details.positionb.z);
	
	            _transformb.setOrigin(_vec3_2);
	
	            rotation = _transformb.getRotation();
	            rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);
	            _transformb.setRotation(rotation);
	
	            constraint = new _whsAmmo2.default.btSliderConstraint(_objects[details.objecta], _objects[details.objectb], _transforma, _transformb, true);
	          } else {
	            constraint = new _whsAmmo2.default.btSliderConstraint(_objects[details.objecta], _transforma, true);
	          }
	
	          _whsAmmo2.default.destroy(_transforma);
	          if (_transformb !== undefined) _whsAmmo2.default.destroy(_transformb);
	
	          break;
	        }
	      case 'conetwist':
	        {
	          var _transforma2 = new _whsAmmo2.default.btTransform();
	          _transforma2.setIdentity();
	
	          var _transformb2 = new _whsAmmo2.default.btTransform();
	          _transformb2.setIdentity();
	
	          _vec3_1.setX(details.positiona.x);
	          _vec3_1.setY(details.positiona.y);
	          _vec3_1.setZ(details.positiona.z);
	
	          _vec3_2.setX(details.positionb.x);
	          _vec3_2.setY(details.positionb.y);
	          _vec3_2.setZ(details.positionb.z);
	
	          _transforma2.setOrigin(_vec3_1);
	          _transformb2.setOrigin(_vec3_2);
	
	          var _rotation = _transforma2.getRotation();
	          _rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);
	          _transforma2.setRotation(_rotation);
	
	          _rotation = _transformb2.getRotation();
	          _rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);
	          _transformb2.setRotation(_rotation);
	
	          constraint = new _whsAmmo2.default.btConeTwistConstraint(_objects[details.objecta], _objects[details.objectb], _transforma2, _transformb2);
	
	          constraint.setLimit(Math.PI, 0, Math.PI);
	
	          _whsAmmo2.default.destroy(_transforma2);
	          _whsAmmo2.default.destroy(_transformb2);
	
	          break;
	        }
	      case 'dof':
	        {
	          var _transformb3 = void 0;
	
	          var _transforma3 = new _whsAmmo2.default.btTransform();
	          _transforma3.setIdentity();
	
	          _vec3_1.setX(details.positiona.x);
	          _vec3_1.setY(details.positiona.y);
	          _vec3_1.setZ(details.positiona.z);
	
	          _transforma3.setOrigin(_vec3_1);
	
	          var _rotation2 = _transforma3.getRotation();
	          _rotation2.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);
	          _transforma3.setRotation(_rotation2);
	
	          if (details.objectb) {
	            _transformb3 = new _whsAmmo2.default.btTransform();
	            _transformb3.setIdentity();
	
	            _vec3_2.setX(details.positionb.x);
	            _vec3_2.setY(details.positionb.y);
	            _vec3_2.setZ(details.positionb.z);
	
	            _transformb3.setOrigin(_vec3_2);
	
	            _rotation2 = _transformb3.getRotation();
	            _rotation2.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);
	            _transformb3.setRotation(_rotation2);
	
	            constraint = new _whsAmmo2.default.btGeneric6DofConstraint(_objects[details.objecta], _objects[details.objectb], _transforma3, _transformb3, true);
	          } else {
	            constraint = new _whsAmmo2.default.btGeneric6DofConstraint(_objects[details.objecta], _transforma3, true);
	          }
	
	          _whsAmmo2.default.destroy(_transforma3);
	          if (_transformb3 !== undefined) _whsAmmo2.default.destroy(_transformb3);
	
	          break;
	        }
	      default:
	        return;
	    }
	
	    world.addConstraint(constraint);
	
	    constraint.a = _objects[details.objecta];
	    constraint.b = _objects[details.objectb];
	
	    constraint.ta = transforma;
	    constraint.tb = transformb;
	
	    constraint.enableFeedback();
	    _constraints[details.id] = constraint;
	    _num_constraints++;
	
	    if (SUPPORT_TRANSFERABLE) {
	      constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )
	      constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
	    } else constraintreport = [MESSAGE_TYPES.CONSTRAINTREPORT];
	  };
	
	  public_functions.removeConstraint = function (details) {
	    var constraint = _constraints[details.id];
	
	    if (constraint !== undefined) {
	      world.removeConstraint(constraint);
	      _constraints[details.id] = null;
	      _num_constraints--;
	    }
	  };
	
	  public_functions.constraint_setBreakingImpulseThreshold = function (details) {
	    var constraint = _constraints[details.id];
	    if (constraint !== undefind) constraint.setBreakingImpulseThreshold(details.threshold);
	  };
	
	  public_functions.simulate = function () {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    if (world) {
	      if (params.timeStep && params.timeStep < fixedTimeStep) params.timeStep = fixedTimeStep;
	
	      params.maxSubSteps = params.maxSubSteps || Math.ceil(params.timeStep / fixedTimeStep); // If maxSubSteps is not defined, keep the simulation fully up to date
	
	      world.stepSimulation(params.timeStep, params.maxSubSteps, fixedTimeStep);
	
	      if (_vehicles.length > 0) reportVehicles();
	      reportCollisions();
	      if (_constraints.length > 0) reportConstraints();
	      reportWorld();
	      if (_softbody_enabled) reportWorld_softbodies();
	    }
	  };
	
	  // Constraint functions
	  public_functions.hinge_setLimits = function (params) {
	    _constraints[params.constraint].setLimit(params.low, params.high, 0, params.bias_factor, params.relaxation_factor);
	  };
	
	  public_functions.hinge_enableAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.enableAngularMotor(true, params.velocity, params.acceleration);
	    constraint.a.activate();
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.hinge_disableMotor = function (params) {
	    _constraints[params.constraint].enableMotor(false);
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.slider_setLimits = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setLowerLinLimit(params.lin_lower || 0);
	    constraint.setUpperLinLimit(params.lin_upper || 0);
	
	    constraint.setLowerAngLimit(params.ang_lower || 0);
	    constraint.setUpperAngLimit(params.ang_upper || 0);
	  };
	
	  public_functions.slider_setRestitution = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setSoftnessLimLin(params.linear || 0);
	    constraint.setSoftnessLimAng(params.angular || 0);
	  };
	
	  public_functions.slider_enableLinearMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setTargetLinMotorVelocity(params.velocity);
	    constraint.setMaxLinMotorForce(params.acceleration);
	    constraint.setPoweredLinMotor(true);
	    constraint.a.activate();
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.slider_disableLinearMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setPoweredLinMotor(false);
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.slider_enableAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setTargetAngMotorVelocity(params.velocity);
	    constraint.setMaxAngMotorForce(params.acceleration);
	    constraint.setPoweredAngMotor(true);
	    constraint.a.activate();
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.slider_disableAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setPoweredAngMotor(false);
	    constraint.a.activate();
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.conetwist_setLimit = function (params) {
	    _constraints[params.constraint].setLimit(params.z, params.y, params.x); // ZYX order
	  };
	
	  public_functions.conetwist_enableMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.enableMotor(true);
	    constraint.a.activate();
	    constraint.b.activate();
	  };
	
	  public_functions.conetwist_setMaxMotorImpulse = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.setMaxMotorImpulse(params.max_impulse);
	    constraint.a.activate();
	    constraint.b.activate();
	  };
	
	  public_functions.conetwist_setMotorTarget = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    _quat.setX(params.x);
	    _quat.setY(params.y);
	    _quat.setZ(params.z);
	    _quat.setW(params.w);
	
	    constraint.setMotorTarget(_quat);
	
	    constraint.a.activate();
	    constraint.b.activate();
	  };
	
	  public_functions.conetwist_disableMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	    constraint.enableMotor(false);
	    constraint.a.activate();
	    constraint.b.activate();
	  };
	
	  public_functions.dof_setLinearLowerLimit = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    _vec3_1.setX(params.x);
	    _vec3_1.setY(params.y);
	    _vec3_1.setZ(params.z);
	
	    constraint.setLinearLowerLimit(_vec3_1);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_setLinearUpperLimit = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    _vec3_1.setX(params.x);
	    _vec3_1.setY(params.y);
	    _vec3_1.setZ(params.z);
	
	    constraint.setLinearUpperLimit(_vec3_1);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_setAngularLowerLimit = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    _vec3_1.setX(params.x);
	    _vec3_1.setY(params.y);
	    _vec3_1.setZ(params.z);
	
	    constraint.setAngularLowerLimit(_vec3_1);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_setAngularUpperLimit = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    _vec3_1.setX(params.x);
	    _vec3_1.setY(params.y);
	    _vec3_1.setZ(params.z);
	
	    constraint.setAngularUpperLimit(_vec3_1);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_enableAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint];
	
	    var motor = constraint.getRotationalLimitMotor(params.which);
	    motor.set_m_enableMotor(true);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_configureAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint],
	        motor = constraint.getRotationalLimitMotor(params.which);
	
	    motor.set_m_loLimit(params.low_angle);
	    motor.set_m_hiLimit(params.high_angle);
	    motor.set_m_targetVelocity(params.velocity);
	    motor.set_m_maxMotorForce(params.max_force);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  public_functions.dof_disableAngularMotor = function (params) {
	    var constraint = _constraints[params.constraint],
	        motor = constraint.getRotationalLimitMotor(params.which);
	
	    motor.set_m_enableMotor(false);
	    constraint.a.activate();
	
	    if (constraint.b) constraint.b.activate();
	  };
	
	  var reportWorld = function reportWorld() {
	    if (SUPPORT_TRANSFERABLE && worldreport.length < 2 + _num_rigidbody_objects * WORLDREPORT_ITEMSIZE) {
	      worldreport = new Float32Array(2 // message id & # objects in report
	      + Math.ceil(_num_rigidbody_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE // # of values needed * item size
	      );
	
	      worldreport[0] = MESSAGE_TYPES.WORLDREPORT;
	    }
	
	    worldreport[1] = _num_rigidbody_objects; // record how many objects we're reporting on
	
	    {
	      var i = 0,
	          index = _objects.length;
	
	      while (index--) {
	        var object = _objects[index];
	
	        if (object && object.type === 1) {
	          // RigidBodies.
	          // #TODO: we can't use center of mass transform when center of mass can change,
	          //        but getMotionState().getWorldTransform() screws up on objects that have been moved
	          // object.getMotionState().getWorldTransform( transform );
	          // object.getMotionState().getWorldTransform(_transform);
	
	          var transform = object.getCenterOfMassTransform();
	          var origin = transform.getOrigin();
	          var rotation = transform.getRotation();
	
	          // add values to report
	          var offset = 2 + i++ * WORLDREPORT_ITEMSIZE;
	
	          worldreport[offset] = object.id;
	
	          worldreport[offset + 1] = origin.x();
	          worldreport[offset + 2] = origin.y();
	          worldreport[offset + 3] = origin.z();
	
	          worldreport[offset + 4] = rotation.x();
	          worldreport[offset + 5] = rotation.y();
	          worldreport[offset + 6] = rotation.z();
	          worldreport[offset + 7] = rotation.w();
	
	          _vector = object.getLinearVelocity();
	          worldreport[offset + 8] = _vector.x();
	          worldreport[offset + 9] = _vector.y();
	          worldreport[offset + 10] = _vector.z();
	
	          _vector = object.getAngularVelocity();
	          worldreport[offset + 11] = _vector.x();
	          worldreport[offset + 12] = _vector.y();
	          worldreport[offset + 13] = _vector.z();
	        }
	      }
	    }
	
	    if (SUPPORT_TRANSFERABLE) transferableMessage(worldreport.buffer, [worldreport.buffer]);else transferableMessage(worldreport);
	  };
	
	  var reportWorld_softbodies = function reportWorld_softbodies() {
	    // TODO: Add SUPPORTTRANSFERABLE.
	
	    softreport = new Float32Array(2 // message id & # objects in report
	    + _num_softbody_objects * 2 + _softbody_report_size * 6);
	
	    softreport[0] = MESSAGE_TYPES.SOFTREPORT;
	    softreport[1] = _num_softbody_objects; // record how many objects we're reporting on
	
	    {
	      var offset = 2,
	          index = _objects.length;
	
	      while (index--) {
	        var object = _objects[index];
	
	        if (object && object.type === 0) {
	          // SoftBodies.
	          var size = object.get_m_nodes().size();
	
	          softreport[offset] = object.id;
	          softreport[offset + 1] = size; // Vertices ammount.
	
	          var offsetVert = offset + 2;
	
	          if (object.rope === true) {
	            for (var i = 0; i < size; i++) {
	              var node = object.get_m_nodes().at(i);
	              var vert = node.get_m_x();
	              var off = offsetVert + i * 3;
	
	              softreport[off] = vert.x();
	              softreport[off + 1] = vert.y();
	              softreport[off + 2] = vert.z();
	            }
	          } else {
	            for (var _i3 = 0; _i3 < size; _i3++) {
	              var _node = object.get_m_nodes().at(_i3);
	              var _vert = _node.get_m_x();
	              var normal = _node.get_m_n();
	              var _off = offsetVert + _i3 * 6;
	
	              softreport[_off] = _vert.x();
	              softreport[_off + 1] = _vert.y();
	              softreport[_off + 2] = _vert.z();
	
	              softreport[_off + 3] = normal.x();
	              softreport[_off + 4] = normal.y();
	              softreport[_off + 5] = normal.z();
	            }
	          }
	
	          offset += size * 6 + 2;
	        }
	      }
	    }
	
	    // if (SUPPORT_TRANSFERABLE) transferableMessage(softreport.buffer, [softreport.buffer]);
	    // else transferableMessage(softreport);
	    transferableMessage(softreport);
	  };
	
	  var reportCollisions = function reportCollisions() {
	    var dp = world.getDispatcher(),
	        num = dp.getNumManifolds();
	    // _collided = false;
	
	    if (SUPPORT_TRANSFERABLE) {
	      if (collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE) {
	        collisionreport = new Float32Array(2 // message id & # objects in report
	        + Math.ceil(_num_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE // # of values needed * item size
	        );
	        collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;
	      }
	    }
	
	    collisionreport[1] = 0; // how many collisions we're reporting on
	
	    for (var i = 0; i < num; i++) {
	      var manifold = dp.getManifoldByIndexInternal(i),
	          num_contacts = manifold.getNumContacts();
	
	      if (num_contacts === 0) continue;
	
	      for (var j = 0; j < num_contacts; j++) {
	        var pt = manifold.getContactPoint(j);
	
	        // if ( pt.getDistance() < 0 ) {
	        var offset = 2 + collisionreport[1]++ * COLLISIONREPORT_ITEMSIZE;
	        collisionreport[offset] = _objects_ammo[manifold.getBody0().ptr];
	        collisionreport[offset + 1] = _objects_ammo[manifold.getBody1().ptr];
	
	        _vector = pt.get_m_normalWorldOnB();
	        collisionreport[offset + 2] = _vector.x();
	        collisionreport[offset + 3] = _vector.y();
	        collisionreport[offset + 4] = _vector.z();
	        break;
	        // }
	        // transferableMessage(_objects_ammo);
	      }
	    }
	
	    if (SUPPORT_TRANSFERABLE) transferableMessage(collisionreport.buffer, [collisionreport.buffer]);else transferableMessage(collisionreport);
	  };
	
	  var reportVehicles = function reportVehicles() {
	    if (SUPPORT_TRANSFERABLE) {
	      if (vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE) {
	        vehiclereport = new Float32Array(2 // message id & # objects in report
	        + Math.ceil(_num_wheels / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE // # of values needed * item size
	        );
	        vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
	      }
	    }
	
	    {
	      var i = 0,
	          j = 0,
	          index = _vehicles.length;
	
	      while (index--) {
	        if (_vehicles[index]) {
	          var vehicle = _vehicles[index];
	
	          for (j = 0; j < vehicle.getNumWheels(); j++) {
	            // vehicle.updateWheelTransform( j, true );
	            // transform = vehicle.getWheelTransformWS( j );
	            var transform = vehicle.getWheelInfo(j).get_m_worldTransform();
	
	            var origin = transform.getOrigin();
	            var rotation = transform.getRotation();
	
	            // add values to report
	            var offset = 1 + i++ * VEHICLEREPORT_ITEMSIZE;
	
	            vehiclereport[offset] = index;
	            vehiclereport[offset + 1] = j;
	
	            vehiclereport[offset + 2] = origin.x();
	            vehiclereport[offset + 3] = origin.y();
	            vehiclereport[offset + 4] = origin.z();
	
	            vehiclereport[offset + 5] = rotation.x();
	            vehiclereport[offset + 6] = rotation.y();
	            vehiclereport[offset + 7] = rotation.z();
	            vehiclereport[offset + 8] = rotation.w();
	          }
	        }
	      }
	
	      if (SUPPORT_TRANSFERABLE && j !== 0) transferableMessage(vehiclereport.buffer, [vehiclereport.buffer]);else if (j !== 0) transferableMessage(vehiclereport);
	    }
	  };
	
	  var reportConstraints = function reportConstraints() {
	    if (SUPPORT_TRANSFERABLE) {
	      if (constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE) {
	        constraintreport = new Float32Array(2 // message id & # objects in report
	        + Math.ceil(_num_constraints / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size
	        );
	        constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
	      }
	    }
	
	    {
	      var offset = 0,
	          i = 0,
	          index = _constraints.lenght;
	
	      while (index--) {
	        if (_constraints[index]) {
	          var _constraint = _constraints[index];
	          var offset_body = _constraint.a;
	          var transform = _constraint.ta;
	          var origin = transform.getOrigin();
	
	          // add values to report
	          offset = 1 + i++ * CONSTRAINTREPORT_ITEMSIZE;
	
	          constraintreport[offset] = index;
	          constraintreport[offset + 1] = offset_body.id;
	          constraintreport[offset + 2] = origin.x;
	          constraintreport[offset + 3] = origin.y;
	          constraintreport[offset + 4] = origin.z;
	          constraintreport[offset + 5] = _constraint.getBreakingImpulseThreshold();
	        }
	      }
	
	      if (SUPPORT_TRANSFERABLE && i !== 0) transferableMessage(constraintreport.buffer, [constraintreport.buffer]);else if (i !== 0) transferableMessage(constraintreport);
	    }
	  };
	
	  self.onmessage = function (event) {
	    if (event.data instanceof Float32Array) {
	      // transferable object
	      switch (event.data[0]) {
	        case MESSAGE_TYPES.WORLDREPORT:
	          {
	            worldreport = new Float32Array(event.data);
	            break;
	          }
	        case MESSAGE_TYPES.COLLISIONREPORT:
	          {
	            collisionreport = new Float32Array(event.data);
	            break;
	          }
	        case MESSAGE_TYPES.VEHICLEREPORT:
	          {
	            vehiclereport = new Float32Array(event.data);
	            break;
	          }
	        case MESSAGE_TYPES.CONSTRAINTREPORT:
	          {
	            constraintreport = new Float32Array(event.data);
	            break;
	          }
	        default:
	      }
	
	      return;
	    } else if (event.data.cmd && public_functions[event.data.cmd]) public_functions[event.data.cmd](event.data.params);
	  };
	};

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, __dirname, module) {
	// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.
	var AmmoLib = function(Module) {
	  Module = Module || {};
	
	var Module;if(!Module)Module=(typeof AmmoLib!=="undefined"?AmmoLib:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&"function"==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=console.log;if(!Module["printErr"])Module["printErr"]=console.warn;var nodeFS;var nodePath;Module["read"]=function read(filename,binary){if(!nodeFS)nodeFS=__webpack_require__(420);if(!nodePath)nodePath=__webpack_require__(421);filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(true){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.warn(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];if(!func){abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};cwrap=function cwrap(ident,returnType,argTypes){return(function(){return ccall(ident,returnType,argTypes,arguments)})}}))();function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}var ALLOC_NORMAL=0;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){return func}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var buffer;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||67108864;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){TOTAL_MEMORY=totalMemory}if(Module["buffer"]){buffer=Module["buffer"]}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[0]=255;if(HEAPU8[0]!==255||HEAPU8[3]!==0)throw"Typed arrays 2 must be run on a little-endian system";Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPreMain(cb){__ATMAIN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;Module["preloadedImages"]={};Module["preloadedAudios"]={};var ASM_CONSTS=[(function($0,$1,$2,$3,$4,$5,$6,$7){{var self=Module["getCache"](Module["ConcreteContactResultCallback"])[$0];if(!self.hasOwnProperty("addSingleResult"))throw"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";return self["addSingleResult"]($1,$2,$3,$4,$5,$6,$7)}})];function _emscripten_asm_const_diiiiiiii(code,a0,a1,a2,a3,a4,a5,a6,a7){return ASM_CONSTS[code](a0,a1,a2,a3,a4,a5,a6,a7)}STATIC_BASE=8;STATICTOP=STATIC_BASE+26272;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_btQuickprof_cpp()})});allocate([88,37,0,0,220,37,0,0,128,37,0,0,7,38,0,0,8,0,0,0,0,0,0,0,88,37,0,0,57,38,0,0,88,37,0,0,78,38,0,0,128,37,0,0,94,38,0,0,40,0,0,0,0,0,0,0,88,37,0,0,117,38,0,0,128,37,0,0,145,38,0,0,64,0,0,0,0,0,0,0,88,37,0,0,167,38,0,0,128,37,0,0,207,38,0,0,88,0,0,0,0,0,0,0,88,37,0,0,254,38,0,0,128,37,0,0,42,39,0,0,112,0,0,0,0,0,0,0,128,37,0,0,114,40,0,0,152,0,0,0,0,0,0,0,88,37,0,0,140,40,0,0,128,37,0,0,159,40,0,0,0,4,0,0,0,0,0,0,128,37,0,0,203,40,0,0,192,0,0,0,0,0,0,0,88,37,0,0,248,40,0,0,128,37,0,0,25,41,0,0,192,0,0,0,0,0,0,0,128,37,0,0,71,41,0,0,192,0,0,0,0,0,0,0,128,37,0,0,123,41,0,0,192,0,0,0,0,0,0,0,128,37,0,0,182,41,0,0,176,3,0,0,0,0,0,0,128,37,0,0,136,42,0,0,24,1,0,0,0,0,0,0,88,37,0,0,168,42,0,0,88,37,0,0,187,42,0,0,128,37,0,0,208,42,0,0,32,1,0,0,0,0,0,0,128,37,0,0,230,42,0,0,48,8,0,0,0,0,0,0,128,37,0,0,60,43,0,0,24,1,0,0,0,0,0,0,128,37,0,0,95,43,0,0,104,1,0,0,0,0,0,0,128,37,0,0,129,43,0,0,24,1,0,0,0,0,0,0,128,37,0,0,162,43,0,0,176,7,0,0,0,0,0,0,128,37,0,0,230,43,0,0,104,1,0,0,0,0,0,0,128,37,0,0,8,44,0,0,24,1,0,0,0,0,0,0,128,37,0,0,42,44,0,0,184,1,0,0,0,0,0,0,88,37,0,0,74,44,0,0,128,37,0,0,97,44,0,0,184,1,0,0,0,0,0,0,128,37,0,0,135,44,0,0,208,7,0,0,0,0,0,0,128,37,0,0,164,44,0,0,208,7,0,0,0,0,0,0,88,37,0,0,68,45,0,0,128,37,0,0,97,45,0,0,120,7,0,0,0,0,0,0,128,37,0,0,124,45,0,0,96,2,0,0,0,0,0,0,128,37,0,0,159,45,0,0,40,2,0,0,0,0,0,0,128,37,0,0,185,45,0,0,56,2,0,0,0,0,0,0,88,37,0,0,211,45,0,0,128,37,0,0,37,46,0,0,184,1,0,0,0,0,0,0,128,37,0,0,68,46,0,0,176,3,0,0,0,0,0,0,128,37,0,0,103,46,0,0,112,2,0,0,0,0,0,0,128,37,0,0,129,46,0,0,40,5,0,0,0,0,0,0,128,37,0,0,36,47,0,0,16,0,0,0,0,0,0,0,128,37,0,0,53,48,0,0,160,2,0,0,0,0,0,0,88,37,0,0,83,48,0,0,128,37,0,0,129,48,0,0,184,2,0,0,0,0,0,0,188,37,0,0,155,48,0,0,0,0,0,0,1,0,0,0,208,2,0,0,2,4,0,0,88,37,0,0,175,48,0,0,128,37,0,0,219,48,0,0,168,2,0,0,0,0,0,0,128,37,0,0,29,49,0,0,184,2,0,0,0,0,0,0,128,37,0,0,115,49,0,0,184,2,0,0,0,0,0,0,128,37,0,0,159,49,0,0,184,2,0,0,0,0,0,0,128,37,0,0,209,49,0,0,184,2,0,0,0,0,0,0,128,37,0,0,0,50,0,0,56,3,0,0,0,0,0,0,88,37,0,0,38,50,0,0,128,37,0,0,133,50,0,0,80,3,0,0,0,0,0,0,88,37,0,0,152,50,0,0,128,37,0,0,172,50,0,0,32,0,0,0,0,0,0,0,128,37,0,0,200,50,0,0,120,3,0,0,0,0,0,0,128,37,0,0,233,50,0,0,80,3,0,0,0,0,0,0,128,37,0,0,10,51,0,0,16,0,0,0,0,0,0,0,128,37,0,0,56,51,0,0,168,3,0,0,0,0,0,0,88,37,0,0,81,51,0,0,88,37,0,0,96,51,0,0,128,37,0,0,143,51,0,0,176,3,0,0,0,0,0,0,128,37,0,0,159,51,0,0,184,3,0,0,0,0,0,0,128,37,0,0,186,51,0,0,136,9,0,0,0,0,0,0,128,37,0,0,210,51,0,0,248,3,0,0,0,0,0,0,88,37,0,0,236,51,0,0,128,37,0,0,0,52,0,0,16,4,0,0,0,0,0,0,88,37,0,0,34,52,0,0,128,37,0,0,61,52,0,0,192,0,0,0,0,0,0,0,128,37,0,0,111,52,0,0,192,0,0,0,0,0,0,0,128,37,0,0,168,52,0,0,192,0,0,0,0,0,0,0,128,37,0,0,213,52,0,0,192,0,0,0,0,0,0,0,128,37,0,0,10,53,0,0,192,0,0,0,0,0,0,0,128,37,0,0,62,53,0,0,192,0,0,0,0,0,0,0,128,37,0,0,95,53,0,0,192,0,0,0,0,0,0,0,128,37,0,0,144,53,0,0,192,0,0,0,0,0,0,0,128,37,0,0,195,53,0,0,192,0,0,0,0,0,0,0,128,37,0,0,238,53,0,0,192,0,0,0,0,0,0,0,88,37,0,0,30,54,0,0,128,37,0,0,101,54,0,0,184,1,0,0,0,0,0,0,128,37,0,0,135,54,0,0,56,10,0,0,0,0,0,0,128,37,0,0,171,54,0,0,208,7,0,0,0,0,0,0,128,37,0,0,198,54,0,0,208,7,0,0,0,0,0,0,128,37,0,0,100,55,0,0,56,10,0,0,0,0,0,0,128,37,0,0,129,55,0,0,32,5,0,0,0,0,0,0,88,37,0,0,148,55,0,0,88,37,0,0,196,55,0,0,188,37,0,0,189,56,0,0,0,0,0,0,2,0,0,0,208,7,0,0,2,0,0,0,216,7,0,0,2,4,0,0,128,37,0,0,209,56,0,0,40,2,0,0,0,0,0,0,128,37,0,0,231,56,0,0,152,9,0,0,0,0,0,0,128,37,0,0,122,57,0,0,152,9,0,0,0,0,0,0,128,37,0,0,15,58,0,0,24,1,0,0,0,0,0,0,128,37,0,0,141,58,0,0,88,0,0,0,0,0,0,0,128,37,0,0,78,59,0,0,168,9,0,0,0,0,0,0,128,37,0,0,253,59,0,0,168,9,0,0,0,0,0,0,128,37,0,0,194,60,0,0,8,0,0,0,0,0,0,0,128,37,0,0,111,61,0,0,40,2,0,0,0,0,0,0,128,37,0,0,135,61,0,0,56,2,0,0,0,0,0,0,128,37,0,0,161,61,0,0,16,5,0,0,0,0,0,0,128,37,0,0,187,61,0,0,56,10,0,0,0,0,0,0,128,37,0,0,224,61,0,0,192,0,0,0,0,0,0,0,128,37,0,0,8,62,0,0,56,10,0,0,0,0,0,0,128,37,0,0,34,62,0,0,32,5,0,0,0,0,0,0,128,37,0,0,167,62,0,0,32,5,0,0,0,0,0,0,128,37,0,0,52,63,0,0,16,5,0,0,0,0,0,0,128,37,0,0,79,63,0,0,56,10,0,0,0,0,0,0,128,37,0,0,110,63,0,0,24,1,0,0,0,0,0,0,128,37,0,0,135,63,0,0,56,10,0,0,0,0,0,0,128,37,0,0,174,63,0,0,24,1,0,0,0,0,0,0,128,37,0,0,207,63,0,0,152,7,0,0,0,0,0,0,128,37,0,0,23,64,0,0,176,7,0,0,0,0,0,0,128,37,0,0,58,64,0,0,176,6,0,0,0,0,0,0,128,37,0,0,79,64,0,0,176,6,0,0,0,0,0,0,128,37,0,0,100,64,0,0,176,7,0,0,0,0,0,0,128,37,0,0,123,64,0,0,56,7,0,0,0,0,0,0,128,37,0,0,188,64,0,0,16,7,0,0,0,0,0,0,88,37,0,0,42,65,0,0,128,37,0,0,66,65,0,0,16,7,0,0,0,0,0,0,128,37,0,0,170,65,0,0,16,7,0,0,0,0,0,0,128,37,0,0,27,66,0,0,48,8,0,0,0,0,0,0,128,37,0,0,62,66,0,0,216,7,0,0,0,0,0,0,128,37,0,0,164,66,0,0,208,7,0,0,0,0,0,0,128,37,0,0,188,66,0,0,48,8,0,0,0,0,0,0,128,37,0,0,244,66,0,0,176,7,0,0,0,0,0,0,128,37,0,0,14,67,0,0,120,7,0,0,0,0,0,0,88,37,0,0,51,67,0,0,128,37,0,0,91,67,0,0,152,7,0,0,0,0,0,0,128,37,0,0,107,67,0,0,160,7,0,0,0,0,0,0,128,37,0,0,131,67,0,0,136,7,0,0,0,0,0,0,88,37,0,0,180,67,0,0,88,37,0,0,201,67,0,0,128,37,0,0,235,67,0,0,176,7,0,0,0,0,0,0,128,37,0,0,28,68,0,0,224,7,0,0,0,0,0,0,128,37,0,0,55,68,0,0,224,7,0,0,0,0,0,0,128,37,0,0,82,68,0,0,136,7,0,0,0,0,0,0,128,37,0,0,124,68,0,0,216,7,0,0,0,0,0,0,128,37,0,0,153,68,0,0,152,7,0,0,0,0,0,0,128,37,0,0,170,68,0,0,120,7,0,0,0,0,0,0,128,37,0,0,187,68,0,0,144,9,0,0,0,0,0,0,128,37,0,0,204,68,0,0,216,7,0,0,0,0,0,0,128,37,0,0,48,69,0,0,216,7,0,0,0,0,0,0,128,37,0,0,139,69,0,0,48,8,0,0,0,0,0,0,128,37,0,0,179,69,0,0,176,7,0,0,0,0,0,0,128,37,0,0,227,69,0,0,144,8,0,0,0,0,0,0,128,37,0,0,0,70,0,0,144,8,0,0,0,0,0,0,128,37,0,0,29,70,0,0,152,10,0,0,0,0,0,0,128,37,0,0,46,70,0,0,224,8,0,0,0,0,0,0,88,37,0,0,72,70,0,0,128,37,0,0,96,70,0,0,248,8,0,0,0,0,0,0,128,37,0,0,114,70,0,0,64,0,0,0,0,0,0,0,128,37,0,0,139,70,0,0,208,8,0,0,0,0,0,0,128,37,0,0,154,70,0,0,248,8,0,0,0,0,0,0,128,37,0,0,185,70,0,0,248,3,0,0,0,0,0,0,128,37,0,0,58,71,0,0,248,3,0,0,0,0,0,0,128,37,0,0,168,71,0,0,224,8,0,0,0,0,0,0,128,37,0,0,187,71,0,0,24,1,0,0,0,0,0,0,128,37,0,0,208,71,0,0,24,1,0,0,0,0,0,0,128,37,0,0,230,71,0,0,24,1,0,0,0,0,0,0,88,37,0,0,253,71,0,0,88,37,0,0,12,72,0,0,128,37,0,0,120,72,0,0,208,7,0,0,0,0,0,0,128,37,0,0,148,72,0,0,208,7,0,0,0,0,0,0,128,37,0,0,179,72,0,0,200,9,0,0,0,0,0,0,88,37,0,0,215,72,0,0,128,37,0,0,248,72,0,0,32,5,0,0,0,0,0,0,128,37,0,0,163,73,0,0,200,9,0,0,0,0,0,0,128,37,0,0,196,73,0,0,168,3,0,0,0,0,0,0,128,37,0,0,214,73,0,0,32,5,0,0,0,0,0,0,128,37,0,0,233,73,0,0,168,3,0,0,0,0,0,0,128,37,0,0,7,74,0,0,48,10,0,0,0,0,0,0,88,37,0,0,27,74,0,0,128,37,0,0,66,74,0,0,184,1,0,0,0,0,0,0,128,37,0,0,99,74,0,0,184,1,0,0,0,0,0,0,128,37,0,0,118,74,0,0,56,10,0,0,0,0,0,0,128,37,0,0,153,74,0,0,48,10,0,0,0,0,0,0,128,37,0,0,172,74,0,0,48,10,0,0,0,0,0,0,88,37,0,0,197,74,0,0,88,37,0,0,223,74,0,0,128,37,0,0,244,74,0,0,168,10,0,0,0,0,0,0,88,37,0,0,17,75,0,0,88,37,0,0,74,86,0,0,128,37,0,0,40,86,0,0,216,10,0,0,0,0,0,0,128,37,0,0,213,85,0,0,184,10,0,0,0,0,0,0,128,37,0,0,250,85,0,0,232,10,0,0,0,0,0,0,88,37,0,0,27,86,0,0,128,37,0,0,16,87,0,0,176,10,0,0,0,0,0,0,128,37,0,0,80,87,0,0,216,10,0,0,0,0,0,0,128,37,0,0,44,87,0,0,0,11,0,0,0,0,0,0,128,37,0,0,114,87,0,0,184,10,0,0,0,0,0,0,0,0,0,0,16,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,48,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,72,0,0,0,5,0,0,0,6,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,96,0,0,0,7,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,120,0,0,0,9,0,0,0,10,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,136,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,13,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,160,0,0,0,14,0,0,0,15,0,0,0,5,0,0,0,6,0,0,0,2,0,0,0,7,0,0,0,0,0,0,0,176,0,0,0,16,0,0,0,17,0,0,0,2,0,0,0,0,0,0,0,200,0,0,0,16,0,0,0,18,0,0,0,3,0,0,0,0,0,0,0,216,0,0,0,16,0,0,0,19,0,0,0,4,0,0,0,0,0,0,0,232,0,0,0,16,0,0,0,20,0,0,0,5,0,0,0,0,0,0,0,248,0,0,0,4,0,0,0,21,0,0,0,22,0,0,0,6,0,0,0,8,0,0,0,3,0,0,0,7,0,0,0,6,0,0,0,0,0,0,0,8,1,0,0,23,0,0,0,24,0,0,0,7,0,0,0,8,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,40,1,0,0,25,0,0,0,26,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,9,0,0,0,0,0,0,0,56,1,0,0,27,0,0,0,28,0,0,0,1,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,9,0,0,0,10,0,0,0,2,0,0,0,11,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,2,0,0,0,0,0,0,0,72,1,0,0,23,0,0,0,29,0,0,0,7,0,0,0,12,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,88,1,0,0,23,0,0,0,30,0,0,0,7,0,0,0,13,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,1,0,0,31,0,0,0,32,0,0,0,3,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,3,0,0,0,14,0,0,0,10,0,0,0,5,0,0,0,3,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,9,0,0,0,10,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,17,0,0,0,0,0,0,0,136,1,0,0,23,0,0,0,33,0,0,0,12,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,152,1,0,0,23,0,0,0,34,0,0,0,13,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,168,1,0,0,35,0,0,0,36,0,0,0,2,0,0,0,1,0,0,0,16,0,0,0,0,0,0,0,192,1,0,0,37,0,0,0,38,0,0,0,3,0,0,0,2,0,0,0,17,0,0,0,0,0,0,0,208,1,0,0,39,0,0,0,40,0,0,0,6,0,0,0,0,0,0,0,224,1,0,0,41,0,0,0,42,0,0,0,7,0,0,0,0,0,0,0,240,1,0,0,6,0,0,0,18,0,0,0,14,0,0,0,43,0,0,0,44,0,0,0,0,0,0,0,248,1,0,0,45,0,0,0,46,0,0,0,8,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,4,0,0,0,18,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,15,0,0,0,16,0,0,0,1,0,0,0,9,0,0,0,5,0,0,0,19,0,0,0,17,0,0,0,7,0,0,0,20,0,0,0,21,0,0,0,10,0,0,0,18,0,0,0,22,0,0,0,11,0,0,0,1,0,0,0,12,0,0,0,0,0,0,0,8,2,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,19,0,0,0,23,0,0,0,51,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,20,0,0,0,52,0,0,0,21,0,0,0,1,0,0,0,19,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,53,0,0,0,27,0,0,0,16,0,0,0,28,0,0,0,29,0,0,0,24,0,0,0,25,0,0,0,8,0,0,0,9,0,0,0,26,0,0,0,54,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,8,0,0,0,9,0,0,0,55,0,0,0,34,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,56,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,24,2,0,0,57,0,0,0,58,0,0,0,10,0,0,0,0,0,0,0,64,2,0,0,59,0,0,0,60,0,0,0,4,0,0,0,3,0,0,0,36,0,0,0,0,0,0,0,80,2,0,0,11,0,0,0,61,0,0,0,62,0,0,0,37,0,0,0,27,0,0,0,6,0,0,0,38,0,0,0,0,0,0,0,96,2,0,0,63,0,0,0,64,0,0,0,49,0,0,0,50,0,0,0,19,0,0,0,23,0,0,0,65,0,0,0,13,0,0,0,17,0,0,0,15,0,0,0,39,0,0,0,52,0,0,0,40,0,0,0,1,0,0,0,19,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,53,0,0,0,27,0,0,0,16,0,0,0,28,0,0,0,29,0,0,0,24,0,0,0,25,0,0,0,8,0,0,0,9,0,0,0,28,0,0,0,54,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,14,0,0,0,9,0,0,0,55,0,0,0,34,0,0,0,10,0,0,0,15,0,0,0,12,0,0,0,56,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,128,2,0,0,66,0,0,0,67,0,0,0,12,0,0,0,3,0,0,0,0,0,0,0,144,2,0,0,68,0,0,0,69,0,0,0,1,0,0,0,0,0,0,0,168,2,0,0,70,0,0,0,71,0,0,0,72,0,0,0,1,0,0,0,41,0,0,0,42,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,29,0,0,0,7,0,0,0,73,0,0,0,0,0,0,0,184,2,0,0,70,0,0,0,74,0,0,0,75,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,8,0,0,0,0,0,0,0,216,2,0,0,70,0,0,0,76,0,0,0,72,0,0,0,1,0,0,0,41,0,0,0,43,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,31,0,0,0,9,0,0,0,73,0,0,0,20,0,0,0,0,0,0,0,232,2,0,0,70,0,0,0,77,0,0,0,78,0,0,0,1,0,0,0,44,0,0,0,45,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,32,0,0,0,10,0,0,0,0,0,0,0,248,2,0,0,70,0,0,0,79,0,0,0,75,0,0,0,1,0,0,0,46,0,0,0,47,0,0,0,1,0,0,0,3,0,0,0,6,0,0,0,33,0,0,0,11,0,0,0,0,0,0,0,8,3,0,0,70,0,0,0,80,0,0,0,81,0,0,0,1,0,0,0,48,0,0,0,49,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,34,0,0,0,12,0,0,0,21,0,0,0,0,0,0,0,24,3,0,0,70,0,0,0,82,0,0,0,83,0,0,0,1,0,0,0,50,0,0,0,51,0,0,0,1,0,0,0,5,0,0,0,8,0,0,0,35,0,0,0,13,0,0,0,0,0,0,0,40,3,0,0,84,0,0,0,85,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,86,0,0,0,36,0,0,0,18,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,64,3,0,0,87,0,0,0,88,0,0,0,2,0,0,0,52,0,0,0,16,0,0,0,17,0,0,0,19,0,0,0,0,0,0,0,88,3,0,0,89,0,0,0,90,0,0,0,6,0,0,0,0,0,0,0,104,3,0,0,91,0,0,0,92,0,0,0,3,0,0,0,53,0,0,0,54,0,0,0,4,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,5,0,0,0,37,0,0,0,93,0,0,0,38,0,0,0,58,0,0,0,0,0,0,0,136,3,0,0,66,0,0,0,94,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,152,3,0,0,95,0,0,0,96,0,0,0,1,0,0,0,10,215,163,60,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,176,3,0,0,4,0,0,0,97,0,0,0,98,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,0,0,0,0,184,3,0,0,4,0,0,0,99,0,0,0,100,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,200,3,0,0,4,0,0,0,101,0,0,0,102,0,0,0,37,0,0,0,39,0,0,0,14,0,0,0,7,0,0,0,25,0,0,0,21,0,0,0,0,0,0,0,216,3,0,0,103,0,0,0,104,0,0,0,7,0,0,0,15,0,0,0,59,0,0,0,60,0,0,0,16,0,0,0,17,0,0,0,22,0,0,0,40,0,0,0,13,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,14,0,0,0,61,0,0,0,0,0,0,0,232,3,0,0,105,0,0,0,106,0,0,0,15,0,0,0,0,0,0,0,0,4,0,0,107,0,0,0,108,0,0,0,5,0,0,0,6,0,0,0,18,0,0,0,7,0,0,0,0,0,0,0,24,4,0,0,16,0,0,0,109,0,0,0,8,0,0,0,0,0,0,0,40,4,0,0,16,0,0,0,110,0,0,0,9,0,0,0,0,0,0,0,56,4,0,0,16,0,0,0,111,0,0,0,10,0,0,0,0,0,0,0,72,4,0,0,16,0,0,0,112,0,0,0,11,0,0,0,0,0,0,0,88,4,0,0,16,0,0,0,113,0,0,0,12,0,0,0,0,0,0,0,104,4,0,0,16,0,0,0,114,0,0,0,13,0,0,0,0,0,0,0,120,4,0,0,16,0,0,0,115,0,0,0,14,0,0,0,0,0,0,0,136,4,0,0,16,0,0,0,116,0,0,0,15,0,0,0,0,0,0,0,152,4,0,0,16,0,0,0,117,0,0,0,16,0,0,0,0,0,0,0,168,4,0,0,16,0,0,0,118,0,0,0,17,0,0,0,0,0,0,0,184,4,0,0,119,0,0,0,120,0,0,0,26,0,0,0,62,0,0,0,0,0,0,0,192,4,0,0,121,0,0,0,122,0,0,0,5,0,0,0,4,0,0,0,63,0,0,0,0,0,0,0,208,4,0,0,123,0,0,0,124,0,0,0,6,0,0,0,5,0,0,0,64,0,0,0,0,0,0,0,224,4,0,0,125,0,0,0,126,0,0,0,23,0,0,0,0,0,0,0,240,4,0,0,41,0,0,0,127,0,0,0,24,0,0,0,0,0,0,0,0,5,0,0,128,0,0,0,129,0,0,0,7,0,0,0,6,0,0,0,65,0,0,0,0,0,0,0,16,5,0,0,130,0,0,0,131,0,0,0,27,0,0,0,28,0,0,0,3,0,0,0,0,0,0,0,40,5,0,0,132,0,0,0,133,0,0,0,49,0,0,0,50,0,0,0,19,0,0,0,23,0,0,0,134,0,0,0,13,0,0,0,17,0,0,0,25,0,0,0,66,0,0,0,52,0,0,0,67,0,0,0,0,0,0,0,48,5,0,0,135,0,0,0,136,0,0,0,26,0,0,0,27,0,0,0,252,255,255,255,48,5,0,0,137,0,0,0,138,0,0,0,28,0,0,0,0,0,0,0,80,5,0,0,57,0,0,0,139,0,0,0,16,0,0,0,0,0,0,0,96,5,0,0,41,0,0,0,140,0,0,0,29,0,0,0,1,0,0,0,0,0,0,0,112,5,0,0,41,0,0,0,141,0,0,0,29,0,0,0,2,0,0,0,0,0,0,0,128,5,0,0,23,0,0,0,142,0,0,0,7,0,0,0,68,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,5,0,0,143,0,0,0,144,0,0,0,17,0,0,0,10,0,0,0,0,0,0,0,160,5,0,0,41,0,0,0,145,0,0,0,30,0,0,0,1,0,0,0,0,0,0,0,176,5,0,0,41,0,0,0,146,0,0,0,30,0,0,0,2,0,0,0,0,0,0,0,192,5,0,0,66,0,0,0,147,0,0,0,18,0,0,0,11,0,0,0,0,0,0,0,208,5,0,0,57,0,0,0,148,0,0,0,19,0,0,0,0,0,0,0,224,5,0,0,57,0,0,0,149,0,0,0,20,0,0,0,0,0,0,0,240,5,0,0,130,0,0,0,150,0,0,0,27,0,0,0,28,0,0,0,4,0,0,0,0,0,0,0,0,6,0,0,151,0,0,0,152,0,0,0,8,0,0,0,7,0,0,0,69,0,0,0,0,0,0,0,16,6,0,0,153,0,0,0,154,0,0,0,18,0,0,0,0,0,0,0,32,6,0,0,155,0,0,0,156,0,0,0,9,0,0,0,8,0,0,0,70,0,0,0,0,0,0,0,48,6,0,0,130,0,0,0,157,0,0,0,29,0,0,0,30,0,0,0,5,0,0,0,0,0,0,0,64,6,0,0,130,0,0,0,158,0,0,0,31,0,0,0,32,0,0,0,6,0,0,0,0,0,0,0,80,6,0,0,130,0,0,0,159,0,0,0,27,0,0,0,28,0,0,0,7,0,0,0,0,0,0,0,96,6,0,0,160,0,0,0,161,0,0,0,10,0,0,0,9,0,0,0,71,0,0,0,0,0,0,0,112,6,0,0,23,0,0,0,162,0,0,0,7,0,0,0,72,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,128,6,0,0,163,0,0,0,164,0,0,0,11,0,0,0,10,0,0,0,73,0,0,0,0,0,0,0,144,6,0,0,23,0,0,0,165,0,0,0,33,0,0,0,15,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,160,6,0,0,166,0,0,0,167,0,0,0,31,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,74,0,0,0,44,0,0,0,5,0,0,0,45,0,0,0,10,0,0,0,18,0,0,0,5,0,0,0,46,0,0,0,19,0,0,0,11,0,0,0,75,0,0,0,168,0,0,0,0,0,0,0,176,6,0,0,31,0,0,0,169,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,47,0,0,0,77,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,192,6,0,0,31,0,0,0,170,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,49,0,0,0,78,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,208,6,0,0,31,0,0,0,171,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,76,0,0,0,13,0,0,0,6,0,0,0,50,0,0,0,79,0,0,0,7,0,0,0,4,0,0,0,48,0,0,0,20,0,0,0,11,0,0,0,34,0,0,0,35,0,0,0,1,0,0,0,33,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,224,6,0,0,31,0,0,0,172,0,0,0,34,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,7,0,0,0,51,0,0,0,10,0,0,0,19,0,0,0,6,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,36,0,0,0,37,0,0,0,1,0,0,0,35,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,240,6,0,0,173,0,0,0,174,0,0,0,36,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,80,0,0,0,52,0,0,0,8,0,0,0,53,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,54,0,0,0,21,0,0,0,11,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,81,0,0,0,82,0,0,0,0,0,0,0,0,7,0,0,175,0,0,0,176,0,0,0,40,0,0,0,0,0,0,0,24,7,0,0,175,0,0,0,177,0,0,0,41,0,0,0,0,0,0,0,40,7,0,0,175,0,0,0,178,0,0,0,42,0,0,0,0,0,0,0,56,7,0,0,179,0,0,0,180,0,0,0,36,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,83,0,0,0,52,0,0,0,8,0,0,0,55,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,38,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,72,7,0,0,181,0,0,0,182,0,0,0,39,0,0,0,0,0,0,0,88,7,0,0,41,0,0,0,183,0,0,0,40,0,0,0,0,0,0,0,104,7,0,0,184,0,0,0,185,0,0,0,41,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,84,0,0,0,56,0,0,0,9,0,0,0,57,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,58,0,0,0,22,0,0,0,11,0,0,0,42,0,0,0,0,0,0,0,120,7,0,0,45,0,0,0,186,0,0,0,32,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,13,0,0,0,10,0,0,0,1,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,15,0,0,0,43,0,0,0,1,0,0,0,43,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,192,7,0,0,187,0,0,0,188,0,0,0,44,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,85,0,0,0,13,0,0,0,10,0,0,0,59,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,60,0,0,0,23,0,0,0,11,0,0,0,44,0,0,0,45,0,0,0,1,0,0,0,45,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,61,0,0,0,62,0,0,0,46,0,0,0,46,0,0,0,63,0,0,0,47,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,224,7,0,0,31,0,0,0,189,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,64,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,240,7,0,0,31,0,0,0,190,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,66,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,0,8,0,0,31,0,0,0,191,0,0,0,48,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,86,0,0,0,13,0,0,0,11,0,0,0,67,0,0,0,87,0,0,0,20,0,0,0,4,0,0,0,65,0,0,0,24,0,0,0,11,0,0,0,15,0,0,0,47,0,0,0,1,0,0,0,49,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,0,0,0,0,16,8,0,0,45,0,0,0,192,0,0,0,44,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,88,0,0,0,68,0,0,0,10,0,0,0,69,0,0,0,10,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,48,0,0,0,49,0,0,0,1,0,0,0,50,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,70,0,0,0,71,0,0,0,51,0,0,0,50,0,0,0,72,0,0,0,52,0,0,0,3,0,0,0,0,0,0,0,32,8,0,0,181,0,0,0,193,0,0,0,53,0,0,0,0,0,0,0,64,8,0,0,45,0,0,0,194,0,0,0,54,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,89,0,0,0,13,0,0,0,12,0,0,0,73,0,0,0,10,0,0,0,21,0,0,0,4,0,0,0,15,0,0,0,5,0,0,0,11,0,0,0,51,0,0,0,52,0,0,0,1,0,0,0,55,0,0,0,5,0,0,0,74,0,0,0,53,0,0,0,7,0,0,0,75,0,0,0,76,0,0,0,56,0,0,0,54,0,0,0,77,0,0,0,57,0,0,0,4,0,0,0,55,0,0,0,0,0,0,0,80,8,0,0,195,0,0,0,196,0,0,0,19,0,0,0,78,0,0,0,25,0,0,0,90,0,0,0,91,0,0,0,20,0,0,0,0,0,0,0,96,8,0,0,181,0,0,0,197,0,0,0,58,0,0,0,0,0,0,0,112,8,0,0,181,0,0,0,198,0,0,0,59,0,0,0,0,0,0,0,128,8,0,0,199,0,0,0,200,0,0,0,60,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,92,0,0,0,79,0,0,0,13,0,0,0,80,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,11,0,0,0,61,0,0,0,12,0,0,0,0,0,0,0,144,8,0,0,31,0,0,0,201,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,81,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,57,0,0,0,1,0,0,0,63,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,7,0,0,0,0,0,0,0,160,8,0,0,31,0,0,0,202,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,83,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,58,0,0,0,1,0,0,0,64,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,8,0,0,0,0,0,0,0,176,8,0,0,31,0,0,0,203,0,0,0,62,0,0,0,8,0,0,0,1,0,0,0,1,0,0,0,93,0,0,0,13,0,0,0,14,0,0,0,84,0,0,0,94,0,0,0,22,0,0,0,4,0,0,0,82,0,0,0,26,0,0,0,11,0,0,0,56,0,0,0,59,0,0,0,1,0,0,0,65,0,0,0,5,0,0,0,16,0,0,0,11,0,0,0,9,0,0,0,0,0,0,0,192,8,0,0,204,0,0,0,205,0,0,0,66,0,0,0,1,0,0,0,2,0,0,0,95,0,0,0,96,0,0,0,85,0,0,0,97,0,0,0,98,0,0,0,86,0,0,0,60,0,0,0,61,0,0,0,87,0,0,0,27,0,0,0,0,0,0,0,208,8,0,0,206,0,0,0,207,0,0,0,1,0,0,0,62,0,0,0,12,0,0,0,67,0,0,0,2,0,0,0,68,0,0,0,99,0,0,0,88,0,0,0,89,0,0,0,63,0,0,0,100,0,0,0,208,0,0,0,0,0,0,0,232,8,0,0,209,0,0,0,210,0,0,0,28,0,0,0,21,0,0,0,64,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,65,0,0,0,93,0,0,0,66,0,0,0,101,0,0,0,67,0,0,0,29,0,0,0,94,0,0,0,102,0,0,0,103,0,0,0,0,0,0,0,8,9,0,0,206,0,0,0,211,0,0,0,1,0,0,0,62,0,0,0,12,0,0,0,67,0,0,0,2,0,0,0,68,0,0,0,99,0,0,0,88,0,0,0,89,0,0,0,63,0,0,0,100,0,0,0,208,0,0,0,0,0,0,0,24,9,0,0,212,0,0,0,213,0,0,0,30,0,0,0,22,0,0,0,68,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,69,0,0,0,98,0,0,0,70,0,0,0,104,0,0,0,71,0,0,0,31,0,0,0,99,0,0,0,105,0,0,0,106,0,0,0,0,0,0,0,40,9,0,0,105,0,0,0,214,0,0,0,21,0,0,0,0,0,0,0,56,9,0,0,105,0,0,0,215,0,0,0,22,0,0,0,0,0,0,0,72,9,0,0,216,0,0,0,217,0,0,0,2,0,0,0,72,0,0,0,13,0,0,0,69,0,0,0,3,0,0,0,70,0,0,0,107,0,0,0,100,0,0,0,101,0,0,0,73,0,0,0,108,0,0,0,218,0,0,0,0,0,0,0,88,9,0,0,23,0,0,0,219,0,0,0,74,0,0,0,109,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,104,9,0,0,23,0,0,0,220,0,0,0,7,0,0,0,110,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,120,9,0,0,23,0,0,0,221,0,0,0,7,0,0,0,111,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,144,9,0,0,222,0,0,0,223,0,0,0,19,0,0,0,78,0,0,0,25,0,0,0,90,0,0,0,91,0,0,0,0,0,0,0,168,9,0,0,41,0,0,0,224,0,0,0,30,0,0,0,1,0,0,0,0,0,0,0,184,9,0,0,225,0,0,0,226,0,0,0,1,0,0,0,0,0,0,0,208,9,0,0,130,0,0,0,227,0,0,0,75,0,0,0,76,0,0,0,8,0,0,0,0,0,0,0,224,9,0,0,225,0,0,0,228,0,0,0,2,0,0,0,0,0,0,0,240,9,0,0,95,0,0,0,229,0,0,0,2,0,0,0,0,0,0,0,0,10,0,0,130,0,0,0,230,0,0,0,77,0,0,0,78,0,0,0,9,0,0,0,0,0,0,0,16,10,0,0,95,0,0,0,231,0,0,0,3,0,0,0,0,0,0,0,32,10,0,0,232,0,0,0,233,0,0,0,14,0,0,0,0,0,0,0,72,10,0,0,234,0,0,0,235,0,0,0,15,0,0,0,11,0,0,0,112,0,0,0,0,0,0,0,88,10,0,0,236,0,0,0,237,0,0,0,16,0,0,0,12,0,0,0,113,0,0,0,0,0,0,0,104,10,0,0,232,0,0,0,238,0,0,0,17,0,0,0,0,0,0,0,120,10,0,0,232,0,0,0,239,0,0,0,18,0,0,0,0,0,0,0,136,10,0,0,240,0,0,0,241,0,0,0,32,0,0,0,33,0,0,0,102,0,0,0,0,0,0,0,144,10,0,0,242,0,0,0,243,0,0,0,0,0,0,0,152,10,0,0,244,0,0,0,245,0,0,0,66,0,0,0,1,0,0,0,2,0,0,0,95,0,0,0,96,0,0,0,85,0,0,0,114,0,0,0,115,0,0,0,86,0,0,0,60,0,0,0,61,0,0,0,87,0,0,0,27,0,0,0,96,100,0,0,255,255,255,255,5,0,0,0,0,0,0,0,0,0,0,0,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,35,0,0,0,157,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,184,10,0,0,246,0,0,0,247,0,0,0,248,0,0,0,249,0,0,0,36,0,0,0,4,0,0,0,19,0,0,0,71,0,0,0,0,0,0,0,200,10,0,0,246,0,0,0,250,0,0,0,248,0,0,0,249,0,0,0,36,0,0,0,5,0,0,0,20,0,0,0,72,0,0,0,0,0,0,0,240,10,0,0,251,0,0,0,252,0,0,0,104,0,0,0,0,0,0,0,32,11,0,0,246,0,0,0,253,0,0,0,248,0,0,0,249,0,0,0,36,0,0,0,6,0,0,0,21,0,0,0,73,0,0,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,49,56,98,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0,49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0,50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0,50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0,49,57,98,116,71,104,111,115,116,80,97,105,114,67,97,108,108,98,97,99,107,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0,50,57,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,123,32,118,97,114,32,115,101,108,102,32,61,32,77,111,100,117,108,101,91,39,103,101,116,67,97,99,104,101,39,93,40,77,111,100,117,108,101,91,39,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,39,93,41,91,36,48,93,59,32,105,102,32,40,33,115,101,108,102,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,41,41,32,116,104,114,111,119,32,39,97,32,74,83,73,109,112,108,101,109,101,110,116,97,116,105,111,110,32,109,117,115,116,32,105,109,112,108,101,109,101,110,116,32,97,108,108,32,102,117,110,99,116,105,111,110,115,44,32,121,111,117,32,102,111,114,103,111,116,32],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,58,58,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,46,39,59,32,114,101,116,117,114,110,32,115,101,108,102,91,39,97,100,100,83,105,110,103,108,101,82,101,115,117,108,116,39,93,40,36,49,44,36,50,44,36,51,44,36,52,44,36,53,44,36,54,44,36,55,41,59,32,125,0,50,51,98,116,68,101,102,97,117,108,116,83,111,102,116,66,111,100,121,83,111,108,118,101,114,0,49,54,98,116,83,111,102,116,66,111,100,121,83,111,108,118,101,114,0,52,49,98,116,83,111,102,116,66,111,100,121,82,105,103,105,100,66,111,100,121,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,78,50,56,98,116,83,111,102,116,83,111,102,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0,78,50,57,98,116,83,111,102,116,82,105,103,105,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,49,48,98,116,83,111,102,116,66,111,100,121,0,83,111,102,116,66,111,100,121,77,97,116,101,114,105,97,108,68,97,116,97,0,83,111,102,116,66,111,100,121,78,111,100,101,68,97,116,97,0,83,111,102,116,66,111,100,121,76,105,110,107,68,97,116,97,0,83,111,102,116,66,111,100,121,70,97,99,101,68,97,116,97,0,83,111,102,116,66,111,100,121,84,101,116,114,97,68,97,116,97,0,83,111,102,116,82,105,103,105,100,65,110,99,104,111,114,68,97,116,97,0,102,108,111,97,116,0,83,111,102,116,66,111,100,121,80,111,115,101,68,97,116,97,0,83,111,102,116,66,111,100,121,67,108,117,115,116,101,114,68,97,116,97,0,105,110,116,0,98,116,83,111,102,116,66,111,100,121,74,111,105,110,116,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,70,108,111,97,116,68,97,116,97,0,78,49,48,98,116,83,111,102,116,66,111,100,121,49,53,82,97,121,70,114,111,109,84,111,67,97,115,116,101,114,69,0,78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0,78,49,48,98,116,83,111,102,116,66,111,100,121,53,74,111,105,110,116,69,0,78,49,48,98,116,83,111,102,116,66,111,100,121,54,67,74,111,105,110,116,69,0,50,52,98,116,83,111,102,116,66,111,100,121,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,83,111,102,116,66,111,100,121,0,85,112,100,97,116,101,67,108,117,115,116,101,114,115,0,83,111,102,116,66,111,100,121,32,97,112,112,108,121,70,111,114,99,101,115,0,65,112,112,108,121,67,108,117,115,116,101,114,115,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,51,67,111,108,108,105,100,101,83,68,70,95,82,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,67,76,95,82,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,49,67,108,117,115,116,101,114,66,97,115,101,69,0,50,55,98,116,83,111,102,116,67,108,117,115,116,101,114,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,83,79,70,84,67,76,85,83,84,69,82,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,67,76,95,83,83,69,0,78,49,53,98,116,83,111,102,116,67,111,108,108,105,100,101,114,115,49,50,67,111,108,108,105,100,101,86,70,95,83,83,69,0,50,57,98,116,83,111,102,116,82,105,103,105,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,54,98,116,83,111,102,116,66,111,100,121,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,90,78,51,53,98,116,83,111,102,116,66,111,100,121,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0,49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0,84,114,105,97,110,103,108,101,0,50,52,98,116,83,111,102,116,82,105,103,105,100,68,121,110,97,109,105,99,115,87,111,114,108,100,0,114,97,121,84,101,115,116,0,50,51,98,116,83,111,102,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0,50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,83,111,102,116,66,111,100,121,0,115,111,108,118,101,83,111,102,116,67,111,110,115,116,114,97,105,110,116,115,0,50,56,98,116,83,111,102,116,83,111,102,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,49,98,116,82,105,103,105,100,66,111,100,121,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0,49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0,100,101,98,117,103,68,114,97,119,87,111,114,108,100,0,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,70,108,111,97,116,68,97,116,97,0,115,116,101,112,83,105,109,117,108,97,116,105,111,110,0,115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0,112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0,105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0,67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0,51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,97,112,112,108,121,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,32,114,101,115,116,105,116,117,116,105,111,110,0,99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0,117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0,105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0,99,114,101,97,116,101,80,114,101,100,105,99,116,105,118,101,67,111,110,116,97,99,116,115,0,114,101,108,101,97,115,101,32,112,114,101,100,105,99,116,105,118,101,32,99,111,110,116,97,99,116,32,109,97,110,105,102,111,108,100,115,0,112,114,101,100,105,99,116,105,118,101,32,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,117,112,100,97,116,101,65,99,116,105,111,110,115,0,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0,78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0,50,51,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,0,49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0,49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,50,57,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,0,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,49,56,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,0,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,49,55,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0,115,111,108,118,101,71,114,111,117,112,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0,115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0,49,54,98,116,82,97,121,99,97,115,116,86,101,104,105,99,108,101,0,49,55,98,116,65,99,116,105,111,110,73,110,116,101,114,102,97,99,101,0,50,53,98,116,68,101,102,97,117,108,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0,51,48,98,116,75,105,110,101,109,97,116,105,99,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,0,51,48,98,116,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,73,110,116,101,114,102,97,99,101,0,52,51,98,116,75,105,110,101,109,97,116,105,99,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0,50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0,49,50,98,116,67,111,110,118,101,120,67,97,115,116,0,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,49,51,98,116,71,104,111,115,116,79,98,106,101,99,116,0,50,52,98,116,80,97,105,114,67,97,99,104,105,110,103,71,104,111,115,116,79,98,106,101,99,116,0,50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0,50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0,49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0,78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0,105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0,112,114,111,99,101,115,115,73,115,108,97,110,100,115,0,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0,117,112,100,97,116,101,65,97,98,98,115,0,1,79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0,73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0,80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0,84,104,97,110,107,115,46,10,0,99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0,49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0,49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,114,97,121,84,101,115,116,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0,112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0,100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0,99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0,90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,53,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,73,110,116,101,114,110,97,108,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,0,99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0,50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0,50,51,98,116,83,105,110,103,108,101,67,111,110,116,97,99,116,67,97,108,108,98,97,99,107,0,50,51,98,116,66,114,105,100,103,101,100,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0,90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,75,50,52,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,87,114,97,112,112,101,114,83,50,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,50,49,98,116,87,105,116,104,111,117,116,77,97,114,103,105,110,82,101,115,117,108,116,0,50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,51,54,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,51,48,98,116,67,111,109,112,111,117,110,100,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0,49,53,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,0,67,111,109,112,111,117,110,100,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0,49,49,98,116,67,111,110,101,83,104,97,112,101,0,67,111,110,101,0,98,116,67,111,110,101,83,104,97,112,101,68,97,116,97,0,49,50,98,116,67,111,110,101,83,104,97,112,101,90,0,67,111,110,101,90,0,49,50,98,116,67,111,110,101,83,104,97,112,101,88,0,67,111,110,101,88,0,49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0,83,80,72,69,82,69,0,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,90,78,75,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,84,82,73,65,78,71,76,69,77,69,83,72,0,90,78,75,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,49,54,70,105,108,116,101,114,101,100,67,97,108,108,98,97,99,107,0,50,49,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,49,56,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,0,83,84,65,84,73,67,80,76,65,78,69,0,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,68,97,116,97,0,50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0,51,52,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,65,97,98,98,67,97,99,104,105,110,103,83,104,97,112,101,0,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0,50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0,49,55,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,0,67,111,110,118,101,120,0,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,68,97,116,97,0,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0,49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0,67,97,112,115,117,108,101,83,104,97,112,101,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,88,0,67,97,112,115,117,108,101,88,0,49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,90,0,67,97,112,115,117,108,101,90,0,50,53,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0,67,111,110,118,101,120,84,114,105,109,101,115,104,0,50,54,76,111,99,97,108,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0,49,52,98,116,67,111,110,99,97,118,101,83,104,97,112,101,0,49,48,98,116,66,111,120,83,104,97,112,101,0,66,111,120,0,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,57,81,117,97,110,116,105,122,101,100,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,48,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0,50,53,98,116,72,101,105,103,104,116,102,105,101,108,100,84,101,114,114,97,105,110,83,104,97,112,101,0,72,69,73,71,72,84,70,73,69,76,68,0,49,53,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,0,67,121,108,105,110,100,101,114,89,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,88,0,67,121,108,105,110,100,101,114,88,0,49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,90,0,67,121,108,105,110,100,101,114,90,0,49,52,98,116,84,114,105,97,110,103,108,101,77,101,115,104,0,50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0,50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0,49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,49,50,98,116,65,120,105,115,83,119,101,101,112,51,0,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0,90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0,49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0,49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0,49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0,50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0,49,50,98,116,68,105,115,112,97,116,99,104,101,114,0,49,52,98,116,81,117,97,110,116,105,122,101,100,66,118,104,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0,50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0,51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0,49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0,49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0,50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0,49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0,51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0,49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0,50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0,50,51,98,116,72,97,115,104,101,100,83,105,109,112,108,101,80,97,105,114,67,97,99,104,101,0,49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0,50,54,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,65,114,114,97,121,0,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,82,111,111,116,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,101,120,99,101,112,116,105,111,110,0,117,110,99,97,117,103,104,116,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,83,116,57,98,97,100,95,97,108,108,111,99,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+20480);var tempDoublePtr=STATICTOP;STATICTOP+=16;Module["_i64Subtract"]=_i64Subtract;function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall("vi",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm["setTempRet0"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm["setTempRet0"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm["setTempRet0"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm["setTempRet0"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}Module["_memset"]=_memset;function ___gxx_personality_v0(){}Module["_bitshift64Shl"]=_bitshift64Shl;function _abort(){Module["abort"]()}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Runtime.dynCall("v",func);_pthread_once.seen[ptr]=1}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}Module["_i64Add"]=_i64Add;var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}var _llvm_pow_f32=Math_pow;function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module["_malloc"]=_malloc;function ___cxa_allocate_exception(size){return _malloc(size)}Module["_bitshift64Ashr"]=_bitshift64Ashr;Module["_bitshift64Lshr"]=_bitshift64Lshr;function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _pthread_cleanup_push(routine,arg){__ATEXIT__.push((function(){Runtime.dynCall("vi",routine,[arg])}));_pthread_cleanup_push.level=__ATEXIT__.length}function ___cxa_guard_acquire(variable){if(!HEAP8[variable>>0]){HEAP8[variable>>0]=1;return 1}return 0}function _pthread_cleanup_pop(){assert(_pthread_cleanup_push.level==__ATEXIT__.length,"cannot pop if something else added meanwhile!");__ATEXIT__.pop();_pthread_cleanup_push.level=__ATEXIT__.length}function ___cxa_begin_catch(ptr){__ZSt18uncaught_exceptionv.uncaught_exception--;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}Module["_memmove"]=_memmove;function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}var _llvm_fabs_f32=Math_abs;Module["_llvm_bswap_i32"]=_llvm_bswap_i32;function _llvm_trap(){abort("trap!")}function ___cxa_guard_release(){}function _pthread_self(){return 0}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;assert(offset_high===0);FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffer){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?Module["print"]:Module["printErr"])(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}})}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}__ATEXIT__.push((function(){var fflush=Module["_fflush"];if(fflush)fflush(0);var printChar=___syscall146.printChar;if(!printChar)return;var buffers=___syscall146.buffers;if(buffers[1].length)printChar(1,10);if(buffers[2].length)printChar(2,10)}));STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vid(index,a1,a2){try{Module["dynCall_vid"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiidii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiidii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{return Module["dynCall_iiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viidi(index,a1,a2,a3,a4){try{Module["dynCall_viidi"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viddiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viddiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vidii(index,a1,a2,a3,a4){try{Module["dynCall_vidii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vidi(index,a1,a2,a3){try{Module["dynCall_vidi"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_diiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiddddiid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){try{Module["dynCall_viiiiddddiid"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vidd(index,a1,a2,a3){try{Module["dynCall_vidd"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiid(index,a1,a2,a3){try{return Module["dynCall_iiid"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_di(index,a1){try{return Module["dynCall_di"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiidii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_diiidii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viidii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viidii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diii(index,a1,a2,a3){try{return Module["dynCall_diii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){try{return Module["dynCall_diiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiid(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiid"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{return Module["dynCall_diiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_did(index,a1,a2){try{return Module["dynCall_did"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiidddddidi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){try{Module["dynCall_viiiidddddidi"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diidii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diidii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_diiii(index,a1,a2,a3,a4){try{return Module["dynCall_diiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiid(index,a1,a2,a3,a4){try{Module["dynCall_viiid"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viid(index,a1,a2,a3){try{Module["dynCall_viid"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iidid(index,a1,a2,a3,a4){try{return Module["dynCall_iidid"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"invoke_viiiii":invoke_viiiii,"invoke_vid":invoke_vid,"invoke_vi":invoke_vi,"invoke_viiidii":invoke_viiidii,"invoke_vii":invoke_vii,"invoke_iiiiiiiiiii":invoke_iiiiiiiiiii,"invoke_ii":invoke_ii,"invoke_viidi":invoke_viidi,"invoke_viddiii":invoke_viddiii,"invoke_vidii":invoke_vidii,"invoke_iiiii":invoke_iiiii,"invoke_vidi":invoke_vidi,"invoke_diiiiiiii":invoke_diiiiiiii,"invoke_viiiiddddiid":invoke_viiiiddddiid,"invoke_diiiii":invoke_diiiii,"invoke_vidd":invoke_vidd,"invoke_iiii":invoke_iiii,"invoke_viiiiid":invoke_viiiiid,"invoke_viiiiii":invoke_viiiiii,"invoke_iiid":invoke_iiid,"invoke_di":invoke_di,"invoke_iiiiiii":invoke_iiiiiii,"invoke_diiidii":invoke_diiidii,"invoke_viidii":invoke_viidii,"invoke_viiiiiii":invoke_viiiiiii,"invoke_viiiiiiiii":invoke_viiiiiiiii,"invoke_viiiiiiiiii":invoke_viiiiiiiiii,"invoke_iii":invoke_iii,"invoke_diii":invoke_diii,"invoke_diiiiiiiiii":invoke_diiiiiiiiii,"invoke_viiiid":invoke_viiiid,"invoke_diiiiiiiii":invoke_diiiiiiiii,"invoke_did":invoke_did,"invoke_viiiidddddidi":invoke_viiiidddddidi,"invoke_diidii":invoke_diidii,"invoke_diiii":invoke_diiii,"invoke_iiiiiiiiii":invoke_iiiiiiiiii,"invoke_viiid":invoke_viiid,"invoke_viii":invoke_viii,"invoke_v":invoke_v,"invoke_viid":invoke_viid,"invoke_iidid":invoke_iidid,"invoke_viiii":invoke_viiii,"_pthread_cleanup_pop":_pthread_cleanup_pop,"_abort":_abort,"___cxa_guard_acquire":___cxa_guard_acquire,"___gxx_personality_v0":___gxx_personality_v0,"___cxa_allocate_exception":___cxa_allocate_exception,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"___cxa_guard_release":___cxa_guard_release,"___setErrNo":___setErrNo,"_sbrk":_sbrk,"_llvm_pow_f32":_llvm_pow_f32,"___cxa_begin_catch":___cxa_begin_catch,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___resumeException":___resumeException,"___cxa_find_matching_catch":___cxa_find_matching_catch,"_sysconf":_sysconf,"_pthread_getspecific":_pthread_getspecific,"_pthread_self":_pthread_self,"_llvm_fabs_f32":_llvm_fabs_f32,"_pthread_once":_pthread_once,"_llvm_trap":_llvm_trap,"_pthread_key_create":_pthread_key_create,"_emscripten_asm_const_diiiiiiii":_emscripten_asm_const_diiiiiiii,"_pthread_setspecific":_pthread_setspecific,"___cxa_throw":___cxa_throw,"___syscall6":___syscall6,"_pthread_cleanup_push":_pthread_cleanup_push,"_time":_time,"_gettimeofday":_gettimeofday,"___syscall140":___syscall140,"___cxa_pure_virtual":___cxa_pure_virtual,"___syscall146":___syscall146,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8};// EMSCRIPTEN_START_ASM
	var asm=(function(global,env,buffer) {
	"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=0;var o=0;var p=0;var q=0;var r=global.NaN,s=global.Infinity;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=global.Math.min;var aa=global.Math.clz32;var ba=env.abort;var ca=env.assert;var da=env.invoke_viiiii;var ea=env.invoke_vid;var fa=env.invoke_vi;var ga=env.invoke_viiidii;var ha=env.invoke_vii;var ia=env.invoke_iiiiiiiiiii;var ja=env.invoke_ii;var ka=env.invoke_viidi;var la=env.invoke_viddiii;var ma=env.invoke_vidii;var na=env.invoke_iiiii;var oa=env.invoke_vidi;var pa=env.invoke_diiiiiiii;var qa=env.invoke_viiiiddddiid;var ra=env.invoke_diiiii;var sa=env.invoke_vidd;var ta=env.invoke_iiii;var ua=env.invoke_viiiiid;var va=env.invoke_viiiiii;var wa=env.invoke_iiid;var xa=env.invoke_di;var ya=env.invoke_iiiiiii;var za=env.invoke_diiidii;var Aa=env.invoke_viidii;var Ba=env.invoke_viiiiiii;var Ca=env.invoke_viiiiiiiii;var Da=env.invoke_viiiiiiiiii;var Ea=env.invoke_iii;var Fa=env.invoke_diii;var Ga=env.invoke_diiiiiiiiii;var Ha=env.invoke_viiiid;var Ia=env.invoke_diiiiiiiii;var Ja=env.invoke_did;var Ka=env.invoke_viiiidddddidi;var La=env.invoke_diidii;var Ma=env.invoke_diiii;var Na=env.invoke_iiiiiiiiii;var Oa=env.invoke_viiid;var Pa=env.invoke_viii;var Qa=env.invoke_v;var Ra=env.invoke_viid;var Sa=env.invoke_iidid;var Ta=env.invoke_viiii;var Ua=env._pthread_cleanup_pop;var Va=env._abort;var Wa=env.___cxa_guard_acquire;var Xa=env.___gxx_personality_v0;var Ya=env.___cxa_allocate_exception;var Za=env.__ZSt18uncaught_exceptionv;var _a=env.___cxa_guard_release;var $a=env.___setErrNo;var ab=env._sbrk;var bb=env._llvm_pow_f32;var cb=env.___cxa_begin_catch;var db=env._emscripten_memcpy_big;var eb=env.___resumeException;var fb=env.___cxa_find_matching_catch;var gb=env._sysconf;var hb=env._pthread_getspecific;var ib=env._pthread_self;var jb=env._llvm_fabs_f32;var kb=env._pthread_once;var lb=env._llvm_trap;var mb=env._pthread_key_create;var nb=env._emscripten_asm_const_diiiiiiii;var ob=env._pthread_setspecific;var pb=env.___cxa_throw;var qb=env.___syscall6;var rb=env._pthread_cleanup_push;var sb=env._time;var tb=env._gettimeofday;var ub=env.___syscall140;var vb=env.___cxa_pure_virtual;var wb=env.___syscall146;var xb=0;
	// EMSCRIPTEN_START_FUNCS
	function Df(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+176|0;q=c[a+68>>2]|0;c[d+128>>2]=q;o=c[a+84>>2]|0;c[d+128+4>>2]=o;m=c[a+100>>2]|0;c[d+128+8>>2]=m;g[d+128+12>>2]=0.0;l=d+128+16|0;t=c[a+72>>2]|0;c[l>>2]=t;s=c[a+88>>2]|0;c[d+128+20>>2]=s;r=c[a+104>>2]|0;c[d+128+24>>2]=r;g[d+128+28>>2]=0.0;j=d+128+32|0;w=c[a+76>>2]|0;c[j>>2]=w;v=c[a+92>>2]|0;c[d+128+36>>2]=v;u=c[a+108>>2]|0;c[d+128+40>>2]=u;g[d+128+44>>2]=0.0;p=-+g[a+116>>2];n=-+g[a+120>>2];h=-+g[a+124>>2];e=(c[k>>2]=w,+g[k>>2])*p;e=e+(c[k>>2]=v,+g[k>>2])*n;e=e+(c[k>>2]=u,+g[k>>2])*h;f=(c[k>>2]=t,+g[k>>2])*p;f=f+(c[k>>2]=s,+g[k>>2])*n;f=f+(c[k>>2]=r,+g[k>>2])*h;p=(c[k>>2]=q,+g[k>>2])*p;n=p+(c[k>>2]=o,+g[k>>2])*n;h=n+(c[k>>2]=m,+g[k>>2])*h;c[d>>2]=c[d+128>>2];c[d+4>>2]=c[d+128+4>>2];c[d+8>>2]=c[d+128+8>>2];c[d+12>>2]=c[d+128+12>>2];c[d+16>>2]=c[l>>2];c[d+16+4>>2]=c[l+4>>2];c[d+16+8>>2]=c[l+8>>2];c[d+16+12>>2]=c[l+12>>2];c[d+32>>2]=c[j>>2];c[d+32+4>>2]=c[j+4>>2];c[d+32+8>>2]=c[j+8>>2];c[d+32+12>>2]=c[j+12>>2];g[d+48>>2]=h;g[d+52>>2]=f;g[d+56>>2]=e;g[d+60>>2]=0.0;dh(d+64|0,d,a+4|0);c[b>>2]=c[d+64>>2];c[b+4>>2]=c[d+64+4>>2];c[b+8>>2]=c[d+64+8>>2];c[b+12>>2]=c[d+64+12>>2];c[b+16>>2]=c[d+64+16>>2];c[b+16+4>>2]=c[d+64+16+4>>2];c[b+16+8>>2]=c[d+64+16+8>>2];c[b+16+12>>2]=c[d+64+16+12>>2];c[b+32>>2]=c[d+64+32>>2];c[b+32+4>>2]=c[d+64+32+4>>2];c[b+32+8>>2]=c[d+64+32+8>>2];c[b+32+12>>2]=c[d+64+32+12>>2];c[b+48>>2]=c[d+64+48>>2];c[b+48+4>>2]=c[d+64+48+4>>2];c[b+48+8>>2]=c[d+64+48+8>>2];c[b+48+12>>2]=c[d+64+48+12>>2];i=d;return}function Ef(a,e,f){a=a|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0;si(a,e,f)|0;c[e+52>>2]=c[a+552>>2];c[e+56>>2]=c[a+556>>2];c[e+60>>2]=c[a+560>>2];c[e+64>>2]=c[a+564>>2];c[e+68>>2]=c[a+568>>2];c[e+72>>2]=c[a+572>>2];c[e+76>>2]=c[a+576>>2];c[e+80>>2]=c[a+580>>2];c[e+84>>2]=c[a+584>>2];c[e+88>>2]=c[a+588>>2];c[e+92>>2]=c[a+592>>2];c[e+96>>2]=c[a+596>>2];c[e+100>>2]=c[a+600>>2];c[e+104>>2]=c[a+604>>2];c[e+108>>2]=c[a+608>>2];c[e+112>>2]=c[a+612>>2];c[e+116>>2]=c[a+616>>2];c[e+120>>2]=c[a+620>>2];c[e+124>>2]=c[a+624>>2];c[e+128>>2]=c[a+628>>2];c[e+132>>2]=c[a+632>>2];c[e+136>>2]=c[a+636>>2];c[e+140>>2]=c[a+640>>2];c[e+144>>2]=c[a+644>>2];c[e+148>>2]=c[a+648>>2];c[e+152>>2]=c[a+652>>2];c[e+156>>2]=c[a+656>>2];c[e+160>>2]=c[a+660>>2];c[e+164>>2]=c[a+664>>2];c[e+168>>2]=c[a+668>>2];c[e+172>>2]=c[a+672>>2];c[e+176>>2]=c[a+676>>2];f=b[a+736>>1]|0;c[e+184>>2]=f&255;c[e+188>>2]=(f&65535)>>>8&65535;c[e+196>>2]=c[a+684>>2];c[e+192>>2]=c[a+680>>2];c[e+180>>2]=d[a+740>>0];i=+g[a+688>>2];j=+g[a+692>>2];h=+eh(i-j,6.2831854820251465);if(!(h<-3.1415927410125732)){if(h>3.1415927410125732)h=h+-6.2831854820251465}else h=h+6.2831854820251465;g[e+200>>2]=h;h=+eh(i+j,6.2831854820251465);if(h<-3.1415927410125732){j=h+6.2831854820251465;f=e+204|0;g[f>>2]=j;f=a+696|0;f=c[f>>2]|0;k=e+208|0;c[k>>2]=f;k=a+700|0;k=c[k>>2]|0;f=e+212|0;c[f>>2]=k;f=a+704|0;f=c[f>>2]|0;a=e+216|0;c[a>>2]=f;return 12773}if(!(h>3.1415927410125732)){j=h;k=e+204|0;g[k>>2]=j;k=a+696|0;k=c[k>>2]|0;f=e+208|0;c[f>>2]=k;f=a+700|0;f=c[f>>2]|0;k=e+212|0;c[k>>2]=f;a=a+704|0;a=c[a>>2]|0;k=e+216|0;c[k>>2]=a;return 12773}j=h+-6.2831854820251465;k=e+204|0;g[k>>2]=j;k=a+696|0;k=c[k>>2]|0;f=e+208|0;c[f>>2]=k;f=a+700|0;f=c[f>>2]|0;k=e+212|0;c[k>>2]=f;a=a+704|0;a=c[a>>2]|0;k=e+216|0;c[k>>2]=a;return 12773}function Ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=c[b+4>>2]|0;if((i|0)==(c[b+8>>2]|0)?(h=i|0?i<<1:1,(i|0)<(h|0)):0){if(!h){e=0;f=i}else{c[6435]=(c[6435]|0)+1;e=yc((h*244|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[b+4>>2]|0}if((f|0)>0){g=0;do{k=e+(g*244|0)|0;j=c[b+12>>2]|0;l=j+(g*244|0)|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=e+(g*244|0)+16|0;l=j+(g*244|0)+16|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=e+(g*244|0)+32|0;l=j+(g*244|0)+32|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];k=e+(g*244|0)+48|0;l=j+(g*244|0)+48|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];bn(e+(g*244|0)+64|0,j+(g*244|0)+64|0,180)|0;g=g+1|0}while((g|0)!=(f|0))}f=c[b+12>>2]|0;if(f|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=e;c[b+8>>2]=h;e=c[b+4>>2]|0}else e=i;c[b+4>>2]=e+1;l=c[b+12>>2]|0;c[l+(i*244|0)>>2]=c[d>>2];c[l+(i*244|0)+4>>2]=c[d+4>>2];c[l+(i*244|0)+8>>2]=c[d+8>>2];c[l+(i*244|0)+12>>2]=c[d+12>>2];c[l+(i*244|0)+16>>2]=c[d+16>>2];c[l+(i*244|0)+16+4>>2]=c[d+16+4>>2];c[l+(i*244|0)+16+8>>2]=c[d+16+8>>2];c[l+(i*244|0)+16+12>>2]=c[d+16+12>>2];c[l+(i*244|0)+32>>2]=c[d+32>>2];c[l+(i*244|0)+32+4>>2]=c[d+32+4>>2];c[l+(i*244|0)+32+8>>2]=c[d+32+8>>2];c[l+(i*244|0)+32+12>>2]=c[d+32+12>>2];c[l+(i*244|0)+48>>2]=c[d+48>>2];c[l+(i*244|0)+48+4>>2]=c[d+48+4>>2];c[l+(i*244|0)+48+8>>2]=c[d+48+8>>2];c[l+(i*244|0)+48+12>>2]=c[d+48+12>>2];bn(l+(i*244|0)+64|0,d+64|0,180)|0;return (c[b+12>>2]|0)+(i*244|0)|0}function Gf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;l=i;i=i+64|0;n=+g[a+20>>2];u=+g[a+40>>2];p=+g[a+24>>2];s=+g[a+36>>2];t=+g[a+32>>2];m=+g[a+16>>2];k=+g[a>>2];j=+g[a+4>>2];q=+g[a+8>>2];h=1.0/((n*u-p*s)*k+j*(p*t-u*m)+(s*m-n*t)*q);z=+g[b>>2];y=+g[b+4>>2];A=+g[b+8>>2];x=+g[b+16>>2];w=+g[b+20>>2];v=+g[b+24>>2];r=+g[b+32>>2];o=+g[b+36>>2];f=+g[b+40>>2];g[l+16>>2]=A*(s*m-n*t)*h+(z*(n*u-p*s)*h+y*(p*t-u*m)*h);g[l+16+4>>2]=A*(t*j-s*k)*h+(z*(s*q-u*j)*h+y*(u*k-t*q)*h);g[l+16+8>>2]=A*(n*k-m*j)*h+(z*(p*j-n*q)*h+y*(m*q-p*k)*h);g[l+16+12>>2]=0.0;g[l+16+16>>2]=(n*u-p*s)*h*x+(p*t-u*m)*h*w+(s*m-n*t)*h*v;g[l+16+20>>2]=(s*q-u*j)*h*x+(u*k-t*q)*h*w+(t*j-s*k)*h*v;g[l+16+24>>2]=(p*j-n*q)*h*x+(m*q-p*k)*h*w+(n*k-m*j)*h*v;g[l+16+28>>2]=0.0;g[l+16+32>>2]=(n*u-p*s)*h*r+(p*t-u*m)*h*o+(s*m-n*t)*h*f;g[l+16+36>>2]=(s*q-u*j)*h*r+(u*k-t*q)*h*o+(t*j-s*k)*h*f;g[l+16+40>>2]=(p*j-n*q)*h*r+(m*q-p*k)*h*o+(n*k-m*j)*h*f;g[l+16+44>>2]=0.0;Wg(l+16|0,l);f=+g[l>>2];h=+g[l+4>>2];j=+g[l+8>>2];m=+g[l+12>>2];k=1.0/+O(+(f*f+h*h+j*j+m*m));g[l>>2]=f*k;g[l+4>>2]=h*k;g[l+8>>2]=j*k;g[l+12>>2]=m*k;m=m*k<-1.0?-1.0:m*k;g[e>>2]=+T(+(m>1.0?1.0:m))*2.0;g[d>>2]=f*k;g[d+4>>2]=h*k;g[d+8>>2]=j*k;g[d+12>>2]=0.0;if(f*k*f*k+h*k*h*k+j*k*j*k<1.4210854715202004e-14){c[d>>2]=1065353216;c[d+4>>2]=0;c[d+8>>2]=0;g[d+12>>2]=0.0;i=l;return}else{A=1.0/+O(+(f*k*f*k+h*k*h*k+j*k*j*k));g[d>>2]=f*k*A;g[d+4>>2]=A*h*k;g[d+8>>2]=A*j*k;i=l;return}}function Hf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;i=c[b+12>>2]|0;j=c[b+36>>2]|0;if((i|0)<=(j|0))return;if((i|0)>=(j|0)){do if((c[b+40>>2]|0)<(i|0)){if(!i){d=0;e=j}else{c[6435]=(c[6435]|0)+1;d=yc((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+36>>2]|0}f=c[b+44>>2]|0;if((e|0)<=0){if(!f){a[b+48>>0]=1;c[b+44>>2]=d;c[b+40>>2]=i;break}}else{g=0;do{c[d+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(e|0))}if(a[b+48>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[b+48>>0]=1;c[b+44>>2]=d;c[b+40>>2]=i}else d=c[b+44>>2]|0;while(0);Tn(d+(j<<2)|0,0,i-j<<2|0)|0}c[b+36>>2]=i;h=c[b+56>>2]|0;if((i|0)>(h|0)){do if((c[b+60>>2]|0)<(i|0)){if(!i){d=0;e=h}else{c[6435]=(c[6435]|0)+1;d=yc((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+56>>2]|0}f=c[b+64>>2]|0;if((e|0)<=0){if(!f){a[b+68>>0]=1;c[b+64>>2]=d;c[b+60>>2]=i;break}}else{g=0;do{c[d+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(e|0))}if(a[b+68>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[b+68>>0]=1;c[b+64>>2]=d;c[b+60>>2]=i}else d=c[b+64>>2]|0;while(0);Tn(d+(h<<2)|0,0,i-h<<2|0)|0}c[b+56>>2]=i;if((i|0)>0){Tn(c[b+44>>2]|0,-1,i<<2|0)|0;Tn(c[b+64>>2]|0,-1,i<<2|0)|0}if((j|0)<=0)return;d=c[b+16>>2]|0;e=c[b+44>>2]|0;f=c[b+64>>2]|0;g=0;do{i=c[(c[d+(g<<4)+4>>2]|0)+12>>2]<<16|c[(c[d+(g<<4)>>2]|0)+12>>2];i=(i+~(i<<15)>>10^i+~(i<<15))*9|0;i=e+((((i>>6^i)+~((i>>6^i)<<11)>>16^(i>>6^i)+~((i>>6^i)<<11))&(c[b+12>>2]|0)+-1)<<2)|0;c[f+(g<<2)>>2]=c[i>>2];c[i>>2]=g;g=g+1|0}while((g|0)!=(j|0));return}function If(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((c[b+8>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6435]=(c[6435]|0)+1,e=yc((d*36|3)+16|0)|0,(e|0)!=0):0){c[(e+4+15&-16)+-4>>2]=e;o=e+4+15&-16}else o=0;i=c[b+4>>2]|0;if((i|0)>0){m=0;do{j=o+(m*36|0)|0;k=c[b+12>>2]|0;a[j+16>>0]=1;c[j+12>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;l=c[k+(m*36|0)+4>>2]|0;if((l|0)>0){c[6435]=(c[6435]|0)+1;e=yc((l<<2|3)+16|0)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16}g=c[j+4>>2]|0;f=c[j+12>>2]|0;if((g|0)<=0)if(!f){a[j+16>>0]=1;c[j+12>>2]=h;c[j+8>>2]=l;Tn(h|0,0,l<<2|0)|0}else n=14;else{e=0;do{c[h+(e<<2)>>2]=c[f+(e<<2)>>2];e=e+1|0}while((e|0)!=(g|0));n=14}if((n|0)==14){n=0;if(a[j+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[j+16>>0]=1;c[j+12>>2]=h;c[j+8>>2]=l;Tn(h|0,0,l<<2|0)|0}e=c[j+12>>2]|0;c[j+4>>2]=l;f=c[k+(m*36|0)+12>>2]|0;g=0;do{c[e+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(l|0))}else c[j+4>>2]=l;l=k+(m*36|0)+20|0;c[j+20>>2]=c[l>>2];c[j+20+4>>2]=c[l+4>>2];c[j+20+8>>2]=c[l+8>>2];c[j+20+12>>2]=c[l+12>>2];m=m+1|0}while((m|0)!=(i|0));e=c[b+4>>2]|0;if((e|0)>0){k=0;do{g=c[b+12>>2]|0;h=g+(k*36|0)+4|0;i=g+(k*36|0)+12|0;j=c[i>>2]|0;f=g+(k*36|0)+16|0;if(j|0){if(a[f>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[i>>2]=0}a[f>>0]=1;c[i>>2]=0;c[h>>2]=0;c[g+(k*36|0)+8>>2]=0;k=k+1|0}while((k|0)!=(e|0))}}e=c[b+12>>2]|0;if(e|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=o;c[b+8>>2]=d;return}function Jf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;c[b+4>>2]=4;c[b>>2]=4432;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=d;Ll();c[b+32>>2]=23268;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4704;c[b+552>>2]=c[e>>2];c[b+552+4>>2]=c[e+4>>2];c[b+552+8>>2]=c[e+8>>2];c[b+552+12>>2]=c[e+12>>2];c[b+568>>2]=c[e+16>>2];c[b+568+4>>2]=c[e+16+4>>2];c[b+568+8>>2]=c[e+16+8>>2];c[b+568+12>>2]=c[e+16+12>>2];c[b+584>>2]=c[e+32>>2];c[b+584+4>>2]=c[e+32+4>>2];c[b+584+8>>2]=c[e+32+8>>2];c[b+584+12>>2]=c[e+32+12>>2];c[b+600>>2]=c[e+48>>2];c[b+600+4>>2]=c[e+48+4>>2];c[b+600+8>>2]=c[e+48+8>>2];c[b+600+12>>2]=c[e+48+12>>2];c[b+616>>2]=c[e>>2];c[b+616+4>>2]=c[e+4>>2];c[b+616+8>>2]=c[e+8>>2];c[b+616+12>>2]=c[e+12>>2];c[b+632>>2]=c[e+16>>2];c[b+632+4>>2]=c[e+16+4>>2];c[b+632+8>>2]=c[e+16+8>>2];c[b+632+12>>2]=c[e+16+12>>2];c[b+648>>2]=c[e+32>>2];c[b+648+4>>2]=c[e+32+4>>2];c[b+648+8>>2]=c[e+32+8>>2];c[b+648+12>>2]=c[e+32+12>>2];c[b+664>>2]=c[e+48>>2];c[b+664+4>>2]=c[e+48+4>>2];c[b+664+8>>2]=c[e+48+8>>2];c[b+664+12>>2]=c[e+48+12>>2];g[b+688>>2]=0.0;g[b+692>>2]=-1.0;g[b+696>>2]=.8999999761581421;g[b+700>>2]=.30000001192092896;g[b+704>>2]=1.0;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;a[b+736>>0]=0;a[b+737>>0]=0;a[b+738>>0]=0;a[b+739>>0]=1;a[b+740>>0]=f&1;c[b+748>>2]=0;e=c[b+28>>2]|0;l=+g[b+600>>2];k=+g[b+604>>2];j=+g[b+608>>2];i=l*+g[e+20>>2]+k*+g[e+24>>2]+j*+g[e+28>>2]+ +g[e+56>>2];h=l*+g[e+36>>2]+k*+g[e+40>>2]+j*+g[e+44>>2]+ +g[e+60>>2];g[b+664>>2]=l*+g[e+4>>2]+k*+g[e+8>>2]+j*+g[e+12>>2]+ +g[e+52>>2];g[b+668>>2]=i;g[b+672>>2]=h;g[b+676>>2]=0.0;g[b+732>>2]=f?-1.0:1.0;return}function Kf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;i=c[b+12>>2]|0;j=c[b+32>>2]|0;if((i|0)<=(j|0))return;if((i|0)>=(j|0)){do if((c[b+36>>2]|0)<(i|0)){if(!i){d=0;e=j}else{c[6435]=(c[6435]|0)+1;d=yc((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+32>>2]|0}f=c[b+40>>2]|0;if((e|0)<=0){if(!f){a[b+44>>0]=1;c[b+40>>2]=d;c[b+36>>2]=i;break}}else{g=0;do{c[d+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(e|0))}if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[b+44>>0]=1;c[b+40>>2]=d;c[b+36>>2]=i}else d=c[b+40>>2]|0;while(0);Tn(d+(j<<2)|0,0,i-j<<2|0)|0}c[b+32>>2]=i;h=c[b+52>>2]|0;if((i|0)>(h|0)){do if((c[b+56>>2]|0)<(i|0)){if(!i){d=0;e=h}else{c[6435]=(c[6435]|0)+1;d=yc((i<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+52>>2]|0}f=c[b+60>>2]|0;if((e|0)<=0){if(!f){a[b+64>>0]=1;c[b+60>>2]=d;c[b+56>>2]=i;break}}else{g=0;do{c[d+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(e|0))}if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[b+64>>0]=1;c[b+60>>2]=d;c[b+56>>2]=i}else d=c[b+60>>2]|0;while(0);Tn(d+(h<<2)|0,0,i-h<<2|0)|0}c[b+52>>2]=i;if((i|0)>0){Tn(c[b+40>>2]|0,-1,i<<2|0)|0;Tn(c[b+60>>2]|0,-1,i<<2|0)|0}if((j|0)<=0)return;d=c[b+16>>2]|0;e=c[b+40>>2]|0;f=c[b+60>>2]|0;g=0;do{i=c[d+(g*12|0)+4>>2]<<16|c[d+(g*12|0)>>2];i=(i+~(i<<15)>>10^i+~(i<<15))*9|0;i=e+((((i>>6^i)+~((i>>6^i)<<11)>>16^(i>>6^i)+~((i>>6^i)<<11))&(c[b+12>>2]|0)+-1)<<2)|0;c[f+(g<<2)>>2]=c[i>>2];c[i>>2]=g;g=g+1|0}while((g|0)!=(j|0));return}function Lf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+20>>2]=c[a+72>>2];e=c[a+16>>2]|0;c[b+16>>2]=e;c[b+12>>2]=0;if(!e)return 16387;g=Ob[c[(c[d>>2]|0)+16>>2]&63](d,76,e)|0;e=c[g+8>>2]|0;c[b+12>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;if((c[b+16>>2]|0)>0){f=0;while(1){h=c[a+24>>2]|0;c[e+72>>2]=c[h+(f*80|0)+72>>2];c[e+64>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[h+(f*80|0)+64>>2]|0)|0;if(!(Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0)|0)){h=c[(c[d>>2]|0)+16>>2]|0;i=c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0;i=Eb[c[(c[i>>2]|0)+52>>2]&127](i)|0;i=Ob[h&63](d,i,1)|0;h=c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0;h=Ob[c[(c[h>>2]|0)+56>>2]&63](h,c[i+8>>2]|0,d)|0;yb[c[(c[d>>2]|0)+20>>2]&31](d,i,h,1346455635,c[(c[a+24>>2]|0)+(f*80|0)+64>>2]|0)}i=c[a+24>>2]|0;c[e+68>>2]=c[i+(f*80|0)+68>>2];c[e>>2]=c[i+(f*80|0)>>2];c[e+4>>2]=c[i+(f*80|0)+4>>2];c[e+8>>2]=c[i+(f*80|0)+8>>2];c[e+12>>2]=c[i+(f*80|0)+12>>2];c[e+16>>2]=c[i+(f*80|0)+16>>2];c[e+20>>2]=c[i+(f*80|0)+20>>2];c[e+24>>2]=c[i+(f*80|0)+24>>2];c[e+28>>2]=c[i+(f*80|0)+28>>2];c[e+32>>2]=c[i+(f*80|0)+32>>2];c[e+36>>2]=c[i+(f*80|0)+36>>2];c[e+40>>2]=c[i+(f*80|0)+40>>2];c[e+44>>2]=c[i+(f*80|0)+44>>2];c[e+48>>2]=c[i+(f*80|0)+48>>2];c[e+52>>2]=c[i+(f*80|0)+52>>2];c[e+56>>2]=c[i+(f*80|0)+56>>2];c[e+60>>2]=c[i+(f*80|0)+60>>2];f=f+1|0;if((f|0)>=(c[b+16>>2]|0)){e=d;break}else e=e+76|0}}else e=d;yb[c[(c[e>>2]|0)+20>>2]&31](d,g,16362,1497453121,c[g+8>>2]|0);return 16387}function Mf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;f=i;i=i+256|0;c[f+32>>2]=5736;l=f+32+36|0;c[l>>2]=c[b>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[l+12>>2]=c[b+12>>2];m=f+32+52|0;c[m>>2]=c[d>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];c[f+32+212>>2]=a;c[f+32+216>>2]=e;c[f+32+68>>2]=1065353216;c[f+32+72>>2]=0;c[f+32+72+4>>2]=0;c[f+32+72+8>>2]=0;c[f+32+72+12>>2]=0;c[f+32+88>>2]=1065353216;c[f+32+92>>2]=0;c[f+32+92+4>>2]=0;c[f+32+92+8>>2]=0;c[f+32+92+12>>2]=0;c[f+32+108>>2]=1065353216;c[f+32+112>>2]=0;c[f+32+116>>2]=c[l>>2];c[f+32+116+4>>2]=c[l+4>>2];c[f+32+116+8>>2]=c[l+8>>2];c[f+32+116+12>>2]=c[l+12>>2];c[f+32+132>>2]=1065353216;c[f+32+136>>2]=0;c[f+32+136+4>>2]=0;c[f+32+136+8>>2]=0;c[f+32+136+12>>2]=0;c[f+32+152>>2]=1065353216;c[f+32+156>>2]=0;c[f+32+156+4>>2]=0;c[f+32+156+8>>2]=0;c[f+32+156+12>>2]=0;c[f+32+172>>2]=1065353216;c[f+32+176>>2]=0;c[f+32+180>>2]=c[d>>2];c[f+32+180+4>>2]=c[d+4>>2];c[f+32+180+8>>2]=c[d+8>>2];c[f+32+180+12>>2]=c[d+12>>2];n=+g[d>>2]-+g[b>>2];k=+g[d+4>>2]-+g[b+4>>2];j=+g[d+8>>2]-+g[b+8>>2];h=1.0/+O(+(n*n+k*k+j*j));q=n*h==0.0?999999984306749440.0:1.0/(n*h);g[f+32+4>>2]=q;p=k*h==0.0?999999984306749440.0:1.0/(k*h);g[f+32+8>>2]=p;o=j*h==0.0?999999984306749440.0:1.0/(j*h);g[f+32+12>>2]=o;c[f+32+20>>2]=q<0.0&1;c[f+32+24>>2]=p<0.0&1;c[f+32+28>>2]=o<0.0&1;g[f+32+32>>2]=n*h*(+g[m>>2]-+g[l>>2])+k*h*(+g[f+32+56>>2]-+g[f+32+40>>2])+j*h*(+g[f+32+60>>2]-+g[f+32+44>>2]);a=c[a+68>>2]|0;e=c[(c[a>>2]|0)+24>>2]|0;c[f+16>>2]=0;c[f+16+4>>2]=0;c[f+16+8>>2]=0;c[f+16+12>>2]=0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Qb[e&7](a,b,d,f+32|0,f+16|0,f);i=f;return}function Nf(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0;q=i;i=i+80|0;g[q+16+60>>2]=0.0;g[q+16+8>>2]=0.0;g[q+16+12>>2]=.10000000149011612;g[q+16+16>>2]=300.0;g[q+16>>2]=1.0;g[q+16+4>>2]=-1.0;g[q+16+28>>2]=0.0;g[q+16+32>>2]=.20000000298023224;g[q+16+36>>2]=0.0;g[q+16+40>>2]=0.0;g[q+16+20>>2]=1.0;g[q+16+24>>2]=.5;c[q+16+56>>2]=0;g[q+16+48>>2]=0.0;a[q+16+44>>0]=0;p=0;do{n=c[b+856+(p<<2)>>2]|0;o=a[b+788+p>>0]|0;if(!((n|0)==0&o<<24>>24==0)){g[q+16+40>>2]=0.0;c[q+16+56>>2]=n;c[q+16+52>>2]=c[b+840+(p<<2)>>2];c[q+16+48>>2]=c[b+824+(p<<2)>>2];c[q+16+20>>2]=c[b+732>>2];a[q+16+44>>0]=o;c[q+16+4>>2]=c[b+696+(p<<2)>>2];c[q+16+24>>2]=c[b+728>>2];c[q+16>>2]=c[b+680+(p<<2)>>2];g[q+16+16>>2]=0.0;c[q+16+12>>2]=c[b+808+(p<<2)>>2];c[q+16+8>>2]=c[b+792+(p<<2)>>2];c[q>>2]=c[b+1064+(p<<2)>>2];c[q+4>>2]=c[b+1080+(p<<2)>>2];c[q+8>>2]=c[b+1096+(p<<2)>>2];g[q+12>>2]=0.0;o=c[b+1304>>2]>>p*3;if(!(o&1))n=c[d+32>>2]|0;else n=b+740+(p<<2)|0;c[q+16+28>>2]=c[n>>2];if(!(o&2))n=c[d+32>>2]|0;else n=b+772+(p<<2)|0;c[q+16+36>>2]=c[n>>2];c[q+16+32>>2]=c[((o&4|0)==0?d+4|0:b+756+(p<<2)|0)>>2];if(!(a[b+1301>>0]|0))n=Dd(b,q+16|0,f,h,j,k,l,m,d,e,q,0,0)|0;else{o=p+1|0;if(!(c[b+868+(((o|0)==3?0:o)<<6)+56>>2]|0))n=1;else n=(c[b+868+(((p+2|0)%3|0)<<6)+56>>2]|0)==0&1;n=Dd(b,q+16|0,f,h,j,k,l,m,d,e,q,0,n)|0}e=n+e|0}p=p+1|0}while((p|0)!=3);i=q;return e|0}function Of(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;h=i;i=i+128|0;if(!b){i=h;return}if(c[b+40>>2]|0){Of(a,c[b+36>>2]|0,d+1|0,e,f);Of(a,c[b+40>>2]|0,d+1|0,e,f)}if((d|0)<0){i=h;return}m=+g[b>>2];r=+g[b+16>>2];k=+g[b+4>>2];q=+g[b+20>>2];j=+g[b+8>>2];p=+g[b+24>>2];l=(m+r)*.5-(r-m)*.5;n=(k+q)*.5-(q-k)*.5;o=(j+p)*.5-(p-j)*.5;m=(m+r)*.5+(r-m)*.5;k=(k+q)*.5+(q-k)*.5;j=(j+p)*.5+(p-j)*.5;b=(c[b+40>>2]|0)==0?f:e;g[h>>2]=l;g[h+4>>2]=n;g[h+8>>2]=o;g[h+12>>2]=0.0;g[h+16>>2]=m;g[h+20>>2]=n;g[h+24>>2]=o;g[h+28>>2]=0.0;g[h+32>>2]=m;g[h+36>>2]=k;g[h+40>>2]=o;g[h+44>>2]=0.0;g[h+48>>2]=l;g[h+52>>2]=k;g[h+56>>2]=o;g[h+60>>2]=0.0;g[h+64>>2]=l;g[h+68>>2]=n;g[h+72>>2]=j;g[h+76>>2]=0.0;g[h+80>>2]=m;g[h+84>>2]=n;g[h+88>>2]=j;g[h+92>>2]=0.0;g[h+96>>2]=m;g[h+100>>2]=k;g[h+104>>2]=j;g[h+108>>2]=0.0;g[h+112>>2]=l;g[h+116>>2]=k;g[h+120>>2]=j;g[h+124>>2]=0.0;mc[c[(c[a>>2]|0)+8>>2]&127](a,h,h+16|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+16|0,h+32|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+32|0,h+48|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+48|0,h,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+64|0,h+80|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+80|0,h+96|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+96|0,h+112|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+112|0,h+64|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h,h+64|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+16|0,h+80|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+32|0,h+96|0,b);mc[c[(c[a>>2]|0)+8>>2]&127](a,h+48|0,h+112|0,b);i=h;return}function Pf(a,b,c,d,e,f,h,i){a=a|0;b=+b;c=+c;d=+d;e=e|0;f=+f;h=+h;i=+i;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;z=+g[e>>2];y=+g[e+16>>2];x=+g[e+32>>2];w=+g[e+4>>2];v=+g[e+20>>2];u=+g[e+36>>2];t=+g[e+8>>2];s=+g[e+24>>2];r=+g[e+40>>2];j=d-((z*0.0+y*-i+x*h)*0.0+(w*0.0+v*-i+u*h)*i+(t*0.0+s*-i+r*h)*-h)+c;o=0.0-((z*0.0+y*-i+x*h)*-i+(w*0.0+v*-i+u*h)*0.0+(t*0.0+s*-i+r*h)*f)+0.0;l=0.0-((z*0.0+y*-i+x*h)*h+(w*0.0+v*-i+u*h)*-f+(t*0.0+s*-i+r*h)*0.0)+0.0;m=0.0-((z*i+y*0.0+x*-f)*0.0+(w*i+v*0.0+u*-f)*i+(t*i+s*0.0+r*-f)*-h)+0.0;n=d-((z*i+y*0.0+x*-f)*-i+(w*i+v*0.0+u*-f)*0.0+(t*i+s*0.0+r*-f)*f)+c;k=0.0-((z*i+y*0.0+x*-f)*h+(w*i+v*0.0+u*-f)*-f+(t*i+s*0.0+r*-f)*0.0)+0.0;p=0.0-((z*-h+y*f+x*0.0)*0.0+(w*-h+v*f+u*0.0)*i+(t*-h+s*f+r*0.0)*-h)+0.0;q=0.0-((z*-h+y*f+x*0.0)*-i+(w*-h+v*f+u*0.0)*0.0+(t*-h+s*f+r*0.0)*f)+0.0;h=d-((z*-h+y*f+x*0.0)*h+(w*-h+v*f+u*0.0)*-f+(t*-h+s*f+r*0.0)*0.0)+c;i=1.0/(l*(q*m-n*p)+(j*(n*h-k*q)+o*(k*p-h*m)));g[a>>2]=(q*m-n*p)*i*0.0+(1.0/b*(n*h-k*q)*i+(k*p-h*m)*i*0.0);g[a+4>>2]=(p*o-q*j)*i*0.0+(1.0/b*(q*l-h*o)*i+(h*j-p*l)*i*0.0);g[a+8>>2]=(n*j-m*o)*i*0.0+(1.0/b*(k*o-n*l)*i+(m*l-k*j)*i*0.0);g[a+12>>2]=0.0;g[a+16>>2]=(q*m-n*p)*i*0.0+((n*h-k*q)*i*0.0+1.0/b*(k*p-h*m)*i);g[a+20>>2]=(p*o-q*j)*i*0.0+((q*l-h*o)*i*0.0+1.0/b*(h*j-p*l)*i);g[a+24>>2]=(n*j-m*o)*i*0.0+((k*o-n*l)*i*0.0+1.0/b*(m*l-k*j)*i);g[a+28>>2]=0.0;g[a+32>>2]=1.0/b*(q*m-n*p)*i+((n*h-k*q)*i*0.0+(k*p-h*m)*i*0.0);g[a+36>>2]=1.0/b*(p*o-q*j)*i+((q*l-h*o)*i*0.0+(h*j-p*l)*i*0.0);g[a+40>>2]=1.0/b*(n*j-m*o)*i+((k*o-n*l)*i*0.0+(m*l-k*j)*i*0.0);g[a+44>>2]=0.0;return}function Qf(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;r=i;i=i+96|0;m=r;n=m+96|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));if(!j)q=c[c[b+880>>2]>>2]|0;else q=j;j=c[b+772>>2]|0;if((j|0)==(c[b+776>>2]|0)?(p=j|0?j<<1:1,(j|0)<(p|0)):0){if(!p)o=0;else{c[6435]=(c[6435]|0)+1;j=yc((p*104|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}o=j;j=c[b+772>>2]|0}if((j|0)>0){k=0;do{m=o+(k*104|0)|0;l=(c[b+780>>2]|0)+(k*104|0)|0;n=m+104|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));k=k+1|0}while((k|0)!=(j|0))}j=c[b+780>>2]|0;if(j|0){if(a[b+784>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+780>>2]=0}a[b+784>>0]=1;c[b+780>>2]=o;c[b+776>>2]=p;j=c[b+772>>2]|0}m=c[b+780>>2]|0;c[m+(j*104|0)>>2]=0;c[m+(j*104|0)+4>>2]=q;m=m+(j*104|0)+8|0;l=r;n=m+96|0;do{c[m>>2]=c[l>>2];m=m+4|0;l=l+4|0}while((m|0)<(n|0));q=c[b+772>>2]|0;c[b+772>>2]=q+1;p=c[b+780>>2]|0;l=c[b+720>>2]|0;c[p+(q*104|0)+8>>2]=l+(d*104|0);o=c[b+720>>2]|0;c[p+(q*104|0)+12>>2]=o+(e*104|0);m=c[b+720>>2]|0;c[p+(q*104|0)+16>>2]=m+(f*104|0);n=c[b+720>>2]|0;c[p+(q*104|0)+20>>2]=n+(h*104|0);z=+g[l+(d*104|0)+8>>2];w=+g[l+(d*104|0)+12>>2];A=+g[l+(d*104|0)+16>>2];t=+g[m+(f*104|0)+8>>2]-z;y=+g[m+(f*104|0)+12>>2]-w;v=+g[m+(f*104|0)+16>>2]-A;u=+g[n+(h*104|0)+8>>2]-z;x=+g[n+(h*104|0)+12>>2]-w;s=+g[n+(h*104|0)+16>>2]-A;g[p+(q*104|0)+24>>2]=(+g[o+(e*104|0)+16>>2]-A)*(t*x-y*u)+((+g[o+(e*104|0)+8>>2]-z)*(y*s-v*x)+(+g[o+(e*104|0)+12>>2]-w)*(v*u-t*s));a[b+924>>0]=1;i=r;return}function Rf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0;q=i;i=i+48|0;p=c[b+720>>2]|0;a:do if(h?(l=c[b+732>>2]|0,(l|0)>0):0){j=c[b+740>>2]|0;k=0;while(1){h=c[j+(k*52|0)+8>>2]|0;if((h|0)==(p+(d*104|0)|0)?(c[j+(k*52|0)+12>>2]|0)==(p+(e*104|0)|0):0){h=25;break}if((h|0)==(p+(e*104|0)|0)?(c[j+(k*52|0)+12>>2]|0)==(p+(d*104|0)|0):0){h=25;break}k=k+1|0;if((k|0)>=(l|0))break a}if((h|0)==25){i=q;return}}while(0);l=q;m=l+44|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));if(!f)n=c[c[b+880>>2]>>2]|0;else n=f;h=c[b+732>>2]|0;if((h|0)==(c[b+736>>2]|0)?(o=h|0?h<<1:1,(h|0)<(o|0)):0){if(!o)f=0;else{c[6435]=(c[6435]|0)+1;h=yc((o*52|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}f=h;h=c[b+732>>2]|0}if((h|0)>0){j=0;do{l=f+(j*52|0)|0;k=(c[b+740>>2]|0)+(j*52|0)|0;m=l+52|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));j=j+1|0}while((j|0)!=(h|0))}h=c[b+740>>2]|0;if(h|0){if(a[b+744>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+740>>2]=0}a[b+744>>0]=1;c[b+740>>2]=f;c[b+736>>2]=o;h=c[b+732>>2]|0}l=c[b+740>>2]|0;c[l+(h*52|0)>>2]=0;c[l+(h*52|0)+4>>2]=n;l=l+(h*52|0)+8|0;k=q;m=l+44|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));o=c[b+732>>2]|0;c[b+732>>2]=o+1;n=c[b+740>>2]|0;c[n+(o*52|0)+8>>2]=p+(d*104|0);c[n+(o*52|0)+12>>2]=p+(e*104|0);t=+g[p+(d*104|0)+8>>2]-+g[p+(e*104|0)+8>>2];s=+g[p+(d*104|0)+12>>2]-+g[p+(e*104|0)+12>>2];r=+g[p+(d*104|0)+16>>2]-+g[p+(e*104|0)+16>>2];g[n+(o*52|0)+16>>2]=+O(+(t*t+s*s+r*r));a[b+924>>0]=1;i=q;return}function Sf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0;f=i;i=i+784|0;c[f+712>>2]=1065353216;c[f+712+4>>2]=0;c[f+712+4+4>>2]=0;c[f+712+4+8>>2]=0;c[f+712+4+12>>2]=0;c[f+712+20>>2]=1065353216;c[f+712+24>>2]=0;c[f+712+24+4>>2]=0;c[f+712+24+8>>2]=0;c[f+712+24+12>>2]=0;c[f+712+40>>2]=1065353216;e=f+712+44|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[f+536>>2]=3708;c[f+536+168>>2]=0;g[f+536+172>>2]=0.0;c[f+536+164>>2]=c[b+200>>2];e=c[b+196>>2]|0;c[f+480+8>>2]=0;c[f+480+12>>2]=1065353216;c[f+480+16>>2]=1065353216;c[f+480+20>>2]=1065353216;g[f+480+24>>2]=0.0;c[f+480>>2]=6672;c[f+480+4>>2]=8;c[f+480+28>>2]=e;c[f+480+44>>2]=e;c[f+376+8>>2]=0;c[f+376+12>>2]=1065353216;c[f+376+16>>2]=1065353216;c[f+376+20>>2]=1065353216;g[f+376+24>>2]=0.0;g[f+376+44>>2]=.03999999910593033;c[f+376+52>>2]=0;c[f+376>>2]=3736;c[f+376+4>>2]=1;c[f+376+56>>2]=c[d>>2];c[f+376+56+4>>2]=c[d+4>>2];c[f+376+56+8>>2]=c[d+8>>2];c[f+376+56+12>>2]=c[d+12>>2];c[f+376+72>>2]=c[d+16>>2];c[f+376+72+4>>2]=c[d+16+4>>2];c[f+376+72+8>>2]=c[d+16+8>>2];c[f+376+72+12>>2]=c[d+16+12>>2];c[f+376+88>>2]=c[d+32>>2];c[f+376+88+4>>2]=c[d+32+4>>2];c[f+376+88+8>>2]=c[d+32+8>>2];c[f+376+88+12>>2]=c[d+32+12>>2];g[f+16+308>>2]=9.999999747378752e-05;a[f+16+332>>0]=0;c[f>>2]=4960;c[f+4>>2]=f+16;c[f+8>>2]=f+480;c[f+12>>2]=f+376;if(od(f,b+4|0,b+68|0,f+712|0,f+712|0,f+536|0)|0?(h=+g[f+536+164>>2],+g[b+200>>2]>h):0)g[b+200>>2]=h;c[f+376>>2]=7124;e=c[f+376+52>>2]|0;if(!e){i=f;return}Ab[c[c[e>>2]>>2]&255](e);e=c[f+376+52>>2]|0;if(!e){i=f;return}c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);i=f;return}function Tf(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0;o=i;i=i+48|0;c[6435]=(c[6435]|0)+1;g=yc(83)|0;if(!g)n=0;else{c[(g+4+15&-16)+-4>>2]=g;n=g+4+15&-16}c[n>>2]=h;b[n+4>>1]=j;b[n+6>>1]=k;j=n+16|0;c[j>>2]=c[e>>2];c[j+4>>2]=c[e+4>>2];c[j+8>>2]=c[e+8>>2];c[j+12>>2]=c[e+12>>2];j=n+32|0;c[j>>2]=c[f>>2];c[j+4>>2]=c[f+4>>2];c[j+8>>2]=c[f+8>>2];c[j+12>>2]=c[f+12>>2];c[n+8>>2]=0;j=n+56|0;c[j>>2]=0;k=n+52|0;c[k>>2]=0;c[o+16>>2]=c[e>>2];c[o+16+4>>2]=c[e+4>>2];c[o+16+8>>2]=c[e+8>>2];c[o+16+12>>2]=c[e+12>>2];c[o+16+16>>2]=c[f>>2];c[o+16+16+4>>2]=c[f+4>>2];c[o+16+16+8>>2]=c[f+8>>2];c[o+16+16+12>>2]=c[f+12>>2];c[n+60>>2]=c[d+144>>2];g=(c[d+188>>2]|0)+1|0;c[d+188>>2]=g;c[n+12>>2]=g;g=c[d+8>>2]|0;if(!g){c[6435]=(c[6435]|0)+1;g=yc(63)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16}l=g;m=l+44|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0))}else c[d+8>>2]=0;c[g+32>>2]=0;c[g+36>>2]=n;c[g+40>>2]=0;c[g>>2]=c[o+16>>2];c[g+4>>2]=c[o+16+4>>2];c[g+8>>2]=c[o+16+8>>2];c[g+12>>2]=c[o+16+12>>2];c[g+16>>2]=c[o+16+16>>2];c[g+20>>2]=c[o+16+20>>2];c[g+24>>2]=c[o+16+24>>2];c[g+28>>2]=c[o+16+28>>2];lf(d+4|0,c[d+4>>2]|0,g);c[d+16>>2]=(c[d+16>>2]|0)+1;c[n+48>>2]=g;l=d+124+(c[d+144>>2]<<2)|0;c[k>>2]=0;c[j>>2]=c[l>>2];g=c[l>>2]|0;if(g|0)c[g+52>>2]=n;c[l>>2]=n;if(a[d+193>>0]|0){i=o;return n|0}c[o>>2]=8904;c[o+4>>2]=d;c[o+8>>2]=n;bg(c[d+4>>2]|0,o+16|0,o);bg(c[d+64>>2]|0,o+16|0,o);i=o;return n|0}function Uf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;f=i;i=i+608|0;p=+g[d+116>>2]-+g[d+52>>2];o=+g[d+120>>2]-+g[d+56>>2];n=+g[d+124>>2]-+g[d+60>>2];j=+g[e+116>>2]-+g[e+52>>2];k=+g[e+120>>2]-+g[e+56>>2];l=+g[e+124>>2]-+g[e+60>>2];m=+g[d+252>>2];if(p*p+o*o+n*n<m*m?(p=+g[e+252>>2],j*j+k*k+l*l<p*p):0){p=1.0;i=f;return +p}b=c[d+192>>2]|0;h=c[e+248>>2]|0;c[f+552+8>>2]=0;c[f+552+12>>2]=1065353216;c[f+552+16>>2]=1065353216;c[f+552+20>>2]=1065353216;g[f+552+24>>2]=0.0;c[f+552>>2]=6672;c[f+552+4>>2]=8;c[f+552+28>>2]=h;c[f+552+44>>2]=h;c[f+376>>2]=3708;g[f+376+164>>2]=999999984306749440.0;c[f+376+168>>2]=0;g[f+376+172>>2]=0.0;g[f+16+308>>2]=9.999999747378752e-05;a[f+16+332>>0]=0;c[f>>2]=9140;c[f+4>>2]=f+16;c[f+8>>2]=b;c[f+12>>2]=f+552;if(Ed(f,d+4|0,d+68|0,e+4|0,e+68|0,f+376|0)|0){j=+g[f+376+164>>2];if(+g[d+244>>2]>j)g[d+244>>2]=j;if(+g[e+244>>2]>j)g[e+244>>2]=j;if(j<1.0)k=j;else k=1.0}else k=1.0;b=c[e+192>>2]|0;h=c[d+248>>2]|0;c[f+552+8>>2]=0;c[f+552+12>>2]=1065353216;c[f+552+16>>2]=1065353216;c[f+552+20>>2]=1065353216;g[f+552+24>>2]=0.0;c[f+552>>2]=6672;c[f+552+4>>2]=8;c[f+552+28>>2]=h;c[f+552+44>>2]=h;c[f+376>>2]=3708;g[f+376+164>>2]=999999984306749440.0;c[f+376+168>>2]=0;g[f+376+172>>2]=0.0;g[f+16+308>>2]=9.999999747378752e-05;a[f+16+332>>0]=0;c[f>>2]=9140;c[f+4>>2]=f+16;c[f+8>>2]=f+552;c[f+12>>2]=b;if(Ed(f,d+4|0,d+68|0,e+4|0,e+68|0,f+376|0)|0){j=+g[f+376+164>>2];if(+g[d+244>>2]>j)g[d+244>>2]=j;if(+g[e+244>>2]>j)g[e+244>>2]=j;if(!(k>j))j=k}else j=k;p=j;i=f;return +p}function Vf(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0;e=i;i=i+128|0;G=c[(c[a+8>>2]|0)+24>>2]|0;h=c[G+(d*80|0)+64>>2]|0;f=c[a+12>>2]|0;x=+g[G+(d*80|0)>>2];D=+g[f>>2];w=+g[G+(d*80|0)+16>>2];C=+g[f+4>>2];v=+g[G+(d*80|0)+32>>2];B=+g[f+8>>2];u=+g[G+(d*80|0)+4>>2];t=+g[G+(d*80|0)+20>>2];s=+g[G+(d*80|0)+36>>2];r=+g[G+(d*80|0)+8>>2];p=+g[G+(d*80|0)+24>>2];n=+g[G+(d*80|0)+40>>2];A=+g[f+16>>2];z=+g[f+20>>2];y=+g[f+24>>2];q=+g[f+32>>2];o=+g[f+36>>2];m=+g[f+40>>2];F=+g[G+(d*80|0)+48>>2];E=+g[G+(d*80|0)+52>>2];j=+g[G+(d*80|0)+56>>2];l=+g[f+48>>2]+(D*F+C*E+B*j);k=A*F+z*E+y*j+ +g[f+52>>2];j=q*F+o*E+m*j+ +g[f+56>>2];g[e+56>>2]=x*D+w*C+v*B;g[e+56+4>>2]=D*u+C*t+B*s;g[e+56+8>>2]=D*r+C*p+B*n;g[e+56+12>>2]=0.0;g[e+56+16>>2]=x*A+w*z+v*y;g[e+56+20>>2]=u*A+t*z+s*y;g[e+56+24>>2]=r*A+p*z+n*y;g[e+56+28>>2]=0.0;g[e+56+32>>2]=x*q+w*o+v*m;g[e+56+36>>2]=u*q+t*o+s*m;g[e+56+40>>2]=r*q+p*o+n*m;g[e+56+44>>2]=0.0;g[e+56+48>>2]=l;g[e+56+52>>2]=k;g[e+56+56>>2]=j;g[e+56+60>>2]=0.0;f=c[a+4>>2]|0;c[e+32>>2]=0;c[e+32+4>>2]=h;c[e+32+8>>2]=f;c[e+32+12>>2]=e+56;c[e+32+16>>2]=-1;c[e+32+20>>2]=d;f=c[a+24>>2]|0;g[e+4>>2]=1.0;c[e+8>>2]=0;b[e+12>>1]=1;b[e+14>>1]=-1;c[e+16>>2]=0;c[e>>2]=5840;c[e+20>>2]=f;c[e+24>>2]=d;c[e+4>>2]=c[f+4>>2];c[e+16>>2]=c[f+16>>2];bd(c[a+16>>2]|0,c[a+20>>2]|0,e+32|0,e);i=e;return}function Wf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;j=i;i=i+96|0;f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=0;do{q=j+80+(h<<2)|0;c[j+80>>2]=0;c[j+80+4>>2]=0;c[j+80+8>>2]=0;c[j+80+12>>2]=0;g[q>>2]=1.0;k=c[(c[a>>2]|0)+64>>2]|0;l=+g[j+80>>2];m=+g[j+80+4>>2];n=+g[j+80+8>>2];o=l*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=l*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[j+32>>2]=+g[b>>2]*l+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[j+32+4>>2]=o;g[j+32+8>>2]=p;g[j+32+12>>2]=0.0;ic[k&127](j+64|0,a,j+32|0);p=+g[j+64>>2];o=+g[j+64+4>>2];n=+g[j+64+8>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];l=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[j+48>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[j+48+4>>2]=m;g[j+48+8>>2]=l;g[j+48+12>>2]=0.0;k=j+48+(h<<2)|0;g[e+(h<<2)>>2]=f+ +g[k>>2];g[q>>2]=-1.0;q=c[(c[a>>2]|0)+64>>2]|0;l=+g[j+80>>2];m=+g[j+80+4>>2];n=+g[j+80+8>>2];o=l*+g[b+4>>2]+m*+g[b+20>>2]+n*+g[b+36>>2];p=l*+g[b+8>>2]+m*+g[b+24>>2]+n*+g[b+40>>2];g[j>>2]=+g[b>>2]*l+ +g[b+16>>2]*m+ +g[b+32>>2]*n;g[j+4>>2]=o;g[j+8>>2]=p;g[j+12>>2]=0.0;ic[q&127](j+16|0,a,j);p=+g[j+16>>2];o=+g[j+16+4>>2];n=+g[j+16+8>>2];m=p*+g[b+16>>2]+o*+g[b+20>>2]+n*+g[b+24>>2]+ +g[b+52>>2];l=p*+g[b+32>>2]+o*+g[b+36>>2]+n*+g[b+40>>2]+ +g[b+56>>2];g[j+48>>2]=p*+g[b>>2]+o*+g[b+4>>2]+n*+g[b+8>>2]+ +g[b+48>>2];g[j+48+4>>2]=m;g[j+48+8>>2]=l;g[j+48+12>>2]=0.0;g[d+(h<<2)>>2]=+g[k>>2]-f;h=h+1|0}while((h|0)!=3);i=j;return}function Xf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=i;i=i+160|0;j=c[b+12>>2]|0;if(!j){i=l;return}m=(a[b+16>>0]|0)!=0;n=m?e:d;e=m?d:e;p=c[n+4>>2]|0;o=c[e+4>>2]|0;c[h+4>>2]=j;d=c[j+752>>2]|0;c[l+136>>2]=9304;c[l+136+4>>2]=p;c[l+136+8>>2]=o;c[l+136+12>>2]=d;g[l+128>>2]=999999984306749440.0;d=c[n+12>>2]|0;c[l>>2]=c[d>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2];c[l+12>>2]=c[d+12>>2];c[l+16>>2]=c[d+16>>2];c[l+16+4>>2]=c[d+16+4>>2];c[l+16+8>>2]=c[d+16+8>>2];c[l+16+12>>2]=c[d+16+12>>2];c[l+32>>2]=c[d+32>>2];c[l+32+4>>2]=c[d+32+4>>2];c[l+32+8>>2]=c[d+32+8>>2];c[l+32+12>>2]=c[d+32+12>>2];c[l+48>>2]=c[d+48>>2];c[l+48+4>>2]=c[d+48+4>>2];c[l+48+8>>2]=c[d+48+8>>2];c[l+48+12>>2]=c[d+48+12>>2];e=c[e+12>>2]|0;c[l+64>>2]=c[e>>2];c[l+64+4>>2]=c[e+4>>2];c[l+64+8>>2]=c[e+8>>2];c[l+64+12>>2]=c[e+12>>2];c[l+80>>2]=c[e+16>>2];c[l+80+4>>2]=c[e+16+4>>2];c[l+80+8>>2]=c[e+16+8>>2];c[l+80+12>>2]=c[e+16+12>>2];c[l+96>>2]=c[e+32>>2];c[l+96+4>>2]=c[e+32+4>>2];c[l+96+8>>2]=c[e+32+8>>2];c[l+96+12>>2]=c[e+32+12>>2];c[l+112>>2]=c[e+48>>2];c[l+112+4>>2]=c[e+48+4>>2];c[l+112+8>>2]=c[e+48+8>>2];c[l+112+12>>2]=c[e+48+12>>2];$d(l+136|0,l,h,c[f+20>>2]|0,m);do if(a[b+8>>0]|0?(k=c[h+4>>2]|0,c[k+748>>2]|0):0){d=c[k+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((d|0)==(e|0)){ef(k,d+4|0,j+4|0);break}else{ef(k,j+4|0,e+4|0);break}}while(0);i=l;return}function Yf(d,e,f){d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0;c[d+4>>2]=1065353216;c[d+8>>2]=1065353216;c[d+12>>2]=1065353216;g[d+16>>2]=0.0;a[d+36>>0]=1;c[d+32>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;c[d+48>>2]=0;c[d>>2]=8452;a[d+100>>0]=1;c[d+96>>2]=0;c[d+88>>2]=0;c[d+92>>2]=0;a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;a[d+140>>0]=1;c[d+136>>2]=0;c[d+128>>2]=0;c[d+132>>2]=0;a[d+160>>0]=1;c[d+156>>2]=0;c[d+148>>2]=0;c[d+152>>2]=0;a[d+164>>0]=e&1;a[d+165>>0]=f&1;g[d+168>>2]=0.0;c[6435]=(c[6435]|0)+1;e=yc(51)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16}e=c[d+24>>2]|0;if((e|0)>0){f=0;do{i=h+(f<<5)|0;j=(c[d+32>>2]|0)+(f<<5)|0;c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];c[i+16>>2]=c[j+16>>2];c[i+20>>2]=c[j+20>>2];c[i+24>>2]=c[j+24>>2];c[i+28>>2]=c[j+28>>2];f=f+1|0}while((f|0)!=(e|0))}e=c[d+32>>2]|0;if(e|0){if(a[d+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[d+32>>2]=0}a[d+36>>0]=1;c[d+32>>2]=h;c[d+28>>2]=1;e=c[d+24>>2]|0;c[h+(e<<5)>>2]=0;c[h+(e<<5)+4>>2]=0;c[h+(e<<5)+8>>2]=12;c[h+(e<<5)+12>>2]=0;c[h+(e<<5)+16>>2]=0;c[h+(e<<5)+20>>2]=16;c[h+(e<<5)+24>>2]=2;c[h+(e<<5)+28>>2]=0;c[d+24>>2]=(c[d+24>>2]|0)+1;e=b[d+164>>1]|0;if(!((e&255)<<24>>24)){f=c[d+32>>2]|0;c[f>>2]=(c[d+148>>2]|0)/3|0;c[f+4>>2]=0;c[f+24>>2]=3;c[f+8>>2]=6}else{f=c[d+32>>2]|0;c[f>>2]=(c[d+128>>2]|0)/3|0;c[f+4>>2]=0;c[f+24>>2]=2;c[f+8>>2]=12}if((e&65535)<256){i=12;d=(c[d+108>>2]|0)/3|0;j=f+12|0;c[j>>2]=d;j=f+16|0;c[j>>2]=0;j=f+20|0;c[j>>2]=i;return}else{i=16;d=c[d+88>>2]|0;j=f+12|0;c[j>>2]=d;j=f+16|0;c[j>>2]=0;j=f+20|0;c[j>>2]=i;return}}function Zf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;q=i;i=i+48|0;if((f|0)==(d|0)|((d|0)==(e|0)|(e|0)==(f|0))){i=q;return}l=q;m=l+36|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));if(!h)p=c[c[b+880>>2]>>2]|0;else p=h;h=c[b+752>>2]|0;if((h|0)==(c[b+756>>2]|0)?(o=h|0?h<<1:1,(h|0)<(o|0)):0){if(!o)n=0;else{c[6435]=(c[6435]|0)+1;h=yc((o*44|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}n=h;h=c[b+752>>2]|0}if((h|0)>0){j=0;do{l=n+(j*44|0)|0;k=(c[b+760>>2]|0)+(j*44|0)|0;m=l+44|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));j=j+1|0}while((j|0)!=(h|0))}h=c[b+760>>2]|0;if(h|0){if(a[b+764>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+760>>2]=0}a[b+764>>0]=1;c[b+760>>2]=n;c[b+756>>2]=o;h=c[b+752>>2]|0}l=c[b+760>>2]|0;c[l+(h*44|0)>>2]=0;c[l+(h*44|0)+4>>2]=p;l=l+(h*44|0)+8|0;k=q;m=l+36|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(m|0));p=c[b+752>>2]|0;c[b+752>>2]=p+1;o=c[b+760>>2]|0;l=c[b+720>>2]|0;c[o+(p*44|0)+8>>2]=l+(d*104|0);m=c[b+720>>2]|0;c[o+(p*44|0)+12>>2]=m+(e*104|0);n=c[b+720>>2]|0;c[o+(p*44|0)+16>>2]=n+(f*104|0);t=+g[l+(d*104|0)+8>>2];v=+g[l+(d*104|0)+12>>2];r=+g[l+(d*104|0)+16>>2];s=+g[m+(e*104|0)+8>>2]-t;w=+g[m+(e*104|0)+12>>2]-v;u=+g[m+(e*104|0)+16>>2]-r;t=+g[n+(f*104|0)+8>>2]-t;v=+g[n+(f*104|0)+12>>2]-v;r=+g[n+(f*104|0)+16>>2]-r;g[o+(p*44|0)+36>>2]=+O(+((s*v-w*t)*(s*v-w*t)+((w*r-u*v)*(w*r-u*v)+(u*t-s*r)*(u*t-s*r))));a[b+924>>0]=1;i=q;return}function _f(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;m=i;i=i+16|0;li(12187);e=c[b+232>>2]|0;if((e|0)>0){l=(a[26260]|0)==0;k=0;do{j=c[(c[b+240>>2]|0)+(k<<2)>>2]|0;a:do if(j){f=c[j+216>>2]|0;b:do switch(f|0){case 4:case 2:{if((f|0)==4)break a;break}default:{q=+g[j+312>>2];p=+g[j+316>>2];o=+g[j+320>>2];n=+g[j+472>>2];if(q*q+p*p+o*o<n*n?(n=+g[j+328>>2],o=+g[j+332>>2],p=+g[j+336>>2],q=+g[j+476>>2],n*n+o*o+p*p<q*q):0){g[j+220>>2]=+g[j+220>>2]+d;break b}g[j+220>>2]=0.0;if((f&-2|0)!=4){c[j+216>>2]=0;f=0}}}while(0);h=f&-2;do if(l){if((h|0)!=2?!(+g[j+220>>2]>2.0):0)break;if(c[j+204>>2]&3|0){if((h|0)==4)break a;c[j+216>>2]=2;break a}if((f|0)==1){if((h|0)==4)break a;c[j+216>>2]=3;break a}else{if((f|0)!=2)break a;e=(c[j+260>>2]|0)+2|0;c[j+328>>2]=0;c[j+328+4>>2]=0;c[j+328+8>>2]=0;c[j+328+12>>2]=0;c[j+260>>2]=e;c[j+312>>2]=0;c[j+312+4>>2]=0;c[j+312+8>>2]=0;c[j+312+12>>2]=0;e=c[b+232>>2]|0;break a}}while(0);if((h|0)!=4)c[j+216>>2]=1}while(0);k=k+1|0}while((k|0)<(e|0))}e=c[2357]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){i=m;return}do if(c[e+4>>2]|0){tb(m|0,0)|0;b=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[m+4>>2]|0)-(c[b+4>>2]|0)+(((c[m>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2357]|0;break}else{i=m;return}}while(0);c[2357]=c[e+20>>2];i=m;return}function $f(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0;H=i;i=i+32|0;k=+g[b+16>>2];f=+g[b>>2];l=+g[b+20>>2];h=+g[b+4>>2];n=+g[b+24>>2];j=+g[b+8>>2];r=+g[b+32>>2];v=+g[b+36>>2];w=+g[b+40>>2];B=(l-h)*(w-j)-(n-j)*(v-h);C=(n-j)*(r-f)-(k-f)*(w-j);D=(k-f)*(v-h)-(l-h)*(r-f);g[H+16>>2]=B;g[H+16+4>>2]=C;g[H+16+8>>2]=D;g[H+16+12>>2]=0.0;o=+g[a+4>>2];s=+g[a+8>>2];x=+g[a+12>>2];E=B*o+C*s+D*x-(f*B+h*C+j*D);p=+g[a+20>>2];t=+g[a+24>>2];y=+g[a+28>>2];if(E*(B*p+C*t+D*y-(f*B+h*C+j*D))>=0.0){i=H;return}F=c[a+36>>2]|0;if(E<=0.0&(F&1|0)!=0){i=H;return}G=E/(E-(B*p+C*t+D*y-(f*B+h*C+j*D)));if(!(G<+g[a+40>>2])){i=H;return}A=(B*B+C*C+D*D)*-9.999999747378752e-05;z=f-(p*G+o*(1.0-G));u=h-(t*G+s*(1.0-G));q=j-(y*G+x*(1.0-G));m=k-(p*G+o*(1.0-G));l=l-(t*G+s*(1.0-G));k=n-(y*G+x*(1.0-G));if(!(D*(z*l-u*m)+(B*(u*k-q*l)+C*(q*m-z*k))>=A)){i=H;return}j=r-(p*G+o*(1.0-G));h=v-(t*G+s*(1.0-G));f=w-(y*G+x*(1.0-G));if(!(D*(m*h-l*j)+(B*(l*f-k*h)+C*(k*j-m*f))>=A)){i=H;return}if(!(D*(u*j-z*h)+(B*(q*h-u*f)+C*(z*f-q*j))>=A)){i=H;return}f=1.0/+O(+(B*B+C*C+D*D));g[H+16>>2]=B*f;g[H+16+4>>2]=C*f;g[H+16+8>>2]=D*f;b=c[(c[a>>2]|0)+12>>2]|0;if(E<=0.0&(F&2|0)==0){g[H>>2]=-(B*f);g[H+4>>2]=-(C*f);g[H+8>>2]=-(D*f);g[H+12>>2]=0.0;g[a+40>>2]=+ec[b&3](a,H,G,d,e);i=H;return}else{g[a+40>>2]=+ec[b&3](a,H+16|0,G,d,e);i=H;return}}function ag(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;l=i;i=i+144|0;j=c[b+12>>2]|0;if(!j){i=l;return}n=c[d+4>>2]|0;m=c[e+4>>2]|0;c[h+4>>2]=j;g[l+12+128>>2]=999999984306749440.0;d=c[d+12>>2]|0;c[l+12>>2]=c[d>>2];c[l+12+4>>2]=c[d+4>>2];c[l+12+8>>2]=c[d+8>>2];c[l+12+12>>2]=c[d+12>>2];c[l+12+16>>2]=c[d+16>>2];c[l+12+16+4>>2]=c[d+16+4>>2];c[l+12+16+8>>2]=c[d+16+8>>2];c[l+12+16+12>>2]=c[d+16+12>>2];c[l+12+32>>2]=c[d+32>>2];c[l+12+32+4>>2]=c[d+32+4>>2];c[l+12+32+8>>2]=c[d+32+8>>2];c[l+12+32+12>>2]=c[d+32+12>>2];c[l+12+48>>2]=c[d+48>>2];c[l+12+48+4>>2]=c[d+48+4>>2];c[l+12+48+8>>2]=c[d+48+8>>2];c[l+12+48+12>>2]=c[d+48+12>>2];e=c[e+12>>2]|0;c[l+12+64>>2]=c[e>>2];c[l+12+64+4>>2]=c[e+4>>2];c[l+12+64+8>>2]=c[e+8>>2];c[l+12+64+12>>2]=c[e+12>>2];c[l+12+80>>2]=c[e+16>>2];c[l+12+80+4>>2]=c[e+16+4>>2];c[l+12+80+8>>2]=c[e+16+8>>2];c[l+12+80+12>>2]=c[e+16+12>>2];c[l+12+96>>2]=c[e+32>>2];c[l+12+96+4>>2]=c[e+32+4>>2];c[l+12+96+8>>2]=c[e+32+8>>2];c[l+12+96+12>>2]=c[e+32+12>>2];c[l+12+112>>2]=c[e+48>>2];c[l+12+112+4>>2]=c[e+48+4>>2];c[l+12+112+8>>2]=c[e+48+8>>2];c[l+12+112+12>>2]=c[e+48+12>>2];c[l>>2]=9284;c[l+4>>2]=n;c[l+8>>2]=m;xc(l,l+12|0,h,c[f+20>>2]|0,0);do if(a[b+8>>0]|0?(k=c[h+4>>2]|0,c[k+748>>2]|0):0){d=c[k+740>>2]|0;e=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((d|0)==(e|0)){ef(k,d+4|0,j+4|0);break}else{ef(k,j+4|0,e+4|0);break}}while(0);i=l;return}function bg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0;if(!a)return;n=+g[b>>2];o=+g[b+4>>2];q=+g[b+8>>2];s=+g[b+16>>2];m=+g[b+20>>2];l=+g[b+24>>2];c[6435]=(c[6435]|0)+1;b=yc(275)|0;c[(b+4+15&-16)+-4>>2]=b;c[(b+4+15&-16)>>2]=a;k=1;a=64;b=b+4+15&-16;while(1){e=k+-1|0;i=c[b+(e<<2)>>2]|0;do if(((((+g[i>>2]<=s?+g[i+16>>2]>=n:0)?+g[i+4>>2]<=m:0)?+g[i+20>>2]>=o:0)?+g[i+8>>2]<=l:0)?+g[i+24>>2]>=q:0){if(!(c[i+40>>2]|0)){Cb[c[(c[d>>2]|0)+12>>2]&127](d,i);break}j=c[i+36>>2]|0;do if((e|0)==(a|0)?(p=a|0?a<<1:1,(k|0)<=(p|0)):0){if((p|0)!=0?(c[6435]=(c[6435]|0)+1,r=yc((p<<2|3)+16|0)|0,(r|0)!=0):0){c[(r+4+15&-16)+-4>>2]=r;h=r+4+15&-16}else h=0;if((k|0)<=1){if(!b){a=p;b=h;break}}else{f=0;do{c[h+(f<<2)>>2]=c[b+(f<<2)>>2];f=f+1|0}while((f|0)!=(a|0))}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);a=p;b=h}while(0);c[b+(e<<2)>>2]=j;h=c[i+40>>2]|0;do if((k|0)==(a|0)){a=k|0?k<<1:1;if((k|0)<(a|0)){if((a|0)!=0?(c[6435]=(c[6435]|0)+1,t=yc((a<<2|3)+16|0)|0,(t|0)!=0):0){c[(t+4+15&-16)+-4>>2]=t;f=t+4+15&-16}else f=0;if((k|0)<=0){if(!b){b=f;break}}else{e=0;do{c[f+(e<<2)>>2]=c[b+(e<<2)>>2];e=e+1|0}while((e|0)!=(k|0))}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);b=f}else a=k}while(0);c[b+(k<<2)>>2]=h;e=k+1|0}while(0);if((e|0)>0)k=e;else break}if(!b)return;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function cg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((c[b+104>>2]|0)>0){l=0;do{h=c[(c[b+4>>2]|0)+684>>2]|0;i=(c[b+112>>2]|0)+(l<<3)+4|0;d=c[i>>2]|0;if((c[h+60>>2]|0)>0){k=0;do{j=(c[h+68>>2]|0)+(k<<2)|0;e=c[j>>2]|0;a:do if(e|0){f=0;do{g=f+280|0;b:do if(!f)while(1){f=e;e=c[e+280>>2]|0;if((c[f+276>>2]|0)!=(d|0))break b;c[j>>2]=e;hd(f);if(!e)break a}else while(1){f=e;e=c[e+280>>2]|0;if((c[f+276>>2]|0)!=(d|0))break b;c[g>>2]=e;hd(f);if(!e)break a}while(0)}while((e|0)!=0)}while(0);k=k+1|0}while((k|0)<(c[h+60>>2]|0));d=c[i>>2]|0}if(d|0)Ab[c[(c[d>>2]|0)+4>>2]&255](d);l=l+1|0}while((l|0)<(c[b+104>>2]|0))}d=c[b+72>>2]|0;if(d|0){if(a[b+76>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+72>>2]=0}a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;d=c[b+92>>2]|0;if(d|0){if(a[b+96>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+92>>2]=0}a[b+96>>0]=1;c[b+92>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;d=c[b+112>>2]|0;if(d|0){if(a[b+116>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+112>>2]=0}a[b+116>>0]=1;c[b+112>>2]=0;c[b+104>>2]=0;c[b+108>>2]=0;d=c[b+132>>2]|0;if(!d){a[b+136>>0]=1;c[b+132>>2]=0;c[b+124>>2]=0;b=b+128|0;c[b>>2]=0;return}if(a[b+136>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+132>>2]=0;a[b+136>>0]=1;c[b+132>>2]=0;c[b+124>>2]=0;b=b+128|0;c[b>>2]=0;return}function dg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=c[a+56>>2]|0;if(!e){e=c[a+52>>2]|0;if(!e){c[6435]=(c[6435]|0)+1;e=yc(31)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[a+60>>2]|0;c[e+4>>2]=f;g=e+8|0;c[g>>2]=0;c[6435]=(c[6435]|0)+1;f=yc((f*24|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[e>>2]=f;c[g>>2]=c[a+48>>2];c[a+48>>2]=e}else c[a+52>>2]=c[e+8>>2];h=c[e+4>>2]|0;e=c[e>>2]|0;if((h|0)>0){f=0;g=e;do{f=f+1|0;i=g;g=g+24|0;c[i>>2]=(f|0)<(h|0)?g:0}while((f|0)!=(h|0));i=e}else i=e}else i=e;c[a+56>>2]=c[i>>2];c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;c[i+16>>2]=0;c[i+20>>2]=0;e=c[a+56>>2]|0;if(!e){e=c[a+52>>2]|0;if(!e){c[6435]=(c[6435]|0)+1;e=yc(31)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[a+60>>2]|0;c[e+4>>2]=f;g=e+8|0;c[g>>2]=0;c[6435]=(c[6435]|0)+1;f=yc((f*24|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[e>>2]=f;c[g>>2]=c[a+48>>2];c[a+48>>2]=e}else c[a+52>>2]=c[e+8>>2];h=c[e+4>>2]|0;e=c[e>>2]|0;if((h|0)>0){f=0;g=e;do{f=f+1|0;j=g;g=g+24|0;c[j>>2]=(f|0)<(h|0)?g:0}while((f|0)!=(h|0))}}c[a+56>>2]=c[e>>2];c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[i+8>>2]=e;c[e+8>>2]=i;j=c[a+100>>2]|0;c[i+20>>2]=j;c[e+20>>2]=j;c[i+12>>2]=d;c[e+12>>2]=b;c[i+16>>2]=0;c[e+16>>2]=0;e=c[a+116>>2]|0;c[a+116>>2]=e+1;if((e|0)<(c[a+120>>2]|0))return i|0;c[a+120>>2]=e+1;return i|0}function eg(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0;b=c[a+752>>2]|0;if((b|0)>0){d=c[a+760>>2]|0;e=0;do{o=c[d+(e*44|0)+8>>2]|0;f=c[d+(e*44|0)+12>>2]|0;h=c[d+(e*44|0)+16>>2]|0;k=+g[o+8>>2];m=+g[o+12>>2];i=+g[o+16>>2];j=+g[f+8>>2]-k;n=+g[f+12>>2]-m;l=+g[f+16>>2]-i;k=+g[h+8>>2]-k;m=+g[h+12>>2]-m;i=+g[h+16>>2]-i;g[d+(e*44|0)+36>>2]=+O(+((j*m-n*k)*(j*m-n*k)+((n*i-l*m)*(n*i-l*m)+(l*k-j*i)*(l*k-j*i))));e=e+1|0}while((e|0)!=(b|0))}d=c[a+712>>2]|0;if((d|0)>0){c[6435]=(c[6435]|0)+1;b=yc((d<<2|3)+16|0)|0;if(!b)f=0;else{c[(b+4+15&-16)+-4>>2]=b;f=b+4+15&-16}Tn(f|0,0,d<<2|0)|0;d=c[a+712>>2]|0;if((d|0)>0){b=c[a+720>>2]|0;e=0;do{g[b+(e*104|0)+92>>2]=0.0;e=e+1|0}while((e|0)!=(d|0));h=f}else h=f}else h=0;f=c[a+752>>2]|0;if((f|0)>0){b=c[a+760>>2]|0;d=c[a+720>>2]|0;e=0;do{n=+N(+(+g[b+(e*44|0)+36>>2]));o=c[b+(e*44|0)+8>>2]|0;p=h+(((o-d|0)/104|0)<<2)|0;c[p>>2]=(c[p>>2]|0)+1;g[o+92>>2]=n+ +g[o+92>>2];o=c[b+(e*44|0)+12>>2]|0;p=h+(((o-d|0)/104|0)<<2)|0;c[p>>2]=(c[p>>2]|0)+1;g[o+92>>2]=n+ +g[o+92>>2];o=c[b+(e*44|0)+16>>2]|0;p=h+(((o-d|0)/104|0)<<2)|0;c[p>>2]=(c[p>>2]|0)+1;g[o+92>>2]=n+ +g[o+92>>2];e=e+1|0}while((e|0)!=(f|0));d=c[a+712>>2]|0}if((d|0)<=0){if(!h)return}else{e=0;do{b=c[h+(e<<2)>>2]|0;if((b|0)>0){p=(c[a+720>>2]|0)+(e*104|0)+92|0;g[p>>2]=+g[p>>2]/+(b|0)}else g[(c[a+720>>2]|0)+(e*104|0)+92>>2]=0.0;e=e+1|0}while((e|0)!=(d|0))}c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);return}function fg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;l=i;i=i+16|0;j=c[b+28>>2]|0;k=c[b+32>>2]|0;if(!(a[b+1301>>0]|0)){h=0;e=Nf(b,d,0,j+4|0,k+4|0,j+312|0,k+312|0,j+328|0,k+328|0)|0;do{f=b+868+(h<<6)|0;if(!((c[b+868+(h<<6)+56>>2]|0)==0?(a[b+868+(h<<6)+44>>0]|0)==0:0)){g=b+1208+(h<<4)|0;c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];c[l+8>>2]=c[g+8>>2];c[l+12>>2]=c[g+12>>2];g=c[b+1304>>2]>>(h*3|0)+9;if(!(g&1))c[b+868+(h<<6)+28>>2]=c[c[d+32>>2]>>2];if(!(g&2))c[b+868+(h<<6)+36>>2]=c[c[d+32>>2]>>2];if(!(g&4))c[b+868+(h<<6)+32>>2]=c[d+4>>2];e=(Dd(b,f,j+4|0,k+4|0,j+312|0,k+312|0,j+328|0,k+328|0,d,e,l,1,0)|0)+e|0}h=h+1|0}while((h|0)!=3);i=l;return}h=0;e=0;do{f=b+868+(h<<6)|0;if(!((c[b+868+(h<<6)+56>>2]|0)==0?(a[b+868+(h<<6)+44>>0]|0)==0:0)){g=b+1208+(h<<4)|0;c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];c[l+8>>2]=c[g+8>>2];c[l+12>>2]=c[g+12>>2];g=c[b+1304>>2]>>(h*3|0)+9;if(!(g&1))c[b+868+(h<<6)+28>>2]=c[c[d+32>>2]>>2];if(!(g&2))c[b+868+(h<<6)+36>>2]=c[c[d+32>>2]>>2];if(!(g&4))c[b+868+(h<<6)+32>>2]=c[d+4>>2];e=(Dd(b,f,j+4|0,k+4|0,j+312|0,k+312|0,j+328|0,k+328|0,d,e,l,1,0)|0)+e|0}h=h+1|0}while((h|0)!=3);Nf(b,d,e,j+4|0,k+4|0,j+312|0,k+312|0,j+328|0,k+328|0)|0;i=l;return}function gg(b){b=b|0;var d=0,e=0,f=0,h=0.0,i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0;d=c[b+988>>2]|0;if(d|0)An(b+988|0,d);d=c[b+992>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+992>>2]=0;c[b+996>>2]=-1;d=c[b+1020>>2]|0;if(d|0){if(a[b+1024>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+1020>>2]=0}a[b+1024>>0]=1;c[b+1020>>2]=0;c[b+1012>>2]=0;c[b+1016>>2]=0;c[b+1004>>2]=0;if((c[b+752>>2]|0)<=0)return;r=0;do{j=c[b+760>>2]|0;k=j+(r*44|0)|0;e=c[j+(r*44|0)+8>>2]|0;f=c[j+(r*44|0)+12>>2]|0;d=c[j+(r*44|0)+16>>2]|0;o=+g[e+8>>2];p=+g[e+12>>2];q=+g[e+16>>2];i=+g[e+20>>2];v=+g[f+8>>2];l=v<o?v:o;s=+g[f+12>>2];m=s<p?s:p;t=+g[f+16>>2];n=t<q?t:q;u=+g[f+20>>2];h=u<i?u:i;o=o<v?v:o;p=p<s?s:p;q=q<t?t:q;i=i<u?u:i;u=+g[d+8>>2];l=u<l?u:l;t=+g[d+12>>2];m=t<m?t:m;s=+g[d+16>>2];n=s<n?s:n;v=+g[d+20>>2];h=v<h?v:h;i=i<v?v:i;o=(o<u?u:o)+0.0;p=(p<t?t:p)+0.0;q=(q<s?s:q)+0.0;d=c[b+992>>2]|0;if(!d){c[6435]=(c[6435]|0)+1;d=yc(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=d;f=e+44|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0))}else c[b+992>>2]=0;c[d+32>>2]=0;c[d+36>>2]=k;c[d+40>>2]=0;g[d>>2]=l;g[d+4>>2]=m;g[d+8>>2]=n;g[d+12>>2]=h;g[d+16>>2]=o;g[d+20>>2]=p;g[d+24>>2]=q;g[d+28>>2]=i;lf(b+988|0,c[b+988>>2]|0,d);c[b+1e3>>2]=(c[b+1e3>>2]|0)+1;c[j+(r*44|0)+40>>2]=d;r=r+1|0}while((r|0)<(c[b+752>>2]|0));return}function hg(b){b=b|0;var d=0,e=0.0,f=0,h=0,j=0.0,k=0.0,l=0;l=i;i=i+64|0;li(11978);a:do if(!(a[b+274>>0]|0)){d=c[b+232>>2]|0;if((d|0)>0){h=0;while(1){f=c[(c[b+240>>2]|0)+(h<<2)>>2]|0;switch(c[f+216>>2]|0){case 2:case 5:break;default:if((c[f+480>>2]|0)!=0?(c[f+204>>2]&3|0)==0:0){if((a[b+300>>0]|0)!=0?(k=+g[b+268>>2],k!=0.0):0)e=+g[b+264>>2]-k;else e=+g[b+264>>2]*+g[f+244>>2];Zg(f+68|0,+g[f+132>>2],+g[f+136>>2],+g[f+140>>2],f+148|0,e,l);d=c[f+480>>2]|0;Cb[c[(c[d>>2]|0)+12>>2]&127](d,l);d=c[b+232>>2]|0}}h=h+1|0;if((h|0)>=(d|0))break a}}}else{d=c[b+8>>2]|0;if((d|0)>0){h=0;do{f=c[(c[b+16>>2]|0)+(h<<2)>>2]|0;if((!((f|0)==0?1:(c[f+236>>2]&2|0)==0)?(c[f+480>>2]|0)!=0:0)?(c[f+204>>2]&3|0)==0:0){if((a[b+300>>0]|0)!=0?(j=+g[b+268>>2],j!=0.0):0)e=+g[b+264>>2]-j;else e=+g[b+264>>2]*+g[f+244>>2];Zg(f+68|0,+g[f+132>>2],+g[f+136>>2],+g[f+140>>2],f+148|0,e,l);d=c[f+480>>2]|0;Cb[c[(c[d>>2]|0)+12>>2]&127](d,l);d=c[b+8>>2]|0}h=h+1|0}while((h|0)<(d|0))}}while(0);d=c[2357]|0;b=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=b;if(b|0){i=l;return}do if(c[d+4>>2]|0){tb(l|0,0)|0;b=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[l+4>>2]|0)-(c[b+4>>2]|0)+(((c[l>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=l;return}}while(0);c[2357]=c[d+20>>2];i=l;return}function ig(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;i=i+32|0;if((b|0)<0)b=c[a+12>>2]|0;d=c[a>>2]|0;if(!((b|0)>0&(d|0)!=0)){i=n;return}while(1){e=d+40|0;if(c[e>>2]|0){m=0;while(1){l=(c[a+16>>2]|0)>>>m&1;f=d+32|0;g=c[f>>2]|0;if(g>>>0>d>>>0){h=(c[g+40>>2]|0)==(d|0)&1;j=c[g+36+((h^1)<<2)>>2]|0;k=c[g+32>>2]|0;if(!k)c[a>>2]=d;else c[k+36+(((c[k+40>>2]|0)==(g|0)&1)<<2)>>2]=d;c[j+32>>2]=d;c[g+32>>2]=d;c[f>>2]=k;k=d+36|0;c[g+36>>2]=c[k>>2];c[g+40>>2]=c[e>>2];c[(c[k>>2]|0)+32>>2]=g;c[(c[e>>2]|0)+32>>2]=g;c[d+36+(h<<2)>>2]=g;c[d+36+((h^1)<<2)>>2]=j;c[n>>2]=c[g>>2];c[n+4>>2]=c[g+4>>2];c[n+8>>2]=c[g+8>>2];c[n+12>>2]=c[g+12>>2];c[n+16>>2]=c[g+16>>2];c[n+20>>2]=c[g+20>>2];c[n+24>>2]=c[g+24>>2];c[n+28>>2]=c[g+28>>2];c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];c[g+8>>2]=c[d+8>>2];c[g+12>>2]=c[d+12>>2];c[g+16>>2]=c[d+16>>2];c[g+20>>2]=c[d+20>>2];c[g+24>>2]=c[d+24>>2];c[g+28>>2]=c[d+28>>2];c[d>>2]=c[n>>2];c[d+4>>2]=c[n+4>>2];c[d+8>>2]=c[n+8>>2];c[d+12>>2]=c[n+12>>2];c[d+16>>2]=c[n+16>>2];c[d+20>>2]=c[n+20>>2];c[d+24>>2]=c[n+24>>2];c[d+28>>2]=c[n+28>>2];d=g}d=c[d+36+(l<<2)>>2]|0;e=d+40|0;if(!(c[e>>2]|0))break;else m=m+1&31}}if(!(hh(a,d)|0))e=0;else e=c[a>>2]|0;lf(a,e,d);c[a+16>>2]=(c[a+16>>2]|0)+1;b=b+-1|0;if(!b)break;d=c[a>>2]|0}i=n;return}function jg(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;j=i;i=i+32|0;d=a[b+8>>0]|0?d:e;if(((c[(c[d+4>>2]|0)+4>>2]|0)+-21|0)>>>0>=9){i=j;return}e=c[(c[d+8>>2]|0)+192>>2]|0;y=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);c[b+64>>2]=f;g[b+68>>2]=y+.05999999865889549;c[b+56>>2]=h;h=c[b+16>>2]|0;ic[c[(c[h>>2]|0)+28>>2]&127](h,j+16|0,j);y=+g[j>>2];x=+g[j+16>>2];w=+g[j+4>>2];v=+g[j+16+4>>2];u=+g[j+8>>2];t=+g[j+16+8>>2];h=c[d+12>>2]|0;B=+g[h>>2];o=+g[h+16>>2];C=+g[h+32>>2];z=+g[h+4>>2];m=+g[h+20>>2];A=+g[h+36>>2];q=+g[h+8>>2];k=+g[h+24>>2];r=+g[h+40>>2];D=-+g[h+48>>2];s=-+g[h+52>>2];l=-+g[h+56>>2];p=(y+x)*.5*B+(w+v)*.5*o+(u+t)*.5*C+(B*D+o*s+C*l);n=(y+x)*.5*z+(w+v)*.5*m+(u+t)*.5*A+(z*D+m*s+A*l);l=(y+x)*.5*q+(w+v)*.5*k+(u+t)*.5*r+(q*D+k*s+r*l);s=+g[b+68>>2];o=((y-x)*.5+s)*+N(+(B+o*0.0+C*0.0))+((w-v)*.5+s)*+N(+(B*0.0+o+C*0.0))+((u-t)*.5+s)*+N(+(C+(B*0.0+o*0.0)));m=((y-x)*.5+s)*+N(+(z+m*0.0+A*0.0))+((w-v)*.5+s)*+N(+(z*0.0+m+A*0.0))+((u-t)*.5+s)*+N(+(A+(z*0.0+m*0.0)));k=((y-x)*.5+s)*+N(+(q+k*0.0+r*0.0))+((w-v)*.5+s)*+N(+(q*0.0+k+r*0.0))+((u-t)*.5+s)*+N(+(r+(q*0.0+k*0.0)));g[b+24>>2]=p-o;g[b+28>>2]=n-m;g[b+32>>2]=l-k;g[b+36>>2]=0.0;g[b+40>>2]=p+o;g[b+44>>2]=n+m;g[b+48>>2]=l+k;g[b+52>>2]=0.0;mc[c[(c[e>>2]|0)+64>>2]&127](e,b+12|0,b+24|0,b+40|0);i=j;return}function kg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0;l=i;i=i+16|0;c[b+8>>2]=0;c[b+12>>2]=1065353216;c[b+16>>2]=1065353216;c[b+20>>2]=1065353216;g[b+24>>2]=0.0;g[b+44>>2]=.03999999910593033;c[b+52>>2]=0;c[b+56>>2]=1065353216;c[b+60>>2]=1065353216;c[b+64>>2]=1065353216;g[b+68>>2]=0.0;c[b+72>>2]=-1082130432;c[b+76>>2]=-1082130432;c[b+80>>2]=-1082130432;g[b+84>>2]=0.0;a[b+88>>0]=0;c[b>>2]=7256;a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b+4>>2]=4;if((e|0)<=0){c[b+96>>2]=e;vj(b);i=l;return}c[6435]=(c[6435]|0)+1;h=yc((e<<4|3)+16|0)|0;if(!h)k=0;else{c[(h+4+15&-16)+-4>>2]=h;k=h+4+15&-16}h=c[b+96>>2]|0;if((h|0)>0){j=0;do{m=k+(j<<4)|0;n=(c[b+104>>2]|0)+(j<<4)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];j=j+1|0}while((j|0)!=(h|0))}h=c[b+104>>2]|0;if(h|0){if(a[b+108>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+104>>2]=0}a[b+108>>0]=1;c[b+104>>2]=k;c[b+100>>2]=e;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];c[k+12>>2]=c[l+12>>2];if((e|0)!=1){h=1;do{n=(c[b+104>>2]|0)+(h<<4)|0;c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];c[n+8>>2]=c[l+8>>2];c[n+12>>2]=c[l+12>>2];h=h+1|0}while((h|0)!=(e|0))}c[b+96>>2]=e;j=0;h=d;while(1){n=c[b+104>>2]|0;d=c[h+4>>2]|0;m=c[h+8>>2]|0;c[n+(j<<4)>>2]=c[h>>2];c[n+(j<<4)+4>>2]=d;c[n+(j<<4)+8>>2]=m;g[n+(j<<4)+12>>2]=0.0;j=j+1|0;if((j|0)==(e|0))break;else h=h+f|0}vj(b);i=l;return}function lg(b){b=b|0;var d=0;c[b>>2]=4756;d=c[b+176>>2]|0;if(d|0){if(a[b+180>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+176>>2]=0}a[b+180>>0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;d=c[b+156>>2]|0;if(d|0){if(a[b+160>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function mg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0;x=i;i=i+48|0;t=+g[e>>2];u=+g[d>>2];v=+g[e+4>>2];w=+g[d+4>>2];s=+g[e+8>>2];h=+g[d+8>>2];j=+O(+((t-u)*.5*(t-u)*.5+(v-w)*.5*(v-w)*.5+(s-h)*.5*(s-h)*.5));k=+g[a+56>>2];d=+N(+k)>.7071067690849304;l=+g[a+52>>2];if(d){r=1.0/+O(+(k*k+l*l));y=+g[a+48>>2];f=y*-(k*r);m=y;n=0.0;o=-(k*r);p=l*r;q=(k*k+l*l)*r;r=-(y*l*r)}else{q=+g[a+48>>2];r=1.0/+O(+(q*q+l*l));f=(q*q+l*l)*r;m=q;n=-(l*r);o=q*r;p=0.0;q=-(k*q*r);r=k*-(l*r)}y=(t+u)*.5*m+(v+w)*.5*l+(s+h)*.5*k-+g[a+64>>2];m=(t+u)*.5-m*y;n=j*n;o=j*o;u=j*p;q=j*q;r=j*r;t=j*f;g[x>>2]=q+(n+m);g[x+4>>2]=r+(o+((v+w)*.5-l*y));g[x+8>>2]=t+(u+((s+h)*.5-k*y));g[x+12>>2]=0.0;g[x+16>>2]=n+m-q;g[x+20>>2]=o+((v+w)*.5-l*y)-r;g[x+24>>2]=u+((s+h)*.5-k*y)-t;g[x+28>>2]=0.0;g[x+32>>2]=m-n-q;g[x+36>>2]=(v+w)*.5-l*y-o-r;g[x+40>>2]=(s+h)*.5-k*y-u-t;g[x+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,x,0,0);g[x>>2]=m-n-q;g[x+4>>2]=(v+w)*.5-l*y-o-r;g[x+8>>2]=(s+h)*.5-k*y-u-t;g[x+12>>2]=0.0;g[x+16>>2]=q+(m-n);g[x+20>>2]=r+((v+w)*.5-l*y-o);g[x+24>>2]=t+((s+h)*.5-k*y-u);g[x+28>>2]=0.0;g[x+32>>2]=q+(n+m);g[x+36>>2]=r+(o+((v+w)*.5-l*y));g[x+40>>2]=t+(u+((s+h)*.5-k*y));g[x+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,x,0,1);i=x;return}function ng(a,b,e){a=a|0;b=b|0;e=e|0;mf(a,b,e)|0;c[b+256>>2]=c[a+264>>2];c[b+260>>2]=c[a+268>>2];c[b+264>>2]=c[a+272>>2];c[b+268>>2]=c[a+276>>2];c[b+272>>2]=c[a+280>>2];c[b+276>>2]=c[a+284>>2];c[b+280>>2]=c[a+288>>2];c[b+284>>2]=c[a+292>>2];c[b+288>>2]=c[a+296>>2];c[b+292>>2]=c[a+300>>2];c[b+296>>2]=c[a+304>>2];c[b+300>>2]=c[a+308>>2];c[b+304>>2]=c[a+312>>2];c[b+308>>2]=c[a+316>>2];c[b+312>>2]=c[a+320>>2];c[b+316>>2]=c[a+324>>2];c[b+320>>2]=c[a+328>>2];c[b+324>>2]=c[a+332>>2];c[b+328>>2]=c[a+336>>2];c[b+332>>2]=c[a+340>>2];c[b+448>>2]=c[a+344>>2];c[b+336>>2]=c[a+544>>2];c[b+340>>2]=c[a+548>>2];c[b+344>>2]=c[a+552>>2];c[b+348>>2]=c[a+556>>2];c[b+352>>2]=c[a+348>>2];c[b+356>>2]=c[a+352>>2];c[b+360>>2]=c[a+356>>2];c[b+364>>2]=c[a+360>>2];c[b+368>>2]=c[a+364>>2];c[b+372>>2]=c[a+368>>2];c[b+376>>2]=c[a+372>>2];c[b+380>>2]=c[a+376>>2];c[b+384>>2]=c[a+380>>2];c[b+388>>2]=c[a+384>>2];c[b+392>>2]=c[a+388>>2];c[b+396>>2]=c[a+392>>2];c[b+400>>2]=c[a+396>>2];c[b+404>>2]=c[a+400>>2];c[b+408>>2]=c[a+404>>2];c[b+412>>2]=c[a+408>>2];c[b+416>>2]=c[a+412>>2];c[b+420>>2]=c[a+416>>2];c[b+424>>2]=c[a+420>>2];c[b+428>>2]=c[a+424>>2];c[b+432>>2]=c[a+428>>2];c[b+436>>2]=c[a+432>>2];c[b+440>>2]=c[a+436>>2];c[b+444>>2]=c[a+440>>2];c[b+452>>2]=c[a+444>>2];c[b+456>>2]=c[a+448>>2];c[b+484>>2]=d[a+452>>0];c[b+460>>2]=c[a+456>>2];c[b+464>>2]=c[a+460>>2];c[b+468>>2]=c[a+464>>2];c[b+472>>2]=c[a+468>>2];c[b+476>>2]=c[a+472>>2];c[b+480>>2]=c[a+476>>2];return 11858}function og(b,d,e,f,h){b=b|0;d=+d;e=e|0;f=f|0;h=h|0;var j=0;j=i;i=i+144|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+236>>2]=1;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;c[b>>2]=4108;a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;g[j>>2]=d;c[j+4>>2]=e;c[j+72>>2]=f;c[j+76>>2]=c[h>>2];c[j+76+4>>2]=c[h+4>>2];c[j+76+8>>2]=c[h+8>>2];c[j+76+12>>2]=c[h+12>>2];g[j+92>>2]=0.0;g[j+96>>2]=0.0;g[j+100>>2]=.5;g[j+104>>2]=0.0;g[j+108>>2]=0.0;g[j+112>>2]=.800000011920929;g[j+116>>2]=1.0;a[j+120>>0]=0;g[j+124>>2]=.004999999888241291;g[j+128>>2]=.009999999776482582;g[j+132>>2]=.009999999776482582;g[j+136>>2]=.009999999776482582;c[j+8>>2]=1065353216;c[j+12>>2]=0;c[j+12+4>>2]=0;c[j+12+8>>2]=0;c[j+12+12>>2]=0;c[j+28>>2]=1065353216;c[j+32>>2]=0;c[j+32+4>>2]=0;c[j+32+8>>2]=0;c[j+32+12>>2]=0;c[j+48>>2]=1065353216;c[j+52>>2]=0;c[j+52+4>>2]=0;c[j+52+8>>2]=0;c[j+52+12>>2]=0;c[j+52+16>>2]=0;Od(b,j);i=j;return}function pg(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0;c[6435]=(c[6435]|0)+1;e=yc(627)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e+4>>2]=5;c[e>>2]=4432;c[e+8>>2]=-1;c[e+12>>2]=-1;g[e+16>>2]=3402823466385288598117041.0e14;a[e+20>>0]=1;a[e+21>>0]=0;c[e+24>>2]=-1;c[e+28>>2]=b;Ll();c[e+32>>2]=23268;g[e+36>>2]=0.0;g[e+40>>2]=.30000001192092896;c[e+44>>2]=0;c[e>>2]=4648;h=e+300|0;c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];f=e+316|0;c[f>>2]=c[d+16>>2];c[f+4>>2]=c[d+16+4>>2];c[f+8>>2]=c[d+16+8>>2];c[f+12>>2]=c[d+16+12>>2];b=e+332|0;c[b>>2]=c[d+32>>2];c[b+4>>2]=c[d+32+4>>2];c[b+8>>2]=c[d+32+8>>2];c[b+12>>2]=c[d+32+12>>2];i=e+348|0;c[i>>2]=c[d+48>>2];c[i+4>>2]=c[d+48+4>>2];c[i+8>>2]=c[d+48+8>>2];c[i+12>>2]=c[d+48+12>>2];d=e+364|0;a[e+527>>0]=0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];c[d+12>>2]=c[h+12>>2];d=e+380|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];d=e+396|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];d=e+412|0;a[e+524>>0]=0;a[e+525>>0]=0;a[e+526>>0]=0;a[e+552>>0]=0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;g[e+572>>2]=-1.0;g[e+444>>2]=999999984306749440.0;g[e+448>>2]=999999984306749440.0;g[e+452>>2]=999999984306749440.0;g[e+428>>2]=1.0;g[e+432>>2]=.30000001192092896;g[e+436>>2]=1.0;g[e+440>>2]=.009999999776482582;g[e+456>>2]=.05000000074505806;c[e+592>>2]=0;g[e+596>>2]=0.0;g[e+600>>2]=.699999988079071;g[e+604>>2]=0.0;return e|0}function qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;Zd(b,d);c[b>>2]=3068;c[6435]=(c[6435]|0)+1;e=yc(27)|0;i=e+4+15&-16;c[i+-4>>2]=e;a[i+4>>0]=0;c[(e+4+15&-16)>>2]=3100;c[b+92>>2]=i;c[6435]=(c[6435]|0)+1;i=yc(27)|0;e=i+4+15&-16;c[e+-4>>2]=i;a[e+4>>0]=0;c[(i+4+15&-16)>>2]=3120;c[b+96>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e>>2]=3120;c[b+100>>2]=e;a[e+4>>0]=1;c[6435]=(c[6435]|0)+1;i=yc(27)|0;e=i+4+15&-16;c[e+-4>>2]=i;a[e+4>>0]=0;c[(i+4+15&-16)>>2]=3140;c[b+104>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e>>2]=3160;c[b+108>>2]=e;a[e+4>>0]=1;if(!(a[b+20>>0]|0))return;e=c[b+16>>2]|0;if(!e)return;if((c[e>>2]|0)>=156)return;f=c[e+16>>2]|0;if(f){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);e=c[b+16>>2]|0;if(!e)i=b+16|0;else{f=b+16|0;g=11}}else{f=b+16|0;g=11}if((g|0)==11){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);i=f}c[6435]=(c[6435]|0)+1;e=yc(39)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16}e=c[d+12>>2]|0;c[h>>2]=156;f=h+4|0;c[f>>2]=e;c[6435]=(c[6435]|0)+1;e=yc((e*156|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[h+16>>2]=e;c[h+12>>2]=e;f=c[f>>2]|0;c[h+8>>2]=f;if(f+-1|0){b=c[h>>2]|0;g=f+-1|0;d=e;do{j=d;d=d+b|0;c[j>>2]=d;g=g+-1|0}while((g|0)!=0);e=e+(_(b,f+-1|0)|0)|0}c[e>>2]=0;c[i>>2]=h;return}function rg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;c[6435]=(c[6435]|0)+1;h=yc(627)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h+4>>2]=5;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4648;d=h+300|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];d=h+316|0;c[d>>2]=c[e+16>>2];c[d+4>>2]=c[e+16+4>>2];c[d+8>>2]=c[e+16+8>>2];c[d+12>>2]=c[e+16+12>>2];d=h+332|0;c[d>>2]=c[e+32>>2];c[d+4>>2]=c[e+32+4>>2];c[d+8>>2]=c[e+32+8>>2];c[d+12>>2]=c[e+32+12>>2];d=h+348|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];e=h+364|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=h+380|0;c[e>>2]=c[f+16>>2];c[e+4>>2]=c[f+16+4>>2];c[e+8>>2]=c[f+16+8>>2];c[e+12>>2]=c[f+16+12>>2];e=h+396|0;c[e>>2]=c[f+32>>2];c[e+4>>2]=c[f+32+4>>2];c[e+8>>2]=c[f+32+8>>2];c[e+12>>2]=c[f+32+12>>2];e=h+412|0;c[e>>2]=c[f+48>>2];c[e+4>>2]=c[f+48+4>>2];c[e+8>>2]=c[f+48+8>>2];c[e+12>>2]=c[f+48+12>>2];a[h+552>>0]=0;c[h+524>>2]=0;g[h+572>>2]=-1.0;g[h+444>>2]=999999984306749440.0;g[h+448>>2]=999999984306749440.0;g[h+452>>2]=999999984306749440.0;g[h+428>>2]=1.0;g[h+432>>2]=.30000001192092896;g[h+436>>2]=1.0;g[h+440>>2]=.009999999776482582;g[h+456>>2]=.05000000074505806;c[h+592>>2]=0;g[h+596>>2]=0.0;g[h+600>>2]=.699999988079071;g[h+604>>2]=0.0;return h|0}function sg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;l=c[d>>2]|0;l=Zb[c[(c[l>>2]|0)+56>>2]&31](l,48)|0;c[l+4>>2]=c[d>>2];c[l>>2]=6228;a[l+28>>0]=1;c[l+24>>2]=0;c[l+16>>2]=0;c[l+20>>2]=0;c[l+32>>2]=c[d+4>>2];a[l+36>>0]=0;c[6435]=(c[6435]|0)+1;b=yc(87)|0;if(!b)k=0;else{c[(b+4+15&-16)+-4>>2]=b;k=b+4+15&-16}c[k>>2]=9324;h=k+20|0;a[h>>0]=1;i=k+16|0;c[i>>2]=0;d=k+8|0;c[d>>2]=0;j=k+12|0;c[j>>2]=0;a[k+24>>0]=0;a[k+44>>0]=1;c[k+40>>2]=0;c[k+32>>2]=0;c[k+36>>2]=0;a[k+64>>0]=1;c[k+60>>2]=0;c[k+52>>2]=0;c[k+56>>2]=0;c[6435]=(c[6435]|0)+1;b=yc(43)|0;if(!b)g=0;else{c[(b+4+15&-16)+-4>>2]=b;g=b+4+15&-16}b=c[d>>2]|0;if((b|0)>0){d=0;do{m=g+(d*12|0)|0;n=(c[i>>2]|0)+(d*12|0)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];d=d+1|0}while((d|0)!=(b|0))}b=c[i>>2]|0;if(!b){a[h>>0]=1;c[i>>2]=g;c[j>>2]=2;Kf(k);n=l+8|0;c[n>>2]=k;n=e+4|0;n=c[n>>2]|0;n=n+68|0;n=c[n>>2]|0;m=l+40|0;c[m>>2]=n;m=f+4|0;m=c[m>>2]|0;m=m+68|0;m=c[m>>2]|0;n=l+44|0;c[n>>2]=m;return l|0}if(a[h>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}c[i>>2]=0;a[h>>0]=1;c[i>>2]=g;c[j>>2]=2;Kf(k);n=l+8|0;c[n>>2]=k;n=e+4|0;n=c[n>>2]|0;n=n+68|0;n=c[n>>2]|0;m=l+40|0;c[m>>2]=n;m=f+4|0;m=c[m>>2]|0;m=m+68|0;m=c[m>>2]|0;n=l+44|0;c[n>>2]=m;return l|0}function tg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;Ab[c[(c[b>>2]|0)+32>>2]&255](b);d=Ob[c[(c[b>>2]|0)+16>>2]&63](b,104,1)|0;e=c[d+8>>2]|0;f=e;g=f+104|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e+88>>2]=c[a+248>>2];c[e+92>>2]=c[a+252>>2];c[e+96>>2]=c[a+256>>2];c[e+100>>2]=c[a+260>>2];c[e>>2]=c[a+92>>2];c[e+4>>2]=c[a+96>>2];c[e+8>>2]=c[a+100>>2];c[e+12>>2]=c[a+104>>2];c[e+16>>2]=c[a+108>>2];c[e+20>>2]=c[a+116>>2];c[e+24>>2]=c[a+120>>2];c[e+28>>2]=c[a+124>>2];c[e+32>>2]=c[a+128>>2];c[e+36>>2]=c[a+132>>2];c[e+40>>2]=c[a+140>>2];c[e+44>>2]=c[a+144>>2];c[e+48>>2]=c[a+148>>2];c[e+52>>2]=c[a+152>>2];c[e+56>>2]=c[a+168>>2];c[e+60>>2]=c[a+172>>2];c[e+64>>2]=c[a+112>>2];c[e+68>>2]=c[a+156>>2];c[e+72>>2]=c[a+160>>2];c[e+76>>2]=c[a+164>>2];c[e+80>>2]=c[a+136>>2];yb[c[(c[b>>2]|0)+20>>2]&31](b,d,11938,1145853764,e);d=c[a+8>>2]|0;if((d|0)<=0){mj(a,b);td(a,b);a=c[b>>2]|0;a=a+36|0;a=c[a>>2]|0;Ab[a&255](b);return}f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if(c[e+236>>2]&8){g=Eb[c[(c[e>>2]|0)+16>>2]&127](e)|0;g=Ob[c[(c[b>>2]|0)+16>>2]&63](b,g,1)|0;d=Ob[c[(c[e>>2]|0)+20>>2]&63](e,c[g+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,g,d,1497645651,e);d=c[a+8>>2]|0}f=f+1|0}while((f|0)<(d|0));mj(a,b);td(a,b);a=c[b>>2]|0;a=a+36|0;a=c[a>>2]|0;Ab[a&255](b);return}function ug(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0.0,k=0.0,l=0.0;h=i;i=i+32|0;d=c[a+8>>2]|0;if((d|0)<=0){i=h;return}f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if((!((e|0)==0?1:(c[e+236>>2]&2|0)==0)?(c[e+216>>2]|0)!=2:0)?!(b==0.0?1:(c[e+204>>2]&2|0)==0):0){d=c[e+480>>2]|0;if(!d)d=e+4|0;else{Cb[c[(c[d>>2]|0)+8>>2]&127](d,e+4|0);d=e+4|0}k=1.0/b*(+g[e+56>>2]-+g[e+120>>2]);l=1.0/b*(+g[e+60>>2]-+g[e+124>>2]);g[e+312>>2]=1.0/b*(+g[e+52>>2]-+g[e+116>>2]);g[e+316>>2]=k;g[e+320>>2]=l;g[e+324>>2]=0.0;Gf(e+68|0,d,h+8|0,h);l=+g[h>>2];k=1.0/b*l*+g[h+8+4>>2];j=1.0/b*l*+g[h+8+8>>2];g[e+328>>2]=1.0/b*+g[h+8>>2]*l;g[e+332>>2]=k;g[e+336>>2]=j;g[e+340>>2]=0.0;c[e+132>>2]=c[e+312>>2];c[e+132+4>>2]=c[e+312+4>>2];c[e+132+8>>2]=c[e+312+8>>2];c[e+132+12>>2]=c[e+312+12>>2];c[e+148>>2]=c[e+328>>2];c[e+148+4>>2]=c[e+328+4>>2];c[e+148+8>>2]=c[e+328+8>>2];c[e+148+12>>2]=c[e+328+12>>2];c[e+68>>2]=c[d>>2];c[e+68+4>>2]=c[d+4>>2];c[e+68+8>>2]=c[d+8>>2];c[e+68+12>>2]=c[d+12>>2];c[e+84>>2]=c[e+20>>2];c[e+84+4>>2]=c[e+20+4>>2];c[e+84+8>>2]=c[e+20+8>>2];c[e+84+12>>2]=c[e+20+12>>2];c[e+100>>2]=c[e+36>>2];c[e+100+4>>2]=c[e+36+4>>2];c[e+100+8>>2]=c[e+36+8>>2];c[e+100+12>>2]=c[e+36+12>>2];c[e+116>>2]=c[e+52>>2];c[e+116+4>>2]=c[e+52+4>>2];c[e+116+8>>2]=c[e+52+8>>2];c[e+116+12>>2]=c[e+52+12>>2];d=c[a+8>>2]|0}f=f+1|0}while((f|0)<(d|0));i=h;return}function vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6421]=(c[6421]|0)+1;g=((d<<16|b)+~((d<<16|b)<<15)>>10^(d<<16|b)+~((d<<16|b)<<15))*9|0;l=c[a+40>>2]|0;g=l+(((c[a+12>>2]|0)+-1&((g>>6^g)+~((g>>6^g)<<11)>>16^(g>>6^g)+~((g>>6^g)<<11)))<<2)|0;f=c[g>>2]|0;if((f|0)==-1){n=0;return n|0}m=c[a+16>>2]|0;e=f;while(1){k=m+(e*12|0)|0;if((c[k>>2]|0)==(b|0)?(c[m+(e*12|0)+4>>2]|0)==(d|0):0)break;e=c[(c[a+60>>2]|0)+(e<<2)>>2]|0;if((e|0)==-1){e=0;n=21;break}}if((n|0)==21)return e|0;if(!k){n=0;return n|0}j=c[m+(e*12|0)+8>>2]|0;i=(e*12|0)/12|0;b=c[a+60>>2]|0;if((f|0)!=(i|0)){while(1){d=b+(f<<2)|0;e=c[d>>2]|0;if((e|0)==(i|0))break;else f=e}e=c[b+(i<<2)>>2]|0;if((f|0)==-1)n=11;else c[d>>2]=e}else{e=c[b+(f<<2)>>2]|0;n=11}if((n|0)==11)c[g>>2]=e;g=(c[a+8>>2]|0)+-1|0;if((g|0)==(i|0)){c[a+8>>2]=i;n=j;return n|0}h=c[m+(g*12|0)+4>>2]<<16|c[m+(g*12|0)>>2];h=(h+~(h<<15)>>10^h+~(h<<15))*9|0;h=((h>>6^h)+~((h>>6^h)<<11)>>16^(h>>6^h)+~((h>>6^h)<<11))&(c[a+12>>2]|0)+-1;e=c[l+(h<<2)>>2]|0;b=c[a+60>>2]|0;if((e|0)!=(g|0)){f=e;while(1){d=b+(f<<2)|0;e=c[d>>2]|0;if((e|0)==(g|0))break;else f=e}e=c[b+(g<<2)>>2]|0;if((f|0)==-1)n=19;else c[d>>2]=e}else{e=c[b+(g<<2)>>2]|0;n=19}if((n|0)==19)c[l+(h<<2)>>2]=e;c[k>>2]=c[m+(g*12|0)>>2];c[k+4>>2]=c[m+(g*12|0)+4>>2];c[k+8>>2]=c[m+(g*12|0)+8>>2];n=(c[a+40>>2]|0)+(h<<2)|0;c[(c[a+60>>2]|0)+(i<<2)>>2]=c[n>>2];c[n>>2]=i;c[a+8>>2]=(c[a+8>>2]|0)+-1;n=j;return n|0}function wg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=c[b+236>>2]|0;if((b|0)==0|(d|0)!=8){if(!((b|0)==0|(d&2|0)==0)){Cb[c[(c[a>>2]|0)+92>>2]&127](a,b);return}d=c[b+188>>2]|0;if(d|0){h=c[a+68>>2]|0;h=Eb[c[(c[h>>2]|0)+36>>2]&127](h)|0;ic[c[(c[h>>2]|0)+40>>2]&127](h,d,c[a+24>>2]|0);h=c[a+68>>2]|0;ic[c[(c[h>>2]|0)+12>>2]&127](h,d,c[a+24>>2]|0);c[b+188>>2]=0}d=c[a+8>>2]|0;if((d|0)<=0)return;e=c[a+16>>2]|0;h=0;while(1){f=e+(h<<2)|0;if((c[f>>2]|0)==(b|0))break;g=h+1|0;if((g|0)<(d|0))h=g;else{i=26;break}}if((i|0)==26)return;if((h|0)>=(d|0))return;c[f>>2]=c[e+(d+-1<<2)>>2];c[(c[a+16>>2]|0)+(d+-1<<2)>>2]=b;c[a+8>>2]=d+-1;return}f=c[a+328>>2]|0;a:do if((f|0)>0){g=c[a+336>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+336>>2]|0)+(f+-1<<2)>>2]=b;c[a+328>>2]=f+-1}}while(0);d=c[b+188>>2]|0;if(d|0){h=c[a+68>>2]|0;h=Eb[c[(c[h>>2]|0)+36>>2]&127](h)|0;ic[c[(c[h>>2]|0)+40>>2]&127](h,d,c[a+24>>2]|0);h=c[a+68>>2]|0;ic[c[(c[h>>2]|0)+12>>2]&127](h,d,c[a+24>>2]|0);c[b+188>>2]=0}d=c[a+8>>2]|0;if((d|0)<=0)return;e=c[a+16>>2]|0;h=0;while(1){f=e+(h<<2)|0;if((c[f>>2]|0)==(b|0))break;g=h+1|0;if((g|0)<(d|0))h=g;else{i=26;break}}if((i|0)==26)return;if((h|0)>=(d|0))return;c[f>>2]=c[e+(d+-1<<2)>>2];c[(c[a+16>>2]|0)+(d+-1<<2)>>2]=b;c[a+8>>2]=d+-1;return}function xg(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;c[6435]=(c[6435]|0)+1;i=yc(783)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}c[i+4>>2]=4;c[i+8>>2]=-1;c[i+12>>2]=-1;g[i+16>>2]=3402823466385288598117041.0e14;a[i+20>>0]=1;a[i+21>>0]=0;c[i+24>>2]=-1;c[i+28>>2]=b;c[i+32>>2]=d;g[i+36>>2]=0.0;g[i+40>>2]=.30000001192092896;c[i+44>>2]=0;c[i>>2]=4704;d=i+552|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];d=i+568|0;c[d>>2]=c[e+16>>2];c[d+4>>2]=c[e+16+4>>2];c[d+8>>2]=c[e+16+8>>2];c[d+12>>2]=c[e+16+12>>2];d=i+584|0;c[d>>2]=c[e+32>>2];c[d+4>>2]=c[e+32+4>>2];c[d+8>>2]=c[e+32+8>>2];c[d+12>>2]=c[e+32+12>>2];d=i+600|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];e=i+616|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=i+632|0;c[e>>2]=c[f+16>>2];c[e+4>>2]=c[f+16+4>>2];c[e+8>>2]=c[f+16+8>>2];c[e+12>>2]=c[f+16+12>>2];e=i+648|0;c[e>>2]=c[f+32>>2];c[e+4>>2]=c[f+32+4>>2];c[e+8>>2]=c[f+32+8>>2];c[e+12>>2]=c[f+32+12>>2];e=i+664|0;c[e>>2]=c[f+48>>2];c[e+4>>2]=c[f+48+4>>2];c[e+8>>2]=c[f+48+8>>2];c[e+12>>2]=c[f+48+12>>2];g[i+688>>2]=0.0;g[i+692>>2]=-1.0;g[i+696>>2]=.8999999761581421;g[i+700>>2]=.30000001192092896;g[i+704>>2]=1.0;g[i+708>>2]=0.0;g[i+712>>2]=0.0;a[i+716>>0]=0;a[i+736>>0]=0;a[i+737>>0]=0;a[i+738>>0]=0;a[i+739>>0]=1;a[i+740>>0]=h&1;c[i+748>>2]=0;g[i+732>>2]=h?-1.0:1.0;return i|0}function yg(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0;h=i;i=i+16|0;d=+g[a+336>>2]*b;b=+g[a+452>>2];e=c[a+792>>2]|0;if((e|0)<=0){i=h;return}f=0;do{t=c[a+800>>2]|0;k=t+(f*96|0)+20|0;w=c[k>>2]|0;o=c[t+(f*96|0)>>2]|0;z=+g[t+(f*96|0)+4>>2];y=+g[t+(f*96|0)+8>>2];x=+g[t+(f*96|0)+12>>2];j=t+(f*96|0)+76|0;v=+g[w+332>>2];q=+g[t+(f*96|0)+84>>2];A=+g[w+336>>2];m=+g[t+(f*96|0)+80>>2];l=+g[j>>2];n=+g[w+328>>2];s=+g[o+8>>2];r=+g[o+12>>2];p=+g[o+16>>2];u=d*(z*+g[w+4>>2]+y*+g[w+8>>2]+x*+g[w+12>>2]+ +g[w+52>>2]-s)+(b*(v*q-A*m+ +g[w+312>>2])-(s-+g[o+24>>2]));q=d*(z*+g[w+20>>2]+y*+g[w+24>>2]+x*+g[w+28>>2]+ +g[w+56>>2]-r)+(b*(+g[w+316>>2]+(A*l-q*n))-(r-+g[o+28>>2]));l=d*(z*+g[w+36>>2]+y*+g[w+40>>2]+x*+g[w+44>>2]+ +g[w+60>>2]-p)+(b*(m*n-v*l+ +g[w+320>>2])-(p-+g[o+32>>2]));v=+g[t+(f*96|0)+24>>2];n=(u*+g[t+(f*96|0)+28>>2]+q*+g[t+(f*96|0)+32>>2]+ +g[t+(f*96|0)+36>>2]*l)*v;m=(u*+g[t+(f*96|0)+44>>2]+q*+g[t+(f*96|0)+48>>2]+l*+g[t+(f*96|0)+52>>2])*v;l=v*(u*+g[t+(f*96|0)+60>>2]+q*+g[t+(f*96|0)+64>>2]+l*+g[t+(f*96|0)+68>>2]);q=+g[t+(f*96|0)+92>>2];g[o+8>>2]=s+n*q;g[o+12>>2]=q*m+r;g[o+16>>2]=q*l+p;k=c[k>>2]|0;g[h>>2]=-n;g[h+4>>2]=-m;g[h+8>>2]=-l;g[h+12>>2]=0.0;gj(k,h,j);f=f+1|0}while((f|0)!=(e|0));i=h;return}function zg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;h=+g[d+100>>2];k=+g[d+16>>2];i=+g[d+20>>2];j=+g[d+24>>2];e=+g[d+108>>2];e=+g[d+112>>2]-h*+g[d+116>>2]-(k*+g[a+64>>2]+i*+g[a+68>>2]+j*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*e-e*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));f=+g[d+120>>2];do if(!(h+e<f)){f=+g[d+124>>2];if(h+e>f){g[d+100>>2]=f;e=f-h;break}else{g[d+100>>2]=h+e;break}}else{g[d+100>>2]=f;e=f-h}while(0);if(c[a+240>>2]|0){i=e*i*+g[a+132>>2]*+g[a+116>>2];j=e*j*+g[a+136>>2]*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*e*k*+g[a+128>>2]+ +g[a+64>>2];g[a+68>>2]=i+ +g[a+68>>2];g[a+72>>2]=j+ +g[a+72>>2];j=e*+g[a+100>>2]*+g[d+68>>2];k=e*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=e*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=j+ +g[a+84>>2];g[a+88>>2]=k+ +g[a+88>>2]}if(!(c[b+240>>2]|0))return;k=e*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];j=e*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*e*+g[d+48>>2]*+g[b+128>>2]+ +g[b+64>>2];g[b+68>>2]=k+ +g[b+68>>2];g[b+72>>2]=j+ +g[b+72>>2];j=e*+g[b+100>>2]*+g[d+84>>2];k=e*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=e*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=j+ +g[b+84>>2];g[b+88>>2]=k+ +g[b+88>>2];return}function Ag(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=i;i=i+32|0;o=c[a+92>>2]|0;if(!(Eb[c[(c[o>>2]|0)+56>>2]&127](o)|0)){i=p;return}o=c[a+92>>2]|0;o=Eb[c[(c[o>>2]|0)+28>>2]&127](o)|0;d=c[o+4>>2]|0;if((d|0)>1){Vd(o,0,d+-1|0);d=c[o+4>>2]|0}d=d-(c[a+104>>2]|0)|0;c[p+16>>2]=0;c[p+16+4>>2]=0;c[p+16+8>>2]=0;c[p+16+12>>2]=0;yi(o,d,p+16|0);c[a+104>>2]=0;d=c[o+4>>2]|0;if((d|0)>0){f=0;l=0;m=0;h=0;while(1){k=c[o+12>>2]|0;j=k+(l<<4)|0;q=m;m=c[j>>2]|0;k=k+(l<<4)+4|0;g=c[k>>2]|0;if(!((m|0)==(q|0)&(g|0)==(h|0))){q=m+54|0;h=m+48|0;if(!((((((e[q>>1]|0)>=(e[g+48>>1]|0)?(e[g+54>>1]|0)>=(e[h>>1]|0):0)?(e[q+2>>1]|0)>=(e[g+48+2>>1]|0):0)?(e[g+54+2>>1]|0)>=(e[h+2>>1]|0):0)?(e[q+4>>1]|0)>=(e[g+52>>1]|0):0)?(e[g+54+4>>1]|0)>=(e[m+52>>1]|0):0))n=13}else{g=h;n=13}if((n|0)==13){n=0;f=c[a+92>>2]|0;ic[c[(c[f>>2]|0)+32>>2]&127](f,j,b);c[j>>2]=0;c[k>>2]=0;f=(c[a+104>>2]|0)+1|0;c[a+104>>2]=f;c[6163]=(c[6163]|0)+-1;d=c[o+4>>2]|0}l=l+1|0;if((l|0)>=(d|0))break;else h=g}if((d|0)>1){Vd(o,0,d+-1|0);f=c[a+104>>2]|0;d=c[o+4>>2]|0}}else f=0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;yi(o,d-f|0,p);c[a+104>>2]=0;i=p;return}function Bg(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0,p=0.0;b=c[a+712>>2]|0;if((b|0)>0){d=0;do{l=(c[a+720>>2]|0)+(d*104|0)+72|0;d=d+1|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0}while((d|0)!=(b|0))}b=c[a+752>>2]|0;if((b|0)>0){d=0;do{o=c[a+760>>2]|0;k=c[o+(d*44|0)+12>>2]|0;i=c[o+(d*44|0)+8>>2]|0;j=+g[i+8>>2];e=+g[k+8>>2]-j;f=+g[i+12>>2];h=+g[k+12>>2]-f;m=+g[i+16>>2];n=+g[k+16>>2]-m;l=c[o+(d*44|0)+16>>2]|0;j=+g[l+8>>2]-j;f=+g[l+12>>2]-f;m=+g[l+16>>2]-m;p=1.0/+O(+((e*f-h*j)*(e*f-h*j)+((h*m-n*f)*(h*m-n*f)+(n*j-e*m)*(n*j-e*m))));g[o+(d*44|0)+20>>2]=p*(h*m-n*f);g[o+(d*44|0)+24>>2]=p*(n*j-e*m);g[o+(d*44|0)+28>>2]=(e*f-h*j)*p;c[o+(d*44|0)+32>>2]=0;g[i+72>>2]=h*m-n*f+ +g[i+72>>2];g[i+76>>2]=n*j-e*m+ +g[i+76>>2];g[i+80>>2]=e*f-h*j+ +g[i+80>>2];g[k+72>>2]=h*m-n*f+ +g[k+72>>2];g[k+76>>2]=n*j-e*m+ +g[k+76>>2];g[k+80>>2]=e*f-h*j+ +g[k+80>>2];g[l+72>>2]=h*m-n*f+ +g[l+72>>2];g[l+76>>2]=n*j-e*m+ +g[l+76>>2];g[l+80>>2]=e*f-h*j+ +g[l+80>>2];d=d+1|0}while((d|0)!=(b|0))}l=c[a+712>>2]|0;if((l|0)<=0)return;a=c[a+720>>2]|0;k=0;do{i=a+(k*104|0)+72|0;j=+g[i>>2];b=a+(k*104|0)+76|0;e=+g[b>>2];d=a+(k*104|0)+80|0;f=+g[d>>2];h=+O(+(j*j+e*e+f*f));if(h>1.1920928955078125e-07){g[i>>2]=j*(1.0/h);g[b>>2]=1.0/h*e;g[d>>2]=1.0/h*f}k=k+1|0}while((k|0)!=(l|0));return}function Cg(b,d,e,f){b=b|0;d=+d;e=e|0;f=+f;var h=0,j=0.0,k=0,l=0;l=i;i=i+16|0;tb(c[6434]|0,0)|0;Yq(25696);c[6425]=(c[6425]|0)+1;k=c[6428]|0;c[6428]=k+1;if(!k){tb(l|0,0)|0;k=c[6434]|0;c[6427]=(c[l+4>>2]|0)-(c[k+4>>2]|0)+(((c[l>>2]|0)-(c[k>>2]|0)|0)*1e6|0)}c[6433]=0;tb(l|0,0)|0;li(11963);if(e){g[b+268>>2]=f;j=+g[b+264>>2]+d;g[b+264>>2]=j;if(!(j>=f)){d=f;k=0}else{g[b+264>>2]=j-+(~~(j/f)|0)*f;d=f;k=~~(j/f)}}else{g[b+264>>2]=a[b+300>>0]|0?0.0:d;g[b+268>>2]=0.0;k=!(+N(+d)<1.1920928955078125e-07)&1;e=k}if(Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0){h=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;a[26260]=(Eb[c[(c[h>>2]|0)+48>>2]&127](h)|0)>>>4&1}if(k){e=(k|0)>(e|0)?e:k;zb[c[(c[b>>2]|0)+164>>2]&31](b,d*+(e|0));Ab[c[(c[b>>2]|0)+168>>2]&255](b);if((e|0)>0){h=0;do{zb[c[(c[b>>2]|0)+160>>2]&31](b,d);Ab[c[(c[b>>2]|0)+80>>2]&255](b);h=h+1|0}while((h|0)<(e|0));e=b}else e=b}else{Ab[c[(c[b>>2]|0)+80>>2]&255](b);e=b}Ab[c[(c[e>>2]|0)+120>>2]&255](b);c[6433]=(c[6433]|0)+1;e=c[2357]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){i=l;return k|0}do if(c[e+4>>2]|0){tb(l|0,0)|0;b=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[l+4>>2]|0)-(c[b+4>>2]|0)+(((c[l>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2357]|0;break}else{i=l;return k|0}}while(0);c[2357]=c[e+20>>2];i=l;return k|0}function Dg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;c[6435]=(c[6435]|0)+1;h=yc(783)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h+4>>2]=4;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4704;d=h+552|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];d=h+568|0;c[d>>2]=c[e+16>>2];c[d+4>>2]=c[e+16+4>>2];c[d+8>>2]=c[e+16+8>>2];c[d+12>>2]=c[e+16+12>>2];d=h+584|0;c[d>>2]=c[e+32>>2];c[d+4>>2]=c[e+32+4>>2];c[d+8>>2]=c[e+32+8>>2];c[d+12>>2]=c[e+32+12>>2];d=h+600|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];e=h+616|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=h+632|0;c[e>>2]=c[f+16>>2];c[e+4>>2]=c[f+16+4>>2];c[e+8>>2]=c[f+16+8>>2];c[e+12>>2]=c[f+16+12>>2];e=h+648|0;c[e>>2]=c[f+32>>2];c[e+4>>2]=c[f+32+4>>2];c[e+8>>2]=c[f+32+8>>2];c[e+12>>2]=c[f+32+12>>2];e=h+664|0;c[e>>2]=c[f+48>>2];c[e+4>>2]=c[f+48+4>>2];c[e+8>>2]=c[f+48+8>>2];c[e+12>>2]=c[f+48+12>>2];g[h+688>>2]=0.0;g[h+692>>2]=-1.0;g[h+696>>2]=.8999999761581421;g[h+700>>2]=.30000001192092896;g[h+704>>2]=1.0;g[h+708>>2]=0.0;g[h+712>>2]=0.0;a[h+716>>0]=0;a[h+736>>0]=0;a[h+737>>0]=0;a[h+738>>0]=0;a[h+739>>0]=1;a[h+740>>0]=0;c[h+748>>2]=0;g[h+732>>2]=1.0;return h|0}function Eg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0.0;m=i;i=i+672|0;c[m+568+8>>2]=0;c[m+568+12>>2]=1065353216;c[m+568+16>>2]=1065353216;c[m+568+20>>2]=1065353216;g[m+568+24>>2]=0.0;c[m+568+52>>2]=0;c[m+568>>2]=3736;c[m+568+4>>2]=1;c[m+568+56>>2]=c[d>>2];c[m+568+56+4>>2]=c[d+4>>2];c[m+568+56+8>>2]=c[d+8>>2];c[m+568+56+12>>2]=c[d+12>>2];c[m+568+72>>2]=c[d+16>>2];c[m+568+72+4>>2]=c[d+16+4>>2];c[m+568+72+8>>2]=c[d+16+8>>2];c[m+568+72+12>>2]=c[d+16+12>>2];c[m+568+88>>2]=c[d+32>>2];c[m+568+88+4>>2]=c[d+32+4>>2];c[m+568+88+8>>2]=c[d+32+8>>2];c[m+568+88+12>>2]=c[d+32+12>>2];c[m+568+44>>2]=c[b+204>>2];g[m+208+308>>2]=9.999999747378752e-05;a[m+208+332>>0]=0;c[m+200>>2]=9120;d=c[b+4>>2]|0;c[m+176>>2]=9188;c[m+176+4>>2]=m+208;c[m+176+8>>2]=m+200;c[m+176+12>>2]=d;c[m+176+16>>2]=m+568;c[m+176+20>>2]=0;c[m>>2]=3708;c[m+168>>2]=0;g[m+164>>2]=1.0;c[m+172>>2]=c[b+208>>2];if((Xd(m+176|0,b+8|0,b+72|0,b+136|0,b+136|0,m)|0?(h=+g[m+132>>2],j=+g[m+136>>2],k=+g[m+140>>2],h*h+j*j+k*k>9.999999747378752e-05):0)?(l=+g[m+164>>2],l<+g[b+200>>2]):0){n=1.0/+O(+(h*h+j*j+k*k));g[m+132>>2]=h*n;g[m+136>>2]=j*n;g[m+140>>2]=k*n;+Ub[c[(c[b>>2]|0)+12>>2]&3](b,m+132|0,m+148|0,l,e,f)}c[m+568>>2]=7124;e=c[m+568+52>>2]|0;if(!e){i=m;return}Ab[c[c[e>>2]>>2]&255](e);e=c[m+568+52>>2]|0;if(!e){i=m;return}c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);i=m;return}function Fg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0;q=i;i=i+32|0;p=c[a+12>>2]|0;if(!p){i=q;return}c[f+4>>2]=p;a=c[b+4>>2]|0;r=c[d+4>>2]|0;b=c[b+12>>2]|0;e=c[d+12>>2]|0;h=+g[b+48>>2]-+g[e+48>>2];j=+g[b+52>>2]-+g[e+52>>2];l=+g[b+56>>2]-+g[e+56>>2];m=+O(+(h*h+j*j+l*l));n=+g[r+28>>2]*+g[r+12>>2];o=+g[a+28>>2]*+g[a+12>>2]+n;if(m>o){if(!(c[p+748>>2]|0)){i=q;return}a=c[p+740>>2]|0;b=c[(c[f+8>>2]|0)+8>>2]|0;e=c[(c[f+12>>2]|0)+8>>2]|0;if((a|0)==(b|0)){ef(p,a+4|0,e+4|0);i=q;return}else{ef(p,e+4|0,b+4|0);i=q;return}}c[q+16>>2]=1065353216;c[q+16+4>>2]=0;c[q+16+8>>2]=0;g[q+16+12>>2]=0.0;if(m>1.1920928955078125e-07){g[q+16>>2]=h*(1.0/m);g[q+16+4>>2]=j*(1.0/m);g[q+16+8>>2]=l*(1.0/m);g[q+16+12>>2]=0.0;k=h*(1.0/m);j=j*(1.0/m);h=l*(1.0/m)}else{k=1.0;j=0.0;h=0.0}j=n*j+ +g[e+52>>2];l=n*h+ +g[e+56>>2];g[q>>2]=n*k+ +g[e+48>>2];g[q+4>>2]=j;g[q+8>>2]=l;g[q+12>>2]=0.0;hc[c[(c[f>>2]|0)+16>>2]&15](f,q+16|0,q,m-o);a=c[f+4>>2]|0;do if(c[a+748>>2]|0){b=c[a+740>>2]|0;d=c[(c[f+8>>2]|0)+8>>2]|0;e=c[(c[f+12>>2]|0)+8>>2]|0;if((b|0)==(d|0)){ef(a,b+4|0,e+4|0);break}else{ef(a,e+4|0,d+4|0);break}}while(0);i=q;return}function Gg(a,b){a=a|0;b=b|0;var d=0,e=0;c[6435]=(c[6435]|0)+1;d=yc(219)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d>>2]=2896;e=d+4|0;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[e+12>>2]=c[a+12>>2];e=d+20|0;c[e>>2]=c[a+16>>2];c[e+4>>2]=c[a+16+4>>2];c[e+8>>2]=c[a+16+8>>2];c[e+12>>2]=c[a+16+12>>2];e=d+36|0;c[e>>2]=c[a+32>>2];c[e+4>>2]=c[a+32+4>>2];c[e+8>>2]=c[a+32+8>>2];c[e+12>>2]=c[a+32+12>>2];e=d+52|0;c[e>>2]=c[a+48>>2];c[e+4>>2]=c[a+48+4>>2];c[e+8>>2]=c[a+48+8>>2];c[e+12>>2]=c[a+48+12>>2];e=d+68|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];e=d+84|0;c[e>>2]=c[b+16>>2];c[e+4>>2]=c[b+16+4>>2];c[e+8>>2]=c[b+16+8>>2];c[e+12>>2]=c[b+16+12>>2];e=d+100|0;c[e>>2]=c[b+32>>2];c[e+4>>2]=c[b+32+4>>2];c[e+8>>2]=c[b+32+8>>2];c[e+12>>2]=c[b+32+12>>2];e=d+116|0;c[e>>2]=c[b+48>>2];c[e+4>>2]=c[b+48+4>>2];c[e+8>>2]=c[b+48+8>>2];c[e+12>>2]=c[b+48+12>>2];b=d+132|0;c[b>>2]=c[a>>2];c[b+4>>2]=c[a+4>>2];c[b+8>>2]=c[a+8>>2];c[b+12>>2]=c[a+12>>2];b=d+148|0;c[b>>2]=c[a+16>>2];c[b+4>>2]=c[a+16+4>>2];c[b+8>>2]=c[a+16+8>>2];c[b+12>>2]=c[a+16+12>>2];b=d+164|0;c[b>>2]=c[a+32>>2];c[b+4>>2]=c[a+32+4>>2];c[b+8>>2]=c[a+32+8>>2];c[b+12>>2]=c[a+32+12>>2];b=d+180|0;c[b>>2]=c[a+48>>2];c[b+4>>2]=c[a+48+4>>2];c[b+8>>2]=c[a+48+8>>2];c[b+12>>2]=c[a+48+12>>2];c[d+196>>2]=0;return d|0}function Hg(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(!(a[d+164>>0]|0)){f=c[d+148>>2]|0;if((f|0)==(c[d+152>>2]|0)?(k=f|0?f<<1:1,(f|0)<(k|0)):0){if(!k)i=0;else{c[6435]=(c[6435]|0)+1;f=yc((k<<1)+19|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}i=f;f=c[d+148>>2]|0}h=c[d+156>>2]|0;if((f|0)<=0)if(!h)f=d+160|0;else g=27;else{g=0;do{b[i+(g<<1)>>1]=b[h+(g<<1)>>1]|0;g=g+1|0}while((g|0)!=(f|0));g=27}if((g|0)==27){if(a[d+160>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[d+156>>2]=0;f=d+160|0}a[f>>0]=1;c[d+156>>2]=i;c[d+152>>2]=k;f=c[d+148>>2]|0}k=c[d+156>>2]|0;b[k+(f<<1)>>1]=e;c[d+148>>2]=f+1;c[(c[d+32>>2]|0)+4>>2]=k;return}else{f=c[d+128>>2]|0;if((f|0)==(c[d+132>>2]|0)?(j=f|0?f<<1:1,(f|0)<(j|0)):0){if(!j)i=0;else{c[6435]=(c[6435]|0)+1;f=yc((j<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}i=f;f=c[d+128>>2]|0}h=c[d+136>>2]|0;if((f|0)<=0)if(!h)f=d+140|0;else g=12;else{g=0;do{c[i+(g<<2)>>2]=c[h+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0));g=12}if((g|0)==12){if(a[d+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[d+136>>2]=0;f=d+140|0}a[f>>0]=1;c[d+136>>2]=i;c[d+132>>2]=j;f=c[d+128>>2]|0}k=c[d+136>>2]|0;c[k+(f<<2)>>2]=e;c[d+128>>2]=(c[d+128>>2]|0)+1;c[(c[d+32>>2]|0)+4>>2]=k;return}}function Ig(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;e=+g[d+128>>2];if(!(e!=0.0))return;c[5971]=(c[5971]|0)+1;k=+g[d+96>>2];f=+g[d+16>>2];h=+g[d+20>>2];i=+g[d+24>>2];j=+g[d+108>>2];j=e-k*+g[d+116>>2]-(f*+g[a+144>>2]+h*+g[a+148>>2]+i*+g[a+152>>2]+(+g[d>>2]*+g[a+160>>2]+ +g[d+4>>2]*+g[a+164>>2]+ +g[d+8>>2]*+g[a+168>>2]))*j-j*(+g[d+48>>2]*+g[b+144>>2]+ +g[d+52>>2]*+g[b+148>>2]+ +g[d+56>>2]*+g[b+152>>2]+(+g[d+32>>2]*+g[b+160>>2]+ +g[d+36>>2]*+g[b+164>>2]+ +g[d+40>>2]*+g[b+168>>2]));l=+g[d+120>>2];e=k+j<l?l-k:j;g[d+96>>2]=k+j<l?l:k+j;if(c[a+240>>2]|0){l=e*h*+g[a+132>>2]*+g[a+116>>2];k=e*i*+g[a+136>>2]*+g[a+120>>2];g[a+144>>2]=+g[a+112>>2]*e*f*+g[a+128>>2]+ +g[a+144>>2];g[a+148>>2]=l+ +g[a+148>>2];g[a+152>>2]=k+ +g[a+152>>2];k=e*+g[a+100>>2]*+g[d+68>>2];l=e*+g[a+104>>2]*+g[d+72>>2];g[a+160>>2]=e*+g[a+96>>2]*+g[d+64>>2]+ +g[a+160>>2];g[a+164>>2]=k+ +g[a+164>>2];g[a+168>>2]=l+ +g[a+168>>2]}if(!(c[b+240>>2]|0))return;l=e*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];k=e*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+144>>2]=+g[b+112>>2]*e*+g[d+48>>2]*+g[b+128>>2]+ +g[b+144>>2];g[b+148>>2]=l+ +g[b+148>>2];g[b+152>>2]=k+ +g[b+152>>2];k=e*+g[b+100>>2]*+g[d+84>>2];l=e*+g[b+104>>2]*+g[d+88>>2];g[b+160>>2]=e*+g[b+96>>2]*+g[d+80>>2]+ +g[b+160>>2];g[b+164>>2]=k+ +g[b+164>>2];g[b+168>>2]=l+ +g[b+168>>2];return}function Jg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];g=c[a+48>>2]|0;Ob[c[(c[g>>2]|0)+56>>2]&63](g,b+12|0,d)|0;c[b+52>>2]=c[a+12>>2];do if((c[a+52>>2]|0)!=0?((Eb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&1|0)==0:0){e=Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+52>>2]|0)|0;if(!e){c[b+40>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+52>>2]|0)|0;c[b+44>>2]=0;e=c[a+52>>2]|0;e=Eb[c[(c[e>>2]|0)+12>>2]&127](e)|0;e=Ob[c[(c[d>>2]|0)+16>>2]&63](d,e,1)|0;g=c[a+52>>2]|0;g=Ob[c[(c[g>>2]|0)+16>>2]&63](g,c[e+8>>2]|0,d)|0;yb[c[(c[d>>2]|0)+20>>2]&31](d,e,g,1213612625,c[a+52>>2]|0);break}else{c[b+40>>2]=e;c[b+44>>2]=0;break}}else f=8;while(0);if((f|0)==8){c[b+40>>2]=0;c[b+44>>2]=0}if(c[a+56>>2]|0?((Eb[c[(c[d>>2]|0)+52>>2]&127](d)|0)&2|0)==0:0){e=Zb[c[(c[d>>2]|0)+24>>2]&31](d,c[a+56>>2]|0)|0;if(!e){c[b+48>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+56>>2]|0)|0;b=c[a+56>>2]|0;b=Eb[c[(c[b>>2]|0)+8>>2]&127](b)|0;b=Ob[c[(c[d>>2]|0)+16>>2]&63](d,b,1)|0;g=c[a+56>>2]|0;g=Ob[c[(c[g>>2]|0)+12>>2]&63](g,c[b+8>>2]|0,d)|0;yb[c[(c[d>>2]|0)+20>>2]&31](d,b,g,1346456916,c[a+56>>2]|0);return 16548}else{c[b+48>>2]=e;return 16548}}c[b+48>>2]=0;return 16548}function Kg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6422]=(c[6422]|0)+1;k=((e<<16|d)+~((e<<16|d)<<15)>>10^(e<<16|d)+~((e<<16|d)<<15))*9|0;k=(k>>6^k)+~((k>>6^k)<<11)>>16^(k>>6^k)+~((k>>6^k)<<11);l=c[b+12>>2]|0;f=c[(c[b+40>>2]|0)+((l+-1&k)<<2)>>2]|0;a:do if((f|0)!=-1){h=c[b+16>>2]|0;while(1){g=h+(f*12|0)|0;if((c[g>>2]|0)==(d|0)?(c[h+(f*12|0)+4>>2]|0)==(e|0):0)break;f=c[(c[b+60>>2]|0)+(f<<2)>>2]|0;if((f|0)==-1)break a}if(g|0){b=g;return b|0}}while(0);j=c[b+8>>2]|0;if((j|0)==(l|0)){h=l|0?l<<1:1;if((l|0)<(h|0)){if(!h){f=0;g=l}else{c[6435]=(c[6435]|0)+1;f=yc((h*12|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g=c[b+8>>2]|0}if((g|0)>0){i=0;do{m=f+(i*12|0)|0;n=(c[b+16>>2]|0)+(i*12|0)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];i=i+1|0}while((i|0)!=(g|0))}g=c[b+16>>2]|0;if(g|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=h;f=c[b+8>>2]|0}else{f=l;h=l}}else{f=j;h=l}c[b+8>>2]=f+1;g=c[b+16>>2]|0;if((l|0)<(h|0)){Kf(b);f=(c[b+12>>2]|0)+-1&k}else f=l+-1&k;c[g+(j*12|0)>>2]=d;c[g+(j*12|0)+4>>2]=e;c[g+(j*12|0)+8>>2]=0;n=(c[b+40>>2]|0)+(f<<2)|0;c[(c[b+60>>2]|0)+(j<<2)>>2]=c[n>>2];c[n>>2]=j;n=g+(j*12|0)|0;return n|0}function Lg(a){a=a|0;var b=0,d=0,e=0;c[6435]=(c[6435]|0)+1;b=yc(219)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}nl();c[b>>2]=2896;d=b+52|0;e=b+4|0;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[e+12>>2]=c[a+12>>2];e=b+20|0;c[e>>2]=c[a+16>>2];c[e+4>>2]=c[a+16+4>>2];c[e+8>>2]=c[a+16+8>>2];c[e+12>>2]=c[a+16+12>>2];e=b+36|0;c[e>>2]=c[a+32>>2];c[e+4>>2]=c[a+32+4>>2];c[e+8>>2]=c[a+32+8>>2];c[e+12>>2]=c[a+32+12>>2];c[d>>2]=c[a+48>>2];c[d+4>>2]=c[a+48+4>>2];c[d+8>>2]=c[a+48+8>>2];c[d+12>>2]=c[a+48+12>>2];d=b+116|0;e=b+68|0;c[e>>2]=c[5710];c[e+4>>2]=c[5711];c[e+8>>2]=c[5712];c[e+12>>2]=c[5713];e=b+84|0;c[e>>2]=c[5714];c[e+4>>2]=c[5715];c[e+8>>2]=c[5716];c[e+12>>2]=c[5717];e=b+100|0;c[e>>2]=c[5718];c[e+4>>2]=c[5719];c[e+8>>2]=c[5720];c[e+12>>2]=c[5721];c[d>>2]=c[5722];c[d+4>>2]=c[5723];c[d+8>>2]=c[5724];c[d+12>>2]=c[5725];d=b+180|0;e=b+132|0;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[e+12>>2]=c[a+12>>2];e=b+148|0;c[e>>2]=c[a+16>>2];c[e+4>>2]=c[a+16+4>>2];c[e+8>>2]=c[a+16+8>>2];c[e+12>>2]=c[a+16+12>>2];e=b+164|0;c[e>>2]=c[a+32>>2];c[e+4>>2]=c[a+32+4>>2];c[e+8>>2]=c[a+32+8>>2];c[e+12>>2]=c[a+32+12>>2];c[d>>2]=c[a+48>>2];c[d+4>>2]=c[a+48+4>>2];c[d+8>>2]=c[a+48+8>>2];c[d+12>>2]=c[a+48+12>>2];c[b+196>>2]=0;return b|0}function Mg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;k=+g[d+100>>2];h=+g[d+16>>2];e=+g[d+20>>2];f=+g[d+24>>2];j=+g[d+108>>2];j=+g[d+112>>2]-k*+g[d+116>>2]-(h*+g[a+64>>2]+e*+g[a+68>>2]+f*+g[a+72>>2]+(+g[d>>2]*+g[a+80>>2]+ +g[d+4>>2]*+g[a+84>>2]+ +g[d+8>>2]*+g[a+88>>2]))*j-j*(+g[d+48>>2]*+g[b+64>>2]+ +g[d+52>>2]*+g[b+68>>2]+ +g[d+56>>2]*+g[b+72>>2]+(+g[d+32>>2]*+g[b+80>>2]+ +g[d+36>>2]*+g[b+84>>2]+ +g[d+40>>2]*+g[b+88>>2]));l=+g[d+120>>2];i=k+j<l?l-k:j;g[d+100>>2]=k+j<l?l:k+j;if(c[a+240>>2]|0){l=i*e*+g[a+132>>2]*+g[a+116>>2];k=i*f*+g[a+136>>2]*+g[a+120>>2];g[a+64>>2]=+g[a+112>>2]*i*h*+g[a+128>>2]+ +g[a+64>>2];g[a+68>>2]=l+ +g[a+68>>2];g[a+72>>2]=k+ +g[a+72>>2];k=i*+g[a+100>>2]*+g[d+68>>2];l=i*+g[a+104>>2]*+g[d+72>>2];g[a+80>>2]=i*+g[a+96>>2]*+g[d+64>>2]+ +g[a+80>>2];g[a+84>>2]=k+ +g[a+84>>2];g[a+88>>2]=l+ +g[a+88>>2]}if(!(c[b+240>>2]|0))return;l=i*+g[d+52>>2]*+g[b+132>>2]*+g[b+116>>2];k=i*+g[d+56>>2]*+g[b+136>>2]*+g[b+120>>2];g[b+64>>2]=+g[b+112>>2]*i*+g[d+48>>2]*+g[b+128>>2]+ +g[b+64>>2];g[b+68>>2]=l+ +g[b+68>>2];g[b+72>>2]=k+ +g[b+72>>2];k=i*+g[b+100>>2]*+g[d+84>>2];l=i*+g[b+104>>2]*+g[d+88>>2];g[b+80>>2]=i*+g[b+96>>2]*+g[d+80>>2]+ +g[b+80>>2];g[b+84>>2]=k+ +g[b+84>>2];g[b+88>>2]=l+ +g[b+88>>2];return}function Ng(b,d,e,f,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=+f;h=+h;i=+i;j=j|0;k=k|0;l=l|0;var m=0,n=0.0,o=0.0,p=0.0;c[6435]=(c[6435]|0)+1;m=yc(143)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16}c[m+8>>2]=0;g[m+12>>2]=0.0;c[m>>2]=8060;c[m+4>>2]=24;c[m+64>>2]=b;c[m+68>>2]=d;g[m+72>>2]=h;g[m+76>>2]=i;g[m+80>>2]=+(b+-1|0);g[m+84>>2]=+(d+-1|0);g[m+88>>2]=f;c[m+92>>2]=e;c[m+96>>2]=k;a[m+100>>0]=l&1;a[m+101>>0]=0;a[m+102>>0]=0;c[m+104>>2]=j;c[m+108>>2]=1065353216;c[m+112>>2]=1065353216;c[m+116>>2]=1065353216;g[m+120>>2]=0.0;switch(j|0){case 0:{g[m+16>>2]=h;c[m+20>>2]=0;c[m+24>>2]=0;g[m+28>>2]=0.0;g[m+32>>2]=i;g[m+36>>2]=+(b+-1|0);g[m+40>>2]=+(d+-1|0);g[m+44>>2]=0.0;o=i;p=h;f=+(b+-1|0);n=0.0;i=+(d+-1|0);h=0.0;break}case 1:{c[m+16>>2]=0;g[m+20>>2]=h;c[m+24>>2]=0;g[m+28>>2]=0.0;g[m+32>>2]=+(b+-1|0);g[m+36>>2]=i;g[m+40>>2]=+(d+-1|0);g[m+44>>2]=0.0;o=+(b+-1|0);p=0.0;f=i;n=h;i=+(d+-1|0);h=0.0;break}case 2:{c[m+16>>2]=0;c[m+20>>2]=0;g[m+24>>2]=h;g[m+28>>2]=0.0;g[m+32>>2]=+(b+-1|0);g[m+36>>2]=+(d+-1|0);g[m+40>>2]=i;g[m+44>>2]=0.0;o=+(b+-1|0);p=0.0;f=+(d+-1|0);n=0.0;break}default:{o=+g[m+32>>2];p=+g[m+16>>2];f=+g[m+36>>2];n=+g[m+20>>2];i=+g[m+40>>2];h=+g[m+24>>2]}}g[m+48>>2]=(p+o)*.5;g[m+52>>2]=(n+f)*.5;g[m+56>>2]=(h+i)*.5;g[m+60>>2]=0.0;return m|0}function Og(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0;if(a[b+1308>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}sd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);c[d>>2]=0;c[d+4>>2]=6;if((c[b+856>>2]|0)==0?(a[b+788>>0]|0)==0:0){e=0;f=6}else{c[d>>2]=1;c[d+4>>2]=5;e=1;f=5}if(!((c[b+860>>2]|0)==0?(a[b+789>>0]|0)==0:0)){e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f}if((c[b+864>>2]|0)==0?(a[b+790>>0]|0)==0:0)l=0;else{e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f;l=0}do{i=+g[b+868+(l<<6)>>2];j=+g[b+868+(l<<6)+4>>2];k=+ik(+g[b+1192+(l<<2)>>2],i,j);g[b+868+(l<<6)+52>>2]=k;do if(!(i>j)){if(i>k){c[b+868+(l<<6)+56>>2]=1;h=b+868+(l<<6)+48|0;g[h>>2]=k-i;if(k-i>3.1415927410125732){g[h>>2]=k-i+-6.2831854820251465;h=21;break}if(!(k-i<-3.1415927410125732)){h=21;break}g[h>>2]=k-i+6.2831854820251465;h=21;break}h=b+868+(l<<6)+56|0;if(!(j<k)){c[h>>2]=0;h=20;break}c[h>>2]=2;h=b+868+(l<<6)+48|0;g[h>>2]=k-j;if(k-j>3.1415927410125732){g[h>>2]=k-j+-6.2831854820251465;h=21;break}if(k-j<-3.1415927410125732){g[h>>2]=k-j+6.2831854820251465;h=21}else h=21}else{c[b+868+(l<<6)+56>>2]=0;h=20}while(0);if((h|0)==20){h=0;if(a[b+868+(l<<6)+44>>0]|0)h=21}if((h|0)==21){e=e+1|0;c[d>>2]=e;f=f+-1|0;c[d+4>>2]=f}l=l+1|0}while((l|0)!=3);return}function Pg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;l=i;i=i+96|0;g=c[b+8>>2]|0;if((g|0)==(c[b+12>>2]|0)?(k=g|0?g<<1:1,(g|0)<(k|0)):0){if(!k)j=0;else{c[6435]=(c[6435]|0)+1;g=yc((k<<2|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16}j=g;g=c[b+8>>2]|0}if((g|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[b+16>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(g|0))}h=c[b+16>>2]|0;if(h){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);g=c[b+8>>2]|0}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=j;c[b+12>>2]=k}c[(c[b+16>>2]|0)+(g<<2)>>2]=d;c[b+8>>2]=g+1;c[l+32>>2]=c[d+4>>2];c[l+32+4>>2]=c[d+4+4>>2];c[l+32+8>>2]=c[d+4+8>>2];c[l+32+12>>2]=c[d+4+12>>2];c[l+32+16>>2]=c[d+20>>2];c[l+32+16+4>>2]=c[d+20+4>>2];c[l+32+16+8>>2]=c[d+20+8>>2];c[l+32+16+12>>2]=c[d+20+12>>2];c[l+32+32>>2]=c[d+36>>2];c[l+32+32+4>>2]=c[d+36+4>>2];c[l+32+32+8>>2]=c[d+36+8>>2];c[l+32+32+12>>2]=c[d+36+12>>2];c[l+32+48>>2]=c[d+52>>2];c[l+32+48+4>>2]=c[d+52+4>>2];c[l+32+48+8>>2]=c[d+52+8>>2];c[l+32+48+12>>2]=c[d+52+12>>2];k=c[d+192>>2]|0;mc[c[(c[k>>2]|0)+8>>2]&127](k,l+32|0,l+16|0,l);k=c[b+68>>2]|0;c[d+188>>2]=gc[c[(c[k>>2]|0)+8>>2]&3](k,l+16|0,l,c[(c[d+192>>2]|0)+4>>2]|0,d,e,f,c[b+24>>2]|0,0)|0;i=l;return}function Qg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0,y=0;x=i;i=i+16|0;f=c[a+52>>2]|0;w=+g[a+28+(((f+2|0)%3|0)<<2)>>2];if((e|0)<=0){i=x;return}h=0;while(1){c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[x+12>>2]=0;c[x+(f<<2)>>2]=c[a+28+(f<<2)>>2];f=b+(h<<4)|0;u=b+(h<<4)+4|0;v=b+(h<<4)+8|0;j=w*+g[f>>2]+ +g[x>>2];k=w*+g[u>>2]+ +g[x+4>>2];l=w*+g[v>>2]+ +g[x+8>>2];m=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);n=+g[f>>2];o=+g[u>>2];p=+g[v>>2];if(n*(j-m*n)+o*(k-m*o)+p*(l-m*p)>-999999984306749440.0){g[d+(h<<4)>>2]=j-m*n;g[d+(h<<4)+4>>2]=k-m*o;g[d+(h<<4)+8>>2]=l-m*p;g[d+(h<<4)+12>>2]=0.0;q=+g[f>>2];s=+g[u>>2];t=+g[v>>2];r=n*(j-m*n)+o*(k-m*o)+p*(l-m*p)}else{q=n;s=o;t=p;r=-999999984306749440.0}c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;c[x+12>>2]=0;y=c[a+52>>2]|0;g[x+(y<<2)>>2]=-+g[a+28+(y<<2)>>2];p=w*q+ +g[x>>2];o=w*s+ +g[x+4>>2];m=w*t+ +g[x+8>>2];n=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);l=+g[f>>2];k=+g[u>>2];j=+g[v>>2];if(l*(p-n*l)+k*(o-n*k)+j*(m-n*j)>r){g[d+(h<<4)>>2]=p-n*l;g[d+(h<<4)+4>>2]=o-n*k;g[d+(h<<4)+8>>2]=m-n*j;g[d+(h<<4)+12>>2]=0.0}h=h+1|0;if((h|0)==(e|0))break;f=c[a+52>>2]|0}i=x;return}function Rg(a,b,d,e,f,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=+j;k=k|0;l=+l;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;c[a>>2]=c[h>>2];c[a+4>>2]=c[h+4>>2];c[a+8>>2]=c[h+8>>2];c[a+12>>2]=c[h+12>>2];s=+g[e+4>>2];v=+g[a+8>>2];w=+g[e+8>>2];p=+g[a+4>>2];m=+g[a>>2];r=+g[e>>2];u=(s*v-w*p)*+g[b>>2]+ +g[b+4>>2]*(w*m-v*r)+(p*r-s*m)*+g[b+8>>2];t=(s*v-w*p)*+g[b+16>>2]+(w*m-v*r)*+g[b+20>>2]+(p*r-s*m)*+g[b+24>>2];s=(s*v-w*p)*+g[b+32>>2]+(w*m-v*r)*+g[b+36>>2]+(p*r-s*m)*+g[b+40>>2];g[a+16>>2]=u;g[a+20>>2]=t;g[a+24>>2]=s;g[a+28>>2]=0.0;r=+g[f+4>>2];w=+g[f+8>>2];n=+g[f>>2];q=+g[d>>2]*(r*-v-w*-p)+ +g[d+4>>2]*(w*-m-n*-v)+(n*-p-r*-m)*+g[d+8>>2];o=(r*-v-w*-p)*+g[d+16>>2]+(w*-m-n*-v)*+g[d+20>>2]+(n*-p-r*-m)*+g[d+24>>2];m=(r*-v-w*-p)*+g[d+32>>2]+(w*-m-n*-v)*+g[d+36>>2]+(n*-p-r*-m)*+g[d+40>>2];g[a+32>>2]=q;g[a+36>>2]=o;g[a+40>>2]=m;g[a+44>>2]=0.0;u=+g[i>>2]*u;t=+g[i+4>>2]*t;s=+g[i+8>>2]*s;g[a+48>>2]=u;g[a+52>>2]=t;g[a+56>>2]=s;g[a+60>>2]=0.0;r=+g[k>>2]*q;p=+g[k+4>>2]*o;n=+g[k+8>>2]*m;g[a+64>>2]=r;g[a+68>>2]=p;g[a+72>>2]=n;g[a+76>>2]=0.0;g[a+80>>2]=u*+g[a+16>>2]+t*+g[a+20>>2]+s*+g[a+24>>2]+j+l+(r*q+p*o+n*m);return}function Sg(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=4144;if(a[b+272>>0]|0?(d=c[b+204>>2]|0,Ab[c[c[d>>2]>>2]&255](d),d=c[b+204>>2]|0,d|0):0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+196>>2]|0;if(d|0?(Ab[c[c[d>>2]>>2]&255](d),e=c[b+196>>2]|0,e|0):0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}if(a[b+273>>0]|0?(f=c[b+200>>2]|0,Ab[c[c[f>>2]>>2]&255](f),f=c[b+200>>2]|0,f|0):0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}d=c[b+316>>2]|0;if(d|0){if(a[b+320>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+316>>2]=0}a[b+320>>0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;d=c[b+288>>2]|0;if(d|0){if(a[b+292>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+288>>2]=0}a[b+292>>0]=1;c[b+288>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;d=c[b+240>>2]|0;if(d|0){if(a[b+244>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=0;c[b+232>>2]=0;c[b+236>>2]=0;d=c[b+220>>2]|0;if(d|0){if(a[b+224>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+220>>2]=0}a[b+224>>0]=1;c[b+220>>2]=0;c[b+212>>2]=0;c[b+216>>2]=0;d=c[b+188>>2]|0;if(!d){a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;f=b+184|0;c[f>>2]=0;_j(b);return}if(a[b+192>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+188>>2]=0;a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;f=b+184|0;c[f>>2]=0;_j(b);return}function Tg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;h=i;i=i+64|0;a[d+84>>0]=0;c[h>>2]=c[b+4>>2];c[h+4>>2]=c[b+4+4>>2];c[h+8>>2]=c[b+4+8>>2];c[h+12>>2]=c[b+4+12>>2];c[h+16>>2]=c[b+20>>2];c[h+16+4>>2]=c[b+20+4>>2];c[h+16+8>>2]=c[b+20+8>>2];c[h+16+12>>2]=c[b+20+12>>2];c[h+32>>2]=c[b+36>>2];c[h+32+4>>2]=c[b+36+4>>2];c[h+32+8>>2]=c[b+36+8>>2];c[h+32+12>>2]=c[b+36+12>>2];c[h+48>>2]=c[b+52>>2];c[h+48+4>>2]=c[b+52+4>>2];c[h+48+8>>2]=c[b+52+8>>2];c[h+48+12>>2]=c[b+52+12>>2];if(e?(f=c[b+480>>2]|0,f|0):0)Cb[c[(c[f>>2]|0)+8>>2]&127](f,h);w=+g[d+156>>2];u=+g[h>>2];v=+g[d+160>>2];t=+g[h+4>>2];o=+g[d+164>>2];s=+g[h+8>>2];r=+g[h+16>>2];q=+g[h+20>>2];p=+g[h+24>>2];n=+g[h+32>>2];l=+g[h+36>>2];j=+g[h+40>>2];m=w*r+v*q+o*p+ +g[h+52>>2];k=w*n+v*l+o*j+ +g[h+56>>2];g[d+36>>2]=w*u+v*t+o*s+ +g[h+48>>2];g[d+40>>2]=m;g[d+44>>2]=k;g[d+48>>2]=0.0;k=+g[d+172>>2];m=+g[d+176>>2];o=+g[d+180>>2];g[d+52>>2]=u*k+t*m+s*o;g[d+56>>2]=k*r+m*q+o*p;g[d+60>>2]=k*n+m*l+o*j;g[d+64>>2]=0.0;o=+g[d+188>>2];m=+g[d+192>>2];k=+g[d+196>>2];g[d+68>>2]=u*o+t*m+s*k;g[d+72>>2]=o*r+m*q+k*p;g[d+76>>2]=o*n+m*l+k*j;g[d+80>>2]=0.0;i=h;return}function Ug(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=b;break a}case 10:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;c[a>>2]=e;c[a+4>>2]=((e|0)<0)<<31>>31;break a}case 11:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;c[a>>2]=e;c[a+4>>2]=0;break a}case 12:{f=(c[d>>2]|0)+(8-1)&~(8-1);b=c[f>>2]|0;e=c[f+4>>2]|0;c[d>>2]=f+8;c[a>>2]=b;c[a+4>>2]=e;break a}case 13:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=(f&65535)<<16>>16;c[a+4>>2]=(((f&65535)<<16>>16|0)<0)<<31>>31;break a}case 14:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f&65535;c[a+4>>2]=0;break a}case 15:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=(f&255)<<24>>24;c[a+4>>2]=(((f&255)<<24>>24|0)<0)<<31>>31;break a}case 16:{e=(c[d>>2]|0)+(4-1)&~(4-1);f=c[e>>2]|0;c[d>>2]=e+4;c[a>>2]=f&255;c[a+4>>2]=0;break a}case 17:{f=(c[d>>2]|0)+(8-1)&~(8-1);g=+h[f>>3];c[d>>2]=f+8;h[a>>3]=g;break a}case 18:{f=(c[d>>2]|0)+(8-1)&~(8-1);g=+h[f>>3];c[d>>2]=f+8;h[a>>3]=g;break a}default:break a}while(0);while(0);return}function Vg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0;w=i;i=i+2048|0;if((e|0)>0)f=0;else{i=w;return}do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0}while((f|0)!=(e|0));t=0;do{if((Eb[c[(c[a>>2]|0)+96>>2]&127](a)|0)>0){r=b+(t<<4)|0;s=b+(t<<4)+4|0;o=b+(t<<4)+8|0;p=d+(t<<4)+12|0;q=d+(t<<4)|0;u=0;do{if(((Eb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-u|0)<128){f=(Eb[c[(c[a>>2]|0)+96>>2]&127](a)|0)-u|0;if((f|0)>0)v=10;else{j=-3402823466385288598117041.0e14;f=-1}}else{f=128;v=10}if((v|0)==10){v=0;h=0;do{ic[c[(c[a>>2]|0)+108>>2]&127](a,h,w+(h<<4)|0);h=h+1|0}while((h|0)!=(f|0));k=+g[r>>2];l=+g[s>>2];m=+g[o>>2];n=0;j=-3402823466385288598117041.0e14;h=-1;do{x=k*+g[w+(n<<4)>>2]+l*+g[w+(n<<4)+4>>2]+m*+g[w+(n<<4)+8>>2];y=x>j;h=y?n:h;j=y?x:j;n=n+1|0}while((n|0)!=(f|0));f=h}if(j>+g[p>>2]){y=w+(f<<4)|0;c[q>>2]=c[y>>2];c[q+4>>2]=c[y+4>>2];c[q+8>>2]=c[y+8>>2];c[q+12>>2]=c[y+12>>2];g[p>>2]=j}u=u+128|0}while((u|0)<(Eb[c[(c[a>>2]|0)+96>>2]&127](a)|0))}t=t+1|0}while((t|0)!=(e|0));i=w;return}function Wg(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,j=0,l=0,m=0,n=0.0;h=i;i=i+16|0;d=+g[a>>2];e=+g[a+20>>2];f=+g[a+40>>2];if(d+e+f>0.0){f=+O(+(d+e+f+1.0));g[h+12>>2]=f*.5;n=(+g[a+36>>2]-+g[a+24>>2])*(.5/f);g[h>>2]=n;d=(+g[a+8>>2]-+g[a+32>>2])*(.5/f);g[h+4>>2]=d;e=(+g[a+16>>2]-+g[a+4>>2])*(.5/f);g[h+8>>2]=e;a=(g[k>>2]=n,c[k>>2]|0);m=(g[k>>2]=d,c[k>>2]|0);l=(g[k>>2]=e,c[k>>2]|0);j=(g[k>>2]=f*.5,c[k>>2]|0);c[b>>2]=a;a=b+4|0;c[a>>2]=m;a=b+8|0;c[a>>2]=l;a=b+12|0;c[a>>2]=j;i=h;return}else{m=d<e?(e<f?2:1):d<f?2:0;n=+O(+(+g[a+(m<<4)+(m<<2)>>2]-+g[a+((((m+1|0)>>>0)%3|0)<<4)+((((m+1|0)>>>0)%3|0)<<2)>>2]-+g[a+((((m+2|0)>>>0)%3|0)<<4)+((((m+2|0)>>>0)%3|0)<<2)>>2]+1.0));g[h+(m<<2)>>2]=n*.5;g[h+12>>2]=(+g[a+((((m+2|0)>>>0)%3|0)<<4)+((((m+1|0)>>>0)%3|0)<<2)>>2]-+g[a+((((m+1|0)>>>0)%3|0)<<4)+((((m+2|0)>>>0)%3|0)<<2)>>2])*(.5/n);g[h+((((m+1|0)>>>0)%3|0)<<2)>>2]=(+g[a+((((m+1|0)>>>0)%3|0)<<4)+(m<<2)>>2]+ +g[a+(m<<4)+((((m+1|0)>>>0)%3|0)<<2)>>2])*(.5/n);g[h+((((m+2|0)>>>0)%3|0)<<2)>>2]=(+g[a+((((m+2|0)>>>0)%3|0)<<4)+(m<<2)>>2]+ +g[a+(m<<4)+((((m+2|0)>>>0)%3|0)<<2)>>2])*(.5/n);m=c[h>>2]|0;a=c[h+4>>2]|0;j=c[h+8>>2]|0;l=c[h+12>>2]|0;c[b>>2]=m;m=b+4|0;c[m>>2]=a;m=b+8|0;c[m>>2]=j;m=b+12|0;c[m>>2]=l;i=h;return}}function Xg(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+48|0;e=(c[a+48>>2]|0)+4|0;c[e>>2]=c[b>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[d+32>>2]=0;c[d+32+4>>2]=0;c[d+32+8>>2]=0;c[d+32+12>>2]=0;g[d+32>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+32>>2]=+g[d+16>>2]+ +g[a+12>>2];g[d+32>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+16>>2]=+g[d+16>>2]-+g[a+12>>2];c[d+32>>2]=0;c[d+32+4>>2]=0;c[d+32+8>>2]=0;c[d+32+12>>2]=0;g[d+32+4>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+36>>2]=+g[d+16+4>>2]+ +g[a+12>>2];g[d+32+4>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+20>>2]=+g[d+16+4>>2]-+g[a+12>>2];c[d+32>>2]=0;c[d+32+4>>2]=0;c[d+32+8>>2]=0;c[d+32+12>>2]=0;g[d+32+8>>2]=1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d+16|0,a,d+32|0);g[a+40>>2]=+g[d+16+8>>2]+ +g[a+12>>2];g[d+32+8>>2]=-1.0;ic[c[(c[a>>2]|0)+68>>2]&127](d,a,d+32|0);c[d+16>>2]=c[d>>2];c[d+16+4>>2]=c[d+4>>2];c[d+16+8>>2]=c[d+8>>2];c[d+16+12>>2]=c[d+12>>2];g[a+24>>2]=+g[d+16+8>>2]-+g[a+12>>2];i=d;return}function Yg(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0;r=i;i=i+16|0;g[e>>2]=3402823466385288598117041.0e14;g[f>>2]=-3402823466385288598117041.0e14;n=c[a+96>>2]|0;if((n|0)>0){q=0;do{t=c[a+104>>2]|0;s=+g[t+(q<<4)>>2]*+g[a+12>>2];p=+g[t+(q<<4)+4>>2]*+g[a+16>>2];o=+g[t+(q<<4)+8>>2]*+g[a+20>>2];l=s*+g[b>>2]+p*+g[b+4>>2]+o*+g[b+8>>2]+ +g[b+48>>2];m=s*+g[b+16>>2]+p*+g[b+20>>2]+o*+g[b+24>>2]+ +g[b+52>>2];o=s*+g[b+32>>2]+p*+g[b+36>>2]+o*+g[b+40>>2]+ +g[b+56>>2];p=l*+g[d>>2]+m*+g[d+4>>2]+o*+g[d+8>>2];if(p<+g[e>>2]){g[e>>2]=p;g[h>>2]=l;g[h+4>>2]=m;g[h+8>>2]=o;g[h+12>>2]=0.0}if(p>+g[f>>2]){g[f>>2]=p;g[j>>2]=l;g[j+4>>2]=m;g[j+8>>2]=o;g[j+12>>2]=0.0}q=q+1|0}while((q|0)!=(n|0));s=+g[f>>2];m=s;n=(g[k>>2]=s,c[k>>2]|0)}else{m=-3402823466385288598117041.0e14;n=-8388609}l=+g[e>>2];if(!(l>m)){i=r;return}c[e>>2]=n;g[f>>2]=l;c[r>>2]=c[h>>2];c[r+4>>2]=c[h+4>>2];c[r+8>>2]=c[h+8>>2];c[r+12>>2]=c[h+12>>2];c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];c[j>>2]=c[r>>2];c[j+4>>2]=c[r+4>>2];c[j+8>>2]=c[r+8>>2];c[j+12>>2]=c[r+12>>2];i=r;return}function Zg(a,b,c,d,e,f,h){a=a|0;b=+b;c=+c;d=+d;e=e|0;f=+f;h=h|0;var j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;l=i;i=i+16|0;k=c*f+ +g[a+52>>2];j=d*f+ +g[a+56>>2];g[h+48>>2]=b*f+ +g[a+48>>2];g[h+52>>2]=k;g[h+56>>2]=j;g[h+60>>2]=0.0;j=+g[e>>2];k=+g[e+4>>2];c=+g[e+8>>2];d=+O(+(j*j+k*k+c*c));d=d*f>.7853981852531433?.7853981852531433/f:d;if(d<1.0000000474974513e-03)b=f*.5-d*f*f*f*.02083333395421505*d;else b=+R(+(d*.5*f))/d;o=j*b;n=k*b;j=c*b;q=+Q(+(d*f*.5));Wg(a,l);b=+g[l>>2];p=+g[l+12>>2];c=+g[l+8>>2];f=+g[l+4>>2];r=1.0/+O(+((q*p-o*b-n*f-j*c)*(q*p-o*b-n*f-j*c)+((j*p+q*c+o*f-n*b)*(j*p+q*c+o*f-n*b)+((q*b+o*p+n*c-j*f)*(q*b+o*p+n*c-j*f)+(j*b+(n*p+q*f)-o*c)*(j*b+(n*p+q*f)-o*c)))));d=(q*b+o*p+n*c-j*f)*r;k=r*(j*b+(n*p+q*f)-o*c);m=r*(j*p+q*c+o*f-n*b);c=r*(q*p-o*b-n*f-j*c);j=d*(2.0/(c*c+(m*m+(d*d+k*k))));f=k*(2.0/(c*c+(m*m+(d*d+k*k))));b=m*(2.0/(c*c+(m*m+(d*d+k*k))));g[h>>2]=1.0-(k*f+m*b);g[h+4>>2]=d*f-c*b;g[h+8>>2]=d*b+c*f;g[h+12>>2]=0.0;g[h+16>>2]=d*f+c*b;g[h+20>>2]=1.0-(d*j+m*b);g[h+24>>2]=k*b-c*j;g[h+28>>2]=0.0;g[h+32>>2]=d*b-c*f;g[h+36>>2]=k*b+c*j;g[h+40>>2]=1.0-(d*j+k*f);g[h+44>>2]=0.0;i=l;return}function _g(b,d,e){b=b|0;d=+d;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;f=c[b+8>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0}f=c[b+12>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0}f=c[b+20>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0}f=c[b+24>>2]|0;if(f|0?(c[f+204>>2]&3|0)==0:0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0}f=c[b+156>>2]|0;c[b+156>>2]=f+1;a[b+152>>0]=(f|0)>=(c[b+160>>2]|0)&1;if(f|0){c[b+72>>2]=0;c[b+72+4>>2]=0;c[b+72+8>>2]=0;c[b+72+12>>2]=0;c[b+72+16>>2]=0;c[b+72+20>>2]=0;c[b+72+24>>2]=0;c[b+72+28>>2]=0;return}j=+g[b+64>>2];i=1.0/d*+g[b+72>>2]*j;h=1.0/d*j*+g[b+76>>2];d=1.0/d*j*+g[b+80>>2];g[b+72>>2]=i;g[b+76>>2]=h;g[b+80>>2]=d;g[b+84>>2]=0.0;j=+g[b+68>>2];if(j>0.0){l=j*i*+g[b+120>>2]+j*h*+g[b+124>>2]+j*d*+g[b+128>>2];k=j*i*+g[b+136>>2]+j*h*+g[b+140>>2]+j*d*+g[b+144>>2];g[b+88>>2]=j*i*+g[b+104>>2]+j*h*+g[b+108>>2]+j*d*+g[b+112>>2];g[b+92>>2]=l;g[b+96>>2]=k;g[b+100>>2]=0.0;g[b+72>>2]=(1.0-j)*i;g[b+76>>2]=(1.0-j)*h;g[b+80>>2]=(1.0-j)*d;i=(1.0-j)*i;h=(1.0-j)*h;d=(1.0-j)*d}g[b+72>>2]=1.0/+(e|0)*i;g[b+76>>2]=1.0/+(e|0)*h;g[b+80>>2]=1.0/+(e|0)*d;return}function $g(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;while(1){k=c[a+12>>2]|0;l=c[k+(((b+d|0)/2|0)<<2)>>2]|0;e=b;f=d;while(1){j=c[(c[l+740>>2]|0)+208>>2]|0;if((j|0)>-1)while(1){h=c[k+(e<<2)>>2]|0;g=c[(c[h+740>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+744>>2]|0)+208>>2]|0;if((g|0)<(j|0))e=e+1|0;else break}else{i=c[(c[l+744>>2]|0)+208>>2]|0;while(1){h=c[k+(e<<2)>>2]|0;g=c[(c[h+740>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+744>>2]|0)+208>>2]|0;if((g|0)<(i|0))e=e+1|0;else break}}if((j|0)>-1)while(1){h=c[k+(f<<2)>>2]|0;g=c[(c[h+740>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+744>>2]|0)+208>>2]|0;if((j|0)<(g|0))f=f+-1|0;else break}else{i=c[(c[l+744>>2]|0)+208>>2]|0;while(1){h=c[k+(f<<2)>>2]|0;g=c[(c[h+740>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+744>>2]|0)+208>>2]|0;if((i|0)<(g|0))f=f+-1|0;else break}}if((e|0)<=(f|0)){i=k+(e<<2)|0;j=c[i>>2]|0;c[i>>2]=c[k+(f<<2)>>2];c[(c[a+12>>2]|0)+(f<<2)>>2]=j;e=e+1|0;f=f+-1|0}if((e|0)>(f|0))break;k=c[a+12>>2]|0}if((f|0)>(b|0))$g(a,b,f);if((e|0)<(d|0))b=e;else break}return}function ah(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0;k=i;i=i+64|0;n=+g[d>>2];o=+g[d+4>>2];m=+g[d+8>>2];p=n*+g[b+4>>2]+o*+g[b+20>>2]+m*+g[b+36>>2];q=n*+g[b+8>>2]+o*+g[b+24>>2]+m*+g[b+40>>2];g[k+48>>2]=+g[b>>2]*n+ +g[b+16>>2]*o+ +g[b+32>>2]*m;g[k+48+4>>2]=p;g[k+48+8>>2]=q;g[k+48+12>>2]=0.0;ic[c[(c[a>>2]|0)+64>>2]&127](k+32|0,a,k+48|0);q=+g[k+32>>2];p=+g[k+32+4>>2];m=+g[k+32+8>>2];o=q*+g[b>>2]+p*+g[b+4>>2]+m*+g[b+8>>2]+ +g[b+48>>2];n=q*+g[b+16>>2]+p*+g[b+20>>2]+m*+g[b+24>>2]+ +g[b+52>>2];m=q*+g[b+32>>2]+p*+g[b+36>>2]+m*+g[b+40>>2]+ +g[b+56>>2];r=c[(c[a>>2]|0)+64>>2]|0;p=-+g[k+48+4>>2];q=-+g[k+48+8>>2];g[k>>2]=-+g[k+48>>2];g[k+4>>2]=p;g[k+8>>2]=q;g[k+12>>2]=0.0;ic[r&127](k+16|0,a,k);q=+g[k+16>>2];p=+g[k+16+4>>2];h=+g[k+16+8>>2];l=q*+g[b>>2]+p*+g[b+4>>2]+h*+g[b+8>>2]+ +g[b+48>>2];j=q*+g[b+16>>2]+p*+g[b+20>>2]+h*+g[b+24>>2]+ +g[b+52>>2];h=q*+g[b+32>>2]+p*+g[b+36>>2]+h*+g[b+40>>2]+ +g[b+56>>2];g[e>>2]=o*+g[d>>2]+n*+g[d+4>>2]+m*+g[d+8>>2];h=l*+g[d>>2]+j*+g[d+4>>2]+h*+g[d+8>>2];g[f>>2]=h;j=+g[e>>2];if(!(j>h)){i=k;return}g[e>>2]=h;g[f>>2]=j;i=k;return}function bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;while(1){k=c[a+12>>2]|0;l=c[k+(((b+d|0)/2|0)<<2)>>2]|0;e=b;f=d;while(1){j=c[(c[l+28>>2]|0)+208>>2]|0;if((j|0)>-1)while(1){h=c[k+(e<<2)>>2]|0;g=c[(c[h+28>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+32>>2]|0)+208>>2]|0;if((g|0)<(j|0))e=e+1|0;else break}else{i=c[(c[l+32>>2]|0)+208>>2]|0;while(1){h=c[k+(e<<2)>>2]|0;g=c[(c[h+28>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+32>>2]|0)+208>>2]|0;if((g|0)<(i|0))e=e+1|0;else break}}if((j|0)>-1)while(1){h=c[k+(f<<2)>>2]|0;g=c[(c[h+28>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+32>>2]|0)+208>>2]|0;if((j|0)<(g|0))f=f+-1|0;else break}else{i=c[(c[l+32>>2]|0)+208>>2]|0;while(1){h=c[k+(f<<2)>>2]|0;g=c[(c[h+28>>2]|0)+208>>2]|0;if((g|0)<=-1)g=c[(c[h+32>>2]|0)+208>>2]|0;if((i|0)<(g|0))f=f+-1|0;else break}}if((e|0)<=(f|0)){i=k+(e<<2)|0;j=c[i>>2]|0;c[i>>2]=c[k+(f<<2)>>2];c[(c[a+12>>2]|0)+(f<<2)>>2]=j;e=e+1|0;f=f+-1|0}if((e|0)>(f|0))break;k=c[a+12>>2]|0}if((f|0)>(b|0))bh(a,b,f);if((e|0)<(d|0))b=e;else break}return}function ch(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;m=i;i=i+16|0;h=c[a+12>>2]|0;j=c[h+(((d+b|0)/2|0)<<4)>>2]|0;k=c[h+(((d+b|0)/2|0)<<4)+4>>2]|0;l=c[h+(((d+b|0)/2|0)<<4)+8>>2]|0;e=b;f=d;while(1){g=e;while(1){e=c[h+(g<<4)+4>>2]|0;if((e|0)>=(k|0)){if((e|0)!=(k|0))break;e=c[h+(g<<4)>>2]|0;if((e|0)>=(j|0)){if((e|0)!=(j|0))break;if((c[h+(g<<4)+8>>2]|0)>=(l|0))break}}g=g+1|0}while(1){e=c[h+(f<<4)+4>>2]|0;if((k|0)>=(e|0)){if((k|0)!=(e|0))break;e=c[h+(f<<4)>>2]|0;if((j|0)>=(e|0)){if((j|0)!=(e|0))break;if((l|0)>=(c[h+(f<<4)+8>>2]|0))break}}f=f+-1|0}if((g|0)>(f|0))e=g;else{e=h+(g<<4)|0;c[m>>2]=c[e>>2];c[m+4>>2]=c[e+4>>2];c[m+8>>2]=c[e+8>>2];c[m+12>>2]=c[e+12>>2];h=h+(f<<4)|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];c[e+8>>2]=c[h+8>>2];c[e+12>>2]=c[h+12>>2];e=(c[a+12>>2]|0)+(f<<4)|0;c[e>>2]=c[m>>2];c[e+4>>2]=c[m+4>>2];c[e+8>>2]=c[m+8>>2];c[e+12>>2]=c[m+12>>2];e=g+1|0;f=f+-1|0}if((e|0)>(f|0))break;h=c[a+12>>2]|0}if((f|0)>(b|0))ch(a,b,f);if((e|0)>=(d|0)){i=m;return}ch(a,e,d);i=m;return}function dh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;e=i;i=i+48|0;y=+g[d>>2];n=+g[b>>2];x=+g[d+16>>2];l=+g[b+4>>2];w=+g[d+32>>2];j=+g[b+8>>2];v=+g[d+4>>2];u=+g[d+20>>2];t=+g[d+36>>2];k=+g[d+8>>2];m=+g[d+24>>2];o=+g[d+40>>2];q=+g[b+16>>2];p=+g[b+20>>2];h=+g[b+24>>2];s=+g[b+32>>2];r=+g[b+36>>2];f=+g[b+40>>2];g[e>>2]=y*n+x*l+w*j;g[e+4>>2]=v*n+u*l+t*j;g[e+8>>2]=k*n+m*l+o*j;g[e+12>>2]=0.0;g[e+16>>2]=y*q+x*p+w*h;g[e+20>>2]=v*q+u*p+t*h;g[e+24>>2]=k*q+m*p+o*h;g[e+28>>2]=0.0;g[e+32>>2]=y*s+x*r+w*f;g[e+36>>2]=v*s+u*r+t*f;g[e+40>>2]=k*s+m*r+o*f;g[e+44>>2]=0.0;o=+g[d+48>>2];m=+g[d+52>>2];k=+g[d+56>>2];f=o*s+m*r+k*f+ +g[b+56>>2];h=o*q+m*p+k*h+ +g[b+52>>2];j=o*n+m*l+k*j+ +g[b+48>>2];c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];c[a+16>>2]=c[e+16>>2];c[a+16+4>>2]=c[e+16+4>>2];c[a+16+8>>2]=c[e+16+8>>2];c[a+16+12>>2]=c[e+16+12>>2];c[a+32>>2]=c[e+32>>2];c[a+32+4>>2]=c[e+32+4>>2];c[a+32+8>>2]=c[e+32+8>>2];c[a+32+12>>2]=c[e+32+12>>2];g[a+48>>2]=j;g[a+52>>2]=h;g[a+56>>2]=f;g[a+60>>2]=0.0;i=e;return}function eh(a,b){a=+a;b=+b;var d=0,e=0,f=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0.0;m=(g[k>>2]=a,c[k>>2]|0);i=(g[k>>2]=b,c[k>>2]|0);a:do if((i<<1|0)!=0?(o=+N(+b),!((g[k>>2]=o,c[k>>2]|0)>>>0>2139095040|(m>>>23&255|0)==255)):0){if(m<<1>>>0<=i<<1>>>0)return +((m<<1|0)==(i<<1|0)?a*0.0:a);if(!(m>>>23&255)){if((m<<9|0)>-1){d=0;e=m<<9;do{d=d+-1|0;e=e<<1}while((e|0)>-1);e=d}else e=0;d=e;f=m<<1-e}else{d=m>>>23&255;f=m&8388607|8388608}if(!(i>>>23&255)){if((i<<9|0)>-1){e=0;h=i<<9;do{e=e+-1|0;h=h<<1}while((h|0)>-1)}else e=0;j=e;l=i<<1-e}else{j=i>>>23&255;l=i&8388607|8388608}h=f-l|0;b:do if((d|0)>(j|0)){i=(h|0)>-1;e=h;while(1){if(i){if((f|0)==(l|0))break}else e=f;f=e<<1;d=d+-1|0;h=f-l|0;if((d|0)>(j|0)){i=(h|0)>-1;e=h}else{e=h;h=(h|0)>-1;break b}}b=a*0.0;break a}else{e=h;h=(h|0)>-1}while(0);if(h){if((f|0)==(l|0)){b=a*0.0;break}}else e=f;if(e>>>0<8388608)do{e=e<<1;d=d+-1|0}while(e>>>0<8388608);if((d|0)>0)d=e+-8388608|d<<23;else d=e>>>(1-d|0);b=(c[k>>2]=d|m&-2147483648,+g[k>>2])}else n=3;while(0);if((n|0)==3)b=a*b/(a*b);return +b}function fh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0.0,p=0.0,q=0;n=i;i=i+16|0;if((f|0)>-3&(f+3|0)>-1){if((f+3|0)!=0?(c[6435]=(c[6435]|0)+1,h=yc((f+3<<4|3)+16|0)|0,(h|0)!=0):0){c[(h+4+15&-16)+-4>>2]=h;a=h+4+15&-16}else a=0;h=0;do{m=a+(h<<4)|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];h=h+1|0}while((h|0)!=(f+3|0));m=a}else m=0;if((f|0)>-3){h=m;l=0;while(1){if(!l)j=0.0;else{a=l;k=.5;j=0.0;while(1){j=(a&1|0)==0?j:j+k;a=a>>1;if(!a)break;else k=k*.5}}k=j*2.0+-1.0;o=(+(l<<1|0)*3.1415927410125732+3.1415927410125732)/+(f+3|0);p=+O(+(1.0-k*k));j=p*+R(+o);g[h>>2]=p*+Q(+o);g[h+4>>2]=j;g[h+8>>2]=k;g[h+12>>2]=0.0;l=l+1|0;if((l|0)==(f+3|0))break;else h=h+16|0}a=0;do{q=m+(a<<4)|0;h=m+(a<<4)+4|0;l=m+(a<<4)+8|0;o=+g[h>>2]*+g[e+4>>2]+ +g[d+4>>2];p=+g[l>>2]*+g[e+8>>2]+ +g[d+8>>2];g[q>>2]=+g[q>>2]*+g[e>>2]+ +g[d>>2];g[h>>2]=o;g[l>>2]=p;g[m+(a<<4)+12>>2]=0.0;a=a+1|0}while((a|0)<(f+3|0))}a=rc(b,m,f+3|0,1)|0;if(!m){i=n;return a|0}c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0);i=n;return a|0}function gh(a,b,d,e,f,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0;r=i;i=i+16|0;g[e>>2]=3402823466385288598117041.0e14;g[f>>2]=-3402823466385288598117041.0e14;n=c[a+8>>2]|0;if((n|0)>0){q=0;do{t=c[a+16>>2]|0;s=+g[t+(q<<4)>>2];p=+g[t+(q<<4)+4>>2];o=+g[t+(q<<4)+8>>2];l=s*+g[b>>2]+p*+g[b+4>>2]+o*+g[b+8>>2]+ +g[b+48>>2];m=s*+g[b+16>>2]+p*+g[b+20>>2]+o*+g[b+24>>2]+ +g[b+52>>2];o=s*+g[b+32>>2]+p*+g[b+36>>2]+o*+g[b+40>>2]+ +g[b+56>>2];p=l*+g[d>>2]+m*+g[d+4>>2]+o*+g[d+8>>2];if(p<+g[e>>2]){g[e>>2]=p;g[h>>2]=l;g[h+4>>2]=m;g[h+8>>2]=o;g[h+12>>2]=0.0}if(p>+g[f>>2]){g[f>>2]=p;g[j>>2]=l;g[j+4>>2]=m;g[j+8>>2]=o;g[j+12>>2]=0.0}q=q+1|0}while((q|0)!=(n|0));s=+g[f>>2];m=s;n=(g[k>>2]=s,c[k>>2]|0)}else{m=-3402823466385288598117041.0e14;n=-8388609}l=+g[e>>2];if(!(l>m)){i=r;return}c[e>>2]=n;g[f>>2]=l;c[r>>2]=c[h>>2];c[r+4>>2]=c[h+4>>2];c[r+8>>2]=c[h+8>>2];c[r+12>>2]=c[h+12>>2];c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];c[j>>2]=c[r>>2];c[j+4>>2]=c[r+4>>2];c[j+8>>2]=c[r+8>>2];c[j+12>>2]=c[r+12>>2];i=r;return}function hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0;if((c[a>>2]|0)==(b|0)){c[a>>2]=0;a=0;return a|0}e=c[b+32>>2]|0;d=c[e+32>>2]|0;b=c[e+36+(((c[e+40>>2]|0)!=(b|0)&1)<<2)>>2]|0;if(!d){c[a>>2]=b;c[b+32>>2]=0;d=c[a+4>>2]|0;if(!d)d=b;else{c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);d=c[a>>2]|0}c[a+4>>2]=e;a=d;return a|0}c[d+36+(((c[d+40>>2]|0)==(e|0)&1)<<2)>>2]=b;c[b+32>>2]=d;b=c[a+4>>2]|0;if(b|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}c[a+4>>2]=e;do{s=+g[d>>2];x=d+4|0;q=+g[x>>2];v=d+8|0;o=+g[v>>2];y=d+16|0;m=+g[y>>2];w=d+20|0;i=+g[w>>2];e=d+24|0;k=+g[e>>2];u=c[d+36>>2]|0;b=c[d+40>>2]|0;t=+g[u>>2];r=+g[b>>2];r=t<r?t:r;g[d>>2]=r;t=+g[u+16>>2];l=+g[b+16>>2];l=t>l?t:l;g[y>>2]=l;t=+g[u+4>>2];p=+g[b+4>>2];p=t<p?t:p;g[x>>2]=p;t=+g[u+20>>2];h=+g[b+20>>2];h=t>h?t:h;g[w>>2]=h;t=+g[u+8>>2];n=+g[b+8>>2];n=t<n?t:n;g[v>>2]=n;t=+g[u+24>>2];j=+g[b+24>>2];j=t>j?t:j;g[e>>2]=j;if(!(s!=r|q!=p|o!=n|m!=l)?!(k!=j|i!=h):0){f=14;break}d=c[d+32>>2]|0}while((d|0)!=0);if((f|0)==14)return d|0;y=c[a>>2]|0;return y|0}function ih(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,i=0,j=0;i=c[a+28>>2]|0;e=0.0;f=0.0;h=0.0;j=0;a:while(1){switch(j|0){case 0:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 1:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 2:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 3:{e=+g[a+80>>2]+ +g[a+64>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 4:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 5:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+84>>2]+ +g[a+68>>2];h=+g[a+72>>2]-+g[a+88>>2];break}case 6:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+88>>2]+ +g[a+72>>2];break}case 7:{e=+g[a+64>>2]-+g[a+80>>2];f=+g[a+68>>2]-+g[a+84>>2];h=+g[a+72>>2]-+g[a+88>>2];break}default:{}}if((i|0)>0){b=c[a+36>>2]|0;d=0;do{if(+g[b+(d*36|0)+32>>2]+(e*+g[b+(d*36|0)+20>>2]+f*+g[b+(d*36|0)+24>>2]+h*+g[b+(d*36|0)+28>>2])>0.0){b=0;d=16;break a}d=d+1|0}while((d|0)<(i|0))}j=j+1|0;if((j|0)>=8){b=1;d=16;break}}if((d|0)==16)return b|0;return 0}function jh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;o=+g[d>>2];if(+g[b>>2]<=o){i=+g[d+4>>2];if((((+g[b+4>>2]<=i?+g[b+8>>2]<=+g[d+8>>2]:0)?+g[b+16>>2]>=+g[d+16>>2]:0)?+g[b+20>>2]>=+g[d+20>>2]:0)?+g[b+24>>2]>=+g[d+24>>2]:0){d=0;return d|0}else h=d+4|0}else{h=d+4|0;i=+g[d+4>>2]}g[d>>2]=o-f;m=i-f;g[h>>2]=m;p=+g[d+8>>2]-f;g[d+8>>2]=p;i=+g[d+16>>2]+f;g[d+16>>2]=i;n=+g[d+20>>2]+f;g[d+20>>2]=n;q=+g[d+24>>2]+f;g[d+24>>2]=q;l=+g[e>>2];if(l>0.0)g[d+16>>2]=l+i;else g[d>>2]=l+(o-f);i=+g[e+4>>2];if(i>0.0)g[d+20>>2]=i+n;else g[h>>2]=i+m;i=+g[e+8>>2];if(i>0.0)g[d+24>>2]=i+q;else g[d+8>>2]=i+p;h=hh(a,b)|0;a:do if(h){j=c[a+8>>2]|0;if((j|0)<=-1){h=c[a>>2]|0;break}if((j|0)>0){k=0;while(1){e=c[h+32>>2]|0;k=k+1|0;if(!e)break a;if((k|0)>=(j|0)){h=e;break}else h=e}}}else h=0;while(0);c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];lf(a,h,b);d=1;return d|0}function kh(a,d,e){a=a|0;d=d|0;e=e|0;si(a,d,e)|0;c[d+52>>2]=c[a+48>>2];c[d+56>>2]=c[a+52>>2];c[d+60>>2]=c[a+56>>2];c[d+64>>2]=c[a+60>>2];c[d+68>>2]=c[a+64>>2];c[d+72>>2]=c[a+68>>2];c[d+76>>2]=c[a+72>>2];c[d+80>>2]=c[a+76>>2];c[d+84>>2]=c[a+80>>2];c[d+88>>2]=c[a+84>>2];c[d+92>>2]=c[a+88>>2];c[d+96>>2]=c[a+92>>2];c[d+100>>2]=c[a+96>>2];c[d+104>>2]=c[a+100>>2];c[d+108>>2]=c[a+104>>2];c[d+112>>2]=c[a+108>>2];c[d+116>>2]=c[a+112>>2];c[d+120>>2]=c[a+116>>2];c[d+124>>2]=c[a+120>>2];c[d+128>>2]=c[a+124>>2];c[d+132>>2]=c[a+128>>2];c[d+136>>2]=c[a+132>>2];c[d+140>>2]=c[a+136>>2];c[d+144>>2]=c[a+140>>2];c[d+148>>2]=c[a+144>>2];c[d+152>>2]=c[a+148>>2];c[d+156>>2]=c[a+152>>2];c[d+160>>2]=c[a+156>>2];c[d+164>>2]=c[a+160>>2];c[d+168>>2]=c[a+164>>2];c[d+172>>2]=c[a+168>>2];c[d+176>>2]=c[a+172>>2];c[d+228>>2]=c[a+868>>2];c[d+212>>2]=c[a+872>>2];c[d+196>>2]=c[a+680>>2];c[d+180>>2]=c[a+696>>2];c[d+232>>2]=c[a+932>>2];c[d+216>>2]=c[a+936>>2];c[d+200>>2]=c[a+684>>2];c[d+184>>2]=c[a+700>>2];c[d+236>>2]=c[a+996>>2];c[d+220>>2]=c[a+1e3>>2];c[d+204>>2]=c[a+688>>2];c[d+188>>2]=c[a+704>>2];a=b[a+1300>>1]|0;c[d+244>>2]=a&255;c[d+248>>2]=(a&65535)>>>8&65535;return 12479}function lh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;m=i;i=i+32|0;h=(a[b+28>>0]|0)!=0;l=h?e:d;h=h?d:e;j=c[l+4>>2]|0;k=c[j+16>>2]|0;g=c[b+12>>2]|0;if((g|0)<(k|0)){if((c[b+16>>2]|0)<(k|0)){if(!k){d=0;e=g}else{c[6435]=(c[6435]|0)+1;d=yc((k<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+12>>2]|0}if((e|0)>0){f=0;do{c[d+(f<<2)>>2]=c[(c[b+20>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(e|0))}e=c[b+20>>2]|0;if(e|0){if(a[b+24>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=d;c[b+16>>2]=k;e=b+20|0}else e=b+20|0;d=g;do{c[(c[e>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=(k|0))}c[b+12>>2]=k;if((k|0)<=0){i=m;return}d=0;do{if(!(c[j+64>>2]|0)){e=c[(c[j+24>>2]|0)+(d*80|0)+64>>2]|0;f=c[l+8>>2]|0;g=c[l+12>>2]|0;c[m>>2]=l;c[m+4>>2]=e;c[m+8>>2]=f;c[m+12>>2]=g;c[m+16>>2]=-1;c[m+20>>2]=d;g=c[b+4>>2]|0;g=Ib[c[(c[g>>2]|0)+8>>2]&31](g,m,h,c[b+32>>2]|0)|0;c[(c[b+20>>2]|0)+(d<<2)>>2]=g}else c[(c[b+20>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=(k|0));i=m;return}function mh(){var a=0,b=0,d=0;c[6435]=(c[6435]|0)+1;a=yc(219)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}nl();nl();c[a>>2]=2896;b=a+52|0;d=a+4|0;c[d>>2]=c[5710];c[d+4>>2]=c[5711];c[d+8>>2]=c[5712];c[d+12>>2]=c[5713];d=a+20|0;c[d>>2]=c[5714];c[d+4>>2]=c[5715];c[d+8>>2]=c[5716];c[d+12>>2]=c[5717];d=a+36|0;c[d>>2]=c[5718];c[d+4>>2]=c[5719];c[d+8>>2]=c[5720];c[d+12>>2]=c[5721];c[b>>2]=c[5722];c[b+4>>2]=c[5723];c[b+8>>2]=c[5724];c[b+12>>2]=c[5725];b=a+116|0;d=a+68|0;c[d>>2]=c[5710];c[d+4>>2]=c[5711];c[d+8>>2]=c[5712];c[d+12>>2]=c[5713];d=a+84|0;c[d>>2]=c[5714];c[d+4>>2]=c[5715];c[d+8>>2]=c[5716];c[d+12>>2]=c[5717];d=a+100|0;c[d>>2]=c[5718];c[d+4>>2]=c[5719];c[d+8>>2]=c[5720];c[d+12>>2]=c[5721];c[b>>2]=c[5722];c[b+4>>2]=c[5723];c[b+8>>2]=c[5724];c[b+12>>2]=c[5725];b=a+180|0;d=a+132|0;c[d>>2]=c[5710];c[d+4>>2]=c[5711];c[d+8>>2]=c[5712];c[d+12>>2]=c[5713];d=a+148|0;c[d>>2]=c[5714];c[d+4>>2]=c[5715];c[d+8>>2]=c[5716];c[d+12>>2]=c[5717];d=a+164|0;c[d>>2]=c[5718];c[d+4>>2]=c[5719];c[d+8>>2]=c[5720];c[d+12>>2]=c[5721];c[b>>2]=c[5722];c[b+4>>2]=c[5723];c[b+8>>2]=c[5724];c[b+12>>2]=c[5725];c[a+196>>2]=0;return a|0}function nh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=c[b+32>>2]|0;if(!d)f=0;else f=c[b+40>>2]|0;i=c[b+52>>2]|0;if(!i)g=0;else g=c[b+60>>2]|0;e=c[b+72>>2]|0;if(!e)h=0;else h=c[b+80>>2]|0;j=c[b+8>>2]|0;+$b[c[(c[j>>2]|0)+12>>2]&3](j,f,d,g,i,h,e,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);d=c[b+32>>2]|0;if((d|0)<0){if((c[b+36>>2]|0)<0){e=c[b+40>>2]|0;if(e|0){if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+36>>2]=0}do{c[(c[b+40>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=0)}c[b+32>>2]=0;d=c[b+52>>2]|0;if((d|0)<0){if((c[b+56>>2]|0)<0){e=c[b+60>>2]|0;if(e|0){if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+56>>2]=0}do{c[(c[b+60>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=0)}c[b+52>>2]=0;d=c[b+72>>2]|0;if((d|0)>=0){c[b+72>>2]=0;return}if((c[b+76>>2]|0)<0){e=c[b+80>>2]|0;if(e|0){if(a[b+84>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=0;c[b+76>>2]=0}do{c[(c[b+80>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=0);c[b+72>>2]=0;return}function oh(b,d,e){b=b|0;d=+d;e=e|0;var f=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0;j=c[b+712>>2]|0;if(e){if((j|0)>0){e=c[b+720>>2]|0;h=0;do{g[e+(h*104|0)+88>>2]=0.0;h=h+1|0}while((h|0)!=(j|0))}e=c[b+752>>2]|0;if((e|0)>0){h=c[b+760>>2]|0;i=0;do{m=c[h+(i*44|0)+8>>2]|0;l=c[h+(i*44|0)+12>>2]|0;k=c[h+(i*44|0)+16>>2]|0;o=+g[m+8>>2];q=+g[m+12>>2];f=+g[m+16>>2];n=+g[l+8>>2]-o;r=+g[l+12>>2]-q;p=+g[l+16>>2]-f;o=+g[k+8>>2]-o;q=+g[k+12>>2]-q;f=+g[k+16>>2]-f;f=+O(+((n*q-r*o)*(n*q-r*o)+((r*f-p*q)*(r*f-p*q)+(p*o-n*f)*(p*o-n*f))));g[m+88>>2]=f+ +g[m+88>>2];g[l+88>>2]=f+ +g[l+88>>2];g[k+88>>2]=f+ +g[k+88>>2];i=i+1|0}while((i|0)!=(e|0))}if((j|0)<=0){m=b+924|0;a[m>>0]=1;return}e=c[b+720>>2]|0;h=0;do{m=e+(h*104|0)+88|0;g[m>>2]=1.0/+g[m>>2];h=h+1|0}while((h|0)!=(j|0))}if((j|0)<=0){m=b+924|0;a[m>>0]=1;return}i=c[b+720>>2]|0;e=0;f=0.0;do{r=+g[i+(e*104|0)+88>>2];f=f+(r>0.0?1.0/r:0.0);e=e+1|0}while((e|0)!=(j|0));f=1.0/f*d;e=c[b+712>>2]|0;h=0;do{m=i+(h*104|0)+88|0;g[m>>2]=+g[m>>2]/f;h=h+1|0}while((h|0)<(e|0));m=b+924|0;a[m>>0]=1;return}function ph(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[6435]=(c[6435]|0)+1;d=yc(39)|0;if(!d)i=0;else{c[(d+4+15&-16)+-4>>2]=d;i=d+4+15&-16}g=i;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;c[i+16>>2]=0;if((c[b+872>>2]|0)>0){h=c[c[b+880>>2]>>2]|0;c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];c[i+8>>2]=c[h+8>>2];c[i+12>>2]=c[h+12>>2];c[i+16>>2]=c[h+16>>2]}else{c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;c[i+16>>2]=0}e=c[b+872>>2]|0;if((e|0)!=(c[b+876>>2]|0)){h=e;f=b+880|0;f=c[f>>2]|0;f=f+(h<<2)|0;c[f>>2]=g;h=h+1|0;c[b+872>>2]=h;return i|0}h=e|0?e<<1:1;if((e|0)>=(h|0)){h=e;f=b+880|0;f=c[f>>2]|0;f=f+(h<<2)|0;c[f>>2]=g;h=h+1|0;c[b+872>>2]=h;return i|0}if(!h)d=0;else{c[6435]=(c[6435]|0)+1;d=yc((h<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+872>>2]|0}if((e|0)>0){f=0;do{c[d+(f<<2)>>2]=c[(c[b+880>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(e|0))}f=c[b+880>>2]|0;if(f){if(a[b+884>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);e=c[b+872>>2]|0}c[b+880>>2]=0}a[b+884>>0]=1;c[b+880>>2]=d;c[b+876>>2]=h;h=e;f=b+880|0;f=c[f>>2]|0;f=f+(h<<2)|0;c[f>>2]=g;h=h+1|0;c[b+872>>2]=h;return i|0}function qh(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;c[6435]=(c[6435]|0)+1;b=yc((h+2|0)>>>0>268435455?18:(h+2<<4|3)+16|0)|0;if(!b)m=0;else{c[(b+4+15&-16)+-4>>2]=b;m=b+4+15&-16}j=(h+2|0)>>>0>1073741823?-1:h+2<<2;j=(j|0)==0?1:j;while(1){k=yc(j)|0;if(k|0)break;b=c[6564]|0;c[6564]=b+0;if(!b){l=7;break}jc[b&3]()}if((l|0)==7){h=Ya(4)|0;c[h>>2]=9640;pb(h|0,2800,251)}if((h|0)>-2){b=0;do{q=+(b|0)/+(h+1|0);p=+g[e>>2];o=+g[e+4>>2];o=o+q*(+g[f+4>>2]-o);n=+g[e+8>>2];n=n+q*(+g[f+8>>2]-n);g[m+(b<<4)>>2]=p+q*(+g[f>>2]-p);g[m+(b<<4)+4>>2]=o;g[m+(b<<4)+8>>2]=n;g[m+(b<<4)+12>>2]=0.0;g[k+(b<<2)>>2]=1.0;b=b+1|0}while((b|0)<(h+2|0))}c[6435]=(c[6435]|0)+1;b=yc(1271)|0;if(!b)j=0;else{c[(b+4+15&-16)+-4>>2]=b;j=b+4+15&-16}Kc(j,d,h+2|0,m,k);if(i&1|0){g[(c[j+720>>2]|0)+88>>2]=0.0;a[j+924>>0]=1}if(i&2|0){g[(c[j+720>>2]|0)+((h+1|0)*104|0)+88>>2]=0.0;a[j+924>>0]=1}if(m|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}hd(k);if((h+2|0)>1)b=1;else return j|0;do{Rf(j,b+-1|0,b,0,0);b=b+1|0}while((b|0)!=(h+2|0));return j|0}function rh(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,l=0,m=0.0,n=0,o=0,p=0.0,q=0.0;mc[c[(c[a>>2]|0)+8>>2]&127](a,b,f,h);l=c[h>>2]|0;o=c[h+4>>2]|0;i=c[h+8>>2]|0;n=c[f>>2]|0;j=c[f+4>>2]|0;b=c[f+8>>2]|0;m=+g[d>>2];p=+g[d+4>>2];q=+g[d+8>>2];if(m>0.0)l=(g[k>>2]=(c[k>>2]=l,+g[k>>2])+m,c[k>>2]|0);else n=(g[k>>2]=(c[k>>2]=n,+g[k>>2])+m,c[k>>2]|0);if(p>0.0)d=(g[k>>2]=(c[k>>2]=o,+g[k>>2])+p,c[k>>2]|0);else{d=o;j=(g[k>>2]=(c[k>>2]=j,+g[k>>2])+p,c[k>>2]|0)}if(q>0.0)i=(g[k>>2]=(c[k>>2]=i,+g[k>>2])+q,c[k>>2]|0);else b=(g[k>>2]=(c[k>>2]=b,+g[k>>2])+q,c[k>>2]|0);m=+g[e>>2];p=+g[e+4>>2];q=+g[e+8>>2];q=+O(+(m*m+p*p+q*q));q=q*+Sb[c[(c[a>>2]|0)+16>>2]&15](a);c[f>>2]=n;c[f+4>>2]=j;c[f+8>>2]=b;g[f+12>>2]=0.0;c[h>>2]=l;c[h+4>>2]=d;c[h+8>>2]=i;g[h+12>>2]=0.0;g[f>>2]=+g[f>>2]-q;g[f+4>>2]=+g[f+4>>2]-q;g[f+8>>2]=+g[f+8>>2]-q;g[h>>2]=q+ +g[h>>2];g[h+4>>2]=q+ +g[h+4>>2];g[h+8>>2]=q+ +g[h+8>>2];return}function sh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;n=i;i=i+112|0;m=c[d+4>>2]|0;k=n;l=k+100|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));h=c[b+712>>2]|0;a:do if((h|0)>(m|0))e=b+720|0;else{if((h|0)<(m|0)?(c[b+716>>2]|0)<(m|0):0){if((m|0)!=0?(c[6435]=(c[6435]|0)+1,e=yc((m*104|3)+16|0)|0,(e|0)!=0):0){c[(e+4+15&-16)+-4>>2]=e;g=e+4+15&-16}else g=0;e=c[b+712>>2]|0;f=0;while(1){if((f|0)>=(e|0))break;k=g+(f*104|0)|0;j=(c[b+720>>2]|0)+(f*104|0)|0;l=k+104|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));f=f+1|0}e=c[b+720>>2]|0;if(e|0){if(!((a[b+724>>0]&1)==0|(e|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+720>>2]=0}a[b+724>>0]=1;c[b+720>>2]=g;c[b+716>>2]=m}e=h;while(1){if((e|0)>=(m|0)){e=b+720|0;break a}k=c[b+720>>2]|0;c[k+(e*104|0)>>2]=0;k=k+(e*104|0)+4|0;j=n;l=k+100|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));e=e+1|0}}while(0);c[b+712>>2]=m;e=c[e>>2]|0;f=0;while(1){if((f|0)>=(m|0))break;k=e+(f*104|0)|0;j=(c[d+12>>2]|0)+(f*104|0)|0;l=k+104|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(l|0));f=f+1|0}i=n;return}function th(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[b+4>>2]|0;if((e|0)==(c[b+8>>2]|0)){If(b,e|0?e<<1:1);e=c[b+4>>2]|0}j=(c[b+12>>2]|0)+(e*36|0)|0;a[j+16>>0]=1;c[j+12>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;k=c[d+4>>2]|0;if((k|0)<=0){c[j+4>>2]=k;k=j+20|0;d=d+20|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];d=c[b+4>>2]|0;d=d+1|0;c[b+4>>2]=d;return}c[6435]=(c[6435]|0)+1;e=yc((k<<2|3)+16|0)|0;if(!e)h=0;else{c[(e+4+15&-16)+-4>>2]=e;h=e+4+15&-16}g=c[j+4>>2]|0;f=c[j+12>>2]|0;if((g|0)<=0)if(!f){a[j+16>>0]=1;c[j+12>>2]=h;c[j+8>>2]=k;Tn(h|0,0,k<<2|0)|0}else i=11;else{e=0;do{c[h+(e<<2)>>2]=c[f+(e<<2)>>2];e=e+1|0}while((e|0)!=(g|0));i=11}if((i|0)==11){if(a[j+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[j+16>>0]=1;c[j+12>>2]=h;c[j+8>>2]=k;Tn(h|0,0,k<<2|0)|0}e=c[j+12>>2]|0;c[j+4>>2]=k;f=c[d+12>>2]|0;g=0;do{c[e+(g<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(k|0));k=j+20|0;d=d+20|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];d=c[b+4>>2]|0;d=d+1|0;c[b+4>>2]=d;return}function uh(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=c[a+68+(d<<2)>>2]|0;h=b[i+((f&65535)<<2)+-4>>1]|0;if((e[i+((f&65535)<<2)>>1]|0)>=(h&65535))return;k=c[a+60>>2]|0;l=k+((e[i+((f&65535)<<2)+2>>1]|0)<<6)+54+(d<<1)|0;j=i+((f&65535)<<2)|0;f=i+((f&65535)<<2)+-4|0;while(1){i=e[j+-2>>1]|0;if(!(h&1)){h=e[j+2>>1]|0;if(((((e[k+(h<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[k+(i<<6)+48+((1<<d&3)<<1)>>1]|0)?(e[k+(i<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[k+(h<<6)+48+((1<<d&3)<<1)>>1]|0):0)?(e[k+(h<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[k+(i<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(e[k+(i<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[k+(h<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(o=c[a+92>>2]|0,m=k+(h<<6)|0,n=k+(i<<6)|0,Ib[c[(c[o>>2]|0)+12>>2]&31](o,m,n,g)|0,o=c[a+96>>2]|0,o|0):0)Ib[c[(c[o>>2]|0)+12>>2]&31](o,m,n,g)|0;k=k+(i<<6)+48+(d<<1)|0;b[k>>1]=(b[k>>1]|0)+1<<16>>16}else{k=k+(i<<6)+54+(d<<1)|0;b[k>>1]=(b[k>>1]|0)+1<<16>>16}b[l>>1]=(b[l>>1]|0)+-1<<16>>16;i=e[j>>1]|e[j+2>>1]<<16;h=e[f>>1]|e[f+2>>1]<<16;b[j>>1]=h;b[j+2>>1]=h>>>16;b[f>>1]=i;b[f+2>>1]=i>>>16;i=j+-4|0;f=f+-4|0;h=b[f>>1]|0;if((e[i>>1]|0)>=(h&65535))break;k=c[a+60>>2]|0;j=i}return}function vh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;k=i;i=i+48|0;g=c[a+28>>2]|0;c[k+32>>2]=g;g=(c[a+20>>2]|0)-g|0;c[k+32+4>>2]=g;c[k+32+8>>2]=b;c[k+32+12>>2]=d;j=k+32|0;f=2;g=g+d|0;while(1){if(true){c[k+16>>2]=c[a+60>>2];c[k+16+4>>2]=j;c[k+16+8>>2]=f;b=wb(146,k+16|0)|0;if(b>>>0>4294963200){if(true)e=25748;else e=c[(ib()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}}else{rb(254,a|0);c[k>>2]=c[a+60>>2];c[k+4>>2]=j;c[k+8>>2]=f;b=wb(146,k|0)|0;if(b>>>0>4294963200){if(!0)e=25748;else e=c[(ib()|0)+64>>2]|0;c[e>>2]=0-b;b=-1}Ua(0)}if((g|0)==(b|0)){b=13;break}if((b|0)<0){b=15;break}g=g-b|0;e=c[j+4>>2]|0;if(b>>>0<=e>>>0)if((f|0)==2){c[a+28>>2]=(c[a+28>>2]|0)+b;h=e;e=j;f=2}else{h=e;e=j}else{h=c[a+44>>2]|0;c[a+28>>2]=h;c[a+20>>2]=h;h=c[j+12>>2]|0;b=b-e|0;e=j+8|0;f=f+-1|0}c[e>>2]=(c[e>>2]|0)+b;c[e+4>>2]=h-b;j=e}if((b|0)==13){j=c[a+44>>2]|0;c[a+16>>2]=j+(c[a+48>>2]|0);c[a+28>>2]=j;c[a+20>>2]=j}else if((b|0)==15){c[a+16>>2]=0;c[a+28>>2]=0;c[a+20>>2]=0;c[a>>2]=c[a>>2]|32;if((f|0)==2)d=0;else d=d-(c[j+4>>2]|0)|0}i=k;return d|0}function wh(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=c[a+68+(d<<2)>>2]|0;m=c[a+60>>2]|0;n=e[h+((f&65535)<<2)+2>>1]|0;g=b[h+((f&65535)<<2)+-4>>1]|0;if((e[h+((f&65535)<<2)>>1]|0)>=(g&65535))return;j=m;i=h+((f&65535)<<2)|0;f=h+((f&65535)<<2)+-4|0;while(1){h=e[i+-2>>1]|0;if(!(g&1)){j=j+(h<<6)+48+(d<<1)|0;b[j>>1]=(b[j>>1]|0)+1<<16>>16}else{if(((((e[m+(n<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[j+(h<<6)+48+((1<<d&3)<<1)>>1]|0)?(e[j+(h<<6)+54+((1<<d&3)<<1)>>1]|0)>=(e[m+(n<<6)+48+((1<<d&3)<<1)>>1]|0):0)?(e[m+(n<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[j+(h<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(e[j+(h<<6)+54+((1<<(1<<d&3)&3)<<1)>>1]|0)>=(e[m+(n<<6)+48+((1<<(1<<d&3)&3)<<1)>>1]|0):0)?(l=c[a+92>>2]|0,k=j+(h<<6)|0,Ob[c[(c[l>>2]|0)+8>>2]&63](l,m+(n<<6)|0,k)|0,l=c[a+96>>2]|0,l|0):0)Ob[c[(c[l>>2]|0)+8>>2]&63](l,m+(n<<6)|0,k)|0;j=j+(h<<6)+54+(d<<1)|0;b[j>>1]=(b[j>>1]|0)+1<<16>>16}b[m+(n<<6)+48+(d<<1)>>1]=(b[m+(n<<6)+48+(d<<1)>>1]|0)+-1<<16>>16;h=e[i>>1]|e[i+2>>1]<<16;g=e[f>>1]|e[f+2>>1]<<16;b[i>>1]=g;b[i+2>>1]=g>>>16;b[f>>1]=h;b[f+2>>1]=h>>>16;h=i+-4|0;f=f+-4|0;g=b[f>>1]|0;if((e[h>>1]|0)>=(g&65535))break;j=c[a+60>>2]|0;i=h}return}function xh(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0.0,o=0.0;m=i;i=i+80|0;o=+g[h+52>>2]-+g[f+52>>2];n=+g[h+56>>2]-+g[f+56>>2];g[m+56>>2]=+g[h+48>>2]-+g[f+48>>2];g[m+56+4>>2]=o;g[m+56+8>>2]=n;g[m+56+12>>2]=0.0;if(Pc(d,f,e,h,m+56|0,m,1)|0){c[k>>2]=c[m+4>>2];c[k+4>>2]=c[m+4+4>>2];c[k+8>>2]=c[m+4+8>>2];c[k+12>>2]=c[m+4+12>>2];c[l>>2]=c[m+20>>2];c[l+4>>2]=c[m+20+4>>2];c[l+8>>2]=c[m+20+8>>2];c[l+12>>2]=c[m+20+12>>2];c[j>>2]=c[m+36>>2];c[j+4>>2]=c[m+36+4>>2];c[j+8>>2]=c[m+36+8>>2];c[j+12>>2]=c[m+36+12>>2];l=1;i=m;return l|0}if(!(Jd(d,f,e,h,m+56|0,m)|0)){l=0;i=m;return l|0}c[k>>2]=c[m+4>>2];c[k+4>>2]=c[m+4+4>>2];c[k+8>>2]=c[m+4+8>>2];c[k+12>>2]=c[m+4+12>>2];c[l>>2]=c[m+20>>2];c[l+4>>2]=c[m+20+4>>2];c[l+8>>2]=c[m+20+8>>2];c[l+12>>2]=c[m+20+12>>2];c[j>>2]=c[m+36>>2];c[j+4>>2]=c[m+36+4>>2];c[j+8>>2]=c[m+36+8>>2];c[j+12>>2]=c[m+36+12>>2];l=0;i=m;return l|0}function yh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0;p=i;i=i+2048|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];if(e*e+h*h+f*f<9.999999747378752e-05){n=1.0;m=0.0;h=0.0}else{q=1.0/+O(+(e*e+h*h+f*f));n=e*q;m=f*q;h=h*q}if((Eb[c[(c[b>>2]|0)+96>>2]&127](b)|0)<=0){i=p;return}l=0;f=-999999984306749440.0;while(1){if(((Eb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-l|0)<128){d=(Eb[c[(c[b>>2]|0)+96>>2]&127](b)|0)-l|0;if((d|0)>0)o=8;else{e=-3402823466385288598117041.0e14;d=-1}}else{d=128;o=8}if((o|0)==8){o=0;j=0;do{ic[c[(c[b>>2]|0)+108>>2]&127](b,j,p+(j<<4)|0);j=j+1|0}while((j|0)!=(d|0));k=0;e=-3402823466385288598117041.0e14;j=-1;do{q=n*+g[p+(k<<4)>>2]+h*+g[p+(k<<4)+4>>2]+m*+g[p+(k<<4)+8>>2];r=q>e;j=r?k:j;e=r?q:e;k=k+1|0}while((k|0)!=(d|0));d=j}if(e>f){r=p+(d<<4)|0;c[a>>2]=c[r>>2];c[a+4>>2]=c[r+4>>2];c[a+8>>2]=c[r+8>>2];c[a+12>>2]=c[r+12>>2]}else e=f;l=l+128|0;if((l|0)>=(Eb[c[(c[b>>2]|0)+96>>2]&127](b)|0))break;else f=e}i=p;return}function zh(b,e,f,h,i,j){b=b|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;var k=0;if((d[h+55>>0]|0|0)==(e|0)){h=0;return h|0}k=c[4976+(i<<2)>>2]|0;if(+g[h>>2]*+g[f+16>>2]+ +g[h+4>>2]*+g[f+20>>2]+ +g[h+8>>2]*+g[f+24>>2]-+g[h+16>>2]<-9.999999747378752e-06){k=nf(b,c[h+20+(k<<2)>>2]|0,c[h+20+(i<<2)>>2]|0,f,0)|0;if(!k){h=0;return h|0}a[k+52>>0]=i;c[k+32>>2]=h;a[h+52+i>>0]=0;c[h+32+(i<<2)>>2]=k;i=c[j>>2]|0;if(!i)c[j+4>>2]=k;else{a[i+53>>0]=2;c[i+36>>2]=k;a[k+54>>0]=1;c[k+40>>2]=i}c[j>>2]=k;c[j+8>>2]=(c[j+8>>2]|0)+1;h=1;return h|0}i=c[4988+(i<<2)>>2]|0;a[h+55>>0]=e;if(!(zh(b,e,f,c[h+32+(k<<2)>>2]|0,d[h+52+k>>0]|0,j)|0)){h=0;return h|0}if(!(zh(b,e,f,c[h+32+(i<<2)>>2]|0,d[h+52+i>>0]|0,j)|0)){h=0;return h|0}i=c[h+48>>2]|0;if(i|0)c[i+44>>2]=c[h+44>>2];i=c[h+44>>2]|0;if(i|0)c[i+48>>2]=c[h+48>>2];if((c[b+9280>>2]|0)==(h|0))c[b+9280>>2]=c[h+48>>2];c[b+9284>>2]=(c[b+9284>>2]|0)+-1;c[h+44>>2]=0;c[h+48>>2]=c[b+9288>>2];i=c[b+9288>>2]|0;if(i|0)c[i+44>>2]=h;c[b+9288>>2]=h;c[b+9292>>2]=(c[b+9292>>2]|0)+1;h=1;return h|0}function Ah(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0,j=0,k=0.0,l=0.0;e=c[d+204>>2]|0;if((e&3|0)==0?(c[d+504>>2]&1|0)==0:0){h=+g[d+344>>2];if(h!=0.0){l=1.0/h*+g[b+252>>2];k=1.0/h*+g[b+256>>2];g[d+364>>2]=1.0/h*+g[b+248>>2];g[d+368>>2]=l;g[d+372>>2]=k;g[d+376>>2]=0.0}c[d+380>>2]=c[b+248>>2];c[d+380+4>>2]=c[b+248+4>>2];c[d+380+8>>2]=c[b+248+8>>2];c[d+380+12>>2]=c[b+248+12>>2]}if(!(c[d+192>>2]|0))return;if(e&1){if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=2}else{f=c[b+232>>2]|0;if((f|0)==(c[b+236>>2]|0)?(j=f|0?f<<1:1,(f|0)<(j|0)):0){if(!j)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((j<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[b+232>>2]|0}if((f|0)>0){i=0;do{c[e+(i<<2)>>2]=c[(c[b+240>>2]|0)+(i<<2)>>2];i=i+1|0}while((i|0)!=(f|0))}i=c[b+240>>2]|0;if(i){if(a[b+244>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0);f=c[b+232>>2]|0}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=e;c[b+236>>2]=j;e=c[d+204>>2]|0}c[(c[b+240>>2]|0)+(f<<2)>>2]=d;c[b+232>>2]=f+1}j=(e&3|0)==0;mc[c[(c[b>>2]|0)+36>>2]&127](b,d,j?1:2,j?-1:-3);return}function Bh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0,k=0,l=0,m=0.0,n=0.0;h=c[d+204>>2]|0;if((h&3|0)==0?(c[d+504>>2]&1|0)==0:0){i=+g[d+344>>2];if(i!=0.0){n=1.0/i*+g[b+252>>2];m=1.0/i*+g[b+256>>2];g[d+364>>2]=1.0/i*+g[b+248>>2];g[d+368>>2]=n;g[d+372>>2]=m;g[d+376>>2]=0.0}c[d+380>>2]=c[b+248>>2];c[d+380+4>>2]=c[b+248+4>>2];c[d+380+8>>2]=c[b+248+8>>2];c[d+380+12>>2]=c[b+248+12>>2]}if(!(c[d+192>>2]|0))return;if(h&1){if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=2}else{h=c[b+232>>2]|0;if((h|0)==(c[b+236>>2]|0)?(l=h|0?h<<1:1,(h|0)<(l|0)):0){if(!l)k=0;else{c[6435]=(c[6435]|0)+1;h=yc((l<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}k=h;h=c[b+232>>2]|0}if((h|0)>0){j=0;do{c[k+(j<<2)>>2]=c[(c[b+240>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[b+240>>2]|0;if(j){if(a[b+244>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);h=c[b+232>>2]|0}c[b+240>>2]=0}a[b+244>>0]=1;c[b+240>>2]=k;c[b+236>>2]=l}c[(c[b+240>>2]|0)+(h<<2)>>2]=d;c[b+232>>2]=h+1}mc[c[(c[b>>2]|0)+36>>2]&127](b,d,e,f);return}function Ch(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;o=(+g[a+32>>2]-+g[a+16>>2])*.5;l=(+g[a+36>>2]-+g[a+20>>2])*.5;i=(+g[a+40>>2]-+g[a+24>>2])*.5;n=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);i=i+ +Sb[c[(c[a>>2]|0)+48>>2]&15](a);B=(+g[a+32>>2]+ +g[a+16>>2])*.5;z=(+g[a+36>>2]+ +g[a+20>>2])*.5;x=(+g[a+40>>2]+ +g[a+24>>2])*.5;F=+g[b>>2];w=+N(+F);E=+g[b+4>>2];v=+N(+E);t=+g[b+8>>2];u=+N(+t);D=+g[b+16>>2];s=+N(+D);C=+g[b+20>>2];r=+N(+C);p=+g[b+24>>2];q=+N(+p);A=+g[b+32>>2];m=+N(+A);y=+g[b+36>>2];j=+N(+y);f=+g[b+40>>2];h=+N(+f);t=B*F+z*E+x*t+ +g[b+48>>2];p=B*D+z*C+x*p+ +g[b+52>>2];f=B*A+z*y+x*f+ +g[b+56>>2];g[d>>2]=t-((o+n)*w+(l+k)*v+i*u);g[d+4>>2]=p-((o+n)*s+(l+k)*r+i*q);g[d+8>>2]=f-((o+n)*m+(l+k)*j+i*h);g[d+12>>2]=0.0;g[e>>2]=(o+n)*w+(l+k)*v+i*u+t;g[e+4>>2]=(o+n)*s+(l+k)*r+i*q+p;g[e+8>>2]=(o+n)*m+(l+k)*j+i*h+f;g[e+12>>2]=0.0;return}function Dh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0;H=+g[a+48>>2];z=+g[a+32>>2];G=+g[a+52>>2];x=+g[a+36>>2];E=+g[a+56>>2];v=+g[a+40>>2];F=(c[a+16>>2]|0)==0;m=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);k=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);m=(F?0.0:(H-z)*.5)+m;k=(F?0.0:(G-x)*.5)+k;i=(F?0.0:(E-v)*.5)+i;D=+g[b>>2];u=+N(+D);C=+g[b+4>>2];t=+N(+C);r=+g[b+8>>2];s=+N(+r);B=+g[b+16>>2];q=+N(+B);A=+g[b+20>>2];p=+N(+A);n=+g[b+24>>2];o=+N(+n);y=+g[b+32>>2];l=+N(+y);w=+g[b+36>>2];j=+N(+w);f=+g[b+40>>2];h=+N(+f);z=F?0.0:(H+z)*.5;x=F?0.0:(G+x)*.5;v=F?0.0:(E+v)*.5;r=z*D+x*C+v*r+ +g[b+48>>2];n=z*B+x*A+v*n+ +g[b+52>>2];f=z*y+x*w+v*f+ +g[b+56>>2];g[d>>2]=r-(m*u+k*t+i*s);g[d+4>>2]=n-(m*q+k*p+i*o);g[d+8>>2]=f-(m*l+k*j+i*h);g[d+12>>2]=0.0;g[e>>2]=m*u+k*t+i*s+r;g[e+4>>2]=m*q+k*p+i*o+n;g[e+8>>2]=m*l+k*j+i*h+f;g[e+12>>2]=0.0;return}function Eh(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0,l=0.0,m=0.0;if(a[b+48>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}c[d>>2]=4;c[d+4>>2]=2;kd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g[b+1088>>2]=0.0;a[b+297>>0]=0;f=+g[b+192>>2];h=+g[b+196>>2];do if(f<=h){m=+g[b+892>>2];l=+g[b+908>>2];i=+g[b+924>>2];i=+ik(+W(+(+g[b+832>>2]*m+ +g[b+848>>2]*l+ +g[b+864>>2]*i),+(+g[b+828>>2]*m+ +g[b+844>>2]*l+ +g[b+860>>2]*i)),f,h);g[b+1084>>2]=i;if(i<f){g[b+1088>>2]=i-f;a[b+297>>0]=1;j=1;break}if(i>h){g[b+1088>>2]=i-h;a[b+297>>0]=1;j=1}else j=0}else j=0;while(0);a[b+296>>0]=0;e=c[b+1032>>2]|0;c[b+1080>>2]=e;f=+g[b+184>>2];h=+g[b+188>>2];i=(c[k>>2]=e,+g[k>>2]);do if(f<=h){if(i>h){g[b+1032>>2]=i-h;a[b+296>>0]=1;e=14;break}if(i<f){g[b+1032>>2]=i-f;a[b+296>>0]=1;e=14}else e=13}else e=13;while(0);if((e|0)==13?(g[b+1032>>2]=0.0,a[b+1096>>0]|0):0)e=14;if((e|0)==14){c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1}if(j<<24>>24==0?(a[b+1112>>0]|0)==0:0)return;c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1;return}function Fh(a){a=a|0;var b=0,d=0.0,e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0,p=0.0;c[6435]=(c[6435]|0)+1;b=yc(75)|0;if(!b)i=0;else{c[(b+4+15&-16)+-4>>2]=b;i=b+4+15&-16}c[i+8>>2]=0;e=i+12|0;c[e>>2]=1065353216;f=i+16|0;c[f>>2]=1065353216;h=i+20|0;c[h>>2]=1065353216;g[i+24>>2]=0.0;b=i+44|0;g[b>>2]=.03999999910593033;c[i+52>>2]=0;c[i>>2]=7844;c[i+4>>2]=0;k=+g[a>>2];j=+g[a+4>>2];d=+g[a+8>>2];d=+g[a+((k<j?(k<d?0:2):j<d?1:2)<<2)>>2]*.10000000149011612;if(d<.03999999910593033){p=+Iz(i);n=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);k=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);o=i+28|0;p=p+ +g[o>>2];m=i+32|0;n=n+ +g[m>>2];l=i+36|0;k=k+ +g[l>>2];g[b>>2]=d;d=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);j=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);k=k-+Sb[c[(c[i>>2]|0)+48>>2]&15](i);g[o>>2]=p-d;g[m>>2]=n-j;g[l>>2]=k;g[i+40>>2]=0.0;b=c[i>>2]|0}else b=7844;k=+Sb[c[b+48>>2]&15](i);n=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);p=+Sb[c[(c[i>>2]|0)+48>>2]&15](i);n=+g[a+4>>2]*+g[f>>2]-n;p=+g[a+8>>2]*+g[h>>2]-p;g[i+28>>2]=+g[a>>2]*+g[e>>2]-k;g[i+32>>2]=n;g[i+36>>2]=p;g[i+40>>2]=0.0;return i|0}function Gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+212>>2]|0;a:do if((f|0)>0){g=c[a+220>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+220>>2]|0)+(f+-1<<2)>>2]=b;c[a+212>>2]=f+-1}}while(0);a=c[b+28>>2]|0;d=c[a+488>>2]|0;b:do if((d|0)>0){g=c[a+496>>2]|0;e=0;while(1){f=g+(e<<2)|0;if((c[f>>2]|0)==(b|0))break;e=e+1|0;if((e|0)>=(d|0))break b}if((e|0)<(d|0)){c[f>>2]=c[g+(d+-1<<2)>>2];c[(c[a+496>>2]|0)+(d+-1<<2)>>2]=b;c[a+488>>2]=d+-1;d=d+-1|0}}while(0);c[a+256>>2]=(d|0)>0&1;a=c[b+32>>2]|0;d=c[a+488>>2]|0;if((d|0)<=0){b=d;b=(b|0)>0;b=b&1;h=a+256|0;c[h>>2]=b;return}g=c[a+496>>2]|0;e=0;while(1){f=g+(e<<2)|0;if((c[f>>2]|0)==(b|0))break;e=e+1|0;if((e|0)>=(d|0)){h=19;break}}if((h|0)==19){b=(d|0)>0;b=b&1;h=a+256|0;c[h>>2]=b;return}if((e|0)>=(d|0)){b=d;b=(b|0)>0;b=b&1;h=a+256|0;c[h>>2]=b;return}c[f>>2]=c[g+(d+-1<<2)>>2];c[(c[a+496>>2]|0)+(d+-1<<2)>>2]=b;c[a+488>>2]=d+-1;b=d+-1|0;b=(b|0)>0;b=b&1;h=a+256|0;c[h>>2]=b;return}function Hh(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0;j=Eb[c[(c[b>>2]|0)+28>>2]&127](b)|0;i=+g[j>>2]-+g[d>>2];h=+g[j+4>>2]-+g[d+4>>2];f=+g[j+8>>2]-+g[d+8>>2];if(!(i*i+h*h+f*f>1.1920928955078125e-07))return;Xg(b,d);if((a[b+61>>0]|0)!=0?(e=c[b+52>>2]|0,Ab[c[c[e>>2]>>2]&255](e),e=c[b+52>>2]|0,(e|0)!=0):0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=b+52|0}else d=b+52|0;c[6435]=(c[6435]|0)+1;e=yc(191)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e+52>>2]=282;a[e+60>>0]=0;a[e+80>>0]=1;c[e+76>>2]=0;c[e+68>>2]=0;c[e+72>>2]=0;a[e+100>>0]=1;c[e+96>>2]=0;c[e+88>>2]=0;c[e+92>>2]=0;a[e+120>>0]=1;c[e+116>>2]=0;c[e+108>>2]=0;c[e+112>>2]=0;a[e+140>>0]=1;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;c[e+144>>2]=0;a[e+164>>0]=1;c[e+160>>2]=0;c[e+152>>2]=0;c[e+156>>2]=0;c[e+168>>2]=0;c[e+4>>2]=-8388609;c[e+8>>2]=-8388609;c[e+12>>2]=-8388609;g[e+16>>2]=0.0;c[e+20>>2]=2139095039;c[e+24>>2]=2139095039;c[e+28>>2]=2139095039;g[e+32>>2]=0.0;c[e>>2]=7980;c[d>>2]=e;pd(e,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;return}function Ih(b,d){b=b|0;d=d|0;var e=0.0,f=0.0;if(a[b+1309>>0]|0){e=(+g[b+1256>>2]-+g[b+1316>>2])*+g[b+1340>>2];g[b+792>>2]=e*(+g[d>>2]*+g[b+1364>>2]/+(c[d+48>>2]|0));e=+N(+e);g[b+808>>2]=e/+g[d>>2]}if(a[b+1310>>0]|0){e=(+g[b+1260>>2]-+g[b+1320>>2])*+g[b+1344>>2];g[b+796>>2]=e*(+g[d>>2]*+g[b+1368>>2]/+(c[d+48>>2]|0));e=+N(+e);g[b+812>>2]=e/+g[d>>2]}if(a[b+1311>>0]|0){e=(+g[b+1264>>2]-+g[b+1324>>2])*+g[b+1348>>2];g[b+800>>2]=e*(+g[d>>2]*+g[b+1372>>2]/+(c[d+48>>2]|0));e=+N(+e);g[b+816>>2]=e/+g[d>>2]}if(a[b+1312>>0]|0){f=-((+g[b+1192>>2]-+g[b+1328>>2])*+g[b+1352>>2]);e=+g[d>>2];g[b+876>>2]=e*+g[b+1376>>2]/+(c[d+48>>2]|0)*f;g[b+880>>2]=+N(+f)/e}if(a[b+1313>>0]|0){e=-((+g[b+1196>>2]-+g[b+1332>>2])*+g[b+1356>>2]);f=+g[d>>2];g[b+940>>2]=f*+g[b+1380>>2]/+(c[d+48>>2]|0)*e;g[b+944>>2]=+N(+e)/f}if(!(a[b+1314>>0]|0)){fg(b,d);return}e=-((+g[b+1200>>2]-+g[b+1336>>2])*+g[b+1360>>2]);f=+g[d>>2];g[b+1004>>2]=f*+g[b+1384>>2]/+(c[d+48>>2]|0)*e;g[b+1008>>2]=+N(+e)/f;fg(b,d);return}function Jh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0;e=i;i=i+160|0;c[e+136>>2]=0;c[e+136+4>>2]=0;c[e+136+8>>2]=0;c[e+136+12>>2]=0;c[e+136+16>>2]=0;c[e+32>>2]=7028;f=e+32+4|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;c[e+32+44>>2]=0;c[e+32+44+4>>2]=0;c[e+32+44+8>>2]=0;c[e+32+44+12>>2]=0;c[e+32+60>>2]=1065353216;c[e+32+64>>2]=0;c[e+32+68>>2]=c[e+136+4>>2];c[e+32+68+4>>2]=c[e+136+4+4>>2];c[e+32+68+8>>2]=c[e+136+4+8>>2];c[e+32+68+12>>2]=c[e+136+4+12>>2];g[e+32+84>>2]=-999999984306749440.0;k=+g[d>>2];j=+g[d+4>>2];h=+g[d+8>>2];g[e+32+88>>2]=k+j*0.0+h*0.0;g[e+32+92>>2]=k*0.0+j+h*0.0;g[e+32+96>>2]=k*0.0+j*0.0+h;g[e+32+100>>2]=0.0;c[e+16>>2]=1566444395;c[e+16+4>>2]=1566444395;c[e+16+8>>2]=1566444395;g[e+16+12>>2]=0.0;d=c[(c[b>>2]|0)+64>>2]|0;g[e>>2]=-999999984306749440.0;g[e+4>>2]=-999999984306749440.0;g[e+8>>2]=-999999984306749440.0;g[e+12>>2]=0.0;mc[d&127](b,e+32|0,e,e+16|0);c[a>>2]=c[f>>2];c[a+4>>2]=c[f+4>>2];c[a+8>>2]=c[f+8>>2];c[a+12>>2]=c[f+12>>2];i=e;return}function Kh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;q=i;i=i+16|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];if(e*e+f*f+h*h<9.999999747378752e-05){p=1.0;o=0.0;n=0.0}else{n=1.0/+O(+(e*e+f*f+h*h));p=e*n;o=f*n;n=h*n}d=c[b+52>>2]|0;m=+g[b+28+(((d+2|0)%3|0)<<2)>>2];c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+(d<<2)>>2]=c[b+28+(d<<2)>>2];k=p*m;l=o*m;m=n*m;e=k+ +g[q>>2];f=l+ +g[q+4>>2];j=m+ +g[q+8>>2];h=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);e=e-p*h;f=f-o*h;h=j-n*h;j=n*h+(p*e+o*f);if(j>-999999984306749440.0){g[a>>2]=e;g[a+4>>2]=f;g[a+8>>2]=h;g[a+12>>2]=0.0}else j=-999999984306749440.0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;d=c[b+52>>2]|0;g[q+(d<<2)>>2]=-+g[b+28+(d<<2)>>2];e=k+ +g[q>>2];f=l+ +g[q+4>>2];m=m+ +g[q+8>>2];h=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);e=e-p*h;f=f-o*h;h=m-n*h;if(!(n*h+(p*e+o*f)>j)){i=q;return}g[a>>2]=e;g[a+4>>2]=f;g[a+8>>2]=h;g[a+12>>2]=0.0;i=q;return}function Lh(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=+h;j=+j;k=+k;l=+l;m=+m;var n=0;n=i;i=i+128|0;c[n+80>>2]=c[a+4>>2];c[n+80+4>>2]=c[a+20>>2];c[n+80+8>>2]=c[a+36>>2];g[n+80+12>>2]=0.0;c[n+80+16>>2]=c[a+8>>2];c[n+80+20>>2]=c[a+24>>2];c[n+80+24>>2]=c[a+40>>2];g[n+80+28>>2]=0.0;c[n+80+32>>2]=c[a+12>>2];c[n+80+36>>2]=c[a+28>>2];c[n+80+40>>2]=c[a+44>>2];g[n+80+44>>2]=0.0;c[n+32>>2]=c[b+4>>2];c[n+32+4>>2]=c[b+20>>2];c[n+32+8>>2]=c[b+36>>2];g[n+32+12>>2]=0.0;c[n+32+16>>2]=c[b+8>>2];c[n+32+20>>2]=c[b+24>>2];c[n+32+24>>2]=c[b+40>>2];g[n+32+28>>2]=0.0;c[n+32+32>>2]=c[b+12>>2];c[n+32+36>>2]=c[b+28>>2];c[n+32+40>>2]=c[b+44>>2];g[n+32+44>>2]=0.0;h=h-+g[a+56>>2];j=j-+g[a+60>>2];g[n+16>>2]=f-+g[a+52>>2];g[n+16+4>>2]=h;g[n+16+8>>2]=j;g[n+16+12>>2]=0.0;l=l-+g[b+56>>2];m=m-+g[b+60>>2];g[n>>2]=k-+g[b+52>>2];g[n+4>>2]=l;g[n+8>>2]=m;g[n+12>>2]=0.0;Rg(d,n+80|0,n+32|0,n+16|0,n,e,a+396|0,+g[a+344>>2],b+396|0,+g[b+344>>2]);i=n;return}function Mh(a,b,c,d,e,f,h,i,j,k,l,m,n,o){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=+j;k=+k;l=+l;m=+m;n=+n;o=+o;var p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0;s=(j-f)*(n-h)-(k-h)*(m-f);q=(k-h)*(l-e)-(i-e)*(n-h);r=(i-e)*(m-f)-(j-f)*(l-e);if(+N(+(r*d+(s*b+q*c)))<1.1920928955078125e-07){d=-1.0;return +d}t=+g[a>>2];v=+g[a+4>>2];u=+g[a+8>>2];p=-(s*t+q*v+r*u-(r*h+(s*e+q*f)))/(r*d+(s*b+q*c));if(((p>1.1920928955078125e-06&p<o?r*((j-(v+p*c))*(e-(t+p*b))-(f-(v+p*c))*(i-(t+p*b)))+(s*((f-(v+p*c))*(k-(u+p*d))-(h-(u+p*d))*(j-(v+p*c)))+q*((h-(u+p*d))*(i-(t+p*b))-(k-(u+p*d))*(e-(t+p*b))))>-1.1920928955078125e-06:0)?r*((m-(v+p*c))*(i-(t+p*b))-(j-(v+p*c))*(l-(t+p*b)))+(s*((j-(v+p*c))*(n-(u+p*d))-(k-(u+p*d))*(m-(v+p*c)))+q*((k-(u+p*d))*(l-(t+p*b))-(n-(u+p*d))*(i-(t+p*b))))>-1.1920928955078125e-06:0)?r*((f-(v+p*c))*(l-(t+p*b))-(m-(v+p*c))*(e-(t+p*b)))+(s*((m-(v+p*c))*(h-(u+p*d))-(n-(u+p*d))*(f-(v+p*c)))+q*((n-(u+p*d))*(e-(t+p*b))-(h-(u+p*d))*(l-(t+p*b))))>-1.1920928955078125e-06:0){v=p;return +v}v=-1.0;return +v}function Nh(a,b,d,e,f){a=a|0;b=+b;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0.0,n=0.0;k=i;i=i+48|0;m=1.0/+O(+(b*b+d*d+e*e));g[f>>2]=m*b;g[f+4>>2]=m*d;g[f+8>>2]=m*e;g[f+12>>2]=0.0;h=c[a+120>>2]|0;l=c[a+124>>2]|0;j=(c[a>>2]|0)+(l>>1)|0;if(l&1)h=c[(c[j>>2]|0)+h>>2]|0;ic[h&127](k,j,f);b=-+g[f>>2];d=-+g[f+4>>2];e=-+g[f+8>>2];h=c[a+120>>2]|0;l=c[a+124>>2]|0;j=(c[a+4>>2]|0)+(l>>1)|0;if(l&1)h=c[(c[j>>2]|0)+h>>2]|0;m=+g[a+24>>2]*b+ +g[a+28>>2]*d+ +g[a+32>>2]*e;n=+g[a+40>>2]*b+ +g[a+44>>2]*d+ +g[a+48>>2]*e;g[k+16>>2]=+g[a+8>>2]*b+ +g[a+12>>2]*d+ +g[a+16>>2]*e;g[k+16+4>>2]=m;g[k+16+8>>2]=n;g[k+16+12>>2]=0.0;ic[h&127](k+32|0,j,k+16|0);n=+g[k+32>>2];b=+g[k+32+4>>2];d=+g[k+32+8>>2];e=+g[k+4>>2]-(n*+g[a+72>>2]+b*+g[a+76>>2]+d*+g[a+80>>2]+ +g[a+108>>2]);m=+g[k+8>>2]-(n*+g[a+88>>2]+b*+g[a+92>>2]+d*+g[a+96>>2]+ +g[a+112>>2]);g[f+16>>2]=+g[k>>2]-(n*+g[a+56>>2]+b*+g[a+60>>2]+d*+g[a+64>>2]+ +g[a+104>>2]);g[f+20>>2]=e;g[f+24>>2]=m;g[f+28>>2]=0.0;i=k;return}function Oh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;if(a[b+165>>0]|0){if((c[b+92>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6435]=(c[6435]|0)+1,e=yc((d<<4|3)+16|0)|0,(e|0)!=0):0){c[(e+4+15&-16)+-4>>2]=e;g=e+4+15&-16}else g=0;e=c[b+88>>2]|0;if((e|0)>0){f=0;do{i=g+(f<<4)|0;h=(c[b+96>>2]|0)+(f<<4)|0;c[i>>2]=c[h>>2];c[i+4>>2]=c[h+4>>2];c[i+8>>2]=c[h+8>>2];c[i+12>>2]=c[h+12>>2];f=f+1|0}while((f|0)!=(e|0))}e=c[b+96>>2]|0;if(e|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=g;c[b+92>>2]=d;return}if((c[b+112>>2]|0)>=(d|0))return;if((d|0)!=0?(c[6435]=(c[6435]|0)+1,f=yc((d<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16}else h=0;f=c[b+108>>2]|0;g=c[b+116>>2]|0;if((f|0)<=0)if(!g)e=b+120|0;else i=21;else{e=0;do{c[h+(e<<2)>>2]=c[g+(e<<2)>>2];e=e+1|0}while((e|0)!=(f|0));i=21}if((i|0)==21){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+116>>2]=0;e=b+120|0}a[e>>0]=1;c[b+116>>2]=h;c[b+112>>2]=d;return}function Ph(){var b=0,d=0,e=0;c[6435]=(c[6435]|0)+1;b=yc(307)|0;if(!b)d=0;else{c[(b+4+15&-16)+-4>>2]=b;d=b+4+15&-16}c[d+164>>2]=1065353216;c[d+168>>2]=1065353216;c[d+172>>2]=1065353216;g[d+176>>2]=0.0;c[d+180>>2]=0;g[d+184>>2]=999999984306749440.0;b=d+188|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[d+204>>2]=1;c[d+208>>2]=-1;c[d+212>>2]=-1;c[d+216>>2]=1;g[d+220>>2]=0.0;g[d+224>>2]=.5;g[d+228>>2]=0.0;g[d+232>>2]=0.0;c[d+240>>2]=0;g[d+244>>2]=1.0;b=d+248|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[d+4>>2]=1065353216;b=d+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[d+24>>2]=1065353216;b=d+28|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[d+44>>2]=1065353216;b=d+48|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;a[d+280>>0]=1;c[d+276>>2]=0;c[d+268>>2]=0;c[d+272>>2]=0;c[d+236>>2]=4;c[d>>2]=5088;c[6435]=(c[6435]|0)+1;b=yc(95)|0;if(!b){e=0;Ri(e);b=d+284|0;c[b>>2]=e;return d|0}c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16;Ri(b);e=d+284|0;c[e>>2]=b;return d|0}function Qh(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;if(!(c[i+44>>2]|0))return;b=c[i+20>>2]|0;if(!(c[i+64>>2]&256)){if((b|0)<=0)return;j=0;do{g=c[a+28>>2]|0;if((g|0)>0){b=0;do{f=c[(c[a+116>>2]|0)+(b<<2)>>2]|0;h=c[a+36>>2]|0;d=c[a+16>>2]|0;Ig(d+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,d+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);b=b+1|0}while((b|0)!=(g|0));b=c[i+20>>2]|0}j=j+1|0}while((j|0)<(b|0));return}else{if((b|0)<=0)return;j=0;do{g=c[a+28>>2]|0;if((g|0)>0){b=0;do{f=c[(c[a+116>>2]|0)+(b<<2)>>2]|0;h=c[a+36>>2]|0;d=c[a+16>>2]|0;Ig(d+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,d+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);b=b+1|0}while((b|0)!=(g|0));b=c[i+20>>2]|0}j=j+1|0}while((j|0)<(b|0));return}}function Rh(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(!(a[d+164>>0]|0)){if((c[d+152>>2]|0)>=(e|0))return;if((e|0)!=0?(c[6435]=(c[6435]|0)+1,g=yc((e<<1)+19|0)|0,(g|0)!=0):0){c[(g+4+15&-16)+-4>>2]=g;i=g+4+15&-16}else i=0;g=c[d+148>>2]|0;h=c[d+156>>2]|0;if((g|0)<=0)if(!h)f=d+160|0;else j=22;else{f=0;do{b[i+(f<<1)>>1]=b[h+(f<<1)>>1]|0;f=f+1|0}while((f|0)!=(g|0));j=22}if((j|0)==22){if(a[d+160>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[d+156>>2]=0;f=d+160|0}a[f>>0]=1;c[d+156>>2]=i;c[d+152>>2]=e;return}else{if((c[d+132>>2]|0)>=(e|0))return;if((e|0)!=0?(c[6435]=(c[6435]|0)+1,f=yc((e<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;i=f+4+15&-16}else i=0;g=c[d+128>>2]|0;h=c[d+136>>2]|0;if((g|0)<=0)if(!h)f=d+140|0;else j=10;else{f=0;do{c[i+(f<<2)>>2]=c[h+(f<<2)>>2];f=f+1|0}while((f|0)!=(g|0));j=10}if((j|0)==10){if(a[d+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[d+136>>2]=0;f=d+140|0}a[f>>0]=1;c[d+136>>2]=i;c[d+132>>2]=e;return}}function Sh(a,b,d){a=a|0;b=b|0;d=d|0;si(a,b,d)|0;c[b+52>>2]=c[a+300>>2];c[b+56>>2]=c[a+304>>2];c[b+60>>2]=c[a+308>>2];c[b+64>>2]=c[a+312>>2];c[b+68>>2]=c[a+316>>2];c[b+72>>2]=c[a+320>>2];c[b+76>>2]=c[a+324>>2];c[b+80>>2]=c[a+328>>2];c[b+84>>2]=c[a+332>>2];c[b+88>>2]=c[a+336>>2];c[b+92>>2]=c[a+340>>2];c[b+96>>2]=c[a+344>>2];c[b+100>>2]=c[a+348>>2];c[b+104>>2]=c[a+352>>2];c[b+108>>2]=c[a+356>>2];c[b+112>>2]=c[a+360>>2];c[b+116>>2]=c[a+364>>2];c[b+120>>2]=c[a+368>>2];c[b+124>>2]=c[a+372>>2];c[b+128>>2]=c[a+376>>2];c[b+132>>2]=c[a+380>>2];c[b+136>>2]=c[a+384>>2];c[b+140>>2]=c[a+388>>2];c[b+144>>2]=c[a+392>>2];c[b+148>>2]=c[a+396>>2];c[b+152>>2]=c[a+400>>2];c[b+156>>2]=c[a+404>>2];c[b+160>>2]=c[a+408>>2];c[b+164>>2]=c[a+412>>2];c[b+168>>2]=c[a+416>>2];c[b+172>>2]=c[a+420>>2];c[b+176>>2]=c[a+424>>2];c[b+180>>2]=c[a+444>>2];c[b+184>>2]=c[a+448>>2];c[b+188>>2]=c[a+452>>2];c[b+192>>2]=c[a+428>>2];c[b+196>>2]=c[a+432>>2];c[b+200>>2]=c[a+436>>2];c[b+204>>2]=c[a+440>>2];return 12727}function Th(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;k=i;i=i+32|0;n=+g[a+56>>2];r=+g[a+72>>2]-n;m=+g[a+60>>2];p=+g[a+76>>2]-m;l=+g[a+64>>2];s=+g[a+80>>2]-l;o=+g[a+88>>2]-n;q=+g[a+92>>2]-m;h=+g[a+96>>2]-l;j=1.0/+O(+((r*q-p*o)*(r*q-p*o)+((p*h-s*q)*(p*h-s*q)+(s*o-r*h)*(s*o-r*h))));f=j*(p*h-s*q);h=j*(s*o-r*h);j=(r*q-p*o)*j;l=j*+g[b+8>>2]+(+g[b>>2]*f+ +g[b+4>>2]*h)-(f*n+h*m+j*l);if(!(l>=-d)|!(l<=d)){a=0;i=k;return a|0}e=0;while(1){mc[c[(c[a>>2]|0)+104>>2]&127](a,e,k+16|0,k);n=+g[k+16>>2];s=+g[k>>2]-n;p=+g[k+16+4>>2];o=+g[k+4>>2]-p;m=+g[k+16+8>>2];r=+g[k+8>>2]-m;q=1.0/+O(+((h*s-f*o)*(h*s-f*o)+((j*o-h*r)*(j*o-h*r)+(f*r-j*s)*(f*r-j*s))));e=e+1|0;if((h*s-f*o)*q*+g[b+8>>2]+(+g[b>>2]*q*(j*o-h*r)+ +g[b+4>>2]*q*(f*r-j*s))-(m*(h*s-f*o)*q+(n*q*(j*o-h*r)+p*q*(f*r-j*s)))<-d){e=0;b=5;break}if((e|0)>=3){e=1;b=5;break}}if((b|0)==5){i=k;return e|0}return 0}function Uh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0;c[6435]=(c[6435]|0)+1;h=yc(55)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}c[j>>2]=d;c[j+4>>2]=e;c[j+8>>2]=f;c[j+12>>2]=-1;c[j+16>>2]=-1;c[j+20>>2]=-1;c[j+28>>2]=-1;g[j+32>>2]=0.0;f=j;d=c[b+4>>2]|0;c[j+24>>2]=d;if((d|0)!=(c[b+8>>2]|0)){i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}i=d|0?d<<1:1;if((d|0)>=(i|0)){i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}if(!i)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((i<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}d=c[b+4>>2]|0}if((d|0)>0){e=0;do{c[h+(e<<2)>>2]=c[(c[b+12>>2]|0)+(e<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}e=c[b+12>>2]|0;if(e){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+4>>2]|0}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=h;c[b+8>>2]=i;i=d;e=b+12|0;e=c[e>>2]|0;e=e+(i<<2)|0;c[e>>2]=f;i=i+1|0;c[b+4>>2]=i;return j|0}function Vh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;o=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);u=+g[a+72>>2];t=+g[a+56>>2];r=+g[a+76>>2];q=+g[a+60>>2];n=+g[a+80>>2];m=+g[a+64>>2];E=+g[b>>2];y=+N(+E);D=+g[b+4>>2];x=+N(+D);k=+g[b+8>>2];l=+N(+k);C=+g[b+16>>2];w=+N(+C);B=+g[b+20>>2];v=+N(+B);i=+g[b+24>>2];j=+N(+i);A=+g[b+32>>2];s=+N(+A);z=+g[b+36>>2];p=+N(+z);f=+g[b+40>>2];h=+N(+f);k=(u+t)*.5*E+(r+q)*.5*D+(n+m)*.5*k+ +g[b+48>>2];i=(u+t)*.5*C+(r+q)*.5*B+(n+m)*.5*i+ +g[b+52>>2];f=(u+t)*.5*A+(r+q)*.5*z+(n+m)*.5*f+ +g[b+56>>2];l=(o+(u-t)*.5)*y+(o+(r-q)*.5)*x+(o+(n-m)*.5)*l;j=(o+(u-t)*.5)*w+(o+(r-q)*.5)*v+(o+(n-m)*.5)*j;h=(o+(u-t)*.5)*s+(o+(r-q)*.5)*p+(o+(n-m)*.5)*h;g[d>>2]=k-l;g[d+4>>2]=i-j;g[d+8>>2]=f-h;g[d+12>>2]=0.0;g[e>>2]=l+k;g[e+4>>2]=j+i;g[e+8>>2]=h+f;g[e+12>>2]=0.0;return}function Wh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0;f=i;i=i+16|0;y=c[a+52>>2]|0;z=c[a+28+(((y+2|0)%3|0)<<2)>>2]|0;c[f>>2]=z;c[f+4>>2]=z;c[f+8>>2]=z;g[f+12>>2]=0.0;g[f+(y<<2)>>2]=(c[k>>2]=z,+g[k>>2])+ +g[a+28+(y<<2)>>2];l=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);o=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);l=l+ +g[f>>2];g[f>>2]=l;h=h+ +g[f+4>>2];g[f+4>>2]=h;o=o+ +g[f+8>>2];v=+N(+(+g[b>>2]));u=+N(+(+g[b+4>>2]));w=+N(+(+g[b+8>>2]));r=+N(+(+g[b+16>>2]));q=+N(+(+g[b+20>>2]));s=+N(+(+g[b+24>>2]));m=+N(+(+g[b+32>>2]));j=+N(+(+g[b+36>>2]));n=+N(+(+g[b+40>>2]));x=+g[b+48>>2];t=+g[b+52>>2];p=+g[b+56>>2];g[d>>2]=x-(o*w+(v*l+u*h));g[d+4>>2]=t-(o*s+(r*l+q*h));g[d+8>>2]=p-(o*n+(m*l+j*h));g[d+12>>2]=0.0;g[e>>2]=x+(o*w+(v*l+u*h));g[e+4>>2]=t+(o*s+(r*l+q*h));g[e+8>>2]=p+(o*n+(m*l+j*h));g[e+12>>2]=0.0;i=f;return}function Xh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;if(a[d+32>>0]&1){f=c[b+4>>2]|0;if(f|0)gj(f,d,e);f=c[b>>2]|0;if(f|0){n=+g[d>>2];l=+g[f+128>>2];m=+g[d+4>>2];k=+g[d+8>>2];h=+g[e+4>>2];p=+g[e+8>>2];o=+g[e>>2];j=+g[f+180>>2]*(k*h-m*p)+ +g[f+184>>2]*(n*p-k*o)+(m*o-n*h)*+g[f+188>>2];i=(k*h-m*p)*+g[f+196>>2]+(n*p-k*o)*+g[f+200>>2]+(m*o-n*h)*+g[f+204>>2];h=(k*h-m*p)*+g[f+212>>2]+(n*p-k*o)*+g[f+216>>2]+(m*o-n*h)*+g[f+220>>2];g[f+244>>2]=n*l+ +g[f+244>>2];g[f+248>>2]=l*m+ +g[f+248>>2];g[f+252>>2]=l*k+ +g[f+252>>2];g[f+316>>2]=n*l+ +g[f+316>>2];g[f+320>>2]=l*m+ +g[f+320>>2];g[f+324>>2]=l*k+ +g[f+324>>2];g[f+260>>2]=j+ +g[f+260>>2];g[f+264>>2]=i+ +g[f+264>>2];g[f+268>>2]=h+ +g[f+268>>2];g[f+332>>2]=j+ +g[f+332>>2];g[f+336>>2]=i+ +g[f+336>>2];g[f+340>>2]=h+ +g[f+340>>2];c[f+308>>2]=(c[f+308>>2]|0)+1}}if(!(a[d+32>>0]&2))return;jj(b,d+16|0,e);return}function Yh(a){a=a|0;var b=0,d=0,e=0,f=0;d=i;i=i+16|0;li(15122);Ab[c[(c[a>>2]|0)+8>>2]&255](a);Ab[c[(c[a>>2]|0)+12>>2]&255](a);b=c[a+24>>2]|0;li(15156);if(b|0){f=c[(c[b>>2]|0)+32>>2]|0;e=c[a+68>>2]|0;e=Eb[c[(c[e>>2]|0)+36>>2]&127](e)|0;mc[f&127](b,e,a+28|0,c[a+24>>2]|0)}a=c[2357]|0;f=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=f;do if(!f){if(c[a+4>>2]|0){tb(d|0,0)|0;b=c[6434]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[d+4>>2]|0)-(c[b+4>>2]|0)+(((c[d>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;b=c[2357]|0;if(c[a+16>>2]|0)break}else b=a;b=c[b+20>>2]|0;c[2357]=b}else b=a;while(0);a=b+16|0;f=(c[a>>2]|0)+-1|0;c[a>>2]=f;if(f|0){i=d;return}do if(c[b+4>>2]|0){tb(d|0,0)|0;e=c[6434]|0;f=b+8|0;g[f>>2]=+g[f>>2]+ +(((c[d+4>>2]|0)-(c[e+4>>2]|0)+(((c[d>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a>>2]|0)){b=c[2357]|0;break}else{i=d;return}}while(0);c[2357]=c[b+20>>2];i=d;return}function Zh(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=8840;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=-1;c[b+16>>2]=0;c[b+20>>2]=0;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;c[b+72>>2]=-1;c[b+76>>2]=0;c[b+80>>2]=0;a[b+193>>0]=0;a[b+194>>0]=1;a[b+192>>0]=(d|0)!=0^1;g[b+140>>2]=0.0;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+168>>2]=0;c[b+172>>2]=0;g[b+176>>2]=0.0;if(d|0){e=d;d=b+136|0;c[d>>2]=e;d=b+188|0;c[d>>2]=0;d=b+180|0;c[d>>2]=0;d=b+184|0;c[d>>2]=0;b=b+124|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}c[6435]=(c[6435]|0)+1;d=yc(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Ri(d);e=b+136|0;c[e>>2]=d;e=b+188|0;c[e>>2]=0;e=b+180|0;c[e>>2]=0;e=b+184|0;c[e>>2]=0;e=b+124|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;return}function _h(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0;i=c[b>>2]|0;if((i|0)==(c[a+80>>2]|0)){k=1.0;return +k}if(c[i+204>>2]&4|0){k=1.0;return +k}h=+g[b+8>>2];f=+g[b+12>>2];e=+g[b+16>>2];if(d){j=h;k=f}else{j=+g[i+4>>2]*h+ +g[i+8>>2]*f+ +g[i+12>>2]*e;k=h*+g[i+20>>2]+f*+g[i+24>>2]+e*+g[i+28>>2];e=h*+g[i+36>>2]+f*+g[i+40>>2]+e*+g[i+44>>2]}if(j*+g[a+84>>2]+k*+g[a+88>>2]+e*+g[a+92>>2]<+g[a+100>>2]){k=1.0;return +k}c[a+4>>2]=c[b+40>>2];c[a+76>>2]=i;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2]}else{e=+g[b+8>>2];f=+g[b+12>>2];h=+g[b+16>>2];j=e*+g[i+20>>2]+f*+g[i+24>>2]+h*+g[i+28>>2];k=e*+g[i+36>>2]+f*+g[i+40>>2]+h*+g[i+44>>2];g[a+44>>2]=+g[i+4>>2]*e+ +g[i+8>>2]*f+ +g[i+12>>2]*h;g[a+48>>2]=j;g[a+52>>2]=k;g[a+56>>2]=0.0}c[a+60>>2]=c[b+24>>2];c[a+60+4>>2]=c[b+24+4>>2];c[a+60+8>>2]=c[b+24+8>>2];c[a+60+12>>2]=c[b+24+12>>2];k=+g[b+40>>2];return +k}function $h(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;d=c[b+40>>2]|0;if(d|0){if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;if((c[b+12>>2]|0)>=2){Kf(b);return}c[6435]=(c[6435]|0)+1;d=yc(43)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16}d=c[b+8>>2]|0;if((d|0)>0){e=0;do{g=f+(e*12|0)|0;h=(c[b+16>>2]|0)+(e*12|0)|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];e=e+1|0}while((e|0)!=(d|0))}d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;Kf(b);return}function ai(a,b,e){a=a|0;b=b|0;e=e|0;si(a,b,e)|0;c[b+52>>2]=c[a+52>>2];c[b+56>>2]=c[a+56>>2];c[b+60>>2]=c[a+60>>2];c[b+64>>2]=c[a+64>>2];c[b+68>>2]=c[a+68>>2];c[b+72>>2]=c[a+72>>2];c[b+76>>2]=c[a+76>>2];c[b+80>>2]=c[a+80>>2];c[b+84>>2]=c[a+84>>2];c[b+88>>2]=c[a+88>>2];c[b+92>>2]=c[a+92>>2];c[b+96>>2]=c[a+96>>2];c[b+100>>2]=c[a+100>>2];c[b+104>>2]=c[a+104>>2];c[b+108>>2]=c[a+108>>2];c[b+112>>2]=c[a+112>>2];c[b+116>>2]=c[a+116>>2];c[b+120>>2]=c[a+120>>2];c[b+124>>2]=c[a+124>>2];c[b+128>>2]=c[a+128>>2];c[b+132>>2]=c[a+132>>2];c[b+136>>2]=c[a+136>>2];c[b+140>>2]=c[a+140>>2];c[b+144>>2]=c[a+144>>2];c[b+148>>2]=c[a+148>>2];c[b+152>>2]=c[a+152>>2];c[b+156>>2]=c[a+156>>2];c[b+160>>2]=c[a+160>>2];c[b+164>>2]=c[a+164>>2];c[b+168>>2]=c[a+168>>2];c[b+172>>2]=c[a+172>>2];c[b+176>>2]=c[a+176>>2];c[b+180>>2]=c[a+188>>2];c[b+184>>2]=c[a+184>>2];c[b+188>>2]=c[a+196>>2];c[b+192>>2]=c[a+192>>2];c[b+196>>2]=d[a+180>>0];c[b+200>>2]=d[a+49>>0];return 12680}function bi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0;e=i;i=i+32|0;d=c[b+388>>2]|0;switch(c[a+388>>2]&48&d|0){case 32:{if((a|0)==(b|0)&(d&64|0)==0){i=e;return}g[e+4>>2]=1.0;c[e+8>>2]=0;c[e+8+4>>2]=0;c[e+8+8>>2]=0;c[e+8+12>>2]=0;c[e>>2]=3540;c[e+8>>2]=c[a+456>>2];d=c[a+192>>2]|0;f=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);d=c[b+192>>2]|0;g[e+12>>2]=f+ +Sb[c[(c[d>>2]|0)+48>>2]&15](d);c[e+16>>2]=c[(+g[a+316>>2]<+g[b+316>>2]?a+316|0:b+316|0)>>2];c[e+24>>2]=a;c[e+28>>2]=b;We(c[a+1048>>2]|0,c[b+1048>>2]|0,e);i=e;return}case 16:{if((a|0)==(b|0)){i=e;return}c[e>>2]=3576;d=c[a+192>>2]|0;f=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);d=c[b+192>>2]|0;g[e+12>>2]=f+ +Sb[c[(c[d>>2]|0)+48>>2]&15](d);c[e+4>>2]=a;c[e+8>>2]=b;We(c[a+928>>2]|0,c[b+988>>2]|0,e);c[e+4>>2]=b;c[e+8>>2]=a;We(c[b+928>>2]|0,c[a+988>>2]|0,e);i=e;return}default:{i=e;return}}}function ci(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0;h=i;i=i+96|0;g[h+4>>2]=1.0;c[h+8>>2]=0;b[h+12>>1]=1;b[h+14>>1]=-1;c[h+16>>2]=0;c[h>>2]=2948;c[h+20>>2]=c[d>>2];c[h+20+4>>2]=c[d+4>>2];c[h+20+8>>2]=c[d+8>>2];c[h+20+12>>2]=c[d+12>>2];c[h+36>>2]=c[e>>2];c[h+36+4>>2]=c[e+4>>2];c[h+36+8>>2]=c[e+8>>2];c[h+36+12>>2]=c[e+12>>2];a=c[a+4>>2]|0;mc[c[(c[a>>2]|0)+32>>2]&127](a,d,e,h);d=c[h+8>>2]|0;if(!d){f=0;i=h;return f|0}if(!(c[d+236>>2]&2)){f=0;i=h;return f|0}if(c[d+204>>2]&4|0){f=0;i=h;return f|0}c[f>>2]=c[h+68>>2];c[f+4>>2]=c[h+68+4>>2];c[f+8>>2]=c[h+68+8>>2];c[f+12>>2]=c[h+68+12>>2];c[f+16>>2]=c[h+52>>2];c[f+16+4>>2]=c[h+52+4>>2];c[f+16+8>>2]=c[h+52+8>>2];c[f+16+12>>2]=c[h+52+12>>2];m=+g[f+16>>2];l=+g[f+20>>2];k=+g[f+24>>2];j=1.0/+O(+(m*m+l*l+k*k));g[f+16>>2]=m*j;g[f+20>>2]=l*j;g[f+24>>2]=k*j;c[f+32>>2]=c[h+4>>2];f=d;i=h;return f|0}function di(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b+288|0;f=d;g=e+104|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));i=c[d+108>>2]|0;e=c[b+396>>2]|0;a:do if((e|0)>(i|0))e=b+404|0;else{if((e|0)<(i|0)?(c[b+400>>2]|0)<(i|0):0){if((i|0)!=0?(c[6435]=(c[6435]|0)+1,h=yc((i<<2|3)+16|0)|0,(h|0)!=0):0){c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}else h=0;f=c[b+396>>2]|0;g=0;while(1){if((g|0)>=(f|0))break;c[h+(g<<2)>>2]=c[(c[b+404>>2]|0)+(g<<2)>>2];g=g+1|0}f=c[b+404>>2]|0;if(f|0){if(!((a[b+408>>0]&1)==0|(f|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+404>>2]=0}a[b+408>>0]=1;c[b+404>>2]=h;c[b+400>>2]=i}while(1){if((e|0)>=(i|0)){e=b+404|0;break a}c[(c[b+404>>2]|0)+(e<<2)>>2]=0;e=e+1|0}}while(0);c[b+396>>2]=i;e=c[e>>2]|0;f=0;while(1){if((f|0)>=(i|0))break;c[e+(f<<2)>>2]=c[(c[d+116>>2]|0)+(f<<2)>>2];f=f+1|0}Yi(b+412|0,d+124|0);Yi(b+432|0,d+144|0);return}function ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;Ab[c[(c[b>>2]|0)+32>>2]&255](b);d=Ob[c[(c[b>>2]|0)+16>>2]&63](b,104,1)|0;e=c[d+8>>2]|0;f=e;g=f+104|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));c[e+88>>2]=c[a+248>>2];c[e+92>>2]=c[a+252>>2];c[e+96>>2]=c[a+256>>2];c[e+100>>2]=c[a+260>>2];c[e>>2]=c[a+92>>2];c[e+4>>2]=c[a+96>>2];c[e+8>>2]=c[a+100>>2];c[e+12>>2]=c[a+104>>2];c[e+16>>2]=c[a+108>>2];c[e+20>>2]=c[a+116>>2];c[e+24>>2]=c[a+120>>2];c[e+28>>2]=c[a+124>>2];c[e+32>>2]=c[a+128>>2];c[e+36>>2]=c[a+132>>2];c[e+40>>2]=c[a+140>>2];c[e+44>>2]=c[a+144>>2];c[e+48>>2]=c[a+148>>2];c[e+52>>2]=c[a+152>>2];c[e+56>>2]=c[a+168>>2];c[e+60>>2]=c[a+172>>2];c[e+64>>2]=c[a+112>>2];c[e+68>>2]=c[a+156>>2];c[e+72>>2]=c[a+160>>2];c[e+76>>2]=c[a+164>>2];c[e+80>>2]=c[a+136>>2];yb[c[(c[b>>2]|0)+20>>2]&31](b,d,11938,1145853764,e);mj(a,b);td(a,b);Ab[c[(c[b>>2]|0)+36>>2]&255](b);return}function fi(b,d){b=b|0;d=d|0;if((c[b+16>>2]|0)!=(0-(c[b+76>>2]|0)|0))return;d=c[b+4>>2]|0;if(d|0)An(b+4|0,d);d=c[b+8>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+8>>2]=0;c[b+12>>2]=-1;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;c[b+20>>2]=0;d=c[b+64>>2]|0;if(d|0)An(b+64|0,d);d=c[b+68>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+68>>2]=0;c[b+72>>2]=-1;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;c[b+80>>2]=0;a[b+193>>0]=0;a[b+194>>0]=1;c[b+144>>2]=0;c[b+164>>2]=0;c[b+148>>2]=1;c[b+152>>2]=0;c[b+156>>2]=10;c[b+160>>2]=1;c[b+124>>2]=0;c[b+124+4>>2]=0;c[b+124+8>>2]=0;c[b+168>>2]=0;c[b+168+4>>2]=0;c[b+168+8>>2]=0;c[b+168+12>>2]=0;c[b+168+16>>2]=0;c[b+168+20>>2]=0;return}function gi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,k=0.0;j=i;i=i+32|0;c[j+16>>2]=c[d>>2];c[j+16+4>>2]=c[d+4>>2];c[j+16+8>>2]=c[d+8>>2];c[j+16+12>>2]=c[d+12>>2];e=+g[j+16>>2];h=+g[j+16+4>>2];f=+g[j+16+8>>2];if(e*e+h*h+f*f<1.4210854715202004e-14){c[j+16>>2]=-1082130432;c[j+16+4>>2]=-1082130432;c[j+16+8>>2]=-1082130432;g[j+16+12>>2]=0.0;e=-1.0;h=-1.0;f=-1.0}k=1.0/+O(+(e*e+h*h+f*f));g[j+16>>2]=e*k;g[j+16+4>>2]=h*k;g[j+16+8>>2]=f*k;Gd(j,b,j+16|0);switch(c[b+4>>2]|0){case 8:{e=+g[b+28>>2]*+g[b+12>>2];break}case 0:{e=+g[b+44>>2];break}case 1:{e=+g[b+44>>2];break}case 13:{e=+g[b+44>>2];break}case 11:{e=+g[b+44>>2];break}case 10:{e=+g[b+44>>2];break}case 4:case 5:{e=+g[b+44>>2];break}default:e=+Sb[c[(c[b>>2]|0)+48>>2]&15](b)}h=e*+g[j+16+4>>2]+ +g[j+4>>2];k=e*+g[j+16+8>>2]+ +g[j+8>>2];g[a>>2]=e*+g[j+16>>2]+ +g[j>>2];g[a+4>>2]=h;g[a+8>>2]=k;g[a+12>>2]=0.0;i=j;return}function hi(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0.0,h=0.0,i=0.0,j=0.0;c[a+4>>2]=35;c[a+8>>2]=0;c[a+12>>2]=1065353216;c[a+16>>2]=1065353216;c[a+20>>2]=1065353216;g[a+24>>2]=0.0;g[a+44>>2]=.03999999910593033;c[a>>2]=8140;c[a+52>>2]=1;h=+g[b>>2];f=+g[b+4>>2];d=+g[b+8>>2];d=+g[b+((h<f?(h<d?0:2):f<d?1:2)<<2)>>2]*.10000000149011612;if(d<.03999999910593033){j=+Iz(a);i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);j=j+ +g[a+28>>2];i=i+ +g[a+32>>2];h=h+ +g[a+36>>2];g[a+44>>2]=d;d=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=h-+Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=j-d;g[a+32>>2]=i-f;g[a+36>>2]=h;g[a+40>>2]=0.0;e=c[a>>2]|0}else e=8140;h=+Sb[c[e+48>>2]&15](a);i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);j=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);i=+g[b+4>>2]*+g[a+16>>2]-i;j=+g[b+8>>2]*+g[a+20>>2]-j;g[a+28>>2]=+g[b>>2]*+g[a+12>>2]-h;g[a+32>>2]=i;g[a+36>>2]=j;g[a+40>>2]=0.0;c[a+4>>2]=13;return}function ii(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,j=0,l=0,m=0,n=0,o=0.0;m=i;i=i+80|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=+g[d>>2];f=+g[d+4>>2];h=+g[d+8>>2];if(e*e+f*f+h*h<9.999999747378752e-05){l=1065353216;j=0;e=0.0;d=0}else{o=1.0/+O(+(e*e+f*f+h*h));l=(g[k>>2]=e*o,c[k>>2]|0);n=(g[k>>2]=f*o,c[k>>2]|0);j=(g[k>>2]=h*o,c[k>>2]|0);e=+g[d+12>>2];d=n}c[m+32>>2]=7824;n=m+32+4|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[m+32+20>>2]=-999999984306749440.0;c[m+32+24>>2]=l;c[m+32+28>>2]=d;c[m+32+32>>2]=j;g[m+32+36>>2]=e;c[m+16>>2]=1566444395;c[m+16+4>>2]=1566444395;c[m+16+8>>2]=1566444395;g[m+16+12>>2]=0.0;b=c[b+92>>2]|0;l=c[(c[b>>2]|0)+8>>2]|0;g[m>>2]=-999999984306749440.0;g[m+4>>2]=-999999984306749440.0;g[m+8>>2]=-999999984306749440.0;g[m+12>>2]=0.0;mc[l&127](b,m+32|0,m,m+16|0);c[a>>2]=c[n>>2];c[a+4>>2]=c[n+4>>2];c[a+8>>2]=c[n+8>>2];c[a+12>>2]=c[n+12>>2];i=m;return}function ji(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0,j=0.0,k=0.0,l=0,m=0.0;e=+g[b+60>>2]*.5;l=c[b+68>>2]|0;h=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];k=+O(+(h*h+j*j+k*k));f=c[b+64>>2]|0;do if(!(+g[d+(l<<2)>>2]>k*+g[b+52>>2])){h=+g[d+(f<<2)>>2];i=c[b+72>>2]|0;j=+g[d+(i<<2)>>2];k=+O(+(h*h+j*j));if(k>1.1920928955078125e-07){k=+g[b+56>>2]/k;g[a+(f<<2)>>2]=h*k;g[a+(l<<2)>>2]=-e;g[a+(i<<2)>>2]=j*k;break}else{g[a+(f<<2)>>2]=0.0;g[a+(l<<2)>>2]=-e;g[a+(i<<2)>>2]=0.0;break}}else{g[a+(f<<2)>>2]=0.0;g[a+(l<<2)>>2]=e;g[a+(c[b+72>>2]<<2)>>2]=0.0}while(0);if(!(+Sb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0))return;h=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];m=h*h+j*j+k*k<1.4210854715202004e-14?-1.0:h;e=h*h+j*j+k*k<1.4210854715202004e-14?-1.0:j;k=h*h+j*j+k*k<1.4210854715202004e-14?-1.0:k;j=1.0/+O(+(k*k+(m*m+e*e)));h=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+h*j*m;g[a+4>>2]=h*j*e+ +g[a+4>>2];g[a+8>>2]=h*j*k+ +g[a+8>>2];return}function ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;g=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=g;if(g|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];f=c[a+96>>2]|0;c[b+60>>2]=f;if(!f){c[b+52>>2]=0;c[b+56>>2]=0;return 17310}c[b+52>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+104>>2]|0)|0;c[b+56>>2]=0;g=Ob[c[(c[d>>2]|0)+16>>2]&63](d,16,f)|0;if((f|0)>0){e=c[a+104>>2]|0;b=0;a=c[g+8>>2]|0;while(1){c[a>>2]=c[e+(b<<4)>>2];c[a+4>>2]=c[e+(b<<4)+4>>2];c[a+8>>2]=c[e+(b<<4)+8>>2];c[a+12>>2]=c[e+(b<<4)+12>>2];b=b+1|0;if((b|0)==(f|0))break;else a=a+16|0}}else e=c[a+104>>2]|0;yb[c[(c[d>>2]|0)+20>>2]&31](d,g,19308,1497453121,e);return 17310}function li(a){a=a|0;var b=0,d=0,e=0,f=0;f=i;i=i+16|0;d=c[2357]|0;if((c[d>>2]|0)==(a|0))b=d;else{b=c[d+24>>2]|0;a:do if(!b)e=5;else while(1){if((c[b>>2]|0)==(a|0))break a;b=c[b+28>>2]|0;if(!b){e=5;break}}while(0);do if((e|0)==5){while(1){b=yc(36)|0;if(b|0){e=9;break}b=c[6564]|0;c[6564]=b+0;if(!b){e=8;break}jc[b&3]();e=5}if((e|0)==8){f=Ya(4)|0;c[f>>2]=9640;pb(f|0,2800,251)}else if((e|0)==9){c[b>>2]=a;c[b+4>>2]=0;c[b+4+4>>2]=0;c[b+4+8>>2]=0;c[b+4+12>>2]=0;c[b+20>>2]=d;c[b+24>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;Yq(b);c[b+28>>2]=c[d+24>>2];c[d+24>>2]=b;break}}while(0);c[2357]=b}a=b+4|0;c[a>>2]=(c[a>>2]|0)+1;a=b+16|0;e=c[a>>2]|0;c[a>>2]=e+1;if(e|0){i=f;return}tb(f|0,0)|0;e=c[6434]|0;c[b+12>>2]=(c[f+4>>2]|0)-(c[e+4>>2]|0)+(((c[f>>2]|0)-(c[e>>2]|0)|0)*1e6|0);i=f;return}function mi(a,b,d){a=a|0;b=b|0;d=d|0;c[a+300>>2]=c[b>>2];c[a+300+4>>2]=c[b+4>>2];c[a+300+8>>2]=c[b+8>>2];c[a+300+12>>2]=c[b+12>>2];c[a+316>>2]=c[b+16>>2];c[a+316+4>>2]=c[b+16+4>>2];c[a+316+8>>2]=c[b+16+8>>2];c[a+316+12>>2]=c[b+16+12>>2];c[a+332>>2]=c[b+32>>2];c[a+332+4>>2]=c[b+32+4>>2];c[a+332+8>>2]=c[b+32+8>>2];c[a+332+12>>2]=c[b+32+12>>2];c[a+348>>2]=c[b+48>>2];c[a+348+4>>2]=c[b+48+4>>2];c[a+348+8>>2]=c[b+48+8>>2];c[a+348+12>>2]=c[b+48+12>>2];c[a+364>>2]=c[d>>2];c[a+364+4>>2]=c[d+4>>2];c[a+364+8>>2]=c[d+8>>2];c[a+364+12>>2]=c[d+12>>2];c[a+380>>2]=c[d+16>>2];c[a+380+4>>2]=c[d+16+4>>2];c[a+380+8>>2]=c[d+16+8>>2];c[a+380+12>>2]=c[d+16+12>>2];c[a+396>>2]=c[d+32>>2];c[a+396+4>>2]=c[d+32+4>>2];c[a+396+8>>2]=c[d+32+8>>2];c[a+396+12>>2]=c[d+32+12>>2];c[a+412>>2]=c[d+48>>2];c[a+412+4>>2]=c[d+48+4>>2];c[a+412+8>>2]=c[d+48+8>>2];c[a+412+12>>2]=c[d+48+12>>2];Ab[c[(c[a>>2]|0)+8>>2]&255](a);return}function ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0.0;m=c[a+4>>2]|0;a=c[a+64>>2]|0;do if(!m)if(!a){e=0.0;n=0.0;j=0.0;l=0.0;h=0.0;k=0.0;i=0.0;f=0.0}else{e=+g[a>>2];n=+g[a+12>>2];j=+g[a+16>>2];l=+g[a+20>>2];h=+g[a+24>>2];k=+g[a+28>>2];i=+g[a+4>>2];f=+g[a+8>>2]}else{e=+g[m>>2];if(!a){n=+g[m+12>>2];j=+g[m+16>>2];l=+g[m+20>>2];h=+g[m+24>>2];k=+g[m+28>>2];i=+g[m+4>>2];f=+g[m+8>>2];break}k=+g[a>>2];e=e<k?e:k;k=+g[m+16>>2];j=+g[a+16>>2];j=k>j?k:j;k=+g[m+4>>2];i=+g[a+4>>2];i=k<i?k:i;k=+g[m+20>>2];l=+g[a+20>>2];l=k>l?k:l;k=+g[m+8>>2];f=+g[a+8>>2];f=k<f?k:f;k=+g[m+24>>2];h=+g[a+24>>2];if(k>h){n=0.0;h=k;k=0.0}else{n=0.0;k=0.0}}while(0);g[b>>2]=e;g[b+4>>2]=i;g[b+8>>2]=f;g[b+12>>2]=n;g[d>>2]=j;g[d+4>>2]=l;g[d+8>>2]=h;g[d+12>>2]=k;return}function oi(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;c=i;i=i+48|0;Wg(a+364|0,c+16|0);h=-+g[c+16>>2];e=-+g[c+16+4>>2];m=-+g[c+16+8>>2];l=+g[c+16+12>>2];f=+g[b>>2];n=+g[b+12>>2];k=+g[b+8>>2];j=+g[b+4>>2];Wg(a+300|0,c);p=+g[c>>2];q=+g[c+12>>2];d=+g[c+8>>2];o=+g[c+4>>2];g[c+32>>2]=p*(l*n-f*h-j*e-k*m)+(l*f+n*h+k*e-j*m)*q+(f*m+(n*e+l*j)-k*h)*d-(n*m+l*k+j*h-f*e)*o;g[c+32+4>>2]=p*(n*m+l*k+j*h-f*e)+(q*(f*m+(n*e+l*j)-k*h)+(l*n-f*h-j*e-k*m)*o)-(l*f+n*h+k*e-j*m)*d;g[c+32+8>>2]=q*(n*m+l*k+j*h-f*e)+(l*n-f*h-j*e-k*m)*d+(l*f+n*h+k*e-j*m)*o-p*(f*m+(n*e+l*j)-k*h);g[c+32+12>>2]=(l*n-f*h-j*e-k*m)*q-p*(l*f+n*h+k*e-j*m)-(f*m+(n*e+l*j)-k*h)*o-(n*m+l*k+j*h-f*e)*d;Yd(a,c+32|0);i=c;return}function pi(b){b=b|0;var d=0;d=c[b>>2]|0;if(d|0)An(b,d);d=c[b+4>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+4>>2]=0;c[b+8>>2]=-1;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+16>>2]=0;d=c[b+52>>2]|0;if(!d){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}if(!(a[b+56>>0]|0)){a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);d=c[b+32>>2]|0;a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;if(!d){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function qi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(!e)e=c[b+188>>2]|0;j=c[d>>2]|0;f=c[b+268>>2]|0;a:do if((f|0)>0){h=c[b+276>>2]|0;g=0;while(1){if((c[h+(g<<2)>>2]|0)==(j|0))break;g=g+1|0;if((g|0)>=(f|0))break a}if((g|0)!=(f|0))return}while(0);if((f|0)==(c[b+272>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6435]=(c[6435]|0)+1;f=yc((i<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=f;f=c[b+268>>2]|0}if((f|0)>0){g=0;do{c[h+(g<<2)>>2]=c[(c[b+276>>2]|0)+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0))}g=c[b+276>>2]|0;if(g){if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0);f=c[b+268>>2]|0}c[b+276>>2]=0}a[b+280>>0]=1;c[b+276>>2]=h;c[b+272>>2]=i}c[(c[b+276>>2]|0)+(f<<2)>>2]=j;c[b+268>>2]=f+1;b=c[b+284>>2]|0;Ob[c[(c[b>>2]|0)+8>>2]&63](b,e,d)|0;return}function ri(b){b=b|0;var d=0;if((a[22496]|0)==0?Wa(22496)|0:0){if((a[22456]|0)==0?Wa(22456)|0:0){if((a[22464]|0)==0?Wa(22464)|0:0){c[5698]=1065353216;c[5699]=0;c[5700]=0;c[5701]=0;c[5702]=0;c[5703]=1065353216;c[5704]=0;c[5705]=0;c[5706]=0;c[5707]=0;c[5708]=1065353216;g[5709]=0.0;_a(22464)}c[5710]=c[5698];c[5711]=c[5699];c[5712]=c[5700];c[5713]=c[5701];c[5714]=c[5702];c[5715]=c[5703];c[5716]=c[5704];c[5717]=c[5705];c[5718]=c[5706];c[5719]=c[5707];c[5720]=c[5708];c[5721]=c[5709];c[5722]=0;c[5723]=0;c[5724]=0;c[5725]=0;_a(22456)}c[5755]=c[5710];c[5756]=c[5711];c[5757]=c[5712];c[5758]=c[5713];c[5759]=c[5714];c[5760]=c[5715];c[5761]=c[5716];c[5762]=c[5717];c[5763]=c[5718];c[5764]=c[5719];c[5765]=c[5720];c[5766]=c[5721];c[5767]=c[5722];c[5768]=c[5723];c[5769]=c[5724];c[5770]=c[5725];_a(22496)}d=c[b+8>>2]|0;if(!d){b=c[b>>2]|0;return ((b|0)==0?23020:b+60|0)|0}else return d+4|0;return 0}function si(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0;c[b>>2]=Zb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+28>>2]|0)|0;c[b+4>>2]=Zb[c[(c[e>>2]|0)+28>>2]&31](e,c[a+32>>2]|0)|0;f=Zb[c[(c[e>>2]|0)+40>>2]&31](e,a)|0;g=Zb[c[(c[e>>2]|0)+28>>2]&31](e,f)|0;c[b+8>>2]=g;if(g|0)Cb[c[(c[e>>2]|0)+48>>2]&127](e,f);c[b+12>>2]=c[a+4>>2];c[b+24>>2]=d[a+21>>0];c[b+40>>2]=c[a+24>>2];c[b+44>>2]=c[a+16>>2];c[b+48>>2]=d[a+20>>0];c[b+20>>2]=c[a+12>>2];c[b+16>>2]=c[a+8>>2];c[b+28>>2]=c[a+36>>2];c[b+32>>2]=c[a+40>>2];c[b+36>>2]=0;f=c[a+28>>2]|0;if((c[f+488>>2]|0)>0){e=0;do{if((c[(c[f+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;f=c[a+28>>2]|0}e=e+1|0}while((e|0)<(c[f+488>>2]|0))}f=c[a+32>>2]|0;if((c[f+488>>2]|0)>0)e=0;else return 12632;do{if((c[(c[f+496>>2]|0)+(e<<2)>>2]|0)==(a|0)){c[b+36>>2]=1;f=c[a+32>>2]|0}e=e+1|0}while((e|0)<(c[f+488>>2]|0));return 12632}function ti(b,d,e,f){b=+b;d=d|0;e=e|0;f=f|0;var h=0,i=0;while(1){h=yc(140)|0;if(h|0){i=6;break}h=c[6564]|0;c[6564]=h+0;if(!h){i=5;break}jc[h&3]()}if((i|0)==5){f=Ya(4)|0;c[f>>2]=9640;pb(f|0,2800,251)}else if((i|0)==6){g[h>>2]=b;c[h+4>>2]=d;c[h+72>>2]=e;c[h+76>>2]=c[f>>2];c[h+76+4>>2]=c[f+4>>2];c[h+76+8>>2]=c[f+8>>2];c[h+76+12>>2]=c[f+12>>2];g[h+92>>2]=0.0;g[h+96>>2]=0.0;g[h+100>>2]=.5;g[h+104>>2]=0.0;g[h+108>>2]=0.0;g[h+112>>2]=.800000011920929;g[h+116>>2]=1.0;a[h+120>>0]=0;g[h+124>>2]=.004999999888241291;g[h+128>>2]=.009999999776482582;g[h+132>>2]=.009999999776482582;g[h+136>>2]=.009999999776482582;c[h+8>>2]=1065353216;c[h+12>>2]=0;c[h+12+4>>2]=0;c[h+12+8>>2]=0;c[h+12+12>>2]=0;c[h+28>>2]=1065353216;c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;c[h+48>>2]=1065353216;c[h+52>>2]=0;c[h+52+4>>2]=0;c[h+52+8>>2]=0;c[h+52+12>>2]=0;c[h+52+16>>2]=0;return h|0}return 0}function ui(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(Eb[c[(c[d>>2]|0)+16>>2]&127](d)|0)return;j=c[b+712>>2]|0;i=Eb[c[(c[d>>2]|0)+36>>2]&127](d)|0;if(Eb[c[(c[d>>2]|0)+8>>2]&127](d)|0?(f=Eb[c[(c[d>>2]|0)+20>>2]&127](d)|0,h=Eb[c[(c[d>>2]|0)+24>>2]&127](d)|0,(j|0)>0):0){e=c[b+720>>2]|0;g=0;a=i+(f<<2)|0;while(1){k=c[e+(g*104|0)+12>>2]|0;f=c[e+(g*104|0)+16>>2]|0;c[a>>2]=c[e+(g*104|0)+8>>2];c[a+4>>2]=k;c[a+8>>2]=f;g=g+1|0;if((g|0)==(j|0))break;else a=a+(h<<2)|0}}if(!(Eb[c[(c[d>>2]|0)+12>>2]&127](d)|0))return;a=Eb[c[(c[d>>2]|0)+28>>2]&127](d)|0;g=Eb[c[(c[d>>2]|0)+32>>2]&127](d)|0;if((j|0)<=0)return;f=c[b+720>>2]|0;a=i+(a<<2)|0;e=0;while(1){b=c[f+(e*104|0)+76>>2]|0;k=c[f+(e*104|0)+80>>2]|0;c[a>>2]=c[f+(e*104|0)+72>>2];c[a+4>>2]=b;c[a+8>>2]=k;e=e+1|0;if((e|0)==(j|0))break;else a=a+(g<<2)|0}return}function vi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0,q=0;q=i;i=i+16|0;if((e|0)<=0){i=q;return}p=0;do{o=d+(p<<4)|0;f=+g[a+60>>2]*.5;h=c[a+68>>2]|0;k=+g[b+(p<<4)>>2];m=+g[b+(p<<4)+4>>2];n=+g[b+(p<<4)+8>>2];n=+O(+(k*k+m*m+n*n));j=c[a+64>>2]|0;do if(!(+g[b+(p<<4)+(h<<2)>>2]>n*+g[a+52>>2])){k=+g[b+(p<<4)+(j<<2)>>2];l=c[a+72>>2]|0;m=+g[b+(p<<4)+(l<<2)>>2];n=+O(+(k*k+m*m));if(n>1.1920928955078125e-07){n=+g[a+56>>2]/n;g[q+(j<<2)>>2]=k*n;g[q+(h<<2)>>2]=-f;g[q+(l<<2)>>2]=m*n;break}else{g[q+(j<<2)>>2]=0.0;g[q+(h<<2)>>2]=-f;g[q+(l<<2)>>2]=0.0;break}}else{g[q+(j<<2)>>2]=0.0;g[q+(h<<2)>>2]=f;g[q+(c[a+72>>2]<<2)>>2]=0.0}while(0);c[o>>2]=c[q>>2];c[o+4>>2]=c[q+4>>2];c[o+8>>2]=c[q+8>>2];c[o+12>>2]=c[q+12>>2];p=p+1|0}while((p|0)!=(e|0));i=q;return}function wi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[b>>2]=9352;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;e=c[b+28>>2]|0;if((e|0)>0){j=0;do{f=c[b+36>>2]|0;g=f+(j*36|0)+4|0;h=f+(j*36|0)+12|0;i=c[h>>2]|0;d=f+(j*36|0)+16|0;if(i|0){if(a[d>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0)}c[h>>2]=0}a[d>>0]=1;c[h>>2]=0;c[g>>2]=0;c[f+(j*36|0)+8>>2]=0;j=j+1|0}while((j|0)!=(e|0))}d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function xi(b){b=b|0;var d=0;c[b>>2]=8452;d=c[b+156>>2]|0;if(d|0){if(a[b+160>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;c[b>>2]=9368;d=c[b+32>>2]|0;if(!d){a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;b=b+28|0;c[b>>2]=0;return}if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;b=b+28|0;c[b>>2]=0;return}function yi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;i=c[b+4>>2]|0;if((i|0)>=(d|0)){c[b+4>>2]=d;return}if((c[b+8>>2]|0)<(d|0)){if(!d){f=0;g=i}else{c[6435]=(c[6435]|0)+1;f=yc((d<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g=c[b+4>>2]|0}if((g|0)>0){h=0;do{j=c[b+12>>2]|0;c[f+(h<<4)>>2]=c[j+(h<<4)>>2];c[f+(h<<4)+4>>2]=c[j+(h<<4)+4>>2];c[f+(h<<4)+8>>2]=c[j+(h<<4)+8>>2];c[f+(h<<4)+12>>2]=c[j+(h<<4)+12>>2];h=h+1|0}while((h|0)!=(g|0))}g=c[b+12>>2]|0;if(g|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=f;c[b+8>>2]=d;g=b+12|0}else g=b+12|0;f=i;do{j=c[g>>2]|0;c[j+(f<<4)>>2]=c[e>>2];c[j+(f<<4)+4>>2]=c[e+4>>2];c[j+(f<<4)+8>>2]=c[e+8>>2];c[j+(f<<4)+12>>2]=c[e+12>>2];f=f+1|0}while((f|0)!=(d|0));c[b+4>>2]=d;return}function zi(b){b=b|0;var d=0,e=0;c[6435]=(c[6435]|0)+1;d=yc(635)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+164>>2]=1065353216;c[d+168>>2]=1065353216;c[d+172>>2]=1065353216;g[d+176>>2]=0.0;c[d+180>>2]=0;g[d+184>>2]=999999984306749440.0;e=d+188|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[d+204>>2]=1;c[d+208>>2]=-1;c[d+212>>2]=-1;c[d+216>>2]=1;g[d+220>>2]=0.0;g[d+224>>2]=.5;g[d+228>>2]=0.0;g[d+232>>2]=0.0;c[d+236>>2]=1;c[d+240>>2]=0;g[d+244>>2]=1.0;e=d+248|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[d+4>>2]=1065353216;e=d+8|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[d+24>>2]=1065353216;e=d+28|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[d+44>>2]=1065353216;e=d+48|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[d>>2]=4108;a[d+500>>0]=1;c[d+496>>2]=0;c[d+488>>2]=0;c[d+492>>2]=0;Od(d,b);return d|0}function Ai(b){b=b|0;var d=0;c[b>>2]=9012;d=c[b+160>>2]|0;if(d|0){if(a[b+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+160>>2]=0}a[b+164>>0]=1;c[b+160>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;d=c[b+136>>2]|0;if(d|0){if(a[b+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;d=c[b+76>>2]|0;if(!d){a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;b=b+72|0;c[b>>2]=0;return}if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+76>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;b=b+72|0;c[b>>2]=0;return}function Bi(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(c[d+28>>2]|0)!=1:0)c[d+28>>2]=f}else{if((b|0)!=(c[d>>2]|0)){b=c[b+8>>2]|0;yb[c[(c[b>>2]|0)+24>>2]&31](b,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4)break;a[d+52>>0]=0;a[d+53>>0]=0;b=c[b+8>>2]|0;Qb[c[(c[b>>2]|0)+20>>2]&7](b,d,e,e,1,g);if(a[d+53>>0]|0)if(!(a[d+52>>0]|0)){f=1;b=13}else b=17;else{f=0;b=13}do if((b|0)==13){c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(f){b=17;break}else{f=4;break}}if(f)b=17;else f=4}while(0);if((b|0)==17)f=3;c[d+44>>2]=f;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Ci(b){b=b|0;var d=0;c[b>>2]=4816;d=c[b+144>>2]|0;if(d|0){if(a[b+148>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+144>>2]=0}a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function Di(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;o=(+g[a+32>>2]-+g[a+16>>2])*+g[a+108>>2]*.5;m=(+g[a+36>>2]-+g[a+20>>2])*+g[a+112>>2]*.5;k=(+g[a+40>>2]-+g[a+24>>2])*+g[a+116>>2]*.5;t=+N(+(+g[b>>2]));s=+N(+(+g[b+4>>2]));r=+N(+(+g[b+8>>2]));n=+N(+(+g[b+16>>2]));l=+N(+(+g[b+20>>2]));j=+N(+(+g[b+24>>2]));w=+N(+(+g[b+32>>2]));v=+N(+(+g[b+36>>2]));f=+N(+(+g[b+40>>2]));u=+g[b+48>>2];p=+g[b+52>>2];h=+g[b+56>>2];q=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);f=o*w+m*v+k*f+ +Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=u-(o*t+m*s+k*r+q);g[d+4>>2]=p-(o*n+m*l+k*j+i);g[d+8>>2]=h-f;g[d+12>>2]=0.0;g[e>>2]=u+(o*t+m*s+k*r+q);g[e+4>>2]=p+(o*n+m*l+k*j+i);g[e+8>>2]=h+f;g[e+12>>2]=0.0;return}function Ei(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0;c[6435]=(c[6435]|0)+1;e=yc(379)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e+4>>2]=3;c[e>>2]=4432;c[e+8>>2]=-1;c[e+12>>2]=-1;g[e+16>>2]=3402823466385288598117041.0e14;a[e+20>>0]=1;a[e+21>>0]=0;c[e+24>>2]=-1;c[e+28>>2]=b;Ll();c[e+32>>2]=23268;g[e+36>>2]=0.0;g[e+40>>2]=.30000001192092896;c[e+44>>2]=0;c[e>>2]=4544;l=e+300|0;c[l>>2]=c[d>>2];c[l+4>>2]=c[d+4>>2];c[l+8>>2]=c[d+8>>2];c[l+12>>2]=c[d+12>>2];k=+g[d>>2];j=+g[d+4>>2];i=+g[d+8>>2];h=k*+g[b+20>>2]+j*+g[b+24>>2]+i*+g[b+28>>2]+ +g[b+56>>2];f=k*+g[b+36>>2]+j*+g[b+40>>2]+i*+g[b+44>>2]+ +g[b+60>>2];g[e+316>>2]=k*+g[b+4>>2]+j*+g[b+8>>2]+i*+g[b+12>>2]+ +g[b+52>>2];g[e+320>>2]=h;g[e+324>>2]=f;g[e+328>>2]=0.0;c[e+332>>2]=0;a[e+344>>0]=0;g[e+348>>2]=.30000001192092896;g[e+352>>2]=1.0;g[e+356>>2]=0.0;return e|0}function Fi(b,d,e){b=+b;d=d|0;e=e|0;var f=0,h=0;while(1){f=yc(140)|0;if(f|0){h=6;break}f=c[6564]|0;c[6564]=f+0;if(!f){h=5;break}jc[f&3]()}if((h|0)==5){e=Ya(4)|0;c[e>>2]=9640;pb(e|0,2800,251)}else if((h|0)==6){g[f>>2]=b;c[f+4>>2]=d;c[f+72>>2]=e;c[f+76>>2]=0;c[f+76+4>>2]=0;c[f+76+8>>2]=0;c[f+76+12>>2]=0;c[f+76+16>>2]=0;c[f+76+20>>2]=0;g[f+100>>2]=.5;g[f+104>>2]=0.0;g[f+108>>2]=0.0;g[f+112>>2]=.800000011920929;g[f+116>>2]=1.0;a[f+120>>0]=0;g[f+124>>2]=.004999999888241291;g[f+128>>2]=.009999999776482582;g[f+132>>2]=.009999999776482582;g[f+136>>2]=.009999999776482582;c[f+8>>2]=1065353216;c[f+12>>2]=0;c[f+12+4>>2]=0;c[f+12+8>>2]=0;c[f+12+12>>2]=0;c[f+28>>2]=1065353216;c[f+32>>2]=0;c[f+32+4>>2]=0;c[f+32+8>>2]=0;c[f+32+12>>2]=0;c[f+48>>2]=1065353216;c[f+52>>2]=0;c[f+52+4>>2]=0;c[f+52+8>>2]=0;c[f+52+12>>2]=0;c[f+52+16>>2]=0;return f|0}return 0}function Gi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;e=c[b>>2]|0;if((e|0)==(c[a+80>>2]|0)){f=1.0;return +f}if(c[e+204>>2]&4|0){f=1.0;return +f}if((+g[a+28>>2]-+g[a+12>>2])*+g[b+8>>2]+(+g[a+32>>2]-+g[a+16>>2])*+g[b+12>>2]+(+g[a+36>>2]-+g[a+20>>2])*+g[b+16>>2]>=-+g[a+84>>2]){f=1.0;return +f}c[a+4>>2]=c[b+40>>2];c[a+76>>2]=e;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2]}else{k=+g[b+8>>2];j=+g[b+12>>2];i=+g[b+16>>2];h=k*+g[e+20>>2]+j*+g[e+24>>2]+i*+g[e+28>>2];f=k*+g[e+36>>2]+j*+g[e+40>>2]+i*+g[e+44>>2];g[a+44>>2]=+g[e+4>>2]*k+ +g[e+8>>2]*j+ +g[e+12>>2]*i;g[a+48>>2]=h;g[a+52>>2]=f;g[a+56>>2]=0.0}c[a+60>>2]=c[b+24>>2];c[a+60+4>>2]=c[b+24+4>>2];c[a+60+8>>2]=c[b+24+8>>2];c[a+60+12>>2]=c[b+24+12>>2];k=+g[b+40>>2];return +k}function Hi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0;j=i;i=i+80|0;if((e|0)>0)f=0;else{i=j;return}do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0}while((f|0)!=(e|0));f=j+32+4|0;h=0;do{k=b+(h<<4)|0;c[j+32>>2]=7824;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;g[j+32+20>>2]=-999999984306749440.0;c[j+32+24>>2]=c[k>>2];c[j+32+24+4>>2]=c[k+4>>2];c[j+32+24+8>>2]=c[k+8>>2];c[j+32+24+12>>2]=c[k+12>>2];c[j+16>>2]=1566444395;c[j+16+4>>2]=1566444395;c[j+16+8>>2]=1566444395;g[j+16+12>>2]=0.0;k=c[a+92>>2]|0;l=c[(c[k>>2]|0)+8>>2]|0;g[j>>2]=-999999984306749440.0;g[j+4>>2]=-999999984306749440.0;g[j+8>>2]=-999999984306749440.0;g[j+12>>2]=0.0;mc[l&127](k,j+32|0,j,j+16|0);k=d+(h<<4)|0;c[k>>2]=c[f>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2];c[k+12>>2]=c[f+12>>2];h=h+1|0}while((h|0)<(e|0));i=j;return}function Ii(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=c[b+96>>2]|0;if((f|0)==(c[b+100>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6435]=(c[6435]|0)+1;f=yc((i<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=f;f=c[b+96>>2]|0}if((f|0)>0){g=0;do{j=h+(g<<4)|0;k=(c[b+104>>2]|0)+(g<<4)|0;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];c[j+8>>2]=c[k+8>>2];c[j+12>>2]=c[k+12>>2];g=g+1|0}while((g|0)!=(f|0))}f=c[b+104>>2]|0;if(f|0){if(a[b+108>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+104>>2]=0}a[b+108>>0]=1;c[b+104>>2]=h;c[b+100>>2]=i;f=c[b+96>>2]|0}k=(c[b+104>>2]|0)+(f<<4)|0;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2];c[k+12>>2]=c[d+12>>2];c[b+96>>2]=(c[b+96>>2]|0)+1;if(!e)return;vj(b);return}function Ji(b){b=b|0;var d=0,e=0,f=0,h=0;c[b+32>>2]=262144;h=c[b+4>>2]|0;if((h|0)<2383){if((c[b+8>>2]|0)<2383){c[6435]=(c[6435]|0)+1;d=yc(9551)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16}d=c[b+4>>2]|0;if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[b+12>>2]|0)+(e<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}d=c[b+12>>2]|0;if(d|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=f;c[b+8>>2]=2383;e=b+12|0}else e=b+12|0;d=h;do{c[(c[e>>2]|0)+(d<<2)>>2]=0;d=d+1|0}while((d|0)!=2383)}c[b+4>>2]=2383;e=0;do{h=(c[b+12>>2]|0)+(e<<2)|0;d=c[h>>2]|0;c[h>>2]=0;if(d|0)do{h=d;d=c[d+280>>2]|0;hd(h)}while((d|0)!=0);e=e+1|0}while((e|0)!=2383);g[b+20>>2]=.25;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=1;c[b+40>>2]=1;return}function Ki(){var b=0,d=0;c[6435]=(c[6435]|0)+1;b=yc(303)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;d=b+188|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+240>>2]=0;g[b+244>>2]=1.0;d=b+248|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[b+4>>2]=1065353216;d=b+8|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[b+24>>2]=1065353216;d=b+28|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[b+44>>2]=1065353216;d=b+48|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[b>>2]=5044;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b+236>>2]=4;return b|0}function Li(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0.0,r=0,s=0.0,t=0;if((e|0)>0)f=0;else return;do{g[d+(f<<4)+12>>2]=-999999984306749440.0;f=f+1|0}while((f|0)!=(e|0));p=0;do{h=+g[a+12>>2];i=+g[b+(p<<4)>>2]*h;j=+g[a+16>>2];k=+g[b+(p<<4)+4>>2]*j;l=+g[a+20>>2];m=+g[b+(p<<4)+8>>2]*l;f=c[a+96>>2]|0;if((f|0)>0){n=c[a+104>>2]|0;o=0;q=-3402823466385288598117041.0e14;r=-1;do{s=i*+g[n+(o<<4)>>2]+k*+g[n+(o<<4)+4>>2]+m*+g[n+(o<<4)+8>>2];t=s>q;r=t?o:r;q=t?s:q;o=o+1|0}while((o|0)!=(f|0));m=+g[n+(r<<4)+4>>2]*j;s=+g[n+(r<<4)+8>>2]*l;g[d+(p<<4)>>2]=+g[n+(r<<4)>>2]*h;g[d+(p<<4)+4>>2]=m;g[d+(p<<4)+8>>2]=s;g[d+(p<<4)+12>>2]=q}else g[d+(p<<4)+12>>2]=-999999984306749440.0;p=p+1|0}while((p|0)!=(e|0));return}function Mi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+96|0;b=c[b>>2]|0;if((b|0)==(c[a+4>>2]|0)){i=d;return 1}e=c[a+12>>2]|0;if(!(Zb[c[(c[e>>2]|0)+8>>2]&31](e,c[b+188>>2]|0)|0)){i=d;return 1}e=c[a+4>>2]|0;f=c[e+192>>2]|0;c[d+64>>2]=0;c[d+64+4>>2]=f;c[d+64+8>>2]=e;c[d+64+12>>2]=e+4;c[d+64+16>>2]=-1;c[d+64+20>>2]=-1;e=c[b+192>>2]|0;c[d+40>>2]=0;c[d+40+4>>2]=e;c[d+40+8>>2]=b;c[d+40+12>>2]=b+4;c[d+40+16>>2]=-1;c[d+40+20>>2]=-1;b=c[(c[a+8>>2]|0)+24>>2]|0;b=Ib[c[(c[b>>2]|0)+8>>2]&31](b,d+64|0,d+40|0,0)|0;if(b|0){f=c[a+12>>2]|0;c[d+4>>2]=0;c[d+8>>2]=d+64;c[d+12>>2]=d+40;c[d>>2]=5976;c[d+32>>2]=f;yb[c[(c[b>>2]|0)+8>>2]&31](b,d+64|0,d+40|0,(c[a+8>>2]|0)+28|0,d);Ab[c[c[b>>2]>>2]&255](b);f=c[(c[a+8>>2]|0)+24>>2]|0;Cb[c[(c[f>>2]|0)+60>>2]&127](f,b)}i=d;return 1}function Ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0,j=0,k=0,l=0;l=i;i=i+80|0;h=c[c[a>>2]>>2]|0;j=c[c[a+4>>2]>>2]|0;if(!(Ob[c[(c[b>>2]|0)+24>>2]&63](b,h,j)|0)){i=l;return}f=c[h+192>>2]|0;c[l+56>>2]=0;c[l+56+4>>2]=f;c[l+56+8>>2]=h;c[l+56+12>>2]=h+4;c[l+56+16>>2]=-1;c[l+56+20>>2]=-1;f=c[j+192>>2]|0;c[l+32>>2]=0;c[l+32+4>>2]=f;c[l+32+8>>2]=j;c[l+32+12>>2]=j+4;c[l+32+16>>2]=-1;c[l+32+20>>2]=-1;f=c[a+8>>2]|0;if(!f){f=Ib[c[(c[b>>2]|0)+8>>2]&31](b,l+56|0,l+32|0,0)|0;c[a+8>>2]=f;if(f|0)k=4}else k=4;if((k|0)==4){c[l>>2]=5604;c[l+4>>2]=0;c[l+8>>2]=l+56;c[l+12>>2]=l+32;if((c[d+8>>2]|0)!=1){e=+Mb[c[(c[f>>2]|0)+12>>2]&15](f,h,j,d,l);if(+g[d+12>>2]>e)g[d+12>>2]=e}else yb[c[(c[f>>2]|0)+8>>2]&31](f,l+56|0,l+32|0,d,l)}i=l;return}function Oi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=c[d+4>>2]|0;f=c[b+24>>2]|0;if((f|0)<(i|0)){if((c[b+28>>2]|0)<(i|0)){if(!i){e=0;g=f}else{c[6435]=(c[6435]|0)+1;e=yc((i<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}g=c[b+24>>2]|0}if((g|0)>0){h=0;do{c[e+(h<<2)>>2]=c[(c[b+32>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(g|0))}g=c[b+32>>2]|0;if(g|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=e;c[b+28>>2]=i;e=b+32|0}else e=b+32|0;do{c[(c[e>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)!=(i|0))}else e=b+32|0;c[b+24>>2]=i;e=c[e>>2]|0;if((i|0)<=0)return;f=0;do{c[e+(f<<2)>>2]=c[(c[d+12>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(i|0));return}function Pi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+488>>2]|0;a:do if((e|0)>0){g=c[b+496>>2]|0;f=0;while(1){if((c[g+(f<<2)>>2]|0)==(d|0))break;f=f+1|0;if((f|0)>=(e|0))break a}if((f|0)!=(e|0)){b=b+256|0;c[b>>2]=1;return}}while(0);if((e|0)==(c[b+492>>2]|0)?(h=e|0?e<<1:1,(e|0)<(h|0)):0){if(!h)g=0;else{c[6435]=(c[6435]|0)+1;e=yc((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}g=e;e=c[b+488>>2]|0}if((e|0)>0){f=0;do{c[g+(f<<2)>>2]=c[(c[b+496>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(e|0))}f=c[b+496>>2]|0;if(f){if(a[b+500>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);e=c[b+488>>2]|0}c[b+496>>2]=0}a[b+500>>0]=1;c[b+496>>2]=g;c[b+492>>2]=h}c[(c[b+496>>2]|0)+(e<<2)>>2]=d;c[b+488>>2]=e+1;b=b+256|0;c[b>>2]=1;return}function Qi(a,b,c,d,e,f,h,i,j,k,l){a=a|0;b=b|0;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=j|0;k=k|0;l=+l;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;x=+g[a>>2]*f+ +g[a+16>>2]*h+ +g[a+32>>2]*i;v=+g[a+4>>2]*f+ +g[a+20>>2]*h+ +g[a+36>>2]*i;t=+g[a+8>>2]*f+ +g[a+24>>2]*h+ +g[a+40>>2]*i;s=+g[b>>2]*f+ +g[b+16>>2]*h+ +g[b+32>>2]*i;q=+g[b+4>>2]*f+ +g[b+20>>2]*h+ +g[b+36>>2]*i;o=+g[b+8>>2]*f+ +g[b+24>>2]*h+ +g[b+40>>2]*i;w=+g[j+80>>2];u=+g[j+84>>2];p=+g[j+88>>2];r=+g[k+80>>2];m=+g[k+84>>2];n=+g[k+88>>2];p=x*(x<0.0?-w:w)+v*(v<0.0?-u:u)+t*(t<0.0?-p:p);n=s*(s<0.0?-r:r)+q*(q<0.0?-m:m)+o*(o<0.0?-n:n);o=+g[j+96>>2];m=+g[k+96>>2];m=(p>o?p:o)+(n>m?n:m);return !((c*f+d*h+e*i+m<m-(c*f+d*h+e*i)?c*f+d*h+e*i+m:m-(c*f+d*h+e*i))>l)|0}function Ri(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=8724;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=0;a[b+28>>0]=0;a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;c[b+72>>2]=0;c[6435]=(c[6435]|0)+1;d=yc(51)|0;if(!d)f=0;else{c[(d+4+15&-16)+-4>>2]=d;f=d+4+15&-16}d=c[b+8>>2]|0;if((d|0)>0){e=0;do{g=c[b+16>>2]|0;c[f+(e<<4)>>2]=c[g+(e<<4)>>2];c[f+(e<<4)+4>>2]=c[g+(e<<4)+4>>2];c[f+(e<<4)+8>>2]=c[g+(e<<4)+8>>2];c[f+(e<<4)+12>>2]=c[g+(e<<4)+12>>2];e=e+1|0}while((e|0)!=(d|0))}d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;Hf(b);return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=f;c[b+12>>2]=2;Hf(b);return}function Si(a,b,d){a=a|0;b=b|0;d=d|0;do if(!((b|0)==32&(d|0)==32)){if((b|0)==32){if((d|0)<20){b=a+96|0;break}if((d+-21|0)>>>0<9){b=a+104|0;break}}else{if((b|0)<20&(d|0)==32){b=a+100|0;break}if((b+-21|0)>>>0<9&(d|0)==32){b=a+108|0;break}if((b|0)==8&(d|0)==8){b=a+60|0;break}if((b|0)==8&(d|0)==1){b=a+76|0;break}if((b|0)==1&(d|0)==8){b=a+80|0;break}}if(!(d|b)){b=a+72|0;break}if((b|0)<20&(d|0)==28){b=a+88|0;break}if((b|0)==28&(d|0)<20){b=a+84|0;break}if((b|0)<20){if((d|0)<20){b=a+32|0;break}if((d+-21|0)>>>0<9){b=a+36|0;break}}else{if((d|0)<20&(b+-21|0)>>>0<9){b=a+40|0;break}if((b|0)==31)if((d|0)==31){b=a+48|0;break}else{b=a+44|0;break}}if((d|0)==31){b=a+52|0;break}else{b=a+56|0;break}}else b=a+92|0;while(0);return c[b>>2]|0}function Ti(a,b,d,e,f,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=i;i=i+16|0;li(12899);Xb[c[(c[a>>2]|0)+32>>2]&1](a,b,d,e,f,h,j,k,l);n=c[a+184>>2]|0;m=c[k+20>>2]|0;m=(n|0)>(m|0)?n:m;if((m|0)>0){n=0;do{+$b[c[(c[a>>2]|0)+40>>2]&3](a,n,b,d,e,f,h,j,k,l);n=n+1|0}while((n|0)<(m|0))}m=c[2357]|0;a=(c[m+16>>2]|0)+-1|0;c[m+16>>2]=a;if(a|0){i=o;return 0.0}do if(c[m+4>>2]|0){tb(o|0,0)|0;a=c[6434]|0;g[m+8>>2]=+g[m+8>>2]+ +(((c[o+4>>2]|0)-(c[a+4>>2]|0)+(((c[o>>2]|0)-(c[a>>2]|0)|0)*1e6|0)-(c[m+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[m+16>>2]|0)){m=c[2357]|0;break}else{i=o;return 0.0}}while(0);c[2357]=c[m+20>>2];i=o;return 0.0}function Ui(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=c[d>>2]|0;d=c[b+268>>2]|0;a:do if((d|0)>0){f=c[b+276>>2]|0;e=0;while(1){if((c[f+(e<<2)>>2]|0)==(g|0))break;e=e+1|0;if((e|0)>=(d|0))break a}if((e|0)!=(d|0))return}while(0);if((d|0)==(c[b+272>>2]|0)?(h=d|0?d<<1:1,(d|0)<(h|0)):0){if(!h)f=0;else{c[6435]=(c[6435]|0)+1;d=yc((h<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}f=d;d=c[b+268>>2]|0}if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[b+276>>2]|0)+(e<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}e=c[b+276>>2]|0;if(e){if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+268>>2]|0}c[b+276>>2]=0}a[b+280>>0]=1;c[b+276>>2]=f;c[b+272>>2]=h}c[(c[b+276>>2]|0)+(d<<2)>>2]=g;c[b+268>>2]=d+1;return}function Vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+232>>2]|0;a:do if((f|0)>0){g=c[a+240>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+240>>2]|0)+(f+-1<<2)>>2]=b;c[a+232>>2]=f+-1}}while(0);d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=Eb[c[(c[g>>2]|0)+36>>2]&127](g)|0;ic[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;ic[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=15;break}}if((h|0)==15)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function Wi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+328>>2]|0;a:do if((f|0)>0){g=c[a+336>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}if((d|0)<(f|0)){c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+336>>2]|0)+(f+-1<<2)>>2]=b;c[a+328>>2]=f+-1}}while(0);d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=Eb[c[(c[g>>2]|0)+36>>2]&127](g)|0;ic[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;ic[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=15;break}}if((h|0)==15)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function Xi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=c[d+4>>2]|0;e=c[b+872>>2]|0;a:do if((e|0)>(i|0))e=b+880|0;else{if((e|0)<(i|0)?(c[b+876>>2]|0)<(i|0):0){if((i|0)!=0?(c[6435]=(c[6435]|0)+1,f=yc((i<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16}else h=0;f=c[b+872>>2]|0;g=0;while(1){if((g|0)>=(f|0))break;c[h+(g<<2)>>2]=c[(c[b+880>>2]|0)+(g<<2)>>2];g=g+1|0}f=c[b+880>>2]|0;if(f|0){if(!((a[b+884>>0]&1)==0|(f|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+880>>2]=0}a[b+884>>0]=1;c[b+880>>2]=h;c[b+876>>2]=i}while(1){if((e|0)>=(i|0)){e=b+880|0;break a}c[(c[b+880>>2]|0)+(e<<2)>>2]=0;e=e+1|0}}while(0);c[b+872>>2]=i;e=c[e>>2]|0;f=0;while(1){if((f|0)>=(i|0))break;c[e+(f<<2)>>2]=c[(c[d+12>>2]|0)+(f<<2)>>2];f=f+1|0}return}function Yi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=c[d+4>>2]|0;e=c[b+4>>2]|0;a:do if((e|0)>(i|0))e=b+12|0;else{if((e|0)<(i|0)?(c[b+8>>2]|0)<(i|0):0){if((i|0)!=0?(c[6435]=(c[6435]|0)+1,f=yc((i<<2|3)+16|0)|0,(f|0)!=0):0){c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16}else h=0;f=c[b+4>>2]|0;g=0;while(1){if((g|0)>=(f|0))break;c[h+(g<<2)>>2]=c[(c[b+12>>2]|0)+(g<<2)>>2];g=g+1|0}f=c[b+12>>2]|0;if(f|0){if(!((a[b+16>>0]&1)==0|(f|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=h;c[b+8>>2]=i}while(1){if((e|0)>=(i|0)){e=b+12|0;break a}c[(c[b+12>>2]|0)+(e<<2)>>2]=0;e=e+1|0}}while(0);c[b+4>>2]=i;e=c[e>>2]|0;f=0;while(1){if((f|0)>=(i|0))break;c[e+(f<<2)>>2]=c[(c[d+12>>2]|0)+(f<<2)>>2];f=f+1|0}return}function Zi(b){b=b|0;var d=0,e=0;d=c[b+92>>2]|0;if(d|0){if(a[b+96>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+92>>2]=0}a[b+96>>0]=1;c[b+92>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;d=c[b+64>>2]|0;if(d|0)do{c[b+64>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);d=c[b+64>>2]|0}while((d|0)!=0);d=c[b+48>>2]|0;if(d|0)do{c[b+48>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);d=c[b+48>>2]|0}while((d|0)!=0);d=c[b+32>>2]|0;if(!d)return;do{c[b+32>>2]=c[d+8>>2];e=c[d>>2]|0;if(e|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);d=c[b+32>>2]|0}while((d|0)!=0);return}function _i(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;h=c[d>>2]|0;h=Zb[c[(c[h>>2]|0)+56>>2]&31](h,28)|0;j=(a[b+4>>0]|0)==0;i=c[b+8>>2]|0;g=c[b+12>>2]|0;b=c[d>>2]|0;c[h+4>>2]=b;c[h>>2]=5480;a[h+8>>0]=0;c[h+12>>2]=0;if(j){a[h+16>>0]=0;c[h+20>>2]=i;c[h+24>>2]=g;if(!(Ob[c[(c[b>>2]|0)+24>>2]&63](b,c[e+8>>2]|0,c[f+8>>2]|0)|0))return h|0;j=c[h+4>>2]|0;c[h+12>>2]=Ob[c[(c[j>>2]|0)+12>>2]&63](j,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[h+8>>0]=1;return h|0}else{a[h+16>>0]=1;c[h+20>>2]=i;c[h+24>>2]=g;if(!(Ob[c[(c[b>>2]|0)+24>>2]&63](b,c[f+8>>2]|0,c[e+8>>2]|0)|0))return h|0;j=c[h+4>>2]|0;c[h+12>>2]=Ob[c[(c[j>>2]|0)+12>>2]&63](j,c[f+8>>2]|0,c[e+8>>2]|0)|0;a[h+8>>0]=1;return h|0}return 0}function $i(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;c[a+4>>2]=c[b+40>>2];e=c[b>>2]|0;c[a+76>>2]=e;if(d){c[a+44>>2]=c[b+8>>2];c[a+44+4>>2]=c[b+8+4>>2];c[a+44+8>>2]=c[b+8+8>>2];c[a+44+12>>2]=c[b+8+12>>2];a=a+60|0;d=b+24|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];f=+g[b+40>>2];return +f}else{k=+g[b+8>>2];j=+g[b+12>>2];i=+g[b+16>>2];h=+g[e+20>>2]*k+ +g[e+24>>2]*j+ +g[e+28>>2]*i;f=+g[e+36>>2]*k+ +g[e+40>>2]*j+ +g[e+44>>2]*i;g[a+44>>2]=+g[e+4>>2]*k+ +g[e+8>>2]*j+ +g[e+12>>2]*i;g[a+48>>2]=h;g[a+52>>2]=f;g[a+56>>2]=0.0;a=a+60|0;d=b+24|0;c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];f=+g[b+40>>2];return +f}return 0.0}function aj(){var b=0,d=0;c[6435]=(c[6435]|0)+1;b=yc(791)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}c[b>>2]=1025;c[b+116>>2]=0;a[b+120>>0]=0;d=b+124|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;c[b+300>>2]=0;a[b+304>>0]=0;d=b+308|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;c[b+484>>2]=0;a[b+488>>0]=0;d=b+492|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;c[b+668>>2]=0;a[b+672>>0]=0;d=b+676|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;c[b+740>>2]=0;c[b+744>>2]=0;c[b+748>>2]=0;c[b+768>>2]=0;return b|0}function bj(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0,m=0;f=i;i=i+48|0;if((c[b+136>>2]|0)<=0){i=f;return}e=0;do{m=c[b+144>>2]|0;c[f+32>>2]=(a[m+(e*284|0)+84>>0]|0)==0?1065353216:0;c[f+32+4>>2]=0;c[f+32+8>>2]=1065353216;g[f+32+12>>2]=0.0;l=m+(e*284|0)+140|0;c[f+16>>2]=c[l>>2];c[f+16+4>>2]=c[l+4>>2];c[f+16+8>>2]=c[l+8>>2];c[f+16+12>>2]=c[l+12>>2];l=c[b+120>>2]|0;h=c[(c[d>>2]|0)+8>>2]|0;k=+g[m+(e*284|0)+108+(l<<2)>>2]+ +g[f+16+4>>2];j=+g[m+(e*284|0)+124+(l<<2)>>2]+ +g[f+16+8>>2];g[f>>2]=+g[m+(e*284|0)+92+(l<<2)>>2]+ +g[f+16>>2];g[f+4>>2]=k;g[f+8>>2]=j;g[f+12>>2]=0.0;mc[h&127](d,f+16|0,f,f+32|0);mc[c[(c[d>>2]|0)+8>>2]&127](d,f+16|0,(c[b+144>>2]|0)+(e*284|0)+16|0,f+32|0);e=e+1|0}while((e|0)<(c[b+136>>2]|0));i=f;return}function cj(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((d|0)==(c[e+8>>2]|0))Cl(e,f,g,h);else{l=b[e+52>>1]|0;j=c[d+12>>2]|0;a[e+52>>0]=0;a[e+53>>0]=0;Rn(d+16|0,e,f,g,h,i);a:do if((j|0)>1){m=d+24|0;do{if(a[e+54>>0]|0)break a;k=b[e+52>>1]|0;if(!((k&255)<<24>>24)){if((k&65535)>=256?(c[d+8>>2]&1|0)==0:0)break a}else{if((c[e+24>>2]|0)==1)break a;if(!(c[d+8>>2]&2))break a}a[e+52>>0]=0;a[e+53>>0]=0;Rn(m,e,f,g,h,i);m=m+8|0}while(m>>>0<(d+16+(j<<3)|0)>>>0)}while(0);a[e+52>>0]=l;a[e+53>>0]=(l&65535)>>>8}return}function dj(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(b|0){case 2:{if((e|0)<1){g[a+232>>2]=d;c[a+300>>2]=c[a+300>>2]|512;return}if((e|0)<3){g[a+264>>2]=d;c[a+300>>2]=c[a+300>>2]|32;return}if((e|0)==3){g[a+248>>2]=d;c[a+300>>2]=c[a+300>>2]|2048;return}if((e|0)>=6)return;g[a+280>>2]=d;c[a+300>>2]=c[a+300>>2]|128;return}case 3:{if((e|0)<1){g[a+212>>2]=d;c[a+300>>2]=c[a+300>>2]|1;return}if((e|0)!=3)return;g[a+228>>2]=d;c[a+300>>2]=c[a+300>>2]|4;return}case 4:{if((e|0)<1){g[a+244>>2]=d;c[a+300>>2]=c[a+300>>2]|256;return}if((e|0)<3){g[a+276>>2]=d;c[a+300>>2]=c[a+300>>2]|16;return}if((e|0)==3){g[a+260>>2]=d;c[a+300>>2]=c[a+300>>2]|1024;return}if((e|0)>=6)return;g[a+292>>2]=d;c[a+300>>2]=c[a+300>>2]|64;return}default:return}}function ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;f=i;i=i+240|0;c[f+80>>2]=d;d=f+96|0;e=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(e|0));c[f+136>>2]=c[f+80>>2];if((Bc(0,b,f+136|0,f,f+96|0)|0)>=0){d=c[2359]|0;if((a[9510]|0)<1)c[2359]=d&-33;if(!(c[2371]|0)){e=c[2370]|0;c[2370]=f+152;c[2366]=f+152;c[2364]=f+152;c[2371]=80;c[2363]=f+152+80;Bc(9436,b,f+136|0,f,f+96|0)|0;if(e|0){Ob[c[9472>>2]&63](9436,0,0)|0;c[2370]=e;c[2371]=0;c[2363]=0;c[2366]=0;c[2364]=0}}else Bc(9436,b,f+136|0,f,f+96|0)|0;c[2359]=c[2359]|d&32}d=(a[9511]|0)==10;do if((c[2378]|0)<0){if(!d?(g=c[2364]|0,g>>>0<(c[2363]|0)>>>0):0){c[2364]=g+1;a[g>>0]=10;break}rm(9436,10)|0}else{if(!d?(h=c[2364]|0,h>>>0<(c[2363]|0)>>>0):0){c[2364]=h+1;a[h>>0]=10;break}rm(9436,10)|0}while(0);Va()}function fj(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0;e=i;i=i+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;l=e+32+44|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);j=(+g[e>>2]-+g[e+16>>2])*.5;h=(+g[e+4>>2]-+g[e+16+4>>2])*.5;k=(+g[e+8>>2]-+g[e+16+8>>2])*.5;f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b*.0833333283662796*((h+f)*2.0*(h+f)*2.0+(k+f)*2.0*(k+f)*2.0);g[d+4>>2]=b*.0833333283662796*((j+f)*2.0*(j+f)*2.0+(k+f)*2.0*(k+f)*2.0);g[d+8>>2]=b*.0833333283662796*((j+f)*2.0*(j+f)*2.0+(h+f)*2.0*(h+f)*2.0);g[d+12>>2]=0.0;i=e;return}function gj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0;d=+g[a+344>>2];if(!(d!=0.0))return;f=+g[a+348>>2];i=+g[a+352>>2];k=+g[a+356>>2];l=+g[b+4>>2]*i*d;h=+g[b+8>>2]*k*d;g[a+312>>2]=+g[a+312>>2]+ +g[b>>2]*f*d;g[a+316>>2]=+g[a+316>>2]+l;g[a+320>>2]=+g[a+320>>2]+h;f=+g[b>>2]*f;i=+g[b+4>>2]*i;k=+g[b+8>>2]*k;h=+g[c+4>>2];l=+g[c+8>>2];j=+g[c>>2];e=(+g[a+280>>2]*(h*k-l*i)+ +g[a+284>>2]*(l*f-j*k)+ +g[a+288>>2]*(j*i-h*f))*+g[a+548>>2];d=(+g[a+296>>2]*(h*k-l*i)+ +g[a+300>>2]*(l*f-j*k)+ +g[a+304>>2]*(j*i-h*f))*+g[a+552>>2];g[a+328>>2]=+g[a+328>>2]+(+g[a+264>>2]*(h*k-l*i)+ +g[a+268>>2]*(l*f-j*k)+ +g[a+272>>2]*(j*i-h*f))*+g[a+544>>2];g[a+332>>2]=+g[a+332>>2]+e;g[a+336>>2]=+g[a+336>>2]+d;return}function hj(a,b,d,e,f,h,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0;n=i;i=i+16|0;li(12859);+bc[c[(c[a>>2]|0)+44>>2]&3](a,b,d,e,f,h,j,k,l);+bc[c[(c[a>>2]|0)+48>>2]&3](a,b,d,e,f,h,j,k,l);+fc[c[(c[a>>2]|0)+36>>2]&1](a,b,d,k);m=c[2357]|0;a=(c[m+16>>2]|0)+-1|0;c[m+16>>2]=a;if(a|0){i=n;return 0.0}do if(c[m+4>>2]|0){tb(n|0,0)|0;a=c[6434]|0;g[m+8>>2]=+g[m+8>>2]+ +(((c[n+4>>2]|0)-(c[a+4>>2]|0)+(((c[n>>2]|0)-(c[a>>2]|0)|0)*1e6|0)-(c[m+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[m+16>>2]|0)){m=c[2357]|0;break}else{i=n;return 0.0}}while(0);c[2357]=c[m+20>>2];i=n;return 0.0}function ij(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=c[b+212>>2]|0;if((f|0)==(c[b+216>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)h=0;else{c[6435]=(c[6435]|0)+1;f=yc((i<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=f;f=c[b+212>>2]|0}if((f|0)>0){g=0;do{c[h+(g<<2)>>2]=c[(c[b+220>>2]|0)+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0))}g=c[b+220>>2]|0;if(g){if(a[b+224>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0);f=c[b+212>>2]|0}c[b+220>>2]=0}a[b+224>>0]=1;c[b+220>>2]=h;c[b+216>>2]=i}c[(c[b+220>>2]|0)+(f<<2)>>2]=d;c[b+212>>2]=f+1;if(!e)return;Pi(c[d+28>>2]|0,d);Pi(c[d+32>>2]|0,d);return}function jj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;e=c[a+4>>2]|0;if(e|0)gj(e,b,d);e=c[a>>2]|0;if(!e)return;m=+g[b>>2];k=+g[e+128>>2];l=+g[b+4>>2];j=+g[b+8>>2];f=+g[d+4>>2];o=+g[d+8>>2];n=+g[d>>2];i=+g[e+180>>2]*(j*f-l*o)+ +g[e+184>>2]*(m*o-j*n)+(l*n-m*f)*+g[e+188>>2];h=(j*f-l*o)*+g[e+196>>2]+(m*o-j*n)*+g[e+200>>2]+(l*n-m*f)*+g[e+204>>2];f=(j*f-l*o)*+g[e+212>>2]+(m*o-j*n)*+g[e+216>>2]+(l*n-m*f)*+g[e+220>>2];g[e+276>>2]=m*k+ +g[e+276>>2];g[e+280>>2]=k*l+ +g[e+280>>2];g[e+284>>2]=k*j+ +g[e+284>>2];g[e+292>>2]=i+ +g[e+292>>2];g[e+296>>2]=h+ +g[e+296>>2];g[e+300>>2]=f+ +g[e+300>>2];c[e+312>>2]=(c[e+312>>2]|0)+1;return}function kj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;v=+g[a+552>>2];u=+g[a+568>>2];t=+g[a+584>>2];s=+g[b>>2];r=+g[b+4>>2];q=+g[b+8>>2];o=+g[b+16>>2];n=+g[b+20>>2];m=+g[b+24>>2];k=+g[b+32>>2];i=+g[b+36>>2];f=+g[b+40>>2];j=+g[a+556>>2];h=+g[a+572>>2];e=+g[a+588>>2];x=+g[a+620>>2];w=+g[a+636>>2];d=+g[a+652>>2];p=x*+g[c>>2]+w*+g[c+4>>2]+d*+g[c+8>>2];l=x*+g[c+16>>2]+w*+g[c+20>>2]+d*+g[c+24>>2];d=x*+g[c+32>>2]+w*+g[c+36>>2]+d*+g[c+40>>2];d=+W(+((v*s+u*r+t*q)*p+(v*o+u*n+t*m)*l+(v*k+u*i+t*f)*d),+((s*j+r*h+q*e)*p+(o*j+n*h+m*e)*l+(k*j+i*h+f*e)*d));return +(d*+g[a+732>>2])}function lj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if((e|0)!=0&(b&3|0)!=0){f=e;while(1){if((a[b>>0]|0)==(d&255)<<24>>24)break a;b=b+1|0;e=f+-1|0;if((e|0)!=0&(b&3|0)!=0)f=e;else{f=e;e=(e|0)!=0;g=5;break}}}else{f=e;e=(e|0)!=0;g=5}while(0);b:do if((g|0)==5)if(e){if((a[b>>0]|0)!=(d&255)<<24>>24){e=_(d&255,16843009)|0;c:do if(f>>>0>3)while(1){h=c[b>>2]^e;if((h&-2139062144^-2139062144)&h+-16843009|0)break;b=b+4|0;f=f+-4|0;if(f>>>0<=3){g=11;break c}}else g=11;while(0);if((g|0)==11)if(!f){f=0;break}while(1){if((a[b>>0]|0)==(d&255)<<24>>24)break b;b=b+1|0;f=f+-1|0;if(!f){f=0;break}}}}else f=0;while(0);return (f|0?b:0)|0}function mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+8>>2]|0;if((d|0)>0){f=0;do{e=c[(c[a+16>>2]|0)+(f<<2)>>2]|0;if(c[e+236>>2]&2){g=Eb[c[(c[e>>2]|0)+16>>2]&127](e)|0;g=Ob[c[(c[b>>2]|0)+16>>2]&63](b,g,1)|0;d=Ob[c[(c[e>>2]|0)+20>>2]&63](e,c[g+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,g,d,1497645650,e);d=c[a+8>>2]|0}f=f+1|0}while((f|0)<(d|0))}if((c[a+212>>2]|0)<=0)return;d=0;do{g=c[(c[a+220>>2]|0)+(d<<2)>>2]|0;e=Eb[c[(c[g>>2]|0)+36>>2]&127](g)|0;e=Ob[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;f=Ob[c[(c[g>>2]|0)+40>>2]&63](g,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,f,1397641027,g);d=d+1|0}while((d|0)<(c[a+212>>2]|0));return}function nj(a){a=a|0;var b=0.0,d=0,e=0,f=0,h=0;e=i;i=i+32|0;c[a+32>>2]=1566444395;c[a+36>>2]=1566444395;c[a+40>>2]=1566444395;g[a+44>>2]=0.0;c[a+48>>2]=-581039253;c[a+52>>2]=-581039253;c[a+56>>2]=-581039253;g[a+60>>2]=0.0;if((c[a+16>>2]|0)<=0){i=e;return}d=0;do{f=c[a+24>>2]|0;h=c[f+(d*80|0)+64>>2]|0;mc[c[(c[h>>2]|0)+8>>2]&127](h,f+(d*80|0)|0,e+16|0,e);b=+g[e+16>>2];if(+g[a+32>>2]>b)g[a+32>>2]=b;b=+g[e>>2];if(+g[a+48>>2]<b)g[a+48>>2]=b;b=+g[e+16+4>>2];if(+g[a+36>>2]>b)g[a+36>>2]=b;b=+g[e+4>>2];if(+g[a+52>>2]<b)g[a+52>>2]=b;b=+g[e+16+8>>2];if(+g[a+40>>2]>b)g[a+40>>2]=b;b=+g[e+8>>2];if(+g[a+56>>2]<b)g[a+56>>2]=b;d=d+1|0}while((d|0)<(c[a+16>>2]|0));i=e;return}function oj(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0;e=i;i=i+96|0;j=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;k=e+32+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);h=(j+(+g[e>>2]-+g[e+16>>2])*.5)*2.0;f=(j+(+g[e+4>>2]-+g[e+16+4>>2])*.5)*2.0;j=(j+(+g[e+8>>2]-+g[e+16+8>>2])*.5)*2.0;g[d>>2]=b*.0833333283662796*(f*f+j*j);g[d+4>>2]=b*.0833333283662796*(h*h+j*j);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);g[d+12>>2]=0.0;i=e;return}function pj(b){b=b|0;var d=0;d=c[b+72>>2]|0;if(d|0){if(a[b+76>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+72>>2]=0}a[b+76>>0]=1;c[b+72>>2]=0;c[b+64>>2]=0;c[b+68>>2]=0;d=c[b+52>>2]|0;if(d|0){if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;d=c[b+12>>2]|0;if(!d){a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+12>>2]=0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}function qj(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=c[a+732>>2]|0;if((e|0)<=0)return;a=c[a+740>>2]|0;d=0;do{n=c[a+(d*52|0)+8>>2]|0;f=c[a+(d*52|0)+12>>2]|0;s=+g[n+40>>2];q=+g[n+44>>2];i=+g[n+48>>2];k=a+(d*52|0)+36|0;r=+g[k>>2];m=a+(d*52|0)+40|0;p=+g[m>>2];l=a+(d*52|0)+44|0;o=+g[l>>2];j=-(+g[a+(d*52|0)+32>>2]*((s-+g[f+40>>2])*r+(q-+g[f+44>>2])*p+(i-+g[f+48>>2])*o)*b);h=+g[n+88>>2]*j;g[n+40>>2]=s+r*h;g[n+44>>2]=q+p*h;g[n+48>>2]=o*h+i;j=+g[f+88>>2]*j;i=j*+g[m>>2];h=j*+g[l>>2];g[f+40>>2]=+g[f+40>>2]-+g[k>>2]*j;g[f+44>>2]=+g[f+44>>2]-i;g[f+48>>2]=+g[f+48>>2]-h;d=d+1|0}while((d|0)!=(e|0));return}function rj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+12>>2]|0;if(!e)return;if(!(a[b+8>>0]|0))return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[d+4>>2]|0}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0);f=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+12>>2]|0}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function sj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b+328>>2]|0;if((g|0)==(c[b+332>>2]|0)?(j=g|0?g<<1:1,(g|0)<(j|0)):0){if(!j)i=0;else{c[6435]=(c[6435]|0)+1;g=yc((j<<2|3)+16|0)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16}i=g;g=c[b+328>>2]|0}if((g|0)>0){h=0;do{c[i+(h<<2)>>2]=c[(c[b+336>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(g|0))}h=c[b+336>>2]|0;if(h){if(a[b+340>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);g=c[b+328>>2]|0}c[b+336>>2]=0}a[b+340>>0]=1;c[b+336>>2]=i;c[b+332>>2]=j}c[(c[b+336>>2]|0)+(g<<2)>>2]=d;c[b+328>>2]=g+1;c[d+284>>2]=c[b+452>>2];Pg(b,d,e,f);return}function tj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+20>>2]|0;if(!e)return;if(!(a[b+16>>0]|0))return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[d+4>>2]|0}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0);f=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+20>>2]|0}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function uj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;j=+g[a+24>>2];k=+g[a+28>>2];i=+g[a+32>>2];f=j*+g[b>>2]+k*+g[b+4>>2]+i*+g[b+8>>2];h=+g[a+20>>2];if(f>h){g[a+20>>2]=f;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2]}else f=h;h=j*+g[b+16>>2]+k*+g[b+20>>2]+i*+g[b+24>>2];if(h>f){g[a+20>>2]=h;c[a+4>>2]=c[b+16>>2];c[a+4+4>>2]=c[b+16+4>>2];c[a+4+8>>2]=c[b+16+8>>2];c[a+4+12>>2]=c[b+16+12>>2]}else h=f;f=j*+g[b+32>>2]+k*+g[b+36>>2]+i*+g[b+40>>2];if(!(f>h))return;g[a+20>>2]=f;c[a+4>>2]=c[b+32>>2];c[a+4+4>>2]=c[b+32+4>>2];c[a+4+8>>2]=c[b+32+8>>2];c[a+4+12>>2]=c[b+32+12>>2];return}function vj(b){b=b|0;var d=0,e=0,f=0,h=0.0;e=i;i=i+96|0;a[b+88>>0]=1;if((a[22568]|0)==0?Wa(22568)|0:0){c[6139]=1065353216;c[6140]=0;c[6141]=0;c[6142]=0;c[6143]=0;c[6144]=1065353216;c[6145]=0;c[6146]=0;c[6147]=0;c[6148]=0;c[6149]=1065353216;g[6150]=0.0;c[6151]=-1082130432;c[6152]=0;c[6153]=0;c[6154]=0;c[6155]=0;c[6156]=-1082130432;c[6157]=0;c[6158]=0;c[6159]=0;c[6160]=0;c[6161]=-1082130432;g[6162]=0.0;_a(22568)}d=e;f=d+96|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(f|0));mc[c[(c[b>>2]|0)+76>>2]&127](b,24556,e,6);h=+g[b+44>>2];g[b+72>>2]=+g[e>>2]+h;g[b+56>>2]=+g[e+48>>2]-h;g[b+76>>2]=+g[e+20>>2]+h;g[b+60>>2]=+g[e+68>>2]-h;g[b+80>>2]=+g[e+40>>2]+h;g[b+64>>2]=+g[e+88>>2]-h;i=e;return}function wj(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0;j=i;i=i+64|0;h=c[d>>2]|0;g=d+(c[h+-8>>2]|0)|0;h=c[h+-4>>2]|0;c[j>>2]=e;c[j+4>>2]=d;c[j+8>>2]=2776;d=j+12|0;f=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(f|0));b[j+12+40>>1]=0;a[j+12+42>>0]=0;a:do if((h|0)==(e|0)){c[j+48>>2]=1;Qb[c[(c[e>>2]|0)+20>>2]&7](e,j,g,g,1,0);d=(c[j+24>>2]|0)==1?g:0}else{yb[c[(c[h>>2]|0)+24>>2]&31](h,j,g,1,0);switch(c[j+36>>2]|0){case 0:{d=((c[j+40>>2]|0)==1?(c[j+28>>2]|0)==1:0)&(c[j+32>>2]|0)==1?c[j+20>>2]|0:0;break a}case 1:break;default:{d=0;break a}}if((c[j+24>>2]|0)!=1?!(((c[j+40>>2]|0)==0?(c[j+28>>2]|0)==1:0)&(c[j+32>>2]|0)==1):0){d=0;break}d=c[j+16>>2]|0}while(0);i=j;return d|0}function xj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;j=+g[a+88>>2];k=+g[a+92>>2];i=+g[a+96>>2];f=j*+g[b>>2]+k*+g[b+4>>2]+i*+g[b+8>>2];h=+g[a+84>>2];if(f>h){g[a+84>>2]=f;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2]}else f=h;h=j*+g[b+16>>2]+k*+g[b+20>>2]+i*+g[b+24>>2];if(h>f){g[a+84>>2]=h;c[a+4>>2]=c[b+16>>2];c[a+4+4>>2]=c[b+16+4>>2];c[a+4+8>>2]=c[b+16+8>>2];c[a+4+12>>2]=c[b+16+12>>2]}else h=f;f=j*+g[b+32>>2]+k*+g[b+36>>2]+i*+g[b+40>>2];if(!(f>h))return;g[a+84>>2]=f;c[a+4>>2]=c[b+32>>2];c[a+4+4>>2]=c[b+32+4>>2];c[a+4+8>>2]=c[b+32+8>>2];c[a+4+12>>2]=c[b+32+12>>2];return}function yj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;while(1){j=c[a+12>>2]|0;k=c[j+(((b+d|0)/2|0)<<3)>>2]|0;e=b;f=d;while(1){while(1){h=e+1|0;if((c[j+(e<<3)>>2]|0)<(k|0))e=h;else{i=f;break}}while(1){g=j+(i<<3)|0;f=i+-1|0;if((k|0)<(c[g>>2]|0))i=f;else break}if((e|0)>(i|0))f=i;else{e=j+(e<<3)|0;l=c[e>>2]|0;j=c[e+4>>2]|0;m=c[g+4>>2]|0;c[e>>2]=c[g>>2];c[e+4>>2]=m;e=(c[a+12>>2]|0)+(i<<3)|0;c[e>>2]=l;c[e+4>>2]=j;e=h}if((e|0)>(f|0))break;j=c[a+12>>2]|0}if((f|0)>(b|0))yj(a,b,f);if((e|0)<(d|0))b=e;else break}return}function zj(a,b,e){a=a|0;b=b|0;e=e|0;kh(a,b,e)|0;c[b+276>>2]=c[a+1316>>2];c[b+324>>2]=c[a+1364>>2];c[b+252>>2]=d[a+1309>>0];c[b+300>>2]=c[a+1340>>2];c[b+280>>2]=c[a+1320>>2];c[b+328>>2]=c[a+1368>>2];c[b+256>>2]=d[a+1310>>0];c[b+304>>2]=c[a+1344>>2];c[b+284>>2]=c[a+1324>>2];c[b+332>>2]=c[a+1372>>2];c[b+260>>2]=d[a+1311>>0];c[b+308>>2]=c[a+1348>>2];c[b+288>>2]=c[a+1328>>2];c[b+336>>2]=c[a+1376>>2];c[b+264>>2]=d[a+1312>>0];c[b+312>>2]=c[a+1352>>2];c[b+292>>2]=c[a+1332>>2];c[b+340>>2]=c[a+1380>>2];c[b+268>>2]=d[a+1313>>0];c[b+316>>2]=c[a+1356>>2];c[b+296>>2]=c[a+1336>>2];c[b+344>>2]=c[a+1384>>2];c[b+272>>2]=d[a+1314>>0];c[b+320>>2]=c[a+1360>>2];return 12539}function Aj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0;i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);m=i+ +g[a+28>>2];k=i+ +g[a+32>>2];i=i+ +g[a+36>>2];u=+N(+(+g[b>>2]));t=+N(+(+g[b+4>>2]));s=+N(+(+g[b+8>>2]));q=+N(+(+g[b+16>>2]));p=+N(+(+g[b+20>>2]));o=+N(+(+g[b+24>>2]));l=+N(+(+g[b+32>>2]));j=+N(+(+g[b+36>>2]));h=+N(+(+g[b+40>>2]));r=+g[b+48>>2];n=+g[b+52>>2];f=+g[b+56>>2];g[d>>2]=r-(m*u+k*t+i*s);g[d+4>>2]=n-(m*q+k*p+i*o);g[d+8>>2]=f-(m*l+k*j+i*h);g[d+12>>2]=0.0;g[e>>2]=m*u+k*t+i*s+r;g[e+4>>2]=m*q+k*p+i*o+n;g[e+8>>2]=m*l+k*j+i*h+f;g[e+12>>2]=0.0;return}function Bj(a,c,d,e,f,h){a=a|0;c=c|0;d=+d;e=+e;f=+f;h=h|0;var i=0,j=0;d=(d-+g[a+8>>2])*+g[a+40>>2];e=(e-+g[a+12>>2])*+g[a+44>>2];f=(f-+g[a+16>>2])*+g[a+48>>2];do if(!(d<=0.0)){i=b[a+6>>1]|0;j=b[a+4>>1]|0;if(!(d>=+(i&65535))){i=j&(~~d&65535)&65535|h;break}else{i=j&i&65535|h;break}}else i=h;while(0);b[c>>1]=i;do if(!(e<=0.0)){i=b[a+6>>1]|0;j=b[a+4>>1]|0;if(!(e>=+(i&65535))){i=j&(~~e&65535)&65535|h;break}else{i=j&i&65535|h;break}}else i=h;while(0);b[c+2>>1]=i;if(f<=0.0){h=h&65535;c=c+4|0;b[c>>1]=h;return}j=b[a+6>>1]|0;i=b[a+4>>1]|0;if(!(f>=+(j&65535))){h=i&(~~f&65535)&65535|h;h=h&65535;c=c+4|0;b[c>>1]=h;return}else{h=i&j&65535|h;h=h&65535;c=c+4|0;b[c>>1]=h;return}}function Cj(b){b=b|0;var d=0;c[b>>2]=8520;if(c[b+108>>2]|0){d=c[b+112>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+112>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+108>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+108>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}}d=c[b+88>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+84>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+80>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+60>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}if(!(a[b+100>>0]|0))return;d=c[b+92>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+92>>2]|0;if(!d)return;c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);return}function Dj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+76>>2]|0;if(!e)return;f=c[d+4>>2]|0;if((f|0)==(c[d+8>>2]|0)?(h=f|0?f<<1:1,(f|0)<(h|0)):0){if(!h)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[d+4>>2]|0}if((f|0)>0){g=0;do{c[e+(g<<2)>>2]=c[(c[d+12>>2]|0)+(g<<2)>>2];g=g+1|0}while((g|0)!=(f|0))}g=c[d+12>>2]|0;if(g){if(a[d+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0);f=c[d+4>>2]|0}c[d+12>>2]=0}a[d+16>>0]=1;c[d+12>>2]=e;c[d+8>>2]=h;e=c[b+76>>2]|0}c[(c[d+12>>2]|0)+(f<<2)>>2]=e;c[d+4>>2]=f+1;return}function Ej(a,b,d,e){a=a|0;b=b|0;d=+d;e=+e;var f=0,h=0.0,i=0.0,j=0.0,l=0,m=0.0,n=0.0,o=0.0;j=+Q(+d);i=+R(+d);f=c[b+444>>2]|0;l=+N(+j)>1.1920928955078125e-07;d=(c[k>>2]=f,+g[k>>2]);if(l){m=+g[b+448>>2];m=+O(+((i*i/(j*j)+1.0)/(1.0/(m*m)+i*i/(j*j)/(d*d))));d=i*i;h=j*j;f=(g[k>>2]=m,c[k>>2]|0)}else{d=i*i;h=j*j}m=+O(+(h+0.0+d));n=(c[k>>2]=f,+g[k>>2])*.5;m=+R(+n)/m;n=+Q(+n);o=n*e+j*m*0.0-i*m*-0.0;h=n*0.0-i*m*e-m*0.0*0.0;d=n*0.0+m*0.0*0.0-j*m*e;e=-(m*0.0*e)-j*m*0.0-i*m*-0.0;g[a>>2]=i*m*h+(n*o+e*-(m*0.0))-d*-(j*m);g[a+4>>2]=d*-(m*0.0)+(n*h+e*-(j*m))-i*m*o;g[a+8>>2]=o*-(j*m)+(i*m*e+n*d)-h*-(m*0.0);g[a+12>>2]=0.0;return}function Fj(a,d,f,h){a=a|0;d=d|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;i=c[a+108>>2]|0;if(i|0){mc[c[(c[i>>2]|0)+28>>2]&127](i,d,f,h);return}i=b[a+56>>1]|0;if((i&65535)<<1>>>0<=1)return;k=1;m=1;do{j=c[a+68>>2]|0;if(b[j+(k<<2)>>1]&1){l=c[a+60>>2]|0;k=e[j+(k<<2)+2>>1]|0;if(!(+g[d>>2]>+g[l+(k<<6)+32>>2])?!(+g[f>>2]<+g[l+(k<<6)+16>>2]):0)j=1;else j=0;if(!(!(+g[d+8>>2]>+g[l+(k<<6)+40>>2])?!(+g[f+8>>2]<+g[l+(k<<6)+24>>2]):0))j=0;if(!(+g[d+4>>2]>+g[l+(k<<6)+36>>2])?!(+g[f+4>>2]<+g[l+(k<<6)+20>>2]|j^1):0){Zb[c[(c[h>>2]|0)+8>>2]&31](h,l+(k<<6)|0)|0;i=b[a+56>>1]|0}}m=m+1<<16>>16;k=m&65535}while(k>>>0<((i&65535)<<1|1)>>>0);return}function Gj(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0;f=c[a+732>>2]|0;if((f|0)<=0)return;a=c[a+740>>2]|0;e=0;do{d=+g[a+(e*52|0)+24>>2];if(d>0.0?(p=c[a+(e*52|0)+8>>2]|0,h=c[a+(e*52|0)+12>>2]|0,i=+g[p+8>>2],j=+g[h+8>>2]-i,k=+g[p+12>>2],l=+g[h+12>>2]-k,m=+g[p+16>>2],n=+g[h+16>>2]-m,o=+g[a+(e*52|0)+28>>2],o+(j*j+l*l+n*n)>1.1920928955078125e-07):0){d=(o-(j*j+l*l+n*n))/(d*(o+(j*j+l*l+n*n)))*b;q=d*+g[p+88>>2];g[p+8>>2]=i-j*q;g[p+12>>2]=k-l*q;g[p+16>>2]=m-n*q;d=d*+g[h+88>>2];g[h+8>>2]=+g[h+8>>2]+j*d;g[h+12>>2]=l*d+ +g[h+12>>2];g[h+16>>2]=n*d+ +g[h+16>>2]}e=e+1|0}while((e|0)!=(f|0));return}function Hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0;e=i;i=i+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;n=e+32+44|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);l=+g[e>>2];m=+g[e+16>>2];j=+g[e+4>>2];k=+g[e+16+4>>2];f=+g[e+8>>2];h=+g[e+16+8>>2];g[d>>2]=+O(+((l-m)*(l-m)+(j-k)*(j-k)+(f-h)*(f-h)))*.5;g[b>>2]=(m+l)*.5;g[b+4>>2]=(k+j)*.5;g[b+8>>2]=(h+f)*.5;g[b+12>>2]=0.0;i=e;return}function Ij(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;c[a+4>>2]=c[b+24>>2];e=c[b>>2]|0;c[a+8>>2]=e;if(d){c[a+52>>2]=c[b+8>>2];c[a+52+4>>2]=c[b+8+4>>2];c[a+52+8>>2]=c[b+8+8>>2];c[a+52+12>>2]=c[b+8+12>>2]}else{k=+g[b+8>>2];j=+g[b+12>>2];i=+g[b+16>>2];h=+g[e+20>>2]*k+ +g[e+24>>2]*j+ +g[e+28>>2]*i;f=+g[e+36>>2]*k+ +g[e+40>>2]*j+ +g[e+44>>2]*i;g[a+52>>2]=+g[e+4>>2]*k+ +g[e+8>>2]*j+ +g[e+12>>2]*i;g[a+56>>2]=h;g[a+60>>2]=f;g[a+64>>2]=0.0}k=+g[b+24>>2];g[a+68>>2]=(1.0-k)*+g[a+20>>2]+ +g[a+36>>2]*k;g[a+72>>2]=(1.0-k)*+g[a+24>>2]+ +g[a+40>>2]*k;g[a+76>>2]=(1.0-k)*+g[a+28>>2]+ +g[a+44>>2]*k;return +(+g[b+24>>2])}function Jj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0;f=+g[b>>2];h=+g[b+16>>2];j=f<h?f:h;i=+g[b+32>>2];if((j<i?j:i)>+g[a+24>>2])return;k=f>h?b:b+16|0;if(+g[(+g[k>>2]>i?k:b+32|0)>>2]<+g[a+8>>2])return;f=+g[b+8>>2];h=+g[b+24>>2];j=f<h?f:h;i=+g[b+40>>2];if((j<i?j:i)>+g[a+32>>2])return;k=f>h?b+8|0:b+24|0;if(+g[(+g[k>>2]>i?k:b+40|0)>>2]<+g[a+16>>2])return;f=+g[b+4>>2];h=+g[b+20>>2];j=f<h?f:h;i=+g[b+36>>2];if((j<i?j:i)>+g[a+28>>2])return;k=f>h?b+4|0:b+20|0;if(+g[(+g[k>>2]>i?k:b+36|0)>>2]<+g[a+12>>2])return;k=c[a+4>>2]|0;mc[c[(c[k>>2]|0)+8>>2]&127](k,b,d,e);return}function Kj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0.0,k=0.0,l=0.0;h=i;i=i+16|0;g[b+32>>2]=f;c[b+8>>2]=c[d>>2];c[b+8+4>>2]=c[d+4>>2];c[b+8+8>>2]=c[d+8>>2];c[b+8+12>>2]=c[d+12>>2];j=+g[b+28>>2];l=+g[e+4>>2]-j*+g[d+4>>2];k=+g[e+8>>2]-j*+g[d+8>>2];g[h>>2]=+g[e>>2]-+g[d>>2]*j;g[h+4>>2]=l;g[h+8>>2]=k;g[h+12>>2]=0.0;f=+g[b+24>>2]+j+f;g[b+32>>2]=f;if(!(f<0.0)){b=b+4|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;hc[e&15](b,d,h,f);i=h;return}a[b+36>>0]=1;b=b+4|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;hc[e&15](b,d,h,f);i=h;return}function Lj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=6228;d=c[b+8>>2]|0;e=c[d+8>>2]|0;if((e|0)>0){g=0;do{f=c[(c[d+16>>2]|0)+(g*12|0)+8>>2]|0;if(f|0){Ab[c[c[f>>2]>>2]&255](f);h=c[b+4>>2]|0;Cb[c[(c[h>>2]|0)+60>>2]&127](h,f)}g=g+1|0}while((g|0)!=(e|0));d=c[b+8>>2]|0}$h(d);d=c[b+8>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+8>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+24>>2]|0;if(!d){a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;h=b+20|0;c[h>>2]=0;return}if(a[b+28>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+24>>2]=0;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;h=b+20|0;c[h>>2]=0;return}function Mj(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0;d=i;i=i+64|0;c[d+4>>2]=0;c[d+4+4>>2]=0;c[d+24>>2]=0;c[d+24+4>>2]=0;c[d+44>>2]=0;c[d+44+4>>2]=0;c[d+44+8>>2]=0;c[d+44+12>>2]=0;c[d+44+16>>2]=0;j=+g[b>>2];f=+g[b+4>>2];m=+g[b+8>>2];k=+g[b+12>>2];h=j*(2.0/(j*j+f*f+m*m+k*k));e=f*(2.0/(j*j+f*f+m*m+k*k));l=m*(2.0/(j*j+f*f+m*m+k*k));g[d>>2]=1.0-(f*e+m*l);g[d+4>>2]=j*e-k*l;g[d+8>>2]=j*l+k*e;g[d+12>>2]=0.0;g[d+16>>2]=j*e+k*l;g[d+20>>2]=1.0-(j*h+m*l);g[d+24>>2]=f*l-k*h;g[d+28>>2]=0.0;g[d+32>>2]=j*l-k*e;g[d+36>>2]=f*l+k*h;g[d+40>>2]=1.0-(j*h+f*e);g[d+44>>2]=0.0;Pd(a,d);i=d;return}function Nj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;while(1){b=yc(152)|0;if(b|0){f=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){f=5;break}jc[b&3]()}if((f|0)==5){e=Ya(4)|0;c[e>>2]=9640;pb(e|0,2800,251)}else if((f|0)==6){c[b>>2]=4816;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;c[b+100>>2]=e;g[b+104>>2]=0.0;a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;c[b+116>>2]=d;c[b+120>>2]=0;c[b+124>>2]=2;c[b+128>>2]=1;g[b+112>>2]=0.0;g[b+108>>2]=0.0;return b|0}return 0}function Oj(){var b=0;c[6435]=(c[6435]|0)+1;b=yc(215)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}c[b>>2]=4756;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;a[b+80>>0]=1;c[b+76>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;a[b+100>>0]=1;c[b+96>>2]=0;c[b+88>>2]=0;c[b+92>>2]=0;a[b+120>>0]=1;c[b+116>>2]=0;c[b+108>>2]=0;c[b+112>>2]=0;a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;a[b+180>>0]=1;c[b+176>>2]=0;c[b+168>>2]=0;c[b+172>>2]=0;c[b+192>>2]=0;return b|0}function Pj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;if((c[d+60>>2]|0)==2){f=c[d+48>>2]|0;hh(b+64|0,f)|0;g=c[b+68>>2]|0;if(g|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+68>>2]=f;c[b+76>>2]=(c[b+76>>2]|0)+-1}else{f=c[d+48>>2]|0;hh(b+4|0,f)|0;g=c[b+8>>2]|0;if(g|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[b+8>>2]=f;c[b+16>>2]=(c[b+16>>2]|0)+-1}f=c[d+52>>2]|0;g=c[d+56>>2]|0;if(!f)c[b+124+(c[d+60>>2]<<2)>>2]=g;else c[f+56>>2]=g;f=c[d+56>>2]|0;if(f|0)c[f+52>>2]=c[d+52>>2];g=c[b+136>>2]|0;ic[c[(c[g>>2]|0)+16>>2]&127](g,d,e);c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);a[b+194>>0]=1;return}function Qj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+96|0;g=c[b+192>>2]|0;c[f+64>>2]=0;c[f+64+4>>2]=g;c[f+64+8>>2]=b;c[f+64+12>>2]=b+4;c[f+64+16>>2]=-1;c[f+64+20>>2]=-1;b=c[d+192>>2]|0;c[f+40>>2]=0;c[f+40+4>>2]=b;c[f+40+8>>2]=d;c[f+40+12>>2]=d+4;c[f+40+16>>2]=-1;c[f+40+20>>2]=-1;b=c[a+24>>2]|0;b=Ib[c[(c[b>>2]|0)+8>>2]&31](b,f+64|0,f+40|0,0)|0;if(!b){i=f;return}c[f+4>>2]=0;c[f+8>>2]=f+64;c[f+12>>2]=f+40;c[f>>2]=5976;c[f+32>>2]=e;yb[c[(c[b>>2]|0)+8>>2]&31](b,f+64|0,f+40|0,a+28|0,f);Ab[c[c[b>>2]>>2]&255](b);g=c[a+24>>2]|0;Cb[c[(c[g>>2]|0)+60>>2]&127](g,b);i=f;return}function Rj(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;e=+g[a+28>>2];i=+g[a+32>>2];h=+g[a+36>>2];j=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a)+h;switch(c[a+52>>2]|0){case 0:{j=b*.25*(f+i)*(f+i)+b/12.0*(j+e)*(j+e)*4.0;g[d>>2]=b*.5*(f+i)*(f+i);g[d+4>>2]=j;g[d+8>>2]=j;g[d+12>>2]=0.0;return}case 2:{g[d>>2]=b*.25*(j+e)*(j+e)+b/12.0*h*h*4.0;g[d+4>>2]=b*.25*(j+e)*(j+e)+b/12.0*h*h*4.0;g[d+8>>2]=b*.5*(j+e)*(j+e);g[d+12>>2]=0.0;return}default:{i=b*.25*(j+e)*(j+e)+b/12.0*(f+i)*(f+i)*4.0;g[d>>2]=i;g[d+4>>2]=b*.5*(j+e)*(j+e);g[d+8>>2]=i;g[d+12>>2]=0.0;return}}}function Sj(b,d){b=b|0;d=d|0;c[b+8>>2]=0;c[b>>2]=6292;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+32>>2]=1566444395;c[b+36>>2]=1566444395;c[b+40>>2]=1566444395;g[b+44>>2]=0.0;c[b+48>>2]=-581039253;c[b+52>>2]=-581039253;c[b+56>>2]=-581039253;g[b+60>>2]=0.0;c[b+64>>2]=0;c[b+68>>2]=1;g[b+72>>2]=0.0;c[b+76>>2]=1065353216;c[b+80>>2]=1065353216;c[b+84>>2]=1065353216;g[b+88>>2]=0.0;c[b+4>>2]=31;if(!d)return;c[6435]=(c[6435]|0)+1;d=yc(79)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}a[d+36>>0]=1;c[d+32>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;a[d+56>>0]=1;c[d+52>>2]=0;c[d+44>>2]=0;c[d+48>>2]=0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=-1;c[d+12>>2]=0;c[d+16>>2]=0;c[b+64>>2]=d;return}function Tj(a){a=a|0;var b=0;c[a>>2]=3068;b=c[a+92>>2]|0;Ab[c[c[b>>2]>>2]&255](b);b=c[a+92>>2]|0;if(b|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}b=c[a+96>>2]|0;Ab[c[c[b>>2]>>2]&255](b);b=c[a+96>>2]|0;if(b|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}b=c[a+100>>2]|0;Ab[c[c[b>>2]>>2]&255](b);b=c[a+100>>2]|0;if(b|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}b=c[a+104>>2]|0;Ab[c[c[b>>2]>>2]&255](b);b=c[a+104>>2]|0;if(b|0){c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0)}b=c[a+108>>2]|0;Ab[c[c[b>>2]>>2]&255](b);b=c[a+108>>2]|0;if(!b){kf(a);return}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);kf(a);return}function Uj(b,d,e,f){b=b|0;d=d|0;e=+e;f=f|0;var h=0,i=0;c[6435]=(c[6435]|0)+1;h=yc(203)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h>>2]=4872;i=h+60|0;a[h+144>>0]=1;c[h+140>>2]=0;c[h+132>>2]=0;c[h+136>>2]=0;c[h+176>>2]=f;g[h+56>>2]=.019999999552965164;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;a[h+170>>0]=1;c[h+8>>2]=b;g[h+52>>2]=e;g[h+48>>2]=0.0;c[h+12>>2]=d;a[h+171>>0]=1;g[h+172>>2]=0.0;g[h+16>>2]=0.0;g[h+20>>2]=0.0;g[h+44>>2]=29.399999618530273;g[h+24>>2]=55.0;g[h+28>>2]=10.0;a[h+168>>0]=0;a[h+169>>0]=0;a[h+180>>0]=1;g[h+36>>2]=.7853981852531433;g[h+40>>2]=.7071067690849304;g[h+108>>2]=0.0;a[h+181>>0]=0;a[h+182>>0]=0;return h|0}function Vj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0;m=c[b+52>>2]|0;l=c[m+32>>2]|0;b=c[l>>2]|0;m=c[m+24>>2]|0;if((m|0)<=1){m=b;m=m+8|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];return}j=+g[d>>2];k=+g[d+4>>2];i=+g[d+8>>2];f=j*+g[b+8>>2]+k*+g[b+12>>2]+i*+g[b+16>>2];d=1;h=0;while(1){b=c[l+(d<<2)>>2]|0;e=j*+g[b+8>>2]+k*+g[b+12>>2]+i*+g[b+16>>2];b=e>f;h=b?d:h;d=d+1|0;if((d|0)==(m|0))break;else f=b?e:f}m=c[l+(h<<2)>>2]|0;m=m+8|0;c[a>>2]=c[m>>2];c[a+4>>2]=c[m+4>>2];c[a+8>>2]=c[m+8>>2];c[a+12>>2]=c[m+12>>2];return}
	function Ld(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0;h=i;i=i+256|0;if(!(c[b+16>>2]|0)){K=c[b+12>>2]|0;b=c[b+20>>2]|0;n=+g[d>>2];q=+g[d+4>>2];u=+g[d+8>>2];k=+g[d+16>>2];r=+g[d+20>>2];j=+g[d+24>>2];m=+g[d+32>>2];s=+g[d+36>>2];l=+g[d+40>>2];F=+g[d+48>>2];E=+g[d+52>>2];D=+g[d+56>>2];J=+g[e>>2];I=+g[e+16>>2];y=+g[e+32>>2];H=+g[e+4>>2];G=+g[e+20>>2];w=+g[e+36>>2];v=+g[e+8>>2];z=+g[e+24>>2];x=+g[e+40>>2];C=-+g[e+48>>2];B=-+g[e+52>>2];p=-+g[e+56>>2];d=c[(c[K>>2]|0)+64>>2]|0;A=-+g[b+48>>2];t=-+g[b+52>>2];o=-+g[b+56>>2];g[h+16>>2]=(n*J+k*I+m*y)*A+(n*H+k*G+m*w)*t+(n*v+k*z+m*x)*o;g[h+16+4>>2]=(q*J+r*I+s*y)*A+(q*H+r*G+s*w)*t+(q*v+r*z+s*x)*o;g[h+16+8>>2]=(u*J+j*I+l*y)*A+(u*H+j*G+l*w)*t+(u*v+j*z+l*x)*o;g[h+16+12>>2]=0.0;ic[d&127](h+168|0,K,h+16|0);o=+g[h+168>>2];t=+g[h+168+4>>2];A=+g[h+168+8>>2];y=F*J+E*I+D*y+(J*C+I*B+y*p)+((n*J+k*I+m*y)*o+(q*J+r*I+s*y)*t+(u*J+j*I+l*y)*A);w=F*H+E*G+D*w+(H*C+G*B+w*p)+((n*H+k*G+m*w)*o+(q*H+r*G+s*w)*t+(u*H+j*G+l*w)*A);A=F*v+E*z+D*x+(v*C+z*B+x*p)+((n*v+k*z+m*x)*o+(q*v+r*z+s*x)*t+(u*v+j*z+l*x)*A);x=+g[b+48>>2];l=+g[b+52>>2];z=+g[b+56>>2];j=z*A+(x*y+l*w)-+g[b+64>>2];v=+g[e>>2];u=+g[e+4>>2];t=+g[e+8>>2];s=+g[e+16>>2];r=+g[e+20>>2];q=+g[e+24>>2];o=+g[e+32>>2];m=+g[e+36>>2];k=+g[e+40>>2];n=(y-x*j)*s+(w-l*j)*r+(A-z*j)*q+ +g[e+52>>2];p=(y-x*j)*o+(w-l*j)*m+(A-z*j)*k+ +g[e+56>>2];g[h+32>>2]=t*(A-z*j)+(v*(y-x*j)+u*(w-l*j))+ +g[e+48>>2];g[h+32+4>>2]=n;g[h+32+8>>2]=p;g[h+32+12>>2]=0.0;p=+g[b+48>>2];n=+g[b+52>>2];l=+g[b+56>>2];g[h>>2]=v*p+u*n+t*l;g[h+4>>2]=p*s+n*r+l*q;g[h+8>>2]=p*o+n*m+l*k;g[h+12>>2]=0.0;hc[c[(c[f>>2]|0)+16>>2]&15](f,h,h+32|0,j);i=h;return}else{N=c[b+4>>2]|0;a[N+312>>0]=0;c[N>>2]=0;a[N+356>>0]=1;c[N+292>>2]=1566444395;c[N+296>>2]=1566444395;c[N+300>>2]=1566444395;g[N+304>>2]=0.0;c[N+336>>2]=0;c[N+336+4>>2]=0;c[N+336+8>>2]=0;c[N+336+12>>2]=0;a[N+336+16>>0]=0;a[N+332>>0]=a[N+332>>0]&-16;N=c[b+12>>2]|0;M=c[b+16>>2]|0;L=c[N+4>>2]|0;K=c[M+4>>2]|0;I=+Sb[c[(c[N>>2]|0)+48>>2]&15](N);O=c[b+16>>2]|0;J=+Sb[c[(c[O>>2]|0)+48>>2]&15](O);O=c[b+4>>2]|0;b=c[b+8>>2]|0;c[h+168>>2]=9208;c[h+168+4>>2]=0;c[h+168+8>>2]=1065353216;c[h+168+12>>2]=0;g[h+168+16>>2]=0.0;c[h+168+20>>2]=b;c[h+168+24>>2]=O;c[h+168+28>>2]=N;c[h+168+32>>2]=M;c[h+168+36>>2]=L;c[h+168+40>>2]=K;g[h+168+44>>2]=I;g[h+168+48>>2]=J;a[h+168+52>>0]=0;c[h+168+60>>2]=-1;c[h+168+72>>2]=1;c[h+168+76>>2]=1;g[h+32+128>>2]=999999984306749440.0;c[h+32>>2]=c[d>>2];c[h+32+4>>2]=c[d+4>>2];c[h+32+8>>2]=c[d+8>>2];c[h+32+12>>2]=c[d+12>>2];c[h+32+16>>2]=c[d+16>>2];c[h+32+16+4>>2]=c[d+16+4>>2];c[h+32+16+8>>2]=c[d+16+8>>2];c[h+32+16+12>>2]=c[d+16+12>>2];c[h+32+32>>2]=c[d+32>>2];c[h+32+32+4>>2]=c[d+32+4>>2];c[h+32+32+8>>2]=c[d+32+8>>2];c[h+32+32+12>>2]=c[d+32+12>>2];c[h+32+48>>2]=c[d+48>>2];c[h+32+48+4>>2]=c[d+48+4>>2];c[h+32+48+8>>2]=c[d+48+8>>2];c[h+32+48+12>>2]=c[d+48+12>>2];c[h+32+64>>2]=c[e>>2];c[h+32+64+4>>2]=c[e+4>>2];c[h+32+64+8>>2]=c[e+8>>2];c[h+32+64+12>>2]=c[e+12>>2];c[h+32+80>>2]=c[e+16>>2];c[h+32+80+4>>2]=c[e+16+4>>2];c[h+32+80+8>>2]=c[e+16+8>>2];c[h+32+80+12>>2]=c[e+16+12>>2];c[h+32+96>>2]=c[e+32>>2];c[h+32+96+4>>2]=c[e+32+4>>2];c[h+32+96+8>>2]=c[e+32+8>>2];c[h+32+96+12>>2]=c[e+32+12>>2];c[h+32+112>>2]=c[e+48>>2];c[h+32+112+4>>2]=c[e+48+4>>2];c[h+32+112+8>>2]=c[e+48+8>>2];c[h+32+112+12>>2]=c[e+48+12>>2];Vc(h+168|0,h+32|0,f,0,0);i=h;return}}function Md(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;t=i;i=i+32|0;g=Eb[c[(c[d>>2]|0)+28>>2]&127](d)|0;c[e+20>>2]=g;c[e>>2]=0;if(!g){s=d+4|0;f=e+4|0;s=c[s>>2]|0;c[f>>2]=s;f=d+8|0;f=c[f>>2]|0;s=e+8|0;c[s>>2]=f;s=d+12|0;s=c[s>>2]|0;f=e+12|0;c[f>>2]=s;f=d+16|0;f=c[f>>2]|0;d=e+16|0;c[d>>2]=f;i=t;return 19362}s=Ob[c[(c[f>>2]|0)+16>>2]&63](f,32,g)|0;g=c[s+8>>2]|0;c[e>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;r=Eb[c[(c[d>>2]|0)+28>>2]&127](d)|0;a:do if((r|0)>0){q=0;while(1){Yb[c[(c[d>>2]|0)+16>>2]&3](d,t+28|0,t+4|0,t+16|0,t+8|0,t+24|0,t+20|0,t,t+12|0,q);c[g+24>>2]=c[t>>2];c[g+28>>2]=c[t+4>>2];k=g+12|0;m=g+16|0;p=g+4|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;switch(c[t+12>>2]|0){case 2:{j=c[t>>2]|0;if(j|0){j=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,j*3|0)|0;k=c[j+8>>2]|0;c[g+8>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,k)|0;if((c[t>>2]|0)>0){l=c[t+24>>2]|0;m=0;do{n=l+(_(c[t+20>>2]|0,m)|0)|0;o=m*3|0;c[k+(o<<2)>>2]=c[n>>2];c[k+(o+1<<2)>>2]=c[n+4>>2];c[k+(o+2<<2)>>2]=c[n+8>>2];m=m+1|0}while((m|0)<(c[t>>2]|0))}yb[c[(c[f>>2]|0)+20>>2]&31](f,j,19243,1497453121,c[j+8>>2]|0)}break}case 3:{j=c[t>>2]|0;if(j|0){n=Ob[c[(c[f>>2]|0)+16>>2]&63](f,8,j)|0;o=c[n+8>>2]|0;c[k>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,o)|0;j=c[t>>2]|0;if((j|0)>0){k=c[t+24>>2]|0;l=c[t+20>>2]|0;m=0;do{u=k+(_(l,m)|0)|0;b[o+(m<<3)>>1]=b[u>>1]|0;b[o+(m<<3)+2>>1]=b[u+2>>1]|0;b[o+(m<<3)+4>>1]=b[u+4>>1]|0;m=m+1|0}while((m|0)!=(j|0))}yb[c[(c[f>>2]|0)+20>>2]&31](f,n,19258,1497453121,c[n+8>>2]|0)}break}case 5:{j=c[t>>2]|0;if(j|0){k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,j)|0;l=c[k+8>>2]|0;c[m>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,l)|0;if((c[t>>2]|0)>0){j=0;do{u=(c[t+24>>2]|0)+(_(c[t+20>>2]|0,j)|0)|0;a[l+(j<<2)>>0]=a[u>>0]|0;a[l+(j<<2)+1>>0]=a[u+1>>0]|0;a[l+(j<<2)+2>>0]=a[u+2>>0]|0;j=j+1|0}while((j|0)<(c[t>>2]|0))}yb[c[(c[f>>2]|0)+20>>2]&31](f,k,19285,1497453121,c[k+8>>2]|0)}break}default:{}}switch(c[t+16>>2]|0){case 0:{j=c[t+4>>2]|0;if(j|0){j=Ob[c[(c[f>>2]|0)+16>>2]&63](f,16,j)|0;k=c[j+8>>2]|0;c[g>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,k)|0;l=c[t+4>>2]|0;if((l|0)>0){m=c[t+28>>2]|0;n=c[t+8>>2]|0;o=0;do{u=m+(_(n,o)|0)|0;c[k+(o<<4)>>2]=c[u>>2];c[k+(o<<4)+4>>2]=c[u+4>>2];c[k+(o<<4)+8>>2]=c[u+8>>2];o=o+1|0}while((o|0)!=(l|0))}yb[c[(c[f>>2]|0)+20>>2]&31](f,j,19308,1497453121,c[j+8>>2]|0)}break}case 1:{j=c[t+4>>2]|0;if(j|0){n=Ob[c[(c[f>>2]|0)+16>>2]&63](f,32,j)|0;o=c[n+8>>2]|0;c[p>>2]=Zb[c[(c[f>>2]|0)+28>>2]&31](f,o)|0;j=c[t+4>>2]|0;if((j|0)>0){k=c[t+28>>2]|0;l=c[t+8>>2]|0;m=0;do{u=k+(_(l,m)|0)|0;h[o+(m<<5)>>3]=+h[u>>3];h[o+(m<<5)+8>>3]=+h[u+8>>3];h[o+(m<<5)+16>>3]=+h[u+16>>3];m=m+1|0}while((m|0)!=(j|0))}yb[c[(c[f>>2]|0)+20>>2]&31](f,n,19327,1497453121,c[n+8>>2]|0)}break}default:{}}Cb[c[(c[d>>2]|0)+24>>2]&127](d,q);q=q+1|0;if((q|0)==(r|0)){g=f;break a}else g=g+32|0}}else g=f;while(0);yb[c[(c[g>>2]|0)+20>>2]&31](f,s,19347,1497453121,c[s+8>>2]|0);f=d+4|0;u=e+4|0;f=c[f>>2]|0;c[u>>2]=f;u=d+8|0;u=c[u>>2]|0;f=e+8|0;c[f>>2]=u;f=d+12|0;f=c[f>>2]|0;u=e+12|0;c[u>>2]=f;d=d+16|0;d=c[d>>2]|0;u=e+16|0;c[u>>2]=d;i=t;return 19362}function Nd(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0;D=c[b+88>>2]|0;if((D|0)==(c[b+92>>2]|0)?(o=D|0?D<<1:1,(D|0)<(o|0)):0){if(!o){j=0;l=D}else{c[6435]=(c[6435]|0)+1;j=yc((o*152|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=c[b+88>>2]|0}if((l|0)>0){m=0;do{bn(j+(m*152|0)|0,(c[b+96>>2]|0)+(m*152|0)|0,152)|0;m=m+1|0}while((m|0)!=(l|0))}l=c[b+96>>2]|0;if(l|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=j;c[b+92>>2]=o;j=c[b+88>>2]|0}else j=D;c[b+88>>2]=j+1;C=c[b+96>>2]|0;c[C+(D*152|0)+140>>2]=h;c[C+(D*152|0)+16>>2]=0;c[C+(D*152|0)+16+4>>2]=0;c[C+(D*152|0)+16+8>>2]=0;c[C+(D*152|0)+16+12>>2]=0;g[C+(D*152|0)+48>>2]=-0.0;g[C+(D*152|0)+52>>2]=-0.0;g[C+(D*152|0)+56>>2]=-0.0;g[C+(D*152|0)+60>>2]=0.0;b=c[b+16>>2]|0;o=c[b+(e*244|0)+240>>2]|0;B=c[b+(f*244|0)+240>>2]|0;c[C+(D*152|0)+144>>2]=e;c[C+(D*152|0)+148>>2]=f;h=c[i+88>>2]|0;c[C+(D*152|0)+104>>2]=h;c[C+(D*152|0)+132>>2]=0;g[C+(D*152|0)+100>>2]=0.0;g[C+(D*152|0)+96>>2]=0.0;x=-+g[d>>2];y=-+g[d+4>>2];z=-+g[d+8>>2];g[C+(D*152|0)>>2]=x;g[C+(D*152|0)+4>>2]=y;g[C+(D*152|0)+8>>2]=z;g[C+(D*152|0)+12>>2]=0.0;A=(c[k>>2]=h,+g[k>>2]);if(o|0){j=(g[k>>2]=(+g[o+264>>2]*x+ +g[o+268>>2]*y+ +g[o+272>>2]*z)*+g[o+544>>2],c[k>>2]|0);l=(g[k>>2]=(+g[o+280>>2]*x+ +g[o+284>>2]*y+ +g[o+288>>2]*z)*+g[o+548>>2],c[k>>2]|0);m=(g[k>>2]=(+g[o+296>>2]*x+ +g[o+300>>2]*y+ +g[o+304>>2]*z)*+g[o+552>>2],c[k>>2]|0)}else{j=0;l=0;m=0}c[C+(D*152|0)+64>>2]=j;c[C+(D*152|0)+68>>2]=l;c[C+(D*152|0)+72>>2]=m;g[C+(D*152|0)+76>>2]=0.0;u=+g[d>>2];v=+g[d+4>>2];w=+g[d+8>>2];d=c[d+12>>2]|0;g[C+(D*152|0)+32>>2]=u;g[C+(D*152|0)+36>>2]=v;g[C+(D*152|0)+40>>2]=w;c[C+(D*152|0)+44>>2]=d;if(B|0){j=(g[k>>2]=(u*+g[B+264>>2]+v*+g[B+268>>2]+w*+g[B+272>>2])*+g[B+544>>2],c[k>>2]|0);l=(g[k>>2]=(u*+g[B+280>>2]+v*+g[B+284>>2]+w*+g[B+288>>2])*+g[B+548>>2],c[k>>2]|0);m=(g[k>>2]=(u*+g[B+296>>2]+v*+g[B+300>>2]+w*+g[B+304>>2])*+g[B+552>>2],c[k>>2]|0)}else{j=0;l=0;m=0}c[C+(D*152|0)+80>>2]=j;c[C+(D*152|0)+84>>2]=l;c[C+(D*152|0)+88>>2]=m;g[C+(D*152|0)+92>>2]=0.0;if(o|0){n=+g[o+264>>2]*x+ +g[o+268>>2]*y+ +g[o+272>>2]*z;p=+g[o+280>>2]*x+ +g[o+284>>2]*y+ +g[o+288>>2]*z;q=+g[o+296>>2]*x+ +g[o+300>>2]*y+ +g[o+304>>2]*z}else{n=0.0;p=0.0;q=0.0}if(B|0){r=+g[B+264>>2]*u+ +g[B+268>>2]*v+ +g[B+272>>2]*w;s=u*+g[B+280>>2]+v*+g[B+284>>2]+w*+g[B+288>>2];t=u*+g[B+296>>2]+v*+g[B+300>>2]+w*+g[B+304>>2]}else{r=0.0;s=0.0;t=0.0}s=1.0/(n*x+p*y+q*z+0.0+(r*u+s*v+t*w));g[C+(D*152|0)+108>>2]=s;if(o|0){p=+g[b+(e*244|0)+192>>2];q=+g[b+(e*244|0)+196>>2];r=+g[b+(e*244|0)+200>>2];n=(+g[b+(e*244|0)+176>>2]+ +g[b+(e*244|0)+208>>2])*0.0+(+g[b+(e*244|0)+180>>2]+ +g[b+(e*244|0)+212>>2])*0.0+(+g[b+(e*244|0)+184>>2]+ +g[b+(e*244|0)+216>>2])*0.0}else{p=0.0;q=0.0;r=0.0;n=0.0}n=n+(p*x+q*y+r*z);if(!B){t=0.0;x=0.0;z=0.0;y=-0.0;u=t*u;x=x*v;x=u+x;z=z*w;z=x+z;z=y+z;z=n+z;z=0.0-z;z=s*z;f=C+(D*152|0)+112|0;g[f>>2]=z;f=C+(D*152|0)+116|0;g[f>>2]=0.0;A=-A;f=C+(D*152|0)+120|0;g[f>>2]=A;f=C+(D*152|0)+124|0;c[f>>2]=h;return}t=+g[b+(f*244|0)+192>>2];x=+g[b+(f*244|0)+196>>2];z=+g[b+(f*244|0)+200>>2];y=(+g[b+(f*244|0)+176>>2]+ +g[b+(f*244|0)+208>>2])*-0.0+(+g[b+(f*244|0)+180>>2]+ +g[b+(f*244|0)+212>>2])*-0.0+(+g[b+(f*244|0)+184>>2]+ +g[b+(f*244|0)+216>>2])*-0.0;u=t*u;x=x*v;x=u+x;z=z*w;z=x+z;z=y+z;z=n+z;z=0.0-z;z=s*z;f=C+(D*152|0)+112|0;g[f>>2]=z;f=C+(D*152|0)+116|0;g[f>>2]=0.0;A=-A;f=C+(D*152|0)+120|0;g[f>>2]=A;f=C+(D*152|0)+124|0;c[f>>2]=h;return}function Od(b,d){b=b|0;d=d|0;var e=0,f=0.0,h=0,j=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;n=i;i=i+32|0;c[b+236>>2]=2;c[b+312>>2]=0;c[b+312+4>>2]=0;c[b+312+8>>2]=0;c[b+312+12>>2]=0;c[b+312+16>>2]=0;c[b+312+20>>2]=0;c[b+312+24>>2]=0;c[b+312+28>>2]=0;c[b+544>>2]=1065353216;c[b+548>>2]=1065353216;c[b+552>>2]=1065353216;g[b+556>>2]=0.0;c[b+348>>2]=1065353216;c[b+352>>2]=1065353216;c[b+356>>2]=1065353216;e=b+360|0;h=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(h|0));c[b+412>>2]=0;c[b+412+4>>2]=0;c[b+412+8>>2]=0;c[b+412+12>>2]=0;c[b+412+16>>2]=0;c[b+412+20>>2]=0;c[b+412+24>>2]=0;c[b+412+28>>2]=0;f=+g[d+92>>2];m=+g[d+96>>2];g[n+20>>2]=f;g[n+16>>2]=m;g[n+12>>2]=0.0;g[n+8>>2]=1.0;c[b+444>>2]=c[(f<0.0?n+12|0:f>1.0?n+8|0:n+20|0)>>2];g[n+4>>2]=0.0;g[n>>2]=1.0;c[b+448>>2]=c[(m<0.0?n+4|0:m>1.0?n:n+16|0)>>2];c[b+472>>2]=c[d+112>>2];c[b+476>>2]=c[d+116>>2];e=c[d+4>>2]|0;c[b+480>>2]=e;c[b+608>>2]=0;c[b+612>>2]=0;a[b+452>>0]=a[d+120>>0]|0;c[b+456>>2]=c[d+124>>2];c[b+460>>2]=c[d+128>>2];c[b+464>>2]=c[d+132>>2];c[b+468>>2]=c[d+136>>2];if(!e){c[b+4>>2]=c[d+8>>2];c[b+4+4>>2]=c[d+8+4>>2];c[b+4+8>>2]=c[d+8+8>>2];c[b+4+12>>2]=c[d+8+12>>2];c[b+20>>2]=c[d+24>>2];c[b+20+4>>2]=c[d+24+4>>2];c[b+20+8>>2]=c[d+24+8>>2];c[b+20+12>>2]=c[d+24+12>>2];c[b+36>>2]=c[d+40>>2];c[b+36+4>>2]=c[d+40+4>>2];c[b+36+8>>2]=c[d+40+8>>2];c[b+36+12>>2]=c[d+40+12>>2];c[b+52>>2]=c[d+56>>2];c[b+52+4>>2]=c[d+56+4>>2];c[b+52+8>>2]=c[d+56+8>>2];c[b+52+12>>2]=c[d+56+12>>2];e=b+4|0;h=b+20|0;j=b+36|0;l=b+52|0}else{Cb[c[(c[e>>2]|0)+8>>2]&127](e,b+4|0);e=b+4|0;h=b+20|0;j=b+36|0;l=b+52|0}c[b+68>>2]=c[e>>2];c[b+68+4>>2]=c[e+4>>2];c[b+68+8>>2]=c[e+8>>2];c[b+68+12>>2]=c[e+12>>2];c[b+84>>2]=c[h>>2];c[b+84+4>>2]=c[h+4>>2];c[b+84+8>>2]=c[h+8>>2];c[b+84+12>>2]=c[h+12>>2];c[b+100>>2]=c[j>>2];c[b+100+4>>2]=c[j+4>>2];c[b+100+8>>2]=c[j+8>>2];c[b+100+12>>2]=c[j+12>>2];c[b+116>>2]=c[l>>2];c[b+116+4>>2]=c[l+4>>2];c[b+116+8>>2]=c[l+8>>2];c[b+116+12>>2]=c[l+12>>2];c[b+132>>2]=0;c[b+132+4>>2]=0;c[b+132+8>>2]=0;c[b+132+12>>2]=0;c[b+132+16>>2]=0;c[b+132+20>>2]=0;c[b+132+24>>2]=0;c[b+132+28>>2]=0;c[b+224>>2]=c[d+100>>2];c[b+232>>2]=c[d+104>>2];c[b+228>>2]=c[d+108>>2];Cb[c[(c[b>>2]|0)+12>>2]&127](b,c[d+72>>2]|0);e=c[5815]|0;c[5815]=e+1;c[b+508>>2]=e;f=+g[d>>2];e=c[b+204>>2]|0;if(f==0.0){c[b+204>>2]=e|1;m=0.0}else{c[b+204>>2]=e&-2;m=1.0/f}g[b+344>>2]=m;p=f*+g[b+384>>2];o=f*+g[b+388>>2];g[b+364>>2]=f*+g[b+380>>2];g[b+368>>2]=p;g[b+372>>2]=o;g[b+376>>2]=0.0;f=+g[d+76>>2];h=f!=0.0?(g[k>>2]=1.0/f,c[k>>2]|0):0;f=+g[d+80>>2];e=f!=0.0?(g[k>>2]=1.0/f,c[k>>2]|0):0;f=+g[d+84>>2];d=f!=0.0?(g[k>>2]=1.0/f,c[k>>2]|0):0;c[b+396>>2]=h;c[b+400>>2]=e;c[b+404>>2]=d;g[b+408>>2]=0.0;r=m*+g[b+352>>2];x=m*+g[b+356>>2];g[b+560>>2]=m*+g[b+348>>2];g[b+564>>2]=r;g[b+568>>2]=x;g[b+572>>2]=0.0;x=+g[b+4>>2];r=(c[k>>2]=h,+g[k>>2]);w=+g[b+8>>2];f=(c[k>>2]=e,+g[k>>2]);v=+g[b+12>>2];o=(c[k>>2]=d,+g[k>>2]);u=+g[b+20>>2];t=+g[b+24>>2];s=+g[b+28>>2];q=+g[b+36>>2];p=+g[b+40>>2];m=+g[b+44>>2];g[b+264>>2]=x*x*r+w*w*f+v*v*o;g[b+268>>2]=x*r*u+w*f*t+v*o*s;g[b+272>>2]=x*r*q+w*f*p+v*o*m;g[b+276>>2]=0.0;g[b+280>>2]=x*r*u+w*f*t+v*o*s;g[b+284>>2]=u*r*u+t*f*t+s*o*s;g[b+288>>2]=r*u*q+f*t*p+o*s*m;g[b+292>>2]=0.0;g[b+296>>2]=x*r*q+w*f*p+v*o*m;g[b+300>>2]=u*r*q+t*f*p+s*o*m;g[b+304>>2]=q*r*q+p*f*p+m*o*m;g[b+308>>2]=0.0;c[b+504>>2]=0;c[b+512>>2]=0;c[b+512+4>>2]=0;c[b+512+8>>2]=0;c[b+512+12>>2]=0;c[b+512+16>>2]=0;c[b+512+20>>2]=0;c[b+512+24>>2]=0;c[b+512+28>>2]=0;m=+g[b+344>>2];o=m*+g[b+352>>2];p=m*+g[b+356>>2];g[b+560>>2]=+g[b+348>>2]*m;g[b+564>>2]=o;g[b+568>>2]=p;e=b+572|0;h=e+36|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(h|0));i=n;return}function Pd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0;n=c[a+192>>2]|0;m=+Sb[c[(c[n>>2]|0)+48>>2]&15](n);n=c[a+712>>2]|0;if((n|0)>0){o=0;do{l=c[a+720>>2]|0;f=l+(o*104|0)+8|0;q=+g[f>>2];h=l+(o*104|0)+12|0;p=+g[h>>2];d=l+(o*104|0)+16|0;k=+g[d>>2];i=q*+g[b>>2]+p*+g[b+4>>2]+k*+g[b+8>>2]+ +g[b+48>>2];j=q*+g[b+16>>2]+p*+g[b+20>>2]+k*+g[b+24>>2]+ +g[b+52>>2];k=q*+g[b+32>>2]+p*+g[b+36>>2]+k*+g[b+40>>2]+ +g[b+56>>2];g[f>>2]=i;g[h>>2]=j;g[d>>2]=k;g[l+(o*104|0)+20>>2]=0.0;d=l+(o*104|0)+24|0;p=+g[d>>2];h=l+(o*104|0)+28|0;q=+g[h>>2];f=l+(o*104|0)+32|0;r=+g[f>>2];s=p*+g[b+16>>2]+q*+g[b+20>>2]+r*+g[b+24>>2]+ +g[b+52>>2];t=p*+g[b+32>>2]+q*+g[b+36>>2]+r*+g[b+40>>2]+ +g[b+56>>2];g[d>>2]=p*+g[b>>2]+q*+g[b+4>>2]+r*+g[b+8>>2]+ +g[b+48>>2];g[h>>2]=s;g[f>>2]=t;g[l+(o*104|0)+36>>2]=0.0;f=l+(o*104|0)+72|0;t=+g[f>>2];h=l+(o*104|0)+76|0;s=+g[h>>2];d=l+(o*104|0)+80|0;r=+g[d>>2];q=t*+g[b+16>>2]+s*+g[b+20>>2]+r*+g[b+24>>2];p=t*+g[b+32>>2]+s*+g[b+36>>2]+r*+g[b+40>>2];g[f>>2]=+g[b>>2]*t+ +g[b+4>>2]*s+ +g[b+8>>2]*r;g[h>>2]=q;g[d>>2]=p;g[l+(o*104|0)+84>>2]=0.0;l=c[l+(o*104|0)+96>>2]|0;d=hh(a+928|0,l)|0;a:do if(d){f=c[a+936>>2]|0;if((f|0)<=-1){d=c[a+928>>2]|0;break}if((f|0)>0){h=0;while(1){e=c[d+32>>2]|0;h=h+1|0;if(!e)break a;if((h|0)>=(f|0)){d=e;break}else d=e}}}else d=0;while(0);g[l>>2]=i-m;g[l+4>>2]=j-m;g[l+8>>2]=k-m;g[l+12>>2]=0.0;g[l+16>>2]=m+i;g[l+20>>2]=m+j;g[l+24>>2]=m+k;g[l+28>>2]=0.0;lf(a+928|0,d,l);o=o+1|0}while((o|0)!=(n|0))}Bg(a);d=c[a+928>>2]|0;if(d){o=c[a+192>>2]|0;r=+Sb[c[(c[o>>2]|0)+48>>2]&15](o);t=+g[d+4>>2]-r;s=+g[d+8>>2]-r;g[a+892>>2]=+g[d>>2]-r;g[a+896>>2]=t;g[a+900>>2]=s;g[a+904>>2]=0.0;s=r+ +g[d+20>>2];t=r+ +g[d+24>>2];g[a+908>>2]=r+ +g[d+16>>2];g[a+912>>2]=s;g[a+916>>2]=t;g[a+920>>2]=0.0;d=c[a+188>>2]|0;if(d|0){o=c[a+684>>2]|0;n=c[o+32>>2]|0;yb[c[(c[n>>2]|0)+16>>2]&31](n,d,a+892|0,a+908|0,c[o+36>>2]|0)}}else{c[a+892>>2]=0;c[a+892+4>>2]=0;c[a+892+8>>2]=0;c[a+892+12>>2]=0;c[a+892+16>>2]=0;c[a+892+20>>2]=0;c[a+892+24>>2]=0;c[a+892+28>>2]=0}f=c[a+732>>2]|0;if((f|0)<=0){eg(a);o=a+1148|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=a+1164|0;n=b+16|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];o=a+1180|0;n=b+32|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];a=a+1196|0;b=b+48|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];return}d=c[a+740>>2]|0;e=0;do{n=c[d+(e*52|0)+8>>2]|0;o=c[d+(e*52|0)+12>>2]|0;r=+g[n+8>>2]-+g[o+8>>2];s=+g[n+12>>2]-+g[o+12>>2];t=+g[n+16>>2]-+g[o+16>>2];t=+O(+(r*r+s*s+t*t));g[d+(e*52|0)+16>>2]=t;g[d+(e*52|0)+28>>2]=t*t;e=e+1|0}while((e|0)!=(f|0));d=c[a+740>>2]|0;e=0;do{g[d+(e*52|0)+24>>2]=(+g[(c[d+(e*52|0)+8>>2]|0)+88>>2]+ +g[(c[d+(e*52|0)+12>>2]|0)+88>>2])/+g[(c[d+(e*52|0)+4>>2]|0)+4>>2];e=e+1|0}while((e|0)!=(f|0));eg(a);o=a+1148|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];o=a+1164|0;n=b+16|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];o=a+1180|0;n=b+32|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];a=a+1196|0;b=b+48|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];return}function Qd(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,h=0,j=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0;F=i;i=i+96|0;d=c[a+216>>2]|0;if(+g[d+4>>2]==0.0){E=0;i=F;return E|0}E=c[b>>2]|0;if(!(Zb[c[(c[d>>2]|0)+8>>2]&31](d,c[E+188>>2]|0)|0)){E=1;i=F;return E|0}b=c[E+192>>2]|0;D=c[a+216>>2]|0;if((c[b+4>>2]|0)!=32){c[F+32>>2]=0;c[F+32+4>>2]=b;c[F+32+8>>2]=E;c[F+32+12>>2]=E+4;c[F+32+16>>2]=-1;c[F+32+20>>2]=-1;bd(a+68|0,a+132|0,F+32|0,D);E=1;i=F;return E|0}if((E|0)==0?1:(c[E+236>>2]|0)!=8){E=1;i=F;return E|0}if(c[E+752>>2]|0?(c[E+988>>2]|0)==0:0)gg(E);A=+g[a+180>>2]-+g[a+116>>2];B=+g[a+184>>2]-+g[a+120>>2];C=+g[a+188>>2]-+g[a+124>>2];b=c[E+988>>2]|0;if(!b){q=c[E+752>>2]|0;if((q|0)>0){p=c[E+760>>2]|0;f=1.0;d=0;r=0;b=-1;l=1065353216;h=0;do{I=c[p+(r*44|0)+8>>2]|0;H=c[p+(r*44|0)+12>>2]|0;G=c[p+(r*44|0)+16>>2]|0;e=+Mh(a+116|0,A,B,C,+g[I+8>>2],+g[I+12>>2],+g[I+16>>2],+g[H+8>>2],+g[H+12>>2],+g[H+16>>2],+g[G+8>>2],+g[G+12>>2],+g[G+16>>2],f);if(e>0.0){f=e;d=d+1|0;b=r;l=(g[k>>2]=e,c[k>>2]|0);h=3}r=r+1|0}while((r|0)!=(q|0))}else{d=0;b=-1;l=1065353216;h=0}}else{c[F+32>>2]=3220;c[F+32+4>>2]=c[a+116>>2];c[F+32+4+4>>2]=c[a+116+4>>2];c[F+32+4+8>>2]=c[a+116+8>>2];c[F+32+4+12>>2]=c[a+116+12>>2];g[F+32+36>>2]=A;g[F+32+40>>2]=B;g[F+32+44>>2]=C;g[F+32+48>>2]=0.0;c[F+32+20>>2]=c[a+180>>2];c[F+32+20+4>>2]=c[a+180+4>>2];c[F+32+20+8>>2]=c[a+180+8>>2];c[F+32+20+12>>2]=c[a+180+12>>2];c[F+32+52>>2]=1065353216;c[F+32+56>>2]=0;c[F+32+60>>2]=0;ff(b,a+116|0,a+180|0,F+32|0);b=c[F+32+56>>2]|0;if(!b){d=0;b=-1;l=1065353216;h=0}else{d=1;b=(b-(c[E+760>>2]|0)|0)/44|0;l=c[F+32+52>>2]|0;h=3}}r=c[E+772>>2]|0;if((r|0)>0){q=c[E+780>>2]|0;f=(c[k>>2]=l,+g[k>>2]);p=0;do{I=c[q+(p*104|0)+8>>2]|0;x=+g[I+8>>2];y=+g[I+12>>2];z=+g[I+16>>2];I=c[q+(p*104|0)+12>>2]|0;o=+g[I+8>>2];s=+g[I+12>>2];t=+g[I+16>>2];I=c[q+(p*104|0)+16>>2]|0;u=+g[I+8>>2];v=+g[I+12>>2];w=+g[I+16>>2];e=+Mh(a+116|0,A,B,C,x,y,z,o,s,t,u,v,w,f);if(e>0.0){f=e;d=d+1|0;b=p;l=(g[k>>2]=e,c[k>>2]|0);h=4}I=c[q+(p*104|0)+20>>2]|0;j=+g[I+8>>2];m=+g[I+12>>2];n=+g[I+16>>2];e=+Mh(a+116|0,A,B,C,x,y,z,o,s,t,j,m,n,f);if(e>0.0){f=e;d=d+1|0;b=p;l=(g[k>>2]=e,c[k>>2]|0);h=4}e=+Mh(a+116|0,A,B,C,o,s,t,u,v,w,j,m,n,f);if(e>0.0){f=e;d=d+1|0;b=p;l=(g[k>>2]=e,c[k>>2]|0);h=4}e=+Mh(a+116|0,A,B,C,x,y,z,u,v,w,j,m,n,f);if(e>0.0){f=e;d=d+1|0;b=p;l=(g[k>>2]=e,c[k>>2]|0);h=4}p=p+1|0}while((p|0)!=(r|0))}if(!d){I=1;i=F;return I|0}if(!((c[k>>2]=l,+g[k>>2])<=+g[D+4>>2])){I=1;i=F;return I|0}c[F+32>>2]=0;c[F+32+4>>2]=b;m=+g[a+180>>2]-+g[a+116>>2];n=+g[a+184>>2]-+g[a+120>>2];o=+g[a+188>>2]-+g[a+124>>2];e=1.0/+O(+(m*m+n*n+o*o));if((h|0)==3){d=c[E+748+12>>2]|0;e=+g[d+(b*44|0)+20>>2];j=+g[d+(b*44|0)+24>>2];f=+g[d+(b*44|0)+28>>2];if(m*e+n*j+o*f>0.0){m=-e;j=-j;f=-f;e=0.0}else{m=e;e=+g[d+(b*44|0)+32>>2]}}else{m=-(m*e);j=-(n*e);f=-(o*e);e=0.0}c[F>>2]=E;c[F+4>>2]=F+32;g[F+8>>2]=m;g[F+12>>2]=j;g[F+16>>2]=f;g[F+20>>2]=e;c[F+24>>2]=l;+_b[c[(c[D>>2]|0)+12>>2]&15](D,F,1);I=1;i=F;return I|0}function Rd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0;m=i;i=i+400|0;f=c[d+36>>2]|0;d=c[e+36>>2]|0;e=c[b+24>>2]|0;if(((e|0)==(c[b+28>>2]|0)?c[e+1132>>2]|0:0)?(k=(_(c[d+380>>2]|0,c[e+1112>>2]|0)|0)+(c[f+380>>2]|0)|0,a[(c[e+1140>>2]|0)+k>>0]|0):0){c[5802]=(c[5802]|0)+1;i=m;return}c[m+344+4>>2]=35;c[m+344+8>>2]=0;c[m+344+12>>2]=1065353216;c[m+344+16>>2]=1065353216;c[m+344+20>>2]=1065353216;g[m+344+24>>2]=0.0;c[m+344>>2]=3436;c[m+344+52>>2]=f;g[m+344+44>>2]=0.0;c[m+288+4>>2]=35;c[m+288+8>>2]=0;c[m+288+12>>2]=1065353216;c[m+288+16>>2]=1065353216;c[m+288+20>>2]=1065353216;g[m+288+24>>2]=0.0;c[m+288>>2]=3436;c[m+288+52>>2]=d;g[m+288+44>>2]=0.0;if((a[22456]|0)==0?Wa(22456)|0:0){if((a[22464]|0)==0?Wa(22464)|0:0){c[5698]=1065353216;c[5699]=0;c[5700]=0;c[5701]=0;c[5702]=0;c[5703]=1065353216;c[5704]=0;c[5705]=0;c[5706]=0;c[5707]=0;c[5708]=1065353216;g[5709]=0.0;_a(22464)}c[5710]=c[5698];c[5711]=c[5699];c[5712]=c[5700];c[5713]=c[5701];c[5714]=c[5702];c[5715]=c[5703];c[5716]=c[5704];c[5717]=c[5705];c[5718]=c[5706];c[5719]=c[5707];c[5720]=c[5708];c[5721]=c[5709];c[5722]=0;c[5723]=0;c[5724]=0;c[5725]=0;_a(22456)}if((a[22456]|0)==0?Wa(22456)|0:0){if((a[22464]|0)==0?Wa(22464)|0:0){c[5698]=1065353216;c[5699]=0;c[5700]=0;c[5701]=0;c[5702]=0;c[5703]=1065353216;c[5704]=0;c[5705]=0;c[5706]=0;c[5707]=0;c[5708]=1065353216;g[5709]=0.0;_a(22464)}c[5710]=c[5698];c[5711]=c[5699];c[5712]=c[5700];c[5713]=c[5701];c[5714]=c[5702];c[5715]=c[5703];c[5716]=c[5704];c[5717]=c[5705];c[5718]=c[5706];c[5719]=c[5707];c[5720]=c[5708];c[5721]=c[5709];c[5722]=0;c[5723]=0;c[5724]=0;c[5725]=0;_a(22456)}o=+g[f+232>>2]-+g[d+232>>2];n=+g[f+236>>2]-+g[d+236>>2];g[m>>2]=+g[f+228>>2]-+g[d+228>>2];g[m+4>>2]=o;g[m+8>>2]=n;g[m+12>>2]=0.0;if(!(!(Jd(m+344|0,22840,m+288|0,22840,m,m+232|0)|0)?!(Pc(m+344|0,22840,m+288|0,22840,m,m+232|0,0)|0):0))h=18;if((h|0)==18?(k=m+16+4|0,a[m+16+152>>0]=0,c[k>>2]=0,c[k+4>>2]=0,c[k+8>>2]=0,c[k+12>>2]=0,c[k+16>>2]=0,c[k+20>>2]=0,c[m+16>>2]=3256,jd(b,m+232|0,f,0,0,d,0,0,m+16|0)|0):0){c[6435]=(c[6435]|0)+1;d=yc(235)|0;if(!d)k=0;else{c[(d+4+15&-16)+-4>>2]=d;k=d+4+15&-16}d=k+152|0;Tn(k|0,0,156)|0;c[k>>2]=3256;e=k+4|0;f=m+16+4|0;h=e+100|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));e=k+104|0;c[e>>2]=c[m+16+104>>2];c[e+4>>2]=c[m+16+104+4>>2];c[e+8>>2]=c[m+16+104+8>>2];c[e+12>>2]=c[m+16+104+12>>2];e=k+120|0;c[e>>2]=c[m+16+120>>2];c[e+4>>2]=c[m+16+120+4>>2];c[e+8>>2]=c[m+16+120+8>>2];c[e+12>>2]=c[m+16+120+12>>2];e=k+136|0;c[e>>2]=c[m+16+136>>2];c[e+4>>2]=c[m+16+136+4>>2];c[e+8>>2]=c[m+16+136+8>>2];c[e+12>>2]=c[m+16+136+12>>2];a[d>>0]=a[m+16+152>>0]|0;e=k+156|0;f=m+16+156|0;h=e+60|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));h=c[b+24>>2]|0;j=k;d=c[h+852>>2]|0;if((d|0)==(c[h+856>>2]|0)?(l=d|0?d<<1:1,(d|0)<(l|0)):0){if(!l)f=0;else{c[6435]=(c[6435]|0)+1;d=yc((l<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}f=d;d=c[h+852>>2]|0}if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[h+860>>2]|0)+(e<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}e=c[h+860>>2]|0;if(e){if(a[h+864>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[h+852>>2]|0}c[h+860>>2]=0}a[h+864>>0]=1;c[h+860>>2]=f;c[h+856>>2]=l}c[(c[h+860>>2]|0)+(d<<2)>>2]=j;c[h+852>>2]=d+1;j=c[b+24>>2]|0;l=c[b+28>>2]|0;n=+g[j+348>>2];o=+g[l+348>>2];b=k+64|0;g[b>>2]=+g[b>>2]*(n>o?n:o);b=k+68|0;g[b>>2]=+g[b>>2]*(+g[j+360>>2]+ +g[l+360>>2])*.5}i=m;return}function Sd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0;if(a[b+165>>0]|0){f=c[b+88>>2]|0;a:do if((f|0)>0&e){h=c[b+96>>2]|0;m=+g[d>>2];j=+g[d+4>>2];k=+g[d+8>>2];l=+g[b+168>>2];e=0;while(1){r=+g[h+(e<<4)>>2]-m;q=+g[h+(e<<4)+4>>2]-j;p=+g[h+(e<<4)+8>>2]-k;if(r*r+q*q+p*p<=l)break;e=e+1|0;if((e|0)>=(f|0))break a}return e|0}while(0);o=(c[b+32>>2]|0)+12|0;c[o>>2]=(c[o>>2]|0)+1;if((f|0)==(c[b+92>>2]|0)?(i=f|0?f<<1:1,(f|0)<(i|0)):0){if(!i)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((i<<4|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[b+88>>2]|0}if((f|0)>0){h=0;do{o=e+(h<<4)|0;n=(c[b+96>>2]|0)+(h<<4)|0;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2];c[o+12>>2]=c[n+12>>2];h=h+1|0}while((h|0)!=(f|0))}f=c[b+96>>2]|0;if(f|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=e;c[b+92>>2]=i;e=c[b+88>>2]|0}else e=f;o=(c[b+96>>2]|0)+(e<<4)|0;c[o>>2]=c[d>>2];c[o+4>>2]=c[d+4>>2];c[o+8>>2]=c[d+8>>2];c[o+12>>2]=c[d+12>>2];d=c[b+88>>2]|0;c[b+88>>2]=d+1;c[(c[b+32>>2]|0)+16>>2]=c[b+96>>2];return d|0}h=c[b+108>>2]|0;b:do if((h|0)>0&e){e=c[b+116>>2]|0;j=+g[d>>2];k=+g[d+4>>2];l=+g[d+8>>2];m=+g[b+168>>2];i=0;while(1){p=+g[e+(i<<2)>>2]-j;q=+g[e+(i+1<<2)>>2]-k;r=+g[e+(i+2<<2)>>2]-l;f=i+3|0;if(p*p+q*q+r*r<=m)break;if((f|0)<(h|0))i=f;else break b}d=(i|0)/3|0;return d|0}while(0);e=c[b+112>>2]|0;if((h|0)==(e|0)){n=h|0?h<<1:1;if((h|0)<(n|0)){if(!n)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[b+108>>2]|0}i=c[b+116>>2]|0;if((h|0)<=0)if(!i)f=b+120|0;else o=34;else{f=0;do{c[e+(f<<2)>>2]=c[i+(f<<2)>>2];f=f+1|0}while((f|0)!=(h|0));o=34}if((o|0)==34){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0)}c[b+116>>2]=0;f=b+120|0}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;f=c[b+108>>2]|0;h=n}else f=h}else{f=h;h=e}c[(c[b+116>>2]|0)+(f<<2)>>2]=c[d>>2];e=f+1|0;c[b+108>>2]=e;if((e|0)==(h|0)){n=h|0?h<<1:1;if((h|0)<(n|0)){if(!n)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[b+108>>2]|0}i=c[b+116>>2]|0;if((h|0)<=0)if(!i)f=b+120|0;else o=48;else{f=0;do{c[e+(f<<2)>>2]=c[i+(f<<2)>>2];f=f+1|0}while((f|0)!=(h|0));o=48}if((o|0)==48){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0)}c[b+116>>2]=0;f=b+120|0}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;e=c[b+108>>2]|0;h=n}else e=h}c[(c[b+116>>2]|0)+(e<<2)>>2]=c[d+4>>2];e=e+1|0;c[b+108>>2]=e;if((e|0)==(h|0)){n=h|0?h<<1:1;if((h|0)<(n|0)){if(!n)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((n<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[b+108>>2]|0}i=c[b+116>>2]|0;if((h|0)<=0)if(!i)f=b+120|0;else o=62;else{f=0;do{c[e+(f<<2)>>2]=c[i+(f<<2)>>2];f=f+1|0}while((f|0)!=(h|0));o=62}if((o|0)==62){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0)}c[b+116>>2]=0;f=b+120|0}a[f>>0]=1;c[b+116>>2]=e;c[b+112>>2]=n;e=c[b+108>>2]|0}else e=h}o=c[b+116>>2]|0;c[o+(e<<2)>>2]=c[d+8>>2];d=e+1|0;c[b+108>>2]=d;b=c[b+32>>2]|0;c[b+12>>2]=(c[b+12>>2]|0)+1;c[b+16>>2]=o;d=((d|0)/3|0)+-1|0;return d|0}function Td(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0;k=i;i=i+16|0;if(!(a[b+1308>>0]|0)){i=k;return}g[b+928>>2]=0.0;g[b+992>>2]=0.0;g[b+1056>>2]=0.0;c[b+712>>2]=0;c[b+712+4>>2]=0;c[b+712+8>>2]=0;c[b+712+12>>2]=0;sd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);Ab[c[(c[b>>2]|0)+44>>2]&255](b);e=+g[b+1284>>2];f=+g[b+1288>>2];h=+g[b+1292>>2];if(+g[b+696>>2]>=+g[b+680>>2]){l=(a[b+1300>>0]|0)==0;j=c[(l?b+1160|0:b+1096|0)>>2]|0;d=c[(l?b+1144|0:b+1080|0)>>2]|0;c[k>>2]=c[(l?b+1128|0:b+1064|0)>>2];c[k+4>>2]=d;c[k+8>>2]=j;g[k+12>>2]=0.0;Lh(c[b+28>>2]|0,c[b+32>>2]|0,b+176|0,k,e,f,h,e,f,h)}if(+g[b+700>>2]>=+g[b+684>>2]){d=(a[b+1300>>0]|0)==0;l=c[(d?b+1164|0:b+1100|0)>>2]|0;j=c[(d?b+1148|0:b+1084|0)>>2]|0;c[k>>2]=c[(d?b+1132|0:b+1068|0)>>2];c[k+4>>2]=j;c[k+8>>2]=l;g[k+12>>2]=0.0;Lh(c[b+28>>2]|0,c[b+32>>2]|0,b+260|0,k,e,f,h,e,f,h)}if(+g[b+704>>2]>=+g[b+688>>2]){d=(a[b+1300>>0]|0)==0;l=c[(d?b+1168|0:b+1104|0)>>2]|0;j=c[(d?b+1152|0:b+1088|0)>>2]|0;c[k>>2]=c[(d?b+1136|0:b+1072|0)>>2];c[k+4>>2]=j;c[k+8>>2]=l;g[k+12>>2]=0.0;Lh(c[b+28>>2]|0,c[b+32>>2]|0,b+344|0,k,e,f,h,e,f,h)}j=0;do{e=+g[b+868+(j<<6)>>2];f=+g[b+868+(j<<6)+4>>2];h=+ik(+g[b+1192+(j<<2)>>2],e,f);g[b+868+(j<<6)+52>>2]=h;do if(!(e>f)){if(e>h){c[b+868+(j<<6)+56>>2]=1;d=b+868+(j<<6)+48|0;g[d>>2]=h-e;if(h-e>3.1415927410125732){g[d>>2]=h-e+-6.2831854820251465;d=19;break}if(!(h-e<-3.1415927410125732)){d=19;break}g[d>>2]=h-e+6.2831854820251465;d=19;break}d=b+868+(j<<6)+56|0;if(!(f<h)){c[d>>2]=0;d=18;break}c[d>>2]=2;d=b+868+(j<<6)+48|0;g[d>>2]=h-f;if(h-f>3.1415927410125732){g[d>>2]=h-f+-6.2831854820251465;d=19;break}if(h-f<-3.1415927410125732){g[d>>2]=h-f+6.2831854820251465;d=19}else d=19}else{c[b+868+(j<<6)+56>>2]=0;d=18}while(0);if((d|0)==18?(d=0,a[b+868+(j<<6)+44>>0]|0):0)d=19;if((d|0)==19){K=b+1208+(j<<4)|0;c[k>>2]=c[K>>2];c[k+4>>2]=c[K+4>>2];c[k+8>>2]=c[K+8>>2];c[k+12>>2]=c[K+12>>2];K=b+428+(j*84|0)|0;d=c[b+28>>2]|0;J=+g[d+4>>2];I=+g[d+20>>2];H=+g[d+36>>2];F=+g[d+8>>2];E=+g[d+24>>2];D=+g[d+40>>2];B=+g[d+12>>2];A=+g[d+28>>2];z=+g[d+44>>2];l=c[b+32>>2]|0;x=+g[l+4>>2];w=+g[l+20>>2];v=+g[l+36>>2];t=+g[l+8>>2];s=+g[l+24>>2];r=+g[l+40>>2];p=+g[l+12>>2];n=+g[l+28>>2];e=+g[l+44>>2];c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;o=+g[k>>2];m=+g[k+4>>2];f=+g[k+8>>2];g[b+428+(j*84|0)+16>>2]=J*o+I*m+H*f;g[b+428+(j*84|0)+20>>2]=F*o+E*m+D*f;g[b+428+(j*84|0)+24>>2]=B*o+A*m+z*f;g[b+428+(j*84|0)+28>>2]=0.0;g[b+428+(j*84|0)+32>>2]=x*-o+w*-m+v*-f;g[b+428+(j*84|0)+36>>2]=t*-o+s*-m+r*-f;g[b+428+(j*84|0)+40>>2]=p*-o+n*-m+e*-f;g[b+428+(j*84|0)+44>>2]=0.0;G=(J*o+I*m+H*f)*+g[d+396>>2];C=(F*o+E*m+D*f)*+g[d+400>>2];y=(B*o+A*m+z*f)*+g[d+404>>2];g[b+428+(j*84|0)+48>>2]=G;g[b+428+(j*84|0)+52>>2]=C;g[b+428+(j*84|0)+56>>2]=y;g[b+428+(j*84|0)+60>>2]=0.0;u=(x*-o+w*-m+v*-f)*+g[l+396>>2];q=(t*-o+s*-m+r*-f)*+g[l+400>>2];h=(p*-o+n*-m+e*-f)*+g[l+404>>2];g[b+428+(j*84|0)+64>>2]=u;g[b+428+(j*84|0)+68>>2]=q;g[b+428+(j*84|0)+72>>2]=h;g[b+428+(j*84|0)+76>>2]=0.0;g[b+428+(j*84|0)+80>>2]=(J*o+I*m+H*f)*G+(F*o+E*m+D*f)*C+(B*o+A*m+z*f)*y+((x*-o+w*-m+v*-f)*u+(t*-o+s*-m+r*-f)*q+(p*-o+n*-m+e*-f)*h)}j=j+1|0}while((j|0)!=3);i=k;return}function Ud(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0;p=i;i=i+128|0;c[b+68>>2]=(c[b+68>>2]|0)+1;c[p>>2]=c[d>>2];c[p+4>>2]=c[d+4>>2];c[p+8>>2]=c[d+8>>2];c[p+12>>2]=c[d+12>>2];c[p+16>>2]=c[d+16>>2];c[p+16+4>>2]=c[d+16+4>>2];c[p+16+8>>2]=c[d+16+8>>2];c[p+16+12>>2]=c[d+16+12>>2];c[p+32>>2]=c[d+32>>2];c[p+32+4>>2]=c[d+32+4>>2];c[p+32+8>>2]=c[d+32+8>>2];c[p+32+12>>2]=c[d+32+12>>2];c[p+48>>2]=c[d+48>>2];c[p+48+4>>2]=c[d+48+4>>2];c[p+48+8>>2]=c[d+48+8>>2];c[p+48+12>>2]=c[d+48+12>>2];n=c[e+4>>2]|0;o=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);mc[c[(c[e>>2]|0)+8>>2]&127](e,d,p+112|0,p+96|0);f=+g[p+112>>2];if(+g[b+32>>2]>f)g[b+32>>2]=f;f=+g[p+96>>2];if(+g[b+48>>2]<f)g[b+48>>2]=f;f=+g[p+112+4>>2];if(+g[b+36>>2]>f)g[b+36>>2]=f;f=+g[p+96+4>>2];if(+g[b+52>>2]<f)g[b+52>>2]=f;f=+g[p+112+8>>2];if(+g[b+40>>2]>f)g[b+40>>2]=f;f=+g[p+96+8>>2];if(+g[b+56>>2]<f)g[b+56>>2]=f;l=c[b+64>>2]|0;if(!l){l=b+16|0;k=0}else{c[p+64>>2]=c[p+112>>2];c[p+64+4>>2]=c[p+112+4>>2];c[p+64+8>>2]=c[p+112+8>>2];c[p+64+12>>2]=c[p+112+12>>2];c[p+64+16>>2]=c[p+96>>2];c[p+64+16+4>>2]=c[p+96+4>>2];c[p+64+16+8>>2]=c[p+96+8>>2];c[p+64+16+12>>2]=c[p+96+12>>2];k=c[b+16>>2]|0;d=c[l+4>>2]|0;if(!d){c[6435]=(c[6435]|0)+1;d=yc(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}h=d;j=h+44|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(j|0))}else c[l+4>>2]=0;c[d+32>>2]=0;c[d+36>>2]=k;c[d+40>>2]=0;c[d>>2]=c[p+64>>2];c[d+4>>2]=c[p+64+4>>2];c[d+8>>2]=c[p+64+8>>2];c[d+12>>2]=c[p+64+12>>2];c[d+16>>2]=c[p+64+16>>2];c[d+20>>2]=c[p+64+20>>2];c[d+24>>2]=c[p+64+24>>2];c[d+28>>2]=c[p+64+28>>2];lf(l,c[l>>2]|0,d);c[l+12>>2]=(c[l+12>>2]|0)+1;l=b+16|0;k=d}d=c[l>>2]|0;if((d|0)==(c[b+20>>2]|0)?(m=d|0?d<<1:1,(d|0)<(m|0)):0){if(!m)j=0;else{c[6435]=(c[6435]|0)+1;d=yc((m*80|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}j=d;d=c[l>>2]|0}if((d|0)>0){h=0;do{q=j+(h*80|0)|0;r=c[b+24>>2]|0;s=r+(h*80|0)|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=j+(h*80|0)+16|0;s=r+(h*80|0)+16|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=j+(h*80|0)+32|0;s=r+(h*80|0)+32|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=j+(h*80|0)+48|0;s=r+(h*80|0)+48|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];q=j+(h*80|0)+64|0;r=r+(h*80|0)+64|0;c[q>>2]=c[r>>2];c[q+4>>2]=c[r+4>>2];c[q+8>>2]=c[r+8>>2];c[q+12>>2]=c[r+12>>2];h=h+1|0}while((h|0)!=(d|0))}d=c[b+24>>2]|0;if(d|0){if(a[b+28>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=j;c[b+20>>2]=m;d=c[l>>2]|0}s=c[b+24>>2]|0;r=s+(d*80|0)|0;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];c[r+12>>2]=c[p+12>>2];r=s+(d*80|0)+16|0;c[r>>2]=c[p+16>>2];c[r+4>>2]=c[p+16+4>>2];c[r+8>>2]=c[p+16+8>>2];c[r+12>>2]=c[p+16+12>>2];r=s+(d*80|0)+32|0;c[r>>2]=c[p+32>>2];c[r+4>>2]=c[p+32+4>>2];c[r+8>>2]=c[p+32+8>>2];c[r+12>>2]=c[p+32+12>>2];r=s+(d*80|0)+48|0;c[r>>2]=c[p+48>>2];c[r+4>>2]=c[p+48+4>>2];c[r+8>>2]=c[p+48+8>>2];c[r+12>>2]=c[p+48+12>>2];s=s+(d*80|0)+64|0;c[s>>2]=e;c[s+4>>2]=n;g[s+8>>2]=o;c[s+12>>2]=k;c[l>>2]=(c[l>>2]|0)+1;i=p;return}function Vd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;while(1){p=(b+d|0)/2|0;m=c[a+12>>2]|0;n=c[m+(p<<4)>>2]|0;o=c[m+(p<<4)+4>>2]|0;p=c[m+(p<<4)+8>>2]|0;e=b;f=d;while(1){a:do if(!n)while(1){j=c[m+(e<<4)>>2]|0;if(!j)g=-1;else g=c[j+12>>2]|0;k=c[m+(e<<4)+4>>2]|0;if(!k)h=-1;else h=c[k+12>>2]|0;if(!o)i=-1;else i=c[o+12>>2]|0;do if((g|0)<=-1){g=(h|0)>(i|0);if(g|(j|0)==0^1)if((j|0)==0&g)break;else break a;if((k|0)!=(o|0))break a;if((c[m+(e<<4)+8>>2]|0)>>>0<=p>>>0)break a}while(0);e=e+1|0}else{l=c[n+12>>2]|0;if(!o)while(1){i=c[m+(e<<4)>>2]|0;if(!i)g=-1;else g=c[i+12>>2]|0;j=c[m+(e<<4)+4>>2]|0;if(!j)h=-1;else h=c[j+12>>2]|0;do if((g|0)<=(l|0)){g=(h|0)>-1;if(g|(i|0)==(n|0)^1)if((i|0)==(n|0)&g)break;else break a;if(j|0)break a;if((c[m+(e<<4)+8>>2]|0)>>>0<=p>>>0)break a}while(0);e=e+1|0}k=c[o+12>>2]|0;while(1){i=c[m+(e<<4)>>2]|0;if(!i)g=-1;else g=c[i+12>>2]|0;j=c[m+(e<<4)+4>>2]|0;if(!j)h=-1;else h=c[j+12>>2]|0;do if((g|0)<=(l|0)){g=(h|0)>(k|0);if(g|(i|0)==(n|0)^1)if((i|0)==(n|0)&g)break;else break a;if((j|0)!=(o|0))break a;if((c[m+(e<<4)+8>>2]|0)>>>0<=p>>>0)break a}while(0);e=e+1|0}}while(0);b:do if(!n)while(1){j=c[m+(f<<4)>>2]|0;if(!j)g=-1;else g=c[j+12>>2]|0;if(!o)h=-1;else h=c[o+12>>2]|0;k=c[m+(f<<4)+4>>2]|0;if(!k)i=-1;else i=c[k+12>>2]|0;do if((g|0)>=-1){g=(h|0)>(i|0);if(g|(j|0)==0^1)if((j|0)==0&g)break;else break b;if((o|0)!=(k|0))break b;if(p>>>0<=(c[m+(f<<4)+8>>2]|0)>>>0)break b}while(0);f=f+-1|0}else{l=c[n+12>>2]|0;if(!o)while(1){i=c[m+(f<<4)>>2]|0;if(!i)g=-1;else g=c[i+12>>2]|0;j=c[m+(f<<4)+4>>2]|0;if(!j)h=-1;else h=c[j+12>>2]|0;do if((l|0)<=(g|0)){g=(h|0)<-1;if(g|(n|0)==(i|0)^1)if((n|0)==(i|0)&g)break;else break b;if(j|0)break b;if(p>>>0<=(c[m+(f<<4)+8>>2]|0)>>>0)break b}while(0);f=f+-1|0}k=c[o+12>>2]|0;while(1){i=c[m+(f<<4)>>2]|0;if(!i)g=-1;else g=c[i+12>>2]|0;j=c[m+(f<<4)+4>>2]|0;if(!j)h=-1;else h=c[j+12>>2]|0;do if((l|0)<=(g|0)){g=(k|0)>(h|0);if(g|(n|0)==(i|0)^1)if((n|0)==(i|0)&g)break;else break b;if((o|0)!=(j|0))break b;if(p>>>0<=(c[m+(f<<4)+8>>2]|0)>>>0)break b}while(0);f=f+-1|0}}while(0);if((e|0)<=(f|0)){h=m+(e<<4)|0;i=c[h>>2]|0;j=c[m+(e<<4)+4>>2]|0;k=c[m+(e<<4)+8>>2]|0;l=c[m+(e<<4)+12>>2]|0;m=m+(f<<4)|0;c[h>>2]=c[m>>2];c[h+4>>2]=c[m+4>>2];c[h+8>>2]=c[m+8>>2];c[h+12>>2]=c[m+12>>2];m=c[a+12>>2]|0;c[m+(f<<4)>>2]=i;c[m+(f<<4)+4>>2]=j;c[m+(f<<4)+8>>2]=k;c[m+(f<<4)+12>>2]=l;e=e+1|0;f=f+-1|0}if((e|0)>(f|0))break;m=c[a+12>>2]|0}if((f|0)>(b|0))Vd(a,b,f);if((e|0)<(d|0))b=e;else break}return}function Wd(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0;D=i;i=i+16|0;li(11054);C=c[a+712>>2]|0;if((C|0)>0){c[6435]=(c[6435]|0)+1;d=yc((C<<4|3)+16|0)|0;if(!d)h=0;else{c[(d+4+15&-16)+-4>>2]=d;h=d+4+15&-16}d=0;do{B=h+(d<<4)|0;d=d+1|0;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0}while((d|0)!=(C|0));f=c[a+712>>2]|0;if((f|0)>0){c[6435]=(c[6435]|0)+1;d=yc((f<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Tn(d|0,0,f<<2|0)|0;B=h;A=d}else{B=h;A=0}}else{B=0;A=0}s=c[a+1112>>2]|0;if(b){if((s|0)>0){h=c[a+1120>>2]|0;j=0;do{d=c[h+(j<<2)>>2]|0;f=c[d+312>>2]|0;if(f|0){g[d+276>>2]=1.0/+(f|0)*+g[d+276>>2];g[d+280>>2]=1.0/+(f|0)*+g[d+280>>2];g[d+284>>2]=1.0/+(f|0)*+g[d+284>>2];g[d+292>>2]=+g[d+292>>2]*(1.0/+(f|0));g[d+296>>2]=1.0/+(f|0)*+g[d+296>>2];g[d+300>>2]=1.0/+(f|0)*+g[d+300>>2]}j=j+1|0}while((j|0)!=(s|0));j=13}}else j=13;if((j|0)==13?(s|0)>0:0){l=c[a+1120>>2]|0;if(b){b=0;do{d=c[l+(b<<2)>>2]|0;if((c[d+312>>2]|0)>0?(y=+g[a+452>>2],t=+g[d+276>>2]*y,u=y*+g[d+280>>2],v=y*+g[d+284>>2],w=y*+g[d+292>>2],x=y*+g[d+296>>2],y=y*+g[d+300>>2],z=c[d+24>>2]|0,(z|0)>0):0){f=c[d+32>>2]|0;h=c[a+720>>2]|0;j=c[d+12>>2]|0;k=0;do{r=c[f+(k<<2)>>2]|0;q=+g[j+(k<<2)>>2];p=+g[r+8>>2]-+g[d+228>>2];o=+g[r+12>>2]-+g[d+232>>2];n=+g[r+16>>2]-+g[d+236>>2];E=B+(((r-h|0)/104|0)<<4)|0;g[E>>2]=+g[E>>2]+q*(t+(x*n-y*o));E=B+(((r-h|0)/104|0)<<4)+4|0;g[E>>2]=+g[E>>2]+q*(u+(y*p-w*n));E=B+(((r-h|0)/104|0)<<4)+8|0;g[E>>2]=q*(v+(w*o-x*p))+ +g[E>>2];r=A+(((r-h|0)/104|0)<<2)|0;g[r>>2]=q+ +g[r>>2];k=k+1|0}while((k|0)!=(z|0))}b=b+1|0}while((b|0)!=(s|0))}else{b=0;do{d=c[l+(b<<2)>>2]|0;if((c[d+308>>2]|0)>0?(q=+g[a+452>>2],e=+g[d+244>>2]*q,m=q*+g[d+248>>2],n=q*+g[d+252>>2],o=q*+g[d+260>>2],p=q*+g[d+264>>2],q=q*+g[d+268>>2],r=c[d+24>>2]|0,(r|0)>0):0){f=c[d+32>>2]|0;h=c[a+720>>2]|0;j=c[d+12>>2]|0;k=0;do{E=c[f+(k<<2)>>2]|0;y=+g[j+(k<<2)>>2];x=+g[E+8>>2]-+g[d+228>>2];w=+g[E+12>>2]-+g[d+232>>2];v=+g[E+16>>2]-+g[d+236>>2];z=B+(((E-h|0)/104|0)<<4)|0;g[z>>2]=+g[z>>2]+y*(e+(p*v-q*w));z=B+(((E-h|0)/104|0)<<4)+4|0;g[z>>2]=+g[z>>2]+y*(m+(q*x-o*v));z=B+(((E-h|0)/104|0)<<4)+8|0;g[z>>2]=y*(n+(o*w-p*x))+ +g[z>>2];E=A+(((E-h|0)/104|0)<<2)|0;g[E>>2]=y+ +g[E>>2];k=k+1|0}while((k|0)!=(r|0))}b=b+1|0}while((b|0)!=(s|0))}}if((C|0)>0){d=0;do{e=+g[A+(d<<2)>>2];if(e>0.0){E=c[a+720>>2]|0;x=1.0/e*+g[B+(d<<4)+4>>2];y=1.0/e*+g[B+(d<<4)+8>>2];z=E+(d*104|0)+8|0;g[z>>2]=1.0/e*+g[B+(d<<4)>>2]+ +g[z>>2];z=E+(d*104|0)+12|0;g[z>>2]=x+ +g[z>>2];E=E+(d*104|0)+16|0;g[E>>2]=y+ +g[E>>2]}d=d+1|0}while((d|0)!=(C|0))}if(A|0){c[6436]=(c[6436]|0)+1;hd(c[A+-4>>2]|0)}if(B|0){c[6436]=(c[6436]|0)+1;hd(c[B+-4>>2]|0)}d=c[2357]|0;E=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=E;if(E|0){i=D;return}do if(c[d+4>>2]|0){tb(D|0,0)|0;E=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[D+4>>2]|0)-(c[E+4>>2]|0)+(((c[D>>2]|0)-(c[E>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=D;return}}while(0);c[2357]=c[d+20>>2];i=D;return}function Xd(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var l=0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0;C=i;i=i+304|0;B=+g[e+48>>2]-+g[d+48>>2];z=+g[e+52>>2]-+g[d+52>>2];A=+g[e+56>>2]-+g[d+56>>2];Gf(d,e,C+288|0,C+240|0);v=+g[C+240>>2];t=+g[C+288>>2]*v;u=v*+g[C+288+4>>2];v=v*+g[C+288+8>>2];g[C+208>>2]=t;g[C+208+4>>2]=u;g[C+208+8>>2]=v;g[C+208+12>>2]=0.0;w=+g[h+48>>2]-+g[f+48>>2];x=+g[h+52>>2]-+g[f+52>>2];y=+g[h+56>>2]-+g[f+56>>2];Gf(f,h,C+288|0,C+240|0);r=+g[C+240>>2];p=+g[C+288>>2]*r;q=r*+g[C+288+4>>2];r=r*+g[C+288+8>>2];g[C+192>>2]=p;g[C+192+4>>2]=q;g[C+192+8>>2]=r;g[C+192+12>>2]=0.0;e=c[b+12>>2]|0;s=+Sb[c[(c[e>>2]|0)+16>>2]&15](e);e=c[b+16>>2]|0;if(!e)m=0.0;else m=+Sb[c[(c[e>>2]|0)+16>>2]&15](e);s=s*+O(+(t*t+u*u+v*v))+m*+O(+(p*p+q*q+r*r));if(s+ +O(+((w-B)*(w-B)+(x-z)*(x-z)+(y-A)*(y-A)))==0.0){j=0;i=C;return j|0}c[C+240>>2]=9160;g[C+240+36>>2]=999999984306749440.0;a[C+240+40>>0]=0;Ld(b,d,f,C+240|0);h=(a[C+240+40>>0]|0)==0;c[C+288>>2]=c[C+240+20>>2];c[C+288+4>>2]=c[C+240+20+4>>2];c[C+288+8>>2]=c[C+240+20+8>>2];c[C+288+12>>2]=c[C+240+20+12>>2];a:do if(!h?(o=c[C+240+4>>2]|0,l=c[C+240+8>>2]|0,n=c[C+240+12>>2]|0,v=(w-B)*(c[k>>2]=o,+g[k>>2]),v=v+(x-z)*(c[k>>2]=l,+g[k>>2]),!(s+(v+(y-A)*(c[k>>2]=n,+g[k>>2]))<=1.1920928955078125e-07)):0){m=+g[C+240+16>>2];p=+g[C+240+36>>2]+ +g[j+172>>2];b:do if(p>1.0000000474974513e-03){q=p;r=0.0;h=0;while(1){e=c[j+168>>2]|0;if(e|0){D=c[(c[e>>2]|0)+20>>2]|0;c[C+224>>2]=1065353216;c[C+224+4>>2]=1065353216;c[C+224+8>>2]=1065353216;g[C+224+12>>2]=0.0;Fb[D&7](e,C+288|0,.20000000298023224,C+224|0)}m=(w-B)*(c[k>>2]=o,+g[k>>2]);m=m+(x-z)*(c[k>>2]=l,+g[k>>2]);m=s+(m+(y-A)*(c[k>>2]=n,+g[k>>2]));if(m<=1.1920928955078125e-07){l=0;break a}p=r+q/m;if(!(!(p<=r)&(!(p<0.0)&!(p>1.0)))){l=0;break a}Zg(d,B,z,A,C+208|0,p,C+112|0);Zg(f,w,x,y,C+192|0,p,C+48|0);l=c[j+168>>2]|0;if(l|0){D=c[(c[l>>2]|0)+20>>2]|0;c[C+176>>2]=1065353216;c[C+176+4>>2]=0;c[C+176+8>>2]=0;g[C+176+12>>2]=0.0;Fb[D&7](l,C+112+48|0,.20000000298023224,C+176|0)}zb[c[c[j>>2]>>2]&31](j,p);c[C>>2]=9160;g[C+36>>2]=999999984306749440.0;a[C+40>>0]=0;Ld(b,C+112|0,C+48|0,C);if(!(a[C+40>>0]|0)){l=15;break}m=+g[C+36>>2];q=+g[j+172>>2];c[C+288>>2]=c[C+20>>2];c[C+288+4>>2]=c[C+20+4>>2];c[C+288+8>>2]=c[C+20+8>>2];c[C+288+12>>2]=c[C+20+12>>2];e=h+1|0;if((h|0)>63){l=16;break}n=c[C+12>>2]|0;l=c[C+8>>2]|0;o=c[C+4>>2]|0;q=m+q;if(!(q>1.0000000474974513e-03)){m=+g[C+16>>2];break b}else{r=p;h=e}}if((l|0)==15)ic[c[(c[j>>2]|0)+8>>2]&127](j,-1,h);else if((l|0)==16)ic[c[(c[j>>2]|0)+8>>2]&127](j,-2,e);l=0;break a}else p=0.0;while(0);g[j+164>>2]=p;c[j+132>>2]=o;c[j+136>>2]=l;c[j+140>>2]=n;g[j+144>>2]=m;c[j+148>>2]=c[C+288>>2];c[j+148+4>>2]=c[C+288+4>>2];c[j+148+8>>2]=c[C+288+8>>2];c[j+148+12>>2]=c[C+288+12>>2];l=1}else l=0;while(0);D=l;i=C;return D|0}function Yd(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0.0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0;c[a+556>>2]=c[b>>2];c[a+556+4>>2]=c[b+4>>2];c[a+556+8>>2]=c[b+8>>2];c[a+556+12>>2]=c[b+12>>2];q=+g[a+568>>2];r=+g[a+560>>2];s=+g[a+564>>2];p=+g[a+556>>2];d=-p-r*0.0-s*0.0;e=(s+q*0.0-p*0.0)*-s+(q*(q+r*0.0-s*0.0)+d*-p)-(q*0.0+p*0.0-r)*-r;f=(q*0.0+p*0.0-r)*-p+(q*(s+q*0.0-p*0.0)+d*-r)-(q+r*0.0-s*0.0)*-s;d=(q+r*0.0-s*0.0)*-r+(d*-s+q*(q*0.0+p*0.0-r))-(s+q*0.0-p*0.0)*-p;if(d*0.0+(f*0.0+e)<-.9999998807907104){j=-0.0;l=1.0;d=0.0;e=0.0}else{B=+O(+((d*0.0+(f*0.0+e)+1.0)*2.0));j=(d*0.0-f*0.0)*(1.0/B);l=(e*0.0-d)*(1.0/B);d=(f-e*0.0)*(1.0/B);e=B*.5}z=1.0/+O(+(e*e+(j*j+l*l+d*d)));j=j*z;n=(g[k>>2]=j,c[k>>2]|0);w=l*z;t=d*z;v=(g[k>>2]=t,c[k>>2]|0);d=e*z;u=(g[k>>2]=d,c[k>>2]|0);e=1.0/+O(+((d*q-p*-j-r*-w-s*-t)*(d*q-p*-j-r*-w-s*-t)+((q*-t+d*s+r*-j-p*-w)*(q*-t+d*s+r*-j-p*-w)+((p*d+q*-j+s*-w-r*-t)*(p*d+q*-j+s*-w-r*-t)+(p*-t+(q*-w+d*r)-s*-j)*(p*-t+(q*-w+d*r)-s*-j)))));z=(p*d+q*-j+s*-w-r*-t)*e;i=(g[k>>2]=z,c[k>>2]|0);A=e*(p*-t+(q*-w+d*r)-s*-j);b=(g[k>>2]=A,c[k>>2]|0);B=e*(q*-t+d*s+r*-j-p*-w);h=(g[k>>2]=B,c[k>>2]|0);p=e*(d*q-p*-j-r*-w-s*-t);e=+g[a+444>>2];m=(g[k>>2]=e,c[k>>2]|0);if(e>=.05000000074505806?(x=+g[a+448>>2],x>=.05000000074505806):0){d=d<-1.0?-1.0:d;d=+T(+(d>1.0?1.0:d))*2.0;if(d>1.1920928955078125e-07){f=1.0/+O(+(t*t+(j*j+w*w)));if(+N(+(w*f))>1.1920928955078125e-07){x=+O(+((t*f*t*f/(w*f*w*f)+1.0)/(1.0/(x*x)+t*f*t*f/(w*f*w*f)/(e*e))));j=j*f;l=w*f;f=t*f;m=(g[k>>2]=x,c[k>>2]|0)}else{j=j*f;l=w*f;f=t*f}}else{j=0.0;l=0.0;f=0.0;m=0}if(+N(+d)>1.1920928955078125e-07){e=(c[k>>2]=m,+g[k>>2]);if(!(d>e)){if(d<-e)d=-e}else d=e;x=d*.5;w=+R(+x)/+O(+(j*j+l*l+f*f));x=+Q(+x);y=(g[k>>2]=j*w,c[k>>2]|0);v=(g[k>>2]=f*w,c[k>>2]|0);w=l*w;u=(g[k>>2]=x,c[k>>2]|0)}else y=n}else y=n;d=+g[a+452>>2];if(d>=.05000000074505806){e=p<-1.0?-1.0:p;e=+T(+(e>1.0?1.0:e))*2.0;if(e>3.1415927410125732){o=(g[k>>2]=-z,c[k>>2]|0);n=(g[k>>2]=-A,c[k>>2]|0);e=-p<-1.0?-1.0:-p;m=(g[k>>2]=-B,c[k>>2]|0);e=+T(+(e>1.0?1.0:e))*2.0}else{o=i;n=b;m=h}f=(c[k>>2]=o,+g[k>>2]);j=(c[k>>2]=n,+g[k>>2]);l=(c[k>>2]=m,+g[k>>2]);if(e>1.1920928955078125e-07){B=1.0/+O(+(f*f+j*j+l*l));o=(g[k>>2]=f*B,c[k>>2]|0);n=(g[k>>2]=j*B,c[k>>2]|0);m=(g[k>>2]=l*B,c[k>>2]|0)}if(+N(+e)>1.1920928955078125e-07){if(!(e>d))if(e<-d)d=-d;else d=e;x=(c[k>>2]=o,+g[k>>2]);z=(c[k>>2]=n,+g[k>>2]);A=(c[k>>2]=m,+g[k>>2]);d=d*.5;B=+R(+d)/+O(+(A*A+(z*z+x*x)));d=+Q(+d);i=(g[k>>2]=x*B,c[k>>2]|0);b=(g[k>>2]=z*B,c[k>>2]|0);h=(g[k>>2]=A*B,c[k>>2]|0)}else d=p}else d=p;s=(c[k>>2]=u,+g[k>>2]);x=(c[k>>2]=i,+g[k>>2]);t=(c[k>>2]=y,+g[k>>2]);B=(c[k>>2]=h,+g[k>>2]);A=(c[k>>2]=v,+g[k>>2]);z=(c[k>>2]=b,+g[k>>2]);g[a+556>>2]=w*B+(s*x+t*d)-A*z;g[a+560>>2]=A*x+(s*z+w*d)-t*B;g[a+564>>2]=t*z+(s*B+A*d)-w*x;g[a+568>>2]=s*d-t*x-w*z-A*B;return}function Zd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=5224;c[6435]=(c[6435]|0)+1;e=yc(379)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}g[e+308>>2]=9.999999747378752e-05;f=e+332|0;a[f>>0]=a[f>>0]&-16;c[b+24>>2]=e;f=(c[d+20>>2]|0)==0;c[6435]=(c[6435]|0)+1;e=yc(23)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}if(f){c[e>>2]=9072;c[b+28>>2]=e;f=b+28|0}else{c[e>>2]=9120;c[b+28>>2]=e;f=b+28|0}c[6435]=(c[6435]|0)+1;e=yc(43)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}k=c[b+24>>2]|0;l=c[f>>2]|0;a[e+4>>0]=0;c[e>>2]=6032;c[e+16>>2]=0;c[e+20>>2]=3;c[e+12>>2]=k;c[e+8>>2]=l;c[b+32>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5256;c[b+36>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5276;c[b+40>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5296;c[b+44>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5316;c[b+48>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5336;c[b+52>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5356;c[b+56>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5376;c[b+60>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5396;c[b+76>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e>>2]=5396;c[b+80>>2]=e;a[e+4>>0]=1;c[6435]=(c[6435]|0)+1;e=yc(27)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5416;c[b+72>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(35)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}a[e+4>>0]=0;c[e>>2]=5436;c[e+8>>2]=1;c[e+12>>2]=0;c[b+88>>2]=e;c[6435]=(c[6435]|0)+1;e=yc(35)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e>>2]=5436;c[e+8>>2]=1;c[e+12>>2]=0;c[b+84>>2]=e;a[e+4>>0]=1;l=c[d+16>>2]|0;l=(l|0)>80?l:80;e=c[d>>2]|0;if(!e){a[b+12>>0]=1;c[6435]=(c[6435]|0)+1;e=yc(39)|0;if(!e)k=0;else{c[(e+4+15&-16)+-4>>2]=e;k=e+4+15&-16}e=c[d+8>>2]|0;c[k>>2]=772;f=k+4|0;c[f>>2]=e;c[6435]=(c[6435]|0)+1;e=yc((e*772|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[k+16>>2]=e;c[k+12>>2]=e;f=c[f>>2]|0;c[k+8>>2]=f;if(f+-1|0){h=c[k>>2]|0;i=f+-1|0;j=e;do{m=j;j=j+h|0;c[m>>2]=j;i=i+-1|0}while((i|0)!=0);e=e+(_(h,f+-1|0)|0)|0}c[e>>2]=0;c[b+8>>2]=k}else{a[b+12>>0]=0;c[b+8>>2]=e}e=c[d+4>>2]|0;if(e|0){a[b+20>>0]=0;c[b+16>>2]=e;return}a[b+20>>0]=1;c[6435]=(c[6435]|0)+1;e=yc(39)|0;if(!e)k=0;else{c[(e+4+15&-16)+-4>>2]=e;k=e+4+15&-16}e=c[d+12>>2]|0;c[k>>2]=l;f=k+4|0;c[f>>2]=e;e=_(e,l)|0;c[6435]=(c[6435]|0)+1;e=yc(e+19|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[k+16>>2]=e;c[k+12>>2]=e;f=c[f>>2]|0;c[k+8>>2]=f;if(f+-1|0){h=c[k>>2]|0;i=f+-1|0;j=e;do{m=j;j=j+h|0;c[m>>2]=j;i=i+-1|0}while((i|0)!=0);e=e+(_(h,f+-1|0)|0)|0}c[e>>2]=0;c[b+16>>2]=k;return}function _d(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0;D=i;i=i+80|0;B=+g[e+4>>2];C=+g[e+20>>2];o=+g[e+36>>2];p=+g[e+8>>2];q=+g[e+24>>2];r=+g[e+40>>2];s=+g[e+12>>2];t=+g[e+28>>2];u=+g[e+44>>2];v=-+g[e+52>>2];w=-+g[e+56>>2];x=-+g[e+60>>2];l=c[b+720>>2]|0;y=+g[l+(d*104|0)+8>>2];z=+g[l+(d*104|0)+12>>2];A=+g[l+(d*104|0)+16>>2];a:do if(f){f=c[b+268>>2]|0;b:do if((f|0)>0){k=c[b+276>>2]|0;j=0;while(1){if((c[k+(j<<2)>>2]|0)==(e|0))break;j=j+1|0;if((j|0)>=(f|0))break b}if((j|0)!=(f|0)){f=l;break a}}while(0);if((f|0)==(c[b+272>>2]|0)?(m=f|0?f<<1:1,(f|0)<(m|0)):0){if(!m)k=0;else{c[6435]=(c[6435]|0)+1;f=yc((m<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}k=f;f=c[b+268>>2]|0}if((f|0)>0){j=0;do{c[k+(j<<2)>>2]=c[(c[b+276>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(f|0))}j=c[b+276>>2]|0;if(j){if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);f=c[b+268>>2]|0}c[b+276>>2]=0}a[b+280>>0]=1;c[b+276>>2]=k;c[b+272>>2]=m}c[(c[b+276>>2]|0)+(f<<2)>>2]=e;c[b+268>>2]=f+1;f=c[b+720>>2]|0}else f=l;while(0);l=f+(d*104|0)|0;f=f+(d*104|0)+100|0;a[f>>0]=a[f>>0]|1;f=c[b+792>>2]|0;if((f|0)==(c[b+796>>2]|0)?(n=f|0?f<<1:1,(f|0)<(n|0)):0){if(!n)k=0;else{c[6435]=(c[6435]|0)+1;f=yc(n*96|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}k=f;f=c[b+792>>2]|0}if((f|0)>0){j=0;do{d=k+(j*96|0)|0;m=c[b+800>>2]|0;E=m+(j*96|0)|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];c[d+16>>2]=c[E+16>>2];c[d+20>>2]=c[E+20>>2];c[d+24>>2]=c[E+24>>2];d=k+(j*96|0)+28|0;E=m+(j*96|0)+28|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];d=k+(j*96|0)+44|0;E=m+(j*96|0)+44|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];d=k+(j*96|0)+60|0;E=m+(j*96|0)+60|0;c[d>>2]=c[E>>2];c[d+4>>2]=c[E+4>>2];c[d+8>>2]=c[E+8>>2];c[d+12>>2]=c[E+12>>2];d=k+(j*96|0)+76|0;m=m+(j*96|0)+76|0;c[d>>2]=c[m>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];c[d+16>>2]=c[m+16>>2];j=j+1|0}while((j|0)!=(f|0))}f=c[b+800>>2]|0;if(f|0){if(a[b+804>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+800>>2]=0}a[b+804>>0]=1;c[b+800>>2]=k;c[b+796>>2]=n;f=c[b+792>>2]|0}E=c[b+800>>2]|0;c[E+(f*96|0)>>2]=l;g[E+(f*96|0)+4>>2]=B*v+C*w+o*x+(B*y+C*z+o*A);g[E+(f*96|0)+8>>2]=p*v+q*w+r*x+(p*y+q*z+r*A);g[E+(f*96|0)+12>>2]=s*v+t*w+u*x+(s*y+t*z+u*A);g[E+(f*96|0)+16>>2]=0.0;c[E+(f*96|0)+20>>2]=e;g[E+(f*96|0)+24>>2]=h;e=E+(f*96|0)+28|0;c[e>>2]=c[D+56>>2];c[e+4>>2]=c[D+56+4>>2];c[e+8>>2]=c[D+56+8>>2];c[e+12>>2]=c[D+56+12>>2];e=E+(f*96|0)+44|0;c[e>>2]=c[D+40>>2];c[e+4>>2]=c[D+40+4>>2];c[e+8>>2]=c[D+40+8>>2];c[e+12>>2]=c[D+40+12>>2];e=E+(f*96|0)+60|0;c[e>>2]=c[D+24>>2];c[e+4>>2]=c[D+24+4>>2];c[e+8>>2]=c[D+24+8>>2];c[e+12>>2]=c[D+24+12>>2];E=E+(f*96|0)+76|0;c[E>>2]=c[D>>2];c[E+4>>2]=c[D+4>>2];c[E+8>>2]=c[D+8>>2];c[E+12>>2]=c[D+12>>2];c[E+16>>2]=c[D+16>>2];c[b+792>>2]=(c[b+792>>2]|0)+1;i=D;return}function $d(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0;E=i;i=i+64|0;A=+g[b+48>>2]-+g[b+112>>2];h=+g[b+52>>2]-+g[b+116>>2];D=+g[b+56>>2]-+g[b+120>>2];B=A*+g[b+64>>2]+h*+g[b+80>>2]+D*+g[b+96>>2];C=A*+g[b+68>>2]+h*+g[b+84>>2]+D*+g[b+100>>2];D=A*+g[b+72>>2]+h*+g[b+88>>2]+D*+g[b+104>>2];e=c[a+8>>2]|0;z=c[a+4>>2]|0;h=+g[z+28>>2]*+g[z+12>>2];A=h+ +g[a+12>>2];p=+g[e+72>>2];q=+g[e+56>>2];r=+g[e+76>>2];s=+g[e+60>>2];t=+g[e+80>>2];u=+g[e+64>>2];v=+g[e+88>>2];w=+g[e+92>>2];x=+g[e+96>>2];k=(r-s)*(x-u)-(t-u)*(w-s);m=(t-u)*(v-q)-(p-q)*(x-u);o=(p-q)*(w-s)-(r-s)*(v-q);n=1.0/+O(+(o*o+(k*k+m*m)));j=(B-q)*n*k+(C-s)*n*m+n*o*(D-u);if(j<0.0){y=-j;l=-(n*k);j=-(n*m);k=-(n*o)}else{y=j;l=n*k;j=n*m;k=n*o}if(!(y<A)){i=E;return}o=(D-u)*((p-q)*j-(r-s)*l)+((B-q)*((r-s)*k-(t-u)*j)+(C-s)*((t-u)*l-(p-q)*k));t=(D-t)*((v-p)*j-(w-r)*l)+((B-p)*((w-r)*k-(x-t)*j)+(C-r)*((x-t)*l-(v-p)*k));x=(D-x)*((q-v)*j-(s-w)*l)+((B-v)*((s-w)*k-(u-x)*j)+(C-w)*((u-x)*l-(q-v)*k));if(!(x>0.0&(o>0.0&t>0.0))?!(x<=0.0&(o<=0.0&t<=0.0)):0){if((Eb[c[(c[e>>2]|0)+100>>2]&127](e)|0)<=0){i=E;return}s=0.0;r=0.0;q=0.0;e=0;z=0;do{F=c[a+8>>2]|0;mc[c[(c[F>>2]|0)+104>>2]&127](F,z,E+48|0,E+32|0);m=+g[E+48>>2];w=+g[E+48+4>>2];u=+g[E+48+8>>2];n=+g[E+32>>2]-m;x=+g[E+32+4>>2]-w;v=+g[E+32+8>>2]-u;do if((B-m)*n+(C-w)*x+(D-u)*v>0.0)if((B-m)*n+(C-w)*x+(D-u)*v<n*n+x*x+v*v){y=((B-m)*n+(C-w)*x+(D-u)*v)/(n*n+x*x+v*v);o=B-m-n*y;p=C-w-x*y;t=D-u-v*y;break}else{o=B-m-n;p=C-w-x;t=D-u-v;y=1.0;break}else{o=B-m;p=C-w;t=D-u;y=0.0}while(0);if(o*o+p*p+t*t<A*A){s=m+n*y;r=u+v*y;q=w+x*y;e=1}z=z+1|0;F=c[a+8>>2]|0}while((z|0)<(Eb[c[(c[F>>2]|0)+100>>2]&127](F)|0));if(!(e&1)){i=E;return}else p=A*A}else{p=A*A;s=B-y*l;r=D-y*k;q=C-y*j}n=B-s;o=C-q;m=D-r;if(!(n*n+o*o+m*m<p)){i=E;return}if(n*n+o*o+m*m>1.1920928955078125e-07){j=+O(+(n*n+o*o+m*m));h=h-j;l=n*(1.0/j);k=m*(1.0/j);j=o*(1.0/j)}h=-h;if(f){x=+g[b+64>>2];y=+g[b+68>>2];A=+g[b+72>>2];B=x*l+y*j+A*k;o=+g[b+80>>2];p=+g[b+84>>2];t=+g[b+88>>2];C=l*o+j*p+k*t;u=+g[b+96>>2];v=+g[b+100>>2];w=+g[b+104>>2];D=l*u+j*v+k*w;g[E+48>>2]=-B;g[E+48+4>>2]=-C;g[E+48+8>>2]=-D;g[E+48+12>>2]=0.0;C=s*o+q*p+r*t+ +g[b+116>>2]+C*h;D=s*u+q*v+r*w+ +g[b+120>>2]+D*h;g[E+32>>2]=s*x+q*y+r*A+ +g[b+112>>2]+B*h;g[E+32+4>>2]=C;g[E+32+8>>2]=D;g[E+32+12>>2]=0.0;hc[c[(c[d>>2]|0)+16>>2]&15](d,E+48|0,E+32|0,h);i=E;return}else{F=c[(c[d>>2]|0)+16>>2]|0;y=+g[b+64>>2];A=+g[b+68>>2];B=+g[b+72>>2];u=+g[b+80>>2];v=+g[b+84>>2];C=+g[b+88>>2];w=+g[b+96>>2];x=+g[b+100>>2];D=+g[b+104>>2];g[E+16>>2]=y*l+A*j+B*k;g[E+16+4>>2]=l*u+j*v+k*C;g[E+16+8>>2]=l*w+j*x+k*D;g[E+16+12>>2]=0.0;C=s*u+q*v+r*C+ +g[b+116>>2];D=s*w+q*x+r*D+ +g[b+120>>2];g[E>>2]=s*y+q*A+r*B+ +g[b+112>>2];g[E+4>>2]=C;g[E+8>>2]=D;g[E+12>>2]=0.0;hc[F&15](d,E+16|0,E,h);i=E;return}}function ae(b){b=b|0;var d=0.0,e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0;r=i;i=i+80|0;if((Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(q=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(Eb[c[(c[q>>2]|0)+48>>2]&127](q)|0)&8|0):0)?(e=c[b+24>>2]|0,e=Eb[c[(c[e>>2]|0)+36>>2]&127](e)|0,c[r+64>>2]=1065353216,c[r+64+4>>2]=1065353216,c[r+64+8>>2]=0,g[r+64+12>>2]=0.0,(e|0)>0):0){j=0;do{f=c[b+24>>2]|0;f=Zb[c[(c[f>>2]|0)+40>>2]&31](f,j)|0;h=c[f+748>>2]|0;if((h|0)>0){k=0;do{q=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;Bb[c[(c[q>>2]|0)+32>>2]&0](q,f+4+(k*184|0)+32|0,f+4+(k*184|0)+64|0,+g[f+4+(k*184|0)+80>>2],c[f+4+(k*184|0)+148>>2]|0,r+64|0);k=k+1|0}while((k|0)!=(h|0))}j=j+1|0}while((j|0)!=(e|0))}if(!(Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0)){i=r;return}q=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;if(!((Eb[c[(c[q>>2]|0)+48>>2]&127](q)|0)&3)){i=r;return}if((c[b+8>>2]|0)<=0){i=r;return}h=r+64+4|0;j=r+64+8|0;k=r+64+12|0;q=0;do{f=c[(c[b+16>>2]|0)+(q<<2)>>2]|0;if(!(c[f+204>>2]&32)){if(Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(e=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(Eb[c[(c[e>>2]|0)+48>>2]&127](e)|0)&1|0):0){c[r+64>>2]=1065353216;c[h>>2]=1065353216;c[j>>2]=1065353216;g[k>>2]=0.0;switch(c[f+216>>2]|0){case 1:{c[r+64>>2]=1065353216;c[h>>2]=1065353216;c[j>>2]=1065353216;g[k>>2]=0.0;break}case 2:{c[r+64>>2]=0;c[h>>2]=1065353216;c[j>>2]=0;g[k>>2]=0.0;break}case 3:{c[r+64>>2]=0;c[h>>2]=1065353216;c[j>>2]=1065353216;g[k>>2]=0.0;break}case 4:{c[r+64>>2]=1065353216;c[h>>2]=0;c[j>>2]=0;g[k>>2]=0.0;break}case 5:{c[r+64>>2]=1065353216;c[h>>2]=1065353216;c[j>>2]=0;g[k>>2]=0.0;break}default:{c[r+64>>2]=1065353216;c[h>>2]=0;c[j>>2]=0;g[k>>2]=0.0}}mc[c[(c[b>>2]|0)+28>>2]&127](b,f+4|0,c[f+192>>2]|0,r+64|0)}e=c[b+72>>2]|0;if(e|0?(Eb[c[(c[e>>2]|0)+48>>2]&127](e)|0)&2|0:0){c[r+32>>2]=1065353216;c[r+32+4>>2]=0;c[r+32+8>>2]=0;g[r+32+12>>2]=0.0;e=c[f+192>>2]|0;mc[c[(c[e>>2]|0)+8>>2]&127](e,f+4|0,r+64|0,r+48|0);g[r+64>>2]=+g[r+64>>2]+-.019999999552965164;g[r+64+4>>2]=+g[r+64+4>>2]+-.019999999552965164;g[r+64+8>>2]=+g[r+64+8>>2]+-.019999999552965164;g[r+48>>2]=+g[r+48>>2]+.019999999552965164;g[r+48+4>>2]=+g[r+48+4>>2]+.019999999552965164;g[r+48+8>>2]=+g[r+48+8>>2]+.019999999552965164;do if((a[b+44>>0]|0?(c[f+236>>2]|0)==2:0)?(c[f+204>>2]&3|0)==0:0){e=c[f+192>>2]|0;mc[c[(c[e>>2]|0)+8>>2]&127](e,f+68|0,r+16|0,r);d=+g[r+16>>2]+-.019999999552965164;g[r+16>>2]=d;l=+g[r+16+4>>2]+-.019999999552965164;g[r+16+4>>2]=l;m=+g[r+16+8>>2]+-.019999999552965164;g[r+16+8>>2]=m;n=+g[r>>2]+.019999999552965164;g[r>>2]=n;o=+g[r+4>>2]+.019999999552965164;g[r+4>>2]=o;p=+g[r+8>>2]+.019999999552965164;g[r+8>>2]=p;if(d<+g[r+64>>2])g[r+64>>2]=d;if(l<+g[r+64+4>>2])g[r+64+4>>2]=l;if(m<+g[r+64+8>>2])g[r+64+8>>2]=m;d=+g[r+16+12>>2];if(d<+g[r+64+12>>2])g[r+64+12>>2]=d;if(+g[r+48>>2]<n)g[r+48>>2]=n;if(+g[r+48+4>>2]<o)g[r+48+4>>2]=o;if(+g[r+48+8>>2]<p)g[r+48+8>>2]=p;d=+g[r+12>>2];if(!(+g[r+48+12>>2]<d))break;g[r+48+12>>2]=d}while(0);f=c[b+72>>2]|0;mc[c[(c[f>>2]|0)+52>>2]&127](f,r+64|0,r+48|0,r+32|0)}}q=q+1|0}while((q|0)<(c[b+8>>2]|0));i=r;return}function be(b,d,e,f,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0;if((j|0)<2|(k|0)<2){n=0;return n|0}y=_(k,j)|0;c[6435]=(c[6435]|0)+1;b=yc(y>>>0>268435455?18:(y<<4|3)+16|0)|0;if(!b)t=0;else{c[(b+4+15&-16)+-4>>2]=b;t=b+4+15&-16}o=y>>>0>1073741823?-1:y<<2;o=(o|0)==0?1:o;while(1){q=yc(o)|0;if(q|0)break;b=c[6564]|0;c[6564]=b+0;if(!b){p=8;break}jc[b&3]()}if((p|0)==8){n=Ya(4)|0;c[n>>2]=9640;pb(n|0,2800,251)}if((k|0)>0?(j|0)>0:0){p=0;do{z=+(p|0)/+(k+-1|0);r=+g[e>>2];r=r+z*(+g[h>>2]-r);s=+g[e+4>>2];s=s+z*(+g[h+4>>2]-s);u=+g[e+8>>2];u=u+z*(+g[h+8>>2]-u);v=+g[f>>2];w=+g[f+4>>2];x=+g[f+8>>2];b=_(p,j)|0;v=v+z*(+g[i>>2]-v)-r;w=w+z*(+g[i+4>>2]-w)-s;x=x+z*(+g[i+8>>2]-x)-u;o=0;do{z=+(o|0)/+(j+-1|0);A=o+b|0;g[t+(A<<4)>>2]=r+v*z;g[t+(A<<4)+4>>2]=s+w*z;g[t+(A<<4)+8>>2]=u+x*z;g[t+(A<<4)+12>>2]=0.0;g[q+(A<<2)>>2]=1.0;o=o+1|0}while((o|0)!=(j|0));p=p+1|0}while((p|0)!=(k|0))}c[6435]=(c[6435]|0)+1;b=yc(1271)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}Kc(b,d,y,t,q);if(l&1|0){g[(c[b+720>>2]|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&2|0){g[(c[b+720>>2]|0)+((j+-1|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&4|0){A=_(k+-1|0,j)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&8|0){A=j+-1+(_(k+-1|0,j)|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&16|0){g[(c[b+720>>2]|0)+(((j+-1|0)/2|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&32|0){A=_((k+-1|0)/2|0,j)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&64|0){A=j+-1+(_((k+-1|0)/2|0,j)|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&128|0){A=(_(k+-1|0,j)|0)+((j+-1|0)/2|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&256|0){A=(_((k+-1|0)/2|0,j)|0)+((j+-1|0)/2|0)|0;g[(c[b+720>>2]|0)+(A*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(t|0){c[6436]=(c[6436]|0)+1;hd(c[t+-4>>2]|0)}hd(q);if((k|0)<=0){A=b;return A|0}y=j+-1|0;d=0;o=0;while(1){p=d;d=d+1|0;a:do if((j|0)>0){t=_(p,j)|0;i=_(d,j)|0;s=1.0/+(k+-1|0)*+(k+-1-p|0);r=1.0/+(k+-1|0)*+(k+-2-p|0);if((d|0)<(k|0)){f=0;h=o}else{if((j|0)>1){q=1;p=0}else break;while(1){Rf(b,p+t|0,q+t|0,0,0);p=q+1|0;if((p|0)==(j|0))break a;else{A=q;q=p;p=A}}}while(1){p=f+1|0;q=f+t|0;e=f+i|0;if((f|0)==(j+-1|0))break;Rf(b,q,p+t|0,0,0);Rf(b,q,e,0,0);Zf(b,q,e,p+i|0,0);if(!n)Zf(b,p+i|0,p+t|0,q,0);else{z=1.0/+(j+-1|0)*+(f|0);g[n+(h<<2)>>2]=z;g[n+(h+1<<2)>>2]=s;g[n+(h+2<<2)>>2]=z;g[n+(h+3<<2)>>2]=r;x=1.0/+(j+-1|0)*+(p|0);g[n+(h+4<<2)>>2]=x;g[n+(h+5<<2)>>2]=r;Zf(b,p+i|0,p+t|0,q,0);g[n+(h+6<<2)>>2]=x;g[n+(h+7<<2)>>2]=r;g[n+(h+8<<2)>>2]=x;g[n+(h+9<<2)>>2]=s;g[n+(h+10<<2)>>2]=z;g[n+(h+11<<2)>>2]=s}if(m)Rf(b,q,p+i|0,0,0);f=p;h=h+12|0}Rf(b,y,e,0,0);o=(j*12|0)+-12+o|0}while(0);if((d|0)==(k|0))break;else y=y+j|0}return b|0}function ce(b,d,e,f,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;i=i+288|0;c[w+208>>2]=c[d>>2];c[w+208+4>>2]=c[d+4>>2];c[w+208+8>>2]=c[d+8>>2];c[w+208+12>>2]=c[d+12>>2];o=w+208+16|0;c[o>>2]=c[e>>2];c[o+4>>2]=c[e+4>>2];c[o+8>>2]=c[e+8>>2];c[o+12>>2]=c[e+12>>2];e=w+208+32|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];r=c[k>>2]|0;t=c[k+4>>2]|0;u=c[k+8>>2]|0;v=c[k+16>>2]|0;q=c[k+12>>2]|0;p=c[k+20>>2]|0;c[w>>2]=c[w+208>>2];c[w+4>>2]=c[w+208+4>>2];c[w+8>>2]=c[w+208+8>>2];c[w+12>>2]=c[w+208+12>>2];c[w+16>>2]=c[o>>2];c[w+16+4>>2]=c[o+4>>2];c[w+16+8>>2]=c[o+8>>2];c[w+16+12>>2]=c[o+12>>2];c[w+32>>2]=c[e>>2];c[w+32+4>>2]=c[e+4>>2];c[w+32+8>>2]=c[e+8>>2];c[w+32+12>>2]=c[e+12>>2];e=c[b+136>>2]|0;if((e|0)==(c[b+140>>2]|0)?(s=e|0?e<<1:1,(e|0)<(s|0)):0){if(!s)d=0;else{c[6435]=(c[6435]|0)+1;d=yc((s*284|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=c[b+136>>2]|0}if((e|0)>0){k=0;do{f=c[b+144>>2]|0;m=d+(k*284|0)|0;n=f+(k*284|0)|0;o=m+92|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));m=d+(k*284|0)+92|0;n=f+(k*284|0)+92|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(k*284|0)+108|0;n=f+(k*284|0)+108|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(k*284|0)+124|0;n=f+(k*284|0)+124|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(k*284|0)+140|0;n=f+(k*284|0)+140|0;c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];c[m+12>>2]=c[n+12>>2];m=d+(k*284|0)+156|0;n=f+(k*284|0)+156|0;o=m+128|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));k=k+1|0}while((k|0)!=(e|0))}e=c[b+144>>2]|0;if(e|0){if(a[b+148>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+144>>2]=0}a[b+148>>0]=1;c[b+144>>2]=d;c[b+140>>2]=s;e=c[b+136>>2]|0}d=c[b+144>>2]|0;m=d+(e*284|0)|0;n=w+48|0;o=m+92|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));m=d+(e*284|0)+92|0;c[m>>2]=c[w+192>>2];c[m+4>>2]=c[w+192+4>>2];c[m+8>>2]=c[w+192+8>>2];c[m+12>>2]=c[w+192+12>>2];m=d+(e*284|0)+108|0;c[m>>2]=c[w+176>>2];c[m+4>>2]=c[w+176+4>>2];c[m+8>>2]=c[w+176+8>>2];c[m+12>>2]=c[w+176+12>>2];m=d+(e*284|0)+124|0;c[m>>2]=c[w+160>>2];c[m+4>>2]=c[w+160+4>>2];c[m+8>>2]=c[w+160+8>>2];c[m+12>>2]=c[w+160+12>>2];m=d+(e*284|0)+140|0;c[m>>2]=c[w+144>>2];c[m+4>>2]=c[w+144+4>>2];c[m+8>>2]=c[w+144+8>>2];c[m+12>>2]=c[w+144+12>>2];d=d+(e*284|0)+156|0;m=d;n=w;o=m+48|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));g[d+48>>2]=h;c[d+52>>2]=q;g[d+56>>2]=j;c[d+60>>2]=r;c[d+64>>2]=t;c[d+68>>2]=u;c[d+72>>2]=v;g[d+76>>2]=0.0;g[d+80>>2]=0.0;g[d+84>>2]=0.0;g[d+88>>2]=.10000000149011612;c[d+92>>2]=p;g[d+96>>2]=0.0;g[d+100>>2]=0.0;a[d+104>>0]=l&1;m=d+105|0;n=w+256|0;o=m+23|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(o|0));l=c[b+136>>2]|0;c[b+136>>2]=l+1;l=(c[b+144>>2]|0)+(l*284|0)|0;Tg(c[b+116>>2]|0,l,0);Ae(c[b+116>>2]|0,c[b+144>>2]|0,(c[b+136>>2]|0)+-1|0,0);i=w;return l|0}function de(a,d,f,h,j){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;I=i;i=i+16|0;c[d+16>>2]=c[f>>2];c[d+16+4>>2]=c[f+4>>2];c[d+16+8>>2]=c[f+8>>2];c[d+16+12>>2]=c[f+12>>2];c[d+32>>2]=c[h>>2];c[d+32+4>>2]=c[h+4>>2];c[d+32+8>>2]=c[h+8>>2];c[d+32+12>>2]=c[h+12>>2];D=c[a+60>>2]|0;E=c[d+12>>2]&65535;Bj(a,I+6|0,+g[f>>2],+g[f+4>>2],+g[f+8>>2],0);Bj(a,I,+g[h>>2],+g[h+4>>2],+g[h+8>>2],1);H=0;do{t=b[D+(E<<6)+48+(H<<1)>>1]|0;w=b[D+(E<<6)+54+(H<<1)>>1]|0;q=b[I+6+(H<<1)>>1]|0;l=a+68+(H<<2)|0;s=c[l>>2]|0;m=(q&65535)-(e[s+((t&65535)<<2)>>1]|0)|0;r=b[I+(H<<1)>>1]|0;y=(r&65535)-(e[s+((w&65535)<<2)>>1]|0)|0;b[s+((t&65535)<<2)>>1]=q;b[s+((w&65535)<<2)>>1]=r;if((m|0)<0)wh(a,H,t);a:do if((y|0)>0?(z=c[l>>2]|0,A=c[a+60>>2]|0,B=e[z+((w&65535)<<2)+2>>1]|0,C=b[z+((w&65535)<<2)+6>>1]|0,C<<16>>16):0){n=1<<H&3;o=A+(B<<6)+54+(H<<1)|0;k=C;r=z+((w&65535)<<2)|0;do{s=r;r=r+4|0;p=b[r>>1]|0;if((e[s>>1]|0)<(p&65535))break a;q=c[a+60>>2]|0;k=k&65535;if(!(p&1)){if(((((e[A+(B<<6)+54+(n<<1)>>1]|0)>=(e[q+(k<<6)+48+(n<<1)>>1]|0)?(e[q+(k<<6)+54+(n<<1)>>1]|0)>=(e[A+(B<<6)+48+(n<<1)>>1]|0):0)?(e[A+(B<<6)+54+((1<<n&3)<<1)>>1]|0)>=(e[q+(k<<6)+48+((1<<n&3)<<1)>>1]|0):0)?(e[q+(k<<6)+54+((1<<n&3)<<1)>>1]|0)>=(e[A+(B<<6)+48+((1<<n&3)<<1)>>1]|0):0)?(G=c[a+92>>2]|0,F=q+((e[s+2>>1]|0)<<6)|0,Ob[c[(c[G>>2]|0)+8>>2]&63](G,F,q+(k<<6)|0)|0,G=c[a+96>>2]|0,G|0):0)Ob[c[(c[G>>2]|0)+8>>2]&63](G,F,q+(k<<6)|0)|0;q=q+(k<<6)+48+(H<<1)|0;b[q>>1]=(b[q>>1]|0)+-1<<16>>16}else{q=q+(k<<6)+54+(H<<1)|0;b[q>>1]=(b[q>>1]|0)+-1<<16>>16}b[o>>1]=(b[o>>1]|0)+1<<16>>16;k=e[s>>1]|e[s+2>>1]<<16;q=e[r>>1]|e[r+2>>1]<<16;b[s>>1]=q;b[s+2>>1]=q>>>16;b[r>>1]=k;b[r+2>>1]=k>>>16;k=b[s+10>>1]|0}while(k<<16>>16!=0)}while(0);b:do if((m|0)>0?(u=c[l>>2]|0,v=b[u+((t&65535)<<2)+6>>1]|0,v<<16>>16):0){p=(c[a+60>>2]|0)+((e[u+((t&65535)<<2)+2>>1]|0)<<6)+48+(H<<1)|0;q=1<<H&3;l=v;n=u+((t&65535)<<2)|0;do{o=n;n=n+4|0;k=b[n>>1]|0;if((e[o>>1]|0)<(k&65535))break b;m=c[a+60>>2]|0;l=l&65535;if(!(k&1)){t=m+(l<<6)+48+(H<<1)|0;b[t>>1]=(b[t>>1]|0)+-1<<16>>16}else{k=e[o+2>>1]|0;if(((((e[m+(k<<6)+54+(q<<1)>>1]|0)>=(e[m+(l<<6)+48+(q<<1)>>1]|0)?(e[m+(l<<6)+54+(q<<1)>>1]|0)>=(e[m+(k<<6)+48+(q<<1)>>1]|0):0)?(e[m+(k<<6)+54+((1<<q&3)<<1)>>1]|0)>=(e[m+(l<<6)+48+((1<<q&3)<<1)>>1]|0):0)?(e[m+(l<<6)+54+((1<<q&3)<<1)>>1]|0)>=(e[m+(k<<6)+48+((1<<q&3)<<1)>>1]|0):0)?(x=c[a+92>>2]|0,Ib[c[(c[x>>2]|0)+12>>2]&31](x,m+(k<<6)|0,m+(l<<6)|0,j)|0,x=c[a+96>>2]|0,x|0):0)Ib[c[(c[x>>2]|0)+12>>2]&31](x,m+(k<<6)|0,m+(l<<6)|0,j)|0;t=m+(l<<6)+54+(H<<1)|0;b[t>>1]=(b[t>>1]|0)+-1<<16>>16}b[p>>1]=(b[p>>1]|0)+1<<16>>16;l=e[o>>1]|e[o+2>>1]<<16;t=e[n>>1]|e[n+2>>1]<<16;b[o>>1]=t;b[o+2>>1]=t>>>16;b[n>>1]=l;b[n+2>>1]=l>>>16;l=b[o+10>>1]|0}while(l<<16>>16!=0)}while(0);if((y|0)<0)uh(a,H,w,j);H=H+1|0}while((H|0)!=3);k=c[a+108>>2]|0;if(!k){i=I;return}yb[c[(c[k>>2]|0)+16>>2]&31](k,c[d+60>>2]|0,f,h,j);i=I;return}function ee(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0.0;s=i;i=i+144|0;f=c[b+8>>2]|0;if(!f){f=c[b+4>>2]|0;if(!f){d=0.0;k=0.0;n=0.0;o=0.0;l=0.0;m=0.0}else{r=+g[f+336>>2];n=+g[b+172>>2];o=+g[f+340>>2];p=+g[b+168>>2];m=+g[b+164>>2];q=+g[f+332>>2];d=r*n-o*p;k=+g[f+316>>2];n=o*m-n*q;o=+g[f+320>>2];l=+g[f+324>>2];m=p*q-r*m}}else{r=+g[f+332>>2];n=+g[b+172>>2];o=+g[f+336>>2];p=+g[b+168>>2];m=+g[b+164>>2];q=+g[f+328>>2];d=r*n-o*p;k=+g[f+312>>2];n=o*m-n*q;o=+g[f+316>>2];l=+g[f+320>>2];m=p*q-r*m}p=k+d;r=o+n;q=l+m;f=c[b+20>>2]|0;if(!f){f=c[b+16>>2]|0;if(!f){d=0.0;k=0.0;n=0.0;o=0.0;l=0.0;m=0.0}else{t=+g[f+336>>2];n=+g[b+188>>2];o=+g[f+340>>2];v=+g[b+184>>2];m=+g[b+180>>2];u=+g[f+332>>2];d=t*n-o*v;k=+g[f+316>>2];n=o*m-n*u;o=+g[f+320>>2];l=+g[f+324>>2];m=v*u-t*m}}else{v=+g[f+332>>2];n=+g[b+188>>2];o=+g[f+336>>2];t=+g[b+184>>2];m=+g[b+180>>2];u=+g[f+328>>2];d=v*n-o*t;k=+g[f+312>>2];n=o*m-n*u;o=+g[f+316>>2];l=+g[f+320>>2];m=t*u-v*m}p=p-(k+d);n=r-(o+n);d=q-(l+m);k=+g[b+196>>2];l=+g[b+200>>2];m=+g[b+204>>2];a[s+108+32>>0]=1;c[s+108+16>>2]=0;c[s+108+16+4>>2]=0;c[s+108+16+8>>2]=0;c[s+108+16+12>>2]=0;c[s+108>>2]=c[b+72>>2];c[s+108+4>>2]=c[b+72+4>>2];c[s+108+8>>2]=c[b+72+8>>2];c[s+108+12>>2]=c[b+72+12>>2];if(k*p+n*l+d*m<0.0){t=+g[b+212>>2];u=+g[s+108>>2]+((k*p+n*l+d*m)*k+(p-(k*p+n*l+d*m)*k)*t);g[s+108>>2]=u;v=(k*p+n*l+d*m)*l+t*(n-(k*p+n*l+d*m)*l)+ +g[s+108+4>>2];g[s+108+4>>2]=v;l=(k*p+n*l+d*m)*m+t*(d-(k*p+n*l+d*m)*m)+ +g[s+108+8>>2];g[s+108+8>>2]=l;f=s+108+4|0;h=s+108+8|0;j=s+108|0;d=u;k=v}else{f=s+108+4|0;h=s+108+8|0;j=s+108|0;d=+g[s+108>>2];k=+g[s+108+4>>2];l=+g[s+108+8>>2]}m=(+g[b+104>>2]*d+ +g[b+108>>2]*k+ +g[b+112>>2]*l)*e;n=(d*+g[b+120>>2]+k*+g[b+124>>2]+l*+g[b+128>>2])*e;d=(d*+g[b+136>>2]+k*+g[b+140>>2]+l*+g[b+144>>2])*e;g[j>>2]=m;g[f>>2]=n;g[h>>2]=d;g[s+108+12>>2]=0.0;f=c[b+4>>2]|0;if((f|0)!=(c[b+16>>2]|0)){f=s;h=s+108|0;j=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));v=-+g[s+4>>2];u=-+g[s+8>>2];g[s>>2]=-+g[s>>2];g[s+4>>2]=v;g[s+8>>2]=u;g[s+12>>2]=0.0;u=-+g[s+20>>2];v=-+g[s+24>>2];g[s+16>>2]=-+g[s+16>>2];g[s+20>>2]=u;g[s+24>>2]=v;g[s+28>>2]=0.0;Xh(b+4|0,s,b+164|0);Xh(b+16|0,s+108|0,b+180|0);i=s;return}if(!(m==m&n==n&(d==d&0.0==0.0))){i=s;return}v=+O(+(m*m+n*n+d*d));if(v<+g[f+368>>2]){i=s;return}h=c[s+108+32>>2]|0;v=+g[f+372>>2];g[s+72+12>>2]=0.0;g[s+72+28>>2]=0.0;c[s+72+32>>2]=h;g[s+72>>2]=-(m*v);g[s+72+4>>2]=-(n*v);g[s+72+8>>2]=-(d*v);g[s+72+16>>2]=v*-0.0;g[s+72+20>>2]=v*-0.0;g[s+72+24>>2]=v*-0.0;Xh(b+4|0,s+72|0,b+164|0);d=+g[(c[b+4>>2]|0)+372>>2];f=s+36|0;h=s+108|0;j=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));g[s+36>>2]=d*+g[s+36>>2];g[s+36+4>>2]=d*+g[s+36+4>>2];g[s+36+8>>2]=d*+g[s+36+8>>2];g[s+36+16>>2]=d*+g[s+36+16>>2];g[s+36+20>>2]=d*+g[s+36+20>>2];g[s+36+24>>2]=d*+g[s+36+24>>2];Xh(b+16|0,s+36|0,b+180|0);i=s;return}function fe(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0,E=0;A=i;i=i+192|0;x=c[b+4>>2]|0;if(+g[x+752>>2]<f){i=A;return}z=c[x+740>>2]|0;w=(c[b+8>>2]|0)+8|0;y=c[w>>2]|0;l=+g[e>>2];n=+g[d>>2]*f+l;h=+g[e+4>>2];o=+g[d+4>>2]*f+h;j=+g[e+8>>2];r=+g[d+8>>2]*f+j;v=(c[b+12>>2]|0)+8|0;p=c[v>>2]|0;m=+g[p+52>>2];if((z|0)!=(y|0)){k=o-+g[p+56>>2];u=r-+g[p+60>>2];B=l-+g[y+52>>2];l=h-+g[y+56>>2];h=j-+g[y+60>>2];s=(n-m)*+g[p+4>>2]+k*+g[p+20>>2]+u*+g[p+36>>2];t=(n-m)*+g[p+8>>2]+k*+g[p+24>>2]+u*+g[p+40>>2];u=(n-m)*+g[p+12>>2]+k*+g[p+28>>2]+u*+g[p+44>>2];j=B*+g[y+4>>2]+l*+g[y+20>>2]+h*+g[y+36>>2];k=B*+g[y+8>>2]+l*+g[y+24>>2]+h*+g[y+40>>2];h=B*+g[y+12>>2]+l*+g[y+28>>2]+h*+g[y+44>>2]}else{C=n-+g[z+52>>2];k=o-+g[z+56>>2];u=r-+g[z+60>>2];B=h-+g[p+56>>2];h=j-+g[p+60>>2];s=C*+g[z+4>>2]+k*+g[z+20>>2]+u*+g[z+36>>2];t=C*+g[z+8>>2]+k*+g[z+24>>2]+u*+g[z+40>>2];u=C*+g[z+12>>2]+k*+g[z+28>>2]+u*+g[z+44>>2];j=(l-m)*+g[p+4>>2]+B*+g[p+20>>2]+h*+g[p+36>>2];k=(l-m)*+g[p+8>>2]+B*+g[p+24>>2]+h*+g[p+40>>2];h=(l-m)*+g[p+12>>2]+B*+g[p+28>>2]+h*+g[p+44>>2]}g[A>>2]=s;g[A+4>>2]=t;g[A+8>>2]=u;g[A+12>>2]=0.0;g[A+16>>2]=j;g[A+20>>2]=k;g[A+24>>2]=h;g[A+28>>2]=0.0;c[A+64>>2]=c[d>>2];c[A+64+4>>2]=c[d+4>>2];c[A+64+8>>2]=c[d+8>>2];c[A+64+12>>2]=c[d+12>>2];g[A+80>>2]=f;g[A+84>>2]=0.0;g[A+88>>2]=0.0;g[A+92>>2]=0.0;c[A+112>>2]=0;a[A+116>>0]=0;c[A+120>>2]=0;c[A+120+4>>2]=0;c[A+120+8>>2]=0;c[A+120+12>>2]=0;c[A+120+16>>2]=0;c[A+120+20>>2]=0;c[A+120+24>>2]=0;c[A+120+28>>2]=0;g[A+48>>2]=n;g[A+52>>2]=o;g[A+56>>2]=r;g[A+60>>2]=0.0;c[A+32>>2]=c[e>>2];c[A+32+4>>2]=c[e+4>>2];c[A+32+8>>2]=c[e+8>>2];c[A+32+12>>2]=c[e+12>>2];h=+g[x+752>>2];e=c[x+748>>2]|0;if((e|0)>0){q=0;p=-1;l=h*h;while(1){h=+g[x+4+(q*184|0)>>2]-s;j=+g[x+4+(q*184|0)+4>>2]-t;k=+g[x+4+(q*184|0)+8>>2]-u;d=h*h+j*j+k*k<l;p=d?q:p;q=q+1|0;if((q|0)==(e|0))break;else l=d?h*h+j*j+k*k:l}}else p=-1;q=c[w>>2]|0;w=c[v>>2]|0;h=+g[q+224>>2]*+g[w+224>>2];h=h<-10.0?-10.0:h;g[A+84>>2]=h>10.0?10.0:h;g[A+92>>2]=+g[q+228>>2]*+g[w+228>>2];h=+g[q+232>>2]*+g[w+232>>2];h=h<-10.0?-10.0:h;g[A+88>>2]=h>10.0?10.0:h;h=+g[A+72>>2];w=+N(+h)>.7071067690849304;l=+g[A+68>>2];if(w){C=1.0/+O(+(h*h+l*l));n=+g[A+64>>2];m=-(C*l*n);n=n*-(C*h);o=-(C*h);j=(h*h+l*l)*C;k=0.0;h=C*l}else{j=+g[A+64>>2];k=1.0/+O(+(j*j+l*l));m=h*-(l*k);n=(j*j+l*l)*k;o=k*j;j=-(k*j*h);k=-(l*k);h=0.0}g[A+152>>2]=k;g[A+156>>2]=o;g[A+160>>2]=h;g[A+168>>2]=j;g[A+172>>2]=m;g[A+176>>2]=n;v=c[b+20>>2]|0;q=c[b+16>>2]|0;w=c[b+28>>2]|0;b=c[b+24>>2]|0;c[A+96>>2]=(z|0)!=(y|0)?v:q;c[A+100>>2]=(z|0)!=(y|0)?q:v;c[A+104>>2]=(z|0)!=(y|0)?w:b;c[A+108>>2]=(z|0)!=(y|0)?b:w;if((p|0)>-1){b=x+4+(p*184|0)+148|0;z=c[b>>2]|0;e=x+4+(p*184|0)+120|0;d=c[e>>2]|0;v=x+4+(p*184|0)+124|0;q=c[v>>2]|0;y=x+4+(p*184|0)+128|0;w=c[y>>2]|0;D=x+4+(p*184|0)+112|0;E=c[D>>2]|0;bn(x+4+(p*184|0)|0,A|0,184)|0;c[D>>2]=E;c[e>>2]=d;c[v>>2]=q;c[y>>2]=w;c[b>>2]=z}else _e(x,A)|0;i=A;return}function ge(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((h|0)<0){o=c[b+8>>2]|0;+$b[c[(c[o>>2]|0)+12>>2]&3](o,d,e,f,g,c[b+12>>2]|0,c[b+16>>2]|0,c[b+4>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0);return}n=c[b+16>>2]|0;a:do if((n|0)>0){m=c[b+12>>2]|0;i=0;while(1){l=m+(i<<2)|0;k=c[l>>2]|0;j=c[(c[k+28>>2]|0)+208>>2]|0;if((j|0)<=-1)j=c[(c[k+32>>2]|0)+208>>2]|0;if((j|0)==(h|0)){o=l;break a}i=i+1|0;if((i|0)>=(n|0)){o=0;break}}}else{i=0;o=0}while(0);if((i|0)<(n|0)){m=c[b+12>>2]|0;j=0;do{l=c[m+(i<<2)>>2]|0;k=c[(c[l+28>>2]|0)+208>>2]|0;if((k|0)<=-1)k=c[(c[l+32>>2]|0)+208>>2]|0;j=((k|0)==(h|0)&1)+j|0;i=i+1|0}while((i|0)!=(n|0));h=j}else h=0;i=c[b+4>>2]|0;if((c[i+72>>2]|0)<2){n=c[b+8>>2]|0;+$b[c[(c[n>>2]|0)+12>>2]&3](n,d,e,f,g,o,h,i,c[b+20>>2]|0,c[b+24>>2]|0);return}if((e|0)>0){i=c[b+32>>2]|0;j=c[b+36>>2]|0;n=0;do{m=d+(n<<2)|0;if((i|0)==(j|0)){l=j|0?j<<1:1;if((j|0)<(l|0)){if(!l)i=0;else{c[6435]=(c[6435]|0)+1;i=yc((l<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}j=c[b+32>>2]|0}if((j|0)>0){k=0;do{c[i+(k<<2)>>2]=c[(c[b+40>>2]|0)+(k<<2)>>2];k=k+1|0}while((k|0)!=(j|0))}k=c[b+40>>2]|0;if(k){if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0);j=c[b+32>>2]|0}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=i;c[b+36>>2]=l;i=j;j=l}else i=j}c[(c[b+40>>2]|0)+(i<<2)>>2]=c[m>>2];i=i+1|0;c[b+32>>2]=i;n=n+1|0}while((n|0)!=(e|0))}if((g|0)>0){i=c[b+52>>2]|0;j=c[b+56>>2]|0;n=0;do{m=f+(n<<2)|0;if((i|0)==(j|0)){l=j|0?j<<1:1;if((j|0)<(l|0)){if(!l)i=0;else{c[6435]=(c[6435]|0)+1;i=yc((l<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}j=c[b+52>>2]|0}if((j|0)>0){k=0;do{c[i+(k<<2)>>2]=c[(c[b+60>>2]|0)+(k<<2)>>2];k=k+1|0}while((k|0)!=(j|0))}k=c[b+60>>2]|0;if(k){if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0);j=c[b+52>>2]|0}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=i;c[b+56>>2]=l;i=j;j=l}else i=j}c[(c[b+60>>2]|0)+(i<<2)>>2]=c[m>>2];i=i+1|0;c[b+52>>2]=i;n=n+1|0}while((n|0)!=(g|0))}if((h|0)>0){i=c[b+72>>2]|0;j=c[b+76>>2]|0;n=0;do{m=o+(n<<2)|0;if((i|0)==(j|0)){l=j|0?j<<1:1;if((j|0)<(l|0)){if(!l){k=0;i=j}else{c[6435]=(c[6435]|0)+1;i=yc((l<<2|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}k=i;i=c[b+72>>2]|0}if((i|0)>0){j=0;do{c[k+(j<<2)>>2]=c[(c[b+80>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(i|0))}j=c[b+80>>2]|0;if(j){if(a[b+84>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);i=c[b+72>>2]|0}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=k;c[b+76>>2]=l;j=l}else i=j}c[(c[b+80>>2]|0)+(i<<2)>>2]=c[m>>2];i=i+1|0;c[b+72>>2]=i;n=n+1|0}while((n|0)!=(h|0))}else i=c[b+72>>2]|0;if(((c[b+52>>2]|0)+i|0)<=(c[(c[b+4>>2]|0)+72>>2]|0))return;nh(b);return}function he(d,e,f,h,j){d=d|0;e=e|0;f=+f;h=+h;j=+j;var k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;q=i;i=i+240|0;o=+g[d+96>>2]+h;p=+g[d+100>>2]+j;g[d+112>>2]=+g[d+92>>2]+f;g[d+116>>2]=o;g[d+120>>2]=p;g[d+124>>2]=0.0;c[q+168>>2]=1065353216;c[q+168+4>>2]=0;c[q+168+4+4>>2]=0;c[q+168+4+8>>2]=0;c[q+168+4+12>>2]=0;c[q+168+20>>2]=1065353216;c[q+168+24>>2]=0;c[q+168+24+4>>2]=0;c[q+168+24+8>>2]=0;c[q+168+24+12>>2]=0;c[q+168+40>>2]=1065353216;k=q+168+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[q+104>>2]=1065353216;c[q+104+4>>2]=0;c[q+104+4+4>>2]=0;c[q+104+4+8>>2]=0;c[q+104+4+12>>2]=0;c[q+104+20>>2]=1065353216;c[q+104+24>>2]=0;c[q+104+24+4>>2]=0;c[q+104+24+8>>2]=0;c[q+104+24+12>>2]=0;c[q+104+40>>2]=1065353216;k=q+104+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;p=1.0;k=10;while(1){if((k|0)<=0){k=14;break}k=k+-1|0;c[q+168+48>>2]=c[d+92>>2];c[q+168+48+4>>2]=c[d+92+4>>2];c[q+168+48+8>>2]=c[d+92+8>>2];c[q+168+48+12>>2]=c[d+92+12>>2];c[q+104+48>>2]=c[d+112>>2];c[q+104+48+4>>2]=c[d+112+4>>2];c[q+104+48+8>>2]=c[d+112+8>>2];c[q+104+48+12>>2]=c[d+112+12>>2];n=+g[d+92>>2]-+g[d+112>>2];o=+g[d+96>>2]-+g[d+116>>2];f=+g[d+100>>2]-+g[d+120>>2];r=c[d+8>>2]|0;g[q+4>>2]=1.0;b[q+8>>1]=1;b[q+10>>1]=-1;c[q+76>>2]=0;c[q+12>>2]=0;c[q+12+4>>2]=0;c[q+12+8>>2]=0;c[q+12+12>>2]=0;c[q+12+16>>2]=0;c[q+12+20>>2]=0;c[q+12+24>>2]=0;c[q+12+28>>2]=0;c[q>>2]=4936;c[q+80>>2]=r;g[q+84>>2]=n;g[q+88>>2]=o;g[q+92>>2]=f;g[q+96>>2]=0.0;g[q+100>>2]=0.0;r=c[(c[r+188>>2]|0)+4>>2]|0;b[q+8>>1]=r;b[q+10>>1]=r>>>16;r=c[d+12>>2]|0;f=+Sb[c[(c[r>>2]|0)+48>>2]&15](r);r=c[d+12>>2]|0;zb[c[(c[r>>2]|0)+44>>2]&31](r,f+ +g[d+56>>2]);if(!(a[d+170>>0]|0))Kd(e,c[d+12>>2]|0,q+168|0,q+104|0,q,+g[e+56>>2]);else wd(c[d+8>>2]|0,c[d+12>>2]|0,q+168|0,q+104|0,q,+g[e+56>>2]);r=c[d+12>>2]|0;zb[c[(c[r>>2]|0)+44>>2]&31](r,f);o=+g[q+4>>2];p=p-o;if(o<1.0){h=+g[d+112>>2];m=+g[d+92>>2];j=+g[d+116>>2];n=+g[d+96>>2];l=+g[d+120>>2];o=+g[d+100>>2];f=+O(+((h-m)*(h-m)+(j-n)*(j-n)+(l-o)*(l-o)));if(f>1.1920928955078125e-07){v=+g[q+44>>2];t=+g[q+48>>2];x=+g[q+52>>2];w=((h-m)*(1.0/f)*v+(j-n)*(1.0/f)*t+(l-o)*(1.0/f)*x)*2.0;u=(h-m)*(1.0/f)-v*w;s=(j-n)*(1.0/f)-t*w;w=(l-o)*(1.0/f)-x*w;l=1.0/+O(+(w*w+(u*u+s*s)));c[d+112>>2]=c[d+92>>2];c[d+112+4>>2]=c[d+92+4>>2];c[d+112+8>>2]=c[d+92+8>>2];c[d+112+12>>2]=c[d+92+12>>2];h=f*(l*u-v*(x*l*w+(v*l*u+t*l*s)))+ +g[d+112>>2];g[d+112>>2]=h;j=f*(l*s-t*(x*l*w+(v*l*u+t*l*s)))+ +g[d+116>>2];g[d+116>>2]=j;l=f*(l*w-x*(x*l*w+(v*l*u+t*l*s)))+ +g[d+120>>2];g[d+120>>2]=l;f=j}else f=j;j=h-m;h=f-n;f=l-o;if(!(j*j+h*h+f*f>1.1920928955078125e-07)){k=11;break}x=1.0/+O(+(j*j+h*h+f*f));if(+g[d+76>>2]*j*x+h*x*+g[d+80>>2]+f*x*+g[d+84>>2]<=0.0){k=11;break}}else{c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2]}if(!(p>.009999999776482582)){k=14;break}}if((k|0)==11){i=q;return}else if((k|0)==14){i=q;return}}function ie(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;w=i;i=i+80|0;v=c[d+48>>2]|0;c[w>>2]=6864;c[w+4>>2]=v;c[w+8>>2]=f;v=c[d+52>>2]|0;if(!(a[v+60>>0]|0)){f=c[v+56>>2]|0;if((f|0)>0){d=f;m=0;p=c[v+96>>2]|0;f=0;while(1){f=f+1|0;if(!(+g[h>>2]>+g[p+16>>2])?!(+g[j>>2]<+g[p>>2]):0)k=1;else k=0;if(!(!(+g[h+8>>2]>+g[p+24>>2])?!(+g[j+8>>2]<+g[p+8>>2]):0))k=0;if(!(+g[h+4>>2]>+g[p+20>>2])?!(+g[j+4>>2]<+g[p+4>>2]):0){l=c[p+32>>2]|0;if(k&(l|0)==-1){ic[c[(c[w>>2]|0)+8>>2]&127](w,c[p+36>>2]|0,c[p+40>>2]|0);d=c[v+56>>2]|0;o=43}else{n=(l|0)==-1;o=42}}else{l=c[p+32>>2]|0;k=0;n=(l|0)==-1;o=42}if((o|0)==42){o=0;if(n|k)o=43;else{m=l+m|0;k=p+(l<<6)|0}}if((o|0)==43){m=m+1|0;k=p+64|0}if((m|0)<(d|0))p=k;else break}}else f=0;if((c[6167]|0)>=(f|0)){i=w;return}c[6167]=f;i=w;return}D=+g[h>>2];H=+g[h+4>>2];z=+g[h+8>>2];G=+g[v+4>>2];D=D<G?G:D;y=+g[v+8>>2];H=H<y?y:H;C=+g[v+12>>2];z=z<C?C:z;I=+g[v+20>>2];A=+g[v+24>>2];E=+g[v+28>>2];F=+g[v+36>>2];x=+g[v+40>>2];B=+g[v+44>>2];u=~~(((I<D?I:D)-G)*F)&65534;b[w+66>>1]=u;s=~~(((E<z?E:z)-C)*B)&65534;t=~~(((A<H?A:H)-y)*x)&65534;b[w+66+2>>1]=t;b[w+66+4>>1]=s;H=+g[j>>2];z=+g[j+4>>2];D=+g[j+8>>2];H=H<G?G:H;z=z<y?y:z;D=D<C?C:D;r=(~~(((I<H?I:H)-G)*F+1.0)&65535|1)&65535;b[w+60>>1]=r;j=(~~(((E<D?E:D)-C)*B+1.0)&65535|1)&65535;q=(~~(((A<z?A:z)-y)*x+1.0)&65535|1)&65535;b[w+60+2>>1]=q;b[w+60+4>>1]=j;switch(c[v+144>>2]|0){case 0:{o=c[v+56>>2]|0;if((o|0)>0){d=0;k=c[v+136>>2]|0;f=0;do{f=f+1|0;l=((r&65535)>=(e[k>>1]|0)?(u&65535)<=(e[k+6>>1]|0):0)&(s&65535)<=(e[k+10>>1]|0)&(j&65535)>=(e[k+4>>1]|0)&(t&65535)<=(e[k+8>>1]|0)&(q&65535)>=(e[k+2>>1]|0);m=k+12|0;n=c[m>>2]|0;if((n|0)>-1&l)ic[c[(c[w>>2]|0)+8>>2]&127](w,n>>21,n&2097151);if(l|(n|0)>-1){d=d+1|0;k=k+16|0}else{v=c[m>>2]|0;d=d-v|0;k=k+(0-v<<4)|0}}while((d|0)<(o|0))}else f=0;if((c[6167]|0)<(f|0))c[6167]=f;break}case 1:{if((c[v+152>>2]|0)>0){h=0;do{f=c[v+160>>2]|0;if(((r&65535)>=(e[f+(h<<5)>>1]|0)?(u&65535)<=(e[f+(h<<5)+6>>1]|0):0)&(s&65535)<=(e[f+(h<<5)+10>>1]|0)&(j&65535)>=(e[f+(h<<5)+4>>1]|0)&(t&65535)<=(e[f+(h<<5)+8>>1]|0)&(q&65535)>=(e[f+(h<<5)+2>>1]|0)){p=c[f+(h<<5)+12>>2]|0;o=c[f+(h<<5)+16>>2]|0;if((o|0)>0){d=p;k=(c[v+136>>2]|0)+(p<<4)|0;f=0;do{f=f+1|0;l=((r&65535)>=(e[k>>1]|0)?(u&65535)<=(e[k+6>>1]|0):0)&(s&65535)<=(e[k+10>>1]|0)&(j&65535)>=(e[k+4>>1]|0)&(t&65535)<=(e[k+8>>1]|0)&(q&65535)>=(e[k+2>>1]|0);m=k+12|0;n=c[m>>2]|0;if((n|0)>-1&l)ic[c[(c[w>>2]|0)+8>>2]&127](w,n>>21,n&2097151);if(l|(n|0)>-1){d=d+1|0;k=k+16|0}else{n=c[m>>2]|0;d=d-n|0;k=k+(0-n<<4)|0}}while((d|0)<(o+p|0))}else f=0;if((c[6167]|0)<(f|0))c[6167]=f}h=h+1|0}while((h|0)<(c[v+152>>2]|0))}break}case 2:{Lk(c[v+136>>2]|0,w,w+66|0,w+60|0);break}default:{}}i=w;return}function je(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+24>>2]=d;g[b+28>>2]=0.0;c[b+32>>2]=0;c[b+36>>2]=1;g[b+40>>2]=1.0;a[b+44>>0]=1;c[b+48>>2]=0;a[b+52>>0]=0;a[b+53>>0]=1;a[b+54>>0]=1;g[b+56>>2]=.03999999910593033;a[b+60>>0]=0;g[b+64>>2]=0.0;c[b+68>>2]=e;c[b+72>>2]=0;a[b+76>>0]=1;c[b+80>>2]=0;c[b+84>>2]=0;c[b+88>>2]=0;g[b+92>>2]=.6000000238418579;g[b+96>>2]=1.0;g[b+100>>2]=.30000001192092896;g[b+104>>2]=.01666666753590107;g[b+108>>2]=0.0;g[b+116>>2]=20.0;c[b+112>>2]=10;g[b+124>>2]=.20000000298023224;g[b+128>>2]=.800000011920929;g[b+132>>2]=0.0;g[b+120>>2]=1.0;c[b+136>>2]=1;g[b+140>>2]=-.03999999910593033;g[b+144>>2]=.10000000149011612;g[b+148>>2]=0.0;g[b+152>>2]=.8500000238418579;c[b+156>>2]=260;c[b+160>>2]=2;c[b+164>>2]=128;g[b+168>>2]=100.0;g[b+172>>2]=1000000015047466219876688.0e6;c[b>>2]=4144;a[b+192>>0]=1;c[b+188>>2]=0;c[b+180>>2]=0;c[b+184>>2]=0;c[b+196>>2]=0;c[b+200>>2]=f;a[b+224>>0]=1;c[b+220>>2]=0;c[b+212>>2]=0;c[b+216>>2]=0;a[b+244>>0]=1;c[b+240>>2]=0;c[b+232>>2]=0;c[b+236>>2]=0;c[b+248>>2]=0;c[b+252>>2]=-1054867456;a[b+274>>0]=0;a[b+275>>0]=0;c[b+256>>2]=0;c[b+256+4>>2]=0;c[b+256+8>>2]=0;c[b+256+12>>2]=0;a[b+292>>0]=1;c[b+288>>2]=0;c[b+280>>2]=0;c[b+284>>2]=0;c[b+296>>2]=0;a[b+300>>0]=1;a[b+320>>0]=1;c[b+316>>2]=0;c[b+308>>2]=0;c[b+312>>2]=0;if(!f){c[6435]=(c[6435]|0)+1;f=yc(215)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[f>>2]=4756;a[f+20>>0]=1;c[f+16>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;a[f+40>>0]=1;c[f+36>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;a[f+60>>0]=1;c[f+56>>2]=0;c[f+48>>2]=0;c[f+52>>2]=0;a[f+80>>0]=1;c[f+76>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;a[f+100>>0]=1;c[f+96>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;a[f+120>>0]=1;c[f+116>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;a[f+140>>0]=1;c[f+136>>2]=0;c[f+128>>2]=0;c[f+132>>2]=0;a[f+160>>0]=1;c[f+156>>2]=0;c[f+148>>2]=0;c[f+152>>2]=0;a[f+180>>0]=1;c[f+176>>2]=0;c[f+168>>2]=0;c[f+172>>2]=0;c[f+192>>2]=0;c[b+200>>2]=f;a[b+273>>0]=1}else a[b+273>>0]=0;c[6435]=(c[6435]|0)+1;f=yc(87)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[f>>2]=5456;a[f+20>>0]=1;c[f+16>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;a[f+40>>0]=1;c[f+36>>2]=0;c[f+28>>2]=0;c[f+32>>2]=0;a[f+60>>0]=1;c[f+56>>2]=0;c[f+48>>2]=0;c[f+52>>2]=0;a[f+64>>0]=1;c[b+204>>2]=f;a[b+272>>0]=1;c[6435]=(c[6435]|0)+1;f=yc(107)|0;if(!f){e=0;h=c[b+200>>2]|0;c[e>>2]=4356;f=e+4|0;c[f>>2]=0;f=e+8|0;c[f>>2]=h;f=e+12|0;c[f>>2]=0;f=e+16|0;c[f>>2]=0;f=e+20|0;c[f>>2]=0;f=e+24|0;c[f>>2]=d;d=e+44|0;a[d>>0]=1;d=e+40|0;c[d>>2]=0;d=e+32|0;c[d>>2]=0;d=e+36|0;c[d>>2]=0;d=e+64|0;a[d>>0]=1;d=e+60|0;c[d>>2]=0;d=e+52|0;c[d>>2]=0;d=e+56|0;c[d>>2]=0;d=e+84|0;a[d>>0]=1;d=e+80|0;c[d>>2]=0;d=e+72|0;c[d>>2]=0;d=e+76|0;c[d>>2]=0;c[b+196>>2]=e;return}c[(f+4+15&-16)+-4>>2]=f;h=f+4+15&-16;f=c[b+200>>2]|0;c[h>>2]=4356;e=h+4|0;c[e>>2]=0;e=h+8|0;c[e>>2]=f;e=h+12|0;c[e>>2]=0;e=h+16|0;c[e>>2]=0;e=h+20|0;c[e>>2]=0;e=h+24|0;c[e>>2]=d;d=h+44|0;a[d>>0]=1;d=h+40|0;c[d>>2]=0;d=h+32|0;c[d>>2]=0;d=h+36|0;c[d>>2]=0;d=h+64|0;a[d>>0]=1;d=h+60|0;c[d>>2]=0;d=h+52|0;c[d>>2]=0;d=h+56|0;c[d>>2]=0;d=h+84|0;a[d>>0]=1;d=h+80|0;c[d>>2]=0;d=h+72|0;c[d>>2]=0;d=h+76|0;c[d>>2]=0;c[b+196>>2]=h;return}function ke(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0,k=0.0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0;u=i;i=i+96|0;s=c[b+12>>2]|0;mc[c[(c[s>>2]|0)+8>>2]&127](s,(c[b+8>>2]|0)+4|0,u+80|0,u+64|0);s=c[d+68>>2]|0;yb[c[(c[s>>2]|0)+16>>2]&31](s,c[(c[b+8>>2]|0)+188>>2]|0,u+80|0,u+64|0,c[d+24>>2]|0);s=c[d+24>>2]|0;mc[c[(c[s>>2]|0)+32>>2]&127](s,c[(c[b+8>>2]|0)+284>>2]|0,d+28|0,s);s=c[b+8>>2]|0;c[b+92>>2]=c[s+52>>2];c[b+92+4>>2]=c[s+52+4>>2];c[b+92+8>>2]=c[s+52+8>>2];c[b+92+12>>2]=c[s+52+12>>2];s=c[s+284>>2]|0;if((Eb[c[(c[s>>2]|0)+36>>2]&127](s)|0)>0){s=0;h=0.0;d=0;do{e=c[b+132>>2]|0;if((e|0)<0){if((c[b+136>>2]|0)<0){f=c[b+140>>2]|0;if(f|0){if(a[b+144>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+140>>2]=0}a[b+144>>0]=1;c[b+140>>2]=0;c[b+136>>2]=0}do{c[(c[b+140>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[b+132>>2]=0;e=c[(c[b+8>>2]|0)+284>>2]|0;e=c[(Eb[c[(c[e>>2]|0)+28>>2]&127](e)|0)+12>>2]|0;r=c[c[e+(s<<4)>>2]>>2]|0;f=c[c[e+(s<<4)+4>>2]>>2]|0;if(!((r|0)!=0?(c[r+204>>2]&4|0)!=0:0))t=14;do if((t|0)==14){t=0;if(f|0?c[f+204>>2]&4|0:0)break;e=c[e+(s<<4)+8>>2]|0;if(e|0)Cb[c[(c[e>>2]|0)+16>>2]&127](e,b+128|0);q=c[b+132>>2]|0;if((q|0)>0){o=c[b+140>>2]|0;p=c[b+8>>2]|0;r=0;do{m=c[o+(r<<2)>>2]|0;n=(c[m+740>>2]|0)==(p|0)?-1.0:1.0;e=c[m+748>>2]|0;if((e|0)>0){l=0;do{k=+g[m+4+(l*184|0)+80>>2];if(k<0.0){j=m+4+(l*184|0)+64|0;if(k<h){d=m+4+(l*184|0)+68|0;v=n*+g[d>>2];f=m+4+(l*184|0)+72|0;h=n*+g[f>>2];g[b+152>>2]=n*+g[j>>2];g[b+156>>2]=v;g[b+160>>2]=h;g[b+164>>2]=0.0;e=c[m+748>>2]|0;h=k}else{d=m+4+(l*184|0)+68|0;f=m+4+(l*184|0)+72|0}w=k*n*+g[d>>2]*.20000000298023224;v=k*n*+g[f>>2]*.20000000298023224;g[b+92>>2]=k*n*+g[j>>2]*.20000000298023224+ +g[b+92>>2];g[b+96>>2]=w+ +g[b+96>>2];g[b+100>>2]=v+ +g[b+100>>2];d=1}l=l+1|0}while((l|0)<(e|0))}r=r+1|0}while((r|0)!=(q|0))}}while(0);s=s+1|0;r=c[(c[b+8>>2]|0)+284>>2]|0}while((s|0)<(Eb[c[(c[r>>2]|0)+36>>2]&127](r)|0))}else d=0;t=c[b+8>>2]|0;c[u>>2]=c[t+4>>2];c[u+4>>2]=c[t+4+4>>2];c[u+8>>2]=c[t+4+8>>2];c[u+12>>2]=c[t+4+12>>2];c[u+16>>2]=c[t+20>>2];c[u+16+4>>2]=c[t+20+4>>2];c[u+16+8>>2]=c[t+20+8>>2];c[u+16+12>>2]=c[t+20+12>>2];c[u+32>>2]=c[t+36>>2];c[u+32+4>>2]=c[t+36+4>>2];c[u+32+8>>2]=c[t+36+8>>2];c[u+32+12>>2]=c[t+36+12>>2];c[u+48>>2]=c[b+92>>2];c[u+48+4>>2]=c[b+92+4>>2];c[u+48+8>>2]=c[b+92+8>>2];c[u+48+12>>2]=c[b+92+12>>2];c[t+260>>2]=(c[t+260>>2]|0)+1;c[t+4>>2]=c[u>>2];c[t+4+4>>2]=c[u+4>>2];c[t+4+8>>2]=c[u+8>>2];c[t+4+12>>2]=c[u+12>>2];c[t+20>>2]=c[u+16>>2];c[t+20+4>>2]=c[u+16+4>>2];c[t+20+8>>2]=c[u+16+8>>2];c[t+20+12>>2]=c[u+16+12>>2];c[t+36>>2]=c[u+32>>2];c[t+36+4>>2]=c[u+32+4>>2];c[t+36+8>>2]=c[u+32+8>>2];c[t+36+12>>2]=c[u+32+12>>2];c[t+52>>2]=c[u+48>>2];c[t+52+4>>2]=c[u+48+4>>2];c[t+52+8>>2]=c[u+48+8>>2];c[t+52+12>>2]=c[u+48+12>>2];i=u;return d|0}function le(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0;s=i;i=i+48|0;c[s+16>>2]=c[e>>2];c[s+16+4>>2]=c[e+4>>2];c[s+16+8>>2]=c[e+8>>2];c[s+16+12>>2]=c[e+12>>2];c[s+16+16>>2]=c[f>>2];c[s+16+16+4>>2]=c[f+4>>2];c[s+16+16+8>>2]=c[f+8>>2];c[s+16+16+12>>2]=c[f+12>>2];do if((c[d+60>>2]|0)==2){h=c[d+48>>2]|0;hh(b+64|0,h)|0;j=c[b+68>>2]|0;if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+68>>2]=h;c[b+76>>2]=(c[b+76>>2]|0)+-1;h=c[b+8>>2]|0;if(!h){c[6435]=(c[6435]|0)+1;h=yc(63)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=h;k=j+44|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0))}else c[b+8>>2]=0;c[h+32>>2]=0;c[h+36>>2]=d;c[h+40>>2]=0;c[h>>2]=c[s+16>>2];c[h+4>>2]=c[s+16+4>>2];c[h+8>>2]=c[s+16+8>>2];c[h+12>>2]=c[s+16+12>>2];c[h+16>>2]=c[s+16+16>>2];c[h+20>>2]=c[s+16+20>>2];c[h+24>>2]=c[s+16+24>>2];c[h+28>>2]=c[s+16+28>>2];lf(b+4|0,c[b+4>>2]|0,h);c[b+16>>2]=(c[b+16>>2]|0)+1;c[d+48>>2]=h;k=1}else{c[b+168>>2]=(c[b+168>>2]|0)+1;r=c[d+48>>2]|0;if(((((+g[r>>2]<=+g[s+16+16>>2]?+g[r+16>>2]>=+g[s+16>>2]:0)?+g[r+4>>2]<=+g[s+16+20>>2]:0)?+g[r+20>>2]>=+g[s+16+4>>2]:0)?+g[r+8>>2]<=+g[s+16+24>>2]:0)?+g[r+24>>2]>=+g[s+16+8>>2]:0){l=+g[d+16>>2];t=+g[e>>2]-l;m=+g[d+20>>2];o=+g[e+4>>2]-m;n=+g[d+24>>2];p=+g[e+8>>2]-n;u=+g[b+140>>2];l=(+g[d+32>>2]-l)*.5*u;m=(+g[d+36>>2]-m)*.5*u;n=u*(+g[d+40>>2]-n)*.5;g[s>>2]=l;g[s+4>>2]=m;g[s+8>>2]=n;g[s+12>>2]=0.0;if(t<0.0)g[s>>2]=-l;if(o<0.0)g[s+4>>2]=-m;if(p<0.0)g[s+8>>2]=-n;if(jh(b+4|0,r,s+16|0,s,.05000000074505806)|0){c[b+172>>2]=(c[b+172>>2]|0)+1;h=1}else h=0;k=h;break}h=hh(b+4|0,r)|0;a:do if(h){k=c[b+12>>2]|0;if((k|0)<=-1){h=c[b+4>>2]|0;break}if((k|0)>0){q=0;while(1){j=c[h+32>>2]|0;q=q+1|0;if(!j)break a;if((q|0)>=(k|0)){h=j;break}else h=j}}}else h=0;while(0);c[r>>2]=c[s+16>>2];c[r+4>>2]=c[s+16+4>>2];c[r+8>>2]=c[s+16+8>>2];c[r+12>>2]=c[s+16+12>>2];c[r+16>>2]=c[s+16+16>>2];c[r+20>>2]=c[s+16+20>>2];c[r+24>>2]=c[s+16+24>>2];c[r+28>>2]=c[s+16+28>>2];lf(b+4|0,h,r);c[b+172>>2]=(c[b+172>>2]|0)+1;k=1}while(0);h=c[d+52>>2]|0;j=c[d+56>>2]|0;if(!h)c[b+124+(c[d+60>>2]<<2)>>2]=j;else c[h+56>>2]=j;h=c[d+56>>2]|0;if(h|0)c[h+52>>2]=c[d+52>>2];c[d+16>>2]=c[e>>2];c[d+16+4>>2]=c[e+4>>2];c[d+16+8>>2]=c[e+8>>2];c[d+16+12>>2]=c[e+12>>2];c[d+32>>2]=c[f>>2];c[d+32+4>>2]=c[f+4>>2];c[d+32+8>>2]=c[f+8>>2];c[d+32+12>>2]=c[f+12>>2];h=c[b+144>>2]|0;c[d+60>>2]=h;c[d+52>>2]=0;c[d+56>>2]=c[b+124+(h<<2)>>2];j=c[b+124+(h<<2)>>2]|0;if(j|0)c[j+52>>2]=d;c[b+124+(h<<2)>>2]=d;if(!k){i=s;return}a[b+194>>0]=1;if(a[b+193>>0]|0){i=s;return}c[s>>2]=8904;c[s+4>>2]=b;we(b+64|0,c[b+64>>2]|0,c[d+48>>2]|0,s);we(b+4|0,c[b+4>>2]|0,c[d+48>>2]|0,s);i=s;return}function me(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0;m=i;i=i+352|0;e=c[d+36>>2]|0;c[m+288+4>>2]=35;c[m+288+8>>2]=0;c[m+288+12>>2]=1065353216;c[m+288+16>>2]=1065353216;c[m+288+20>>2]=1065353216;g[m+288+24>>2]=0.0;c[m+288>>2]=3436;c[m+288+52>>2]=e;g[m+288+44>>2]=0.0;k=c[b+28>>2]|0;d=c[k+4>>2]|0;if(c[(c[k+8>>2]|0)+204>>2]&3|0?a[e+376>>0]|0:0){i=m;return}if((a[22456]|0)==0?Wa(22456)|0:0){if((a[22464]|0)==0?Wa(22464)|0:0){c[5698]=1065353216;c[5699]=0;c[5700]=0;c[5701]=0;c[5702]=0;c[5703]=1065353216;c[5704]=0;c[5705]=0;c[5706]=0;c[5707]=0;c[5708]=1065353216;g[5709]=0.0;_a(22464)}c[5710]=c[5698];c[5711]=c[5699];c[5712]=c[5700];c[5713]=c[5701];c[5714]=c[5702];c[5715]=c[5703];c[5716]=c[5704];c[5717]=c[5705];c[5718]=c[5706];c[5719]=c[5707];c[5720]=c[5708];c[5721]=c[5709];c[5722]=0;c[5723]=0;c[5724]=0;c[5725]=0;_a(22456)}f=c[(c[b+28>>2]|0)+12>>2]|0;c[m>>2]=1065353216;c[m+4>>2]=0;c[m+8>>2]=0;g[m+12>>2]=0.0;if(!(!(Jd(m+288|0,22840,d,f,m,m+232|0)|0)?!(Pc(m+288|0,22840,d,f,m,m+232|0,0)|0):0)){k=m+16+4|0;a[m+16+152>>0]=0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[m+16>>2]=3256;k=c[(c[b+28>>2]|0)+8>>2]|0;do if(jd(b,m+232|0,e,0,0,0,(c[k+236>>2]&2|0)==0?0:k,k,m+16|0)|0){c[6435]=(c[6435]|0)+1;d=yc(235)|0;if(!d)k=0;else{c[(d+4+15&-16)+-4>>2]=d;k=d+4+15&-16}d=k+152|0;Tn(k|0,0,156)|0;c[k>>2]=3256;e=k+4|0;f=m+16+4|0;h=e+100|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));e=k+104|0;c[e>>2]=c[m+16+104>>2];c[e+4>>2]=c[m+16+104+4>>2];c[e+8>>2]=c[m+16+104+8>>2];c[e+12>>2]=c[m+16+104+12>>2];e=k+120|0;c[e>>2]=c[m+16+120>>2];c[e+4>>2]=c[m+16+120+4>>2];c[e+8>>2]=c[m+16+120+8>>2];c[e+12>>2]=c[m+16+120+12>>2];e=k+136|0;c[e>>2]=c[m+16+136>>2];c[e+4>>2]=c[m+16+136+4>>2];c[e+8>>2]=c[m+16+136+8>>2];c[e+12>>2]=c[m+16+136+12>>2];a[d>>0]=a[m+16+152>>0]|0;e=k+156|0;f=m+16+156|0;h=e+60|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(h|0));h=c[b+24>>2]|0;j=k;d=c[h+852>>2]|0;if((d|0)==(c[h+856>>2]|0)?(l=d|0?d<<1:1,(d|0)<(l|0)):0){if(!l)f=0;else{c[6435]=(c[6435]|0)+1;d=yc((l<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}f=d;d=c[h+852>>2]|0}if((d|0)>0){e=0;do{c[f+(e<<2)>>2]=c[(c[h+860>>2]|0)+(e<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}e=c[h+860>>2]|0;if(e){if(a[h+864>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[h+852>>2]|0}c[h+860>>2]=0}a[h+864>>0]=1;c[h+860>>2]=f;c[h+856>>2]=l}c[(c[h+860>>2]|0)+(d<<2)>>2]=j;c[h+852>>2]=d+1;d=c[b+24>>2]|0;if(!(c[(c[(c[b+28>>2]|0)+8>>2]|0)+204>>2]&3)){b=k+64|0;g[b>>2]=+g[d+340>>2]*+g[b>>2];b=k+68|0;g[b>>2]=+g[d+352>>2]*+g[b>>2];break}else{b=k+64|0;g[b>>2]=+g[d+344>>2]*+g[b>>2];b=k+68|0;g[b>>2]=+g[d+356>>2]*+g[b>>2];break}}while(0)}i=m;return}function ne(b,d,e,f,h,i,j,l){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;l=l|0;var m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;c[b+4>>2]=4;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=d;c[b+32>>2]=e;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4704;g[b+688>>2]=0.0;g[b+692>>2]=-1.0;g[b+696>>2]=.8999999761581421;g[b+700>>2]=.30000001192092896;g[b+704>>2]=1.0;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;a[b+736>>0]=0;a[b+737>>0]=0;a[b+738>>0]=0;a[b+739>>0]=1;a[b+740>>0]=l&1;c[b+748>>2]=0;c[b+600>>2]=c[f>>2];c[b+600+4>>2]=c[f+4>>2];c[b+600+8>>2]=c[f+8>>2];c[b+600+12>>2]=c[f+12>>2];m=+g[d+4>>2];n=+g[d+20>>2];o=+g[d+36>>2];p=+g[i>>2];q=+g[i+4>>2];r=+g[i+8>>2];do if(!(m*p+n*q+o*r>=.9999998807907104))if(!(m*p+n*q+o*r<=-.9999998807907104)){e=(g[k>>2]=o*q-n*r,c[k>>2]|0);f=(g[k>>2]=m*r-o*p,c[k>>2]|0);l=(g[k>>2]=n*p-m*q,c[k>>2]|0);u=(g[k>>2]=r*(m*r-o*p)-q*(n*p-m*q),c[k>>2]|0);v=(g[k>>2]=p*(n*p-m*q)-r*(o*q-n*r),c[k>>2]|0);t=(g[k>>2]=q*(o*q-n*r)-p*(m*r-o*p),c[k>>2]|0);break}else{u=c[d+12>>2]|0;v=c[d+28>>2]|0;t=c[d+44>>2]|0;e=c[d+8>>2]|0;l=c[d+40>>2]|0;f=c[d+24>>2]|0;break}else{u=(g[k>>2]=-+g[d+12>>2],c[k>>2]|0);v=(g[k>>2]=-+g[d+28>>2],c[k>>2]|0);t=(g[k>>2]=-+g[d+44>>2],c[k>>2]|0);e=c[d+8>>2]|0;l=c[d+40>>2]|0;f=c[d+24>>2]|0}while(0);c[b+552>>2]=u;c[b+556>>2]=e;c[b+560>>2]=c[i>>2];g[b+564>>2]=0.0;c[b+568>>2]=v;c[b+572>>2]=f;c[b+576>>2]=c[i+4>>2];g[b+580>>2]=0.0;c[b+584>>2]=t;c[b+588>>2]=l;c[b+592>>2]=c[i+8>>2];g[b+596>>2]=0.0;o=+g[i+4>>2];q=+g[j+8>>2];m=+g[i+8>>2];r=+g[j+4>>2];s=+g[j>>2];n=+g[i>>2];do if(q*m+(o*r+s*n)<-.9999998807907104)if(+N(+m)>.7071067690849304){n=1.0/+O(+(o*o+m*m));e=0;p=0.0;m=-(m*n);f=(g[k>>2]=o*n,c[k>>2]|0);break}else{m=1.0/+O(+(o*o+n*n));e=(g[k>>2]=-(o*m),c[k>>2]|0);p=0.0;m=n*m;f=0;break}else{w=+O(+((q*m+(o*r+s*n)+1.0)*2.0));e=(g[k>>2]=(o*q-m*r)*(1.0/w),c[k>>2]|0);p=w*.5;m=(m*s-q*n)*(1.0/w);f=(g[k>>2]=(r*n-o*s)*(1.0/w),c[k>>2]|0)}while(0);o=(c[k>>2]=u,+g[k>>2]);A=(c[k>>2]=t,+g[k>>2]);z=(c[k>>2]=f,+g[k>>2]);w=(c[k>>2]=v,+g[k>>2]);B=o*p+A*m-w*z;n=(c[k>>2]=e,+g[k>>2]);x=w*p+o*z-A*n;y=A*p+w*n-o*m;A=-(o*n)-w*m-A*z;m=-m;w=x*-z+(p*B+A*-n)-y*m;o=y*-n+(p*x+A*m)-B*-z;p=B*m+(A*-z+p*y)-x*-n;c[b+664>>2]=c[h>>2];c[b+664+4>>2]=c[h+4>>2];c[b+664+8>>2]=c[h+8>>2];c[b+664+12>>2]=c[h+12>>2];g[b+616>>2]=w;g[b+620>>2]=r*p-q*o;c[b+624>>2]=c[j>>2];g[b+628>>2]=0.0;g[b+632>>2]=o;g[b+636>>2]=q*w-s*p;c[b+640>>2]=c[j+4>>2];g[b+644>>2]=0.0;g[b+648>>2]=p;g[b+652>>2]=s*o-r*w;c[b+656>>2]=c[j+8>>2];g[b+660>>2]=0.0;g[b+732>>2]=a[b+740>>0]|0?-1.0:1.0;return}function oe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0;p=i;i=i+144|0;if((c[a+16>>2]|0)<=0){o=a+76|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];b=c[a>>2]|0;b=b+68|0;b=c[b>>2]|0;Ab[b&255](a);i=p;return}j=p+16+16|0;k=p+16+32|0;l=p+16+48|0;o=0;do{n=c[a+24>>2]|0;m=n+(o*80|0)|0;c[p+16>>2]=c[m>>2];c[p+16+4>>2]=c[m+4>>2];c[p+16+8>>2]=c[m+8>>2];c[p+16+12>>2]=c[m+12>>2];m=n+(o*80|0)+16|0;c[j>>2]=c[m>>2];c[j+4>>2]=c[m+4>>2];c[j+8>>2]=c[m+8>>2];c[j+12>>2]=c[m+12>>2];m=n+(o*80|0)+32|0;c[k>>2]=c[m>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];m=n+(o*80|0)+48|0;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];c[l+12>>2]=c[m+12>>2];n=c[n+(o*80|0)+64>>2]|0;n=Eb[c[(c[n>>2]|0)+28>>2]&127](n)|0;c[p>>2]=c[n>>2];c[p+4>>2]=c[n+4>>2];c[p+8>>2]=c[n+8>>2];q=+g[p+4>>2]*+g[b+4>>2]/+g[a+80>>2];r=+g[p+8>>2]*+g[b+8>>2]/+g[a+84>>2];g[p>>2]=+g[p>>2]*+g[b>>2]/+g[a+76>>2];g[p+4>>2]=q;g[p+8>>2]=r;g[p+12>>2]=0.0;n=c[(c[a+24>>2]|0)+(o*80|0)+64>>2]|0;Cb[c[(c[n>>2]|0)+24>>2]&127](n,p);r=+g[p+16+52>>2]*+g[b+4>>2]/+g[a+80>>2];q=+g[p+16+56>>2]*+g[b+8>>2]/+g[a+84>>2];g[p+16+48>>2]=+g[l>>2]*+g[b>>2]/+g[a+76>>2];g[p+16+52>>2]=r;g[p+16+56>>2]=q;g[p+16+60>>2]=0.0;n=c[a+24>>2]|0;m=n+(o*80|0)|0;c[m>>2]=c[p+16>>2];c[m+4>>2]=c[p+16+4>>2];c[m+8>>2]=c[p+16+8>>2];c[m+12>>2]=c[p+16+12>>2];m=n+(o*80|0)+16|0;c[m>>2]=c[j>>2];c[m+4>>2]=c[j+4>>2];c[m+8>>2]=c[j+8>>2];c[m+12>>2]=c[j+12>>2];m=n+(o*80|0)+32|0;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2];c[m+12>>2]=c[k+12>>2];n=n+(o*80|0)+48|0;c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];c[n+8>>2]=c[l+8>>2];c[n+12>>2]=c[l+12>>2];if(c[a+64>>2]|0){m=c[(c[a+24>>2]|0)+(o*80|0)+64>>2]|0;mc[c[(c[m>>2]|0)+8>>2]&127](m,p+16|0,p+128|0,p+112|0);c[p+80>>2]=c[p+128>>2];c[p+80+4>>2]=c[p+128+4>>2];c[p+80+8>>2]=c[p+128+8>>2];c[p+80+12>>2]=c[p+128+12>>2];c[p+80+16>>2]=c[p+112>>2];c[p+80+16+4>>2]=c[p+112+4>>2];c[p+80+16+8>>2]=c[p+112+8>>2];c[p+80+16+12>>2]=c[p+112+12>>2];m=c[a+64>>2]|0;n=c[(c[a+24>>2]|0)+(o*80|0)+76>>2]|0;d=hh(m,n)|0;a:do if(d){f=c[m+8>>2]|0;if((f|0)<=-1){d=c[m>>2]|0;break}if((f|0)>0){h=0;while(1){e=c[d+32>>2]|0;h=h+1|0;if(!e)break a;if((h|0)>=(f|0)){d=e;break}else d=e}}}else d=0;while(0);c[n>>2]=c[p+80>>2];c[n+4>>2]=c[p+80+4>>2];c[n+8>>2]=c[p+80+8>>2];c[n+12>>2]=c[p+80+12>>2];c[n+16>>2]=c[p+80+16>>2];c[n+20>>2]=c[p+80+20>>2];c[n+24>>2]=c[p+80+24>>2];c[n+28>>2]=c[p+80+28>>2];lf(m,d,n)}o=o+1|0}while((o|0)<(c[a+16>>2]|0));o=a+76|0;c[o>>2]=c[b>>2];c[o+4>>2]=c[b+4>>2];c[o+8>>2]=c[b+8>>2];c[o+12>>2]=c[b+12>>2];b=c[a>>2]|0;b=b+68|0;b=c[b>>2]|0;Ab[b&255](a);i=p;return}function pe(d,f,h,i,j,k){d=d|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0.0,m=0.0,n=0.0;c[d>>2]=8520;b[d+4>>1]=-2;b[d+6>>1]=-1;c[d+92>>2]=j;c[d+96>>2]=0;a[d+100>>0]=0;c[d+104>>2]=0;c[d+108>>2]=0;if(!j){c[6435]=(c[6435]|0)+1;j=yc(95)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}Ri(j);c[d+92>>2]=j;a[d+100>>0]=1}if(!k){c[6435]=(c[6435]|0)+1;j=yc(43)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[j>>2]=8584;a[j+20>>0]=1;c[j+16>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[d+112>>2]=j;c[6435]=(c[6435]|0)+1;j=yc(215)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}Zh(j,c[d+112>>2]|0);c[d+108>>2]=j;a[j+193>>0]=1}c[d+8>>2]=c[f>>2];c[d+8+4>>2]=c[f+4>>2];c[d+8+8>>2]=c[f+8>>2];c[d+8+12>>2]=c[f+12>>2];c[d+24>>2]=c[h>>2];c[d+24+4>>2]=c[h+4>>2];c[d+24+8>>2]=c[h+8>>2];c[d+24+12>>2]=c[h+12>>2];n=+(e[d+6>>1]|0);m=n/(+g[d+28>>2]-+g[d+12>>2]);l=n/(+g[d+32>>2]-+g[d+16>>2]);g[d+40>>2]=n/(+g[d+24>>2]-+g[d+8>>2]);g[d+44>>2]=m;g[d+48>>2]=l;g[d+52>>2]=0.0;f=(i&65535)+1&65535;c[6435]=(c[6435]|0)+1;j=yc(f<<6|19)|0;if(!j)h=0;else{c[(j+4+15&-16)+-4>>2]=j;h=j+4+15&-16}if(f|0){j=h+(f<<6)|0;k=h;do{c[k>>2]=0;c[k+8>>2]=0;k=k+64|0}while((k|0)!=(j|0))}c[d+60>>2]=h;b[d+58>>1]=(i&65535)+1;b[d+56>>1]=0;b[d+64>>1]=1;if(f>>>0>1){j=1;k=1;do{b[h+(j<<6)+48>>1]=j+1;k=k+1<<16>>16;j=k&65535}while(j>>>0<f>>>0)}b[h+(f+-1<<6)+48>>1]=0;c[6435]=(c[6435]|0)+1;j=yc((f<<3|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}c[d+80>>2]=j;c[d+68>>2]=j;c[6435]=(c[6435]|0)+1;j=yc((f<<3|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}c[d+84>>2]=j;c[d+72>>2]=j;c[6435]=(c[6435]|0)+1;j=yc((f<<3|3)+16|0)|0;if(!j){h=0;i=d+88|0;c[i>>2]=h;i=d+76|0;c[i>>2]=h;h=c[d+60>>2]|0;c[h>>2]=0;f=h+48|0;b[f>>1]=0;f=h+54|0;b[f>>1]=1;f=c[d+68>>2]|0;b[f>>1]=0;k=f+2|0;b[k>>1]=0;k=b[d+6>>1]|0;j=f+4|0;b[j>>1]=k;f=f+6|0;b[f>>1]=0;f=h+50|0;b[f>>1]=0;f=h+56|0;b[f>>1]=1;f=c[d+72>>2]|0;b[f>>1]=0;j=f+2|0;b[j>>1]=0;j=b[d+6>>1]|0;k=f+4|0;b[k>>1]=j;f=f+6|0;b[f>>1]=0;f=h+52|0;b[f>>1]=0;h=h+58|0;b[h>>1]=1;i=c[i>>2]|0;b[i>>1]=0;h=i+2|0;b[h>>1]=0;h=b[d+6>>1]|0;f=i+4|0;b[f>>1]=h;i=i+6|0;b[i>>1]=0;c[d>>2]=8660;return}c[(j+4+15&-16)+-4>>2]=j;h=j+4+15&-16;i=d+88|0;c[i>>2]=h;i=d+76|0;c[i>>2]=h;h=c[d+60>>2]|0;c[h>>2]=0;f=h+48|0;b[f>>1]=0;f=h+54|0;b[f>>1]=1;f=c[d+68>>2]|0;b[f>>1]=0;k=f+2|0;b[k>>1]=0;k=b[d+6>>1]|0;j=f+4|0;b[j>>1]=k;f=f+6|0;b[f>>1]=0;f=h+50|0;b[f>>1]=0;f=h+56|0;b[f>>1]=1;f=c[d+72>>2]|0;b[f>>1]=0;j=f+2|0;b[j>>1]=0;j=b[d+6>>1]|0;k=f+4|0;b[k>>1]=j;f=f+6|0;b[f>>1]=0;f=h+52|0;b[f>>1]=0;h=h+58|0;b[h>>1]=1;i=c[i>>2]|0;b[i>>1]=0;h=i+2|0;b[h>>1]=0;h=b[d+6>>1]|0;f=i+4|0;b[f>>1]=h;i=i+6|0;b[i>>1]=0;c[d>>2]=8660;return}function qe(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;Ll();c[b+4>>2]=6;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=23268;c[b+32>>2]=d;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4376;c[b+112>>2]=c[e>>2];c[b+112+4>>2]=c[e+4>>2];c[b+112+8>>2]=c[e+8>>2];c[b+112+12>>2]=c[e+12>>2];c[b+128>>2]=c[e+16>>2];c[b+128+4>>2]=c[e+16+4>>2];c[b+128+8>>2]=c[e+16+8>>2];c[b+128+12>>2]=c[e+16+12>>2];c[b+144>>2]=c[e+32>>2];c[b+144+4>>2]=c[e+32+4>>2];c[b+144+8>>2]=c[e+32+8>>2];c[b+144+12>>2]=c[e+32+12>>2];c[b+160>>2]=c[e+48>>2];c[b+160+4>>2]=c[e+48+4>>2];c[b+160+8>>2]=c[e+48+8>>2];c[b+160+12>>2]=c[e+48+12>>2];e=b+680|0;h=e+48|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(h|0));c[b+740>>2]=0;c[b+740+4>>2]=0;c[b+740+8>>2]=0;c[b+740+12>>2]=0;c[b+756>>2]=1045220557;c[b+760>>2]=1045220557;c[b+764>>2]=1045220557;c[b+768>>2]=0;c[b+768+4>>2]=0;c[b+768+8>>2]=0;c[b+768+12>>2]=0;c[b+768+16>>2]=0;g[b+728>>2]=.699999988079071;g[b+732>>2]=1.0;g[b+736>>2]=.5;a[b+788>>0]=0;g[b+792>>2]=0.0;g[b+808>>2]=0.0;a[b+789>>0]=0;g[b+796>>2]=0.0;g[b+812>>2]=0.0;a[b+790>>0]=0;g[b+800>>2]=0.0;g[b+816>>2]=0.0;g[b+928>>2]=0.0;g[b+876>>2]=0.0;g[b+880>>2]=.10000000149011612;g[b+884>>2]=300.0;g[b+868>>2]=1.0;g[b+872>>2]=-1.0;g[b+896>>2]=0.0;g[b+900>>2]=.20000000298023224;g[b+904>>2]=0.0;g[b+908>>2]=0.0;g[b+888>>2]=1.0;g[b+892>>2]=.5;c[b+924>>2]=0;g[b+916>>2]=0.0;a[b+912>>0]=0;g[b+992>>2]=0.0;g[b+940>>2]=0.0;g[b+944>>2]=.10000000149011612;g[b+948>>2]=300.0;g[b+932>>2]=1.0;g[b+936>>2]=-1.0;g[b+960>>2]=0.0;g[b+964>>2]=.20000000298023224;g[b+968>>2]=0.0;g[b+972>>2]=0.0;g[b+952>>2]=1.0;g[b+956>>2]=.5;c[b+988>>2]=0;g[b+980>>2]=0.0;a[b+976>>0]=0;g[b+1056>>2]=0.0;g[b+1004>>2]=0.0;g[b+1008>>2]=.10000000149011612;g[b+1012>>2]=300.0;g[b+996>>2]=1.0;g[b+1e3>>2]=-1.0;g[b+1024>>2]=0.0;g[b+1028>>2]=.20000000298023224;g[b+1032>>2]=0.0;g[b+1036>>2]=0.0;g[b+1016>>2]=1.0;g[b+1020>>2]=.5;c[b+1052>>2]=0;g[b+1044>>2]=0.0;a[b+1040>>0]=0;a[b+1300>>0]=f&1;a[b+1301>>0]=1;c[b+1304>>2]=0;a[b+1308>>0]=0;w=+g[b+112>>2];C=+g[d+4>>2];v=+g[b+128>>2];B=+g[d+8>>2];u=+g[b+144>>2];A=+g[d+12>>2];t=+g[b+116>>2];s=+g[b+132>>2];r=+g[b+148>>2];q=+g[b+120>>2];o=+g[b+136>>2];m=+g[b+152>>2];z=+g[d+20>>2];y=+g[d+24>>2];x=+g[d+28>>2];p=+g[d+36>>2];n=+g[d+40>>2];l=+g[d+44>>2];E=+g[b+160>>2];D=+g[b+164>>2];i=+g[b+168>>2];k=+g[d+52>>2]+(C*E+B*D+A*i);j=z*E+y*D+x*i+ +g[d+56>>2];i=p*E+n*D+l*i+ +g[d+60>>2];g[b+48>>2]=w*C+v*B+u*A;g[b+52>>2]=C*t+B*s+A*r;g[b+56>>2]=C*q+B*o+A*m;g[b+60>>2]=0.0;g[b+64>>2]=w*z+v*y+u*x;g[b+68>>2]=t*z+s*y+r*x;g[b+72>>2]=q*z+o*y+m*x;g[b+76>>2]=0.0;g[b+80>>2]=w*p+v*n+u*l;g[b+84>>2]=t*p+s*n+r*l;g[b+88>>2]=q*p+o*n+m*l;g[b+92>>2]=0.0;g[b+96>>2]=k;g[b+100>>2]=j;g[b+104>>2]=i;g[b+108>>2]=0.0;sd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);return}function re(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0.0,Y=0.0;W=i;i=i+240|0;f=(a[b+8>>0]|0)!=0;h=f?e:d;f=f?d:e;S=+g[h+116>>2]-+g[h+52>>2];T=+g[h+120>>2]-+g[h+56>>2];U=+g[h+124>>2]-+g[h+60>>2];V=+g[h+252>>2];if(S*S+T*T+U*U<V*V){X=1.0;i=W;return +X}F=+g[f+4>>2];G=+g[f+20>>2];H=+g[f+36>>2];I=+g[f+8>>2];J=+g[f+24>>2];K=+g[f+40>>2];L=+g[f+12>>2];M=+g[f+28>>2];N=+g[f+44>>2];k=-+g[f+52>>2];l=-+g[f+56>>2];m=-+g[f+60>>2];O=+g[h+4>>2];P=+g[h+20>>2];Q=+g[h+36>>2];R=+g[h+8>>2];S=+g[h+24>>2];T=+g[h+40>>2];U=+g[h+12>>2];V=+g[h+28>>2];p=+g[h+44>>2];u=+g[h+52>>2];t=+g[h+56>>2];s=+g[h+60>>2];q=F*k+G*l+H*m+(F*u+G*t+H*s);r=I*k+J*l+K*m+(I*u+J*t+K*s);s=L*k+M*l+N*m+(L*u+M*t+N*s);t=+g[h+68>>2];u=+g[h+84>>2];v=+g[h+100>>2];w=+g[h+72>>2];x=+g[h+88>>2];y=+g[h+104>>2];z=+g[h+76>>2];A=+g[h+92>>2];B=+g[h+108>>2];n=+g[h+116>>2];o=+g[h+120>>2];E=+g[h+124>>2];C=F*k+G*l+H*m+(F*n+G*o+H*E);D=I*k+J*l+K*m+(I*n+J*o+K*E);E=L*k+M*l+N*m+(L*n+M*o+N*E);f=c[f+192>>2]|0;if(((c[f+4>>2]|0)+-21|0)>>>0>=9){X=1.0;i=W;return +X}g[W+224>>2]=q;g[W+224+4>>2]=r;g[W+224+8>>2]=s;g[W+224+12>>2]=0.0;if(C<q){g[W+224>>2]=C;j=C}else j=q;if(D<r){g[W+224+4>>2]=D;k=D}else k=r;if(E<s){g[W+224+8>>2]=E;l=E}else l=s;g[W+208>>2]=q;g[W+208+4>>2]=r;g[W+208+8>>2]=s;g[W+208+12>>2]=0.0;if(q<C){g[W+208>>2]=C;m=C}else m=q;if(r<D){g[W+208+4>>2]=D;n=D}else n=r;if(s<E){g[W+208+8>>2]=E;o=E}else o=s;Y=+g[h+248>>2];g[W+224>>2]=j-Y;g[W+224+4>>2]=k-Y;g[W+224+8>>2]=l-Y;g[W+208>>2]=Y+m;g[W+208+4>>2]=Y+n;g[W+208+8>>2]=Y+o;c[W>>2]=3688;g[W+4>>2]=F*O+G*P+H*Q;g[W+8>>2]=F*R+G*S+H*T;g[W+12>>2]=F*U+G*V+H*p;g[W+16>>2]=0.0;g[W+20>>2]=I*O+J*P+K*Q;g[W+24>>2]=I*R+J*S+K*T;g[W+28>>2]=I*U+J*V+K*p;g[W+32>>2]=0.0;g[W+36>>2]=L*O+M*P+N*Q;g[W+40>>2]=L*R+M*S+N*T;g[W+44>>2]=L*U+M*V+N*p;g[W+48>>2]=0.0;g[W+52>>2]=q;g[W+56>>2]=r;g[W+60>>2]=s;g[W+64>>2]=0.0;g[W+68>>2]=F*t+G*u+H*v;g[W+72>>2]=F*w+G*x+H*y;g[W+76>>2]=F*z+G*A+H*B;g[W+80>>2]=0.0;g[W+84>>2]=I*t+J*u+K*v;g[W+88>>2]=I*w+J*x+K*y;g[W+92>>2]=I*z+J*A+K*B;g[W+96>>2]=0.0;g[W+100>>2]=L*t+M*u+N*v;g[W+104>>2]=L*w+M*x+N*y;g[W+108>>2]=L*z+M*A+N*B;g[W+112>>2]=0.0;g[W+116>>2]=C;g[W+120>>2]=D;g[W+124>>2]=E;g[W+128>>2]=0.0;g[W+196>>2]=Y;c[W+200>>2]=c[h+244>>2];if(f|0?(mc[c[(c[f>>2]|0)+64>>2]&127](f,W,W+224|0,W+208|0),X=+g[W+200>>2],X<+g[h+244>>2]):0){g[h+244>>2]=X;Y=X;i=W;return +Y}Y=1.0;i=W;return +Y}function se(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0,X=0.0,Y=0.0;W=i;i=i+240|0;f=(a[b+8>>0]|0)!=0;h=f?e:d;f=f?d:e;S=+g[h+116>>2]-+g[h+52>>2];T=+g[h+120>>2]-+g[h+56>>2];U=+g[h+124>>2]-+g[h+60>>2];V=+g[h+252>>2];if(S*S+T*T+U*U<V*V){X=1.0;i=W;return +X}F=+g[f+4>>2];G=+g[f+20>>2];H=+g[f+36>>2];I=+g[f+8>>2];J=+g[f+24>>2];K=+g[f+40>>2];L=+g[f+12>>2];M=+g[f+28>>2];N=+g[f+44>>2];k=-+g[f+52>>2];l=-+g[f+56>>2];m=-+g[f+60>>2];O=+g[h+4>>2];P=+g[h+20>>2];Q=+g[h+36>>2];R=+g[h+8>>2];S=+g[h+24>>2];T=+g[h+40>>2];U=+g[h+12>>2];V=+g[h+28>>2];p=+g[h+44>>2];u=+g[h+52>>2];t=+g[h+56>>2];s=+g[h+60>>2];q=F*k+G*l+H*m+(F*u+G*t+H*s);r=I*k+J*l+K*m+(I*u+J*t+K*s);s=L*k+M*l+N*m+(L*u+M*t+N*s);t=+g[h+68>>2];u=+g[h+84>>2];v=+g[h+100>>2];w=+g[h+72>>2];x=+g[h+88>>2];y=+g[h+104>>2];z=+g[h+76>>2];A=+g[h+92>>2];B=+g[h+108>>2];n=+g[h+116>>2];o=+g[h+120>>2];E=+g[h+124>>2];C=F*k+G*l+H*m+(F*n+G*o+H*E);D=I*k+J*l+K*m+(I*n+J*o+K*E);E=L*k+M*l+N*m+(L*n+M*o+N*E);f=c[f+192>>2]|0;if(((c[f+4>>2]|0)+-21|0)>>>0>=9){X=1.0;i=W;return +X}g[W+224>>2]=q;g[W+224+4>>2]=r;g[W+224+8>>2]=s;g[W+224+12>>2]=0.0;if(C<q){g[W+224>>2]=C;j=C}else j=q;if(D<r){g[W+224+4>>2]=D;k=D}else k=r;if(E<s){g[W+224+8>>2]=E;l=E}else l=s;g[W+208>>2]=q;g[W+208+4>>2]=r;g[W+208+8>>2]=s;g[W+208+12>>2]=0.0;if(q<C){g[W+208>>2]=C;m=C}else m=q;if(r<D){g[W+208+4>>2]=D;n=D}else n=r;if(s<E){g[W+208+8>>2]=E;o=E}else o=s;Y=+g[h+248>>2];g[W+224>>2]=j-Y;g[W+224+4>>2]=k-Y;g[W+224+8>>2]=l-Y;g[W+208>>2]=Y+m;g[W+208+4>>2]=Y+n;g[W+208+8>>2]=Y+o;c[W>>2]=5556;g[W+4>>2]=F*O+G*P+H*Q;g[W+8>>2]=F*R+G*S+H*T;g[W+12>>2]=F*U+G*V+H*p;g[W+16>>2]=0.0;g[W+20>>2]=I*O+J*P+K*Q;g[W+24>>2]=I*R+J*S+K*T;g[W+28>>2]=I*U+J*V+K*p;g[W+32>>2]=0.0;g[W+36>>2]=L*O+M*P+N*Q;g[W+40>>2]=L*R+M*S+N*T;g[W+44>>2]=L*U+M*V+N*p;g[W+48>>2]=0.0;g[W+52>>2]=q;g[W+56>>2]=r;g[W+60>>2]=s;g[W+64>>2]=0.0;g[W+68>>2]=F*t+G*u+H*v;g[W+72>>2]=F*w+G*x+H*y;g[W+76>>2]=F*z+G*A+H*B;g[W+80>>2]=0.0;g[W+84>>2]=I*t+J*u+K*v;g[W+88>>2]=I*w+J*x+K*y;g[W+92>>2]=I*z+J*A+K*B;g[W+96>>2]=0.0;g[W+100>>2]=L*t+M*u+N*v;g[W+104>>2]=L*w+M*x+N*y;g[W+108>>2]=L*z+M*A+N*B;g[W+112>>2]=0.0;g[W+116>>2]=C;g[W+120>>2]=D;g[W+124>>2]=E;g[W+128>>2]=0.0;g[W+196>>2]=Y;c[W+200>>2]=c[h+244>>2];if(f|0?(mc[c[(c[f>>2]|0)+64>>2]&127](f,W,W+224|0,W+208|0),X=+g[W+200>>2],X<+g[h+244>>2]):0){g[h+244>>2]=X;Y=X;i=W;return +Y}Y=1.0;i=W;return +Y}function te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;m=0;do{k=m;m=m+1|0;l=(m|0)==3;j=c[b+((l?0:m)<<2)>>2]|0;k=c[b+(((k+2|0)%3|0)<<2)>>2]|0;e=c[d>>2]|0;f=c[d+4>>2]|0;do if((e|0)==(k|0)&(f|0)==(j|0)){e=2;n=3}else{if(!((e|0)==(j|0)&(f|0)==(k|0))){g=c[d+8>>2]|0;if((f|0)==(k|0)&(g|0)==(j|0)){e=0;n=3;break}if(!((f|0)==(j|0)&(g|0)==(k|0))){if(!((g|0)!=(k|0)|(e|0)==(j|0)^1)){e=1;n=3;break}if((g|0)!=(j|0)|(e|0)==(k|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=d+12+(e<<2)|0}while(0);if((n|0)==3){n=0;e=d+12+(e<<2)|0}i=c[e>>2]|0;e=c[b>>2]|0;f=c[b+4>>2]|0;do if((e|0)==(j|0)&(f|0)==(k|0)){e=2;n=11}else{if(!((e|0)==(k|0)&(f|0)==(j|0))){g=c[b+8>>2]|0;if((f|0)==(j|0)&(g|0)==(k|0)){e=0;n=11;break}if(!((f|0)==(k|0)&(g|0)==(j|0))){if(!((g|0)!=(j|0)|(e|0)==(k|0)^1)){e=1;n=11;break}if((g|0)!=(k|0)|(e|0)==(j|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=b+12+(e<<2)|0}while(0);if((n|0)==11){n=0;e=b+12+(e<<2)|0}h=c[a+(c[e>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if((e|0)==(k|0)&(f|0)==(j|0)){e=2;n=19}else{if(!((e|0)==(j|0)&(f|0)==(k|0))){g=c[h+8>>2]|0;if((f|0)==(k|0)&(g|0)==(j|0)){e=0;n=19;break}if(!((f|0)==(j|0)&(g|0)==(k|0))){if(!((g|0)!=(k|0)|(e|0)==(j|0)^1)){e=1;n=19;break}if((g|0)!=(j|0)|(e|0)==(k|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=h+12+(e<<2)|0}while(0);if((n|0)==19){n=0;e=h+12+(e<<2)|0}c[e>>2]=i;e=c[b>>2]|0;f=c[b+4>>2]|0;do if((e|0)==(j|0)&(f|0)==(k|0)){e=2;n=27}else{if(!((e|0)==(k|0)&(f|0)==(j|0))){g=c[b+8>>2]|0;if((f|0)==(j|0)&(g|0)==(k|0)){e=0;n=27;break}if(!((f|0)==(k|0)&(g|0)==(j|0))){if(!((g|0)!=(j|0)|(e|0)==(k|0)^1)){e=1;n=27;break}if((g|0)!=(k|0)|(e|0)==(j|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=b+12+(e<<2)|0}while(0);if((n|0)==27){n=0;e=b+12+(e<<2)|0}i=c[e>>2]|0;e=c[d>>2]|0;f=c[d+4>>2]|0;do if((e|0)==(k|0)&(f|0)==(j|0)){e=2;n=35}else{if(!((e|0)==(j|0)&(f|0)==(k|0))){g=c[d+8>>2]|0;if((f|0)==(k|0)&(g|0)==(j|0)){e=0;n=35;break}if(!((f|0)==(j|0)&(g|0)==(k|0))){if(!((g|0)!=(k|0)|(e|0)==(j|0)^1)){e=1;n=35;break}if((g|0)!=(j|0)|(e|0)==(k|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=d+12+(e<<2)|0}while(0);if((n|0)==35){n=0;e=d+12+(e<<2)|0}h=c[a+(c[e>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if((e|0)==(j|0)&(f|0)==(k|0)){e=2;n=43}else{if(!((e|0)==(k|0)&(f|0)==(j|0))){g=c[h+8>>2]|0;if((f|0)==(j|0)&(g|0)==(k|0)){e=0;n=43;break}if(!((f|0)==(k|0)&(g|0)==(j|0))){if(!((g|0)!=(j|0)|(e|0)==(k|0)^1)){e=1;n=43;break}if((g|0)!=(k|0)|(e|0)==(j|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=h+12+(e<<2)|0}while(0);if((n|0)==43){n=0;e=h+12+(e<<2)|0}c[e>>2]=i}while(!l);return}function ue(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=c[b>>2]|0;m=c[b+4>>2]|0;i=c[b+8>>2]|0;n=c[a+4>>2]|0;p=Uh(a,d,m,i)|0;c[p+12>>2]=c[b+12>>2];c[p+16>>2]=n+1;c[p+20>>2]=n+2;h=c[(c[a+12>>2]|0)+(c[b+12>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if((e|0)==(m|0)&(f|0)==(i|0)){e=2;o=2}else{if(!((e|0)==(i|0)&(f|0)==(m|0))){g=c[h+8>>2]|0;if((f|0)==(m|0)&(g|0)==(i|0)){e=0;o=2;break}if(!((f|0)==(i|0)&(g|0)==(m|0))){if(!((g|0)!=(m|0)|(e|0)==(i|0)^1)){e=1;o=2;break}if((g|0)!=(i|0)|(e|0)==(m|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=h+12+(e<<2)|0}while(0);if((o|0)==2)e=h+12+(e<<2)|0;c[e>>2]=n;k=Uh(a,d,i,l)|0;c[k+12>>2]=c[b+12+4>>2];c[k+16>>2]=n+2;c[k+20>>2]=n;h=c[(c[a+12>>2]|0)+(c[b+12+4>>2]<<2)>>2]|0;e=c[h>>2]|0;f=c[h+4>>2]|0;do if((e|0)==(i|0)&(f|0)==(l|0)){e=2;o=10}else{if(!((e|0)==(l|0)&(f|0)==(i|0))){g=c[h+8>>2]|0;if((f|0)==(i|0)&(g|0)==(l|0)){e=0;o=10;break}if(!((f|0)==(l|0)&(g|0)==(i|0))){if(!((g|0)!=(i|0)|(e|0)==(l|0)^1)){e=1;o=10;break}if((g|0)!=(l|0)|(e|0)==(i|0)^1){e=9432;break}else e=1}else e=0}else e=2;e=h+12+(e<<2)|0}while(0);if((o|0)==10)e=h+12+(e<<2)|0;c[e>>2]=n+1;j=Uh(a,d,l,m)|0;c[j+12>>2]=c[b+12+8>>2];c[j+16>>2]=n;c[j+20>>2]=n+1;e=c[a+12>>2]|0;i=c[e+(c[b+12+8>>2]<<2)>>2]|0;f=c[i>>2]|0;g=c[i+4>>2]|0;do if((f|0)==(l|0)&(g|0)==(m|0)){f=2;o=18}else{if(!((f|0)==(m|0)&(g|0)==(l|0))){h=c[i+8>>2]|0;if((g|0)==(l|0)&(h|0)==(m|0)){f=0;o=18;break}if(!((g|0)==(m|0)&(h|0)==(l|0))){if(!((h|0)!=(l|0)|(f|0)==(m|0)^1)){f=1;o=18;break}if((h|0)!=(m|0)|(f|0)==(l|0)^1){f=9432;break}else f=1}else f=0}else f=2;f=i+12+(f<<2)|0}while(0);if((o|0)==18)f=i+12+(f<<2)|0;c[f>>2]=n+2;f=c[e+(c[p+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){te(c[a+12>>2]|0,p,f);c[(c[a+12>>2]|0)+(c[p+24>>2]<<2)>>2]=0;c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}e=c[a+12>>2]|0}f=c[e+(c[k+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){te(c[a+12>>2]|0,k,f);c[(c[a+12>>2]|0)+(c[k+24>>2]<<2)>>2]=0;c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}e=c[a+12>>2]|0}f=c[e+(c[j+12>>2]<<2)>>2]|0;if(!(((c[f>>2]|0)!=(d|0)?(c[f+4>>2]|0)!=(d|0):0)?(c[f+8>>2]|0)!=(d|0):0)){te(c[a+12>>2]|0,j,f);c[(c[a+12>>2]|0)+(c[j+24>>2]<<2)>>2]=0;c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);c[(c[a+12>>2]|0)+(c[f+24>>2]<<2)>>2]=0;if(f|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}e=c[a+12>>2]|0}c[e+(c[b+24>>2]<<2)>>2]=0;if(!b)return;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function ve(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0;v=i;i=i+176|0;if(!(a[b+527>>0]|0)){i=v;return}g[b+36>>2]=0.0;g[b+520>>2]=0.0;g[b+516>>2]=0.0;c[b+576>>2]=0;c[b+576+4>>2]=0;c[b+576+8>>2]=0;c[b+576+12>>2]=0;if(!(a[b+524>>0]|0)){d=c[b+28>>2]|0;k=+g[b+348>>2];l=+g[b+352>>2];r=+g[b+356>>2];t=k*+g[d+20>>2]+l*+g[d+24>>2]+r*+g[d+28>>2]+ +g[d+56>>2];j=c[b+32>>2]|0;m=+g[b+412>>2];n=+g[b+416>>2];s=+g[b+420>>2];o=+g[j+52>>2];e=+g[j+56>>2];u=m*+g[j+20>>2]+n*+g[j+24>>2]+s*+g[j+28>>2]+e;p=m*+g[j+36>>2]+n*+g[j+40>>2]+s*+g[j+44>>2]+ +g[j+60>>2];q=k*+g[d+4>>2]+l*+g[d+8>>2]+r*+g[d+12>>2]+ +g[d+52>>2];r=k*+g[d+36>>2]+l*+g[d+40>>2]+r*+g[d+44>>2]+ +g[d+60>>2];s=m*+g[j+4>>2]+n*+g[j+8>>2]+s*+g[j+12>>2]+o;if((s-q)*(s-q)+(u-t)*(u-t)+(p-r)*(p-r)>1.1920928955078125e-07){h=1.0/+O(+((s-q)*(s-q)+(u-t)*(u-t)+(p-r)*(p-r)));g[v+128>>2]=(s-q)*h;g[v+128+4>>2]=(u-t)*h;g[v+128+8>>2]=(p-r)*h;c[v+128+12>>2]=0;k=(p-r)*h;f=(u-t)*h;h=(s-q)*h}else{c[v+128>>2]=1065353216;c[v+128+4>>2]=0;c[v+128+8>>2]=0;g[v+128+12>>2]=0.0;k=0.0;f=0.0;h=1.0}if(+N(+k)>.7071067690849304){x=k*k+f*f;w=1.0/+O(+x);m=-(w*k);k=w*f;n=-(k*h);l=h*m;f=x*w;h=k;k=0.0}else{m=h*h+f*f;l=1.0/+O(+m);x=-(f*l);f=l*h;n=k*x;l=m*l;m=f;f=-(f*k);h=0.0;k=x}g[v+128+16>>2]=k;g[v+128+20>>2]=m;g[v+128+24>>2]=h;g[v+128+32>>2]=f;g[v+128+36>>2]=n;g[v+128+40>>2]=l;f=o;d=0;while(1){y=c[b+28>>2]|0;c[v+80>>2]=c[y+4>>2];c[v+80+4>>2]=c[y+20>>2];c[v+80+8>>2]=c[y+36>>2];g[v+80+12>>2]=0.0;c[v+80+16>>2]=c[y+8>>2];c[v+80+20>>2]=c[y+24>>2];c[v+80+24>>2]=c[y+40>>2];g[v+80+28>>2]=0.0;c[v+80+32>>2]=c[y+12>>2];c[v+80+36>>2]=c[y+28>>2];c[v+80+40>>2]=c[y+44>>2];g[v+80+44>>2]=0.0;c[v+32>>2]=c[j+4>>2];c[v+32+4>>2]=c[j+20>>2];c[v+32+8>>2]=c[j+36>>2];g[v+32+12>>2]=0.0;c[v+32+16>>2]=c[j+8>>2];c[v+32+20>>2]=c[j+24>>2];c[v+32+24>>2]=c[j+40>>2];g[v+32+28>>2]=0.0;c[v+32+32>>2]=c[j+12>>2];c[v+32+36>>2]=c[j+28>>2];c[v+32+40>>2]=c[j+44>>2];g[v+32+44>>2]=0.0;w=t-+g[y+56>>2];x=r-+g[y+60>>2];g[v+16>>2]=q-+g[y+52>>2];g[v+16+4>>2]=w;g[v+16+8>>2]=x;g[v+16+12>>2]=0.0;x=p-+g[j+60>>2];g[v>>2]=s-f;g[v+4>>2]=u-e;g[v+8>>2]=x;g[v+12>>2]=0.0;y=c[b+28>>2]|0;j=c[b+32>>2]|0;Rg(b+48+(d*84|0)|0,v+80|0,v+32|0,v+16|0,v,v+128+(d<<4)|0,y+396|0,+g[y+344>>2],j+396|0,+g[j+344>>2]);d=d+1|0;if((d|0)==3)break;y=c[b+32>>2]|0;j=y;f=+g[y+52>>2];e=+g[y+56>>2]}d=b+32|0}else d=b+32|0;j=c[b+28>>2]|0;y=c[d>>2]|0;Fc(b,j+4|0,y+4|0,j+264|0,y+264|0);i=v;return}function we(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!((d|0)!=0&(e|0)!=0))return;if((c[b+24>>2]|0)<128?(c[b+28>>2]|0)<128:0){c[6435]=(c[6435]|0)+1;h=yc(1043)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}h=c[b+24>>2]|0;if((h|0)>0){i=0;do{l=(c[b+32>>2]|0)+(i<<3)|0;m=c[l+4>>2]|0;n=j+(i<<3)|0;c[n>>2]=c[l>>2];c[n+4>>2]=m;i=i+1|0}while((i|0)!=(h|0))}h=c[b+32>>2]|0;if(h|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=j;c[b+28>>2]=128}c[b+24>>2]=128;n=c[b+32>>2]|0;c[n>>2]=d;c[n+4>>2]=e;n=1;j=124;while(1){h=n+-1|0;i=c[b+32>>2]|0;l=c[i+(h<<3)>>2]|0;m=c[i+(h<<3)+4>>2]|0;if((h|0)>(j|0)){e=c[b+24>>2]|0;if((e|0)<(e<<1|0)?(c[b+28>>2]|0)<(e<<1|0):0){if(e){c[6435]=(c[6435]|0)+1;i=yc((e<<4|3)+16|0)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}j=c[b+24>>2]|0;if((j|0)>0){d=0;do{p=(c[b+32>>2]|0)+(d<<3)|0;o=c[p+4>>2]|0;k=i+(d<<3)|0;c[k>>2]=c[p>>2];c[k+4>>2]=o;d=d+1|0}while((d|0)!=(j|0))}}else i=0;j=c[b+32>>2]|0;if(j|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=i;c[b+28>>2]=e<<1}c[b+24>>2]=e<<1;j=(e<<1)+-4|0}do if((l|0)==(m|0)){if(c[l+40>>2]|0){p=c[l+36>>2]|0;c[i+(h<<3)>>2]=p;c[i+(h<<3)+4>>2]=p;h=n+1|0;p=c[b+32>>2]|0;o=c[l+40>>2]|0;c[p+(n<<3)>>2]=o;c[p+(n<<3)+4>>2]=o;p=c[b+32>>2]|0;o=c[l+40>>2]|0;c[p+(h<<3)>>2]=c[l+36>>2];c[p+(h<<3)+4>>2]=o;h=n+2|0}}else if(((((+g[l>>2]<=+g[m+16>>2]?+g[l+16>>2]>=+g[m>>2]:0)?+g[l+4>>2]<=+g[m+20>>2]:0)?+g[l+20>>2]>=+g[m+4>>2]:0)?+g[l+8>>2]<=+g[m+24>>2]:0)?+g[l+24>>2]>=+g[m+8>>2]:0){d=(c[m+40>>2]|0)!=0;if(!(c[l+40>>2]|0))if(d){p=c[m+36>>2]|0;c[i+(h<<3)>>2]=l;c[i+(h<<3)+4>>2]=p;h=c[b+32>>2]|0;p=c[m+40>>2]|0;c[h+(n<<3)>>2]=l;c[h+(n<<3)+4>>2]=p;h=n+1|0;break}else{ic[c[(c[f>>2]|0)+8>>2]&127](f,l,m);break}else{e=i+(h<<3)|0;k=c[l+36>>2]|0;if(d){p=c[m+36>>2]|0;c[e>>2]=k;c[i+(h<<3)+4>>2]=p;p=n+1|0;h=c[b+32>>2]|0;o=c[m+36>>2]|0;c[h+(n<<3)>>2]=c[l+40>>2];c[h+(n<<3)+4>>2]=o;h=n+2|0;o=c[b+32>>2]|0;k=c[m+40>>2]|0;c[o+(p<<3)>>2]=c[l+36>>2];c[o+(p<<3)+4>>2]=k;p=c[b+32>>2]|0;o=c[m+40>>2]|0;c[p+(h<<3)>>2]=c[l+40>>2];c[p+(h<<3)+4>>2]=o;h=n+3|0;break}else{c[e>>2]=k;c[i+(h<<3)+4>>2]=m;h=c[b+32>>2]|0;c[h+(n<<3)>>2]=c[l+40>>2];c[h+(n<<3)+4>>2]=m;h=n+1|0;break}}}while(0);if(!h)break;else n=h}return}function xe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=i;i=i+80|0;c[a+68>>2]=(c[a+68>>2]|0)+1;e=c[a+64>>2]|0;if(e|0){f=c[(c[a+24>>2]|0)+(b*80|0)+76>>2]|0;hh(e,f)|0;d=c[e+4>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[e+4>>2]=f;c[e+12>>2]=(c[e+12>>2]|0)+-1}f=(c[a+16>>2]|0)+-1|0;e=c[a+24>>2]|0;c[g>>2]=c[e+(b*80|0)>>2];c[g+4>>2]=c[e+(b*80|0)+4>>2];c[g+8>>2]=c[e+(b*80|0)+8>>2];c[g+12>>2]=c[e+(b*80|0)+12>>2];c[g+16>>2]=c[e+(b*80|0)+16>>2];c[g+16+4>>2]=c[e+(b*80|0)+16+4>>2];c[g+16+8>>2]=c[e+(b*80|0)+16+8>>2];c[g+16+12>>2]=c[e+(b*80|0)+16+12>>2];c[g+32>>2]=c[e+(b*80|0)+32>>2];c[g+32+4>>2]=c[e+(b*80|0)+32+4>>2];c[g+32+8>>2]=c[e+(b*80|0)+32+8>>2];c[g+32+12>>2]=c[e+(b*80|0)+32+12>>2];c[g+48>>2]=c[e+(b*80|0)+48>>2];c[g+48+4>>2]=c[e+(b*80|0)+48+4>>2];c[g+48+8>>2]=c[e+(b*80|0)+48+8>>2];c[g+48+12>>2]=c[e+(b*80|0)+48+12>>2];c[g+64>>2]=c[e+(b*80|0)+64>>2];c[g+64+4>>2]=c[e+(b*80|0)+64+4>>2];c[g+64+8>>2]=c[e+(b*80|0)+64+8>>2];c[g+64+12>>2]=c[e+(b*80|0)+64+12>>2];c[e+(b*80|0)>>2]=c[e+(f*80|0)>>2];c[e+(b*80|0)+4>>2]=c[e+(f*80|0)+4>>2];c[e+(b*80|0)+8>>2]=c[e+(f*80|0)+8>>2];c[e+(b*80|0)+12>>2]=c[e+(f*80|0)+12>>2];c[e+(b*80|0)+16>>2]=c[e+(f*80|0)+16>>2];c[e+(b*80|0)+16+4>>2]=c[e+(f*80|0)+16+4>>2];c[e+(b*80|0)+16+8>>2]=c[e+(f*80|0)+16+8>>2];c[e+(b*80|0)+16+12>>2]=c[e+(f*80|0)+16+12>>2];c[e+(b*80|0)+32>>2]=c[e+(f*80|0)+32>>2];c[e+(b*80|0)+32+4>>2]=c[e+(f*80|0)+32+4>>2];c[e+(b*80|0)+32+8>>2]=c[e+(f*80|0)+32+8>>2];c[e+(b*80|0)+32+12>>2]=c[e+(f*80|0)+32+12>>2];c[e+(b*80|0)+48>>2]=c[e+(f*80|0)+48>>2];c[e+(b*80|0)+48+4>>2]=c[e+(f*80|0)+48+4>>2];c[e+(b*80|0)+48+8>>2]=c[e+(f*80|0)+48+8>>2];c[e+(b*80|0)+48+12>>2]=c[e+(f*80|0)+48+12>>2];c[e+(b*80|0)+64>>2]=c[e+(f*80|0)+64>>2];c[e+(b*80|0)+64+4>>2]=c[e+(f*80|0)+64+4>>2];c[e+(b*80|0)+64+8>>2]=c[e+(f*80|0)+64+8>>2];c[e+(b*80|0)+64+12>>2]=c[e+(f*80|0)+64+12>>2];e=c[a+24>>2]|0;c[e+(f*80|0)>>2]=c[g>>2];c[e+(f*80|0)+4>>2]=c[g+4>>2];c[e+(f*80|0)+8>>2]=c[g+8>>2];c[e+(f*80|0)+12>>2]=c[g+12>>2];c[e+(f*80|0)+16>>2]=c[g+16>>2];c[e+(f*80|0)+16+4>>2]=c[g+16+4>>2];c[e+(f*80|0)+16+8>>2]=c[g+16+8>>2];c[e+(f*80|0)+16+12>>2]=c[g+16+12>>2];c[e+(f*80|0)+32>>2]=c[g+32>>2];c[e+(f*80|0)+32+4>>2]=c[g+32+4>>2];c[e+(f*80|0)+32+8>>2]=c[g+32+8>>2];c[e+(f*80|0)+32+12>>2]=c[g+32+12>>2];c[e+(f*80|0)+48>>2]=c[g+48>>2];c[e+(f*80|0)+48+4>>2]=c[g+48+4>>2];c[e+(f*80|0)+48+8>>2]=c[g+48+8>>2];c[e+(f*80|0)+48+12>>2]=c[g+48+12>>2];c[e+(f*80|0)+64>>2]=c[g+64>>2];c[e+(f*80|0)+64+4>>2]=c[g+64+4>>2];c[e+(f*80|0)+64+8>>2]=c[g+64+8>>2];c[e+(f*80|0)+64+12>>2]=c[g+64+12>>2];if(!(c[a+64>>2]|0)){b=c[a+16>>2]|0;b=b+-1|0;c[a+16>>2]=b;i=g;return}c[(c[(c[a+24>>2]|0)+(b*80|0)+76>>2]|0)+36>>2]=b;b=c[a+16>>2]|0;b=b+-1|0;c[a+16>>2]=b;i=g;return}function ye(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=i;i=i+80|0;if((h|0)>0){k=0;b=0;do{r=c[f+(k<<2)>>2]|0;b=(r|0)>(b|0)?r:b;k=k+1|0}while((k|0)<(h*3|0))}else b=0;p=b+1|0;l=_(p,p)|0;if(!l)r=0;else{c[6435]=(c[6435]|0)+1;k=yc(l+19|0)|0;if(!k)k=0;else{c[(k+4+15&-16)+-4>>2]=k;k=k+4+15&-16}Tn(k|0,0,l|0)|0;r=k}if((b|0)>-1){if((p|0)!=0?(c[6435]=(c[6435]|0)+1,m=yc((p<<4|3)+16|0)|0,(m|0)!=0):0){c[(m+4+15&-16)+-4>>2]=m;l=m+4+15&-16}else l=0;b=0;do{q=l+(b<<4)|0;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];b=b+1|0}while((b|0)!=(p|0));b=0;k=0;while(1){o=c[e+(b+1<<2)>>2]|0;q=c[e+(b+2<<2)>>2]|0;c[l+(k<<4)>>2]=c[e+(b<<2)>>2];c[l+(k<<4)+4>>2]=o;c[l+(k<<4)+8>>2]=q;g[l+(k<<4)+12>>2]=0.0;b=b+3|0;if((b|0)>=(p*3|0))break;else k=k+1|0}}else l=0;c[6435]=(c[6435]|0)+1;b=yc(1271)|0;if(!b)q=0;else{c[(b+4+15&-16)+-4>>2]=b;q=b+4+15&-16}Kc(q,d,p,l,0);if((h|0)>0){o=0;do{e=c[f+(o<<2)>>2]|0;d=c[f+(o+1<<2)>>2]|0;n=c[f+(o+2<<2)>>2]|0;k=_(e,p)|0;b=r+(k+n)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[r+(e+(_(n,p)|0))>>0]=1;Rf(q,n,e,0,0)}m=_(d,p)|0;b=r+(m+e)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[r+(d+k)>>0]=1;Rf(q,e,d,0,0)}b=r+((_(n,p)|0)+d)|0;if(!(a[b>>0]|0)){a[b>>0]=1;a[r+(n+m)>>0]=1;Rf(q,d,n,0,0)}Zf(q,e,d,n,0);o=o+3|0}while((o|0)<(h*3|0))}if(j){k=c[q+732>>2]|0;if((k|0)>0){m=q+740|0;n=0;b=243703;do{e=c[m>>2]|0;d=e+(n*52|0)|0;b=(_(b,1664525)|0)+1013904223|0;o=s+16|0;p=d;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));o=d;p=e+(((b>>>0)%(k>>>0)|0)*52|0)|0;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));o=e+(((b>>>0)%(k>>>0)|0)*52|0)|0;p=s+16|0;f=o+52|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));n=n+1|0}while((n|0)!=(k|0))}else b=243703;d=c[q+752>>2]|0;if((d|0)>0){e=q+760|0;n=0;do{m=c[e>>2]|0;k=m+(n*44|0)|0;b=(_(b,1664525)|0)+1013904223|0;m=m+(((b>>>0)%(d>>>0)|0)*44|0)|0;o=s+16|0;p=k;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));o=k;p=m;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));o=m;p=s+16|0;f=o+44|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(f|0));n=n+1|0}while((n|0)!=(d|0))}}if(l|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}if(!r){i=s;return q|0}c[6436]=(c[6436]|0)+1;hd(c[r+-4>>2]|0);i=s;return q|0}function ze(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=+h;j=+j;k=+k;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0.0,V=0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0;V=i;i=i+32|0;H=+g[f>>2];Q=+g[f+4>>2];S=+g[f+8>>2];J=1.0/+O(+((h-H)*(h-H)+(j-Q)*(j-Q)+(k-S)*(k-S)));N=(h-H)*J==0.0?999999984306749440.0:1.0/((h-H)*J);P=(j-Q)*J==0.0?999999984306749440.0:1.0/((j-Q)*J);R=(k-S)*J==0.0?999999984306749440.0:1.0/((k-S)*J);ea=(H>h?h:H)+ +g[l>>2];ca=(Q>j?j:Q)+ +g[l+4>>2];da=(S>k?k:S)+ +g[l+8>>2];aa=(H<h?h:H)+ +g[m>>2];t=(Q<j?j:Q)+ +g[m+4>>2];Y=(S<k?k:S)+ +g[m+8>>2];$=+g[a+4>>2];ea=ea<$?$:ea;u=+g[a+8>>2];ca=ca<u?u:ca;X=+g[a+12>>2];da=da<X?X:da;ba=+g[a+20>>2];s=+g[a+24>>2];Z=+g[a+28>>2];_=+g[a+36>>2];v=+g[a+40>>2];W=+g[a+44>>2];T=~~(((ba<ea?ba:ea)-$)*_)&65534;E=~~(((Z<da?Z:da)-X)*W)&65534;G=~~(((s<ca?s:ca)-u)*v)&65534;aa=aa<$?$:aa;t=t<u?u:t;Y=Y<X?X:Y;I=(~~(((ba<aa?ba:aa)-$)*_+1.0)&65535|1)&65535;D=(~~(((Z<Y?Z:Y)-X)*W+1.0)&65535|1)&65535;F=(~~(((s<t?s:t)-u)*v+1.0)&65535|1)&65535;if((n|0)>0){p=0;q=c[a+136>>2]|0;o=0;do{o=o+1|0;r=q+6|0;w=b[q>>1]|0;x=q+10|0;y=b[q+4>>1]|0;z=q+8|0;A=b[q+2>>1]|0;B=q+12|0;C=(c[B>>2]|0)>-1;do if(((I&65535)>=(w&65535)?(T&65535)<=(e[r>>1]|0):0)&(E&65535)<=(e[x>>1]|0)&(D&65535)>=(y&65535)&(G&65535)<=(e[z>>1]|0)&(F&65535)>=(A&65535)){aa=+g[a+36>>2];ca=+g[a+40>>2];ea=+g[a+44>>2];ba=+g[a+4>>2];da=+g[a+8>>2];u=+g[a+12>>2];g[V+12>>2]=0.0;v=+(e[r>>1]|0)/aa+ba;s=+(e[z>>1]|0)/ca+da;t=+(e[x>>1]|0)/ea+u;g[V+28>>2]=0.0;g[V>>2]=+(w&65535)/aa+ba-+g[m>>2];g[V+4>>2]=+(A&65535)/ca+da-+g[m+4>>2];g[V+8>>2]=+(y&65535)/ea+u-+g[m+8>>2];g[V+16>>2]=v-+g[l>>2];g[V+20>>2]=s-+g[l+4>>2];g[V+24>>2]=t-+g[l+8>>2];t=+g[f>>2];s=N*(+g[V+((N<0.0&1)<<4)>>2]-t);t=N*(+g[V+((N<0.0^1)<<4)>>2]-t);v=+g[f+4>>2];u=P*(+g[V+((P<0.0&1)<<4)+4>>2]-v);v=P*(+g[V+((P<0.0^1)<<4)+4>>2]-v);if(!(u>t|s>v)?(K=u>s?u:s,U=v<t?v:t,M=+g[f+8>>2],L=R*(+g[V+((R<0.0&1)<<4)+8>>2]-M),M=R*(+g[V+((R<0.0^1)<<4)+8>>2]-M),!(L>U|K>M)):0){r=(M<U?M:U)>0.0?(L>K?L:K)<(k-S)*(k-S)*J+((h-H)*(h-H)*J+(j-Q)*(j-Q)*J):0;if(!(C&r)){w=9;break}w=c[B>>2]|0;ic[c[(c[d>>2]|0)+8>>2]&127](d,w>>21,w&2097151);w=10;break}r=0;w=9}else{r=0;w=9}while(0);if((w|0)==9){w=0;if(C|r)w=10;else{C=c[B>>2]|0;p=p-C|0;q=q+(0-C<<4)|0}}if((w|0)==10){p=p+1|0;q=q+16|0}}while((p|0)<(n|0))}else o=0;if((c[6167]|0)>=(o|0)){i=V;return}c[6167]=o;i=V;return}function Ae(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;Tg(a,b+(c*284|0)|0,d);m=+g[b+(c*284|0)+52>>2];h=+g[b+(c*284|0)+56>>2];q=+g[b+(c*284|0)+60>>2];G=+g[b+(c*284|0)+76>>2];x=+g[b+(c*284|0)+72>>2];z=+g[b+(c*284|0)+68>>2];w=1.0/+O(+((x*-m-z*-h)*(x*-m-z*-h)+((G*-h-x*-q)*(G*-h-x*-q)+(z*-q-G*-m)*(z*-q-G*-m))));v=(G*-h-x*-q)*w;u=w*(z*-q-G*-m);w=w*(x*-m-z*-h);e=+g[b+(c*284|0)+232>>2]*.5;k=+R(+e)/+O(+(m*m+h*h+q*q));e=+Q(+e);l=2.0/(e*e+(k*-q*k*-q+(k*-m*k*-m+k*-h*k*-h)));E=1.0-(k*-h*k*-h*l+k*-q*k*-q*l);D=k*-m*k*-h*l-e*k*-q*l;F=k*-m*k*-q*l+e*k*-h*l;B=k*-m*k*-h*l+e*k*-q*l;A=1.0-(k*-m*k*-m*l+k*-q*k*-q*l);C=k*-h*k*-q*l-e*k*-m*l;j=k*-m*k*-q*l-e*k*-h*l;e=k*-h*k*-q*l+e*k*-m*l;l=1.0-(k*-m*k*-m*l+k*-h*k*-h*l);k=+g[b+(c*284|0)+236>>2]*-.5;y=+R(+k)/+O(+(G*G+(x*x+z*z)));k=+Q(+k);r=2.0/(k*k+(G*y*G*y+(z*y*z*y+x*y*x*y)));n=1.0-(x*y*x*y*r+G*y*G*y*r);i=z*y*x*y*r-k*G*y*r;t=z*y*G*y*r+k*x*y*r;o=z*y*x*y*r+k*G*y*r;f=1.0-(z*y*z*y*r+G*y*G*y*r);s=x*y*G*y*r-k*z*y*r;p=z*y*G*y*r-k*x*y*r;k=x*y*G*y*r+k*z*y*r;r=1.0-(z*y*z*y*r+x*y*x*y*r);y=+g[b+(c*284|0)+68>>2];x=+g[b+(c*284|0)+72>>2];z=+g[b+(c*284|0)+76>>2];g[b+(c*284|0)+92>>2]=z*(E*t+D*s+F*r)+(y*(F*p+(D*o+E*n))+x*(F*k+(E*i+D*f)));g[b+(c*284|0)+96>>2]=w*(E*t+D*s+F*r)+(v*(F*p+(D*o+E*n))+u*(F*k+(E*i+D*f)));g[b+(c*284|0)+100>>2]=(E*t+D*s+F*r)*-q+((F*p+(D*o+E*n))*-m+(F*k+(E*i+D*f))*-h);g[b+(c*284|0)+104>>2]=0.0;g[b+(c*284|0)+108>>2]=z*(B*t+A*s+C*r)+(y*(C*p+(A*o+B*n))+x*(C*k+(B*i+A*f)));g[b+(c*284|0)+112>>2]=w*(B*t+A*s+C*r)+(v*(C*p+(A*o+B*n))+u*(C*k+(B*i+A*f)));g[b+(c*284|0)+116>>2]=(B*t+A*s+C*r)*-q+((C*p+(A*o+B*n))*-m+(C*k+(B*i+A*f))*-h);g[b+(c*284|0)+120>>2]=0.0;g[b+(c*284|0)+124>>2]=z*(j*t+e*s+l*r)+(y*(l*p+(e*o+j*n))+x*(l*k+(j*i+e*f)));g[b+(c*284|0)+128>>2]=w*(j*t+e*s+l*r)+(v*(l*p+(e*o+j*n))+u*(l*k+(j*i+e*f)));g[b+(c*284|0)+132>>2]=(j*t+e*s+l*r)*-q+((l*p+(e*o+j*n))*-m+(l*k+(j*i+e*f))*-h);g[b+(c*284|0)+136>>2]=0.0;h=+g[b+(c*284|0)+32>>2];f=h*+g[b+(c*284|0)+56>>2]+ +g[b+(c*284|0)+40>>2];e=h*+g[b+(c*284|0)+60>>2]+ +g[b+(c*284|0)+44>>2];g[b+(c*284|0)+140>>2]=+g[b+(c*284|0)+52>>2]*h+ +g[b+(c*284|0)+36>>2];g[b+(c*284|0)+144>>2]=f;g[b+(c*284|0)+148>>2]=e;g[b+(c*284|0)+152>>2]=0.0;return}function Be(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=+j;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0;D=i;i=i+32|0;if(!d){i=D;return}q=c[b+44>>2]|0;if((q|0)<128){if((c[b+48>>2]|0)<128){c[6435]=(c[6435]|0)+1;n=yc(531)|0;if(!n)p=0;else{c[(n+4+15&-16)+-4>>2]=n;p=n+4+15&-16}n=c[b+44>>2]|0;if((n|0)>0){o=0;do{c[p+(o<<2)>>2]=c[(c[b+52>>2]|0)+(o<<2)>>2];o=o+1|0}while((o|0)!=(n|0))}n=c[b+52>>2]|0;if(n|0){if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=p;c[b+48>>2]=128;o=b+52|0}else o=b+52|0;n=q;do{c[(c[o>>2]|0)+(n<<2)>>2]=0;n=n+1|0}while((n|0)!=128);y=b+48|0}else{o=b+52|0;y=b+48|0}c[b+44>>2]=128;c[c[o>>2]>>2]=d;x=1;n=126;while(1){p=x+-1|0;q=c[o>>2]|0;w=c[q+(p<<2)>>2]|0;t=+g[w+4>>2]-+g[l+4>>2];r=+g[w+8>>2]-+g[l+8>>2];g[D>>2]=+g[w>>2]-+g[l>>2];g[D+4>>2]=t;g[D+8>>2]=r;g[D+12>>2]=0.0;r=+g[w+20>>2]-+g[k+4>>2];t=+g[w+24>>2]-+g[k+8>>2];g[D+16>>2]=+g[w+16>>2]-+g[k>>2];g[D+20>>2]=r;g[D+24>>2]=t;g[D+28>>2]=0.0;v=c[h>>2]|0;t=+g[e>>2];r=+g[f>>2];s=(+g[D+(v<<4)>>2]-t)*r;t=r*(+g[D+(1-v<<4)>>2]-t);v=c[h+4>>2]|0;r=+g[e+4>>2];E=+g[f+4>>2];u=(+g[D+(v<<4)+4>>2]-r)*E;r=E*(+g[D+(1-v<<4)+4>>2]-r);do if((!(u>t|s>r)?(z=u>s?u:s,C=r<t?r:t,v=c[h+8>>2]|0,B=+g[e+8>>2],E=+g[f+8>>2],A=(+g[D+(v<<4)+8>>2]-B)*E,B=E*(+g[D+(1-v<<4)+8>>2]-B),!(A>C|z>B)):0)?((B<C?B:C)>0.0?(A>z?A:z)<j:0):0){if(!(c[w+40>>2]|0)){Cb[c[(c[m>>2]|0)+12>>2]&127](m,w);break}if((p|0)>(n|0)){v=c[b+44>>2]|0;if((v|0)<(v<<1|0)){if((c[y>>2]|0)<(v<<1|0)){if(v){c[6435]=(c[6435]|0)+1;n=yc((v<<3|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}q=c[b+44>>2]|0;if((q|0)>0){d=0;do{c[n+(d<<2)>>2]=c[(c[o>>2]|0)+(d<<2)>>2];d=d+1|0}while((d|0)!=(q|0))}}else n=0;q=c[o>>2]|0;if(q|0){if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[o>>2]=0}a[b+56>>0]=1;c[o>>2]=n;c[y>>2]=v<<1;q=v}else{n=q;q=v}do{c[n+(q<<2)>>2]=0;q=q+1|0;n=c[o>>2]|0}while((q|0)!=(v<<1|0))}else n=q;c[b+44>>2]=v<<1;q=n;n=(v<<1)+-2|0}c[q+(p<<2)>>2]=c[w+36>>2];c[(c[o>>2]|0)+(x<<2)>>2]=c[w+40>>2];p=x+1|0}while(0);if(!p)break;else x=p}i=D;return}function Ce(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0.0;D=i;i=i+32|0;q=+g[d>>2];j=(g[k>>2]=q,c[k>>2]|0);t=q<999999984306749440.0?j:1566444395;p=+g[d+4>>2];m=(g[k>>2]=p,c[k>>2]|0);u=p<999999984306749440.0?m:1566444395;E=+g[d+8>>2];o=(g[k>>2]=E,c[k>>2]|0);w=E<999999984306749440.0?o:1566444395;s=+g[d+12>>2];y=s<0.0?s:0.0;j=q>-999999984306749440.0?j:-581039253;m=p>-999999984306749440.0?m:-581039253;o=E>-999999984306749440.0?o:-581039253;s=s>0.0?s:0.0;E=+g[d+16>>2];B=E<(c[k>>2]=t,+g[k>>2]);h=(g[k>>2]=E,c[k>>2]|0);t=B?h:t;p=+g[d+20>>2];B=p<(c[k>>2]=u,+g[k>>2]);l=(g[k>>2]=p,c[k>>2]|0);u=B?l:u;q=+g[d+24>>2];B=q<(c[k>>2]=w,+g[k>>2]);n=(g[k>>2]=q,c[k>>2]|0);w=B?n:w;r=+g[d+28>>2];y=r<y?r:y;x=(c[k>>2]=j,+g[k>>2])<E?h:j;v=(c[k>>2]=m,+g[k>>2])<p?l:m;m=(c[k>>2]=o,+g[k>>2])<q?n:o;s=s<r?r:s;E=+g[d+32>>2];B=E<(c[k>>2]=t,+g[k>>2]);h=(g[k>>2]=E,c[k>>2]|0);B=B?h:t;q=+g[d+36>>2];A=q<(c[k>>2]=u,+g[k>>2]);j=(g[k>>2]=q,c[k>>2]|0);A=A?j:u;r=+g[d+40>>2];z=r<(c[k>>2]=w,+g[k>>2]);l=(g[k>>2]=r,c[k>>2]|0);z=z?l:w;p=+g[d+44>>2];y=p<y?p:y;w=(c[k>>2]=x,+g[k>>2])<E?h:x;v=(c[k>>2]=v,+g[k>>2])<q?j:v;u=(c[k>>2]=m,+g[k>>2])<r?l:m;p=s<p?p:s;t=c[b+4>>2]|0;h=c[t+4>>2]|0;if((h|0)==(c[t+8>>2]|0)?(C=h|0?h<<1:1,(h|0)<(C|0)):0){if(!C)o=0;else{c[6435]=(c[6435]|0)+1;h=yc(C<<6|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}o=h;h=c[t+4>>2]|0}if((h|0)>0){j=0;do{l=o+(j<<6)|0;m=(c[t+12>>2]|0)+(j<<6)|0;n=l+64|0;do{c[l>>2]=c[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));j=j+1|0}while((j|0)!=(h|0))}h=c[t+12>>2]|0;if(h|0){if(a[t+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[t+12>>2]=0}a[t+16>>0]=1;c[t+12>>2]=o;c[t+8>>2]=C;h=c[t+4>>2]|0}C=c[t+12>>2]|0;c[C+(h<<6)>>2]=B;c[C+(h<<6)+4>>2]=A;c[C+(h<<6)+8>>2]=z;g[C+(h<<6)+12>>2]=y;c[C+(h<<6)+16>>2]=w;c[C+(h<<6)+20>>2]=v;c[C+(h<<6)+24>>2]=u;g[C+(h<<6)+28>>2]=p;c[C+(h<<6)+32>>2]=-1;c[C+(h<<6)+36>>2]=e;c[C+(h<<6)+40>>2]=f;f=C+(h<<6)+44|0;c[f>>2]=c[D>>2];c[f+4>>2]=c[D+4>>2];c[f+8>>2]=c[D+8>>2];c[f+12>>2]=c[D+12>>2];c[f+16>>2]=c[D+16>>2];c[t+4>>2]=(c[t+4>>2]|0)+1;i=D;return}function De(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;o=i;i=i+16|0;l=+g[d>>2];m=+g[d+4>>2];n=+g[d+8>>2];j=+g[e>>2];k=+g[e+4>>2];h=+g[e+8>>2];if(!(a[b+228>>0]|0)){z=+g[b+100>>2];w=+g[b+116>>2];C=+g[b+132>>2];y=+g[b+104>>2];u=+g[b+120>>2];B=+g[b+136>>2];x=+g[b+108>>2];s=+g[b+124>>2];A=+g[b+140>>2];F=-+g[b+148>>2];E=-+g[b+152>>2];D=-+g[b+156>>2];J=+g[b+164>>2];I=+g[b+168>>2];r=+g[b+172>>2];H=+g[b+180>>2];G=+g[b+184>>2];q=+g[b+188>>2];v=+g[b+196>>2];t=+g[b+200>>2];p=+g[b+204>>2];r=h*(C*J+B*I+A*r)+(j*(z*J+y*I+x*r)+k*(w*J+u*I+s*r))+(J*(z*F+w*E+C*D)+(y*F+u*E+B*D)*I+(x*F+s*E+A*D)*r+ +g[b+212>>2]);q=h*(C*H+B*G+A*q)+(j*(z*H+y*G+x*q)+k*(w*H+u*G+s*q))+((z*F+w*E+C*D)*H+(y*F+u*E+B*D)*G+(x*F+s*E+A*D)*q+ +g[b+216>>2]);p=(z*F+w*E+C*D)*v+(y*F+u*E+B*D)*t+(x*F+s*E+A*D)*p+ +g[b+220>>2]+(h*(C*v+B*t+A*p)+(j*(z*v+y*t+x*p)+k*(w*v+u*t+s*p)));g[o>>2]=r;g[o+4>>2]=q;g[o+8>>2]=p;f=(l*f+j-r)*+g[d>>2]+(m*f+k-q)*+g[d+4>>2]+(n*f+h-p)*+g[d+8>>2];e=o+12|0;g[e>>2]=0.0;b=b+32|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;hc[e&15](b,d,o,f);i=o;return}else{z=+g[b+36>>2];C=+g[b+52>>2];w=+g[b+68>>2];A=+g[b+40>>2];E=+g[b+56>>2];x=+g[b+72>>2];B=+g[b+44>>2];G=+g[b+60>>2];y=+g[b+76>>2];t=-+g[b+84>>2];u=-+g[b+88>>2];v=-+g[b+92>>2];p=+g[b+164>>2];q=+g[b+168>>2];H=+g[b+172>>2];r=+g[b+180>>2];s=+g[b+184>>2];I=+g[b+188>>2];D=+g[b+196>>2];F=+g[b+200>>2];J=+g[b+204>>2];H=(n*f+h)*(w*p+x*q+y*H)+((l*f+j)*(z*p+A*q+B*H)+(m*f+k)*(C*p+E*q+G*H))+(p*(z*t+C*u+w*v)+(A*t+E*u+x*v)*q+(B*t+G*u+y*v)*H+ +g[b+212>>2]);I=(n*f+h)*(w*r+x*s+y*I)+((l*f+j)*(z*r+A*s+B*I)+(m*f+k)*(C*r+E*s+G*I))+((z*t+C*u+w*v)*r+(A*t+E*u+x*v)*s+(B*t+G*u+y*v)*I+ +g[b+216>>2]);J=(z*t+C*u+w*v)*D+(A*t+E*u+x*v)*F+(B*t+G*u+y*v)*J+ +g[b+220>>2]+((n*f+h)*(w*D+x*F+y*J)+((l*f+j)*(z*D+A*F+B*J)+(m*f+k)*(C*D+E*F+G*J)));g[o>>2]=H+l*(l*(H-j)+m*(I-k)+n*(J-h));g[o+4>>2]=I+m*(l*(H-j)+m*(I-k)+n*(J-h));g[o+8>>2]=J+n*(l*(H-j)+m*(I-k)+n*(J-h));J=l*(H-j)+m*(I-k)+n*(J-h);e=o+12|0;g[e>>2]=0.0;b=b+32|0;b=c[b>>2]|0;e=c[b>>2]|0;e=e+16|0;e=c[e>>2]|0;hc[e&15](b,d,o,J);i=o;return}}function Ee(b,d,e,f,h,i,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;if((j|0)<2|(k|0)<2){m=0;return m|0}r=_(k,j)|0;c[6435]=(c[6435]|0)+1;b=yc(r>>>0>268435455?18:(r<<4|3)+16|0)|0;if(!b)q=0;else{c[(b+4+15&-16)+-4>>2]=b;q=b+4+15&-16}n=r>>>0>1073741823?-1:r<<2;n=(n|0)==0?1:n;while(1){p=yc(n)|0;if(p|0)break;b=c[6564]|0;c[6564]=b+0;if(!b){o=8;break}jc[b&3]()}if((o|0)==8){m=Ya(4)|0;c[m>>2]=9640;pb(m|0,2800,251)}if((k|0)>0?(j|0)>0:0){o=0;do{y=+(o|0)/+(k+-1|0);s=+g[e>>2];s=s+y*(+g[h>>2]-s);t=+g[e+4>>2];t=t+y*(+g[h+4>>2]-t);u=+g[e+8>>2];u=u+y*(+g[h+8>>2]-u);v=+g[f>>2];w=+g[f+4>>2];x=+g[f+8>>2];b=_(o,j)|0;v=v+y*(+g[i>>2]-v)-s;w=w+y*(+g[i+4>>2]-w)-t;x=x+y*(+g[i+8>>2]-x)-u;n=0;do{y=+(n|0)/+(j+-1|0);z=n+b|0;g[q+(z<<4)>>2]=s+v*y;g[q+(z<<4)+4>>2]=t+w*y;g[q+(z<<4)+8>>2]=u+x*y;g[q+(z<<4)+12>>2]=0.0;g[p+(z<<2)>>2]=1.0;n=n+1|0}while((n|0)!=(j|0));o=o+1|0}while((o|0)!=(k|0))}c[6435]=(c[6435]|0)+1;b=yc(1271)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}Kc(b,d,r,q,p);if(l&1|0){g[(c[b+720>>2]|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&2|0){g[(c[b+720>>2]|0)+((j+-1|0)*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&4|0){z=_(k+-1|0,j)|0;g[(c[b+720>>2]|0)+(z*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(l&8|0){z=j+-1+(_(k+-1|0,j)|0)|0;g[(c[b+720>>2]|0)+(z*104|0)+88>>2]=0.0;a[b+924>>0]=1}if(q|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}hd(p);if((k|0)<=0){z=b;return z|0}q=0;while(1){a:do if((j|0)>0){r=_(q,j)|0;n=q+1|0;o=_(n,j)|0;if((n|0)<(k|0))h=0;else{o=0;while(1){p=o;o=o+1|0;if((o|0)<(j|0))Rf(b,p+r|0,o+r|0,0,0);if((o|0)==(j|0))break a}}do{p=h+r|0;i=h;h=h+1|0;do if((h|0)<(j|0)){e=h+r|0;Rf(b,p,e,0,0);Rf(b,p,i+o|0,0,0);if(!(i+q&1)){Zf(b,i+o|0,p,e,0);Zf(b,i+o|0,e,h+o|0,0);if(!m)break;Rf(b,e,i+o|0,0,0);break}else{f=h+o|0;Zf(b,p,e,f,0);Zf(b,p,f,i+o|0,0);if(!m)break;Rf(b,p,f,0,0);break}}else Rf(b,p,i+o|0,0,0);while(0)}while((h|0)!=(j|0))}else n=q+1|0;while(0);if((n|0)==(k|0))break;else q=n}return b|0}function Fe(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+16|0;o=c[b+452>>2]|0;ic[c[(c[o>>2]|0)+16>>2]&127](o,b+324|0,0);o=c[b+452>>2]|0;Eb[c[(c[o>>2]|0)+12>>2]&127](o)|0;ad(b,d);li(11792);o=c[b+328>>2]|0;if((o|0)>0){e=c[b+336>>2]|0;f=0;l=0;do{n=c[(c[e+(f<<2)>>2]|0)+384>>2]|0;l=(l|0)>(n|0)?l:n;f=f+1|0}while((f|0)!=(o|0));f=0;while(1){e=c[e+(f<<2)>>2]|0;if((c[e+852>>2]|0)>0){h=0;do{n=c[(c[e+860>>2]|0)+(h<<2)>>2]|0;Jb[c[(c[n>>2]|0)+8>>2]&15](n,+g[e+452>>2],l);h=h+1|0}while((h|0)<(c[e+852>>2]|0))}f=f+1|0;if((f|0)==(o|0))break;e=c[b+336>>2]|0}if((l|0)>0){j=0;do{k=0;do{e=c[(c[b+336>>2]|0)+(k<<2)>>2]|0;f=c[e+852>>2]|0;if((f|0)>0){h=0;do{n=c[(c[e+860>>2]|0)+(h<<2)>>2]|0;Nb[c[(c[n>>2]|0)+12>>2]&7](n,+g[e+452>>2],1.0);h=h+1|0}while((h|0)!=(f|0))}k=k+1|0}while((k|0)!=(o|0));j=j+1|0}while((j|0)!=(l|0));n=0}else n=0;do{m=c[(c[b+336>>2]|0)+(n<<2)>>2]|0;if((c[m+852>>2]|0)>0){h=0;do{e=c[(c[m+860>>2]|0)+(h<<2)>>2]|0;zb[c[(c[e>>2]|0)+16>>2]&31](e,+g[m+452>>2]);e=c[m+860>>2]|0;f=c[e+(h<<2)>>2]|0;a:do if(a[f+152>>0]|0){if(!f)l=e;else{c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);l=c[m+860>>2]|0}e=h+-1|0;f=c[m+852>>2]|0;if((f|0)>0){k=c[l+(h<<2)>>2]|0;h=0;while(1){j=l+(h<<2)|0;if((c[j>>2]|0)==(k|0))break;h=h+1|0;if((h|0)>=(f|0))break a}if((h|0)<(f|0)){c[j>>2]=c[l+(f+-1<<2)>>2];c[(c[m+860>>2]|0)+(f+-1<<2)>>2]=k;c[m+852>>2]=f+-1;f=f+-1|0}}}else{f=c[m+852>>2]|0;e=h}while(0);h=e+1|0}while((h|0)<(f|0))}n=n+1|0}while((n|0)!=(o|0))}e=c[b+452>>2]|0;zb[c[(c[e>>2]|0)+28>>2]&31](e,+g[e+12>>2]*d);e=c[2357]|0;o=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=o;do if(!o){if(c[e+4>>2]|0){tb(p|0,0)|0;o=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[p+4>>2]|0)-(c[o+4>>2]|0)+(((c[p>>2]|0)-(c[o>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2357]|0}c[2357]=c[e+20>>2]}while(0);if((c[b+328>>2]|0)<=0){b=c[b+452>>2]|0;o=c[b>>2]|0;o=o+32|0;o=c[o>>2]|0;Ab[o&255](b);i=p;return}e=0;do{o=c[(c[b+336>>2]|0)+(e<<2)>>2]|0;bi(o,o);e=e+1|0}while((e|0)<(c[b+328>>2]|0));b=c[b+452>>2]|0;o=c[b>>2]|0;o=o+32|0;o=c[o>>2]|0;Ab[o&255](b);i=p;return}function Ge(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0;r=i;i=i+64|0;li(14295);d=c[b+8>>2]|0;if((d|0)>0){o=0;do{n=c[(c[b+16>>2]|0)+(o<<2)>>2]|0;if(!(a[b+76>>0]|0))switch(c[n+216>>2]|0){case 2:case 5:break;default:q=11}else q=11;if((q|0)==11){q=0;d=c[n+192>>2]|0;mc[c[(c[d>>2]|0)+8>>2]&127](d,n+4|0,r+48|0,r+32|0);e=+g[r+48>>2]+-.019999999552965164;g[r+48>>2]=e;f=+g[r+48+4>>2]+-.019999999552965164;g[r+48+4>>2]=f;h=+g[r+48+8>>2]+-.019999999552965164;g[r+48+8>>2]=h;j=+g[r+32>>2]+.019999999552965164;g[r+32>>2]=j;k=+g[r+32+4>>2]+.019999999552965164;g[r+32+4>>2]=k;l=+g[r+32+8>>2]+.019999999552965164;g[r+32+8>>2]=l;if(((a[b+44>>0]|0)!=0?(c[n+236>>2]|0)==2:0)?(c[n+204>>2]&3|0)==0:0){d=c[n+192>>2]|0;mc[c[(c[d>>2]|0)+8>>2]&127](d,n+68|0,r+16|0,r);f=+g[r+16>>2]+-.019999999552965164;g[r+16>>2]=f;h=+g[r+16+4>>2]+-.019999999552965164;g[r+16+4>>2]=h;j=+g[r+16+8>>2]+-.019999999552965164;g[r+16+8>>2]=j;k=+g[r>>2]+.019999999552965164;g[r>>2]=k;l=+g[r+4>>2]+.019999999552965164;g[r+4>>2]=l;m=+g[r+8>>2]+.019999999552965164;g[r+8>>2]=m;e=+g[r+48>>2];if(f<e){g[r+48>>2]=f;e=f}f=+g[r+48+4>>2];if(h<f){g[r+48+4>>2]=h;f=h}h=+g[r+48+8>>2];if(j<h){g[r+48+8>>2]=j;h=j}j=+g[r+16+12>>2];if(j<+g[r+48+12>>2])g[r+48+12>>2]=j;j=+g[r+32>>2];if(j<k){g[r+32>>2]=k;j=k}k=+g[r+32+4>>2];if(k<l){g[r+32+4>>2]=l;k=l}l=+g[r+32+8>>2];if(l<m){g[r+32+8>>2]=m;l=m}m=+g[r+12>>2];if(+g[r+32+12>>2]<m)g[r+32+12>>2]=m}d=c[b+68>>2]|0;if((c[n+204>>2]&1|0)==0?(j=j-e,k=k-f,m=l-h,!(j*j+k*k+m*m<999999995904.0)):0){if((c[n+216>>2]&-2|0)!=4)c[n+216>>2]=5;if(a[14307]|0?(p=c[b+72>>2]|0,p|0):0){a[14307]=0;Cb[c[(c[p>>2]|0)+36>>2]&127](p,14308);n=c[b+72>>2]|0;Cb[c[(c[n>>2]|0)+36>>2]&127](n,14357);n=c[b+72>>2]|0;Cb[c[(c[n>>2]|0)+36>>2]&127](n,14425);n=c[b+72>>2]|0;Cb[c[(c[n>>2]|0)+36>>2]&127](n,14490)}}else yb[c[(c[d>>2]|0)+16>>2]&31](d,c[n+188>>2]|0,r+48|0,r+32|0,c[b+24>>2]|0);d=c[b+8>>2]|0}o=o+1|0}while((o|0)<(d|0))}d=c[2357]|0;q=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=q;if(q|0){i=r;return}do if(c[d+4>>2]|0){tb(r+48|0,0)|0;q=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[r+48+4>>2]|0)-(c[q+4>>2]|0)+(((c[r+48>>2]|0)-(c[q>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=r;return}}while(0);c[2357]=c[d+20>>2];i=r;return}function He(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,j=0,k=0.0;a=i;i=i+192|0;switch(c[b+388>>2]&15|0){case 1:{c[a+160>>2]=3364;h=c[d+8>>2]|0;h=(c[h+236>>2]&2|0)==0?0:h;j=c[d+12>>2]|0;k=+g[j+48>>2];e=+g[j+52>>2];f=+g[j+56>>2];f=+O(+((k-k)*(k-k)+(e-e)*(e-e)+(f-f)*(f-f)));j=c[b+192>>2]|0;e=+Sb[c[(c[j>>2]|0)+48>>2]&15](j);j=c[d+4>>2]|0;mc[c[(c[j>>2]|0)+8>>2]&127](j,c[d+12>>2]|0,a+144|0,a+128|0);c[a+32>>2]=c[a+144>>2];c[a+32+4>>2]=c[a+144+4>>2];c[a+32+8>>2]=c[a+144+8>>2];c[a+32+12>>2]=c[a+144+12>>2];c[a+32+16>>2]=c[a+128>>2];c[a+32+16+4>>2]=c[a+128+4>>2];c[a+32+16+8>>2]=c[a+128+8>>2];c[a+32+16+12>>2]=c[a+128+12>>2];c[a+96>>2]=c[a+32>>2];c[a+96+4>>2]=c[a+32+4>>2];c[a+96+8>>2]=c[a+32+8>>2];c[a+96+12>>2]=c[a+32+12>>2];c[a+96+16>>2]=c[a+32+16>>2];c[a+96+20>>2]=c[a+32+20>>2];c[a+96+24>>2]=c[a+32+24>>2];c[a+96+28>>2]=c[a+32+28>>2];g[a+96>>2]=+g[a+96>>2]-e;g[a+96+4>>2]=+g[a+96+4>>2]-e;g[a+96+8>>2]=+g[a+96+8>>2]-e;g[a+96+16>>2]=e+ +g[a+96+16>>2];g[a+96+20>>2]=e+ +g[a+96+20>>2];g[a+96+24>>2]=e+ +g[a+96+24>>2];c[a+160+4>>2]=b;c[a+160+8>>2]=d;c[a+160+12>>2]=h;g[a+160+16>>2]=f+e;g[a+160+20>>2]=e;bg(c[b+928>>2]|0,a+96|0,a+160|0);i=a;return}case 2:{g[a+4>>2]=1.0;c[a+8>>2]=0;c[a+8+4>>2]=0;c[a+8+8>>2]=0;c[a+8+12>>2]=0;c[a>>2]=3400;c[a+24>>2]=b;c[a+28>>2]=d;c[a+8>>2]=c[b+456>>2];j=c[d+4>>2]|0;k=+Sb[c[(c[j>>2]|0)+48>>2]&15](j);j=c[b+192>>2]|0;k=k+ +Sb[c[(c[j>>2]|0)+48>>2]&15](j);g[a+12>>2]=k;f=+g[(c[d+8>>2]|0)+224>>2];g[a+160>>2]=f;c[a+16>>2]=c[(+g[b+316>>2]<f?b+316|0:a+160|0)>>2];j=c[d+4>>2]|0;mc[c[(c[j>>2]|0)+8>>2]&127](j,c[d+12>>2]|0,a+144|0,a+128|0);c[a+64>>2]=c[a+144>>2];c[a+64+4>>2]=c[a+144+4>>2];c[a+64+8>>2]=c[a+144+8>>2];c[a+64+12>>2]=c[a+144+12>>2];c[a+64+16>>2]=c[a+128>>2];c[a+64+16+4>>2]=c[a+128+4>>2];c[a+64+16+8>>2]=c[a+128+8>>2];c[a+64+16+12>>2]=c[a+128+12>>2];c[a+96>>2]=c[a+64>>2];c[a+96+4>>2]=c[a+64+4>>2];c[a+96+8>>2]=c[a+64+8>>2];c[a+96+12>>2]=c[a+64+12>>2];c[a+96+16>>2]=c[a+64+16>>2];c[a+96+20>>2]=c[a+64+20>>2];c[a+96+24>>2]=c[a+64+24>>2];c[a+96+28>>2]=c[a+64+28>>2];g[a+96>>2]=+g[a+96>>2]-k;g[a+96+4>>2]=+g[a+96+4>>2]-k;g[a+96+8>>2]=+g[a+96+8>>2]-k;g[a+96+16>>2]=k+ +g[a+96+16>>2];g[a+96+20>>2]=k+ +g[a+96+20>>2];g[a+96+24>>2]=k+ +g[a+96+24>>2];bg(c[b+1048>>2]|0,a+96|0,a);i=a;return}default:{i=a;return}}}function Ie(a,b,d){a=a|0;b=b|0;d=d|0;var f=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=i;i=i+80|0;o=c[a+4>>2]|0;Yb[c[(c[o>>2]|0)+16>>2]&3](o,r+28|0,r+24|0,r+20|0,r+16|0,r+12|0,r+8|0,r+4|0,r,b);o=(c[r+12>>2]|0)+(_(c[r+8>>2]|0,d)|0)|0;q=c[a+4>>2]|0;p=(c[r+20>>2]|0)==0;n=c[r+28>>2]|0;if((c[r>>2]|0)==3){m=c[r+16>>2]|0;l=n+(_(m,e[o+4>>1]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32+32>>2]=f;g[r+32+36>>2]=k;g[r+32+40>>2]=j;g[r+32+44>>2]=0.0;l=n+(_(m,e[o+2>>1]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32+16>>2]=f;g[r+32+20>>2]=k;g[r+32+24>>2]=j;g[r+32+28>>2]=0.0;l=n+(_(m,e[o>>1]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32>>2]=f;g[r+32+4>>2]=k;g[r+32+8>>2]=j;g[r+32+12>>2]=0.0;q=a+8|0;q=c[q>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;mc[p&127](q,r+32|0,b,d);a=c[a+4>>2]|0;d=c[a>>2]|0;d=d+24|0;d=c[d>>2]|0;Cb[d&127](a,b);i=r;return}else{m=c[r+16>>2]|0;l=n+(_(m,c[o+8>>2]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32+32>>2]=f;g[r+32+36>>2]=k;g[r+32+40>>2]=j;g[r+32+44>>2]=0.0;l=n+(_(m,c[o+4>>2]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32+16>>2]=f;g[r+32+20>>2]=k;g[r+32+24>>2]=j;g[r+32+28>>2]=0.0;l=n+(_(m,c[o>>2]|0)|0)|0;if(p){j=+g[l+8>>2]*+g[q+12>>2];k=+g[l+4>>2]*+g[q+8>>2];f=+g[l>>2]*+g[q+4>>2]}else{j=+h[l+16>>3]*+g[q+12>>2];k=+h[l+8>>3]*+g[q+8>>2];f=+h[l>>3]*+g[q+4>>2]}g[r+32>>2]=f;g[r+32+4>>2]=k;g[r+32+8>>2]=j;g[r+32+12>>2]=0.0;q=a+8|0;q=c[q>>2]|0;p=c[q>>2]|0;p=p+8|0;p=c[p>>2]|0;mc[p&127](q,r+32|0,b,d);a=c[a+4>>2]|0;d=c[a>>2]|0;d=d+24|0;d=c[d>>2]|0;Cb[d&127](a,b);i=r;return}}function Je(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0,I=0,J=0;c[6435]=(c[6435]|0)+1;f=yc(1147)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}Ll();c[f+4>>2]=7;c[f+8>>2]=-1;c[f+12>>2]=-1;g[f+16>>2]=3402823466385288598117041.0e14;a[f+20>>0]=1;a[f+21>>0]=0;c[f+24>>2]=-1;i=f+28|0;c[i>>2]=23268;h=f+32|0;c[h>>2]=b;g[f+36>>2]=0.0;g[f+40>>2]=.30000001192092896;c[f+44>>2]=0;c[f>>2]=4596;a[f+48>>0]=0;J=f+116|0;c[J>>2]=c[d>>2];c[J+4>>2]=c[d+4>>2];c[J+8>>2]=c[d+8>>2];c[J+12>>2]=c[d+12>>2];I=f+132|0;c[I>>2]=c[d+16>>2];c[I+4>>2]=c[d+16+4>>2];c[I+8>>2]=c[d+16+8>>2];c[I+12>>2]=c[d+16+12>>2];H=f+148|0;c[H>>2]=c[d+32>>2];c[H+4>>2]=c[d+32+4>>2];c[H+8>>2]=c[d+32+8>>2];c[H+12>>2]=c[d+32+12>>2];G=f+164|0;c[G>>2]=c[d+48>>2];c[G+4>>2]=c[d+48+4>>2];c[G+8>>2]=c[d+48+8>>2];c[G+12>>2]=c[d+48+12>>2];a[f+180>>0]=e&1;x=+g[J>>2];D=+g[b+4>>2];w=+g[I>>2];C=+g[b+8>>2];v=+g[H>>2];B=+g[b+12>>2];u=+g[f+120>>2];t=+g[f+136>>2];s=+g[f+152>>2];r=+g[f+124>>2];p=+g[f+140>>2];n=+g[f+156>>2];A=+g[b+20>>2];z=+g[b+24>>2];y=+g[b+28>>2];q=+g[b+36>>2];o=+g[b+40>>2];m=+g[b+44>>2];F=+g[G>>2];E=+g[f+168>>2];j=+g[f+172>>2];l=+g[b+52>>2]+(D*F+C*E+B*j);k=A*F+z*E+y*j+ +g[b+56>>2];j=q*F+o*E+m*j+ +g[b+60>>2];g[f+52>>2]=x*D+w*C+v*B;g[f+56>>2]=D*u+C*t+B*s;g[f+60>>2]=D*r+C*p+B*n;g[f+64>>2]=0.0;g[f+68>>2]=x*A+w*z+v*y;g[f+72>>2]=u*A+t*z+s*y;g[f+76>>2]=r*A+p*z+n*y;g[f+80>>2]=0.0;g[f+84>>2]=x*q+w*o+v*m;g[f+88>>2]=u*q+t*o+s*m;g[f+92>>2]=r*q+p*o+n*m;g[f+96>>2]=0.0;g[f+100>>2]=l;g[f+104>>2]=k;g[f+108>>2]=j;g[f+112>>2]=0.0;g[f+184>>2]=1.0;g[f+188>>2]=-1.0;g[f+192>>2]=0.0;g[f+196>>2]=0.0;g[f+200>>2]=1.0;g[f+204>>2]=.699999988079071;g[f+208>>2]=0.0;g[f+212>>2]=0.0;g[f+216>>2]=1.0;g[f+220>>2]=.699999988079071;g[f+224>>2]=0.0;g[f+228>>2]=0.0;g[f+264>>2]=1.0;g[f+268>>2]=.699999988079071;g[f+272>>2]=1.0;g[f+276>>2]=0.0;g[f+280>>2]=1.0;g[f+284>>2]=.699999988079071;g[f+288>>2]=1.0;g[f+292>>2]=0.0;g[f+232>>2]=1.0;g[f+236>>2]=.699999988079071;g[f+240>>2]=1.0;g[f+244>>2]=0.0;g[f+248>>2]=1.0;g[f+252>>2]=.699999988079071;g[f+256>>2]=1.0;g[f+260>>2]=0.0;a[f+1096>>0]=0;e=f+1100|0;g[f+1116>>2]=0.0;g[f+1120>>2]=0.0;g[f+1124>>2]=0.0;c[f+300>>2]=0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;a[e+12>>0]=0;a[f+49>>0]=1;kd(f,(c[i>>2]|0)+4|0,(c[h>>2]|0)+4|0);return f|0}function Ke(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0.0;d=i;i=i+96|0;l=+g[b>>2];s=+g[a+28>>2];B=+g[b+4>>2];D=+g[a+32>>2];m=+g[b+8>>2];n=+g[a+36>>2];o=+g[a+44>>2];p=+g[a+48>>2];q=+g[a+52>>2];r=+g[a+60>>2];t=+g[a+64>>2];u=+g[a+68>>2];v=+g[a+76>>2];w=+g[a+80>>2];x=+g[a+84>>2];g[d+80>>2]=l*s+B*D+m*n+v;g[d+80+4>>2]=l*o+B*p+m*q+w;g[d+80+8>>2]=l*r+B*t+m*u+x;g[d+80+12>>2]=0.0;y=+g[b+16>>2];z=+g[b+20>>2];A=+g[b+24>>2];g[d+64>>2]=y*s+z*D+A*n+v;g[d+64+4>>2]=y*o+z*p+A*q+w;g[d+64+8>>2]=y*r+z*t+A*u+x;g[d+64+12>>2]=0.0;C=+g[b+32>>2];E=+g[b+36>>2];k=+g[b+40>>2];g[d+48>>2]=C*s+E*D+k*n+v;g[d+48+4>>2]=C*o+E*p+k*q+w;g[d+48+8>>2]=C*r+E*t+k*u+x;g[d+48+12>>2]=0.0;f=(l*s+B*D+m*n+v+(y*s+z*D+A*n+v)+(C*s+E*D+k*n+v))*.3333333432674408;h=(l*o+B*p+m*q+w+(y*o+z*p+A*q+w)+(C*o+E*p+k*q+w))*.3333333432674408;j=(l*r+B*t+m*u+x+(y*r+z*t+A*u+x)+(C*r+E*t+k*u+x))*.3333333432674408;g[d+32>>2]=f;g[d+32+4>>2]=h;g[d+32+8>>2]=j;g[d+32+12>>2]=0.0;b=c[a+8>>2]|0;if(!((Eb[c[(c[b>>2]|0)+48>>2]&127](b)|0)&16384)){e=c[a+8>>2]|0;F=c[e>>2]|0;F=F+8|0;F=c[F>>2]|0;b=a+12|0;mc[F&127](e,d+80|0,d+64|0,b);e=c[a+8>>2]|0;F=c[e>>2]|0;F=F+8|0;F=c[F>>2]|0;mc[F&127](e,d+64|0,d+48|0,b);a=c[a+8>>2]|0;e=c[a>>2]|0;e=e+8|0;e=c[e>>2]|0;mc[e&127](a,d+48|0,d+80|0,b);i=d;return}I=+g[d+80>>2];H=y*o+z*p+A*q+w-(l*o+B*p+m*q+w);G=y*r+z*t+A*u+x-(l*r+B*t+m*u+x);w=C*o+E*p+k*q+w-(l*o+B*p+m*q+w);x=C*r+E*t+k*u+x-(l*r+B*t+m*u+x);B=G*(C*s+E*D+k*n+v-I)-(y*s+z*D+A*n+v-I)*x;E=(y*s+z*D+A*n+v-I)*w-H*(C*s+E*D+k*n+v-I);D=1.0/+O(+(E*E+((H*x-G*w)*(H*x-G*w)+B*B)));c[d+16>>2]=1065353216;c[d+16+4>>2]=1065353216;c[d+16+8>>2]=0;g[d+16+12>>2]=0.0;b=c[a+8>>2]|0;e=c[(c[b>>2]|0)+8>>2]|0;g[d>>2]=D*(H*x-G*w)+f;g[d+4>>2]=D*B+h;g[d+8>>2]=D*E+j;g[d+12>>2]=0.0;mc[e&127](b,d+32|0,d,d+16|0);b=c[a+8>>2]|0;e=c[b>>2]|0;e=e+8|0;e=c[e>>2]|0;F=a+12|0;mc[e&127](b,d+80|0,d+64|0,F);b=c[a+8>>2]|0;e=c[b>>2]|0;e=e+8|0;e=c[e>>2]|0;mc[e&127](b,d+64|0,d+48|0,F);a=c[a+8>>2]|0;b=c[a>>2]|0;b=b+8|0;b=c[b>>2]|0;mc[b&127](a,d+48|0,d+80|0,F);i=d;return}function Le(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;c[b+4>>2]=6;c[b+8>>2]=-1;c[b+12>>2]=-1;g[b+16>>2]=3402823466385288598117041.0e14;a[b+20>>0]=1;a[b+21>>0]=0;c[b+24>>2]=-1;c[b+28>>2]=d;c[b+32>>2]=e;g[b+36>>2]=0.0;g[b+40>>2]=.30000001192092896;c[b+44>>2]=0;c[b>>2]=4376;c[b+48>>2]=c[f>>2];c[b+48+4>>2]=c[f+4>>2];c[b+48+8>>2]=c[f+8>>2];c[b+48+12>>2]=c[f+12>>2];c[b+64>>2]=c[f+16>>2];c[b+64+4>>2]=c[f+16+4>>2];c[b+64+8>>2]=c[f+16+8>>2];c[b+64+12>>2]=c[f+16+12>>2];c[b+80>>2]=c[f+32>>2];c[b+80+4>>2]=c[f+32+4>>2];c[b+80+8>>2]=c[f+32+8>>2];c[b+80+12>>2]=c[f+32+12>>2];c[b+96>>2]=c[f+48>>2];c[b+96+4>>2]=c[f+48+4>>2];c[b+96+8>>2]=c[f+48+8>>2];c[b+96+12>>2]=c[f+48+12>>2];c[b+112>>2]=c[h>>2];c[b+112+4>>2]=c[h+4>>2];c[b+112+8>>2]=c[h+8>>2];c[b+112+12>>2]=c[h+12>>2];c[b+128>>2]=c[h+16>>2];c[b+128+4>>2]=c[h+16+4>>2];c[b+128+8>>2]=c[h+16+8>>2];c[b+128+12>>2]=c[h+16+12>>2];c[b+144>>2]=c[h+32>>2];c[b+144+4>>2]=c[h+32+4>>2];c[b+144+8>>2]=c[h+32+8>>2];c[b+144+12>>2]=c[h+32+12>>2];c[b+160>>2]=c[h+48>>2];c[b+160+4>>2]=c[h+48+4>>2];c[b+160+8>>2]=c[h+48+8>>2];c[b+160+12>>2]=c[h+48+12>>2];f=b+680|0;h=f+48|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0));c[b+740>>2]=0;c[b+740+4>>2]=0;c[b+740+8>>2]=0;c[b+740+12>>2]=0;c[b+756>>2]=1045220557;c[b+760>>2]=1045220557;c[b+764>>2]=1045220557;c[b+768>>2]=0;c[b+768+4>>2]=0;c[b+768+8>>2]=0;c[b+768+12>>2]=0;c[b+768+16>>2]=0;g[b+728>>2]=.699999988079071;g[b+732>>2]=1.0;g[b+736>>2]=.5;a[b+788>>0]=0;g[b+792>>2]=0.0;g[b+808>>2]=0.0;a[b+789>>0]=0;g[b+796>>2]=0.0;g[b+812>>2]=0.0;a[b+790>>0]=0;g[b+800>>2]=0.0;g[b+816>>2]=0.0;g[b+928>>2]=0.0;g[b+876>>2]=0.0;g[b+880>>2]=.10000000149011612;g[b+884>>2]=300.0;g[b+868>>2]=1.0;g[b+872>>2]=-1.0;g[b+896>>2]=0.0;g[b+900>>2]=.20000000298023224;g[b+904>>2]=0.0;g[b+908>>2]=0.0;g[b+888>>2]=1.0;g[b+892>>2]=.5;c[b+924>>2]=0;g[b+916>>2]=0.0;a[b+912>>0]=0;g[b+992>>2]=0.0;g[b+940>>2]=0.0;g[b+944>>2]=.10000000149011612;g[b+948>>2]=300.0;g[b+932>>2]=1.0;g[b+936>>2]=-1.0;g[b+960>>2]=0.0;g[b+964>>2]=.20000000298023224;g[b+968>>2]=0.0;g[b+972>>2]=0.0;g[b+952>>2]=1.0;g[b+956>>2]=.5;c[b+988>>2]=0;g[b+980>>2]=0.0;a[b+976>>0]=0;g[b+1056>>2]=0.0;g[b+1004>>2]=0.0;g[b+1008>>2]=.10000000149011612;g[b+1012>>2]=300.0;g[b+996>>2]=1.0;g[b+1e3>>2]=-1.0;g[b+1024>>2]=0.0;g[b+1028>>2]=.20000000298023224;g[b+1032>>2]=0.0;g[b+1036>>2]=0.0;g[b+1016>>2]=1.0;g[b+1020>>2]=.5;c[b+1052>>2]=0;g[b+1044>>2]=0.0;a[b+1040>>0]=0;a[b+1300>>0]=i&1;a[b+1301>>0]=1;c[b+1304>>2]=0;a[b+1308>>0]=0;sd(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);return}function Me(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0;if(!b)b=0;else b=(c[b+236>>2]&2|0)==0?0:b;c[a+64>>2]=0;c[a+64+4>>2]=0;c[a+64+8>>2]=0;c[a+64+12>>2]=0;c[a+64+16>>2]=0;c[a+64+20>>2]=0;c[a+64+24>>2]=0;c[a+64+28>>2]=0;c[a+144>>2]=0;c[a+144+4>>2]=0;c[a+144+8>>2]=0;c[a+144+12>>2]=0;c[a+144+16>>2]=0;c[a+144+20>>2]=0;c[a+144+24>>2]=0;c[a+144+28>>2]=0;if(!b){c[a>>2]=1065353216;c[a+4>>2]=0;c[a+4+4>>2]=0;c[a+4+8>>2]=0;c[a+4+12>>2]=0;c[a+20>>2]=1065353216;c[a+24>>2]=0;c[a+24+4>>2]=0;c[a+24+8>>2]=0;c[a+24+12>>2]=0;c[a+40>>2]=1065353216;c[a+44>>2]=0;c[a+44+4>>2]=0;c[a+44+8>>2]=0;c[a+44+12>>2]=0;c[a+44+16>>2]=0;c[a+240>>2]=0;c[a+128>>2]=0;c[a+128+4>>2]=0;c[a+128+8>>2]=0;c[a+128+12>>2]=0;c[a+96>>2]=1065353216;c[a+100>>2]=1065353216;c[a+104>>2]=1065353216;g[a+108>>2]=0.0;c[a+112>>2]=1065353216;c[a+116>>2]=1065353216;c[a+120>>2]=1065353216;g[a+124>>2]=0.0;b=a+176|0;e=b+60|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));a=a+236|0;g[a>>2]=0.0;return}else{e=b+4|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];e=b+20|0;c[a+16>>2]=c[e>>2];c[a+16+4>>2]=c[e+4>>2];c[a+16+8>>2]=c[e+8>>2];c[a+16+12>>2]=c[e+12>>2];e=b+36|0;c[a+32>>2]=c[e>>2];c[a+32+4>>2]=c[e+4>>2];c[a+32+8>>2]=c[e+8>>2];c[a+32+12>>2]=c[e+12>>2];e=b+52|0;c[a+48>>2]=c[e>>2];c[a+48+4>>2]=c[e+4>>2];c[a+48+8>>2]=c[e+8>>2];c[a+48+12>>2]=c[e+12>>2];e=b+344|0;k=+g[e>>2];l=b+348|0;j=k*+g[b+352>>2];i=k*+g[b+356>>2];g[a+128>>2]=k*+g[l>>2];g[a+132>>2]=j;g[a+136>>2]=i;g[a+140>>2]=0.0;c[a+240>>2]=b;m=b+544|0;c[a+96>>2]=c[m>>2];c[a+96+4>>2]=c[m+4>>2];c[a+96+8>>2]=c[m+8>>2];c[a+96+12>>2]=c[m+12>>2];c[a+112>>2]=c[l>>2];c[a+112+4>>2]=c[l+4>>2];c[a+112+8>>2]=c[l+8>>2];c[a+112+12>>2]=c[l+12>>2];l=b+312|0;c[a+176>>2]=c[l>>2];c[a+176+4>>2]=c[l+4>>2];c[a+176+8>>2]=c[l+8>>2];c[a+176+12>>2]=c[l+12>>2];l=b+328|0;c[a+192>>2]=c[l>>2];c[a+192+4>>2]=c[l+4>>2];c[a+192+8>>2]=c[l+8>>2];c[a+192+12>>2]=c[l+12>>2];i=+g[e>>2];j=i*+g[b+416>>2]*d;k=i*+g[b+420>>2]*d;g[a+208>>2]=i*+g[b+412>>2]*d;g[a+212>>2]=j;g[a+216>>2]=k;g[a+220>>2]=0.0;k=+g[b+428>>2];j=+g[b+432>>2];i=+g[b+436>>2];h=(k*+g[b+268>>2]+j*+g[b+284>>2]+i*+g[b+300>>2])*d;f=(k*+g[b+272>>2]+j*+g[b+288>>2]+i*+g[b+304>>2])*d;g[a+224>>2]=(+g[b+264>>2]*k+ +g[b+280>>2]*j+ +g[b+296>>2]*i)*d;g[a+228>>2]=h;g[a+232>>2]=f;a=a+236|0;g[a>>2]=0.0;return}}function Ne(a,e,f){a=a|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;c[e+16>>2]=c[a+20>>2];c[e+20>>2]=c[a+24>>2];c[e+24>>2]=c[a+28>>2];c[e+28>>2]=c[a+32>>2];c[e>>2]=c[a+4>>2];c[e+4>>2]=c[a+8>>2];c[e+8>>2]=c[a+12>>2];c[e+12>>2]=c[a+16>>2];c[e+32>>2]=c[a+36>>2];c[e+36>>2]=c[a+40>>2];c[e+40>>2]=c[a+44>>2];c[e+44>>2]=c[a+48>>2];c[e+48>>2]=c[a+56>>2];c[e+52>>2]=d[a+60>>0];k=c[a+88>>2]|0;c[e+56>>2]=k;if(k){k=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+96>>2]|0)|0;c[e+64>>2]=k;if(k|0){h=c[a+88>>2]|0;k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,48,h)|0;if((h|0)>0){g=c[a+96>>2]|0;i=0;j=c[k+8>>2]|0;while(1){c[j+16>>2]=c[g+(i<<6)+16>>2];c[j+20>>2]=c[g+(i<<6)+20>>2];c[j+24>>2]=c[g+(i<<6)+24>>2];c[j+28>>2]=c[g+(i<<6)+28>>2];c[j>>2]=c[g+(i<<6)>>2];c[j+4>>2]=c[g+(i<<6)+4>>2];c[j+8>>2]=c[g+(i<<6)+8>>2];c[j+12>>2]=c[g+(i<<6)+12>>2];c[j+32>>2]=c[g+(i<<6)+32>>2];c[j+36>>2]=c[g+(i<<6)+36>>2];c[j+40>>2]=c[g+(i<<6)+40>>2];i=i+1|0;if((i|0)==(h|0))break;else j=j+48|0}}else g=c[a+96>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,k,18461,1497453121,g)}}else c[e+64>>2]=0;k=c[a+128>>2]|0;c[e+60>>2]=k;if(k){k=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+136>>2]|0)|0;c[e+68>>2]=k;if(k|0){h=c[a+128>>2]|0;k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,16,h)|0;if((h|0)>0){g=c[a+136>>2]|0;i=0;j=c[k+8>>2]|0;while(1){c[j+12>>2]=c[g+(i<<4)+12>>2];b[j+6>>1]=b[g+(i<<4)+6>>1]|0;b[j+8>>1]=b[g+(i<<4)+8>>1]|0;b[j+10>>1]=b[g+(i<<4)+10>>1]|0;b[j>>1]=b[g+(i<<4)>>1]|0;b[j+2>>1]=b[g+(i<<4)+2>>1]|0;b[j+4>>1]=b[g+(i<<4)+4>>1]|0;i=i+1|0;if((i|0)==(h|0))break;else j=j+16|0}}else g=c[a+136>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,k,18484,1497453121,g)}}else c[e+68>>2]=0;c[e+76>>2]=c[a+144>>2];k=c[a+152>>2]|0;c[e+80>>2]=k;if(!k){c[e+72>>2]=0;return 18528}k=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[a+160>>2]|0)|0;c[e+72>>2]=k;if(!k)return 18528;j=c[a+152>>2]|0;k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,20,j)|0;if((j|0)>0){g=c[a+160>>2]|0;h=0;i=c[k+8>>2]|0;while(1){b[i+14>>1]=b[g+(h<<5)+6>>1]|0;b[i+16>>1]=b[g+(h<<5)+8>>1]|0;b[i+18>>1]=b[g+(h<<5)+10>>1]|0;b[i+8>>1]=b[g+(h<<5)>>1]|0;b[i+10>>1]=b[g+(h<<5)+2>>1]|0;b[i+12>>1]=b[g+(h<<5)+4>>1]|0;c[i>>2]=c[g+(h<<5)+12>>2];c[i+4>>2]=c[g+(h<<5)+16>>2];h=h+1|0;if((h|0)==(j|0))break;else i=i+20|0}}else g=c[a+160>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,k,18507,1497453121,g);return 18528}function Oe(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0;L=i;i=i+64|0;c[L+48>>2]=a;c[L+48+4>>2]=b;c[L+48+8>>2]=d;C=+g[a>>2];F=+g[b>>2];J=+g[a+4>>2];K=+g[b+4>>2];z=+g[a+8>>2];A=+g[b+8>>2];g[L>>2]=C-F;g[L+4>>2]=J-K;g[L+8>>2]=z-A;g[L+12>>2]=0.0;B=+g[d>>2];D=+g[d+4>>2];E=+g[d+8>>2];g[L+16>>2]=F-B;g[L+20>>2]=K-D;g[L+24>>2]=A-E;g[L+28>>2]=0.0;g[L+32>>2]=B-C;g[L+36>>2]=D-J;g[L+40>>2]=E-z;g[L+44>>2]=0.0;G=(J-K)*(A-E)-(z-A)*(K-D);H=(z-A)*(F-B)-(A-E)*(C-F);I=(K-D)*(C-F)-(J-K)*(F-B);if(I*I+(G*G+H*H)>0.0){o=J-K;p=z-A;q=C-F;v=C;w=J;x=z;m=0;y=-1.0;n=0;h=0;j=0}else{K=-1.0;i=L;return +K}while(1){if(v*(I*o-H*p)+w*(G*p-I*q)+(H*q-G*o)*x>0.0){u=c[4976+(m<<2)>>2]|0;M=c[L+48+(u<<2)>>2]|0;l=+g[M>>2];p=l-v;q=+g[M+4>>2];r=q-w;s=+g[M+8>>2];t=s-x;do if(p*p+r*r+t*t>0.0){o=-(v*p+w*r+x*t)/(p*p+r*r+t*t);if(o>=1.0){l=l*l+q*q+s*s;n=2;h=0;j=1065353216;break}if(!(o<=0.0)){j=(g[k>>2]=o,c[k>>2]|0);v=v+p*o;l=w+r*o;x=x+t*o;l=x*x+(v*v+l*l);n=3;h=(g[k>>2]=1.0-o,c[k>>2]|0);break}else{l=v*v+w*w+x*x;n=1;h=1065353216;j=0;break}}else l=-1.0;while(0);if(y<0.0|l<y){c[f>>2]=(n&1|0?1<<m:0)+(n&2|0?1<<u:0);c[e+(m<<2)>>2]=h;c[e+(u<<2)>>2]=j;g[e+(c[4976+(u<<2)>>2]<<2)>>2]=0.0}else l=y}else l=y;m=m+1|0;if((m|0)==3)break;M=c[L+48+(m<<2)>>2]|0;o=+g[L+(m<<4)+4>>2];p=+g[L+(m<<4)+8>>2];q=+g[L+(m<<4)>>2];v=+g[M>>2];w=+g[M+4>>2];x=+g[M+8>>2];y=l}if(!(l<0.0)){K=l;i=L;return +K}x=+O(+(I*I+(G*G+H*H)));y=(G*+g[a>>2]+H*+g[a+4>>2]+I*+g[a+8>>2])/(I*I+(G*G+H*H));c[f>>2]=7;v=+g[b>>2]-G*y;t=+g[b+4>>2]-H*y;w=+g[b+8>>2]-I*y;K=+O(+((t*(F-B)-v*(K-D))*(t*(F-B)-v*(K-D))+(((K-D)*w-t*(A-E))*((K-D)*w-t*(A-E))+(v*(A-E)-w*(F-B))*(v*(A-E)-w*(F-B)))))/x;g[e>>2]=K;A=+g[d>>2]-G*y;w=+g[d+4>>2]-H*y;F=+g[d+8>>2]-I*y;J=+O(+((w*(B-C)-A*(D-J))*(w*(B-C)-A*(D-J))+(((D-J)*F-w*(E-z))*((D-J)*F-w*(E-z))+(A*(E-z)-F*(B-C))*(A*(E-z)-F*(B-C)))))/x;g[e+4>>2]=J;g[e+8>>2]=1.0-(J+K);K=I*y*I*y+(G*y*G*y+H*y*H*y);i=L;return +K}function Pe(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=i;i=i+144|0;g[a+36>>2]=0.0;c[d+128>>2]=0;c[d+128+4>>2]=0;c[d+128+8>>2]=0;c[d+128+12>>2]=0;b=0;do{e=d+128+(b<<2)|0;g[e>>2]=1.0;A=c[a+28>>2]|0;I=c[A+4>>2]|0;c[d+80>>2]=I;F=c[A+20>>2]|0;c[d+80+4>>2]=F;C=c[A+36>>2]|0;c[d+80+8>>2]=C;g[d+80+12>>2]=0.0;H=c[A+8>>2]|0;c[d+80+16>>2]=H;E=c[A+24>>2]|0;c[d+80+20>>2]=E;B=c[A+40>>2]|0;c[d+80+24>>2]=B;g[d+80+28>>2]=0.0;G=c[A+12>>2]|0;c[d+80+32>>2]=G;D=c[A+28>>2]|0;c[d+80+36>>2]=D;z=c[A+44>>2]|0;c[d+80+40>>2]=z;g[d+80+44>>2]=0.0;f=c[a+32>>2]|0;y=c[f+4>>2]|0;c[d+32>>2]=y;v=c[f+20>>2]|0;c[d+32+4>>2]=v;s=c[f+36>>2]|0;c[d+32+8>>2]=s;g[d+32+12>>2]=0.0;x=c[f+8>>2]|0;c[d+32+16>>2]=x;u=c[f+24>>2]|0;c[d+32+20>>2]=u;r=c[f+40>>2]|0;c[d+32+24>>2]=r;g[d+32+28>>2]=0.0;w=c[f+12>>2]|0;c[d+32+32>>2]=w;t=c[f+28>>2]|0;c[d+32+36>>2]=t;h=c[f+44>>2]|0;c[d+32+40>>2]=h;g[d+32+44>>2]=0.0;p=+g[a+300>>2];m=p*(c[k>>2]=I,+g[k>>2]);j=+g[a+304>>2];m=m+j*(c[k>>2]=H,+g[k>>2]);l=+g[a+308>>2];m=m+l*(c[k>>2]=G,+g[k>>2]);q=p*(c[k>>2]=F,+g[k>>2]);q=q+j*(c[k>>2]=E,+g[k>>2]);q=q+l*(c[k>>2]=D,+g[k>>2]);p=p*(c[k>>2]=C,+g[k>>2]);j=p+j*(c[k>>2]=B,+g[k>>2]);p=+g[A+52>>2];o=+g[A+56>>2];n=+g[A+60>>2];n=j+l*(c[k>>2]=z,+g[k>>2])+n-n;g[d+16>>2]=m+p-p;g[d+16+4>>2]=q+o-o;g[d+16+8>>2]=n;g[d+16+12>>2]=0.0;n=+g[a+316>>2];o=n*(c[k>>2]=y,+g[k>>2]);q=+g[a+320>>2];o=o+q*(c[k>>2]=x,+g[k>>2]);p=+g[a+324>>2];o=o+p*(c[k>>2]=w,+g[k>>2]);m=n*(c[k>>2]=v,+g[k>>2]);m=m+q*(c[k>>2]=u,+g[k>>2]);m=m+p*(c[k>>2]=t,+g[k>>2]);n=n*(c[k>>2]=s,+g[k>>2]);q=n+q*(c[k>>2]=r,+g[k>>2]);n=+g[f+52>>2];l=+g[f+56>>2];j=+g[f+60>>2];j=q+p*(c[k>>2]=h,+g[k>>2])+j-j;g[d>>2]=o+n-n;g[d+4>>2]=m+l-l;g[d+8>>2]=j;g[d+12>>2]=0.0;h=c[a+28>>2]|0;f=c[a+32>>2]|0;Rg(a+48+(b*84|0)|0,d+80|0,d+32|0,d+16|0,d,d+128|0,h+396|0,+g[h+344>>2],f+396|0,+g[f+344>>2]);g[e>>2]=0.0;b=b+1|0}while((b|0)!=3);i=d;return}function Qe(a,b,d,e,f,h){a=a|0;b=b|0;d=+d;e=+e;f=+f;h=h|0;var i=0,j=0,k=0.0,l=0.0,m=0,n=0.0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0,B=0,C=0.0;a:while(1){B=c[h+12>>2]|0;if((b|0)>0){j=0;i=-1;do{do if(c[B+(j<<2)>>2]|0){if((i|0)!=-1?!(+g[a+(j<<4)>>2]*d+ +g[a+(j<<4)+4>>2]*e+ +g[a+(j<<4)+8>>2]*f>+g[a+(i<<4)>>2]*d+ +g[a+(i<<4)+4>>2]*e+ +g[a+(i<<4)+8>>2]*f):0)break;i=j}while(0);j=j+1|0}while((j|0)!=(b|0))}else i=-1;A=B+(i<<2)|0;if((c[A>>2]|0)==3){j=37;break}k=+O(+((e-f*0.0)*(e-f*0.0)+(f*0.0-d)*(f*0.0-d)+(d*0.0-e*0.0)*(d*0.0-e*0.0)));l=+O(+((d-e*0.0)*(d-e*0.0)+((e*0.0-f)*(e*0.0-f)+(f*0.0-d*0.0)*(f*0.0-d*0.0))));if(k>l){y=(e-f*0.0)*(1.0/k);z=(d*0.0-e*0.0)*(1.0/k);w=(f*0.0-d)*(1.0/k)}else{y=(e*0.0-f)*(1.0/l);z=(d-e*0.0)*(1.0/l);w=(f*0.0-d*0.0)*(1.0/l)}r=w*f-z*e;s=z*d-y*f;t=y*e-w*d;u=(i|0)==-1;j=-1;x=0;while(1){v=+(x|0);q=+R(+(v*.01745329238474369));n=+Q(+(v*.01745329238474369));k=(y*q+r*n)*.02500000037252903+d;l=(w*q+s*n)*.02500000037252903+e;n=(z*q+t*n)*.02500000037252903+f;if((b|0)>0){o=0;m=-1;do{do if(c[B+(o<<2)>>2]|0){if((m|0)!=-1?!(k*+g[a+(o<<4)>>2]+l*+g[a+(o<<4)+4>>2]+n*+g[a+(o<<4)+8>>2]>k*+g[a+(m<<4)>>2]+l*+g[a+(m<<4)+4>>2]+n*+g[a+(m<<4)+8>>2]):0)break;m=o}while(0);o=o+1|0}while((o|0)!=(b|0))}else m=-1;if((j|0)==(i|0)&(m|0)==(i|0)){j=20;break a}b:do if(!((j|0)==-1|(j|0)==(m|0))?v+-40.0<=v:0){if((b|0)>0)q=v+-40.0;else{k=v+-40.0;while(1){if((j|0)==(i|0)&u){i=-1;j=33;break a}k=k+5.0;if(!(k<=v))break b;else j=-1}}while(1){n=q*.01745329238474369;C=+R(+n);n=+Q(+n);k=(y*C+r*n)*.02500000037252903+d;l=(w*C+s*n)*.02500000037252903+e;n=(z*C+t*n)*.02500000037252903+f;p=0;o=-1;do{do if(c[B+(p<<2)>>2]|0){if((o|0)!=-1?!(k*+g[a+(p<<4)>>2]+l*+g[a+(p<<4)+4>>2]+n*+g[a+(p<<4)+8>>2]>k*+g[a+(o<<4)>>2]+l*+g[a+(o<<4)+4>>2]+n*+g[a+(o<<4)+8>>2]):0)break;o=p}while(0);p=p+1|0}while((p|0)!=(b|0));if((j|0)==(i|0)&(o|0)==(i|0)){j=33;break a}q=q+5.0;if(!(q<=v))break;else j=o}}while(0);x=x+45|0;if((x|0)>360)break;else j=m}c[A>>2]=0}if((j|0)==20){c[A>>2]=3;B=i;return B|0}else if((j|0)==33){c[B+(i<<2)>>2]=3;B=i;return B|0}else if((j|0)==37)return i|0;return 0}function Re(a,b,d,e,f,h,j,k){a=a|0;b=b|0;d=d|0;e=+e;f=+f;h=+h;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0;V=i;i=i+32|0;G=+g[d>>2];I=+g[d+4>>2];T=+g[d+8>>2];t=+g[j>>2];u=+g[j+4>>2];w=+g[j+8>>2];p=+g[k>>2];r=+g[k+4>>2];s=+g[k+8>>2];H=1.0/+O(+((e-G)*(e-G)+(f-I)*(f-I)+(h-T)*(h-T)));J=(e-G)*H==0.0?999999984306749440.0:1.0/((e-G)*H);K=(f-I)*H==0.0?999999984306749440.0:1.0/((f-I)*H);L=(h-T)*H==0.0?999999984306749440.0:1.0/((h-T)*H);M=(G>e?e:G)+t;N=(I>f?f:I)+u;P=(T>h?h:T)+w;Q=(G<e?e:G)+p;R=(I<f?f:I)+r;S=(T<h?h:T)+s;m=c[a+56>>2]|0;a:do if((m|0)>0){x=0;y=c[a+96>>2]|0;l=0;while(1){l=l+1|0;c[V>>2]=c[y>>2];c[V+4>>2]=c[y+4>>2];c[V+8>>2]=c[y+8>>2];c[V+12>>2]=c[y+12>>2];v=y+16|0;c[V+16>>2]=c[v>>2];c[V+16+4>>2]=c[v+4>>2];c[V+16+8>>2]=c[v+8>>2];c[V+16+12>>2]=c[v+12>>2];g[V>>2]=+g[V>>2]-p;g[V+4>>2]=+g[V+4>>2]-r;g[V+8>>2]=+g[V+8>>2]-s;g[V+16>>2]=+g[V+16>>2]-t;g[V+20>>2]=+g[V+20>>2]-u;g[V+24>>2]=+g[V+24>>2]-w;if(!(M>+g[v>>2])?!(Q<+g[y>>2]):0)n=1;else n=0;if(!(!(P>+g[y+24>>2])?!(S<+g[y+8>>2]):0))n=0;if(((!(N>+g[y+20>>2])?!(R<+g[y+4>>2]|n^1):0)?(A=+g[d>>2],z=J*(+g[V+((J<0.0&1)<<4)>>2]-A),A=J*(+g[V+((J<0.0^1)<<4)>>2]-A),C=+g[d+4>>2],B=K*(+g[V+((K<0.0&1)<<4)+4>>2]-C),C=K*(+g[V+((K<0.0^1)<<4)+4>>2]-C),!(B>A|z>C)):0)?(D=B>z?B:z,U=C<A?C:A,F=+g[d+8>>2],E=L*(+g[V+((L<0.0&1)<<4)+8>>2]-F),F=L*(+g[V+((L<0.0^1)<<4)+8>>2]-F),!(E>U|D>F)):0){n=(F<U?F:U)>0.0?(E>D?E:D)<(h-T)*(h-T)*H+((e-G)*(e-G)*H+(f-I)*(f-I)*H):0;o=c[y+32>>2]|0;if(n&(o|0)==-1){ic[c[(c[b>>2]|0)+8>>2]&127](b,c[y+36>>2]|0,c[y+40>>2]|0);m=c[a+56>>2]|0;v=17}else{q=(o|0)==-1;v=16}}else{o=c[y+32>>2]|0;n=0;q=(o|0)==-1;v=16}if((v|0)==16){v=0;if(q|n)v=17;else{q=o+x|0;n=y+(o<<6)|0}}if((v|0)==17){q=x+1|0;n=y+64|0}if((q|0)>=(m|0))break a;p=+g[k>>2];r=+g[k+4>>2];s=+g[k+8>>2];t=+g[j>>2];u=+g[j+4>>2];w=+g[j+8>>2];x=q;y=n}}else l=0;while(0);if((c[6167]|0)>=(l|0)){i=V;return}c[6167]=l;i=V;return}function Se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;if(!(c[a+204>>2]&2)){c[a+68>>2]=c[b>>2];c[a+68+4>>2]=c[b+4>>2];c[a+68+8>>2]=c[b+8>>2];c[a+68+12>>2]=c[b+12>>2];c[a+84>>2]=c[b+16>>2];c[a+84+4>>2]=c[b+16+4>>2];c[a+84+8>>2]=c[b+16+8>>2];c[a+84+12>>2]=c[b+16+12>>2];c[a+100>>2]=c[b+32>>2];c[a+100+4>>2]=c[b+32+4>>2];c[a+100+8>>2]=c[b+32+8>>2];c[a+100+12>>2]=c[b+32+12>>2];c[a+116>>2]=c[b+48>>2];c[a+116+4>>2]=c[b+48+4>>2];c[a+116+8>>2]=c[b+48+8>>2];c[a+116+12>>2]=c[b+48+12>>2];d=a+20|0;e=b+16|0;f=a+36|0;h=b+32|0;i=a+52|0;j=b+48|0;k=a+4|0}else{c[a+68>>2]=c[a+4>>2];c[a+68+4>>2]=c[a+4+4>>2];c[a+68+8>>2]=c[a+4+8>>2];c[a+68+12>>2]=c[a+4+12>>2];c[a+84>>2]=c[a+20>>2];c[a+84+4>>2]=c[a+20+4>>2];c[a+84+8>>2]=c[a+20+8>>2];c[a+84+12>>2]=c[a+20+12>>2];c[a+100>>2]=c[a+36>>2];c[a+100+4>>2]=c[a+36+4>>2];c[a+100+8>>2]=c[a+36+8>>2];c[a+100+12>>2]=c[a+36+12>>2];c[a+116>>2]=c[a+52>>2];c[a+116+4>>2]=c[a+52+4>>2];c[a+116+8>>2]=c[a+52+8>>2];c[a+116+12>>2]=c[a+52+12>>2];d=a+20|0;e=b+16|0;f=a+36|0;h=b+32|0;i=a+52|0;j=b+48|0;k=a+4|0}c[a+132>>2]=c[a+312>>2];c[a+132+4>>2]=c[a+312+4>>2];c[a+132+8>>2]=c[a+312+8>>2];c[a+132+12>>2]=c[a+312+12>>2];c[a+148>>2]=c[a+328>>2];c[a+148+4>>2]=c[a+328+4>>2];c[a+148+8>>2]=c[a+328+8>>2];c[a+148+12>>2]=c[a+328+12>>2];c[k>>2]=c[b>>2];c[k+4>>2]=c[b+4>>2];c[k+8>>2]=c[b+8>>2];c[k+12>>2]=c[b+12>>2];c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];c[f+12>>2]=c[h+12>>2];c[i>>2]=c[j>>2];c[i+4>>2]=c[j+4>>2];c[i+8>>2]=c[j+8>>2];c[i+12>>2]=c[j+12>>2];w=+g[a+4>>2];q=+g[a+396>>2];v=+g[a+8>>2];o=+g[a+400>>2];u=+g[a+12>>2];m=+g[a+404>>2];t=+g[a+20>>2];s=+g[a+24>>2];r=+g[a+28>>2];p=+g[a+36>>2];n=+g[a+40>>2];l=+g[a+44>>2];g[a+264>>2]=w*w*q+v*v*o+u*u*m;g[a+268>>2]=w*q*t+v*o*s+u*m*r;g[a+272>>2]=w*q*p+v*o*n+u*m*l;g[a+276>>2]=0.0;g[a+280>>2]=w*q*t+v*o*s+u*m*r;g[a+284>>2]=t*q*t+s*o*s+r*m*r;g[a+288>>2]=q*t*p+o*s*n+m*r*l;g[a+292>>2]=0.0;g[a+296>>2]=w*q*p+v*o*n+u*m*l;g[a+300>>2]=t*q*p+s*o*n+r*m*l;g[a+304>>2]=p*q*p+n*o*n+l*m*l;g[a+308>>2]=0.0;return}function Te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;h=i;i=i+160|0;e=c[a+4>>2]|0;f=c[e+12>>2]|0;D=+g[f>>2];C=+g[f+4>>2];B=+g[f+8>>2];A=+g[f+16>>2];z=+g[f+20>>2];y=+g[f+24>>2];r=+g[f+32>>2];p=+g[f+36>>2];n=+g[f+40>>2];e=c[(c[e+4>>2]|0)+24>>2]|0;x=+g[e+(d*80|0)>>2];w=+g[e+(d*80|0)+16>>2];v=+g[e+(d*80|0)+32>>2];u=+g[e+(d*80|0)+4>>2];t=+g[e+(d*80|0)+20>>2];s=+g[e+(d*80|0)+36>>2];q=+g[e+(d*80|0)+8>>2];o=+g[e+(d*80|0)+24>>2];m=+g[e+(d*80|0)+40>>2];F=+g[e+(d*80|0)+48>>2];E=+g[e+(d*80|0)+52>>2];j=+g[e+(d*80|0)+56>>2];l=+g[f+48>>2]+(D*F+C*E+B*j);k=+g[f+52>>2]+(A*F+z*E+y*j);j=+g[f+56>>2]+(r*F+p*E+n*j);g[h+88>>2]=D*x+C*w+B*v;g[h+88+4>>2]=D*u+C*t+B*s;g[h+88+8>>2]=D*q+C*o+B*m;g[h+88+12>>2]=0.0;g[h+88+16>>2]=A*x+z*w+y*v;g[h+88+20>>2]=A*u+z*t+y*s;g[h+88+24>>2]=A*q+z*o+y*m;g[h+88+28>>2]=0.0;g[h+88+32>>2]=r*x+p*w+n*v;g[h+88+36>>2]=r*u+p*t+n*s;g[h+88+40>>2]=r*q+p*o+n*m;g[h+88+44>>2]=0.0;g[h+88+48>>2]=l;g[h+88+52>>2]=k;g[h+88+56>>2]=j;g[h+88+60>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,h+88|0,h+72|0,h+56|0);f=c[a+8>>2]|0;e=c[f+4>>2]|0;mc[c[(c[e>>2]|0)+8>>2]&127](e,c[f+12>>2]|0,h+40|0,h+24|0);if(!(+g[h+72>>2]>+g[h+24>>2])?!(+g[h+56>>2]<+g[h+40>>2]):0)e=1;else e=0;if(!(!(+g[h+72+8>>2]>+g[h+24+8>>2])?!(+g[h+56+8>>2]<+g[h+40+8>>2]):0))e=0;if(+g[h+72+4>>2]>+g[h+24+4>>2]){i=h;return}if(+g[h+56+4>>2]<+g[h+40+4>>2]|e^1){i=h;return}e=c[a+4>>2]|0;f=c[e+8>>2]|0;c[h>>2]=e;c[h+4>>2]=b;c[h+8>>2]=f;c[h+12>>2]=h+88;c[h+16>>2]=-1;c[h+20>>2]=d;if(!(c[(c[a+24>>2]|0)+(d<<2)>>2]|0)){e=c[a+12>>2]|0;e=Ib[c[(c[e>>2]|0)+8>>2]&31](e,h,c[a+8>>2]|0,c[a+28>>2]|0)|0;c[(c[a+24>>2]|0)+(d<<2)>>2]=e;e=c[a+4>>2]|0}f=c[a+20>>2]|0;b=c[f+8>>2]|0;if((c[b+8>>2]|0)==(c[e+8>>2]|0)){c[f+8>>2]=h;ic[c[(c[f>>2]|0)+8>>2]&127](f,-1,d)}else{b=c[f+12>>2]|0;c[f+12>>2]=h;ic[c[(c[f>>2]|0)+12>>2]&127](f,-1,d)}e=c[(c[a+24>>2]|0)+(d<<2)>>2]|0;yb[c[(c[e>>2]|0)+8>>2]&31](e,h,c[a+8>>2]|0,c[a+16>>2]|0,c[a+20>>2]|0);e=c[a+20>>2]|0;if((c[(c[e+8>>2]|0)+8>>2]|0)==(c[(c[a+4>>2]|0)+8>>2]|0))c[e+8>>2]=b;else c[e+12>>2]=b;i=h;return}function Ue(){if(a[22576]|0)return;if(!(Wa(22576)|0))return;c[6168]=0;c[6169]=-2147483648;c[6170]=-1082130432;g[6171]=0.0;c[6172]=1060716128;c[6173]=-1090087446;c[6174]=-1092290076;g[6175]=0.0;c[6176]=-1098022214;c[6177]=-1084636126;c[6178]=-1092290076;g[6179]=0.0;c[6180]=-1083901670;c[6181]=-2147483648;c[6182]=-1092290177;g[6183]=0.0;c[6184]=-1098022214;c[6185]=1062847522;c[6186]=-1092290043;g[6187]=0.0;c[6188]=1060716128;c[6189]=1057396202;c[6190]=-1092290076;g[6191]=0.0;c[6192]=1049461434;c[6193]=-1084636126;c[6194]=1055193605;g[6195]=0.0;c[6196]=-1086767520;c[6197]=-1090087446;c[6198]=1055193572;g[6199]=0.0;c[6200]=-1086767520;c[6201]=1057396202;c[6202]=1055193572;g[6203]=0.0;c[6204]=1049461434;c[6205]=1062847522;c[6206]=1055193572;g[6207]=0.0;c[6208]=1063581978;c[6209]=0;c[6210]=1055193471;g[6211]=0.0;c[6212]=-2147483648;c[6213]=0;c[6214]=1065353216;g[6215]=0.0;c[6216]=1054458864;c[6217]=-1096927567;c[6218]=-1084636042;g[6219]=0.0;c[6220]=-1104782626;c[6221]=-1090519208;c[6222]=-1084636042;g[6223]=0.0;c[6224]=1049007812;c[6225]=-1085334679;c[6226]=-1090087228;g[6227]=0.0;c[6228]=1054458864;c[6229]=1050556081;c[6230]=-1084636042;g[6231]=0.0;c[6232]=1062847505;c[6233]=-2147483648;c[6234]=-1090087262;g[6235]=0.0;c[6236]=-1090087362;c[6237]=-2147483648;c[6238]=-1084636076;g[6239]=0.0;c[6240]=-1087361736;c[6241]=-1090519141;c[6242]=-1090087262;g[6243]=0.0;c[6244]=-1104782626;c[6245]=1056964440;c[6246]=-1084636042;g[6247]=0.0;c[6248]=-1087361736;c[6249]=1056964507;c[6250]=-1090087262;g[6251]=0.0;c[6252]=1049007812;c[6253]=1062148969;c[6254]=-1090087228;g[6255]=0.0;c[6256]=1064532105;c[6257]=1050556148;c[6258]=0;g[6259]=0.0;c[6260]=1064532105;c[6261]=-1096927500;c[6262]=0;g[6263]=0.0;c[6264]=1058437413;c[6265]=-1085334595;c[6266]=0;g[6267]=0.0;c[6268]=0;c[6269]=-1082130432;c[6270]=0;g[6271]=0.0;c[6272]=-1089046235;c[6273]=-1085334595;c[6274]=0;g[6275]=0.0;c[6276]=-1082951543;c[6277]=-1096927500;c[6278]=-2147483648;g[6279]=0.0;c[6280]=-1082951543;c[6281]=1050556148;c[6282]=-2147483648;g[6283]=0.0;c[6284]=-1089046235;c[6285]=1062149053;c[6286]=-2147483648;g[6287]=0.0;c[6288]=-2147483648;c[6289]=1065353216;c[6290]=-2147483648;g[6291]=0.0;c[6292]=1058437413;c[6293]=1062149053;c[6294]=-2147483648;g[6295]=0.0;c[6296]=1060121912;c[6297]=-1090519141;c[6298]=1057396386;g[6299]=0.0;c[6300]=-1098475836;c[6301]=-1085334679;c[6302]=1057396420;g[6303]=0.0;c[6304]=-1084636143;c[6305]=0;c[6306]=1057396386;g[6307]=0.0;c[6308]=-1098475836;c[6309]=1062148969;c[6310]=1057396420;g[6311]=0.0;c[6312]=1060121912;c[6313]=1056964507;c[6314]=1057396386;g[6315]=0.0;c[6316]=1057396286;c[6317]=0;c[6318]=1062847572;g[6319]=0.0;c[6320]=1042701022;c[6321]=-1090519208;c[6322]=1062847606;g[6323]=0.0;c[6324]=-1093024784;c[6325]=-1096927567;c[6326]=1062847606;g[6327]=0.0;c[6328]=-1093024784;c[6329]=1050556081;c[6330]=1062847606;g[6331]=0.0;c[6332]=1042701022;c[6333]=1056964440;c[6334]=1062847606;g[6335]=0.0;_a(22576);return}function Ve(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;u=a[h+16>>0]&-16;a[h+16>>0]=u;w=+g[e>>2];x=+g[d>>2];y=+g[e+4>>2];z=+g[d+4>>2];q=+g[e+8>>2];r=+g[d+8>>2];s=+g[f>>2];t=+g[f+4>>2];v=+g[f+8>>2];m=+g[b>>2];n=+g[b+4>>2];i=+g[b+8>>2];o=(w-x)*(m-x)+(y-z)*(n-z)+(q-r)*(i-r);p=(s-x)*(m-x)+(t-z)*(n-z)+(v-r)*(i-r);if(o<=0.0&p<=0.0){c[h>>2]=c[d>>2];c[h+4>>2]=c[d+4>>2];c[h+8>>2]=c[d+8>>2];c[h+12>>2]=c[d+12>>2];a[h+16>>0]=u|1;g[h+20>>2]=1.0;g[h+24>>2]=0.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;return}k=(w-x)*(m-w)+(y-z)*(n-y)+(q-r)*(i-q);l=(s-x)*(m-w)+(t-z)*(n-y)+(v-r)*(i-q);if(!(!(k>=0.0)|!(l<=k))){c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];c[h+12>>2]=c[e+12>>2];a[h+16>>0]=u|2;g[h+20>>2]=0.0;g[h+24>>2]=1.0;g[h+28>>2]=0.0;g[h+32>>2]=0.0;return}if(k<=0.0&(o>=0.0?o*l-k*p<=0.0:0)){g[h>>2]=x+(w-x)*(o/(o-k));g[h+4>>2]=z+(y-z)*(o/(o-k));g[h+8>>2]=r+(q-r)*(o/(o-k));g[h+12>>2]=0.0;a[h+16>>0]=u|3;g[h+20>>2]=1.0-o/(o-k);g[h+24>>2]=o/(o-k);g[h+28>>2]=0.0;g[h+32>>2]=0.0;return}j=(w-x)*(m-s)+(y-z)*(n-t)+(q-r)*(i-v);i=(s-x)*(m-s)+(t-z)*(n-t)+(v-r)*(i-v);if(!(!(i>=0.0)|!(j<=i))){c[h>>2]=c[f>>2];c[h+4>>2]=c[f+4>>2];c[h+8>>2]=c[f+8>>2];c[h+12>>2]=c[f+12>>2];a[h+16>>0]=u|4;g[h+20>>2]=0.0;g[h+24>>2]=0.0;g[h+28>>2]=1.0;g[h+32>>2]=0.0;return}if(i<=0.0&(p>=0.0?j*p-o*i<=0.0:0)){g[h>>2]=x+(s-x)*(p/(p-i));g[h+4>>2]=z+(t-z)*(p/(p-i));g[h+8>>2]=r+(v-r)*(p/(p-i));g[h+12>>2]=0.0;a[h+16>>0]=u|5;g[h+20>>2]=1.0-p/(p-i);g[h+24>>2]=0.0;g[h+28>>2]=p/(p-i);g[h+32>>2]=0.0;return}if((k*i-j*l<=0.0?l-k>=0.0:0)?j-i>=0.0:0){z=(l-k)/(l-k+(j-i));g[h>>2]=w+(s-w)*z;g[h+4>>2]=y+(t-y)*z;g[h+8>>2]=q+(v-q)*z;g[h+12>>2]=0.0;a[h+16>>0]=u|6;g[h+20>>2]=0.0;g[h+24>>2]=1.0-z;g[h+28>>2]=z;g[h+32>>2]=0.0;return}m=1.0/(o*l-k*p+(k*i-j*l+(j*p-o*i)));n=(j*p-o*i)*m;p=(o*l-k*p)*m;g[h>>2]=(s-x)*p+((w-x)*n+x);g[h+4>>2]=(t-z)*p+((y-z)*n+z);g[h+8>>2]=(v-r)*p+((q-r)*n+r);g[h+12>>2]=0.0;a[h+16>>0]=u|7;g[h+20>>2]=1.0-n-p;g[h+24>>2]=n;g[h+28>>2]=p;g[h+32>>2]=0.0;return}function We(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!((a|0)!=0&(b|0)!=0))return;c[6435]=(c[6435]|0)+1;e=yc(1043)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e>>2]=a;c[e+4>>2]=b;n=1;b=128;h=128;i=e;f=124;while(1){e=n+-1|0;l=c[i+(e<<3)>>2]|0;m=c[i+(e<<3)+4>>2]|0;if((e|0)>(f|0)){f=h<<1;do if((h|0)<(f|0)&(b|0)<(f|0)){if(h){c[6435]=(c[6435]|0)+1;a=yc((h<<4|3)+16|0)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}if((h|0)>0){b=0;do{p=i+(b<<3)|0;j=c[p+4>>2]|0;k=a+(b<<3)|0;c[k>>2]=c[p>>2];c[k+4>>2]=j;b=b+1|0}while((b|0)!=(h|0))}else o=12}else{a=0;o=12}if((o|0)==12){o=0;if(!i){b=f;break}}c[6436]=(c[6436]|0)+1;hd(c[i+-4>>2]|0);b=f}else a=i;while(0);k=f;j=f+-4|0}else{k=h;a=i;j=f}do if((l|0)==(m|0)){if(c[l+40>>2]|0){p=c[l+36>>2]|0;c[a+(e<<3)>>2]=p;c[a+(e<<3)+4>>2]=p;e=n+1|0;p=c[l+40>>2]|0;c[a+(n<<3)>>2]=p;c[a+(n<<3)+4>>2]=p;p=c[l+40>>2]|0;c[a+(e<<3)>>2]=c[l+36>>2];c[a+(e<<3)+4>>2]=p;e=n+2|0}}else if(((((+g[l>>2]<=+g[m+16>>2]?+g[l+16>>2]>=+g[m>>2]:0)?+g[l+4>>2]<=+g[m+20>>2]:0)?+g[l+20>>2]>=+g[m+4>>2]:0)?+g[l+8>>2]<=+g[m+24>>2]:0)?+g[l+24>>2]>=+g[m+8>>2]:0){f=(c[m+40>>2]|0)!=0;if(!(c[l+40>>2]|0))if(f){p=c[m+36>>2]|0;c[a+(e<<3)>>2]=l;c[a+(e<<3)+4>>2]=p;e=c[m+40>>2]|0;c[a+(n<<3)>>2]=l;c[a+(n<<3)+4>>2]=e;e=n+1|0;break}else{ic[c[(c[d>>2]|0)+8>>2]&127](d,l,m);break}else{h=a+(e<<3)|0;i=c[l+36>>2]|0;if(f){p=c[m+36>>2]|0;c[h>>2]=i;c[a+(e<<3)+4>>2]=p;p=n+1|0;e=c[m+36>>2]|0;c[a+(n<<3)>>2]=c[l+40>>2];c[a+(n<<3)+4>>2]=e;e=n+2|0;i=c[m+40>>2]|0;c[a+(p<<3)>>2]=c[l+36>>2];c[a+(p<<3)+4>>2]=i;p=c[m+40>>2]|0;c[a+(e<<3)>>2]=c[l+40>>2];c[a+(e<<3)+4>>2]=p;e=n+3|0;break}else{c[h>>2]=i;c[a+(e<<3)+4>>2]=m;c[a+(n<<3)>>2]=c[l+40>>2];c[a+(n<<3)+4>>2]=m;e=n+1|0;break}}}while(0);if(!e)break;else{n=e;h=k;i=a;f=j}}if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Xe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0;n=c[a+192>>2]|0;m=+Sb[c[(c[n>>2]|0)+48>>2]&15](n);n=c[a+712>>2]|0;if((n|0)>0){o=0;do{l=c[a+720>>2]|0;d=l+(o*104|0)+8|0;i=+g[b>>2]*+g[d>>2];g[d>>2]=i;d=l+(o*104|0)+12|0;j=+g[b+4>>2]*+g[d>>2];g[d>>2]=j;d=l+(o*104|0)+16|0;k=+g[b+8>>2]*+g[d>>2];g[d>>2]=k;d=l+(o*104|0)+24|0;g[d>>2]=+g[b>>2]*+g[d>>2];d=l+(o*104|0)+28|0;g[d>>2]=+g[b+4>>2]*+g[d>>2];d=l+(o*104|0)+32|0;g[d>>2]=+g[b+8>>2]*+g[d>>2];l=c[l+(o*104|0)+96>>2]|0;d=hh(a+928|0,l)|0;a:do if(d){f=c[a+936>>2]|0;if((f|0)<=-1){d=c[a+928>>2]|0;break}if((f|0)>0){h=0;while(1){e=c[d+32>>2]|0;h=h+1|0;if(!e)break a;if((h|0)>=(f|0)){d=e;break}else d=e}}}else d=0;while(0);g[l>>2]=i-m;g[l+4>>2]=j-m;g[l+8>>2]=k-m;g[l+12>>2]=0.0;g[l+16>>2]=m+i;g[l+20>>2]=m+j;g[l+24>>2]=m+k;g[l+28>>2]=0.0;lf(a+928|0,d,l);o=o+1|0}while((o|0)!=(n|0))}Bg(a);d=c[a+928>>2]|0;if(d){o=c[a+192>>2]|0;j=+Sb[c[(c[o>>2]|0)+48>>2]&15](o);m=+g[d+4>>2]-j;k=+g[d+8>>2]-j;g[a+892>>2]=+g[d>>2]-j;g[a+896>>2]=m;g[a+900>>2]=k;g[a+904>>2]=0.0;k=j+ +g[d+20>>2];m=j+ +g[d+24>>2];g[a+908>>2]=j+ +g[d+16>>2];g[a+912>>2]=k;g[a+916>>2]=m;g[a+920>>2]=0.0;d=c[a+188>>2]|0;if(d|0){o=c[a+684>>2]|0;b=c[o+32>>2]|0;yb[c[(c[b>>2]|0)+16>>2]&31](b,d,a+892|0,a+908|0,c[o+36>>2]|0)}}else{c[a+892>>2]=0;c[a+892+4>>2]=0;c[a+892+8>>2]=0;c[a+892+12>>2]=0;c[a+892+16>>2]=0;c[a+892+20>>2]=0;c[a+892+24>>2]=0;c[a+892+28>>2]=0}f=c[a+732>>2]|0;if((f|0)<=0){eg(a);return}d=c[a+740>>2]|0;e=0;do{b=c[d+(e*52|0)+8>>2]|0;o=c[d+(e*52|0)+12>>2]|0;j=+g[b+8>>2]-+g[o+8>>2];k=+g[b+12>>2]-+g[o+12>>2];m=+g[b+16>>2]-+g[o+16>>2];m=+O(+(j*j+k*k+m*m));g[d+(e*52|0)+16>>2]=m;g[d+(e*52|0)+28>>2]=m*m;e=e+1|0}while((e|0)!=(f|0));d=c[a+740>>2]|0;e=0;do{g[d+(e*52|0)+24>>2]=(+g[(c[d+(e*52|0)+8>>2]|0)+88>>2]+ +g[(c[d+(e*52|0)+12>>2]|0)+88>>2])/+g[(c[d+(e*52|0)+4>>2]|0)+4>>2];e=e+1|0}while((e|0)!=(f|0));eg(a);return}function Ye(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0.0,y=0,z=0;w=i;i=i+192|0;u=c[(c[b+4>>2]|0)+740>>2]|0;v=c[(c[b+8>>2]|0)+8>>2]|0;o=+g[e>>2];r=+g[d>>2]*f+o;h=+g[e+4>>2];s=+g[d+4>>2]*f+h;j=+g[e+8>>2];t=+g[d+8>>2]*f+j;p=c[(c[b+12>>2]|0)+8>>2]|0;q=+g[p+52>>2];if((u|0)!=(v|0)){m=s-+g[p+56>>2];l=t-+g[p+60>>2];x=o-+g[v+52>>2];o=h-+g[v+56>>2];h=j-+g[v+60>>2];j=(r-q)*+g[p+4>>2]+m*+g[p+20>>2]+l*+g[p+36>>2];k=(r-q)*+g[p+8>>2]+m*+g[p+24>>2]+l*+g[p+40>>2];l=(r-q)*+g[p+12>>2]+m*+g[p+28>>2]+l*+g[p+44>>2];m=x*+g[v+4>>2]+o*+g[v+20>>2]+h*+g[v+36>>2];n=x*+g[v+8>>2]+o*+g[v+24>>2]+h*+g[v+40>>2];h=x*+g[v+12>>2]+o*+g[v+28>>2]+h*+g[v+44>>2]}else{n=r-+g[u+52>>2];m=s-+g[u+56>>2];l=t-+g[u+60>>2];x=h-+g[p+56>>2];h=j-+g[p+60>>2];j=n*+g[u+4>>2]+m*+g[u+20>>2]+l*+g[u+36>>2];k=n*+g[u+8>>2]+m*+g[u+24>>2]+l*+g[u+40>>2];l=n*+g[u+12>>2]+m*+g[u+28>>2]+l*+g[u+44>>2];m=(o-q)*+g[p+4>>2]+x*+g[p+20>>2]+h*+g[p+36>>2];n=(o-q)*+g[p+8>>2]+x*+g[p+24>>2]+h*+g[p+40>>2];h=(o-q)*+g[p+12>>2]+x*+g[p+28>>2]+h*+g[p+44>>2]}g[w>>2]=j;g[w+4>>2]=k;g[w+8>>2]=l;g[w+12>>2]=0.0;g[w+16>>2]=m;g[w+20>>2]=n;g[w+24>>2]=h;g[w+28>>2]=0.0;c[w+64>>2]=c[d>>2];c[w+64+4>>2]=c[d+4>>2];c[w+64+8>>2]=c[d+8>>2];c[w+64+12>>2]=c[d+12>>2];g[w+80>>2]=f;g[w+84>>2]=0.0;g[w+88>>2]=0.0;g[w+92>>2]=0.0;c[w+112>>2]=0;a[w+116>>0]=0;c[w+120>>2]=0;c[w+120+4>>2]=0;c[w+120+8>>2]=0;c[w+120+12>>2]=0;c[w+120+16>>2]=0;c[w+120+20>>2]=0;c[w+120+24>>2]=0;c[w+120+28>>2]=0;g[w+48>>2]=r;g[w+52>>2]=s;g[w+56>>2]=t;g[w+60>>2]=0.0;c[w+32>>2]=c[e>>2];c[w+32+4>>2]=c[e+4>>2];c[w+32+8>>2]=c[e+8>>2];c[w+32+12>>2]=c[e+12>>2];d=c[b+20>>2]|0;p=c[b+16>>2]|0;e=c[b+28>>2]|0;z=c[b+24>>2]|0;y=(u|0)!=(v|0)?d:p;d=(u|0)!=(v|0)?p:d;p=(u|0)!=(v|0)?e:z;e=(u|0)!=(v|0)?z:e;c[w+96>>2]=y;c[w+100>>2]=d;c[w+104>>2]=p;c[w+108>>2]=e;z=c[b+32>>2]|0;+Kb[c[(c[z>>2]|0)+12>>2]&1](z,w,c[((u|0)!=(v|0)?b+12|0:b+8|0)>>2]|0,y,p,c[((u|0)!=(v|0)?b+8|0:b+12|0)>>2]|0,d,e);i=w;return}function Ze(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;h=i;i=i+48|0;c[b+8>>2]=0;g[b+12>>2]=0.0;c[b>>2]=6924;c[b+48>>2]=d;c[b+4>>2]=21;if(Eb[c[(c[d>>2]|0)+40>>2]&127](d)|0)ic[c[(c[d>>2]|0)+48>>2]&127](d,b+16|0,b+32|0);else{c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;g[h+32>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+32>>2]=+g[h+16>>2]+ +g[b+12>>2];g[h+32>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+16>>2]=+g[h+16>>2]-+g[b+12>>2];c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;g[h+32+4>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+36>>2]=+g[h+16+4>>2]+ +g[b+12>>2];g[h+32+4>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+20>>2]=+g[h+16+4>>2]-+g[b+12>>2];c[h+32>>2]=0;c[h+32+4>>2]=0;c[h+32+8>>2]=0;c[h+32+12>>2]=0;g[h+32+8>>2]=1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h+16|0,b,h+32|0);g[b+40>>2]=+g[h+16+8>>2]+ +g[b+12>>2];g[h+32+8>>2]=-1.0;ic[c[(c[b>>2]|0)+68>>2]&127](h,b,h+32|0);c[h+16>>2]=c[h>>2];c[h+16+4>>2]=c[h+4>>2];c[h+16+8>>2]=c[h+8>>2];c[h+16+12>>2]=c[h+12>>2];g[b+24>>2]=+g[h+16+8>>2]-+g[b+12>>2]}c[b>>2]=6772;c[b+52>>2]=0;c[b+56>>2]=0;a[b+60>>0]=e&1;a[b+61>>0]=0;c[b+4>>2]=21;if(!f){i=h;return}c[6435]=(c[6435]|0)+1;f=yc(191)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[f+52>>2]=282;a[f+60>>0]=0;a[f+80>>0]=1;c[f+76>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;a[f+100>>0]=1;c[f+96>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;a[f+120>>0]=1;c[f+116>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;a[f+140>>0]=1;c[f+136>>2]=0;c[f+128>>2]=0;c[f+132>>2]=0;c[f+144>>2]=0;a[f+164>>0]=1;c[f+160>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+168>>2]=0;c[f+4>>2]=-8388609;c[f+8>>2]=-8388609;c[f+12>>2]=-8388609;g[f+16>>2]=0.0;c[f+20>>2]=2139095039;c[f+24>>2]=2139095039;c[f+28>>2]=2139095039;g[f+32>>2]=0.0;c[f>>2]=7980;c[b+52>>2]=f;pd(f,c[b+48>>2]|0,(a[b+60>>0]|0)!=0,b+16|0,b+32|0);a[b+61>>0]=1;i=h;return}function _e(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;d=c[a+748>>2]|0;if((d|0)!=4){c[a+748>>2]=d+1;x=d;w=(x|0)<0;x=w?0:x;a=a+4+(x*184|0)|0;bn(a|0,b|0,184)|0;return x|0}y=+g[b+80>>2];v=+g[a+84>>2];u=v<y?v:y;t=+g[a+268>>2];s=t<u?t:u;r=+g[a+452>>2];w=+g[a+636>>2]<(r<s?r:s);d=w?3:r<s?2:t<u?1:(v<y^1)<<31>>31;y=+g[b>>2];if(d){e=+g[a+188>>2];i=+g[b+4>>2];l=+g[a+192>>2];m=+g[b+8>>2];n=+g[a+196>>2];p=+g[a+556>>2];s=+g[a+372>>2];q=+g[a+560>>2];r=+g[a+376>>2];v=+g[a+564>>2];j=+g[a+380>>2];h=(g[k>>2]=((y-e)*(q-r)-(i-l)*(p-s))*((y-e)*(q-r)-(i-l)*(p-s))+(((i-l)*(v-j)-(m-n)*(q-r))*((i-l)*(v-j)-(m-n)*(q-r))+((m-n)*(p-s)-(y-e)*(v-j))*((m-n)*(p-s)-(y-e)*(v-j))),c[k>>2]|0);if((d|0)==1){o=+g[a+12>>2];t=p;u=q;p=+g[a+4>>2];q=+g[a+8>>2];f=0;x=7}else{t=p;u=q;x=6}}else{e=+g[a+188>>2];l=+g[a+192>>2];n=+g[a+196>>2];i=+g[b+4>>2];m=+g[b+8>>2];s=+g[a+372>>2];t=+g[a+556>>2];r=+g[a+376>>2];u=+g[a+560>>2];j=+g[a+380>>2];v=+g[a+564>>2];h=0;x=6}if((x|0)==6){p=+g[a+4>>2];q=+g[a+8>>2];D=i-q;o=+g[a+12>>2];B=m-o;A=t-s;C=u-r;z=v-j;f=(g[k>>2]=((y-p)*C-D*A)*((y-p)*C-D*A)+((D*z-B*C)*(D*z-B*C)+(B*A-(y-p)*z)*(B*A-(y-p)*z)),c[k>>2]|0);if((d|0)==2){d=0;x=8}else x=7}if((x|0)==7){C=y-p;E=i-q;A=m-o;B=t-e;z=u-l;D=v-n;d=(g[k>>2]=(C*z-E*B)*(C*z-E*B)+((E*D-A*z)*(E*D-A*z)+(A*B-C*D)*(A*B-C*D)),c[k>>2]|0);if(w)e=0.0;else x=8}if((x|0)==8){E=y-p;A=i-q;C=m-o;D=s-e;B=r-l;e=j-n;e=(E*B-A*D)*(E*B-A*D)+((A*e-C*B)*(A*e-C*B)+(C*D-E*e)*(C*D-E*e))}E=+N(+(c[k>>2]=h,+g[k>>2]));C=+N(+(c[k>>2]=f,+g[k>>2]));A=+N(+(c[k>>2]=d,+g[k>>2]));z=+N(+e);D=E>-999999984306749440.0?E:-999999984306749440.0;B=C>D?C:D;x=z>(A>B?A:B)?3:A>B?2:C>D?1:(E>-999999984306749440.0^1)<<31>>31;w=(x|0)<0;x=w?0:x;a=a+4+(x*184|0)|0;bn(a|0,b|0,184)|0;return x|0}function $e(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(!b)if(!e){if(f|0){c[f>>2]=(a>>>0)%(d>>>0);c[f+4>>2]=0}e=0;f=(a>>>0)/(d>>>0)>>>0;return (C=e,f)|0}else{if(!f){e=0;f=0;return (C=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;e=0;f=0;return (C=e,f)|0}do if(d){if(e|0){h=(aa(e|0)|0)-(aa(b|0)|0)|0;if(h>>>0<=31){n=h+1|0;i=a>>>((h+1|0)>>>0)&h-31>>31|b<<31-h;m=b>>>((h+1|0)>>>0)&h-31>>31;g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (C=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (C=e,f)|0}if(d-1&d|0){h=(aa(d|0)|0)+33-(aa(b|0)|0)|0;n=h;i=32-h-1>>31&b>>>((h-32|0)>>>0)|(b<<32-h|a>>>(h>>>0))&h-32>>31;m=h-32>>31&b>>>(h>>>0);g=a<<64-h&32-h>>31;h=(b<<64-h|a>>>((h-32|0)>>>0))&32-h>>31|a<<32-h&h-33>>31;break}if(f|0){c[f>>2]=d-1&a;c[f+4>>2]=0}if((d|0)==1){e=b|b&0;f=a|0|0;return (C=e,f)|0}else{f=Vp(d|0)|0;e=b>>>(f>>>0)|0;f=b<<32-f|a>>>(f>>>0)|0;return (C=e,f)|0}}else{if(!e){if(f|0){c[f>>2]=(b>>>0)%(d>>>0);c[f+4>>2]=0}e=0;f=(b>>>0)/(d>>>0)>>>0;return (C=e,f)|0}if(!a){if(f|0){c[f>>2]=0;c[f+4>>2]=(b>>>0)%(e>>>0)}d=0;f=(b>>>0)/(e>>>0)>>>0;return (C=d,f)|0}if(!(e-1&e)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=e-1&b|b&0}d=0;f=b>>>((Vp(e|0)|0)>>>0);return (C=d,f)|0}h=(aa(e|0)|0)-(aa(b|0)|0)|0;if(h>>>0<=30){n=h+1|0;i=b<<31-h|a>>>((h+1|0)>>>0);m=b>>>((h+1|0)>>>0);g=0;h=a<<31-h;break}if(!f){e=0;f=0;return (C=e,f)|0}c[f>>2]=a|0;c[f+4>>2]=b|b&0;e=0;f=0;return (C=e,f)|0}while(0);if(!n){j=h;b=m;a=0;h=0}else{k=Pt(d|0|0,e|e&0|0,-1,-1)|0;l=C;j=h;b=m;a=n;h=0;do{p=j;j=g>>>31|j<<1;g=h|g<<1;p=i<<1|p>>>31|0;o=i>>>31|b<<1|0;Ls(k|0,l|0,p|0,o|0)|0;n=C;m=n>>31|((n|0)<0?-1:0)<<1;h=m&1;i=Ls(p|0,o|0,m&(d|0)|0,(((n|0)<0?-1:0)>>31|((n|0)<0?-1:0)<<1)&(e|e&0)|0)|0;b=C;a=a-1|0}while((a|0)!=0);a=0}if(f|0){c[f>>2]=i;c[f+4>>2]=b}o=(g|0)>>>31|j<<1|(0<<1|g>>>31)&0|a;p=(g<<1|0>>>31)&-2|h;return (C=o,p)|0}function af(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;l=i;i=i+128|0;a=c[a+16>>2]|0;n=+g[a+892>>2];x=+g[a+896>>2];v=+g[a+900>>2];w=+g[a+908>>2];f=+g[a+912>>2];j=+g[a+916>>2];z=+g[b>>2];m=+g[b+4>>2];p=v*+g[b+8>>2];q=+g[b+16>>2];r=+g[b+20>>2];t=v*+g[b+24>>2];u=+g[b+32>>2];o=+g[b+36>>2];s=+g[b+40>>2];y=+g[b+48>>2];k=+g[b+52>>2];h=+g[b+56>>2];g[l>>2]=n*z+x*m+p+y;g[l+4>>2]=n*q+x*r+t+k;g[l+8>>2]=n*u+x*o+v*s+h;g[l+12>>2]=0.0;g[l+16>>2]=w*z+x*m+p+y;g[l+20>>2]=w*q+x*r+t+k;g[l+24>>2]=w*u+x*o+v*s+h;g[l+28>>2]=0.0;g[l+32>>2]=w*z+f*m+p+y;g[l+36>>2]=w*q+f*r+t+k;g[l+40>>2]=w*u+f*o+v*s+h;g[l+44>>2]=0.0;g[l+48>>2]=n*z+f*m+p+y;g[l+52>>2]=n*q+f*r+t+k;g[l+56>>2]=n*u+f*o+v*s+h;g[l+60>>2]=0.0;v=+g[b>>2];u=+g[b+4>>2];t=j*+g[b+8>>2];r=+g[b+16>>2];q=+g[b+20>>2];p=j*+g[b+24>>2];m=+g[b+32>>2];g[l+64>>2]=n*v+x*u+t+y;g[l+68>>2]=n*r+x*q+p+k;g[l+72>>2]=n*m+x*o+j*s+h;g[l+76>>2]=0.0;h=+g[b+36>>2];j=j*+g[b+40>>2];s=+g[b+48>>2];o=+g[b+52>>2];k=+g[b+56>>2];g[l+80>>2]=w*v+x*u+t+s;g[l+84>>2]=w*r+x*q+p+o;g[l+88>>2]=w*m+x*h+j+k;g[l+92>>2]=0.0;g[l+96>>2]=w*v+f*u+t+s;g[l+100>>2]=w*r+f*q+p+o;g[l+104>>2]=w*m+f*h+j+k;g[l+108>>2]=0.0;g[l+112>>2]=n*v+f*u+t+s;g[l+116>>2]=n*r+f*q+p+o;g[l+120>>2]=n*m+f*h+j+k;g[l+124>>2]=0.0;c[e>>2]=c[l>>2];c[e+4>>2]=c[l+4>>2];c[e+8>>2]=c[l+8>>2];c[e+12>>2]=c[l+12>>2];c[d>>2]=c[l>>2];c[d+4>>2]=c[l+4>>2];c[d+8>>2]=c[l+8>>2];c[d+12>>2]=c[l+12>>2];b=1;do{f=+g[l+(b<<4)>>2];if(f<+g[d>>2])g[d>>2]=f;h=+g[l+(b<<4)+4>>2];if(h<+g[d+4>>2])g[d+4>>2]=h;j=+g[l+(b<<4)+8>>2];if(j<+g[d+8>>2])g[d+8>>2]=j;k=+g[l+(b<<4)+12>>2];if(k<+g[d+12>>2])g[d+12>>2]=k;if(+g[e>>2]<f)g[e>>2]=f;if(+g[e+4>>2]<h)g[e+4>>2]=h;if(+g[e+8>>2]<j)g[e+8>>2]=j;if(+g[e+12>>2]<k)g[e+12>>2]=k;b=b+1|0}while((b|0)!=8);i=l;return}function bf(b){b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+16|0;li(12143);l=c[b+204>>2]|0;ic[c[(c[l>>2]|0)+8>>2]&127](l,b,c[b+24>>2]|0);l=c[b+308>>2]|0;if((l|0)>0){k=c[b+316>>2]|0;m=0;do{e=c[k+(m<<2)>>2]|0;d=c[e+740>>2]|0;e=c[e+744>>2]|0;if((d|0?(e|0?(c[d+204>>2]&3|0)==0:0):0)?(c[e+204>>2]&3|0)==0:0){h=c[d+208>>2]|0;d=c[e+208>>2]|0;j=c[(c[b+204>>2]|0)+16>>2]|0;e=c[j+(h<<3)>>2]|0;if((e|0)!=(h|0)){f=j+(h<<3)|0;do{h=j+(e<<3)|0;c[f>>2]=c[h>>2];h=c[h>>2]|0;f=j+(h<<3)|0;e=c[f>>2]|0}while((h|0)!=(e|0))}e=c[j+(d<<3)>>2]|0;if((e|0)!=(d|0)){f=j+(d<<3)|0;do{d=j+(e<<3)|0;c[f>>2]=c[d>>2];d=c[d>>2]|0;f=j+(d<<3)|0;e=c[f>>2]|0}while((d|0)!=(e|0))}if((h|0)!=(d|0)){c[j+(h<<3)>>2]=d;f=j+(d<<3)+4|0;c[f>>2]=(c[f>>2]|0)+(c[j+(h<<3)+4>>2]|0)}}m=m+1|0}while((m|0)!=(l|0))}l=c[b+212>>2]|0;if((l|0)>0){k=c[b+220>>2]|0;m=0;do{d=c[k+(m<<2)>>2]|0;if((a[d+20>>0]|0?(n=c[d+28>>2]|0,(c[n+204>>2]&3|0)==0):0)?(o=c[d+32>>2]|0,(c[o+204>>2]&3|0)==0):0){f=c[n+208>>2]|0;d=c[o+208>>2]|0;j=c[(c[b+204>>2]|0)+16>>2]|0;e=c[j+(f<<3)>>2]|0;if((e|0)==(f|0))h=f;else{f=j+(f<<3)|0;do{h=j+(e<<3)|0;c[f>>2]=c[h>>2];h=c[h>>2]|0;f=j+(h<<3)|0;e=c[f>>2]|0}while((h|0)!=(e|0))}e=c[j+(d<<3)>>2]|0;if((e|0)!=(d|0)){f=j+(d<<3)|0;do{d=j+(e<<3)|0;c[f>>2]=c[d>>2];d=c[d>>2]|0;f=j+(d<<3)|0;e=c[f>>2]|0}while((d|0)!=(e|0))}if((h|0)!=(d|0)){c[j+(h<<3)>>2]=d;f=j+(d<<3)+4|0;c[f>>2]=(c[f>>2]|0)+(c[j+(h<<3)+4>>2]|0)}}m=m+1|0}while((m|0)!=(l|0))}d=c[b+204>>2]|0;Cb[c[(c[d>>2]|0)+12>>2]&127](d,b);d=c[2357]|0;b=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=b;if(b|0){i=p;return}do if(c[d+4>>2]|0){tb(p|0,0)|0;b=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[p+4>>2]|0)-(c[b+4>>2]|0)+(((c[p>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=p;return}}while(0);c[2357]=c[d+20>>2];i=p;return}function cf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0.0,q=0;o=i;i=i+128|0;h=+g[b>>2];j=+g[b+16>>2];p=h<j?h:j;k=+g[b+32>>2];if((p<k?p:k)>+g[a+28>>2]){i=o;return}m=h>j?b:b+16|0;if(+g[(+g[m>>2]>k?m:b+32|0)>>2]<+g[a+12>>2]){i=o;return}h=+g[b+8>>2];j=+g[b+24>>2];p=h<j?h:j;k=+g[b+40>>2];if((p<k?p:k)>+g[a+36>>2]){i=o;return}m=h>j?b+8|0:b+24|0;if(+g[(+g[m>>2]>k?m:b+40|0)>>2]<+g[a+20>>2]){i=o;return}h=+g[b+4>>2];j=+g[b+20>>2];p=h<j?h:j;k=+g[b+36>>2];if((p<k?p:k)>+g[a+32>>2]){i=o;return}m=h>j?b+4|0:b+20|0;if(+g[(+g[m>>2]>k?m:b+36|0)>>2]<+g[a+16>>2]){i=o;return}m=c[a+48>>2]|0;f=c[a+4>>2]|0;if((c[(c[f+4>>2]|0)+4>>2]|0)>=20){i=o;return}c[o+24+8>>2]=0;c[o+24+12>>2]=1065353216;c[o+24+16>>2]=1065353216;c[o+24+20>>2]=1065353216;g[o+24+24>>2]=0.0;c[o+24+52>>2]=0;c[o+24>>2]=3736;c[o+24+4>>2]=1;c[o+24+56>>2]=c[b>>2];c[o+24+56+4>>2]=c[b+4>>2];c[o+24+56+8>>2]=c[b+8>>2];c[o+24+56+12>>2]=c[b+12>>2];c[o+24+72>>2]=c[b+16>>2];c[o+24+72+4>>2]=c[b+16+4>>2];c[o+24+72+8>>2]=c[b+16+8>>2];c[o+24+72+12>>2]=c[b+16+12>>2];c[o+24+88>>2]=c[b+32>>2];c[o+24+88+4>>2]=c[b+32+4>>2];c[o+24+88+8>>2]=c[b+32+8>>2];c[o+24+88+12>>2]=c[b+32+12>>2];c[o+24+44>>2]=c[a+56>>2];q=c[a+8>>2]|0;b=c[q+8>>2]|0;l=c[q+12>>2]|0;c[o>>2]=q;c[o+4>>2]=o+24;c[o+8>>2]=b;c[o+12>>2]=l;c[o+16>>2]=d;c[o+20>>2]=e;l=Ib[c[(c[m>>2]|0)+8>>2]&31](m,f,o,c[a+64>>2]|0)|0;f=c[a+44>>2]|0;b=c[f+8>>2]|0;if((c[b+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0)){c[f+8>>2]=o;ic[c[(c[f>>2]|0)+8>>2]&127](f,d,e)}else{b=c[f+12>>2]|0;c[f+12>>2]=o;ic[c[(c[f>>2]|0)+12>>2]&127](f,d,e)}yb[c[(c[l>>2]|0)+8>>2]&31](l,c[a+4>>2]|0,o,c[a+52>>2]|0,c[a+44>>2]|0);f=c[a+44>>2]|0;if((c[(c[f+8>>2]|0)+8>>2]|0)==(c[(c[a+8>>2]|0)+8>>2]|0))c[f+8>>2]=b;else c[f+12>>2]=b;Ab[c[c[l>>2]>>2]&255](l);Cb[c[(c[m>>2]|0)+60>>2]&127](m,l);c[o+24>>2]=7124;f=c[o+24+52>>2]|0;if(f|0?(Ab[c[c[f>>2]>>2]&255](f),n=c[o+24+52>>2]|0,n|0):0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}i=o;return}function df(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;k=i;i=i+64|0;l=(a[b+8>>0]|0)!=0;j=l?e:d;d=l?d:e;e=c[d+4>>2]|0;if(((c[e+4>>2]|0)+-21|0)>>>0>=9){i=k;return}if((c[(c[j+4>>2]|0)+4>>2]|0)>=20){i=k;return}m=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);c[h+4>>2]=c[b+76>>2];c[b+16>>2]=j;c[b+20>>2]=d;c[b+64>>2]=f;g[b+68>>2]=m;c[b+56>>2]=h;l=c[d+12>>2]|0;B=+g[l>>2];A=+g[l+16>>2];z=+g[l+32>>2];y=+g[l+4>>2];x=+g[l+20>>2];w=+g[l+36>>2];s=+g[l+8>>2];q=+g[l+24>>2];o=+g[l+40>>2];v=-+g[l+48>>2];u=-+g[l+52>>2];t=-+g[l+56>>2];l=c[j+12>>2]|0;K=+g[l>>2];J=+g[l+16>>2];I=+g[l+32>>2];H=+g[l+4>>2];G=+g[l+20>>2];F=+g[l+36>>2];E=+g[l+8>>2];D=+g[l+24>>2];C=+g[l+40>>2];r=+g[l+48>>2];p=+g[l+52>>2];n=+g[l+56>>2];g[k>>2]=B*K+A*J+z*I;g[k+4>>2]=B*H+A*G+z*F;g[k+8>>2]=B*E+A*D+z*C;g[k+12>>2]=0.0;g[k+16>>2]=y*K+x*J+w*I;g[k+20>>2]=y*H+x*G+w*F;g[k+24>>2]=y*E+x*D+w*C;g[k+28>>2]=0.0;g[k+32>>2]=s*K+q*J+o*I;g[k+36>>2]=s*H+q*G+o*F;g[k+40>>2]=s*E+q*D+o*C;g[k+44>>2]=0.0;g[k+48>>2]=B*v+A*u+z*t+(B*r+A*p+z*n);g[k+52>>2]=y*v+x*u+w*t+(y*r+x*p+w*n);g[k+56>>2]=s*v+q*u+o*t+(s*r+q*p+o*n);g[k+60>>2]=0.0;l=c[(c[b+16>>2]|0)+4>>2]|0;mc[c[(c[l>>2]|0)+8>>2]&127](l,k,b+24|0,b+40|0);g[b+40>>2]=+g[b+40>>2]+m;g[b+44>>2]=+g[b+44>>2]+m;g[b+48>>2]=+g[b+48>>2]+m;g[b+24>>2]=+g[b+24>>2]-m;g[b+28>>2]=+g[b+28>>2]-m;g[b+32>>2]=+g[b+32>>2]-m;l=c[b+76>>2]|0;f=c[d+8>>2]|0;c[l+740>>2]=c[j+8>>2];c[l+744>>2]=f;mc[c[(c[e>>2]|0)+64>>2]&127](e,b+12|0,b+24|0,b+40|0);e=c[h+4>>2]|0;do if(c[e+748>>2]|0){j=c[e+740>>2]|0;f=c[(c[h+8>>2]|0)+8>>2]|0;d=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(f|0)){ef(e,j+4|0,d+4|0);break}else{ef(e,d+4|0,f+4|0);break}}while(0);c[b+16>>2]=0;c[b+20>>2]=0;i=k;return}function ef(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;f=c[b+748>>2]|0;if((f|0)<=0)return;do{k=f;f=f+-1|0;p=+g[b+4+(f*184|0)>>2];q=+g[b+4+(f*184|0)+4>>2];h=+g[b+4+(f*184|0)+8>>2];o=p*+g[d>>2]+q*+g[d+4>>2]+h*+g[d+8>>2]+ +g[d+48>>2];m=p*+g[d+16>>2]+q*+g[d+20>>2]+h*+g[d+24>>2]+ +g[d+52>>2];h=p*+g[d+32>>2]+q*+g[d+36>>2]+h*+g[d+40>>2]+ +g[d+56>>2];g[b+4+(f*184|0)+48>>2]=o;g[b+4+(f*184|0)+52>>2]=m;g[b+4+(f*184|0)+56>>2]=h;g[b+4+(f*184|0)+60>>2]=0.0;q=+g[b+4+(f*184|0)+16>>2];p=+g[b+4+(f*184|0)+20>>2];i=+g[b+4+(f*184|0)+24>>2];n=q*+g[e>>2]+p*+g[e+4>>2]+i*+g[e+8>>2]+ +g[e+48>>2];l=q*+g[e+16>>2]+p*+g[e+20>>2]+i*+g[e+24>>2]+ +g[e+52>>2];i=q*+g[e+32>>2]+p*+g[e+36>>2]+i*+g[e+40>>2]+ +g[e+56>>2];g[b+4+(f*184|0)+32>>2]=n;g[b+4+(f*184|0)+36>>2]=l;g[b+4+(f*184|0)+40>>2]=i;g[b+4+(f*184|0)+44>>2]=0.0;g[b+4+(f*184|0)+80>>2]=(o-n)*+g[b+4+(f*184|0)+64>>2]+(m-l)*+g[b+4+(f*184|0)+68>>2]+(h-i)*+g[b+4+(f*184|0)+72>>2];j=b+4+(f*184|0)+148|0;c[j>>2]=(c[j>>2]|0)+1}while((k|0)>1);f=c[b+748>>2]|0;if((f|0)<=0)return;e=f;j=f;while(1){k=j;j=j+-1|0;d=b+4+(j*184|0)|0;h=+g[b+4+(j*184|0)+80>>2];i=+g[b+752>>2];if(h<=i){o=+g[b+4+(j*184|0)+32>>2]-(+g[b+4+(j*184|0)+48>>2]-+g[b+4+(j*184|0)+64>>2]*h);p=+g[b+4+(j*184|0)+36>>2]-(+g[b+4+(j*184|0)+52>>2]-h*+g[b+4+(j*184|0)+68>>2]);q=+g[b+4+(j*184|0)+40>>2]-(+g[b+4+(j*184|0)+56>>2]-h*+g[b+4+(j*184|0)+72>>2]);if(o*o+p*p+q*q>i*i){f=e+-1|0;if((f|0)==(j|0))f=e;else{bn(d|0,b+4+(f*184|0)|0,184)|0;c[b+4+(f*184|0)+112>>2]=0;g[b+4+(f*184|0)+120>>2]=0.0;a[b+4+(f*184|0)+116>>0]=0;g[b+4+(f*184|0)+124>>2]=0.0;g[b+4+(f*184|0)+128>>2]=0.0;c[b+4+(f*184|0)+148>>2]=0;f=c[b+748>>2]|0}f=f+-1|0;c[b+748>>2]=f}else f=e}else{f=e+-1|0;if((f|0)==(j|0))f=e;else{bn(d|0,b+4+(f*184|0)|0,184)|0;c[b+4+(f*184|0)+112>>2]=0;g[b+4+(f*184|0)+120>>2]=0.0;a[b+4+(f*184|0)+116>>0]=0;g[b+4+(f*184|0)+124>>2]=0.0;g[b+4+(f*184|0)+128>>2]=0.0;c[b+4+(f*184|0)+148>>2]=0;f=c[b+748>>2]|0}f=f+-1|0;c[b+748>>2]=f}if((k|0)<=1)break;else e=f}return}function ff(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0;D=i;i=i+32|0;if(!a){i=D;return}w=+g[d>>2]-+g[b>>2];x=+g[d+4>>2]-+g[b+4>>2];r=+g[d+8>>2]-+g[b+8>>2];s=1.0/+O(+(w*w+x*x+r*r));t=w*s==0.0?999999984306749440.0:1.0/(w*s);u=x*s==0.0?999999984306749440.0:1.0/(x*s);v=r*s==0.0?999999984306749440.0:1.0/(r*s);c[6435]=(c[6435]|0)+1;d=yc(531)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Tn(d|0,0,512)|0;c[d>>2]=a;q=1;a=128;m=128;f=126;while(1){n=q+-1|0;p=c[d+(n<<2)>>2]|0;c[D>>2]=c[p>>2];c[D+4>>2]=c[p+4>>2];c[D+8>>2]=c[p+8>>2];c[D+12>>2]=c[p+12>>2];c[D+16>>2]=c[p+16>>2];c[D+16+4>>2]=c[p+16+4>>2];c[D+16+8>>2]=c[p+16+8>>2];c[D+16+12>>2]=c[p+16+12>>2];j=+g[b>>2];h=t*(+g[D+((t<0.0&1)<<4)>>2]-j);j=t*(+g[D+((t<0.0^1)<<4)>>2]-j);l=+g[b+4>>2];k=u*(+g[D+((u<0.0&1)<<4)+4>>2]-l);l=u*(+g[D+((u<0.0^1)<<4)+4>>2]-l);do if((!(k>j|h>l)?(y=k>h?k:h,B=l<j?l:j,A=+g[b+8>>2],z=v*(+g[D+((v<0.0&1)<<4)+8>>2]-A),A=v*(+g[D+((v<0.0^1)<<4)+8>>2]-A),!(z>B|y>A)):0)?((A<B?A:B)>0.0?(z>y?z:y)<w*s*w+x*s*x+r*s*r:0):0){if(!(c[p+40>>2]|0)){Cb[c[(c[e>>2]|0)+12>>2]&127](e,p);break}if((n|0)>(f|0)){o=m<<1;if((m|0)<(o|0)){do if((a|0)<(o|0)){if(m){c[6435]=(c[6435]|0)+1;a=yc((m<<3|3)+16|0)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}if((m|0)>0){f=0;do{c[a+(f<<2)>>2]=c[d+(f<<2)>>2];f=f+1|0}while((f|0)!=(m|0))}else C=17}else{a=0;C=17}if((C|0)==17){C=0;if(!d){f=o;d=a;break}}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);f=o;d=a}else f=a;while(0);Tn(d+(m<<2)|0,0,m<<2|0)|0;a=f}m=o;f=o+-2|0}c[d+(n<<2)>>2]=c[p+36>>2];c[d+(q<<2)>>2]=c[p+40>>2];n=q+1|0}while(0);if(!n)break;else q=n}if(!d){i=D;return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);i=D;return}function gf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0;f=i;i=i+256|0;li(11671);c[f+32>>2]=4060;l=f+32+36|0;c[l>>2]=c[b>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];c[l+12>>2]=c[b+12>>2];m=f+32+52|0;c[m>>2]=c[d>>2];c[m+4>>2]=c[d+4>>2];c[m+8>>2]=c[d+8>>2];c[m+12>>2]=c[d+12>>2];c[f+32+212>>2]=a;c[f+32+216>>2]=e;c[f+32+68>>2]=1065353216;c[f+32+72>>2]=0;c[f+32+72+4>>2]=0;c[f+32+72+8>>2]=0;c[f+32+72+12>>2]=0;c[f+32+88>>2]=1065353216;c[f+32+92>>2]=0;c[f+32+92+4>>2]=0;c[f+32+92+8>>2]=0;c[f+32+92+12>>2]=0;c[f+32+108>>2]=1065353216;c[f+32+112>>2]=0;c[f+32+116>>2]=c[l>>2];c[f+32+116+4>>2]=c[l+4>>2];c[f+32+116+8>>2]=c[l+8>>2];c[f+32+116+12>>2]=c[l+12>>2];c[f+32+132>>2]=1065353216;c[f+32+136>>2]=0;c[f+32+136+4>>2]=0;c[f+32+136+8>>2]=0;c[f+32+136+12>>2]=0;c[f+32+152>>2]=1065353216;c[f+32+156>>2]=0;c[f+32+156+4>>2]=0;c[f+32+156+8>>2]=0;c[f+32+156+12>>2]=0;c[f+32+172>>2]=1065353216;c[f+32+176>>2]=0;c[f+32+180>>2]=c[d>>2];c[f+32+180+4>>2]=c[d+4>>2];c[f+32+180+8>>2]=c[d+8>>2];c[f+32+180+12>>2]=c[d+12>>2];n=+g[d>>2]-+g[b>>2];k=+g[d+4>>2]-+g[b+4>>2];j=+g[d+8>>2]-+g[b+8>>2];h=1.0/+O(+(n*n+k*k+j*j));q=n*h==0.0?1000000015047466219876688.0e6:1.0/(n*h);g[f+32+4>>2]=q;p=k*h==0.0?1000000015047466219876688.0e6:1.0/(k*h);g[f+32+8>>2]=p;o=j*h==0.0?1000000015047466219876688.0e6:1.0/(j*h);g[f+32+12>>2]=o;c[f+32+20>>2]=q<0.0&1;c[f+32+24>>2]=p<0.0&1;c[f+32+28>>2]=o<0.0&1;g[f+32+32>>2]=n*h*(+g[m>>2]-+g[l>>2])+k*h*(+g[f+32+56>>2]-+g[f+32+40>>2])+j*h*(+g[f+32+60>>2]-+g[f+32+44>>2]);a=c[a+68>>2]|0;e=c[(c[a>>2]|0)+24>>2]|0;c[f+16>>2]=0;c[f+16+4>>2]=0;c[f+16+8>>2]=0;c[f+16+12>>2]=0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;Qb[e&7](a,b,d,f+32|0,f+16|0,f);b=c[2357]|0;a=(c[b+16>>2]|0)+-1|0;c[b+16>>2]=a;if(a|0){i=f;return}do if(c[b+4>>2]|0){tb(f+32|0,0)|0;m=c[6434]|0;g[b+8>>2]=+g[b+8>>2]+ +(((c[f+32+4>>2]|0)-(c[m+4>>2]|0)+(((c[f+32>>2]|0)-(c[m>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[b+16>>2]|0)){b=c[2357]|0;break}else{i=f;return}}while(0);c[2357]=c[b+20>>2];i=f;return}function hf(b,d){b=b|0;d=+d;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0;s=i;i=i+16|0;li(12002);e=c[b+232>>2]|0;if((e|0)>0){r=0;do{q=c[(c[b+240>>2]|0)+(r<<2)>>2]|0;if(!(c[q+204>>2]&3)){n=+g[q+444>>2];f=+P(+(1.0-n),+d);j=f*+g[q+312>>2];g[q+312>>2]=j;h=f*+g[q+316>>2];g[q+316>>2]=h;f=f*+g[q+320>>2];g[q+320>>2]=f;p=+g[q+448>>2];m=+P(+(1.0-p),+d);k=m*+g[q+328>>2];g[q+328>>2]=k;l=m*+g[q+332>>2];g[q+332>>2]=l;m=m*+g[q+336>>2];g[q+336>>2]=m;do if(a[q+452>>0]|0){if(m*m+(k*k+l*l)<+g[q+464>>2]?j*j+h*h+f*f<+g[q+460>>2]:0){t=+g[q+456>>2];g[q+328>>2]=k*t;g[q+332>>2]=t*l;g[q+336>>2]=t*m;g[q+312>>2]=t*j;g[q+316>>2]=t*h;g[q+320>>2]=t*f;f=t*f;o=k*t;l=t*l;m=t*m;j=t*j;h=t*h}else o=k;k=+O(+(j*j+h*h+f*f));do if(k<n)if(k>.004999999888241291){j=j-j*(1.0/k)*.004999999888241291;g[q+312>>2]=j;h=h-h*(1.0/k)*.004999999888241291;g[q+316>>2]=h;f=f-f*(1.0/k)*.004999999888241291;g[q+320>>2]=f;break}else{c[q+312>>2]=0;c[q+312+4>>2]=0;c[q+312+8>>2]=0;c[q+312+12>>2]=0;j=0.0;h=0.0;f=0.0;break}while(0);k=+O(+(o*o+l*l+m*m));if(k<p)if(k>.004999999888241291){g[q+328>>2]=o-o*(1.0/k)*.004999999888241291;g[q+332>>2]=l-l*(1.0/k)*.004999999888241291;g[q+336>>2]=m-m*(1.0/k)*.004999999888241291;break}else{c[q+328>>2]=0;c[q+328+4>>2]=0;c[q+328+8>>2]=0;c[q+328+12>>2]=0;break}}while(0);Zg(q+4|0,j,h,f,q+328|0,d,q+68|0);e=c[b+232>>2]|0}r=r+1|0}while((r|0)<(e|0))}e=c[2357]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){i=s;return}do if(c[e+4>>2]|0){tb(s|0,0)|0;b=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[s+4>>2]|0)-(c[b+4>>2]|0)+(((c[s>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2357]|0;break}else{i=s;return}}while(0);c[2357]=c[e+20>>2];i=s;return}function jf(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=c[a+108>>2]|0;if(g|0)ic[c[(c[g>>2]|0)+12>>2]&127](g,c[d+60>>2]|0,f);q=c[d+12>>2]|0;p=c[a+60>>2]|0;o=c[a+92>>2]|0;if(!(Eb[c[(c[o>>2]|0)+56>>2]&127](o)|0)){o=c[a+92>>2]|0;ic[c[(c[o>>2]|0)+16>>2]&127](o,p+((q&65535)<<6)|0,f)}m=e[a+56>>1]|0;g=c[a+60>>2]|0;b[g+54>>1]=(e[g+54>>1]|0)+65534;b[g+56>>1]=(e[g+56>>1]|0)+65534;b[g+58>>1]=(e[g+58>>1]|0)+65534;g=b[a+6>>1]|0;o=0;do{l=a+68+(o<<2)|0;n=c[l>>2]|0;f=e[p+((q&65535)<<6)+54+(o<<1)>>1]|0;b[n+(f<<2)>>1]=g;d=b[n+(f<<2)+6>>1]|0;if(!(d<<16>>16))f=n;else{k=(c[a+60>>2]|0)+((e[n+(f<<2)+2>>1]|0)<<6)+54+(o<<1)|0;i=n+(f<<2)|0;while(1){j=i;i=i+4|0;h=b[i>>1]|0;if((g&65535)<(h&65535))break;f=c[a+60>>2]|0;g=d&65535;if(!(h&1)){h=f+(g<<6)+48+(o<<1)|0;b[h>>1]=(b[h>>1]|0)+-1<<16>>16}else{h=f+(g<<6)+54+(o<<1)|0;b[h>>1]=(b[h>>1]|0)+-1<<16>>16}b[k>>1]=(b[k>>1]|0)+1<<16>>16;g=e[j>>1]|e[j+2>>1]<<16;d=e[i>>1]|e[i+2>>1]<<16;b[j>>1]=d;b[j+2>>1]=d>>>16;b[i>>1]=g;b[i+2>>1]=g>>>16;d=b[j+10>>1]|0;if(!(d<<16>>16))break;else g=g&65535}g=b[a+6>>1]|0;f=c[l>>2]|0}d=e[p+((q&65535)<<6)+48+(o<<1)>>1]|0;b[n+(d<<2)>>1]=g;i=f+(d<<2)|0;h=b[i+6>>1]|0;if(h<<16>>16){k=(c[a+60>>2]|0)+((e[f+(d<<2)+2>>1]|0)<<6)+48+(o<<1)|0;g=b[i>>1]|0;while(1){j=i;i=i+4|0;f=b[i>>1]|0;if((g&65535)<(f&65535))break;d=c[a+60>>2]|0;g=h&65535;if(!(f&1)){l=d+(g<<6)+48+(o<<1)|0;b[l>>1]=(b[l>>1]|0)+-1<<16>>16}else{l=d+(g<<6)+54+(o<<1)|0;b[l>>1]=(b[l>>1]|0)+-1<<16>>16}b[k>>1]=(b[k>>1]|0)+1<<16>>16;g=e[j>>1]|e[j+2>>1]<<16;h=e[i>>1]|e[i+2>>1]<<16;b[j>>1]=h;b[j+2>>1]=h>>>16;b[i>>1]=g;b[i+2>>1]=g>>>16;h=b[j+10>>1]|0;if(!(h<<16>>16))break;else g=g&65535}g=b[a+6>>1]|0}b[n+((m<<1)+-1<<2)+2>>1]=0;b[n+((m<<1)+-1<<2)>>1]=g;o=o+1|0}while((o|0)!=3);b[(c[a+60>>2]|0)+((q&65535)<<6)+48>>1]=b[a+64>>1]|0;b[a+64>>1]=q;b[a+56>>1]=(b[a+56>>1]|0)+-1<<16>>16;return}function kf(b){b=b|0;var d=0,e=0;c[b>>2]=5224;if(a[b+20>>0]|0){d=c[b+16>>2]|0;e=c[d+16>>2]|0;if(e){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+16>>2]|0}if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}}if(a[b+12>>0]|0){d=c[b+8>>2]|0;e=c[d+16>>2]|0;if(e){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+8>>2]|0}if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}}d=c[b+32>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+32>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+36>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+36>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+40>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+40>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+44>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+44>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+48>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+48>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+52>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+52>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+56>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+56>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+60>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+60>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+76>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+76>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+80>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+80>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+72>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+72>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+88>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+88>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+84>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+84>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+24>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+28>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+28>>2]|0;if(!d)return;c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);return}function lf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0.0;if(!(c[a>>2]|0)){c[a>>2]=d;c[d+32>>2]=0;return}e=c[b+40>>2]|0;if(!e)o=b;else{k=+g[d>>2]+ +g[d+16>>2];i=+g[d+4>>2]+ +g[d+20>>2];j=+g[d+8>>2]+ +g[d+24>>2];do{p=c[b+36>>2]|0;n=+N(+(k-(+g[p>>2]+ +g[p+16>>2])))+ +N(+(i-(+g[p+4>>2]+ +g[p+20>>2])))+ +N(+(j-(+g[p+8>>2]+ +g[p+24>>2])));b=c[b+36+((!(n<+N(+(k-(+g[e>>2]+ +g[e+16>>2])))+ +N(+(i-(+g[e+4>>2]+ +g[e+20>>2])))+ +N(+(j-(+g[e+8>>2]+ +g[e+24>>2]))))&1)<<2)>>2]|0;e=c[b+40>>2]|0}while((e|0)!=0);o=b}p=o+32|0;e=c[p>>2]|0;b=c[a+4>>2]|0;if(!b){c[6435]=(c[6435]|0)+1;b=yc(63)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}f=b;h=f+44|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0))}else c[a+4>>2]=0;c[b+32>>2]=e;c[b+36>>2]=0;f=b+40|0;c[f>>2]=0;q=+g[d>>2];n=+g[o>>2];n=q<n?q:n;g[b>>2]=n;q=+g[d+16>>2];k=+g[o+16>>2];k=q>k?q:k;g[b+16>>2]=k;q=+g[d+4>>2];m=+g[o+4>>2];m=q<m?q:m;g[b+4>>2]=m;q=+g[d+20>>2];j=+g[o+20>>2];j=q>j?q:j;g[b+20>>2]=j;q=+g[d+8>>2];l=+g[o+8>>2];l=q<l?q:l;g[b+8>>2]=l;q=+g[d+24>>2];i=+g[o+24>>2];i=q>i?q:i;g[b+24>>2]=i;if(!e){c[b+36>>2]=o;c[p>>2]=b;c[f>>2]=d;c[d+32>>2]=b;c[a>>2]=b;return}c[e+36+(((c[(c[p>>2]|0)+40>>2]|0)==(o|0)&1)<<2)>>2]=b;c[b+36>>2]=o;c[p>>2]=b;c[f>>2]=d;c[d+32>>2]=b;while(1){b=e+4|0;if(((((+g[e>>2]<=n?+g[b>>2]<=m:0)?+g[e+8>>2]<=l:0)?+g[e+16>>2]>=k:0)?+g[e+20>>2]>=j:0)?+g[e+24>>2]>=i:0){b=21;break}d=c[e+36>>2]|0;a=c[e+40>>2]|0;q=+g[d>>2];n=+g[a>>2];n=q<n?q:n;g[e>>2]=n;q=+g[d+16>>2];k=+g[a+16>>2];k=q>k?q:k;g[e+16>>2]=k;q=+g[d+4>>2];m=+g[a+4>>2];m=q<m?q:m;g[b>>2]=m;q=+g[d+20>>2];j=+g[a+20>>2];j=q>j?q:j;g[e+20>>2]=j;q=+g[d+8>>2];l=+g[a+8>>2];l=q<l?q:l;g[e+8>>2]=l;q=+g[d+24>>2];i=+g[a+24>>2];i=q>i?q:i;g[e+24>>2]=i;e=c[e+32>>2]|0;if(!e){b=21;break}}if((b|0)==21)return}function mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;c[b+16>>2]=c[a+4>>2];c[b+20>>2]=c[a+8>>2];c[b+24>>2]=c[a+12>>2];c[b+28>>2]=c[a+16>>2];c[b+32>>2]=c[a+20>>2];c[b+36>>2]=c[a+24>>2];c[b+40>>2]=c[a+28>>2];c[b+44>>2]=c[a+32>>2];c[b+48>>2]=c[a+36>>2];c[b+52>>2]=c[a+40>>2];c[b+56>>2]=c[a+44>>2];c[b+60>>2]=c[a+48>>2];c[b+64>>2]=c[a+52>>2];c[b+68>>2]=c[a+56>>2];c[b+72>>2]=c[a+60>>2];c[b+76>>2]=c[a+64>>2];c[b+80>>2]=c[a+68>>2];c[b+84>>2]=c[a+72>>2];c[b+88>>2]=c[a+76>>2];c[b+92>>2]=c[a+80>>2];c[b+96>>2]=c[a+84>>2];c[b+100>>2]=c[a+88>>2];c[b+104>>2]=c[a+92>>2];c[b+108>>2]=c[a+96>>2];c[b+112>>2]=c[a+100>>2];c[b+116>>2]=c[a+104>>2];c[b+120>>2]=c[a+108>>2];c[b+124>>2]=c[a+112>>2];c[b+128>>2]=c[a+116>>2];c[b+132>>2]=c[a+120>>2];c[b+136>>2]=c[a+124>>2];c[b+140>>2]=c[a+128>>2];c[b+144>>2]=c[a+132>>2];c[b+148>>2]=c[a+136>>2];c[b+152>>2]=c[a+140>>2];c[b+156>>2]=c[a+144>>2];c[b+160>>2]=c[a+148>>2];c[b+164>>2]=c[a+152>>2];c[b+168>>2]=c[a+156>>2];c[b+172>>2]=c[a+160>>2];c[b+176>>2]=c[a+164>>2];c[b+180>>2]=c[a+168>>2];c[b+184>>2]=c[a+172>>2];c[b+188>>2]=c[a+176>>2];c[b+224>>2]=c[a+180>>2];c[b+192>>2]=c[a+184>>2];c[b>>2]=0;c[b+4>>2]=Zb[c[(c[d>>2]|0)+28>>2]&31](d,c[a+192>>2]|0)|0;c[b+8>>2]=0;c[b+228>>2]=c[a+204>>2];c[b+232>>2]=c[a+208>>2];c[b+236>>2]=c[a+212>>2];c[b+240>>2]=c[a+216>>2];c[b+196>>2]=c[a+220>>2];c[b+200>>2]=c[a+224>>2];c[b+204>>2]=c[a+232>>2];c[b+208>>2]=c[a+228>>2];c[b+244>>2]=c[a+236>>2];e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b+12>>2]=f;if(!f){d=a+244|0;d=c[d>>2]|0;f=b+212|0;c[f>>2]=d;f=a+248|0;f=c[f>>2]|0;d=b+216|0;c[d>>2]=f;d=a+252|0;d=c[d>>2]|0;f=b+220|0;c[f>>2]=d;a=a+256|0;a=c[a>>2]|0;f=b+248|0;c[f>>2]=a;return 13172}Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);d=a+244|0;d=c[d>>2]|0;f=b+212|0;c[f>>2]=d;f=a+248|0;f=c[f>>2]|0;d=b+216|0;c[d>>2]=f;d=a+252|0;d=c[d>>2]|0;f=b+220|0;c[f>>2]=d;a=a+256|0;a=c[a>>2]|0;f=b+248|0;c[f>>2]=a;return 13172}function nf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0;q=c[b+9288>>2]|0;if(!q){c[b>>2]=5;b=0;return b|0}i=c[q+48>>2]|0;if(i|0)c[i+44>>2]=c[q+44>>2];i=c[q+44>>2]|0;if(i|0)c[i+48>>2]=c[q+48>>2];if((c[b+9288>>2]|0)==(q|0))c[b+9288>>2]=c[q+48>>2];c[b+9292>>2]=(c[b+9292>>2]|0)+-1;c[q+44>>2]=0;c[q+48>>2]=c[b+9280>>2];i=c[b+9280>>2]|0;if(i|0)c[i+44>>2]=q;c[b+9280>>2]=q;c[b+9284>>2]=(c[b+9284>>2]|0)+1;a[q+55>>0]=0;c[q+20>>2]=d;c[q+24>>2]=e;c[q+28>>2]=f;m=+g[d+16>>2];j=+g[e+16>>2]-m;n=+g[d+20>>2];k=+g[e+20>>2]-n;o=+g[d+24>>2];l=+g[e+24>>2]-o;m=+g[f+16>>2]-m;n=+g[f+20>>2]-n;o=+g[f+24>>2]-o;g[q>>2]=k*o-l*n;g[q+4>>2]=l*m-j*o;g[q+8>>2]=j*n-k*m;g[q+12>>2]=0.0;p=+O(+((k*o-l*n)*(k*o-l*n)+(l*m-j*o)*(l*m-j*o)+(j*n-k*m)*(j*n-k*m)));do if(p>9.999999747378752e-05){if((!(al(k*o-l*n,l*m-j*o,j*n-k*m,+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],q+16|0)|0)?!(al(+g[q>>2],+g[q+4>>2],+g[q+8>>2],+g[e+16>>2],+g[e+20>>2],+g[e+24>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],q+16|0)|0):0)?!(al(+g[q>>2],+g[q+4>>2],+g[q+8>>2],+g[f+16>>2],+g[f+20>>2],+g[f+24>>2],+g[d+16>>2],+g[d+20>>2],+g[d+24>>2],q+16|0)|0):0)g[q+16>>2]=(+g[d+16>>2]*+g[q>>2]+ +g[d+20>>2]*+g[q+4>>2]+ +g[d+24>>2]*+g[q+8>>2])/p;g[q>>2]=1.0/p*+g[q>>2];g[q+4>>2]=1.0/p*+g[q+4>>2];g[q+8>>2]=1.0/p*+g[q+8>>2];if(h){b=q;return b|0}if(!(+g[q+16>>2]>=-9.999999747378752e-06)){c[b>>2]=3;break}else{b=q;return b|0}}else c[b>>2]=2;while(0);i=c[q+48>>2]|0;if(i|0)c[i+44>>2]=c[q+44>>2];i=c[q+44>>2]|0;if(i|0)c[i+48>>2]=c[q+48>>2];if((c[b+9280>>2]|0)==(q|0))c[b+9280>>2]=c[q+48>>2];c[b+9284>>2]=(c[b+9284>>2]|0)+-1;c[q+44>>2]=0;c[q+48>>2]=c[b+9288>>2];i=c[b+9288>>2]|0;if(i|0)c[i+44>>2]=q;c[b+9288>>2]=q;c[b+9292>>2]=(c[b+9292>>2]|0)+1;b=0;return b|0}function of(a,b,f){a=a|0;b=b|0;f=f|0;var j=0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=i;i=i+32|0;o=c[a+4>>2]|0;Yb[c[(c[o>>2]|0)+16>>2]&3](o,t+28|0,t+24|0,t+20|0,t+16|0,t+12|0,t+8|0,t+4|0,t,b);o=(c[t+12>>2]|0)+(_(c[t+8>>2]|0,f)|0)|0;s=c[a+4>>2]|0;n=c[t>>2]|0;switch(n|0){case 3:{j=e[o+4>>1]|0;break}case 2:{j=c[o+8>>2]|0;break}default:j=d[o+2>>0]|0}r=(c[t+20>>2]|0)==0;p=c[t+28>>2]|0;q=c[t+16>>2]|0;j=p+(_(q,j)|0)|0;if(r){l=+g[j+8>>2]*+g[s+12>>2];m=+g[j+4>>2]*+g[s+8>>2];k=+g[j>>2]*+g[s+4>>2]}else{l=+h[j+16>>3]*+g[s+12>>2];m=+h[j+8>>3]*+g[s+8>>2];k=+h[j>>3]*+g[s+4>>2]}g[a+44>>2]=k;g[a+48>>2]=m;g[a+52>>2]=l;g[a+56>>2]=0.0;switch(n|0){case 3:{j=e[o+2>>1]|0;break}case 2:{j=c[o+4>>2]|0;break}default:j=d[o+1>>0]|0}j=p+(_(q,j)|0)|0;if(r){l=+g[j+8>>2]*+g[s+12>>2];m=+g[j+4>>2]*+g[s+8>>2];k=+g[j>>2]*+g[s+4>>2]}else{l=+h[j+16>>3]*+g[s+12>>2];m=+h[j+8>>3]*+g[s+8>>2];k=+h[j>>3]*+g[s+4>>2]}g[a+28>>2]=k;g[a+32>>2]=m;g[a+36>>2]=l;g[a+40>>2]=0.0;switch(n|0){case 3:{j=e[o>>1]|0;break}case 2:{j=c[o>>2]|0;break}default:j=d[o>>0]|0}j=p+(_(q,j)|0)|0;if(r){m=+g[j+8>>2]*+g[s+12>>2];l=+g[j+4>>2]*+g[s+8>>2];k=+g[j>>2]*+g[s+4>>2];r=a+12|0;g[r>>2]=k;r=a+16|0;g[r>>2]=l;r=a+20|0;g[r>>2]=m;r=a+24|0;g[r>>2]=0.0;r=a+8|0;r=c[r>>2]|0;q=c[r>>2]|0;q=q+8|0;q=c[q>>2]|0;s=a+12|0;mc[q&127](r,s,b,f);a=c[a+4>>2]|0;f=c[a>>2]|0;f=f+24|0;f=c[f>>2]|0;Cb[f&127](a,b);i=t;return}else{m=+h[j+16>>3]*+g[s+12>>2];l=+h[j+8>>3]*+g[s+8>>2];k=+h[j>>3]*+g[s+4>>2];r=a+12|0;g[r>>2]=k;r=a+16|0;g[r>>2]=l;r=a+20|0;g[r>>2]=m;r=a+24|0;g[r>>2]=0.0;r=a+8|0;r=c[r>>2]|0;q=c[r>>2]|0;q=q+8|0;q=c[q>>2]|0;s=a+12|0;mc[q&127](r,s,b,f);a=c[a+4>>2]|0;f=c[a>>2]|0;f=f+24|0;f=c[f>>2]|0;Cb[f&127](a,b);i=t;return}}function pf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;c[6435]=(c[6435]|0)+1;f=yc(479)|0;if(!f)s=0;else{c[(f+4+15&-16)+-4>>2]=f;s=f+4+15&-16}je(s,b,d,e);c[s>>2]=3872;a[s+340>>0]=1;c[s+336>>2]=0;c[s+328>>2]=0;c[s+332>>2]=0;k=s+352|0;g[k>>2]=1.2000000476837158;l=s+356|0;g[l>>2]=0.0;m=s+360|0;g[m>>2]=0.0;g[s+364>>2]=1.0e3;n=s+368|0;o=s+396|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[o>>2]=-1054867456;p=s+400|0;c[p>>2]=0;q=s+404|0;g[q>>2]=0.0;a[s+424>>0]=1;r=s+420|0;c[r>>2]=0;j=s+412|0;c[j>>2]=0;c[s+416>>2]=0;e=s+452|0;c[e>>2]=h;i=s+456|0;a[i>>0]=0;if(!h){c[6435]=(c[6435]|0)+1;f=yc(59)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g[f+12>>2]=1.0;c[f+8>>2]=0;c[f+4>>2]=5;c[f>>2]=2996;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+16>>0]=1;c[e>>2]=f;a[i>>0]=1}c[s+344>>2]=4302;a[s+348>>0]=1;a[s+349>>0]=0;a[s+350>>0]=0;c[s+384>>2]=d;c[s+388>>2]=b;h=s+408|0;Ji(h);e=c[j>>2]|0;if((e|0)>0)i=0;else{r=s+428|0;g[r>>2]=.25;r=s+432|0;c[r>>2]=0;r=s+436|0;c[r>>2]=0;r=s+444|0;c[r>>2]=1;r=s+448|0;c[r>>2]=1;g[k>>2]=1.2000000476837158;g[l>>2]=0.0;g[m>>2]=0.0;r=s+392|0;c[r>>2]=0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[o>>2]=-1054867456;c[p>>2]=0;g[q>>2]=0.0;Ji(h);return s|0}do{d=(c[r>>2]|0)+(i<<2)|0;f=c[d>>2]|0;c[d>>2]=0;if(f|0)do{d=f;f=c[f+280>>2]|0;hd(d)}while((f|0)!=0);i=i+1|0}while((i|0)!=(e|0));r=s+428|0;g[r>>2]=.25;r=s+432|0;c[r>>2]=0;r=s+436|0;c[r>>2]=0;r=s+444|0;c[r>>2]=1;r=s+448|0;c[r>>2]=1;g[k>>2]=1.2000000476837158;g[l>>2]=0.0;g[m>>2]=0.0;r=s+392|0;c[r>>2]=0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[o>>2]=-1054867456;c[p>>2]=0;g[q>>2]=0.0;Ji(h);return s|0}function qf(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0,h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;j=c[a+28>>2]|0;k=c[a+32>>2]|0;f=c[b+8>>2]|0;g[f>>2]=1.0;h=c[b+24>>2]|0;g[f+(h+1<<2)>>2]=1.0;g[f+((h<<1)+2<<2)>>2]=1.0;l=+g[a+300>>2];q=+g[a+304>>2];e=+g[a+308>>2];o=+g[j+4>>2]*l+ +g[j+8>>2]*q+ +g[j+12>>2]*e;m=l*+g[j+20>>2]+q*+g[j+24>>2]+e*+g[j+28>>2];e=l*+g[j+36>>2]+q*+g[j+40>>2]+e*+g[j+44>>2];f=c[b+12>>2]|0;c[f>>2]=0;g[f+4>>2]=e;g[f+8>>2]=-m;g[f+12>>2]=0.0;g[f+(h<<2)>>2]=-e;c[f+(h<<2)+4>>2]=0;g[f+(h<<2)+8>>2]=o;g[f+(h<<2)+12>>2]=0.0;g[f+(h<<1<<2)>>2]=m;g[f+(h<<1<<2)+4>>2]=-o;c[f+(h<<1<<2)+8>>2]=0;g[f+(h<<1<<2)+12>>2]=0.0;f=c[b+16>>2]|0;g[f>>2]=-1.0;g[f+(h+1<<2)>>2]=-1.0;g[f+((h<<1)+2<<2)>>2]=-1.0;q=+g[a+316>>2];l=+g[a+320>>2];d=+g[a+324>>2];p=+g[k+4>>2]*q+ +g[k+8>>2]*l+ +g[k+12>>2]*d;n=q*+g[k+20>>2]+l*+g[k+24>>2]+d*+g[k+28>>2];d=q*+g[k+36>>2]+l*+g[k+40>>2]+d*+g[k+44>>2];h=c[b+20>>2]|0;f=c[b+24>>2]|0;c[h>>2]=0;g[h+4>>2]=-d;g[h+8>>2]=n;g[h+12>>2]=0.0;g[h+(f<<2)>>2]=d;c[h+(f<<2)+4>>2]=0;g[h+(f<<2)+8>>2]=-p;g[h+(f<<2)+12>>2]=0.0;g[h+(f<<1<<2)>>2]=-n;g[h+(f<<1<<2)+4>>2]=p;c[h+(f<<1<<2)+8>>2]=0;g[h+(f<<1<<2)+12>>2]=0.0;f=c[a+332>>2]|0;l=+g[((f&1|0)==0?b+4|0:a+336|0)>>2]*+g[b>>2];h=c[b+24>>2]|0;i=c[b+28>>2]|0;g[i>>2]=l*(p+ +g[k+52>>2]-o-+g[j+52>>2]);g[i+(h<<2)>>2]=l*(n+ +g[k+56>>2]-m-+g[j+56>>2]);g[i+(h<<1<<2)>>2]=l*(d+ +g[k+60>>2]-e-+g[j+60>>2]);if(f&2|0){k=c[b+24>>2]|0;j=c[b+32>>2]|0;c[j>>2]=c[a+340>>2];c[j+(k<<2)>>2]=c[a+340>>2];c[j+(k<<1<<2)>>2]=c[a+340>>2]}e=+g[a+356>>2];if(e>0.0){g[c[b+36>>2]>>2]=-e;g[c[b+40>>2]>>2]=e;d=+g[a+356>>2]}else d=e;if(d>0.0){k=c[b+24>>2]|0;g[(c[b+36>>2]|0)+(k<<2)>>2]=-e;g[(c[b+40>>2]|0)+(k<<2)>>2]=e;d=+g[a+356>>2]}if(!(d>0.0)){j=a+352|0;j=c[j>>2]|0;k=b+52|0;c[k>>2]=j;return}j=c[b+24>>2]<<1;g[(c[b+36>>2]|0)+(j<<2)>>2]=-e;g[(c[b+40>>2]|0)+(j<<2)>>2]=e;j=a+352|0;j=c[j>>2]|0;k=b+52|0;c[k>>2]=j;return}function rf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0;f=c[d+8>>2]|0;if((f|0)>0){h=c[d+16>>2]|0;j=0;e=0;do{i=c[h+(j<<2)>>2]|0;if(!(c[i+204>>2]&3)){c[i+208>>2]=e;e=e+1|0}c[i+212>>2]=-1;g[i+244>>2]=1.0;j=j+1|0}while((j|0)!=(f|0));j=e}else j=0;i=c[b+8>>2]|0;if((i|0)<(j|0)){if((c[b+12>>2]|0)<(j|0)){if(!j){e=0;f=i}else{c[6435]=(c[6435]|0)+1;e=yc((j<<3|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[b+8>>2]|0}if((f|0)>0){h=0;do{m=(c[b+16>>2]|0)+(h<<3)|0;k=c[m+4>>2]|0;l=e+(h<<3)|0;c[l>>2]=c[m>>2];c[l+4>>2]=k;h=h+1|0}while((h|0)!=(f|0))}f=c[b+16>>2]|0;if(f|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=e;c[b+12>>2]=j;f=b+16|0}else f=b+16|0;e=i;do{m=(c[f>>2]|0)+(e<<3)|0;c[m>>2]=0;c[m+4>>2]=0;e=e+1|0}while((e|0)!=(j|0))}c[b+8>>2]=j;if((j|0)>0){e=c[b+16>>2]|0;f=0;do{c[e+(f<<3)>>2]=f;c[e+(f<<3)+4>>2]=1;f=f+1|0}while((f|0)!=(j|0))}e=c[d+68>>2]|0;e=Eb[c[(c[e>>2]|0)+36>>2]&127](e)|0;l=Eb[c[(c[e>>2]|0)+36>>2]&127](e)|0;if(!l)return;d=Eb[c[(c[e>>2]|0)+20>>2]&127](e)|0;if((l|0)<=0)return;k=0;do{e=c[c[d+(k<<4)>>2]>>2]|0;f=c[c[d+(k<<4)+4>>2]>>2]|0;if((e|0?(f|0?(c[e+204>>2]&7|0)==0:0):0)?(c[f+204>>2]&7|0)==0:0){i=c[e+208>>2]|0;e=c[f+208>>2]|0;j=c[b+16>>2]|0;f=c[j+(i<<3)>>2]|0;if((f|0)!=(i|0)){h=j+(i<<3)|0;do{i=j+(f<<3)|0;c[h>>2]=c[i>>2];i=c[i>>2]|0;h=j+(i<<3)|0;f=c[h>>2]|0}while((i|0)!=(f|0))}f=c[j+(e<<3)>>2]|0;if((f|0)!=(e|0)){h=j+(e<<3)|0;do{e=j+(f<<3)|0;c[h>>2]=c[e>>2];e=c[e>>2]|0;h=j+(e<<3)|0;f=c[h>>2]|0}while((e|0)!=(f|0))}if((i|0)!=(e|0)){c[j+(i<<3)>>2]=e;m=j+(e<<3)+4|0;c[m>>2]=(c[m>>2]|0)+(c[j+(i<<3)+4>>2]|0)}}k=k+1|0}while((k|0)!=(l|0));return}function sf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(c[d+28>>2]|0)!=1:0)c[d+28>>2]=f}else{if((b|0)!=(c[d>>2]|0)){i=c[b+12>>2]|0;co(b+16|0,d,e,f,g);if((i|0)<=1)break;h=c[b+8>>2]|0;if((h&2|0)==0?(c[d+36>>2]|0)!=1:0){if(!(h&1)){h=b+24|0;while(1){if(a[d+54>>0]|0)break a;if((c[d+36>>2]|0)==1)break a;co(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}h=b+24|0;while(1){if(a[d+54>>0]|0)break a;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==1:0)break a;co(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}h=b+24|0;while(1){if(a[d+54>>0]|0)break a;co(h,d,e,f,g);h=h+8|0;if(h>>>0>=(b+16+(i<<3)|0)>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;if((c[d+44>>2]|0)==4)break;f=b+16+(c[b+12>>2]<<3)|0;k=0;h=0;j=b+16|0;b:while(1){if(j>>>0>=f>>>0){i=20;break}a[d+52>>0]=0;a[d+53>>0]=0;Rn(j,d,e,e,1,g);if(a[d+54>>0]|0){i=20;break}do if(a[d+53>>0]|0){if(!(a[d+52>>0]|0))if(!(c[b+8>>2]&1)){h=1;i=20;break b}else{i=k;h=1;break}if((c[d+24>>2]|0)==1){i=25;break b}if(!(c[b+8>>2]&2)){i=25;break b}else{i=1;h=1}}else i=k;while(0);k=i;j=j+8|0}do if((i|0)==20){if((!k?(c[d+20>>2]=e,c[d+40>>2]=(c[d+40>>2]|0)+1,(c[d+36>>2]|0)==1):0)?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(h){i=25;break}else{h=4;break}}if(h)i=25;else h=4}while(0);if((i|0)==25)h=3;c[d+44>>2]=h;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function tf(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0,j=0;c[6435]=(c[6435]|0)+1;i=yc(1147)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}c[i+4>>2]=7;c[i+8>>2]=-1;c[i+12>>2]=-1;g[i+16>>2]=3402823466385288598117041.0e14;a[i+20>>0]=1;a[i+21>>0]=0;c[i+24>>2]=-1;j=i+28|0;c[j>>2]=b;b=i+32|0;c[b>>2]=d;g[i+36>>2]=0.0;g[i+40>>2]=.30000001192092896;c[i+44>>2]=0;c[i>>2]=4596;a[i+48>>0]=0;d=i+52|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];d=i+68|0;c[d>>2]=c[e+16>>2];c[d+4>>2]=c[e+16+4>>2];c[d+8>>2]=c[e+16+8>>2];c[d+12>>2]=c[e+16+12>>2];d=i+84|0;c[d>>2]=c[e+32>>2];c[d+4>>2]=c[e+32+4>>2];c[d+8>>2]=c[e+32+8>>2];c[d+12>>2]=c[e+32+12>>2];d=i+100|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];e=i+116|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];e=i+132|0;c[e>>2]=c[f+16>>2];c[e+4>>2]=c[f+16+4>>2];c[e+8>>2]=c[f+16+8>>2];c[e+12>>2]=c[f+16+12>>2];e=i+148|0;c[e>>2]=c[f+32>>2];c[e+4>>2]=c[f+32+4>>2];c[e+8>>2]=c[f+32+8>>2];c[e+12>>2]=c[f+32+12>>2];e=i+164|0;c[e>>2]=c[f+48>>2];c[e+4>>2]=c[f+48+4>>2];c[e+8>>2]=c[f+48+8>>2];c[e+12>>2]=c[f+48+12>>2];a[i+180>>0]=h&1;g[i+184>>2]=1.0;g[i+188>>2]=-1.0;g[i+192>>2]=0.0;g[i+196>>2]=0.0;g[i+200>>2]=1.0;g[i+204>>2]=.699999988079071;g[i+208>>2]=0.0;g[i+212>>2]=0.0;g[i+216>>2]=1.0;g[i+220>>2]=.699999988079071;g[i+224>>2]=0.0;g[i+228>>2]=0.0;g[i+264>>2]=1.0;g[i+268>>2]=.699999988079071;g[i+272>>2]=1.0;g[i+276>>2]=0.0;g[i+280>>2]=1.0;g[i+284>>2]=.699999988079071;g[i+288>>2]=1.0;g[i+292>>2]=0.0;g[i+232>>2]=1.0;g[i+236>>2]=.699999988079071;g[i+240>>2]=1.0;g[i+244>>2]=0.0;g[i+248>>2]=1.0;g[i+252>>2]=.699999988079071;g[i+256>>2]=1.0;g[i+260>>2]=0.0;a[i+1096>>0]=0;h=i+1100|0;g[i+1116>>2]=0.0;g[i+1120>>2]=0.0;g[i+1124>>2]=0.0;c[i+300>>2]=0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;a[h+12>>0]=0;a[i+49>>0]=1;kd(i,(c[j>>2]|0)+4|0,(c[b>>2]|0)+4|0);return i|0}function uf(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c[6165]=(c[6165]|0)+1;g=c[d+24>>2]|0;if(!g){g=c[e+4>>2]|0;if(!((b[f+6>>1]&(g&65535))<<16>>16)){d=0;return d|0}if(!((b[f+4>>1]&(g>>>16&65535))<<16>>16)){d=0;return d|0}}else if(!(Ob[c[(c[g>>2]|0)+8>>2]&63](g,e,f)|0)){d=0;return d|0}l=(c[e+12>>2]|0)>(c[f+12>>2]|0);m=l?f:e;h=c[m+12>>2]|0;l=l?e:f;e=c[l+12>>2]|0;j=((e<<16|h)+~((e<<16|h)<<15)>>10^(e<<16|h)+~((e<<16|h)<<15))*9|0;j=(j>>6^j)+~((j>>6^j)<<11)>>16^(j>>6^j)+~((j>>6^j)<<11);k=c[d+12>>2]|0;g=c[(c[d+44>>2]|0)+((j&k+-1)<<2)>>2]|0;a:do if((g|0)!=-1){f=c[d+16>>2]|0;while(1){if((c[(c[f+(g<<4)>>2]|0)+12>>2]|0)==(h|0)?(c[(c[f+(g<<4)+4>>2]|0)+12>>2]|0)==(e|0):0)break;g=c[(c[d+64>>2]|0)+(g<<2)>>2]|0;if((g|0)==-1)break a}g=f+(g<<4)|0;if(g|0){d=g;return d|0}}while(0);i=c[d+8>>2]|0;if((i|0)==(k|0)){g=k|0?k<<1:1;if((k|0)<(g|0)){if(!g){e=0;f=k}else{c[6435]=(c[6435]|0)+1;e=yc((g<<4|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[d+8>>2]|0}if((f|0)>0){h=0;do{n=c[d+16>>2]|0;c[e+(h<<4)>>2]=c[n+(h<<4)>>2];c[e+(h<<4)+4>>2]=c[n+(h<<4)+4>>2];c[e+(h<<4)+8>>2]=c[n+(h<<4)+8>>2];c[e+(h<<4)+12>>2]=c[n+(h<<4)+12>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[d+16>>2]|0;if(h){if(a[d+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[d+8>>2]|0}c[d+16>>2]=0}a[d+20>>0]=1;c[d+16>>2]=e;c[d+12>>2]=g}else{f=k;g=k}}else{f=i;g=k}c[d+8>>2]=f+1;f=c[d+16>>2]|0;e=c[d+72>>2]|0;if(e){Ob[c[(c[e>>2]|0)+8>>2]&63](e,m,l)|0;g=c[d+12>>2]|0}if((k|0)<(g|0)){Hf(d);g=(c[d+12>>2]|0)+-1&j}else g=j&k+-1;n=(c[m+12>>2]|0)<(c[l+12>>2]|0);c[f+(i<<4)>>2]=n?m:l;c[f+(i<<4)+4>>2]=n?l:m;c[f+(i<<4)+8>>2]=0;c[f+(i<<4)+8+4>>2]=0;n=(c[d+44>>2]|0)+(g<<2)|0;c[(c[d+64>>2]|0)+(i<<2)>>2]=c[n>>2];c[n>>2]=i;n=f+(i<<4)|0;return n|0}function vf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;u=+g[b>>2];t=+g[b+4>>2];s=+g[b+8>>2];r=1.0/+O(+(u*u+t*t+s*s));y=+g[d>>2];x=+g[d+4>>2];w=+g[d+8>>2];v=1.0/+O(+(y*y+x*x+w*w));B=s*r*x*v-t*r*w*v;A=u*r*w*v-s*r*y*v;z=t*r*y*v-u*r*x*v;d=c[a+28>>2]|0;e=+g[d+4>>2];h=+g[d+20>>2];j=+g[d+36>>2];f=+g[d+8>>2];i=+g[d+24>>2];k=+g[d+40>>2];l=+g[d+12>>2];n=+g[d+28>>2];p=+g[d+44>>2];m=-+g[d+52>>2];o=-+g[d+56>>2];q=-+g[d+60>>2];g[a+48>>2]=z*j+(e*B+h*A);g[a+52>>2]=e*y*v+x*v*h+w*v*j;g[a+56>>2]=u*r*e+t*r*h+s*r*j;g[a+60>>2]=0.0;g[a+64>>2]=B*f+A*i+z*k;g[a+68>>2]=y*v*f+x*v*i+w*v*k;g[a+72>>2]=u*r*f+t*r*i+s*r*k;g[a+76>>2]=0.0;g[a+80>>2]=B*l+A*n+z*p;g[a+84>>2]=y*v*l+x*v*n+w*v*p;g[a+88>>2]=u*r*l+t*r*n+s*r*p;g[a+92>>2]=0.0;g[a+96>>2]=e*0.0+h*0.0+j*0.0+(e*m+h*o+j*q);g[a+100>>2]=f*0.0+i*0.0+k*0.0+(f*m+i*o+k*q);g[a+104>>2]=l*0.0+n*0.0+p*0.0+(l*m+n*o+p*q);g[a+108>>2]=0.0;d=c[a+32>>2]|0;q=+g[d+4>>2];p=+g[d+20>>2];o=+g[d+36>>2];n=+g[d+8>>2];m=+g[d+24>>2];l=+g[d+40>>2];k=+g[d+12>>2];i=+g[d+28>>2];f=+g[d+44>>2];j=-+g[d+52>>2];h=-+g[d+56>>2];e=-+g[d+60>>2];g[a+112>>2]=B*q+A*p+z*o;g[a+116>>2]=y*v*q+x*v*p+w*v*o;g[a+120>>2]=u*r*q+t*r*p+s*r*o;g[a+124>>2]=0.0;g[a+128>>2]=B*n+A*m+z*l;g[a+132>>2]=y*v*n+x*v*m+w*v*l;g[a+136>>2]=u*r*n+t*r*m+s*r*l;g[a+140>>2]=0.0;g[a+144>>2]=B*k+A*i+z*f;g[a+148>>2]=y*v*k+x*v*i+w*v*f;g[a+152>>2]=u*r*k+t*r*i+s*r*f;g[a+156>>2]=0.0;g[a+160>>2]=q*0.0+p*0.0+o*0.0+(q*j+p*h+o*e);g[a+164>>2]=n*0.0+m*0.0+l*0.0+(n*j+m*h+l*e);g[a+168>>2]=k*0.0+i*0.0+f*0.0+(k*j+i*h+f*e);g[a+172>>2]=0.0;sd(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0);return}function wf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0.0;n=i;i=i+16|0;c[6138]=(c[6138]|0)+1;if(!(c[b+4>>2]&2))f=4972;else{f=c[d+192>>2]|0;o=+cc[c[(c[f>>2]|0)+20>>2]&1](f,.019999999552965164);g[n+4>>2]=o;f=c[e+192>>2]|0;k=+cc[c[(c[f>>2]|0)+20>>2]&1](f,.019999999552965164);g[n>>2]=k;f=o<k?n+4|0:n}j=c[f>>2]|0;o=+g[d+184>>2];k=+g[e+184>>2];k=o<k?o:k;f=c[b+68>>2]|0;h=c[f+8>>2]|0;if(!h){if(c[b+4>>2]&4|0){b=0;i=n;return b|0}c[6435]=(c[6435]|0)+1;f=yc(791)|0;if(!f)l=0;else{c[(f+4+15&-16)+-4>>2]=f;l=f+4+15&-16}}else{l=c[f+12>>2]|0;c[f+12>>2]=c[l>>2];c[f+8>>2]=h+-1}c[l>>2]=1025;c[l+116>>2]=0;a[l+120>>0]=0;f=l+124|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[l+300>>2]=0;a[l+304>>0]=0;f=l+308|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[l+484>>2]=0;a[l+488>>0]=0;f=l+492|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[l+668>>2]=0;a[l+672>>0]=0;f=l+676|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[l+740>>2]=d;c[l+744>>2]=e;c[l+748>>2]=0;c[l+752>>2]=j;g[l+756>>2]=k;d=l;f=c[b+12>>2]|0;c[l+768>>2]=f;if((f|0)==(c[b+16>>2]|0)?(m=f|0?f<<1:1,(f|0)<(m|0)):0){if(!m)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((m<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[b+12>>2]|0}if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[b+20>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[b+20>>2]|0;if(h){if(a[b+24>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[b+12>>2]|0}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=j;c[b+16>>2]=m}c[(c[b+20>>2]|0)+(f<<2)>>2]=d;c[b+12>>2]=f+1;b=l;i=n;return b|0}function xf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0,x=0;w=i;i=i+32|0;s=c[a+12>>2]|0;t=+g[s+(((e+d|0)/2|0)*24|0)>>2];u=+g[s+(((e+d|0)/2|0)*24|0)+4>>2];v=+g[s+(((e+d|0)/2|0)*24|0)+8>>2];q=+g[s+(((e+d|0)/2|0)*24|0)+16>>2];r=c[s+(((e+d|0)/2|0)*24|0)+20>>2]|0;f=d;h=e;while(1){m=+g[b>>2];n=+g[b+4>>2];o=+g[b+8>>2];p=(t-m)*(t-m)+(u-n)*(u-n)+(v-o)*(v-o);a:while(1){j=+g[s+(f*24|0)+16>>2];do if(j!=q){if(!(j<q))break a}else{j=+g[s+(f*24|0)>>2]-m;k=+g[s+(f*24|0)+4>>2]-n;l=+g[s+(f*24|0)+8>>2]-o;if(j*j+k*k+l*l!=p)if(j*j+k*k+l*l<p)break;else break a;else if((c[s+(f*24|0)+20>>2]|0)<(r|0))break;else break a}while(0);f=f+1|0}b:while(1){j=+g[s+(h*24|0)+16>>2];do if(q!=j){if(!(q<j))break b}else{j=+g[s+(h*24|0)>>2]-m;k=+g[s+(h*24|0)+4>>2]-n;l=+g[s+(h*24|0)+8>>2]-o;if(p!=j*j+k*k+l*l)if(p<j*j+k*k+l*l)break;else break b;else if((r|0)<(c[s+(h*24|0)+20>>2]|0))break;else break b}while(0);h=h+-1|0}if((f|0)<=(h|0)){x=s+(f*24|0)|0;c[w>>2]=c[x>>2];c[w+4>>2]=c[x+4>>2];c[w+8>>2]=c[x+8>>2];c[w+12>>2]=c[x+12>>2];c[w+16>>2]=c[x+16>>2];c[w+20>>2]=c[x+20>>2];s=s+(h*24|0)|0;c[x>>2]=c[s>>2];c[x+4>>2]=c[s+4>>2];c[x+8>>2]=c[s+8>>2];c[x+12>>2]=c[s+12>>2];c[x+16>>2]=c[s+16>>2];c[x+20>>2]=c[s+20>>2];s=(c[a+12>>2]|0)+(h*24|0)|0;c[s>>2]=c[w>>2];c[s+4>>2]=c[w+4>>2];c[s+8>>2]=c[w+8>>2];c[s+12>>2]=c[w+12>>2];c[s+16>>2]=c[w+16>>2];c[s+20>>2]=c[w+20>>2];f=f+1|0;h=h+-1|0}if((f|0)>(h|0))break;s=c[a+12>>2]|0}if((h|0)>(d|0))xf(a,b,d,h);if((f|0)>=(e|0)){i=w;return}xf(a,b,f,e);i=w;return}function yf(a,b,d){a=a|0;b=+b;d=+d;var e=0.0,f=0,h=0,i=0,j=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0,z=0;z=c[a+832>>2]|0;if((z|0)<=0)return;n=c[a+840>>2]|0;y=0;do{u=c[n+(y*56|0)>>2]|0;x=c[n+(y*56|0)+4>>2]|0;a=c[x+8>>2]|0;f=c[x+12>>2]|0;h=c[x+16>>2]|0;i=n+(y*56|0)+8|0;v=+g[i>>2];j=n+(y*56|0)+12|0;t=+g[j>>2];l=n+(y*56|0)+16|0;s=+g[l>>2];b=+g[a+8>>2]*v+ +g[f+8>>2]*t+ +g[h+8>>2]*s;d=+g[a+12>>2]*v+ +g[f+12>>2]*t+ +g[h+12>>2]*s;e=+g[a+16>>2]*v+ +g[f+16>>2]*t+ +g[h+16>>2]*s;m=+g[u+8>>2];o=+g[u+12>>2];p=+g[u+16>>2];q=m-+g[u+24>>2]-(b-(v*+g[a+24>>2]+t*+g[f+24>>2]+s*+g[h+24>>2]));r=o-+g[u+28>>2]-(d-(v*+g[a+28>>2]+t*+g[f+28>>2]+s*+g[h+28>>2]));s=p-+g[u+32>>2]-(e-(v*+g[a+32>>2]+t*+g[f+32>>2]+s*+g[h+32>>2]));t=+g[n+(y*56|0)+24>>2];v=+g[n+(y*56|0)+28>>2];w=+g[n+(y*56|0)+32>>2];if(q*t+r*v+s*w<0.0){e=+g[n+(y*56|0)+40>>2]-(m*t+o*v+p*w-(b*t+d*v+e*w));a=(g[k>>2]=t*e+0.0,c[k>>2]|0);f=(g[k>>2]=v*e+0.0,c[k>>2]|0);h=(g[k>>2]=w*e+0.0,c[k>>2]|0)}else{a=0;f=0;h=0}b=+g[n+(y*56|0)+44>>2];d=(c[k>>2]=a,+g[k>>2])-b*(q-t*(q*t+r*v+s*w));e=(c[k>>2]=f,+g[k>>2])-b*(r-v*(q*t+r*v+s*w));v=(c[k>>2]=h,+g[k>>2])-b*(s-w*(q*t+r*v+s*w));w=+g[n+(y*56|0)+48>>2];g[u+8>>2]=m+w*d;g[u+12>>2]=o+w*e;g[u+16>>2]=w*v+p;h=c[x+8>>2]|0;u=n+(y*56|0)+52|0;w=+g[u>>2]*+g[i>>2];g[h+8>>2]=+g[h+8>>2]-d*w;g[h+12>>2]=+g[h+12>>2]-e*w;g[h+16>>2]=+g[h+16>>2]-v*w;i=c[x+12>>2]|0;w=+g[u>>2]*+g[j>>2];g[i+8>>2]=+g[i+8>>2]-d*w;g[i+12>>2]=+g[i+12>>2]-e*w;g[i+16>>2]=+g[i+16>>2]-v*w;x=c[x+16>>2]|0;w=+g[u>>2]*+g[l>>2];g[x+8>>2]=+g[x+8>>2]-d*w;g[x+12>>2]=+g[x+12>>2]-e*w;g[x+16>>2]=+g[x+16>>2]-v*w;y=y+1|0}while((y|0)!=(z|0));return}function zf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;c[6164]=(c[6164]|0)+1;j=(c[b+12>>2]|0)>(c[d+12>>2]|0);l=j?d:b;h=c[l+12>>2]|0;j=j?b:d;f=c[j+12>>2]|0;i=((f<<16|h)+~((f<<16|h)<<15)>>10^(f<<16|h)+~((f<<16|h)<<15))*9|0;i=((i>>6^i)+~((i>>6^i)<<11)>>16^(i>>6^i)+~((i>>6^i)<<11))&(c[a+12>>2]|0)+-1;b=c[(c[a+44>>2]|0)+(i<<2)>>2]|0;if((b|0)==-1){o=0;return o|0}g=c[a+16>>2]|0;d=b;while(1){if((c[(c[g+(d<<4)>>2]|0)+12>>2]|0)==(h|0)?(c[(c[g+(d<<4)+4>>2]|0)+12>>2]|0)==(f|0):0)break;b=c[(c[a+64>>2]|0)+(d<<2)>>2]|0;if((b|0)==-1){b=0;o=24;break}else d=b}if((o|0)==24)return b|0;b=g+(d<<4)|0;if(!b){o=0;return o|0}ic[c[(c[a>>2]|0)+32>>2]&127](a,b,e);n=c[g+(d<<4)+12>>2]|0;m=b-(c[a+16>>2]|0)>>4;h=(c[a+44>>2]|0)+(i<<2)|0;b=c[h>>2]|0;d=c[a+64>>2]|0;if((b|0)!=(m|0)){g=b;while(1){f=d+(g<<2)|0;b=c[f>>2]|0;if((b|0)==(m|0))break;else g=b}b=c[d+(m<<2)>>2]|0;if((g|0)==-1)o=12;else c[f>>2]=b}else{b=c[d+(m<<2)>>2]|0;o=12}if((o|0)==12)c[h>>2]=b;k=(c[a+8>>2]|0)+-1|0;b=c[a+72>>2]|0;if(b|0)Ib[c[(c[b>>2]|0)+12>>2]&31](b,l,j,e)|0;if((k|0)==(m|0)){c[a+8>>2]=(c[a+8>>2]|0)+-1;o=n;return o|0}j=c[a+16>>2]|0;h=c[(c[j+(k<<4)+4>>2]|0)+12>>2]<<16|c[(c[j+(k<<4)>>2]|0)+12>>2];h=(h+~(h<<15)>>10^h+~(h<<15))*9|0;h=((h>>6^h)+~((h>>6^h)<<11)>>16^(h>>6^h)+~((h>>6^h)<<11))&(c[a+12>>2]|0)+-1;i=(c[a+44>>2]|0)+(h<<2)|0;b=c[i>>2]|0;d=c[a+64>>2]|0;if((b|0)!=(k|0)){g=b;while(1){f=d+(g<<2)|0;b=c[f>>2]|0;if((b|0)==(k|0))break;else g=b}b=c[d+(k<<2)>>2]|0;if((g|0)==-1)o=22;else c[f>>2]=b}else{b=c[d+(k<<2)>>2]|0;o=22}if((o|0)==22)c[i>>2]=b;c[j+(m<<4)>>2]=c[j+(k<<4)>>2];c[j+(m<<4)+4>>2]=c[j+(k<<4)+4>>2];c[j+(m<<4)+8>>2]=c[j+(k<<4)+8>>2];c[j+(m<<4)+12>>2]=c[j+(k<<4)+12>>2];o=(c[a+44>>2]|0)+(h<<2)|0;c[(c[a+64>>2]|0)+(m<<2)>>2]=c[o>>2];c[o>>2]=m;c[a+8>>2]=(c[a+8>>2]|0)+-1;o=n;return o|0}function Af(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;z=(a[b+28>>0]|0)!=0;C=z?e:d;z=z?d:e;A=c[b+12>>2]|0;if((A|0)<=0){w=1.0;return +w}y=(c[C+192>>2]|0)+24|0;j=+g[C+4>>2];t=+g[C+8>>2];u=+g[C+12>>2];v=c[C+16>>2]|0;w=+g[C+20>>2];k=+g[C+24>>2];l=+g[C+28>>2];d=c[C+32>>2]|0;m=+g[C+36>>2];n=+g[C+40>>2];o=+g[C+44>>2];e=c[C+48>>2]|0;p=+g[C+52>>2];q=+g[C+56>>2];r=+g[C+60>>2];s=c[C+64>>2]|0;x=c[C+260>>2]|0;i=1.0;B=0;do{E=c[y>>2]|0;P=+g[E+(B*80|0)>>2];O=+g[E+(B*80|0)+16>>2];N=+g[E+(B*80|0)+32>>2];M=+g[E+(B*80|0)+4>>2];L=+g[E+(B*80|0)+20>>2];K=+g[E+(B*80|0)+36>>2];J=+g[E+(B*80|0)+8>>2];I=+g[E+(B*80|0)+24>>2];H=+g[E+(B*80|0)+40>>2];G=+g[E+(B*80|0)+48>>2];F=+g[E+(B*80|0)+52>>2];D=+g[E+(B*80|0)+56>>2];c[C+260>>2]=x+1;g[C+4>>2]=j*P+t*O+u*N;g[C+8>>2]=j*M+t*L+u*K;g[C+12>>2]=j*J+t*I+u*H;g[C+16>>2]=0.0;g[C+20>>2]=w*P+k*O+l*N;g[C+24>>2]=w*M+k*L+l*K;g[C+28>>2]=w*J+k*I+l*H;g[C+32>>2]=0.0;g[C+36>>2]=m*P+n*O+o*N;g[C+40>>2]=m*M+n*L+o*K;g[C+44>>2]=m*J+n*I+o*H;g[C+48>>2]=0.0;g[C+52>>2]=p+(j*G+t*F+u*D);g[C+56>>2]=q+(w*G+k*F+l*D);g[C+60>>2]=r+(m*G+n*F+o*D);g[C+64>>2]=0.0;E=c[(c[b+20>>2]|0)+(B<<2)>>2]|0;D=+Mb[c[(c[E>>2]|0)+12>>2]&15](E,C,z,f,h);i=D<i?D:i;x=(c[C+260>>2]|0)+1|0;c[C+260>>2]=x;g[C+4>>2]=j;g[C+8>>2]=t;g[C+12>>2]=u;c[C+16>>2]=v;g[C+20>>2]=w;g[C+24>>2]=k;g[C+28>>2]=l;c[C+32>>2]=d;g[C+36>>2]=m;g[C+40>>2]=n;g[C+44>>2]=o;c[C+48>>2]=e;g[C+52>>2]=p;g[C+56>>2]=q;g[C+60>>2]=r;c[C+64>>2]=s;B=B+1|0}while((B|0)!=(A|0));return +i}function Bf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=i;i=i+32|0;a[p+16>>0]=1;c[p+12>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;e=c[b+8>>2]|0;if((e|0)>0){g=0;h=0;f=0;n=0;while(1){l=c[b+16>>2]|0;m=l+(n<<4)|0;if((g|0)==(f|0)){k=f|0?f<<1:1;if((f|0)<(k|0)){if(k){c[6435]=(c[6435]|0)+1;e=yc((k<<4|3)+16|0)|0;if(!e){j=0;f=g}else{c[(e+4+15&-16)+-4>>2]=e;j=e+4+15&-16;f=g}}else j=0;if((f|0)>0){e=0;do{h=c[p+12>>2]|0;c[j+(e<<4)>>2]=c[h+(e<<4)>>2];c[j+(e<<4)+4>>2]=c[h+(e<<4)+4>>2];c[j+(e<<4)+8>>2]=c[h+(e<<4)+8>>2];c[j+(e<<4)+12>>2]=c[h+(e<<4)+12>>2];e=e+1|0}while((e|0)!=(f|0))}e=c[p+12>>2]|0;if(!e)g=f;else{c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);c[p+12>>2]=0}a[p+16>>0]=1;c[p+12>>2]=j;c[p+8>>2]=k;e=c[b+8>>2]|0;h=g}else{k=f;j=h;h=f}}else{k=f;j=h;h=g}c[j+(h<<4)>>2]=c[m>>2];c[j+(h<<4)+4>>2]=c[l+(n<<4)+4>>2];c[j+(h<<4)+8>>2]=c[l+(n<<4)+8>>2];c[j+(h<<4)+12>>2]=c[l+(n<<4)+12>>2];g=h+1|0;n=n+1|0;if((n|0)>=(e|0))break;else{h=j;f=k}}c[p+4>>2]=g;if((h|0)>-1){e=c[p+12>>2]|0;f=0;while(1){Ib[c[(c[b>>2]|0)+12>>2]&31](b,c[e+(f<<4)>>2]|0,c[e+(f<<4)+4>>2]|0,d)|0;if((f|0)<(h|0))f=f+1|0;else break}}}else g=0;if((c[b+56>>2]|0)>0){e=c[b+64>>2]|0;f=0;do{c[e+(f<<2)>>2]=-1;f=f+1|0}while((f|0)<(c[b+56>>2]|0))}if((g|0)<=1)if((g|0)>0)o=24;else e=c[p+12>>2]|0;else{Vd(p,0,g+-1|0);o=24}if((o|0)==24){e=c[p+12>>2]|0;f=0;do{Ob[c[(c[b>>2]|0)+8>>2]&63](b,c[e+(f<<4)>>2]|0,c[e+(f<<4)+4>>2]|0)|0;f=f+1|0}while((f|0)<(g|0))}if(!e){i=p;return}c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);c[p+12>>2]=0;i=p;return}function Cf(a,b,d){a=a|0;b=+b;d=+d;var e=0,f=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0;z=i;i=i+16|0;q=+g[a+452>>2];x=c[a+192>>2]|0;v=+Sb[c[(c[x>>2]|0)+48>>2]&15](x);x=c[a+812>>2]|0;if((x|0)<=0){i=z;return}y=0;do{r=c[a+820>>2]|0;p=c[r+(y*104|0)>>2]|0;p=(c[p+236>>2]&2|0)==0?0:p;if(p|0){u=+g[p+332>>2];n=+g[r+(y*104|0)+84>>2];m=+g[p+336>>2];o=+g[r+(y*104|0)+80>>2];w=+g[r+(y*104|0)+76>>2];t=+g[p+328>>2];e=(g[k>>2]=q*(u*n-m*o+ +g[p+312>>2]),c[k>>2]|0);f=(g[k>>2]=q*(+g[p+316>>2]+(m*w-n*t)),c[k>>2]|0);h=(g[k>>2]=q*(o*t-u*w+ +g[p+320>>2]),c[k>>2]|0)}else{e=0;f=0;h=0}s=c[r+(y*104|0)+24>>2]|0;t=+g[s+8>>2];u=+g[s+12>>2];w=+g[s+16>>2];o=t-+g[s+24>>2]-(c[k>>2]=e,+g[k>>2]);n=u-+g[s+28>>2]-(c[k>>2]=f,+g[k>>2]);d=w-+g[s+32>>2]-(c[k>>2]=h,+g[k>>2]);j=+g[r+(y*104|0)+4>>2];l=+g[r+(y*104|0)+8>>2];m=+g[r+(y*104|0)+12>>2];if(o*j+n*l+d*m<=1.1920928955078125e-07?(C=t*j+u*l+w*m+ +g[r+(y*104|0)+20>>2],D=+g[r+(y*104|0)+96>>2],C=(C<v?C:v)*+g[r+(y*104|0)+100>>2],B=(o-(o-j*(o*j+n*l+d*m))*D+j*C)*b,A=(n-(n-l*(o*j+n*l+d*m))*D+C*l)*b,o=(d-(d-m*(o*j+n*l+d*m))*D+C*m)*b,l=+g[r+(y*104|0)+28>>2]*B+ +g[r+(y*104|0)+32>>2]*A+ +g[r+(y*104|0)+36>>2]*o,m=B*+g[r+(y*104|0)+44>>2]+A*+g[r+(y*104|0)+48>>2]+o*+g[r+(y*104|0)+52>>2],o=B*+g[r+(y*104|0)+60>>2]+A*+g[r+(y*104|0)+64>>2]+o*+g[r+(y*104|0)+68>>2],g[z>>2]=l,g[z+4>>2]=m,g[z+8>>2]=o,g[z+12>>2]=0.0,n=+g[r+(y*104|0)+92>>2],g[s+8>>2]=t-l*n,g[s+12>>2]=u-n*m,g[s+16>>2]=w-n*o,p|0):0)gj(p,z,r+(y*104|0)+76|0);y=y+1|0}while((y|0)!=(x|0));i=z;return}
	function Sc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0;s=i;i=i+240|0;n=c[b+48>>2]|0;k=c[b+52>>2]|0;if((k|0?(h=c[k+20>>2]|0,h|0):0)?(Eb[c[(c[h>>2]|0)+48>>2]&127](h)|0)&1|0:0){c[s+144>>2]=1065353216;c[s+144+4>>2]=1065353216;c[s+144+8>>2]=0;g[s+144+12>>2]=0.0;l=c[b+8>>2]|0;r=c[(c[b+52>>2]|0)+20>>2]|0;q=c[(c[r>>2]|0)+8>>2]|0;t=+g[d>>2];u=+g[d+4>>2];v=+g[d+8>>2];w=t*+g[l+20>>2]+u*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];x=t*+g[l+36>>2]+u*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s+128>>2]=t*+g[l+4>>2]+u*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+128+4>>2]=w;g[s+128+8>>2]=x;g[s+128+12>>2]=0.0;x=+g[d+16>>2];w=+g[d+20>>2];v=+g[d+24>>2];u=x*+g[l+20>>2]+w*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];t=x*+g[l+36>>2]+w*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s+88>>2]=x*+g[l+4>>2]+w*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+88+4>>2]=u;g[s+88+8>>2]=t;g[s+88+12>>2]=0.0;mc[q&127](r,s+128|0,s+88|0,s+144|0);r=c[(c[b+52>>2]|0)+20>>2]|0;q=c[(c[r>>2]|0)+8>>2]|0;t=+g[d+16>>2];u=+g[d+20>>2];v=+g[d+24>>2];w=t*+g[l+20>>2]+u*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];x=t*+g[l+36>>2]+u*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s+72>>2]=t*+g[l+4>>2]+u*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+72+4>>2]=w;g[s+72+8>>2]=x;g[s+72+12>>2]=0.0;x=+g[d+32>>2];w=+g[d+36>>2];v=+g[d+40>>2];u=x*+g[l+20>>2]+w*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];t=x*+g[l+36>>2]+w*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s+56>>2]=x*+g[l+4>>2]+w*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+56+4>>2]=u;g[s+56+8>>2]=t;g[s+56+12>>2]=0.0;mc[q&127](r,s+72|0,s+56|0,s+144|0);r=c[(c[b+52>>2]|0)+20>>2]|0;q=c[(c[r>>2]|0)+8>>2]|0;t=+g[d+32>>2];u=+g[d+36>>2];v=+g[d+40>>2];w=t*+g[l+20>>2]+u*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];x=t*+g[l+36>>2]+u*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s+16>>2]=t*+g[l+4>>2]+u*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+16+4>>2]=w;g[s+16+8>>2]=x;g[s+16+12>>2]=0.0;x=+g[d>>2];w=+g[d+4>>2];v=+g[d+8>>2];u=x*+g[l+20>>2]+w*+g[l+24>>2]+v*+g[l+28>>2]+ +g[l+56>>2];t=x*+g[l+36>>2]+w*+g[l+40>>2]+v*+g[l+44>>2]+ +g[l+60>>2];g[s>>2]=x*+g[l+4>>2]+w*+g[l+8>>2]+v*+g[l+12>>2]+ +g[l+52>>2];g[s+4>>2]=u;g[s+8>>2]=t;g[s+12>>2]=0.0;mc[q&127](r,s+16|0,s,s+144|0)}h=((e<<21|f)+~(f<<15)>>10^(e<<21|f)+~(f<<15))*9|0;h=(c[b+108>>2]|0)+-1&((h>>6^h)+~((h>>6^h)<<11)>>16^(h>>6^h)+~((h>>6^h)<<11));a:do if(h>>>0<(c[b+64>>2]|0)>>>0?(m=c[(c[b+72>>2]|0)+(h<<2)>>2]|0,(m|0)!=-1):0){l=c[b+132>>2]|0;k=m;while(1){if((e<<21|f|0)==(c[l+(k<<2)>>2]|0))break;h=c[(c[b+92>>2]|0)+(k<<2)>>2]|0;if((h|0)==-1)break a;else k=h}h=c[b+112>>2]|0;if(h+(k<<3)|0){q=c[h+(k<<3)+4>>2]|0;r=c[b+8>>2]|0;c[q+8>>2]=c[(c[r+192>>2]|0)+8>>2];p=c[b+4>>2]|0;o=c[p+192>>2]|0;c[s+144>>2]=0;c[s+144+4>>2]=o;c[s+144+8>>2]=p;c[s+144+12>>2]=p+4;c[s+144+16>>2]=-1;c[s+144+20>>2]=-1;c[s+104>>2]=0;c[s+104+4>>2]=q;c[s+104+8>>2]=r;c[s+104+12>>2]=r+4;c[s+104+16>>2]=e;c[s+104+20>>2]=f;r=Ib[c[(c[n>>2]|0)+8>>2]&31](n,s+144|0,s+104|0,0)|0;yb[c[(c[r>>2]|0)+8>>2]&31](r,s+144|0,s+104|0,c[b+52>>2]|0,c[b+44>>2]|0);Ab[c[c[r>>2]>>2]&255](r);Cb[c[(c[n>>2]|0)+60>>2]&127](n,r);i=s;return}}while(0);C=+g[d+16>>2];F=+g[d>>2];B=+g[d+20>>2];E=+g[d+4>>2];A=+g[d+24>>2];D=+g[d+8>>2];z=+g[d+32>>2];t=+g[d+36>>2];v=+g[d+40>>2];y=(B-E)*(v-D)-(A-D)*(t-E);u=(A-D)*(z-F)-(C-F)*(v-D);x=(C-F)*(t-E)-(B-E)*(z-F);w=1.0/+O(+(x*x+(y*y+u*u)));g[s+144>>2]=F+w*y*.05999999865889549;g[s+144+4>>2]=E+w*u*.05999999865889549;g[s+144+8>>2]=w*x*.05999999865889549+D;g[s+144+12>>2]=0.0;g[s+144+16>>2]=w*y*.05999999865889549+C;g[s+144+20>>2]=w*u*.05999999865889549+B;g[s+144+24>>2]=w*x*.05999999865889549+A;g[s+144+28>>2]=0.0;g[s+144+32>>2]=w*y*.05999999865889549+z;g[s+144+36>>2]=w*u*.05999999865889549+t;g[s+144+40>>2]=w*x*.05999999865889549+v;g[s+144+44>>2]=0.0;g[s+144+48>>2]=F-w*y*.05999999865889549;g[s+144+52>>2]=E-w*u*.05999999865889549;g[s+144+56>>2]=D-w*x*.05999999865889549;g[s+144+60>>2]=0.0;g[s+144+64>>2]=C-w*y*.05999999865889549;g[s+144+68>>2]=B-w*u*.05999999865889549;g[s+144+72>>2]=A-w*x*.05999999865889549;g[s+144+76>>2]=0.0;g[s+144+80>>2]=z-w*y*.05999999865889549;g[s+144+84>>2]=t-w*u*.05999999865889549;g[s+144+88>>2]=v-w*x*.05999999865889549;g[s+144+92>>2]=0.0;c[6435]=(c[6435]|0)+1;h=yc(131)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}kg(h,s+144|0,6,16);r=c[b+8>>2]|0;c[h+8>>2]=c[(c[r+192>>2]|0)+8>>2];q=c[b+4>>2]|0;d=c[q+192>>2]|0;c[s+104>>2]=0;c[s+104+4>>2]=d;c[s+104+8>>2]=q;c[s+104+12>>2]=q+4;c[s+104+16>>2]=-1;c[s+104+20>>2]=-1;c[s+32>>2]=0;c[s+32+4>>2]=h;c[s+32+8>>2]=r;c[s+32+12>>2]=r+4;c[s+32+16>>2]=e;c[s+32+20>>2]=f;r=Ib[c[(c[n>>2]|0)+8>>2]&31](n,s+104|0,s+32|0,0)|0;yb[c[(c[r>>2]|0)+8>>2]&31](r,s+104|0,s+32|0,c[b+52>>2]|0,c[b+44>>2]|0);Ab[c[c[r>>2]>>2]&255](r);Cb[c[(c[n>>2]|0)+60>>2]&127](n,r);r=((e<<21|f)+~(f<<15)>>10^(e<<21|f)+~(f<<15))*9|0;r=(r>>6^r)+~((r>>6^r)<<11)>>16^(r>>6^r)+~((r>>6^r)<<11);n=c[b+108>>2]|0;b:do if((r&n+-1)>>>0<(c[b+64>>2]|0)>>>0?(j=c[(c[b+72>>2]|0)+((r&n+-1)<<2)>>2]|0,(j|0)!=-1):0){k=c[b+132>>2]|0;while(1){if((e<<21|f|0)==(c[k+(j<<2)>>2]|0))break;j=c[(c[b+92>>2]|0)+(j<<2)>>2]|0;if((j|0)==-1){o=20;break b}}b=c[b+112>>2]|0;c[b+(j<<3)>>2]=e<<21|f;c[b+(j<<3)+4>>2]=h}else o=20;while(0);if((o|0)==20){q=c[b+104>>2]|0;if((q|0)==(n|0)){m=n|0?n<<1:1;if((n|0)<(m|0)){if(!m){j=0;k=n}else{c[6435]=(c[6435]|0)+1;j=yc((m<<3|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}k=c[b+104>>2]|0}if((k|0)>0){l=0;do{H=(c[b+112>>2]|0)+(l<<3)|0;G=c[H+4>>2]|0;d=j+(l<<3)|0;c[d>>2]=c[H>>2];c[d+4>>2]=G;l=l+1|0}while((l|0)!=(k|0))}k=c[b+112>>2]|0;if(k|0){if(a[b+116>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[b+112>>2]=0}a[b+116>>0]=1;c[b+112>>2]=j;c[b+108>>2]=m;j=c[b+104>>2]|0}else j=n}else j=q;H=c[b+112>>2]|0;c[H+(j<<3)>>2]=e<<21|f;c[H+(j<<3)+4>>2]=h;c[b+104>>2]=(c[b+104>>2]|0)+1;h=c[b+124>>2]|0;if((h|0)==(c[b+128>>2]|0)?(p=h|0?h<<1:1,(h|0)<(p|0)):0){if(!p)l=0;else{c[6435]=(c[6435]|0)+1;h=yc((p<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}l=h;h=c[b+124>>2]|0}k=c[b+132>>2]|0;if((h|0)<=0)if(!k)h=b+136|0;else o=43;else{j=0;do{c[l+(j<<2)>>2]=c[k+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0));o=43}if((o|0)==43){if(a[b+136>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[b+132>>2]=0;h=b+136|0}a[h>>0]=1;c[b+132>>2]=l;c[b+128>>2]=p;h=c[b+124>>2]|0}c[(c[b+132>>2]|0)+(h<<2)>>2]=e<<21|f;c[b+124>>2]=(c[b+124>>2]|0)+1;d=c[b+108>>2]|0;if((n|0)<(d|0)){n=c[b+64>>2]|0;if((d|0)>(n|0)){if((d|0)>=(n|0)){do if((c[b+68>>2]|0)<(d|0)){if(!d){h=0;j=n}else{c[6435]=(c[6435]|0)+1;h=yc((d<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[b+64>>2]|0}k=c[b+72>>2]|0;if((j|0)<=0){if(!k){a[b+76>>0]=1;c[b+72>>2]=h;c[b+68>>2]=d;break}}else{l=0;do{c[h+(l<<2)>>2]=c[k+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0))}if(a[b+76>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}a[b+76>>0]=1;c[b+72>>2]=h;c[b+68>>2]=d}else h=c[b+72>>2]|0;while(0);Tn(h+(n<<2)|0,0,d-n<<2|0)|0}c[b+64>>2]=d;m=c[b+84>>2]|0;if((d|0)>(m|0)){do if((c[b+88>>2]|0)<(d|0)){if(!d){h=0;j=m}else{c[6435]=(c[6435]|0)+1;h=yc((d<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[b+84>>2]|0}k=c[b+92>>2]|0;if((j|0)<=0){if(!k){a[b+96>>0]=1;c[b+92>>2]=h;c[b+88>>2]=d;break}}else{l=0;do{c[h+(l<<2)>>2]=c[k+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0))}if(a[b+96>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}a[b+96>>0]=1;c[b+92>>2]=h;c[b+88>>2]=d}else h=c[b+92>>2]|0;while(0);Tn(h+(m<<2)|0,0,d-m<<2|0)|0}c[b+84>>2]=d;if((d|0)>0){Tn(c[b+72>>2]|0,-1,d<<2|0)|0;Tn(c[b+92>>2]|0,-1,d<<2|0)|0}if((n|0)>0){h=c[b+132>>2]|0;j=c[b+72>>2]|0;k=c[b+92>>2]|0;l=0;do{H=c[h+(l<<2)>>2]|0;H=(H+~(H<<15)>>10^H+~(H<<15))*9|0;H=j+((((H>>6^H)+~((H>>6^H)<<11)>>16^(H>>6^H)+~((H>>6^H)<<11))&(c[b+108>>2]|0)+-1)<<2)|0;c[k+(l<<2)>>2]=c[H>>2];c[H>>2]=l;l=l+1|0}while((l|0)!=(n|0))}}h=r&(c[b+108>>2]|0)+-1}else h=r&n+-1;H=(c[b+72>>2]|0)+(h<<2)|0;c[(c[b+92>>2]|0)+(q<<2)>>2]=c[H>>2];c[H>>2]=q}i=s;return}function Tc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=i;i=i+16|0;li(12170);k=c[b+212>>2]|0;j=c[b+180>>2]|0;if((j|0)<(k|0)){if((c[b+184>>2]|0)<(k|0)){if(!k){e=0;f=j}else{c[6435]=(c[6435]|0)+1;e=yc((k<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[b+180>>2]|0}if((f|0)>0){h=0;do{c[e+(h<<2)>>2]=c[(c[b+188>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}f=c[b+188>>2]|0;if(f|0){if(a[b+192>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+188>>2]=0}a[b+192>>0]=1;c[b+188>>2]=e;c[b+184>>2]=k;f=b+188|0}else f=b+188|0;e=j;do{c[(c[f>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=(k|0))}else f=b+188|0;c[b+180>>2]=k;e=0;while(1){if((e|0)>=(Eb[c[(c[b>>2]|0)+104>>2]&127](b)|0))break;c[(c[f>>2]|0)+(e<<2)>>2]=c[(c[b+220>>2]|0)+(e<<2)>>2];e=e+1|0}e=c[b+180>>2]|0;if((e|0)>1)bh(b+176|0,0,e+-1|0);if(!(Eb[c[(c[b>>2]|0)+104>>2]&127](b)|0))e=0;else e=c[f>>2]|0;h=c[b+196>>2]|0;t=c[b+180>>2]|0;u=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;c[h+4>>2]=d;c[h+12>>2]=e;c[h+16>>2]=t;c[h+20>>2]=u;e=c[h+32>>2]|0;if((e|0)<0){if((c[h+36>>2]|0)<0){f=c[h+40>>2]|0;if(f|0){if(a[h+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[h+40>>2]=0}a[h+44>>0]=1;c[h+40>>2]=0;c[h+36>>2]=0}do{c[(c[h+40>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[h+32>>2]=0;e=c[h+52>>2]|0;if((e|0)<0){if((c[h+56>>2]|0)<0){f=c[h+60>>2]|0;if(f|0){if(a[h+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[h+60>>2]=0}a[h+64>>0]=1;c[h+60>>2]=0;c[h+56>>2]=0}do{c[(c[h+60>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[h+52>>2]=0;e=c[h+72>>2]|0;if((e|0)<0){if((c[h+76>>2]|0)<0){f=c[h+80>>2]|0;if(f|0){if(a[h+84>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[h+80>>2]=0}a[h+84>>0]=1;c[h+80>>2]=0;c[h+76>>2]=0}do{c[(c[h+80>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[h+72>>2]=0;u=c[b+200>>2]|0;e=c[(c[u>>2]|0)+8>>2]|0;s=c[b+8>>2]|0;t=c[b+24>>2]|0;t=Eb[c[(c[t>>2]|0)+36>>2]&127](t)|0;ic[e&127](u,s,t);t=c[b+204>>2]|0;s=c[b+24>>2]|0;u=c[b+196>>2]|0;li(13882);e=c[t+28>>2]|0;if((e|0)<0){if((c[t+32>>2]|0)<0){f=c[t+36>>2]|0;if(f|0){if(a[t+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[t+36>>2]=0}a[t+40>>0]=1;c[t+36>>2]=0;c[t+32>>2]=0}do{c[(c[t+36>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[t+28>>2]=0;j=c[t+8>>2]|0;if((j|0)>0){k=c[t+16>>2]|0;m=0;do{l=k+(m<<3)|0;e=c[l>>2]|0;if((e|0)==(m|0))e=m;else{f=e;h=l;do{e=k+(f<<3)|0;c[h>>2]=c[e>>2];e=c[e>>2]|0;h=k+(e<<3)|0;f=c[h>>2]|0}while((e|0)!=(f|0))}c[l>>2]=e;m=m+1|0}while((m|0)!=(j|0));if((j|0)>1){yj(t+4|0,0,j+-1|0);j=c[t+8>>2]|0}if((j|0)>0){m=c[t+16>>2]|0;f=0;while(1){n=c[m+(f<<3)>>2]|0;q=f;while(1){p=q+1|0;if((p|0)>=(j|0)){l=0;break}if((c[m+(p<<3)>>2]|0)==(n|0))q=p;else{l=1;break}}a:do if((f|0)<=(q|0)){o=c[b+16>>2]|0;e=1;k=f;while(1){h=c[o+(c[m+(k<<3)+4>>2]<<2)>>2]|0;if((c[h+208>>2]|0)==(n|0)){h=c[h+216>>2]|0;e=(h|0)!=4&(e&(h|0)!=1)}if((k|0)<(q|0))k=k+1|0;else break}if(e){e=m;while(1){e=c[o+(c[e+(f<<3)+4>>2]<<2)>>2]|0;if((c[e+208>>2]|0)==(n|0)?(c[e+216>>2]&-2|0)!=4:0)c[e+216>>2]=2;if((f|0)>=(q|0))break a;e=c[t+16>>2]|0;f=f+1|0}}else{e=m;while(1){e=c[o+(c[e+(f<<3)+4>>2]<<2)>>2]|0;if((c[e+208>>2]|0)==(n|0)?(c[e+216>>2]|0)==2:0){c[e+216>>2]=3;g[e+220>>2]=0.0}if((f|0)>=(q|0))break a;e=c[t+16>>2]|0;f=f+1|0}}}while(0);if(l)f=p;else break}}}j=Eb[c[(c[s>>2]|0)+36>>2]&127](s)|0;if((j|0)>0){l=0;do{k=Zb[c[(c[s>>2]|0)+40>>2]&31](s,l)|0;f=c[k+740>>2]|0;h=c[k+744>>2]|0;if((f|0)!=0?(c[f+216>>2]|0)!=2:0)e=92;else e=90;if(((e|0)==90?(e=0,h|0):0)?(c[h+216>>2]|0)!=2:0)e=92;if((e|0)==92){e=c[f+204>>2]|0;if((e&2|0?((e&4|0)==0?(c[f+216>>2]|0)!=2:0):0)?(c[h+204>>2]&3|0)==0:0){if((c[h+216>>2]&-2|0)!=4)c[h+216>>2]=1;g[h+220>>2]=0.0}q=c[h+204>>2]|0;if(q&2|0?((q&4|e&3|0)==0?(c[h+216>>2]|0)!=2:0):0){if((c[f+216>>2]&-2|0)!=4)c[f+216>>2]=1;g[f+220>>2]=0.0}if(a[t+64>>0]|0?Ob[c[(c[s>>2]|0)+28>>2]&63](s,f,h)|0:0){e=c[t+28>>2]|0;if((e|0)==(c[t+32>>2]|0)?(r=e|0?e<<1:1,(e|0)<(r|0)):0){if(!r)h=0;else{c[6435]=(c[6435]|0)+1;e=yc((r<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=e;e=c[t+28>>2]|0}if((e|0)>0){f=0;do{c[h+(f<<2)>>2]=c[(c[t+36>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(e|0))}f=c[t+36>>2]|0;if(f){if(a[t+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);e=c[t+28>>2]|0}c[t+36>>2]=0}a[t+40>>0]=1;c[t+36>>2]=h;c[t+32>>2]=r}c[(c[t+36>>2]|0)+(e<<2)>>2]=k;c[t+28>>2]=e+1}}l=l+1|0}while((l|0)<(j|0))}e=c[2357]|0;r=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=r;do if(!r){if(c[e+4>>2]|0){tb(v|0,0)|0;r=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[v+4>>2]|0)-(c[r+4>>2]|0)+(((c[v>>2]|0)-(c[r>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2357]|0}c[2357]=c[e+20>>2]}while(0);r=c[t+8>>2]|0;li(13910);if(a[t+64>>0]|0){p=c[t+28>>2]|0;if((p|0)>1)$g(t+24|0,0,p+-1|0);if((r|0)>0){n=1;f=0;q=0;while(1){e=c[t+16>>2]|0;o=c[e+(f<<3)>>2]|0;b:do if((f|0)<(r|0)){k=c[t+48>>2]|0;h=c[t+52>>2]|0;m=1;while(1){l=c[(c[b+16>>2]|0)+(c[e+(f<<3)+4>>2]<<2)>>2]|0;do if((k|0)==(h|0)){k=h|0?h<<1:1;if((h|0)>=(k|0)){e=h;break}if(!k)e=0;else{c[6435]=(c[6435]|0)+1;e=yc((k<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[t+48>>2]|0}if((h|0)>0){j=0;do{c[e+(j<<2)>>2]=c[(c[t+56>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[t+56>>2]|0;if(j){if(a[t+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);h=c[t+48>>2]|0}c[t+56>>2]=0}a[t+60>>0]=1;c[t+56>>2]=e;c[t+52>>2]=k;e=h;h=k}else e=k;while(0);c[(c[t+56>>2]|0)+(e<<2)>>2]=l;k=e+1|0;c[t+48>>2]=k;j=c[l+216>>2]|0;j=m&((j|0)==2|(j|0)==5);f=f+1|0;if((f|0)>=(r|0)){m=f;break b}e=c[t+16>>2]|0;if((c[e+(f<<3)>>2]|0)!=(o|0)){m=f;break}else m=j}}else{m=f;j=1}while(0);if((q|0)<(p|0)){l=c[t+36>>2]|0;e=l+(q<<2)|0;h=c[e>>2]|0;f=c[(c[h+740>>2]|0)+208>>2]|0;if((f|0)<=-1)f=c[(c[h+744>>2]|0)+208>>2]|0;if((f|0)==(o|0)){k=q;do{k=k+1|0;if((k|0)>=(p|0))break;h=c[l+(k<<2)>>2]|0;f=c[(c[h+740>>2]|0)+208>>2]|0;if((f|0)<=-1)f=c[(c[h+744>>2]|0)+208>>2]|0}while((o|0)==(f|0));h=k;f=k-q|0}else{h=n;f=0;e=0}}else{h=n;f=0;e=0}if(!j)Qb[c[(c[u>>2]|0)+8>>2]&7](u,c[t+56>>2]|0,c[t+48>>2]|0,e,f,o);q=(f|0)==0?q:h;e=c[t+48>>2]|0;if((e|0)<0){if((c[t+52>>2]|0)<0){f=c[t+56>>2]|0;if(f|0){if(a[t+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[t+56>>2]=0}a[t+60>>0]=1;c[t+56>>2]=0;c[t+52>>2]=0}do{c[(c[t+56>>2]|0)+(e<<2)>>2]=0;e=e+1|0}while((e|0)!=0)}c[t+48>>2]=0;if((m|0)>=(r|0))break;else{n=h;f=m}}}}else{r=Eb[c[(c[s>>2]|0)+44>>2]&127](s)|0;t=Eb[c[(c[s>>2]|0)+36>>2]&127](s)|0;Qb[c[(c[u>>2]|0)+8>>2]&7](u,c[b+16>>2]|0,c[b+8>>2]|0,r,t,-1)}e=c[2357]|0;u=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=u;do if(!u){if(c[e+4>>2]|0){tb(v|0,0)|0;u=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[v+4>>2]|0)-(c[u+4>>2]|0)+(((c[v>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2357]|0}c[2357]=c[e+20>>2]}while(0);nh(c[b+196>>2]|0);e=c[b+200>>2]|0;ic[c[(c[e>>2]|0)+16>>2]&127](e,d,c[b+72>>2]|0);e=c[2357]|0;b=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=b;if(b|0){i=v;return}do if(c[e+4>>2]|0){tb(v|0,0)|0;b=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[v+4>>2]|0)-(c[b+4>>2]|0)+(((c[v>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[e+16>>2]|0)){e=c[2357]|0;break}else{i=v;return}}while(0);c[2357]=c[e+20>>2];i=v;return}function Uc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,j=0.0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0,v=0.0,w=0,x=0,y=0.0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0;A=i;i=i+176|0;c[a+348>>2]=a+220;c[a+352>>2]=a+252;c[a+356>>2]=a+284;c[a+360>>2]=a+316;c[a+364>>2]=4;c[a+368>>2]=0;c[a+376>>2]=0;x=c[b+4>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=x;c[a+8>>2]=c[b+8>>2];c[a+8+4>>2]=c[b+8+4>>2];c[a+8+8>>2]=c[b+8+8>>2];c[a+8+12>>2]=c[b+8+12>>2];c[a+24>>2]=c[b+24>>2];c[a+24+4>>2]=c[b+24+4>>2];c[a+24+8>>2]=c[b+24+8>>2];c[a+24+12>>2]=c[b+24+12>>2];c[a+40>>2]=c[b+40>>2];c[a+40+4>>2]=c[b+40+4>>2];c[a+40+8>>2]=c[b+40+8>>2];c[a+40+12>>2]=c[b+40+12>>2];c[a+56>>2]=c[b+56>>2];c[a+56+4>>2]=c[b+56+4>>2];c[a+56+8>>2]=c[b+56+8>>2];c[a+56+12>>2]=c[b+56+12>>2];c[a+72>>2]=c[b+72>>2];c[a+72+4>>2]=c[b+72+4>>2];c[a+72+8>>2]=c[b+72+8>>2];c[a+72+12>>2]=c[b+72+12>>2];c[a+88>>2]=c[b+88>>2];c[a+88+4>>2]=c[b+88+4>>2];c[a+88+8>>2]=c[b+88+8>>2];c[a+88+12>>2]=c[b+88+12>>2];c[a+104>>2]=c[b+104>>2];c[a+104+4>>2]=c[b+104+4>>2];c[a+104+8>>2]=c[b+104+8>>2];c[a+104+12>>2]=c[b+104+12>>2];x=c[b+124>>2]|0;c[a+120>>2]=c[b+120>>2];c[a+124>>2]=x;g[a+144>>2]=0.0;c[a+180>>2]=0;c[a+128>>2]=c[d>>2];c[a+128+4>>2]=c[d+4>>2];c[a+128+8>>2]=c[d+8>>2];c[a+128+12>>2]=c[d+12>>2];e=+g[a+128>>2];h=+g[a+132>>2];j=+g[a+136>>2];if(e*e+h*h+j*j>0.0){d=(g[k>>2]=-e,c[k>>2]|0);b=(g[k>>2]=-h,c[k>>2]|0);f=(g[k>>2]=-j,c[k>>2]|0)}else{d=1065353216;b=0;f=0}g[a+164>>2]=0.0;c[a+364>>2]=3;c[a+148>>2]=a+316;c[a+180>>2]=1;t=(c[k>>2]=d,+g[k>>2]);v=(c[k>>2]=b,+g[k>>2]);Nh(a,t,v,(c[k>>2]=f,+g[k>>2]),a+316|0);g[a+164>>2]=1.0;w=(c[a+148>>2]|0)+16|0;c[a+128>>2]=c[w>>2];c[a+128+4>>2]=c[w+4>>2];c[a+128+8>>2]=c[w+8>>2];c[a+128+12>>2]=c[w+12>>2];c[A+24+48>>2]=c[w>>2];c[A+24+48+4>>2]=c[w+4>>2];c[A+24+48+8>>2]=c[w+8>>2];c[A+24+48+12>>2]=c[w+12>>2];c[A+24+32>>2]=c[w>>2];c[A+24+32+4>>2]=c[w+4>>2];c[A+24+32+8>>2]=c[w+8>>2];c[A+24+32+12>>2]=c[w+12>>2];c[A+24+16>>2]=c[w>>2];c[A+24+16+4>>2]=c[w+4>>2];c[A+24+16+8>>2]=c[w+8>>2];c[A+24+16+12>>2]=c[w+12>>2];c[A+24>>2]=c[w>>2];c[A+24+4>>2]=c[w+4>>2];c[A+24+8>>2]=c[w+8>>2];c[A+24+12>>2]=c[w+12>>2];v=0.0;w=0;x=0;e=e*e+h*h+j*j;a:do{u=c[a+368>>2]|0;l=+g[a+128>>2];h=+g[a+132>>2];j=+g[a+136>>2];o=+O(+(l*l+h*h+j*j));if(o<9.999999747378752e-05){z=5;break}g[a+148+(u*36|0)+16+(c[a+148+(u*36|0)+32>>2]<<2)>>2]=0.0;d=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=d;c[a+148+(u*36|0)+(c[a+148+(u*36|0)+32>>2]<<2)>>2]=c[a+348+(d<<2)>>2];d=c[a+148+(u*36|0)+32>>2]|0;c[a+148+(u*36|0)+32>>2]=d+1;Nh(a,-l,-h,-j,c[a+148+(u*36|0)+(d<<2)>>2]|0);d=c[a+148+(u*36|0)+32>>2]|0;b=c[a+148+(u*36|0)+(d+-1<<2)>>2]|0;h=+g[b+16>>2];j=+g[b+20>>2];l=+g[b+24>>2];q=h-+g[A+24>>2];r=j-+g[A+24+4>>2];t=l-+g[A+24+8>>2];if(q*q+r*r+t*t<9.999999747378752e-05){z=8;break}q=h-+g[A+24+16>>2];r=j-+g[A+24+20>>2];t=l-+g[A+24+24>>2];if(q*q+r*r+t*t<9.999999747378752e-05){z=8;break}q=h-+g[A+24+32>>2];r=j-+g[A+24+36>>2];t=l-+g[A+24+40>>2];if(q*q+r*r+t*t<9.999999747378752e-05){z=8;break}q=h-+g[A+24+48>>2];r=j-+g[A+24+52>>2];t=l-+g[A+24+56>>2];if(q*q+r*r+t*t<9.999999747378752e-05){z=8;break}w=w+1&3;s=A+24+(w<<4)|0;c[s>>2]=c[b+16>>2];c[s+4>>2]=c[b+16+4>>2];c[s+8>>2]=c[b+16+8>>2];c[s+12>>2]=c[b+16+12>>2];t=(+g[a+128>>2]*h+ +g[a+132>>2]*j+ +g[a+136>>2]*l)/o;v=t>v?t:v;if(o-v-o*9.999999747378752e-05<=0.0){z=9;break}c[A>>2]=0;b:do switch(d|0){case 2:{s=c[a+148+(u*36|0)>>2]|0;n=c[a+148+(u*36|0)+4>>2]|0;e=+g[n+16>>2];h=+g[s+16>>2];j=+g[n+20>>2];l=+g[s+20>>2];o=+g[n+24>>2];p=+g[s+24>>2];if(!((e-h)*(e-h)+(j-l)*(j-l)+(o-p)*(o-p)>0.0)){z=39;break a}q=-(h*(e-h)+l*(j-l)+p*(o-p))/((e-h)*(e-h)+(j-l)*(j-l)+(o-p)*(o-p));if(q>=1.0){g[A+8>>2]=0.0;g[A+8+4>>2]=1.0;c[A>>2]=2;e=e*e+j*j+o*o;break b}if(!(q<=0.0)){g[A+8+4>>2]=q;g[A+8>>2]=1.0-q;c[A>>2]=3;e=((e-h)*q+h)*((e-h)*q+h)+((j-l)*q+l)*((j-l)*q+l)+((o-p)*q+p)*((o-p)*q+p);break b}else{g[A+8>>2]=1.0;g[A+8+4>>2]=0.0;c[A>>2]=1;e=h*h+l*l+p*p;break b}}case 3:{e=+Oe((c[a+148+(u*36|0)>>2]|0)+16|0,(c[a+148+(u*36|0)+4>>2]|0)+16|0,(c[a+148+(u*36|0)+8>>2]|0)+16|0,A+8|0,A);break}case 4:{f=c[a+148+(u*36|0)>>2]|0;m=c[a+148+(u*36|0)+4>>2]|0;n=c[a+148+(u*36|0)+8>>2]|0;s=c[a+148+(u*36|0)+12>>2]|0;c[A+152>>2]=f+16;c[A+152+4>>2]=m+16;c[A+152+8>>2]=n+16;c[A+152+12>>2]=s+16;j=+g[f+16>>2];l=+g[s+16>>2];e=+g[f+20>>2];o=+g[s+20>>2];h=+g[f+24>>2];p=+g[s+24>>2];g[A+104>>2]=j-l;g[A+104+4>>2]=e-o;g[A+104+8>>2]=h-p;g[A+104+12>>2]=0.0;B=+g[m+16>>2];D=+g[m+20>>2];r=+g[m+24>>2];g[A+104+16>>2]=B-l;g[A+104+20>>2]=D-o;g[A+104+24>>2]=r-p;g[A+104+28>>2]=0.0;q=+g[n+16>>2];E=+g[n+20>>2];C=+g[n+24>>2];g[A+104+32>>2]=q-l;g[A+104+36>>2]=E-o;g[A+104+40>>2]=C-p;g[A+104+44>>2]=0.0;t=(e-o)*(r-p)*(q-l)+(h-p)*(B-l)*(E-o)-(E-o)*(r-p)*(j-l)-(e-o)*(B-l)*(C-p)+(C-p)*(j-l)*(D-o)-(q-l)*(h-p)*(D-o);if(t!=t|0.0!=0.0|t==0.0|!(t*(h*((B-q)*(e-D)-(D-E)*(j-B))+(j*((D-E)*(h-r)-(r-C)*(e-D))+e*((r-C)*(j-B)-(B-q)*(h-r))))<=0.0))e=-1.0;else{c[A+92>>2]=0;c[A+92+4>>2]=0;c[A+92+8>>2]=0;c[A+88>>2]=0;r=e-o;q=h-p;h=j-l;d=0;e=-1.0;while(1){b=c[4976+(d<<2)>>2]|0;C=+g[A+104+(b<<4)+8>>2];D=+g[A+104+(b<<4)+4>>2];E=+g[A+104+(b<<4)>>2];if(t*((r*C-q*D)*l+o*(q*E-C*h)+(D*h-r*E)*p)>0.0?(y=+Oe(c[A+152+(d<<2)>>2]|0,c[A+152+(b<<2)>>2]|0,s+16|0,A+92|0,A+88|0),e<0.0|y<e):0){F=c[A+88>>2]|0;c[A>>2]=(F&2|0?1<<b:0)+(F<<1&8)+(F&1|0?1<<d:0);c[A+8+(d<<2)>>2]=c[A+92>>2];c[A+8+(b<<2)>>2]=c[A+92+4>>2];g[A+8+(c[4976+(b<<2)>>2]<<2)>>2]=0.0;c[A+8+12>>2]=c[A+92+8>>2];e=y}d=d+1|0;if((d|0)==3)break;r=+g[A+104+(d<<4)+4>>2];q=+g[A+104+(d<<4)+8>>2];h=+g[A+104+(d<<4)>>2];l=+g[s+16>>2];o=+g[s+20>>2];p=+g[s+24>>2]}if(e<0.0){c[A>>2]=15;l=+g[n+20>>2];E=+g[m+24>>2];D=+g[s+16>>2];h=+g[n+24>>2];C=+g[m+16>>2];o=+g[s+20>>2];j=+g[n+16>>2];B=+g[s+24>>2];q=+g[m+20>>2];g[A+8>>2]=(l*E*D+h*C*o-o*E*j-l*C*B+B*j*q-D*h*q)/t;e=+g[f+20>>2];p=+g[f+24>>2];r=+g[f+16>>2];g[A+8+4>>2]=(e*h*D+p*j*o-o*h*r-e*j*B+B*r*l-D*p*l)/t;g[A+8+8>>2]=(q*p*D+E*r*o-o*p*C-q*r*B+B*C*e-D*E*e)/t;g[A+8+12>>2]=1.0-((l*E*D+h*C*o-o*E*j-l*C*B+B*j*q-D*h*q)/t+(e*h*D+p*j*o-o*h*r-e*j*B+B*r*l-D*p*l)/t+(q*p*D+E*r*o-o*p*C-q*r*B+B*C*e-D*E*e)/t);e=0.0}}break}default:{}}while(0);if(!(e>=0.0)){z=39;break}c[a+148+((1-u|0)*36|0)+32>>2]=0;c[a+128>>2]=0;c[a+128+4>>2]=0;c[a+128+8>>2]=0;c[a+128+12>>2]=0;c[a+368>>2]=1-u;d=c[a+148+(u*36|0)+32>>2]|0;b=c[A>>2]|0;if(d|0){n=0;do{f=a+148+(u*36|0)+(n<<2)|0;m=c[f>>2]|0;if(!(b&1<<n)){F=c[a+364>>2]|0;c[a+364>>2]=F+1;c[a+348+(F<<2)>>2]=m}else{c[a+148+((1-u|0)*36|0)+(c[a+148+((1-u|0)*36|0)+32>>2]<<2)>>2]=m;s=c[A+8+(n<<2)>>2]|0;F=c[a+148+((1-u|0)*36|0)+32>>2]|0;c[a+148+((1-u|0)*36|0)+32>>2]=F+1;c[a+148+((1-u|0)*36|0)+16+(F<<2)>>2]=s;F=c[f>>2]|0;C=(c[k>>2]=s,+g[k>>2]);D=C*+g[F+20>>2];E=C*+g[F+24>>2];g[a+128>>2]=+g[F+16>>2]*C+ +g[a+128>>2];g[a+132>>2]=D+ +g[a+132>>2];g[a+136>>2]=E+ +g[a+136>>2]}n=n+1|0}while((n|0)!=(d|0))}if((b|0)==15)c[a+376>>2]=1;x=x+1|0;if(x>>>0>=128){z=38;break}}while(!(c[a+376>>2]|0));if((z|0)==5)c[a+376>>2]=1;else if((z|0)==8){F=c[a+368>>2]|0;z=(c[a+148+(F*36|0)+32>>2]|0)+-1|0;c[a+148+(F*36|0)+32>>2]=z;z=c[a+148+(F*36|0)+(z<<2)>>2]|0;F=c[a+364>>2]|0;c[a+364>>2]=F+1;c[a+348+(F<<2)>>2]=z}else if((z|0)==9){F=c[a+368>>2]|0;z=(c[a+148+(F*36|0)+32>>2]|0)+-1|0;c[a+148+(F*36|0)+32>>2]=z;z=c[a+148+(F*36|0)+(z<<2)>>2]|0;F=c[a+364>>2]|0;c[a+364>>2]=F+1;c[a+348+(F<<2)>>2]=z}else if((z|0)==38)c[a+376>>2]=2;else if((z|0)==39){F=c[a+368>>2]|0;z=(c[a+148+(F*36|0)+32>>2]|0)+-1|0;c[a+148+(F*36|0)+32>>2]=z;z=c[a+148+(F*36|0)+(z<<2)>>2]|0;F=c[a+364>>2]|0;c[a+364>>2]=F+1;c[a+348+(F<<2)>>2]=z}c[a+372>>2]=a+148+((c[a+368>>2]|0)*36|0);d=c[a+376>>2]|0;switch(d|0){case 0:{C=+g[a+128>>2];D=+g[a+132>>2];E=+g[a+136>>2];g[a+144>>2]=+O(+(C*C+D*D+E*E));i=A;return d|0}case 1:{g[a+144>>2]=0.0;i=A;return d|0}default:{i=A;return d|0}}return 0}function Vc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,P=0,Q=0.0,R=0.0,S=0.0,T=0;P=i;i=i+224|0;g[b+56>>2]=0.0;I=P+208+4|0;N=P+208+8|0;c[P+208>>2]=0;c[P+208+4>>2]=0;c[P+208+8>>2]=0;c[P+208+12>>2]=0;c[P+144>>2]=c[d>>2];c[P+144+4>>2]=c[d+4>>2];c[P+144+8>>2]=c[d+8>>2];c[P+144+12>>2]=c[d+12>>2];c[P+144+16>>2]=c[d+16>>2];c[P+144+16+4>>2]=c[d+16+4>>2];c[P+144+16+8>>2]=c[d+16+8>>2];c[P+144+16+12>>2]=c[d+16+12>>2];c[P+144+32>>2]=c[d+32>>2];c[P+144+32+4>>2]=c[d+32+4>>2];c[P+144+32+8>>2]=c[d+32+8>>2];c[P+144+32+12>>2]=c[d+32+12>>2];A=P+144+48|0;c[A>>2]=c[d+48>>2];c[A+4>>2]=c[d+48+4>>2];c[A+8>>2]=c[d+48+8>>2];c[A+12>>2]=c[d+48+12>>2];c[P+80>>2]=c[d+64>>2];c[P+80+4>>2]=c[d+64+4>>2];c[P+80+8>>2]=c[d+64+8>>2];c[P+80+12>>2]=c[d+64+12>>2];c[P+80+16>>2]=c[d+80>>2];c[P+80+16+4>>2]=c[d+80+4>>2];c[P+80+16+8>>2]=c[d+80+8>>2];c[P+80+16+12>>2]=c[d+80+12>>2];c[P+80+32>>2]=c[d+96>>2];c[P+80+32+4>>2]=c[d+96+4>>2];c[P+80+32+8>>2]=c[d+96+8>>2];c[P+80+32+12>>2]=c[d+96+12>>2];B=P+80+48|0;c[B>>2]=c[d+112>>2];c[B+4>>2]=c[d+112+4>>2];c[B+8>>2]=c[d+112+8>>2];c[B+12>>2]=c[d+112+12>>2];G=+g[A>>2];H=+g[B>>2];J=+g[P+144+52>>2];K=+g[P+80+52>>2];L=+g[P+144+56>>2];M=+g[P+80+56>>2];g[A>>2]=G-(G+H)*.5;g[P+144+52>>2]=J-(J+K)*.5;g[P+144+56>>2]=L-(L+M)*.5;g[B>>2]=H-(G+H)*.5;g[P+80+52>>2]=K-(J+K)*.5;g[P+80+56>>2]=M-(L+M)*.5;if(((c[(c[b+28>>2]|0)+4>>2]|0)+-17|0)>>>0<2)A=((c[(c[b+32>>2]|0)+4>>2]|0)+-17|0)>>>0<2;else A=0;v=+g[b+44>>2];u=+g[b+48>>2];c[6420]=(c[6420]|0)+1;B=a[b+52>>0]|0;c[b+64>>2]=0;c[b+4>>2]=0;c[b+8>>2]=1065353216;c[b+12>>2]=0;g[b+16>>2]=0.0;c[b+68>>2]=0;c[b+60>>2]=-1;p=c[b+24>>2]|0;a[p+312>>0]=0;c[p>>2]=0;a[p+356>>0]=1;c[p+292>>2]=1566444395;c[p+296>>2]=1566444395;c[p+300>>2]=1566444395;g[p+304>>2]=0.0;c[p+336>>2]=0;c[p+336+4>>2]=0;c[p+336+8>>2]=0;c[p+336+12>>2]=0;a[p+336+16>>0]=0;a[p+332>>0]=a[p+332>>0]&-16;p=0;q=999999984306749440.0;do{o=+g[b+4>>2];n=+g[b+8>>2];k=+g[b+12>>2];l=+g[d+4>>2]*-o+ +g[d+20>>2]*-n+ +g[d+36>>2]*-k;m=+g[d+8>>2]*-o+ +g[d+24>>2]*-n+ +g[d+40>>2]*-k;g[P+64>>2]=+g[d>>2]*-o+ +g[d+16>>2]*-n+ +g[d+32>>2]*-k;g[P+64+4>>2]=l;g[P+64+8>>2]=m;g[P+64+12>>2]=0.0;m=o*+g[d+68>>2]+n*+g[d+84>>2]+k*+g[d+100>>2];l=o*+g[d+72>>2]+n*+g[d+88>>2]+k*+g[d+104>>2];g[P+48>>2]=+g[d+64>>2]*o+ +g[d+80>>2]*n+ +g[d+96>>2]*k;g[P+48+4>>2]=m;g[P+48+8>>2]=l;g[P+48+12>>2]=0.0;Gd(P+32|0,c[b+28>>2]|0,P+64|0);Gd(P+16|0,c[b+32>>2]|0,P+48|0);l=+g[P+32>>2];m=+g[P+32+4>>2];k=+g[P+32+8>>2];n=l*+g[P+144>>2]+m*+g[P+144+4>>2]+k*+g[P+144+8>>2]+ +g[P+144+48>>2];o=l*+g[P+144+16>>2]+m*+g[P+144+20>>2]+k*+g[P+144+24>>2]+ +g[P+144+52>>2];k=l*+g[P+144+32>>2]+m*+g[P+144+36>>2]+k*+g[P+144+40>>2]+ +g[P+144+56>>2];m=+g[P+16>>2];l=+g[P+16+4>>2];t=+g[P+16+8>>2];r=m*+g[P+80>>2]+l*+g[P+80+4>>2]+t*+g[P+80+8>>2]+ +g[P+80+48>>2];s=m*+g[P+80+16>>2]+l*+g[P+80+20>>2]+t*+g[P+80+24>>2]+ +g[P+80+52>>2];t=m*+g[P+80+32>>2]+l*+g[P+80+36>>2]+t*+g[P+80+40>>2]+ +g[P+80+56>>2];l=A?0.0:t;m=A?0.0:k;t=(A?0.0:k)-(A?0.0:t);k=+g[b+4>>2]*(n-r)+ +g[b+8>>2]*(o-s)+ +g[b+12>>2]*t;if(k>0.0?k*k>q*+g[d+128>>2]:0){c[b+68>>2]=10;h=0;p=1}else T=7;do if((T|0)==7){T=0;y=c[b+24>>2]|0;z=c[y>>2]|0;if((z|0)>0){j=+g[y+308>>2];h=0;x=0;do{C=n-r-+g[y+4+(x<<4)>>2];D=o-s-+g[y+4+(x<<4)+4>>2];E=t-+g[y+4+(x<<4)+8>>2];h=h|C*C+D*D+E*E<=j;x=x+1|0}while((x|0)!=(z|0))}else h=0;if((+g[y+304>>2]==0.0?t==+g[y+300>>2]:0)?o-s==+g[y+296>>2]:0){if(n-r==+g[y+292>>2]|h)T=15}else T=14;if((T|0)==14?(T=0,h):0)T=15;if((T|0)==15){T=0;c[b+68>>2]=1;h=0;p=1;break}j=q-k;if(j<=q*9.999999974752427e-07){c[b+68>>2]=!(j<=0.0)?11:2;h=0;p=1;break}g[y+292>>2]=n-r;g[y+296>>2]=o-s;g[y+300>>2]=t;g[y+304>>2]=0.0;a[y+356>>0]=1;g[y+4+(z<<4)>>2]=n-r;g[y+4+(z<<4)+4>>2]=o-s;g[y+4+(z<<4)+8>>2]=t;g[y+4+(z<<4)+12>>2]=0.0;h=c[y>>2]|0;g[y+84+(h<<4)>>2]=n;g[y+84+(h<<4)+4>>2]=o;g[y+84+(h<<4)+8>>2]=m;g[y+84+(h<<4)+12>>2]=0.0;h=c[y>>2]|0;g[y+164+(h<<4)>>2]=r;g[y+164+(h<<4)+4>>2]=s;g[y+164+(h<<4)+8>>2]=l;g[y+164+(h<<4)+12>>2]=0.0;c[y>>2]=(c[y>>2]|0)+1;h=c[b+24>>2]|0;z=Ec(h)|0;j=+g[h+276>>2];k=+g[h+280>>2];l=+g[h+284>>2];h=c[h+288>>2]|0;if(!z){c[b+68>>2]=3;h=0;p=1;break}if(j*j+k*k+l*l<9.999999974752427e-07){g[b+4>>2]=j;g[b+8>>2]=k;g[b+12>>2]=l;c[b+16>>2]=h;c[b+68>>2]=6;h=0;p=1;break}if(q-(j*j+k*k+l*l)<=q*1.1920928955078125e-07){c[b+68>>2]=12;h=0;p=1;q=j*j+k*k+l*l;break}g[b+4>>2]=j;g[b+8>>2]=k;g[b+12>>2]=l;c[b+16>>2]=h;z=c[b+64>>2]|0;c[b+64>>2]=z+1;if((z|0)<=1e3)if((c[c[b+24>>2]>>2]|0)==4){c[b+68>>2]=13;h=0;q=j*j+k*k+l*l}else{h=1;q=j*j+k*k+l*l}else{h=0;q=j*j+k*k+l*l}}while(0)}while(h);u=B<<24>>24==0?u:0.0;t=(B<<24>>24==0?v:0.0)+u;do if(p){B=c[b+24>>2]|0;Ec(B)|0;j=+g[B+260>>2];l=+g[B+264>>2];n=+g[B+268>>2];c[P+208>>2]=c[b+4>>2];c[P+208+4>>2]=c[b+4+4>>2];c[P+208+8>>2]=c[b+4+8>>2];c[P+208+12>>2]=c[b+4+12>>2];k=+g[b+4>>2];m=+g[b+8>>2];o=+g[b+12>>2];if(k*k+m*m+o*o<.0001)c[b+68>>2]=5;if(k*k+m*m+o*o>1.4210854715202004e-14){E=1.0/+O(+(k*k+m*m+o*o));g[P+208>>2]=E*+g[P+208>>2];g[I>>2]=E*+g[I>>2];g[N>>2]=E*+g[N>>2];w=u/+O(+q);c[b+60>>2]=1;E=1.0/E-t;x=1;D=w*k+j;C=w*m+l;n=w*o+n;break}else{c[b+60>>2]=2;E=0.0;x=0;D=j;C=l;break}}else{E=0.0;x=0;D=0.0;C=0.0;n=0.0}while(0);if(((c[b+72>>2]|0)!=0?(c[b+20>>2]|0)!=0:0)?(c[b+68>>2]|0)!=0:0)h=t+E<.01;else h=0;p=x^1;do if(h|p?(F=c[b+20>>2]|0,(F|0)!=0):0){c[6419]=(c[6419]|0)+1;c[b+4>>2]=0;c[b+4+4>>2]=0;c[b+4+8>>2]=0;c[b+4+12>>2]=0;if(Db[c[(c[F>>2]|0)+8>>2]&3](F,c[b+24>>2]|0,c[b+28>>2]|0,c[b+32>>2]|0,P+144|0,P+80|0,b+4|0,P+64|0,P+48|0,f)|0){l=+g[P+48>>2];o=+g[P+64>>2];k=+g[P+48+4>>2];q=+g[P+64+4>>2];j=+g[P+48+8>>2];r=+g[P+64+8>>2];if(!((l-o)*(l-o)+(k-q)*(k-q)+(j-r)*(j-r)<=1.4210854715202004e-14)){m=(l-o)*(l-o)+(k-q)*(k-q)+(j-r)*(j-r);t=l-o;u=j-r;v=0.0;w=k-q}else{t=+g[b+4>>2];w=+g[b+8>>2];u=+g[b+12>>2];m=t*t+w*w+u*u;v=+g[b+16>>2]}if(m>1.4210854715202004e-14){s=1.0/+O(+m);m=-+O(+((o-l)*(o-l)+(q-k)*(q-k)+(r-j)*(r-j)));if(E>m|p){g[P+208>>2]=t*s;g[I>>2]=w*s;g[N>>2]=u*s;g[P+208+12>>2]=v;c[b+60>>2]=3;break}else h=8}else h=9;c[b+60>>2]=h;if(x){m=E;l=D;k=C;j=n;break}i=P;return}else{k=+g[b+4>>2];o=+g[b+8>>2];r=+g[b+12>>2];if(!(k*k+o*o+r*r>0.0)){if(x){m=E;l=D;k=C;j=n;break}i=P;return}l=+g[P+48>>2];v=+g[P+64>>2]-l;q=+g[P+48+4>>2];w=+g[P+64+4>>2]-q;s=+g[P+48+8>>2];j=+g[P+64+8>>2]-s;j=+O(+(v*v+w*w+j*j))-t;if(j<E|p){c[P+208>>2]=c[b+4>>2];c[P+208+4>>2]=c[b+4+4>>2];c[P+208+8>>2]=c[b+4+8>>2];c[P+208+12>>2]=c[b+4+12>>2];C=+g[P+208>>2];D=+g[I>>2];E=+g[N>>2];m=1.0/+O(+(C*C+D*D+E*E));g[P+208>>2]=C*m;g[I>>2]=D*m;g[N>>2]=E*m;c[b+60>>2]=6;m=j;l=u*k+l;k=u*o+q;j=u*r+s;break}c[b+60>>2]=5;if(x){m=E;l=D;k=C;j=n;break}i=P;return}}else T=52;while(0);if((T|0)==52)if(x){m=E;l=D;k=C;j=n}else{i=P;return}if(!(m<0.0)?!(m*m<+g[d+128>>2]):0){i=P;return}if(c[b+76>>2]|0?(T=c[b+28>>2]|0,mc[c[(c[T>>2]|0)+8>>2]&127](T,P+144|0,P+64|0,P+48|0),C=(+g[P+48>>2]+ +g[P+64>>2])*.5,D=(+g[P+48+4>>2]+ +g[P+64+4>>2])*.5,E=(+g[P+48+8>>2]+ +g[P+64+8>>2])*.5,T=c[b+32>>2]|0,mc[c[(c[T>>2]|0)+8>>2]&127](T,P+80|0,P+64|0,P+48|0),Q=+g[P+208>>2],R=+g[I>>2],S=+g[N>>2],(C-(+g[P+64>>2]+ +g[P+48>>2])*.5)*Q+(D-(+g[P+64+4>>2]+ +g[P+48+4>>2])*.5)*R+(E-(+g[P+64+8>>2]+ +g[P+48+8>>2])*.5)*S<0.0):0){g[P+208>>2]=-Q;g[I>>2]=-R;g[N>>2]=-S}c[b+4>>2]=c[P+208>>2];c[b+4+4>>2]=c[P+208+4>>2];c[b+4+8>>2]=c[P+208+8>>2];c[b+4+12>>2]=c[P+208+12>>2];g[b+56>>2]=m;T=c[(c[e>>2]|0)+16>>2]|0;g[P>>2]=(G+H)*.5+l;g[P+4>>2]=(J+K)*.5+k;g[P+8>>2]=(L+M)*.5+j;g[P+12>>2]=0.0;hc[T&15](e,P+208|0,P,m);i=P;return}function Wc(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=+h;j=+j;k=k|0;var l=0,m=0,n=0.0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0;X=i;i=i+64|0;a[X+32+16>>0]=1;W=X+32+12|0;c[W>>2]=0;c[X+32+4>>2]=0;c[X+32+8>>2]=0;q=c[f+4>>2]|0;if((q|0)>0){c[6435]=(c[6435]|0)+1;l=yc((q<<4|3)+16|0)|0;if(!l)o=0;else{c[(l+4+15&-16)+-4>>2]=l;o=l+4+15&-16}l=c[X+32+4>>2]|0;if((l|0)>0){m=0;do{V=o+(m<<4)|0;U=(c[W>>2]|0)+(m<<4)|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];m=m+1|0}while((m|0)!=(l|0))}l=c[W>>2]|0;if(l|0){if(a[X+32+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[W>>2]=0}a[X+32+16>>0]=1;c[W>>2]=o;c[X+32+8>>2]=q}l=c[d+28>>2]|0;if((l|0)>0){U=c[d+36>>2]|0;A=+g[e>>2];B=+g[e+4>>2];E=+g[e+8>>2];F=+g[e+16>>2];G=+g[e+20>>2];s=+g[e+24>>2];r=+g[e+32>>2];p=+g[e+36>>2];n=+g[e+40>>2];t=+g[b>>2];u=+g[b+4>>2];v=+g[b+8>>2];V=-1;z=3402823466385288598117041.0e14;o=0;while(1){w=+g[U+(o*36|0)+20>>2];x=+g[U+(o*36|0)+24>>2];y=+g[U+(o*36|0)+28>>2];m=(w*A+x*B+y*E)*t+(w*F+x*G+y*s)*u+(w*r+x*p+y*n)*v<z;V=m?o:V;o=o+1|0;if((o|0)==(l|0))break;else z=m?(w*A+x*B+y*E)*t+(w*F+x*G+y*s)*u+(w*r+x*p+y*n)*v:z}if((V|0)>=0){L=c[U+(V*36|0)+4>>2]|0;if((L|0)>0){M=U+(V*36|0)+12|0;N=U+(V*36|0)+20|0;O=U+(V*36|0)+24|0;P=U+(V*36|0)+28|0;t=A;x=B;w=E;v=F;u=G;K=0;J=f;f=X+32|0;while(1){I=c[M>>2]|0;l=c[I+(K<<2)>>2]|0;H=c[d+16>>2]|0;K=K+1|0;I=c[I+(((K|0)==(L|0)?0:K)<<2)>>2]|0;Z=+g[H+(l<<4)>>2];_=Z-+g[H+(I<<4)>>2];Y=+g[H+(l<<4)+4>>2];$=Y-+g[H+(I<<4)+4>>2];y=+g[H+(l<<4)+8>>2];B=y-+g[H+(I<<4)+8>>2];z=_*t+$*x+B*w;A=_*v+$*u+B*s;B=_*r+$*p+B*n;$=+g[N>>2];_=+g[O>>2];G=+g[P>>2];E=t*$+x*_+w*G;F=v*$+u*_+s*G;G=r*$+p*_+n*G;u=(Z*t+Y*x+y*w+ +g[e+48>>2])*-(A*G-B*F)+(Z*v+Y*u+y*s+ +g[e+52>>2])*-(B*E-z*G)+(Z*r+Y*p+y*n+ +g[e+56>>2])*-(z*F-A*E);I=J;H=f;l=c[I+4>>2]|0;if((l|0)>=2){o=c[I+12>>2]|0;p=+g[o+(l+-1<<4)>>2];r=+g[o+(l+-1<<4)+4>>2];s=+g[o+(l+-1<<4)+8>>2];n=p*-(A*G-B*F)+r*-(B*E-z*G)+s*-(z*F-A*E)-u;D=0;while(1){v=+g[o+(D<<4)>>2];w=+g[o+(D<<4)+4>>2];x=+g[o+(D<<4)+8>>2];C=c[o+(D<<4)+12>>2]|0;y=v*-(A*G-B*F)+w*-(B*E-z*G)+x*-(z*F-A*E)-u;do if(n<0.0)if(y<0.0){m=c[H+4>>2]|0;if((m|0)==(c[H+8>>2]|0)?(Q=m|0?m<<1:1,(m|0)<(Q|0)):0){if(!Q)q=0;else{c[6435]=(c[6435]|0)+1;m=yc((Q<<4|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16}q=m;m=c[H+4>>2]|0}if((m|0)>0){o=0;do{aa=q+(o<<4)|0;ba=(c[H+12>>2]|0)+(o<<4)|0;c[aa>>2]=c[ba>>2];c[aa+4>>2]=c[ba+4>>2];c[aa+8>>2]=c[ba+8>>2];c[aa+12>>2]=c[ba+12>>2];o=o+1|0}while((o|0)!=(m|0))}m=c[H+12>>2]|0;if(m|0){if(a[H+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[H+12>>2]=0}a[H+16>>0]=1;c[H+12>>2]=q;c[H+8>>2]=Q;m=c[H+4>>2]|0}ba=c[H+12>>2]|0;g[ba+(m<<4)>>2]=v;g[ba+(m<<4)+4>>2]=w;g[ba+(m<<4)+8>>2]=x;c[ba+(m<<4)+12>>2]=C;c[H+4>>2]=(c[H+4>>2]|0)+1;break}else{n=n/(n-y);t=p+(v-p)*n;p=r+(w-r)*n;n=s+(x-s)*n;m=c[H+4>>2]|0;if((m|0)==(c[H+8>>2]|0)?(R=m|0?m<<1:1,(m|0)<(R|0)):0){if(!R)q=0;else{c[6435]=(c[6435]|0)+1;m=yc((R<<4|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16}q=m;m=c[H+4>>2]|0}if((m|0)>0){o=0;do{ba=q+(o<<4)|0;aa=(c[H+12>>2]|0)+(o<<4)|0;c[ba>>2]=c[aa>>2];c[ba+4>>2]=c[aa+4>>2];c[ba+8>>2]=c[aa+8>>2];c[ba+12>>2]=c[aa+12>>2];o=o+1|0}while((o|0)!=(m|0))}m=c[H+12>>2]|0;if(m|0){if(a[H+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[H+12>>2]=0}a[H+16>>0]=1;c[H+12>>2]=q;c[H+8>>2]=R;m=c[H+4>>2]|0}ba=c[H+12>>2]|0;g[ba+(m<<4)>>2]=t;g[ba+(m<<4)+4>>2]=p;g[ba+(m<<4)+8>>2]=n;g[ba+(m<<4)+12>>2]=0.0;c[H+4>>2]=(c[H+4>>2]|0)+1;break}else if(y<0.0){n=n/(n-y);t=p+(v-p)*n;p=r+(w-r)*n;n=s+(x-s)*n;m=c[H+4>>2]|0;if((m|0)==(c[H+8>>2]|0)?(S=m|0?m<<1:1,(m|0)<(S|0)):0){if(!S)q=0;else{c[6435]=(c[6435]|0)+1;m=yc((S<<4|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16}q=m;m=c[H+4>>2]|0}if((m|0)>0){o=0;do{ba=q+(o<<4)|0;aa=(c[H+12>>2]|0)+(o<<4)|0;c[ba>>2]=c[aa>>2];c[ba+4>>2]=c[aa+4>>2];c[ba+8>>2]=c[aa+8>>2];c[ba+12>>2]=c[aa+12>>2];o=o+1|0}while((o|0)!=(m|0))}m=c[H+12>>2]|0;if(m|0){if(a[H+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[H+12>>2]=0}a[H+16>>0]=1;c[H+12>>2]=q;c[H+8>>2]=S;m=c[H+4>>2]|0}ba=c[H+12>>2]|0;g[ba+(m<<4)>>2]=t;g[ba+(m<<4)+4>>2]=p;g[ba+(m<<4)+8>>2]=n;g[ba+(m<<4)+12>>2]=0.0;m=(c[H+4>>2]|0)+1|0;c[H+4>>2]=m;if((m|0)==(c[H+8>>2]|0)?(T=m|0?m<<1:1,(m|0)<(T|0)):0){if(!T)q=0;else{c[6435]=(c[6435]|0)+1;m=yc((T<<4|3)+16|0)|0;if(!m)m=0;else{c[(m+4+15&-16)+-4>>2]=m;m=m+4+15&-16}q=m;m=c[H+4>>2]|0}if((m|0)>0){o=0;do{ba=q+(o<<4)|0;aa=(c[H+12>>2]|0)+(o<<4)|0;c[ba>>2]=c[aa>>2];c[ba+4>>2]=c[aa+4>>2];c[ba+8>>2]=c[aa+8>>2];c[ba+12>>2]=c[aa+12>>2];o=o+1|0}while((o|0)!=(m|0))}m=c[H+12>>2]|0;if(m|0){if(a[H+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[H+12>>2]=0}a[H+16>>0]=1;c[H+12>>2]=q;c[H+8>>2]=T;m=c[H+4>>2]|0}ba=c[H+12>>2]|0;g[ba+(m<<4)>>2]=v;g[ba+(m<<4)+4>>2]=w;g[ba+(m<<4)+8>>2]=x;c[ba+(m<<4)+12>>2]=C;c[H+4>>2]=(c[H+4>>2]|0)+1}while(0);m=D+1|0;if((m|0)==(l|0))break;o=c[I+12>>2]|0;n=y;p=v;s=x;r=w;D=m}l=c[I+4>>2]|0}if((l|0)<0){if((c[I+8>>2]|0)<0){m=c[I+12>>2]|0;if(m|0){if(a[I+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[I+12>>2]=0}a[I+16>>0]=1;c[I+12>>2]=0;c[I+8>>2]=0}do{ba=(c[I+12>>2]|0)+(l<<4)|0;c[ba>>2]=c[X>>2];c[ba+4>>2]=c[X+4>>2];c[ba+8>>2]=c[X+8>>2];c[ba+12>>2]=c[X+12>>2];l=l+1|0}while((l|0)!=0)}c[I+4>>2]=0;t=+g[e>>2];x=+g[e+4>>2];w=+g[e+8>>2];v=+g[e+16>>2];u=+g[e+20>>2];s=+g[e+24>>2];r=+g[e+32>>2];p=+g[e+36>>2];n=+g[e+40>>2];if((K|0)>=(L|0)){o=N;m=O;l=P;C=e+48|0;D=e+52|0;q=e+56|0;break}else{ba=f;f=J;J=ba}}}else{o=U+(V*36|0)+20|0;m=U+(V*36|0)+24|0;l=U+(V*36|0)+28|0;C=e+48|0;D=e+52|0;q=e+56|0;t=A;x=B;w=E;v=F;u=G}Z=+g[o>>2];_=+g[m>>2];$=+g[l>>2];t=Z*t+_*x+$*w;s=Z*v+_*u+$*s;r=Z*r+_*p+$*n;p=+g[U+(V*36|0)+32>>2]-(t*+g[C>>2]+s*+g[D>>2]+r*+g[q>>2]);l=c[f+4>>2]|0;if((l|0)>0){o=0;do{m=c[f+12>>2]|0;n=p+(t*+g[m+(o<<4)>>2]+s*+g[m+(o<<4)+4>>2]+r*+g[m+(o<<4)+8>>2]);n=n<=h?h:n;if(n<=j){l=m+(o<<4)|0;c[X+16>>2]=c[l>>2];c[X+16+4>>2]=c[l+4>>2];c[X+16+8>>2]=c[l+8>>2];c[X+16+12>>2]=c[l+12>>2];hc[c[(c[k>>2]|0)+16>>2]&15](k,b,X+16|0,n);l=c[f+4>>2]|0}o=o+1|0}while((o|0)<(l|0))}}}l=c[W>>2]|0;if(!l){i=X;return}if(a[X+32+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[W>>2]=0;i=X;return}function Xc(b){b=b|0;var d=0.0,e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0;w=i;i=i+176|0;if(!(a[b+738>>0]|0)){i=w;return}g[b+36>>2]=0.0;g[b+744>>2]=0.0;if(!(a[b+736>>0]|0)){e=c[b+28>>2]|0;l=+g[b+600>>2];m=+g[b+604>>2];r=+g[b+608>>2];t=l*+g[e+20>>2]+m*+g[e+24>>2]+r*+g[e+28>>2]+ +g[e+56>>2];f=c[b+32>>2]|0;n=+g[b+664>>2];o=+g[b+668>>2];s=+g[b+672>>2];p=+g[f+52>>2];d=+g[f+56>>2];u=n*+g[f+20>>2]+o*+g[f+24>>2]+s*+g[f+28>>2]+d;v=n*+g[f+36>>2]+o*+g[f+40>>2]+s*+g[f+44>>2]+ +g[f+60>>2];q=l*+g[e+4>>2]+m*+g[e+8>>2]+r*+g[e+12>>2]+ +g[e+52>>2];r=l*+g[e+36>>2]+m*+g[e+40>>2]+r*+g[e+44>>2]+ +g[e+60>>2];s=n*+g[f+4>>2]+o*+g[f+8>>2]+s*+g[f+12>>2]+p;if((s-q)*(s-q)+(u-t)*(u-t)+(v-r)*(v-r)>1.1920928955078125e-07){j=1.0/+O(+((s-q)*(s-q)+(u-t)*(u-t)+(v-r)*(v-r)));g[w+128>>2]=(s-q)*j;g[w+128+4>>2]=(u-t)*j;g[w+128+8>>2]=(v-r)*j;c[w+128+12>>2]=0;n=(v-r)*j;h=(u-t)*j;j=(s-q)*j}else{c[w+128>>2]=1065353216;c[w+128+4>>2]=0;c[w+128+8>>2]=0;g[w+128+12>>2]=0.0;n=0.0;h=0.0;j=1.0}if(+N(+n)>.7071067690849304){y=n*n+h*h;x=1.0/+O(+y);l=-(x*n);n=x*h;o=-(n*j);k=j*l;m=0.0;h=y*x;j=n}else{l=j*j+h*h;k=1.0/+O(+l);m=-(h*k);h=k*j;o=n*m;k=l*k;l=h;h=-(h*n);j=0.0}g[w+128+16>>2]=m;g[w+128+20>>2]=l;g[w+128+24>>2]=j;g[w+128+32>>2]=h;g[w+128+36>>2]=o;g[w+128+40>>2]=k;h=p;e=0;while(1){z=c[b+28>>2]|0;c[w+80>>2]=c[z+4>>2];c[w+80+4>>2]=c[z+20>>2];c[w+80+8>>2]=c[z+36>>2];g[w+80+12>>2]=0.0;c[w+80+16>>2]=c[z+8>>2];c[w+80+20>>2]=c[z+24>>2];c[w+80+24>>2]=c[z+40>>2];g[w+80+28>>2]=0.0;c[w+80+32>>2]=c[z+12>>2];c[w+80+36>>2]=c[z+28>>2];c[w+80+40>>2]=c[z+44>>2];g[w+80+44>>2]=0.0;c[w+32>>2]=c[f+4>>2];c[w+32+4>>2]=c[f+20>>2];c[w+32+8>>2]=c[f+36>>2];g[w+32+12>>2]=0.0;c[w+32+16>>2]=c[f+8>>2];c[w+32+20>>2]=c[f+24>>2];c[w+32+24>>2]=c[f+40>>2];g[w+32+28>>2]=0.0;c[w+32+32>>2]=c[f+12>>2];c[w+32+36>>2]=c[f+28>>2];c[w+32+40>>2]=c[f+44>>2];g[w+32+44>>2]=0.0;x=t-+g[z+56>>2];y=r-+g[z+60>>2];g[w+16>>2]=q-+g[z+52>>2];g[w+16+4>>2]=x;g[w+16+8>>2]=y;g[w+16+12>>2]=0.0;y=v-+g[f+60>>2];g[w>>2]=s-h;g[w+4>>2]=u-d;g[w+8>>2]=y;g[w+12>>2]=0.0;z=c[b+28>>2]|0;f=c[b+32>>2]|0;Rg(b+48+(e*84|0)|0,w+80|0,w+32|0,w+16|0,w,w+128+(e<<4)|0,z+396|0,+g[z+344>>2],f+396|0,+g[f+344>>2]);e=e+1|0;if((e|0)==3)break;z=c[b+32>>2]|0;f=z;h=+g[z+52>>2];d=+g[z+56>>2]}}h=+g[b+560>>2];j=+g[b+576>>2];k=+g[b+592>>2];if(+N(+k)>.7071067690849304){p=1.0/+O(+(k*k+j*j));d=h*-(k*p);l=0.0;m=j*p;n=-(k*p);o=(k*k+j*j)*p;p=-(h*j*p)}else{p=1.0/+O(+(h*h+j*j));d=(h*h+j*j)*p;l=-(j*p);m=0.0;n=h*p;o=-(k*h*p);p=k*-(j*p)}f=c[b+28>>2]|0;I=+g[f+4>>2];H=+g[f+8>>2];u=+g[f+12>>2];R=l*I+n*H+m*u;G=+g[f+20>>2];F=+g[f+24>>2];x=+g[f+28>>2];T=l*G+n*F+m*x;E=+g[f+36>>2];s=+g[f+40>>2];C=+g[f+44>>2];W=l*E+n*s+m*C;B=o*I+p*H+d*u;K=o*G+p*F+d*x;L=o*E+p*s+d*C;e=c[b+32>>2]|0;A=+g[e+4>>2];l=+g[e+20>>2];m=+g[e+36>>2];q=+g[e+8>>2];r=+g[e+24>>2];v=+g[e+40>>2];P=+g[e+12>>2];S=+g[e+28>>2];V=+g[e+44>>2];c[b+300>>2]=0;c[b+300+4>>2]=0;c[b+300+8>>2]=0;c[b+300+12>>2]=0;g[b+316>>2]=R*I+T*G+W*E;g[b+320>>2]=R*H+T*F+W*s;g[b+324>>2]=R*u+T*x+W*C;g[b+328>>2]=0.0;g[b+332>>2]=A*-R+l*-T+m*-W;g[b+336>>2]=q*-R+r*-T+v*-W;g[b+340>>2]=P*-R+S*-T+V*-W;g[b+344>>2]=0.0;D=(R*I+T*G+W*E)*+g[f+396>>2];J=(R*H+T*F+W*s)*+g[f+400>>2];d=(R*u+T*x+W*C)*+g[f+404>>2];g[b+348>>2]=D;g[b+352>>2]=J;g[b+356>>2]=d;g[b+360>>2]=0.0;p=(A*-R+l*-T+m*-W)*+g[e+396>>2];y=(q*-R+r*-T+v*-W)*+g[e+400>>2];X=(P*-R+S*-T+V*-W)*+g[e+404>>2];g[b+364>>2]=p;g[b+368>>2]=y;g[b+372>>2]=X;g[b+376>>2]=0.0;g[b+380>>2]=(R*I+T*G+W*E)*D+(R*H+T*F+W*s)*J+(R*u+T*x+W*C)*d+((A*-R+l*-T+m*-W)*p+(q*-R+r*-T+v*-W)*y+(P*-R+S*-T+V*-W)*X);e=c[b+28>>2]|0;X=+g[e+4>>2];W=+g[e+20>>2];V=+g[e+36>>2];T=+g[e+8>>2];S=+g[e+24>>2];R=+g[e+40>>2];P=+g[e+12>>2];y=+g[e+28>>2];v=+g[e+44>>2];f=c[b+32>>2]|0;r=+g[f+4>>2];q=+g[f+20>>2];p=+g[f+36>>2];m=+g[f+8>>2];l=+g[f+24>>2];A=+g[f+40>>2];d=+g[f+12>>2];J=+g[f+28>>2];D=+g[f+44>>2];c[b+384>>2]=0;c[b+384+4>>2]=0;c[b+384+8>>2]=0;c[b+384+12>>2]=0;g[b+400>>2]=B*X+K*W+L*V;g[b+404>>2]=B*T+K*S+L*R;g[b+408>>2]=B*P+K*y+L*v;g[b+412>>2]=0.0;g[b+416>>2]=r*-B+q*-K+p*-L;g[b+420>>2]=m*-B+l*-K+A*-L;g[b+424>>2]=d*-B+J*-K+D*-L;g[b+428>>2]=0.0;U=(B*X+K*W+L*V)*+g[e+396>>2];Q=(B*T+K*S+L*R)*+g[e+400>>2];t=(B*P+K*y+L*v)*+g[e+404>>2];g[b+432>>2]=U;g[b+436>>2]=Q;g[b+440>>2]=t;g[b+444>>2]=0.0;n=(r*-B+q*-K+p*-L)*+g[f+396>>2];o=(m*-B+l*-K+A*-L)*+g[f+400>>2];M=(d*-B+J*-K+D*-L)*+g[f+404>>2];g[b+448>>2]=n;g[b+452>>2]=o;g[b+456>>2]=M;g[b+460>>2]=0.0;g[b+464>>2]=(B*X+K*W+L*V)*U+(B*T+K*S+L*R)*Q+(B*P+K*y+L*v)*t+((r*-B+q*-K+p*-L)*n+(m*-B+l*-K+A*-L)*o+(d*-B+J*-K+D*-L)*M);f=c[b+28>>2]|0;M=+g[f+4>>2];L=+g[f+20>>2];D=+g[f+36>>2];K=+g[f+8>>2];J=+g[f+24>>2];B=+g[f+40>>2];d=+g[f+12>>2];o=+g[f+28>>2];A=+g[f+44>>2];e=c[b+32>>2]|0;l=+g[e+4>>2];m=+g[e+20>>2];n=+g[e+36>>2];p=+g[e+8>>2];q=+g[e+24>>2];r=+g[e+40>>2];t=+g[e+12>>2];v=+g[e+28>>2];y=+g[e+44>>2];c[b+468>>2]=0;c[b+468+4>>2]=0;c[b+468+8>>2]=0;c[b+468+12>>2]=0;D=(I*h+H*j+u*k)*M+(G*h+F*j+x*k)*L+(E*h+s*j+C*k)*D;B=(I*h+H*j+u*k)*K+(G*h+F*j+x*k)*J+(E*h+s*j+C*k)*B;A=(I*h+H*j+u*k)*d+(G*h+F*j+x*k)*o+(E*h+s*j+C*k)*A;g[b+484>>2]=D;g[b+488>>2]=B;g[b+492>>2]=A;g[b+496>>2]=0.0;u=-(I*h+H*j+u*k);x=-(G*h+F*j+x*k);h=-(E*h+s*j+C*k);g[b+500>>2]=l*u+m*x+n*h;g[b+504>>2]=p*u+q*x+r*h;g[b+508>>2]=t*u+v*x+y*h;g[b+512>>2]=0.0;C=D*+g[f+396>>2];j=B*+g[f+400>>2];k=A*+g[f+404>>2];g[b+516>>2]=C;g[b+520>>2]=j;g[b+524>>2]=k;g[b+528>>2]=0.0;o=(l*u+m*x+n*h)*+g[e+396>>2];s=(p*u+q*x+r*h)*+g[e+400>>2];d=(t*u+v*x+y*h)*+g[e+404>>2];g[b+532>>2]=o;g[b+536>>2]=s;g[b+540>>2]=d;g[b+544>>2]=0.0;g[b+548>>2]=D*C+B*j+A*k+((l*u+m*x+n*h)*o+(p*u+q*x+r*h)*s+(t*u+v*x+y*h)*d);g[b+724>>2]=0.0;e=c[b+28>>2]|0;f=c[b+32>>2]|0;d=+kj(b,e+4|0,f+4|0);g[b+728>>2]=d;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;h=+g[b+692>>2];do if(h>=0.0){d=+eh(d-+g[b+688>>2],6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465}else d=d+6.2831854820251465;if(d<-h){a[b+716>>0]=1;g[b+708>>2]=-(d+h);g[b+712>>2]=1.0;break}if(d>h){a[b+716>>0]=1;g[b+708>>2]=h-d;g[b+712>>2]=-1.0}}while(0);T=+g[b+560>>2];U=+g[b+576>>2];X=+g[b+592>>2];V=T*+g[e+4>>2]+U*+g[e+8>>2]+X*+g[e+12>>2];W=T*+g[e+20>>2]+U*+g[e+24>>2]+X*+g[e+28>>2];X=T*+g[e+36>>2]+U*+g[e+40>>2]+X*+g[e+44>>2];g[b+720>>2]=1.0/(V*(V*+g[e+264>>2]+W*+g[e+280>>2]+X*+g[e+296>>2])+W*(V*+g[e+268>>2]+W*+g[e+284>>2]+X*+g[e+300>>2])+X*(V*+g[e+272>>2]+W*+g[e+288>>2]+X*+g[e+304>>2])+(V*(V*+g[f+264>>2]+W*+g[f+280>>2]+X*+g[f+296>>2])+W*(V*+g[f+268>>2]+W*+g[f+284>>2]+X*+g[f+300>>2])+X*(V*+g[f+272>>2]+W*+g[f+288>>2]+X*+g[f+304>>2])));i=w;return}function Yc(b,d,e,f,h,j,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;B=i;i=i+4224|0;if(((c[e+4>>2]|0)+-17|0)>>>0<2)A=((c[f+4>>2]|0)+-17|0)>>>0<2;else A=0;b=0;do{Ue();t=+g[24672+(b<<4)>>2];u=+g[24672+(b<<4)+4>>2];v=+g[24672+(b<<4)+8>>2];y=+g[h+4>>2]*-t+ +g[h+20>>2]*-u+ +g[h+36>>2]*-v;w=+g[h+8>>2]*-t+ +g[h+24>>2]*-u+ +g[h+40>>2]*-v;g[B+1248+(b<<4)>>2]=+g[h>>2]*-t+ +g[h+16>>2]*-u+ +g[h+32>>2]*-v;g[B+1248+(b<<4)+4>>2]=y;g[B+1248+(b<<4)+8>>2]=w;g[B+1248+(b<<4)+12>>2]=0.0;w=t*+g[j+4>>2]+u*+g[j+20>>2]+v*+g[j+36>>2];y=t*+g[j+8>>2]+u*+g[j+24>>2]+v*+g[j+40>>2];g[B+256+(b<<4)>>2]=t*+g[j>>2]+u*+g[j+16>>2]+v*+g[j+32>>2];g[B+256+(b<<4)+4>>2]=w;g[B+256+(b<<4)+8>>2]=y;g[B+256+(b<<4)+12>>2]=0.0;b=b+1|0}while((b|0)!=42);b=Eb[c[(c[e>>2]|0)+84>>2]&127](e)|0;if((b|0)>0){q=0;r=42;while(1){ic[c[(c[e>>2]|0)+88>>2]&127](e,q,B+176|0);w=+g[B+176>>2];y=+g[B+176+4>>2];v=+g[B+176+8>>2];u=w*+g[h+16>>2]+y*+g[h+20>>2]+v*+g[h+24>>2];t=w*+g[h+32>>2]+y*+g[h+36>>2]+v*+g[h+40>>2];g[B+176>>2]=+g[h>>2]*w+ +g[h+4>>2]*y+ +g[h+8>>2]*v;g[B+176+4>>2]=u;g[B+176+8>>2]=t;g[B+176+12>>2]=0.0;Ue();z=24672+(r<<4)|0;c[z>>2]=c[B+176>>2];c[z+4>>2]=c[B+176+4>>2];c[z+8>>2]=c[B+176+8>>2];c[z+12>>2]=c[B+176+12>>2];t=+g[B+176>>2];u=+g[B+176+4>>2];v=+g[B+176+8>>2];y=+g[h+4>>2]*-t+ +g[h+20>>2]*-u+ +g[h+36>>2]*-v;w=+g[h+8>>2]*-t+ +g[h+24>>2]*-u+ +g[h+40>>2]*-v;g[B+1248+(r<<4)>>2]=+g[h>>2]*-t+ +g[h+16>>2]*-u+ +g[h+32>>2]*-v;g[B+1248+(r<<4)+4>>2]=y;g[B+1248+(r<<4)+8>>2]=w;g[B+1248+(r<<4)+12>>2]=0.0;w=t*+g[j+4>>2]+u*+g[j+20>>2]+v*+g[j+36>>2];y=t*+g[j+8>>2]+u*+g[j+24>>2]+v*+g[j+40>>2];g[B+256+(r<<4)>>2]=+g[j>>2]*t+ +g[j+16>>2]*u+ +g[j+32>>2]*v;g[B+256+(r<<4)+4>>2]=w;g[B+256+(r<<4)+8>>2]=y;g[B+256+(r<<4)+12>>2]=0.0;q=q+1|0;if((q|0)==(b|0))break;else r=r+1|0}r=b+42|0}else r=42;b=Eb[c[(c[f>>2]|0)+84>>2]&127](f)|0;if((b|0)>0){q=0;s=r;while(1){ic[c[(c[f>>2]|0)+88>>2]&127](f,q,B+176|0);w=+g[B+176>>2];y=+g[B+176+4>>2];v=+g[B+176+8>>2];u=w*+g[j+16>>2]+y*+g[j+20>>2]+v*+g[j+24>>2];t=w*+g[j+32>>2]+y*+g[j+36>>2]+v*+g[j+40>>2];g[B+176>>2]=+g[j>>2]*w+ +g[j+4>>2]*y+ +g[j+8>>2]*v;g[B+176+4>>2]=u;g[B+176+8>>2]=t;g[B+176+12>>2]=0.0;Ue();z=24672+(s<<4)|0;c[z>>2]=c[B+176>>2];c[z+4>>2]=c[B+176+4>>2];c[z+8>>2]=c[B+176+8>>2];c[z+12>>2]=c[B+176+12>>2];t=+g[B+176>>2];u=+g[B+176+4>>2];v=+g[B+176+8>>2];y=+g[h+4>>2]*-t+ +g[h+20>>2]*-u+ +g[h+36>>2]*-v;w=+g[h+8>>2]*-t+ +g[h+24>>2]*-u+ +g[h+40>>2]*-v;g[B+1248+(s<<4)>>2]=+g[h>>2]*-t+ +g[h+16>>2]*-u+ +g[h+32>>2]*-v;g[B+1248+(s<<4)+4>>2]=y;g[B+1248+(s<<4)+8>>2]=w;g[B+1248+(s<<4)+12>>2]=0.0;w=t*+g[j+4>>2]+u*+g[j+20>>2]+v*+g[j+36>>2];y=t*+g[j+8>>2]+u*+g[j+24>>2]+v*+g[j+40>>2];g[B+256+(s<<4)>>2]=+g[j>>2]*t+ +g[j+16>>2]*u+ +g[j+32>>2]*v;g[B+256+(s<<4)+4>>2]=w;g[B+256+(s<<4)+8>>2]=y;g[B+256+(s<<4)+12>>2]=0.0;q=q+1|0;if((q|0)==(b|0))break;else s=s+1|0}r=b+r|0}mc[c[(c[e>>2]|0)+76>>2]&127](e,B+1248|0,B+3232|0,r);mc[c[(c[f>>2]|0)+76>>2]&127](f,B+256|0,B+2240|0,r);if((r|0)>0){z=0;b=0;q=0;s=0;w=0.0;u=999999984306749440.0;while(1){Ue();p=+g[24672+(z<<4)>>2];t=+g[24672+(z<<4)+4>>2];y=+g[24672+(z<<4)+12>>2];v=A?0.0:+g[24672+(z<<4)+8>>2];if(p*p+t*t+v*v>.01?(D=+g[B+3232+(z<<4)>>2],C=+g[B+3232+(z<<4)+4>>2],x=+g[B+3232+(z<<4)+8>>2],G=+g[B+2240+(z<<4)>>2],F=+g[B+2240+(z<<4)+4>>2],E=+g[B+2240+(z<<4)+8>>2],x=p*(G*+g[j>>2]+F*+g[j+4>>2]+E*+g[j+8>>2]+ +g[j+48>>2]-(D*+g[h>>2]+C*+g[h+4>>2]+x*+g[h+8>>2]+ +g[h+48>>2]))+t*(G*+g[j+16>>2]+F*+g[j+20>>2]+E*+g[j+24>>2]+ +g[j+52>>2]-(D*+g[h+16>>2]+C*+g[h+20>>2]+x*+g[h+24>>2]+ +g[h+52>>2]))+v*((A?0.0:G*+g[j+32>>2]+F*+g[j+36>>2]+E*+g[j+40>>2]+ +g[j+56>>2])-(A?0.0:D*+g[h+32>>2]+C*+g[h+36>>2]+x*+g[h+40>>2]+ +g[h+56>>2])),x<u):0){b=(g[k>>2]=p,c[k>>2]|0);q=(g[k>>2]=t,c[k>>2]|0);s=(g[k>>2]=v,c[k>>2]|0);u=x}else y=w;z=z+1|0;if((z|0)==(r|0)){z=b;r=s;break}else w=y}}else{z=0;q=0;r=0;y=0.0;u=999999984306749440.0}switch(c[e+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:break;default:+Sb[c[(c[e>>2]|0)+48>>2]&15](e)}v=(c[k>>2]=z,+g[k>>2]);w=(c[k>>2]=q,+g[k>>2]);x=(c[k>>2]=r,+g[k>>2]);switch(c[f+4>>2]|0){case 4:case 5:case 10:case 11:case 13:case 1:case 0:case 8:break;default:+Sb[c[(c[f>>2]|0)+48>>2]&15](f)}if(u<0.0){l=0;i=B;return l|0}switch(c[e+4>>2]|0){case 8:{p=+g[e+28>>2]*+g[e+12>>2];break}case 0:{p=+g[e+44>>2];break}case 1:{p=+g[e+44>>2];break}case 13:{p=+g[e+44>>2];break}case 11:{p=+g[e+44>>2];break}case 10:{p=+g[e+44>>2];break}case 4:case 5:{p=+g[e+44>>2];break}default:p=+Sb[c[(c[e>>2]|0)+48>>2]&15](e)}b=c[f+4>>2]|0;switch(b|0){case 8:{t=+g[f+28>>2]*+g[f+12>>2];b=8;break}case 0:{t=+g[f+44>>2];b=0;break}case 1:{t=+g[f+44>>2];b=1;break}case 13:{t=+g[f+44>>2];b=13;break}case 11:{t=+g[f+44>>2];b=11;break}case 10:{t=+g[f+44>>2];b=10;break}case 4:case 5:{t=+g[f+44>>2];break}default:{t=+Sb[c[(c[f>>2]|0)+48>>2]&15](f);b=c[f+4>>2]|0}}p=u+(p+t+.5);c[B+176>>2]=9208;c[B+176+4>>2]=0;c[B+176+8>>2]=1065353216;c[B+176+12>>2]=0;g[B+176+16>>2]=0.0;c[B+176+20>>2]=0;c[B+176+24>>2]=d;c[B+176+28>>2]=e;c[B+176+32>>2]=f;c[B+176+36>>2]=c[e+4>>2];c[B+176+40>>2]=b;g[B+176+44>>2]=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);g[B+176+48>>2]=+Sb[c[(c[f>>2]|0)+48>>2]&15](f);a[B+176+52>>0]=0;c[B+176+60>>2]=-1;c[B+176+72>>2]=1;c[B+176+76>>2]=1;E=v*p+ +g[h+48>>2];F=w*p+ +g[h+52>>2];G=x*p+ +g[h+56>>2];c[B+44>>2]=c[h>>2];c[B+44+4>>2]=c[h+4>>2];c[B+44+8>>2]=c[h+8>>2];c[B+44+12>>2]=c[h+12>>2];c[B+44+16>>2]=c[h+16>>2];c[B+44+16+4>>2]=c[h+16+4>>2];c[B+44+16+8>>2]=c[h+16+8>>2];c[B+44+16+12>>2]=c[h+16+12>>2];c[B+44+32>>2]=c[h+32>>2];c[B+44+32+4>>2]=c[h+32+4>>2];c[B+44+32+8>>2]=c[h+32+8>>2];c[B+44+32+12>>2]=c[h+32+12>>2];g[B+44+48>>2]=E;g[B+44+52>>2]=F;g[B+44+56>>2]=G;g[B+44+60>>2]=0.0;c[B+44+64>>2]=c[j>>2];c[B+44+64+4>>2]=c[j+4>>2];c[B+44+64+8>>2]=c[j+8>>2];c[B+44+64+12>>2]=c[j+12>>2];c[B+44+80>>2]=c[j+16>>2];c[B+44+80+4>>2]=c[j+16+4>>2];c[B+44+80+8>>2]=c[j+16+8>>2];c[B+44+80+12>>2]=c[j+16+12>>2];c[B+44+96>>2]=c[j+32>>2];c[B+44+96+4>>2]=c[j+32+4>>2];c[B+44+96+8>>2]=c[j+32+8>>2];c[B+44+96+12>>2]=c[j+32+12>>2];c[B+44+112>>2]=c[j+48>>2];c[B+44+112+4>>2]=c[j+48+4>>2];c[B+44+112+8>>2]=c[j+48+8>>2];c[B+44+112+12>>2]=c[j+48+12>>2];g[B+44+128>>2]=999999984306749440.0;c[B>>2]=9092;a[B+40>>0]=0;g[B+176+4>>2]=-v;g[B+176+8>>2]=-w;g[B+176+12>>2]=-x;g[B+176+16>>2]=0.0;Vc(B+176|0,B+44|0,B,o,0);p=p-+g[B+36>>2];b=a[B+40>>0]|0;if(b<<24>>24){F=+g[B+24>>2]-w*p;G=+g[B+28>>2]-x*p;g[m>>2]=+g[B+20>>2]-v*p;g[m+4>>2]=F;g[m+8>>2]=G;g[m+12>>2]=0.0;c[n>>2]=c[B+20>>2];c[n+4>>2]=c[B+20+4>>2];c[n+8>>2]=c[B+20+8>>2];c[n+12>>2]=c[B+20+12>>2];c[l>>2]=z;c[l+4>>2]=q;c[l+8>>2]=r;g[l+12>>2]=y}l=b<<24>>24!=0;i=B;return l|0}function Zc(d,f,h,i){d=d|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0;c[d+168>>2]=c[d+152>>2];c[f>>2]=9012;c[f+52>>2]=282;a[f+60>>0]=0;a[f+80>>0]=1;c[f+76>>2]=0;c[f+68>>2]=0;c[f+72>>2]=0;a[f+100>>0]=1;c[f+96>>2]=0;c[f+88>>2]=0;c[f+92>>2]=0;a[f+120>>0]=1;c[f+116>>2]=0;c[f+108>>2]=0;c[f+112>>2]=0;a[f+140>>0]=1;c[f+136>>2]=0;c[f+128>>2]=0;c[f+132>>2]=0;c[f+144>>2]=0;a[f+164>>0]=1;c[f+160>>2]=0;c[f+152>>2]=0;c[f+156>>2]=0;c[f+168>>2]=0;c[f+4>>2]=-8388609;c[f+8>>2]=-8388609;c[f+12>>2]=-8388609;g[f+16>>2]=0.0;c[f+20>>2]=2139095039;c[f+24>>2]=2139095039;c[f+28>>2]=2139095039;g[f+32>>2]=0.0;h=c[d+56>>2]|0;if(i){c[f+56>>2]=xw(h|0)|0;a[f+4>>0]=a[d+4+3>>0]|0;a[f+5>>0]=a[d+4+2>>0]|0;a[f+6>>0]=a[d+4+1>>0]|0;a[f+7>>0]=a[d+4>>0]|0;a[f+8>>0]=a[d+8+3>>0]|0;a[f+9>>0]=a[d+8+2>>0]|0;a[f+10>>0]=a[d+8+1>>0]|0;a[f+11>>0]=a[d+8>>0]|0;a[f+12>>0]=a[d+12+3>>0]|0;a[f+13>>0]=a[d+12+2>>0]|0;a[f+14>>0]=a[d+12+1>>0]|0;a[f+15>>0]=a[d+12>>0]|0;a[f+16>>0]=a[d+16+3>>0]|0;a[f+17>>0]=a[d+16+2>>0]|0;a[f+18>>0]=a[d+16+1>>0]|0;a[f+19>>0]=a[d+16>>0]|0;a[f+20>>0]=a[d+20+3>>0]|0;a[f+21>>0]=a[d+20+2>>0]|0;a[f+22>>0]=a[d+20+1>>0]|0;a[f+23>>0]=a[d+20>>0]|0;a[f+24>>0]=a[d+24+3>>0]|0;a[f+25>>0]=a[d+24+2>>0]|0;a[f+26>>0]=a[d+24+1>>0]|0;a[f+27>>0]=a[d+24>>0]|0;a[f+28>>0]=a[d+28+3>>0]|0;a[f+29>>0]=a[d+28+2>>0]|0;a[f+30>>0]=a[d+28+1>>0]|0;a[f+31>>0]=a[d+28>>0]|0;a[f+32>>0]=a[d+32+3>>0]|0;a[f+33>>0]=a[d+32+2>>0]|0;a[f+34>>0]=a[d+32+1>>0]|0;a[f+35>>0]=a[d+32>>0]|0;a[f+36>>0]=a[d+36+3>>0]|0;a[f+37>>0]=a[d+36+2>>0]|0;a[f+38>>0]=a[d+36+1>>0]|0;a[f+39>>0]=a[d+36>>0]|0;a[f+40>>0]=a[d+40+3>>0]|0;a[f+41>>0]=a[d+40+2>>0]|0;a[f+42>>0]=a[d+40+1>>0]|0;a[f+43>>0]=a[d+40>>0]|0;a[f+44>>0]=a[d+44+3>>0]|0;a[f+45>>0]=a[d+44+2>>0]|0;a[f+46>>0]=a[d+44+1>>0]|0;a[f+47>>0]=a[d+44>>0]|0;a[f+48>>0]=a[d+48+3>>0]|0;a[f+49>>0]=a[d+48+2>>0]|0;a[f+50>>0]=a[d+48+1>>0]|0;a[f+51>>0]=a[d+48>>0]|0;c[f+144>>2]=xw(c[d+144>>2]|0)|0;h=xw(c[d+168>>2]|0)|0}else{c[f+56>>2]=h;c[f+4>>2]=c[d+4>>2];c[f+4+4>>2]=c[d+4+4>>2];c[f+4+8>>2]=c[d+4+8>>2];c[f+4+12>>2]=c[d+4+12>>2];c[f+20>>2]=c[d+20>>2];c[f+20+4>>2]=c[d+20+4>>2];c[f+20+8>>2]=c[d+20+8>>2];c[f+20+12>>2]=c[d+20+12>>2];c[f+36>>2]=c[d+36>>2];c[f+36+4>>2]=c[d+36+4>>2];c[f+36+8>>2]=c[d+36+8>>2];c[f+36+12>>2]=c[d+36+12>>2];c[f+144>>2]=c[d+144>>2];h=c[d+168>>2]|0}c[f+168>>2]=h;a[f+60>>0]=a[d+60>>0]|0;l=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){h=c[f+96>>2]|0;if(h|0){if(a[f+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[f+96>>2]=0}c[f+88>>2]=0;c[f+88+4>>2]=0;c[f+88+8>>2]=0;a[f+88+12>>0]=0;c[f+96>>2]=f+172;c[f+88>>2]=l;c[f+92>>2]=l;if(i)if((l|0)>0){j=c[d+96>>2]|0;h=f+172|0;k=0;do{m=j+(k<<6)|0;o=h+(k<<6)|0;a[o>>0]=a[m+3>>0]|0;a[o+1>>0]=a[m+2>>0]|0;a[o+2>>0]=a[m+1>>0]|0;a[o+3>>0]=a[m>>0]|0;o=j+(k<<6)+4|0;m=h+(k<<6)+4|0;a[m>>0]=a[o+3>>0]|0;a[m+1>>0]=a[o+2>>0]|0;a[m+2>>0]=a[o+1>>0]|0;a[m+3>>0]=a[o>>0]|0;m=j+(k<<6)+8|0;o=h+(k<<6)+8|0;a[o>>0]=a[m+3>>0]|0;a[o+1>>0]=a[m+2>>0]|0;a[o+2>>0]=a[m+1>>0]|0;a[o+3>>0]=a[m>>0]|0;o=j+(k<<6)+12|0;h=h+(k<<6)+12|0;a[h>>0]=a[o+3>>0]|0;a[h+1>>0]=a[o+2>>0]|0;a[h+2>>0]=a[o+1>>0]|0;a[h+3>>0]=a[o>>0]|0;h=c[d+96>>2]|0;o=h+(k<<6)+16|0;m=c[f+96>>2]|0;n=m+(k<<6)+16|0;a[n>>0]=a[o+3>>0]|0;a[n+1>>0]=a[o+2>>0]|0;a[n+2>>0]=a[o+1>>0]|0;a[n+3>>0]=a[o>>0]|0;n=h+(k<<6)+20|0;o=m+(k<<6)+20|0;a[o>>0]=a[n+3>>0]|0;a[o+1>>0]=a[n+2>>0]|0;a[o+2>>0]=a[n+1>>0]|0;a[o+3>>0]=a[n>>0]|0;o=h+(k<<6)+24|0;n=m+(k<<6)+24|0;a[n>>0]=a[o+3>>0]|0;a[n+1>>0]=a[o+2>>0]|0;a[n+2>>0]=a[o+1>>0]|0;a[n+3>>0]=a[o>>0]|0;h=h+(k<<6)+28|0;m=m+(k<<6)+28|0;a[m>>0]=a[h+3>>0]|0;a[m+1>>0]=a[h+2>>0]|0;a[m+2>>0]=a[h+1>>0]|0;a[m+3>>0]=a[h>>0]|0;j=c[d+96>>2]|0;m=xw(c[j+(k<<6)+32>>2]|0)|0;h=c[f+96>>2]|0;c[h+(k<<6)+32>>2]=m;c[h+(k<<6)+36>>2]=xw(c[j+(k<<6)+36>>2]|0)|0;c[h+(k<<6)+40>>2]=xw(c[j+(k<<6)+40>>2]|0)|0;k=k+1|0}while((k|0)!=(l|0))}else h=f+172|0;else if((l|0)>0){h=f+172|0;j=c[d+96>>2]|0;k=0;do{h=h+(k<<6)|0;o=j+(k<<6)|0;c[h>>2]=c[o>>2];c[h+4>>2]=c[o+4>>2];c[h+8>>2]=c[o+8>>2];c[h+12>>2]=c[o+12>>2];h=(c[f+96>>2]|0)+(k<<6)+16|0;o=(c[d+96>>2]|0)+(k<<6)+16|0;c[h>>2]=c[o>>2];c[h+4>>2]=c[o+4>>2];c[h+8>>2]=c[o+8>>2];c[h+12>>2]=c[o+12>>2];j=c[d+96>>2]|0;h=c[f+96>>2]|0;c[h+(k<<6)+32>>2]=c[j+(k<<6)+32>>2];c[h+(k<<6)+36>>2]=c[j+(k<<6)+36>>2];c[h+(k<<6)+40>>2]=c[j+(k<<6)+40>>2];k=k+1|0}while((k|0)!=(l|0))}else h=f+172|0;if(h|0){if(a[f+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[f+96>>2]=0}c[f+88>>2]=0;c[f+88+4>>2]=0;c[f+88+8>>2]=0;a[f+88+12>>0]=0;h=l<<6}else{h=c[f+136>>2]|0;if(h|0){if(a[f+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[f+136>>2]=0}c[f+128>>2]=0;c[f+128+4>>2]=0;c[f+128+8>>2]=0;a[f+128+12>>0]=0;c[f+136>>2]=f+172;c[f+128>>2]=l;c[f+132>>2]=l;if(i){if((l|0)>0){h=c[d+136>>2]|0;j=0;do{o=e[h+(j<<4)>>1]|0;b[f+172+(j<<4)>>1]=o>>>8|o<<8;o=e[h+(j<<4)+2>>1]|0;b[f+172+(j<<4)+2>>1]=o>>>8|o<<8;o=e[h+(j<<4)+4>>1]|0;b[f+172+(j<<4)+4>>1]=o>>>8|o<<8;o=e[h+(j<<4)+6>>1]|0;b[f+172+(j<<4)+6>>1]=o>>>8|o<<8;o=e[h+(j<<4)+8>>1]|0;b[f+172+(j<<4)+8>>1]=o>>>8|o<<8;o=e[h+(j<<4)+10>>1]|0;b[f+172+(j<<4)+10>>1]=o>>>8|o<<8;c[f+172+(j<<4)+12>>2]=xw(c[h+(j<<4)+12>>2]|0)|0;j=j+1|0}while((j|0)!=(l|0))}}else if((l|0)>0){h=c[d+136>>2]|0;j=0;do{b[f+172+(j<<4)>>1]=b[h+(j<<4)>>1]|0;b[f+172+(j<<4)+2>>1]=b[h+(j<<4)+2>>1]|0;b[f+172+(j<<4)+4>>1]=b[h+(j<<4)+4>>1]|0;b[f+172+(j<<4)+6>>1]=b[h+(j<<4)+6>>1]|0;b[f+172+(j<<4)+8>>1]=b[h+(j<<4)+8>>1]|0;b[f+172+(j<<4)+10>>1]=b[h+(j<<4)+10>>1]|0;c[f+172+(j<<4)+12>>2]=c[h+(j<<4)+12>>2];j=j+1|0}while((j|0)!=(l|0))}if(c[f+136>>2]|0)c[f+136>>2]=0;c[f+128>>2]=0;c[f+128+4>>2]=0;c[f+128+8>>2]=0;a[f+128+12>>0]=0;h=l<<4}l=f+172+h|0;h=c[d+168>>2]|0;j=c[f+160>>2]|0;if(j|0){if(a[f+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[f+160>>2]=0}c[f+152>>2]=0;c[f+152+4>>2]=0;c[f+152+8>>2]=0;a[f+152+12>>0]=0;c[f+160>>2]=l;c[f+152>>2]=h;c[f+156>>2]=h;k=c[d+168>>2]|0;if(i){if((k|0)>0){h=c[d+160>>2]|0;j=0;do{o=e[h+(j<<5)>>1]|0;b[l+(j<<5)>>1]=o>>>8|o<<8;o=e[h+(j<<5)+2>>1]|0;b[l+(j<<5)+2>>1]=o>>>8|o<<8;o=e[h+(j<<5)+4>>1]|0;b[l+(j<<5)+4>>1]=o>>>8|o<<8;o=e[h+(j<<5)+6>>1]|0;b[l+(j<<5)+6>>1]=o>>>8|o<<8;o=e[h+(j<<5)+8>>1]|0;b[l+(j<<5)+8>>1]=o>>>8|o<<8;o=e[h+(j<<5)+10>>1]|0;b[l+(j<<5)+10>>1]=o>>>8|o<<8;c[l+(j<<5)+12>>2]=xw(c[h+(j<<5)+12>>2]|0)|0;c[l+(j<<5)+16>>2]=xw(c[h+(j<<5)+16>>2]|0)|0;j=j+1|0}while((j|0)!=(k|0))}}else if((k|0)>0){h=c[d+160>>2]|0;j=0;do{b[l+(j<<5)>>1]=b[h+(j<<5)>>1]|0;b[l+(j<<5)+2>>1]=b[h+(j<<5)+2>>1]|0;b[l+(j<<5)+4>>1]=b[h+(j<<5)+4>>1]|0;b[l+(j<<5)+6>>1]=b[h+(j<<5)+6>>1]|0;b[l+(j<<5)+8>>1]=b[h+(j<<5)+8>>1]|0;b[l+(j<<5)+10>>1]=b[h+(j<<5)+10>>1]|0;c[l+(j<<5)+12>>2]=c[h+(j<<5)+12>>2];c[l+(j<<5)+16>>2]=c[h+(j<<5)+16>>2];c[l+(j<<5)+20>>2]=0;c[l+(j<<5)+24>>2]=0;c[l+(j<<5)+28>>2]=0;j=j+1|0}while((j|0)<(c[d+168>>2]|0))}if(!(c[f+160>>2]|0)){c[f>>2]=0;c[f+152>>2]=0;c[f+152+4>>2]=0;c[f+152+8>>2]=0;a[f+152+12>>0]=0;return 1}c[f+160>>2]=0;c[f>>2]=0;c[f+152>>2]=0;c[f+152+4>>2]=0;c[f+152+8>>2]=0;a[f+152+12>>0]=0;return 1}function _c(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0.0,P=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0;I=i;i=i+96|0;if(!(c[b+12>>2]|0)){i=I;return}f=(a[b+16>>0]|0)!=0;L=f?e:d;f=f?d:e;j=c[L+4>>2]|0;k=c[f+4>>2]|0;L=c[L+12>>2]|0;aa=+g[L>>2];$=+g[L+16>>2];_=+g[L+32>>2];Z=+g[L+4>>2];Y=+g[L+20>>2];o=+g[L+36>>2];l=+g[L+8>>2];r=+g[L+24>>2];y=+g[L+40>>2];T=+g[L+48>>2];S=+g[L+52>>2];P=+g[L+56>>2];K=c[f+12>>2]|0;X=+g[K>>2];W=+g[K+16>>2];p=+g[K+32>>2];V=+g[K+4>>2];U=+g[K+20>>2];q=+g[K+36>>2];x=+g[K+8>>2];v=+g[K+24>>2];t=+g[K+40>>2];M=-+g[K+48>>2];E=-+g[K+52>>2];F=-+g[K+56>>2];G=+g[L>>2];H=+g[L+16>>2];D=+g[L+32>>2];B=+g[L+4>>2];A=+g[L+20>>2];z=+g[L+36>>2];w=+g[L+8>>2];u=+g[L+24>>2];s=+g[L+40>>2];L=c[(c[j>>2]|0)+64>>2]|0;n=-+g[k+48>>2];m=-+g[k+52>>2];C=-+g[k+56>>2];g[I>>2]=(aa*X+$*W+_*p)*n+(aa*V+$*U+_*q)*m+(aa*x+$*v+_*t)*C;g[I+4>>2]=(Z*X+Y*W+o*p)*n+(Z*V+Y*U+o*q)*m+(Z*x+Y*v+o*t)*C;g[I+8>>2]=(l*X+r*W+y*p)*n+(l*V+r*U+y*q)*m+(l*x+r*v+y*t)*C;g[I+12>>2]=0.0;ic[L&127](I+16|0,j,I);C=+g[I+16>>2];y=+g[I+16+4>>2];r=+g[I+16+8>>2];l=+g[k+48>>2];m=+g[k+52>>2];n=+g[k+56>>2];o=n*(T*x+S*v+P*t+(x*M+v*E+t*F)+((x*G+v*H+t*D)*C+(x*B+v*A+t*z)*y+(x*w+v*u+t*s)*r))+(l*(T*X+S*W+P*p+(X*M+W*E+p*F)+((X*G+W*H+p*D)*C+(X*B+W*A+p*z)*y+(X*w+W*u+p*s)*r))+m*(T*V+S*U+P*q+(V*M+U*E+q*F)+((V*G+U*H+q*D)*C+(V*B+U*A+q*z)*y+(V*w+U*u+q*s)*r)))-+g[k+64>>2];p=T*X+S*W+P*p+(X*M+W*E+p*F)+((X*G+W*H+p*D)*C+(X*B+W*A+p*z)*y+(X*w+W*u+p*s)*r)-l*o;q=T*V+S*U+P*q+(V*M+U*E+q*F)+((V*G+U*H+q*D)*C+(V*B+U*A+q*z)*y+(V*w+U*u+q*s)*r)-m*o;r=T*x+S*v+P*t+(x*M+v*E+t*F)+((x*G+v*H+t*D)*C+(x*B+v*A+t*z)*y+(x*w+v*u+t*s)*r)-n*o;L=c[f+12>>2]|0;s=+g[L>>2];t=+g[L+4>>2];u=+g[L+8>>2];v=+g[L+16>>2];w=+g[L+20>>2];x=+g[L+24>>2];y=+g[L+32>>2];z=+g[L+36>>2];A=+g[L+40>>2];B=+g[L+48>>2];C=+g[L+52>>2];D=+g[L+56>>2];L=c[b+12>>2]|0;K=o<+g[L+752>>2];c[h+4>>2]=L;if(K){L=c[f+12>>2]|0;$=l*+g[L+16>>2]+m*+g[L+20>>2]+n*+g[L+24>>2];aa=l*+g[L+32>>2]+m*+g[L+36>>2]+n*+g[L+40>>2];g[I+80>>2]=+g[L>>2]*l+ +g[L+4>>2]*m+ +g[L+8>>2]*n;g[I+80+4>>2]=$;g[I+80+8>>2]=aa;g[I+80+12>>2]=0.0;g[I+64>>2]=u*r+(s*p+t*q)+B;g[I+64+4>>2]=p*v+q*w+r*x+C;g[I+64+8>>2]=p*y+q*z+r*A+D;g[I+64+12>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,I+80|0,I+64|0,o)}if((c[j+4>>2]|0)<7?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+24>>2]|0):0){l=+g[k+56>>2];if(+N(+l)>.7071067690849304){n=+g[k+52>>2];aa=1.0/+O(+(l*l+n*n));m=0.0;n=n*aa;l=-(l*aa)}else{aa=+g[k+48>>2];m=+g[k+52>>2];l=1.0/+O(+(aa*aa+m*m));m=-(m*l);n=0.0;l=aa*l}F=.019999999552965164/+Sb[c[(c[j>>2]|0)+16>>2]&15](j);F=(F>.39269909262657166?.39269909262657166:F)*.5;E=+R(+F)/+O(+(m*m+l*l+n*n));H=m*E;G=l*E;E=n*E;F=+Q(+F);f=c[b+20>>2]|0;if((f|0)>0){j=0;do{v=+g[k+48>>2];aa=+g[k+52>>2];B=+g[k+56>>2];z=+(j|0)*(6.2831854820251465/+(f|0))*.5;$=+R(+z)/+O(+(v*v+aa*aa+B*B));z=+Q(+z);A=E*-(aa*$)+(H*z+F*-(v*$))-G*-(B*$);x=H*-(B*$)+(G*z+F*-(aa*$))-E*-(v*$);da=G*-(v*$)+(E*z+F*-(B*$))-H*-(aa*$);D=F*z-H*-(v*$)-G*-(aa*$)-E*-(B*$);ia=B*$*x+(v*$*D+z*A)-aa*$*da;ha=v*$*da+(z*x+aa*$*D)-B*$*A;la=aa*$*A+(B*$*D+z*da)-v*$*x;da=z*D-v*$*A-aa*$*x-B*$*da;f=(a[b+16>>0]|0)!=0;ba=f?e:d;f=f?d:e;L=c[ba+4>>2]|0;K=c[f+4>>2]|0;ba=c[ba+12>>2]|0;$=+g[ba>>2];B=+g[ba+4>>2];x=+g[ba+8>>2];aa=+g[ba+16>>2];A=+g[ba+20>>2];v=+g[ba+24>>2];D=+g[ba+32>>2];z=+g[ba+36>>2];t=+g[ba+40>>2];V=+g[ba+48>>2];W=+g[ba+52>>2];X=+g[ba+56>>2];ba=c[f+12>>2]|0;P=+g[ba>>2];S=+g[ba+16>>2];p=+g[ba+32>>2];T=+g[ba+4>>2];U=+g[ba+20>>2];q=+g[ba+36>>2];w=+g[ba+8>>2];u=+g[ba+24>>2];s=+g[ba+40>>2];Y=-+g[ba+48>>2];Z=-+g[ba+52>>2];_=-+g[ba+56>>2];ga=ia*(2.0/(ia*ia+ha*ha+la*la+da*da));n=ha*(2.0/(ia*ia+ha*ha+la*la+da*da));ca=la*(2.0/(ia*ia+ha*ha+la*la+da*da));na=x*(ia*ca-da*n)+(B*(ia*n+da*ca)+$*(1.0-(ha*n+la*ca)));ka=x*(ha*ca+da*ga)+($*(ia*n-da*ca)+B*(1.0-(ia*ga+la*ca)));l=$*(ia*ca+da*n)+B*(ha*ca-da*ga)+x*(1.0-(ia*ga+ha*n));ma=v*(ia*ca-da*n)+(A*(ia*n+da*ca)+aa*(1.0-(ha*n+la*ca)));ja=v*(ha*ca+da*ga)+(aa*(ia*n-da*ca)+A*(1.0-(ia*ga+la*ca)));y=aa*(ia*ca+da*n)+A*(ha*ca-da*ga)+v*(1.0-(ia*ga+ha*n));oa=t*(ia*ca-da*n)+(z*(ia*n+da*ca)+D*(1.0-(ha*n+la*ca)));la=t*(ha*ca+da*ga)+(D*(ia*n-da*ca)+z*(1.0-(ia*ga+la*ca)));n=D*(ia*ca+da*n)+z*(ha*ca-da*ga)+t*(1.0-(ia*ga+ha*n));ha=+g[ba>>2];ga=+g[ba+16>>2];ia=+g[ba+32>>2];da=+g[ba+4>>2];ca=+g[ba+20>>2];ea=+g[ba+36>>2];m=+g[ba+8>>2];r=+g[ba+24>>2];o=+g[ba+40>>2];ba=c[(c[L>>2]|0)+64>>2]|0;fa=-+g[K+48>>2];M=-+g[K+52>>2];C=-+g[K+56>>2];g[I+64>>2]=(ia*oa+(ha*na+ga*ma))*fa+(ea*oa+(da*na+ca*ma))*M+(o*oa+(m*na+r*ma))*C;g[I+64+4>>2]=(ia*la+(ha*ka+ga*ja))*fa+(ea*la+(da*ka+ca*ja))*M+(o*la+(m*ka+r*ja))*C;g[I+64+8>>2]=(ia*n+(ha*l+ga*y))*fa+(ea*n+(da*l+ca*y))*M+(o*n+(m*l+r*y))*C;g[I+64+12>>2]=0.0;ic[ba&127](I+80|0,L,I+64|0);C=+g[I+80>>2];y=+g[I+80+4>>2];r=+g[I+80+8>>2];l=+g[K+48>>2];m=+g[K+52>>2];n=+g[K+56>>2];o=n*(V*w+W*u+X*s+(w*Y+u*Z+s*_)+(($*w+aa*u+D*s)*C+(B*w+A*u+z*s)*y+(x*w+v*u+t*s)*r))+(l*(V*P+W*S+X*p+(P*Y+S*Z+p*_)+(($*P+aa*S+D*p)*C+(B*P+A*S+z*p)*y+(x*P+v*S+t*p)*r))+m*(V*T+W*U+X*q+(T*Y+U*Z+q*_)+(($*T+aa*U+D*q)*C+(B*T+A*U+z*q)*y+(x*T+v*U+t*q)*r)))-+g[K+64>>2];p=V*P+W*S+X*p+(P*Y+S*Z+p*_)+(($*P+aa*S+D*p)*C+(B*P+A*S+z*p)*y+(x*P+v*S+t*p)*r)-l*o;q=V*T+W*U+X*q+(T*Y+U*Z+q*_)+(($*T+aa*U+D*q)*C+(B*T+A*U+z*q)*y+(x*T+v*U+t*q)*r)-m*o;r=V*w+W*u+X*s+(w*Y+u*Z+s*_)+(($*w+aa*u+D*s)*C+(B*w+A*u+z*s)*y+(x*w+v*u+t*s)*r)-n*o;K=c[f+12>>2]|0;s=+g[K>>2];t=+g[K+4>>2];u=+g[K+8>>2];v=+g[K+16>>2];w=+g[K+20>>2];x=+g[K+24>>2];y=+g[K+32>>2];z=+g[K+36>>2];A=+g[K+40>>2];B=+g[K+48>>2];C=+g[K+52>>2];D=+g[K+56>>2];K=c[b+12>>2]|0;L=o<+g[K+752>>2];c[h+4>>2]=K;if(L){ba=c[f+12>>2]|0;na=l*+g[ba+16>>2]+m*+g[ba+20>>2]+n*+g[ba+24>>2];oa=l*+g[ba+32>>2]+m*+g[ba+36>>2]+n*+g[ba+40>>2];g[I+48>>2]=+g[ba>>2]*l+ +g[ba+4>>2]*m+ +g[ba+8>>2]*n;g[I+48+4>>2]=na;g[I+48+8>>2]=oa;g[I+48+12>>2]=0.0;g[I+32>>2]=u*r+(s*p+t*q)+B;g[I+32+4>>2]=p*v+q*w+r*x+C;g[I+32+8>>2]=p*y+q*z+r*A+D;g[I+32+12>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,I+48|0,I+32|0,o)}j=j+1|0;f=c[b+20>>2]|0}while((j|0)<(f|0))}}do if((a[b+8>>0]|0?c[(c[b+12>>2]|0)+748>>2]|0:0)?(J=c[h+4>>2]|0,c[J+748>>2]|0):0){j=c[J+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;f=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(k|0)){ef(J,j+4|0,f+4|0);break}else{ef(J,f+4|0,k+4|0);break}}while(0);i=I;return}function $c(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;H=i;i=i+192|0;li(11018);d=c[b+1112>>2]|0;if((d|0)>0){G=0;do{F=c[(c[b+1120>>2]|0)+(G<<2)>>2]|0;E=c[F+24>>2]|0;if(E){j=H+144|0;k=j+48|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));g[H+144>>2]=9.999999747378752e-05;g[H+144+20>>2]=1.9999999494757503e-04;g[H+144+40>>2]=2.9999998514540493e-04;if((E|0)>0){d=c[F+32>>2]|0;j=c[F+12>>2]|0;f=0.0;h=0.0;e=0.0;k=0;do{D=c[d+(k<<2)>>2]|0;C=+g[j+(k<<2)>>2];f=f+ +g[D+8>>2]*C;e=e+C*+g[D+12>>2];h=h+C*+g[D+16>>2];k=k+1|0}while((k|0)!=(E|0))}else{f=0.0;h=0.0;e=0.0}r=+g[F+128>>2];t=f*r;s=e*r;r=h*r;g[F+228>>2]=t;g[F+232>>2]=s;g[F+236>>2]=r;g[F+240>>2]=0.0;if((E|0)>0){d=c[F+32>>2]|0;j=c[F+52>>2]|0;e=9.999999747378752e-05;f=+g[H+144+4>>2];h=+g[H+144+8>>2];l=+g[H+144+16>>2];m=1.9999999494757503e-04;n=+g[H+144+24>>2];o=0.0;p=0.0;q=2.9999998514540493e-04;k=0;while(1){D=c[d+(k<<2)>>2]|0;x=+g[D+8>>2]-t;y=+g[D+12>>2]-s;B=+g[D+16>>2]-r;z=+g[j+(k<<4)>>2];A=+g[j+(k<<4)+4>>2];C=+g[j+(k<<4)+8>>2];e=x*z+e;f=x*A+f;h=x*C+h;l=y*z+l;m=y*A+m;n=y*C+n;o=B*z+o;p=B*A+p;q=B*C+q;if((k|0)==(E+-1|0))break;k=k+1|0}g[H+144>>2]=e;g[H+144+4>>2]=f;g[H+144+8>>2]=h;g[H+144+16>>2]=l;g[H+144+20>>2]=m;g[H+144+24>>2]=n;g[H+144+32>>2]=o;g[H+144+36>>2]=p;g[H+144+40>>2]=q}if((a[22520]|0)==0?Wa(22520)|0:0){g[5787]=9.999999747378752e-05;c[5788]=16;_a(22520)}md(H+144|0,H+96|0,H+48|0);c[F+108>>2]=c[F+228>>2];c[F+108+4>>2]=c[F+228+4>>2];c[F+108+8>>2]=c[F+228+8>>2];c[F+108+12>>2]=c[F+228+12>>2];c[F+60>>2]=c[H+96>>2];c[F+60+4>>2]=c[H+96+4>>2];c[F+60+8>>2]=c[H+96+8>>2];c[F+60+12>>2]=c[H+96+12>>2];c[F+76>>2]=c[H+96+16>>2];c[F+76+4>>2]=c[H+96+16+4>>2];c[F+76+8>>2]=c[H+96+16+8>>2];c[F+76+12>>2]=c[H+96+16+12>>2];c[F+92>>2]=c[H+96+32>>2];c[F+92+4>>2]=c[H+96+32+4>>2];c[F+92+8>>2]=c[H+96+32+8>>2];c[F+92+12>>2]=c[H+96+32+12>>2];m=+g[F+132>>2];K=+g[F+60>>2];n=+g[F+148>>2];J=+g[F+64>>2];o=+g[F+164>>2];A=+g[F+68>>2];p=+g[F+136>>2];q=+g[F+152>>2];r=+g[F+168>>2];s=+g[F+140>>2];t=+g[F+156>>2];C=+g[F+172>>2];I=+g[F+76>>2];e=+g[F+80>>2];B=+g[F+84>>2];l=+g[F+92>>2];h=+g[F+96>>2];f=+g[F+100>>2];u=(m*K+n*J+o*A)*K+(K*p+J*q+A*r)*J+(K*s+J*t+A*C)*A;v=(m*K+n*J+o*A)*I+(K*p+J*q+A*r)*e+(K*s+J*t+A*C)*B;w=(m*K+n*J+o*A)*l+(K*p+J*q+A*r)*h+(K*s+J*t+A*C)*f;x=(m*I+n*e+o*B)*K+(p*I+q*e+r*B)*J+(s*I+t*e+C*B)*A;y=(m*I+n*e+o*B)*I+(p*I+q*e+r*B)*e+(s*I+t*e+C*B)*B;z=(m*I+n*e+o*B)*l+(p*I+q*e+r*B)*h+(s*I+t*e+C*B)*f;A=K*(m*l+n*h+o*f)+(p*l+q*h+r*f)*J+(s*l+t*h+C*f)*A;B=I*(m*l+n*h+o*f)+(p*l+q*h+r*f)*e+(s*l+t*h+C*f)*B;C=(m*l+n*h+o*f)*l+(p*l+q*h+r*f)*h+(s*l+t*h+C*f)*f;g[F+180>>2]=u;g[F+184>>2]=v;g[F+188>>2]=w;g[F+192>>2]=0.0;g[F+196>>2]=x;g[F+200>>2]=y;g[F+204>>2]=z;g[F+208>>2]=0.0;g[F+212>>2]=A;g[F+216>>2]=B;g[F+220>>2]=C;g[F+224>>2]=0.0;c[F+316>>2]=0;c[F+316+4>>2]=0;c[F+316+8>>2]=0;c[F+316+12>>2]=0;c[F+316+16>>2]=0;c[F+316+20>>2]=0;c[F+316+24>>2]=0;c[F+316+28>>2]=0;if((E|0)>0){d=c[F+32>>2]|0;j=c[F+12>>2]|0;r=+g[F+228>>2];s=+g[F+232>>2];t=+g[F+236>>2];q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;e=0.0;k=0;do{D=c[d+(k<<2)>>2]|0;M=+g[j+(k<<2)>>2];J=+g[D+40>>2]*M;L=M*+g[D+44>>2];M=M*+g[D+48>>2];q=J+q;g[F+316>>2]=q;p=L+p;g[F+320>>2]=p;o=M+o;g[F+324>>2]=o;I=+g[D+8>>2]-r;K=+g[D+12>>2]-s;N=+g[D+16>>2]-t;n=n+(M*K-L*N);g[F+332>>2]=n;m=J*N-M*I+m;g[F+336>>2]=m;e=L*I-J*K+e;g[F+340>>2]=e;k=k+1|0}while((k|0)!=(E|0));d=F+332|0;D=F+316|0}else{d=F+332|0;D=F+316|0;q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;e=0.0}M=+g[F+128>>2];N=1.0-+g[F+356>>2];g[F+316>>2]=q*M*N;g[F+320>>2]=M*p*N;g[F+324>>2]=M*o*N;g[F+328>>2]=0.0;N=1.0-+g[F+360>>2];g[d>>2]=(u*n+v*m+w*e)*N;g[F+336>>2]=(n*x+m*y+e*z)*N;g[F+340>>2]=N*(n*A+m*B+e*C);g[F+344>>2]=0.0;j=F+244|0;k=j+72|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));e=+g[F+364>>2];a:do if(e>0.0?(c[F+24>>2]|0)>0:0){d=0;while(1){k=c[(c[F+32>>2]|0)+(d<<2)>>2]|0;j=c[F+52>>2]|0;I=+g[j+(d<<4)>>2];J=+g[j+(d<<4)+4>>2];K=+g[j+(d<<4)+8>>2];L=+g[k+8>>2];M=+g[k+12>>2];N=+g[k+16>>2];M=M+e*(I*+g[F+76>>2]+J*+g[F+80>>2]+K*+g[F+84>>2]+ +g[F+112>>2]-M);N=N+e*(I*l+J*h+K*f+ +g[F+116>>2]-N);g[k+8>>2]=L+e*(I*+g[F+60>>2]+J*+g[F+64>>2]+K*+g[F+68>>2]+ +g[F+108>>2]-L);g[k+12>>2]=M;g[k+16>>2]=N;g[k+20>>2]=0.0;d=d+1|0;if((d|0)>=(c[F+24>>2]|0))break a;l=+g[F+92>>2];h=+g[F+96>>2];f=+g[F+100>>2];e=+g[F+364>>2]}}while(0);if(a[F+377>>0]|0){d=c[F+32>>2]|0;k=c[d>>2]|0;e=+g[k+8>>2];q=+g[k+12>>2];r=+g[k+16>>2];f=+g[k+20>>2];if((E|0)>1){j=1;o=e;p=r;n=f;m=q;l=e;h=f;f=q;e=r;do{k=c[d+(j<<2)>>2]|0;K=+g[k+8>>2];o=K<o?K:o;L=+g[k+12>>2];m=L<m?L:m;M=+g[k+16>>2];p=M<p?M:p;N=+g[k+20>>2];n=N<n?N:n;l=l<K?K:l;f=f<L?L:f;e=e<M?M:e;h=h<N?N:h;j=j+1|0}while((j|0)!=(E|0))}else{o=e;p=r;n=f;m=q;l=e;h=f;f=q;e=r}g[H>>2]=o;g[H+4>>2]=m;g[H+8>>2]=p;g[H+12>>2]=n;g[H+16>>2]=l;g[H+20>>2]=f;g[H+24>>2]=e;g[H+28>>2]=h;d=c[F+348>>2]|0;if(!d){d=c[b+1052>>2]|0;if(!d){c[6435]=(c[6435]|0)+1;d=yc(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}j=d;k=j+44|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0))}else c[b+1052>>2]=0;c[d+32>>2]=0;c[d+36>>2]=F;c[d+40>>2]=0;c[d>>2]=c[H>>2];c[d+4>>2]=c[H+4>>2];c[d+8>>2]=c[H+8>>2];c[d+12>>2]=c[H+12>>2];c[d+16>>2]=c[H+16>>2];c[d+20>>2]=c[H+20>>2];c[d+24>>2]=c[H+24>>2];c[d+28>>2]=c[H+28>>2];lf(b+1048|0,c[b+1048>>2]|0,d);c[b+1060>>2]=(c[b+1060>>2]|0)+1;c[F+348>>2]=d}else{L=+g[b+452>>2];M=L*+g[F+320>>2]*3.0;N=L*+g[F+324>>2]*3.0;g[H+32>>2]=+g[D>>2]*L*3.0;g[H+32+4>>2]=M;g[H+32+8>>2]=N;g[H+32+12>>2]=0.0;jh(b+1048|0,d,H,H+32|0,+g[b+464>>2])|0}}d=c[b+1112>>2]|0}G=G+1|0}while((G|0)<(d|0))}d=c[2357]|0;b=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=b;if(b|0){i=H;return}do if(c[d+4>>2]|0){tb(H+144|0,0)|0;b=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[H+144+4>>2]|0)-(c[b+4>>2]|0)+(((c[H+144>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=H;return}}while(0);c[2357]=c[d+20>>2];i=H;return}function ad(d,e){d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0;B=i;i=i+464|0;li(12209);f=c[d+84>>2]|0;if(f|0)zb[f&31](d,e);zb[c[(c[d>>2]|0)+140>>2]&31](d,e);g[d+28>>2]=e;c[d+32>>2]=0;c[d+48>>2]=Eb[c[(c[d>>2]|0)+20>>2]&127](d)|0;li(12238);li(12263);f=c[d+316>>2]|0;if((c[d+308>>2]|0)>0){h=0;do{s=c[d+24>>2]|0;Cb[c[(c[s>>2]|0)+16>>2]&127](s,c[f+(h<<2)>>2]|0);h=h+1|0;f=c[d+316>>2]|0}while((h|0)<(c[d+308>>2]|0))}if(f|0){if(a[d+320>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[d+316>>2]=0}a[d+320>>0]=1;c[d+316>>2]=0;c[d+308>>2]=0;c[d+312>>2]=0;f=c[2357]|0;s=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=s;do if(!s){if(c[f+4>>2]|0){tb(B+368|0,0)|0;s=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[s+4>>2]|0)+(((c[B+368>>2]|0)-(c[s>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2357]|0}c[2357]=c[f+20>>2]}while(0);a:do if((c[d+232>>2]|0)>0){q=B+304+48|0;r=B+368+44|0;s=0;while(1){k=c[(c[d+240>>2]|0)+(s<<2)>>2]|0;g[k+244>>2]=1.0;b:do switch(c[k+216>>2]|0){case 2:case 5:break;default:if(((c[k+204>>2]&3|0)==0?(Zg(k+4|0,+g[k+312>>2],+g[k+316>>2],+g[k+320>>2],k+328|0,e,B+304|0),t=+g[q>>2],u=t-+g[k+52>>2],v=+g[B+304+52>>2],w=v-+g[k+56>>2],x=+g[B+304+56>>2],y=x-+g[k+60>>2],a[d+44>>0]|0):0)?(o=+g[k+252>>2],o*o!=0.0?o*o<u*u+w*w+y*y:0):0){li(12300);if((c[(c[k+192>>2]|0)+4>>2]|0)<20?(c[5816]=(c[5816]|0)+1,j=c[d+68>>2]|0,j=Eb[c[(c[j>>2]|0)+36>>2]&127](j)|0,p=c[d+24>>2]|0,g[B+368+4>>2]=1.0,b[B+368+8>>1]=1,b[B+368+10>>1]=-1,c[B+368>>2]=2872,c[B+368+12>>2]=c[k+52>>2],c[B+368+12+4>>2]=c[k+52+4>>2],c[B+368+12+8>>2]=c[k+52+8>>2],c[B+368+12+12>>2]=c[k+52+12>>2],c[B+368+28>>2]=c[q>>2],c[B+368+28+4>>2]=c[q+4>>2],c[B+368+28+8>>2]=c[q+8>>2],c[B+368+28+12>>2]=c[q+12>>2],c[B+368+76>>2]=0,c[B+368>>2]=4332,c[B+368+80>>2]=k,c[B+368+88>>2]=j,c[B+368+92>>2]=p,p=c[k+248>>2]|0,c[B+248+8>>2]=0,c[B+248+12>>2]=1065353216,c[B+248+16>>2]=1065353216,c[B+248+20>>2]=1065353216,g[B+248+24>>2]=0.0,c[B+248>>2]=6672,c[B+248+4>>2]=8,c[B+248+28>>2]=p,c[B+248+44>>2]=p,c[B+368+84>>2]=c[d+56>>2],p=c[(c[k+188>>2]|0)+4>>2]|0,b[B+368+8>>1]=p,b[B+368+10>>1]=p>>>16,c[B+184+48>>2]=c[q>>2],c[B+184+48+4>>2]=c[q+4>>2],c[B+184+48+8>>2]=c[q+8>>2],c[B+184+48+12>>2]=c[q+12>>2],c[B+184>>2]=c[k+4>>2],c[B+184+4>>2]=c[k+4+4>>2],c[B+184+8>>2]=c[k+4+8>>2],c[B+184+12>>2]=c[k+4+12>>2],c[B+184+16>>2]=c[k+20>>2],c[B+184+16+4>>2]=c[k+20+4>>2],c[B+184+16+8>>2]=c[k+20+8>>2],c[B+184+16+12>>2]=c[k+20+12>>2],c[B+184+32>>2]=c[k+36>>2],c[B+184+32+4>>2]=c[k+36+4>>2],c[B+184+32+8>>2]=c[k+36+8>>2],c[B+184+32+12>>2]=c[k+36+12>>2],Kd(d,B+248|0,k+4|0,B+184|0,B+368|0,0.0),z=+g[B+368+4>>2],z<1.0):0){l=z*(t-+g[k+52>>2]);m=z*(v-+g[k+56>>2]);n=z*(x-+g[k+60>>2]);o=-(m*+g[B+368+48>>2])-l*+g[r>>2]-n*+g[B+368+52>>2];p=c[d+24>>2]|0;p=Ob[c[(c[p>>2]|0)+12>>2]&63](p,k,c[B+368+76>>2]|0)|0;f=c[d+308>>2]|0;if((f|0)==(c[d+312>>2]|0)?(A=f|0?f<<1:1,(f|0)<(A|0)):0){if(!A)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((A<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[d+308>>2]|0}if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[d+316>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[d+316>>2]|0;if(h){if(a[d+320>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[d+308>>2]|0}c[d+316>>2]=0}a[d+320>>0]=1;c[d+316>>2]=j;c[d+312>>2]=A}c[(c[d+316>>2]|0)+(f<<2)>>2]=p;c[d+308>>2]=f+1;l=l+ +g[k+52>>2];m=m+ +g[k+56>>2];n=n+ +g[k+60>>2];j=c[B+368+76>>2]|0;N=+g[j+4>>2];M=+g[j+20>>2];L=+g[j+36>>2];K=+g[j+8>>2];J=+g[j+24>>2];I=+g[j+40>>2];H=+g[j+12>>2];F=+g[j+28>>2];D=+g[j+44>>2];G=-+g[j+52>>2];E=-+g[j+56>>2];C=-+g[j+60>>2];c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0;g[B+16>>2]=l*N+m*M+n*L+(N*G+M*E+L*C);g[B+20>>2]=l*K+m*J+n*I+(K*G+J*E+I*C);g[B+24>>2]=l*H+m*F+n*D+(H*G+F*E+D*C);g[B+28>>2]=0.0;c[B+64>>2]=c[r>>2];c[B+64+4>>2]=c[r+4>>2];c[B+64+8>>2]=c[r+8>>2];c[B+64+12>>2]=c[r+12>>2];g[B+80>>2]=o;g[B+84>>2]=0.0;g[B+88>>2]=0.0;g[B+92>>2]=0.0;c[B+112>>2]=0;a[B+116>>0]=0;c[B+120>>2]=0;c[B+120+4>>2]=0;c[B+120+8>>2]=0;c[B+120+12>>2]=0;c[B+120+16>>2]=0;c[B+120+20>>2]=0;c[B+120+24>>2]=0;c[B+120+28>>2]=0;j=_e(p,B)|0;g[p+4+(j*184|0)+92>>2]=0.0;o=+g[k+224>>2]*+g[(c[B+368+76>>2]|0)+224>>2];o=o<-10.0?-10.0:o;g[p+4+(j*184|0)+84>>2]=o>10.0?10.0:o;c[p+4+(j*184|0)+48>>2]=c[k+52>>2];c[p+4+(j*184|0)+48+4>>2]=c[k+52+4>>2];c[p+4+(j*184|0)+48+8>>2]=c[k+52+8>>2];c[p+4+(j*184|0)+48+12>>2]=c[k+52+12>>2];g[p+4+(j*184|0)+32>>2]=l;g[p+4+(j*184|0)+36>>2]=m;g[p+4+(j*184|0)+40>>2]=n;g[p+4+(j*184|0)+44>>2]=0.0}f=c[2357]|0;p=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=p;if(!p){if(c[f+4>>2]|0){tb(B+368|0,0)|0;p=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[p+4>>2]|0)+(((c[B+368>>2]|0)-(c[p>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break b;f=c[2357]|0}c[2357]=c[f+20>>2]}}}while(0);s=s+1|0;if((s|0)>=(c[d+232>>2]|0))break a}}while(0);f=c[2357]|0;A=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=A;do if(!A){if(c[f+4>>2]|0){tb(B+368|0,0)|0;A=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[A+4>>2]|0)+(((c[B+368>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2357]|0}c[2357]=c[f+20>>2]}while(0);Ab[c[(c[d>>2]|0)+44>>2]&255](d);Ab[c[(c[d>>2]|0)+148>>2]&255](d);g[d+104>>2]=e;Cb[c[(c[d>>2]|0)+152>>2]&127](d,d+92|0);zb[c[(c[d>>2]|0)+144>>2]&31](d,e);li(12327);if((c[d+280>>2]|0)>0){f=0;do{A=c[(c[d+288>>2]|0)+(f<<2)>>2]|0;kc[c[(c[A>>2]|0)+8>>2]&7](A,d,e);f=f+1|0}while((f|0)<(c[d+280>>2]|0))}f=c[2357]|0;A=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=A;do if(!A){if(c[f+4>>2]|0){tb(B+368|0,0)|0;A=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[A+4>>2]|0)+(((c[B+368>>2]|0)-(c[A>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2357]|0}c[2357]=c[f+20>>2]}while(0);zb[c[(c[d>>2]|0)+156>>2]&31](d,e);f=c[d+80>>2]|0;if(f|0)zb[f&31](d,e);f=c[2357]|0;d=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=d;if(d|0){i=B;return}do if(c[f+4>>2]|0){tb(B+368|0,0)|0;d=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[B+368+4>>2]|0)-(c[d+4>>2]|0)+(((c[B+368>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[f+16>>2]|0)){f=c[2357]|0;break}else{i=B;return}}while(0);c[2357]=c[f+20>>2];i=B;return}function bd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0;x=i;i=i+784|0;c[x+168+8>>2]=0;c[x+168+12>>2]=1065353216;c[x+168+16>>2]=1065353216;c[x+168+20>>2]=1065353216;g[x+168+24>>2]=0.0;c[x+168>>2]=6672;c[x+168+4>>2]=8;g[x+168+28>>2]=0.0;g[x+168+44>>2]=0.0;v=c[e+4>>2]|0;w=c[e+12>>2]|0;h=c[v+4>>2]|0;if((h|0)<20){c[x+600>>2]=3708;c[x+600+168>>2]=0;g[x+600+172>>2]=0.0;c[x+600+164>>2]=c[f+4>>2];g[x+240+308>>2]=9.999999747378752e-05;a[x+240+332>>0]=0;c[x+224>>2]=4960;c[x+224+4>>2]=x+240;c[x+224+8>>2]=x+168;c[x+224+12>>2]=v;c[x+152>>2]=9140;c[x+152+4>>2]=x+240;c[x+152+8>>2]=x+168;c[x+152+12>>2]=v;v=(c[f+16>>2]&4|0)==0?x+152|0:x+224|0;if((Tb[c[(c[v>>2]|0)+8>>2]&3](v,b,d,w,w,x+600|0)|0?(j=x+600+132|0,k=+g[j>>2],l=+g[x+600+136>>2],m=+g[x+600+140>>2],k*k+l*l+m*m>9.999999747378752e-05):0)?(n=+g[x+600+164>>2],n<+g[f+4>>2]):0){u=1.0/+O(+(k*k+l*l+m*m));g[j>>2]=k*u;g[x+600+136>>2]=l*u;g[x+600+140>>2]=m*u;c[x+120>>2]=c[e+8>>2];c[x+120+4>>2]=0;c[x+120+8>>2]=c[j>>2];c[x+120+8+4>>2]=c[j+4>>2];c[x+120+8+8>>2]=c[j+8>>2];c[x+120+8+12>>2]=c[j+12>>2];g[x+120+24>>2]=n;+_b[c[(c[f>>2]|0)+12>>2]&15](f,x+120|0,1)}i=x;return}if((h+-21|0)>>>0>=9){if((h|0)!=31){i=x;return}h=c[v+64>>2]|0;e=c[e+8>>2]|0;c[x+600>>2]=5804;c[x+600+4>>2]=e;c[x+600+8>>2]=v;c[x+600+12>>2]=w;c[x+600+16>>2]=b;c[x+600+20>>2]=d;c[x+600+24>>2]=f;if(!h){h=c[v+16>>2]|0;if((h|0)>0){j=0;do{Vf(x+600|0,j);j=j+1|0}while((j|0)<(h|0))}}else{p=+g[w+48>>2];B=+g[b+48>>2]-p;r=+g[w+52>>2];A=+g[b+52>>2]-r;t=+g[w+56>>2];z=+g[b+56>>2]-t;y=+g[w>>2];k=+g[w+16>>2];l=+g[w+32>>2];m=+g[w+4>>2];n=+g[w+20>>2];o=+g[w+36>>2];q=+g[w+8>>2];s=+g[w+24>>2];u=+g[w+40>>2];g[x+240>>2]=B*y+A*k+z*l;g[x+240+4>>2]=B*m+A*n+z*o;g[x+240+8>>2]=B*q+A*s+z*u;g[x+240+12>>2]=0.0;p=+g[d+48>>2]-p;r=+g[d+52>>2]-r;t=+g[d+56>>2]-t;g[x+224>>2]=p*y+r*k+t*l;g[x+224+4>>2]=p*m+r*n+t*o;g[x+224+8>>2]=p*q+r*s+t*u;g[x+224+12>>2]=0.0;ff(c[h>>2]|0,x+240|0,x+224|0,x+600|0)}i=x;return}E=+g[w>>2];D=+g[w+16>>2];k=+g[w+32>>2];C=+g[w+4>>2];o=+g[w+20>>2];l=+g[w+36>>2];A=+g[w+8>>2];B=+g[w+24>>2];m=+g[w+40>>2];p=-+g[w+48>>2];y=-+g[w+52>>2];z=-+g[w+56>>2];q=+g[b+48>>2];r=+g[b+52>>2];n=+g[b+56>>2];g[x+152>>2]=E*p+D*y+k*z+(E*q+D*r+k*n);g[x+152+4>>2]=C*p+o*y+l*z+(C*q+o*r+l*n);g[x+152+8>>2]=A*p+B*y+m*z+(A*q+B*r+m*n);g[x+152+12>>2]=0.0;t=+g[d+48>>2];u=+g[d+52>>2];s=+g[d+56>>2];k=E*p+D*y+k*z+(E*t+D*u+k*s);l=C*p+o*y+l*z+(C*t+o*u+l*s);m=A*p+B*y+m*z+(A*t+B*u+m*s);g[x+120>>2]=k;g[x+120+4>>2]=l;g[x+120+8>>2]=m;g[x+120+12>>2]=0.0;switch(c[v+4>>2]|0){case 21:{h=c[e+8>>2]|0;e=c[f+16>>2]|0;c[x+4>>2]=c[x+152>>2];c[x+4+4>>2]=c[x+152+4>>2];c[x+4+8>>2]=c[x+152+8>>2];c[x+4+12>>2]=c[x+152+12>>2];c[x+20>>2]=c[x+120>>2];c[x+20+4>>2]=c[x+120+4>>2];c[x+20+8>>2]=c[x+120+8>>2];c[x+20+12>>2]=c[x+120+12>>2];c[x+36>>2]=e;g[x+40>>2]=1.0;c[x>>2]=5756;c[x+44>>2]=f;c[x+48>>2]=h;c[x+52>>2]=v;c[x+56>>2]=c[w>>2];c[x+56+4>>2]=c[w+4>>2];c[x+56+8>>2]=c[w+8>>2];c[x+56+12>>2]=c[w+12>>2];c[x+72>>2]=c[w+16>>2];c[x+72+4>>2]=c[w+16+4>>2];c[x+72+8>>2]=c[w+16+8>>2];c[x+72+12>>2]=c[w+16+12>>2];c[x+88>>2]=c[w+32>>2];c[x+88+4>>2]=c[w+32+4>>2];c[x+88+8>>2]=c[w+32+8>>2];c[x+88+12>>2]=c[w+32+12>>2];c[x+104>>2]=c[w+48>>2];c[x+104+4>>2]=c[w+48+4>>2];c[x+104+8>>2]=c[w+48+8>>2];c[x+104+12>>2]=c[w+48+12>>2];c[x+40>>2]=c[f+4>>2];h=c[v+48>>2]|0;c[x+224>>2]=6884;c[x+224+4>>2]=h;c[x+224+8>>2]=x;h=c[v+52>>2]|0;c[x+600>>2]=0;c[x+600+4>>2]=0;c[x+600+8>>2]=0;c[x+600+12>>2]=0;c[x+240>>2]=0;c[x+240+4>>2]=0;c[x+240+8>>2]=0;c[x+240+12>>2]=0;if(!(a[h+60>>0]|0))Re(h,x+224|0,x+152|0,k,l,m,x+600|0,x+240|0);else ze(h,x+224|0,x+152|0,k,l,m,x+600|0,x+240|0,c[h+56>>2]|0);break}case 25:{e=c[e+8>>2]|0;d=c[f+16>>2]|0;c[x+600+4>>2]=c[x+152>>2];c[x+600+4+4>>2]=c[x+152+4>>2];c[x+600+4+8>>2]=c[x+152+8>>2];c[x+600+4+12>>2]=c[x+152+12>>2];c[x+600+20>>2]=c[x+120>>2];c[x+600+20+4>>2]=c[x+120+4>>2];c[x+600+20+8>>2]=c[x+120+8>>2];c[x+600+20+12>>2]=c[x+120+12>>2];c[x+600+36>>2]=d;g[x+600+40>>2]=1.0;c[x+600>>2]=5756;c[x+600+44>>2]=f;c[x+600+48>>2]=e;c[x+600+52>>2]=v;c[x+600+56>>2]=c[w>>2];c[x+600+56+4>>2]=c[w+4>>2];c[x+600+56+8>>2]=c[w+8>>2];c[x+600+56+12>>2]=c[w+12>>2];c[x+600+72>>2]=c[w+16>>2];c[x+600+72+4>>2]=c[w+16+4>>2];c[x+600+72+8>>2]=c[w+16+8>>2];c[x+600+72+12>>2]=c[w+16+12>>2];c[x+600+88>>2]=c[w+32>>2];c[x+600+88+4>>2]=c[w+32+4>>2];c[x+600+88+8>>2]=c[w+32+8>>2];c[x+600+88+12>>2]=c[w+32+12>>2];c[x+600+104>>2]=c[w+48>>2];c[x+600+104+4>>2]=c[w+48+4>>2];c[x+600+104+8>>2]=c[w+48+8>>2];c[x+600+104+12>>2]=c[w+48+12>>2];c[x+600+40>>2]=c[f+4>>2];mc[c[(c[v>>2]|0)+144>>2]&127](v,x+600|0,x+152|0,x+120|0);break}default:{H=+g[w>>2];G=+g[w+16>>2];m=+g[w+32>>2];F=+g[w+4>>2];y=+g[w+20>>2];z=+g[w+36>>2];D=+g[w+8>>2];E=+g[w+24>>2];k=+g[w+40>>2];A=-+g[w+48>>2];B=-+g[w+52>>2];C=-+g[w+56>>2];o=H*A+G*B+m*C+(H*q+G*r+m*n);p=F*A+y*B+z*C+(F*q+y*r+z*n);l=D*A+E*B+k*C+(D*q+E*r+k*n);m=H*A+G*B+m*C+(H*t+G*u+m*s);n=F*A+y*B+z*C+(F*t+y*u+z*s);k=D*A+E*B+k*C+(D*t+E*u+k*s);e=c[e+8>>2]|0;d=c[f+16>>2]|0;g[x+600+4>>2]=o;g[x+600+8>>2]=p;g[x+600+12>>2]=l;g[x+600+16>>2]=0.0;g[x+600+20>>2]=m;g[x+600+24>>2]=n;g[x+600+28>>2]=k;g[x+600+32>>2]=0.0;c[x+600+36>>2]=d;g[x+600+40>>2]=1.0;c[x+600>>2]=5780;c[x+600+44>>2]=f;c[x+600+48>>2]=e;c[x+600+52>>2]=v;c[x+600+56>>2]=c[w>>2];c[x+600+56+4>>2]=c[w+4>>2];c[x+600+56+8>>2]=c[w+8>>2];c[x+600+56+12>>2]=c[w+12>>2];c[x+600+72>>2]=c[w+16>>2];c[x+600+72+4>>2]=c[w+16+4>>2];c[x+600+72+8>>2]=c[w+16+8>>2];c[x+600+72+12>>2]=c[w+16+12>>2];c[x+600+88>>2]=c[w+32>>2];c[x+600+88+4>>2]=c[w+32+4>>2];c[x+600+88+8>>2]=c[w+32+8>>2];c[x+600+88+12>>2]=c[w+32+12>>2];c[x+600+104>>2]=c[w+48>>2];c[x+600+104+4>>2]=c[w+48+4>>2];c[x+600+104+8>>2]=c[w+48+8>>2];c[x+600+104+12>>2]=c[w+48+12>>2];c[x+600+40>>2]=c[f+4>>2];g[x+240>>2]=o;g[x+240+4>>2]=p;g[x+240+8>>2]=l;g[x+240+12>>2]=0.0;if(m<o)g[x+240>>2]=m;if(n<p)g[x+240+4>>2]=n;if(k<l)g[x+240+8>>2]=k;g[x+224>>2]=o;g[x+224+4>>2]=p;g[x+224+8>>2]=l;g[x+224+12>>2]=0.0;if(o<m)g[x+224>>2]=m;if(p<n)g[x+224+4>>2]=n;if(l<k)g[x+224+8>>2]=k;mc[c[(c[v>>2]|0)+64>>2]&127](v,x+600|0,x+240|0,x+224|0)}}i=x;return}function cd(b,d,e,f,h,i,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;o=c[b+48>>2]|0;q=c[b+28>>2]|0;r=c[b+68>>2]|0;if(c[l+64>>2]&1|0){if((o|0)>0){f=c[b+136>>2]|0;m=c[b+192>>2]|0;p=0;do{h=f+(p<<2)|0;i=c[h>>2]|0;p=p+1|0;m=(_(m,1664525)|0)+1013904223|0;if(p>>>0<65537){e=m>>>16^m;if(p>>>0<257)if(p>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);if(p>>>0<5)if(p>>>0<3)e=(e>>>2^e)>>>1^(e>>>2^e);else e=e>>>2^e}else e=e>>>8^e}else e=m;e=f+(((e>>>0)%(p>>>0)|0)<<2)|0;c[h>>2]=c[e>>2];c[e>>2]=i}while((p|0)!=(o|0));c[b+192>>2]=m}if((c[l+20>>2]|0)>(d|0)){if((q|0)>0){f=c[b+116>>2]|0;m=c[b+192>>2]|0;o=0;do{h=f+(o<<2)|0;i=c[h>>2]|0;o=o+1|0;m=(_(m,1664525)|0)+1013904223|0;if(o>>>0<65537){e=m>>>16^m;if(o>>>0<257)if(o>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);if(o>>>0<5)if(o>>>0<3)e=(e>>>2^e)>>>1^(e>>>2^e);else e=e>>>2^e}else e=e>>>8^e}else e=m;p=f+(((e>>>0)%(o>>>0)|0)<<2)|0;c[h>>2]=c[p>>2];c[p>>2]=i}while((o|0)!=(q|0));c[b+192>>2]=m}if((r|0)>0){f=c[b+156>>2]|0;m=c[b+192>>2]|0;o=0;do{h=f+(o<<2)|0;i=c[h>>2]|0;o=o+1|0;m=(_(m,1664525)|0)+1013904223|0;if(o>>>0<65537){e=m>>>16^m;if(o>>>0<257)if(o>>>0<17){e=(e>>>8^e)>>>4^(e>>>8^e);if(o>>>0<5)if(o>>>0<3)e=(e>>>2^e)>>>1^(e>>>2^e);else e=e>>>2^e}else e=e>>>8^e}else e=m;q=f+(((e>>>0)%(o>>>0)|0)<<2)|0;c[h>>2]=c[q>>2];c[q>>2]=i}while((o|0)!=(r|0));c[b+192>>2]=m}}}e=c[b+48>>2]|0;if(!(c[l+64>>2]&256)){if((e|0)>0){i=0;do{f=c[(c[b+136>>2]|0)+(i<<2)>>2]|0;h=c[b+56>>2]|0;if((c[h+(f*152|0)+136>>2]|0)>(d|0)){e=c[b+16>>2]|0;zg(e+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,e+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);e=c[b+48>>2]|0}i=i+1|0}while((i|0)<(e|0))}if((c[l+20>>2]|0)<=(d|0))return 0.0;if((k|0)>0){h=0;do{e=j+(h<<2)|0;f=c[e>>2]|0;if(a[f+20>>0]|0){d=bk(b,c[f+28>>2]|0,+g[l+12>>2])|0;t=bk(b,c[(c[e>>2]|0)+32>>2]|0,+g[l+12>>2])|0;s=c[b+16>>2]|0;r=c[e>>2]|0;hc[c[(c[r>>2]|0)+24>>2]&15](r,s+(d*244|0)|0,s+(t*244|0)|0,+g[l+12>>2])}h=h+1|0}while((h|0)!=(k|0))}e=c[b+28>>2]|0;if((e|0)>0){f=0;do{l=c[(c[b+116>>2]|0)+(f<<2)>>2]|0;k=c[b+36>>2]|0;j=c[b+16>>2]|0;Mg(j+((c[k+(l*152|0)+144>>2]|0)*244|0)|0,j+((c[k+(l*152|0)+148>>2]|0)*244|0)|0,k+(l*152|0)|0);f=f+1|0}while((f|0)!=(e|0))}e=c[b+68>>2]|0;if((e|0)>0){i=0;do{f=c[(c[b+156>>2]|0)+(i<<2)>>2]|0;h=c[b+76>>2]|0;n=+g[(c[b+36>>2]|0)+((c[h+(f*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){n=n*+g[h+(f*152|0)+104>>2];g[h+(f*152|0)+120>>2]=-n;g[h+(f*152|0)+124>>2]=n;l=c[b+16>>2]|0;zg(l+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,l+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0)}i=i+1|0}while((i|0)!=(e|0))}e=c[b+88>>2]|0;if((e|0)<=0)return 0.0;h=0;do{f=c[b+96>>2]|0;n=+g[(c[b+36>>2]|0)+((c[f+(h*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=+g[f+(h*152|0)+104>>2];n=n*u>u?u:n*u;g[f+(h*152|0)+120>>2]=-n;g[f+(h*152|0)+124>>2]=n;l=c[b+16>>2]|0;zg(l+((c[f+(h*152|0)+144>>2]|0)*244|0)|0,l+((c[f+(h*152|0)+148>>2]|0)*244|0)|0,f+(h*152|0)|0)}h=h+1|0}while((h|0)!=(e|0));return 0.0}if((e|0)>0){i=0;do{f=c[(c[b+136>>2]|0)+(i<<2)>>2]|0;h=c[b+56>>2]|0;if((c[h+(f*152|0)+136>>2]|0)>(d|0)){e=c[b+16>>2]|0;zg(e+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,e+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);e=c[b+48>>2]|0}i=i+1|0}while((i|0)<(e|0))}if((c[l+20>>2]|0)<=(d|0))return 0.0;if((k|0)>0){h=0;do{e=j+(h<<2)|0;f=c[e>>2]|0;if(a[f+20>>0]|0){q=bk(b,c[f+28>>2]|0,+g[l+12>>2])|0;d=bk(b,c[(c[e>>2]|0)+32>>2]|0,+g[l+12>>2])|0;r=c[b+16>>2]|0;p=c[e>>2]|0;hc[c[(c[p>>2]|0)+24>>2]&15](p,r+(q*244|0)|0,r+(d*244|0)|0,+g[l+12>>2])}h=h+1|0}while((h|0)!=(k|0))}e=c[l+64>>2]|0;o=c[b+28>>2]|0;if(e&512|0){if((o|0)<=0)return 0.0;m=0;do{f=c[(c[b+116>>2]|0)+(m<<2)>>2]|0;h=c[b+36>>2]|0;i=c[b+16>>2]|0;Mg(i+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,i+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0);n=+g[h+(f*152|0)+100>>2];f=_(m,(e>>>4&1)+1|0)|0;h=c[(c[b+156>>2]|0)+(f<<2)>>2]|0;i=c[b+76>>2]|0;if(n>0.0){u=n*+g[i+(h*152|0)+104>>2];g[i+(h*152|0)+120>>2]=-u;g[i+(h*152|0)+124>>2]=u;k=c[b+16>>2]|0;zg(k+((c[i+(h*152|0)+144>>2]|0)*244|0)|0,k+((c[i+(h*152|0)+148>>2]|0)*244|0)|0,i+(h*152|0)|0)}if(c[l+64>>2]&16|0?(s=c[(c[b+156>>2]|0)+(f+1<<2)>>2]|0,t=c[b+76>>2]|0,n>0.0):0){u=n*+g[t+(s*152|0)+104>>2];g[t+(s*152|0)+120>>2]=-u;g[t+(s*152|0)+124>>2]=u;k=c[b+16>>2]|0;zg(k+((c[t+(s*152|0)+144>>2]|0)*244|0)|0,k+((c[t+(s*152|0)+148>>2]|0)*244|0)|0,t+(s*152|0)|0)}m=m+1|0}while((m|0)!=(o|0));return 0.0}if((o|0)>0){e=0;do{l=c[(c[b+116>>2]|0)+(e<<2)>>2]|0;k=c[b+36>>2]|0;j=c[b+16>>2]|0;Mg(j+((c[k+(l*152|0)+144>>2]|0)*244|0)|0,j+((c[k+(l*152|0)+148>>2]|0)*244|0)|0,k+(l*152|0)|0);e=e+1|0}while((e|0)!=(o|0))}e=c[b+68>>2]|0;if((e|0)>0){i=0;do{f=c[(c[b+156>>2]|0)+(i<<2)>>2]|0;h=c[b+76>>2]|0;n=+g[(c[b+36>>2]|0)+((c[h+(f*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=n*+g[h+(f*152|0)+104>>2];g[h+(f*152|0)+120>>2]=-u;g[h+(f*152|0)+124>>2]=u;l=c[b+16>>2]|0;zg(l+((c[h+(f*152|0)+144>>2]|0)*244|0)|0,l+((c[h+(f*152|0)+148>>2]|0)*244|0)|0,h+(f*152|0)|0)}i=i+1|0}while((i|0)!=(e|0))}e=c[b+88>>2]|0;if((e|0)<=0)return 0.0;h=0;do{f=c[b+96>>2]|0;n=+g[(c[b+36>>2]|0)+((c[f+(h*152|0)+140>>2]|0)*152|0)+100>>2];if(n>0.0){u=+g[f+(h*152|0)+104>>2];u=n*u>u?u:n*u;g[f+(h*152|0)+120>>2]=-u;g[f+(h*152|0)+124>>2]=u;l=c[b+16>>2]|0;zg(l+((c[f+(h*152|0)+144>>2]|0)*244|0)|0,l+((c[f+(h*152|0)+148>>2]|0)*244|0)|0,f+(h*152|0)|0)}h=h+1|0}while((h|0)!=(e|0));return 0.0}function dd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0;r=i;i=i+80|0;j=c[b+28>>2]|0;d=c[f+64>>2]|0;a:do if((d&4|0)!=0&(j|0)>0){l=c[b+36>>2]|0;h=c[b+76>>2]|0;if(!(d&16)){d=0;while(1){m=c[l+(d*152|0)+132>>2]|0;c[m+120>>2]=c[l+(d*152|0)+100>>2];c[m+124>>2]=c[h+((c[l+(d*152|0)+140>>2]|0)*152|0)+100>>2];d=d+1|0;if((d|0)==(j|0))break a}}else{e=h;d=0}while(1){m=c[l+(d*152|0)+132>>2]|0;c[m+120>>2]=c[l+(d*152|0)+100>>2];s=c[l+(d*152|0)+140>>2]|0;c[m+124>>2]=c[h+(s*152|0)+100>>2];c[m+128>>2]=c[e+((s+1|0)*152|0)+100>>2];d=d+1|0;if((d|0)==(j|0))break a;e=c[b+76>>2]|0}}while(0);e=c[b+48>>2]|0;if((e|0)>0){m=0;do{h=c[b+56>>2]|0;j=c[h+(m*152|0)+132>>2]|0;l=c[j+44>>2]|0;d=h+(m*152|0)+100|0;if(l|0){q=+g[d>>2];s=c[j+28>>2]|0;p=1.0/+g[f+12>>2];o=q*+g[h+(m*152|0)+20>>2]*+g[s+352>>2]*p;n=q*+g[h+(m*152|0)+24>>2]*+g[s+356>>2]*p;g[l>>2]=+g[l>>2]+ +g[h+(m*152|0)+16>>2]*q*+g[s+348>>2]*p;g[l+4>>2]=o+ +g[l+4>>2];g[l+8>>2]=n+ +g[l+8>>2];n=+g[d>>2];s=c[j+32>>2]|0;o=1.0/+g[f+12>>2];p=n*+g[h+(m*152|0)+52>>2]*+g[s+352>>2]*o;q=n*+g[h+(m*152|0)+56>>2]*+g[s+356>>2]*o;g[l+32>>2]=+g[l+32>>2]+ +g[h+(m*152|0)+48>>2]*n*+g[s+348>>2]*o;g[l+36>>2]=p+ +g[l+36>>2];g[l+40>>2]=q+ +g[l+40>>2];s=c[j+28>>2]|0;q=+g[d>>2];p=1.0/+g[f+12>>2];o=+g[h+(m*152|0)+4>>2]*+g[s+548>>2]*q*p;n=q*+g[h+(m*152|0)+8>>2]*+g[s+552>>2]*p;g[l+16>>2]=+g[l+16>>2]+ +g[h+(m*152|0)>>2]*+g[s+544>>2]*q*p;g[l+20>>2]=o+ +g[l+20>>2];g[l+24>>2]=n+ +g[l+24>>2];s=c[j+32>>2]|0;n=+g[d>>2];o=1.0/+g[f+12>>2];p=+g[h+(m*152|0)+36>>2]*+g[s+548>>2]*n*o;q=n*+g[h+(m*152|0)+40>>2]*+g[s+552>>2]*o;g[l+48>>2]=+g[l+48>>2]+ +g[h+(m*152|0)+32>>2]*+g[s+544>>2]*n*o;g[l+52>>2]=p+ +g[l+52>>2];g[l+56>>2]=q+ +g[l+56>>2]}s=c[d>>2]|0;c[j+36>>2]=s;q=+N(+(c[k>>2]=s,+g[k>>2]));if(q>=+g[j+16>>2])a[j+20>>0]=0;m=m+1|0}while((m|0)!=(e|0))}d=c[b+8>>2]|0;if((d|0)>0){l=0;do{e=c[b+16>>2]|0;h=e+(l*244|0)|0;j=c[e+(l*244|0)+240>>2]|0;if(j){if(!(c[f+44>>2]|0)){h=e+(l*244|0)+176|0;o=+g[e+(l*244|0)+64>>2]+ +g[h>>2];g[h>>2]=o;h=e+(l*244|0)+180|0;p=+g[e+(l*244|0)+68>>2]+ +g[h>>2];g[h>>2]=p;h=e+(l*244|0)+184|0;n=+g[e+(l*244|0)+72>>2]+ +g[h>>2];g[h>>2]=n;h=e+(l*244|0)+192|0;g[h>>2]=+g[e+(l*244|0)+80>>2]+ +g[h>>2];h=e+(l*244|0)+196|0;g[h>>2]=+g[e+(l*244|0)+84>>2]+ +g[h>>2];h=e+(l*244|0)+200|0;g[h>>2]=+g[e+(l*244|0)+88>>2]+ +g[h>>2];h=e;d=j}else{o=+g[f+12>>2];p=+g[f+52>>2];s=e+(l*244|0)+176|0;g[s>>2]=+g[e+(l*244|0)+64>>2]+ +g[s>>2];s=e+(l*244|0)+180|0;g[s>>2]=+g[e+(l*244|0)+68>>2]+ +g[s>>2];s=e+(l*244|0)+184|0;g[s>>2]=+g[e+(l*244|0)+72>>2]+ +g[s>>2];s=e+(l*244|0)+192|0;g[s>>2]=+g[e+(l*244|0)+80>>2]+ +g[s>>2];s=e+(l*244|0)+196|0;g[s>>2]=+g[e+(l*244|0)+84>>2]+ +g[s>>2];s=e+(l*244|0)+200|0;g[s>>2]=+g[e+(l*244|0)+88>>2]+ +g[s>>2];q=+g[e+(l*244|0)+144>>2];n=+g[e+(l*244|0)+148>>2];if((((!(q!=0.0|n!=0.0)?!(+g[e+(l*244|0)+152>>2]!=0.0):0)?!(+g[e+(l*244|0)+160>>2]!=0.0):0)?!(+g[e+(l*244|0)+164>>2]!=0.0):0)?!(+g[e+(l*244|0)+168>>2]!=0.0):0)d=j;else{u=+g[e+(l*244|0)+164>>2]*p;t=+g[e+(l*244|0)+168>>2]*p;g[r>>2]=+g[e+(l*244|0)+160>>2]*p;g[r+4>>2]=u;g[r+8>>2]=t;g[r+12>>2]=0.0;Zg(h,q,n,+g[e+(l*244|0)+152>>2],r,o,r+16|0);c[h>>2]=c[r+16>>2];c[h+4>>2]=c[r+16+4>>2];c[h+8>>2]=c[r+16+8>>2];c[h+12>>2]=c[r+16+12>>2];d=e+(l*244|0)+16|0;c[d>>2]=c[r+16+16>>2];c[d+4>>2]=c[r+16+16+4>>2];c[d+8>>2]=c[r+16+16+8>>2];c[d+12>>2]=c[r+16+16+12>>2];d=e+(l*244|0)+32|0;c[d>>2]=c[r+16+32>>2];c[d+4>>2]=c[r+16+32+4>>2];c[d+8>>2]=c[r+16+32+8>>2];c[d+12>>2]=c[r+16+32+12>>2];d=e+(l*244|0)+48|0;c[d>>2]=c[r+16+48>>2];c[d+4>>2]=c[r+16+48+4>>2];c[d+8>>2]=c[r+16+48+8>>2];c[d+12>>2]=c[r+16+48+12>>2];d=c[b+16>>2]|0;e=d;d=c[d+(l*244|0)+240>>2]|0}h=e;o=+g[e+(l*244|0)+176>>2];p=+g[e+(l*244|0)+180>>2];n=+g[e+(l*244|0)+184>>2]}u=o+ +g[h+(l*244|0)+208>>2];t=p+ +g[h+(l*244|0)+212>>2];q=n+ +g[h+(l*244|0)+216>>2];m=d+260|0;c[m>>2]=(c[m>>2]|0)+1;g[d+312>>2]=u;g[d+316>>2]=t;g[d+320>>2]=q;g[d+324>>2]=0.0;m=c[b+16>>2]|0;s=c[m+(l*244|0)+240>>2]|0;q=+g[m+(l*244|0)+192>>2]+ +g[m+(l*244|0)+224>>2];t=+g[m+(l*244|0)+196>>2]+ +g[m+(l*244|0)+228>>2];u=+g[m+(l*244|0)+200>>2]+ +g[m+(l*244|0)+232>>2];c[s+260>>2]=(c[s+260>>2]|0)+1;g[s+328>>2]=q;g[s+332>>2]=t;g[s+336>>2]=u;g[s+340>>2]=0.0;if(c[f+44>>2]|0){m=c[b+16>>2]|0;s=c[m+(l*244|0)+240>>2]|0;j=m+(l*244|0)|0;c[s+260>>2]=(c[s+260>>2]|0)+1;c[s+4>>2]=c[j>>2];c[s+4+4>>2]=c[j+4>>2];c[s+4+8>>2]=c[j+8>>2];c[s+4+12>>2]=c[j+12>>2];j=m+(l*244|0)+16|0;c[s+20>>2]=c[j>>2];c[s+20+4>>2]=c[j+4>>2];c[s+20+8>>2]=c[j+8>>2];c[s+20+12>>2]=c[j+12>>2];j=m+(l*244|0)+32|0;c[s+36>>2]=c[j>>2];c[s+36+4>>2]=c[j+4>>2];c[s+36+8>>2]=c[j+8>>2];c[s+36+12>>2]=c[j+12>>2];m=m+(l*244|0)+48|0;c[s+52>>2]=c[m>>2];c[s+52+4>>2]=c[m+4>>2];c[s+52+8>>2]=c[m+8>>2];c[s+52+12>>2]=c[m+12>>2]}c[(c[(c[b+16>>2]|0)+(l*244|0)+240>>2]|0)+212>>2]=-1;d=c[b+8>>2]|0}l=l+1|0}while((l|0)<(d|0))}if((c[b+28>>2]|0)<0?(c[b+32>>2]|0)<0:0){d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+32>>2]=0}c[b+28>>2]=0;if((c[b+48>>2]|0)<0?(c[b+52>>2]|0)<0:0){d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+52>>2]=0}c[b+48>>2]=0;if((c[b+68>>2]|0)<0?(c[b+72>>2]|0)<0:0){d=c[b+76>>2]|0;if(d|0){if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=0;c[b+72>>2]=0}c[b+68>>2]=0;if((c[b+88>>2]|0)<0?(c[b+92>>2]|0)<0:0){d=c[b+96>>2]|0;if(d|0){if(a[b+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+96>>2]=0}a[b+100>>0]=1;c[b+96>>2]=0;c[b+92>>2]=0}c[b+88>>2]=0;if((c[b+8>>2]|0)>=0){c[b+8>>2]=0;i=r;return 0.0}if((c[b+12>>2]|0)>=0){c[b+8>>2]=0;i=r;return 0.0}d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0;c[b+8>>2]=0;i=r;return 0.0}function ed(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0;u=i;i=i+704|0;c[u+480+8>>2]=0;c[u+480+12>>2]=1065353216;c[u+480+16>>2]=1065353216;c[u+480+20>>2]=1065353216;g[u+480+24>>2]=0.0;c[u+480>>2]=6672;c[u+480+4>>2]=8;g[u+480+28>>2]=0.0;g[u+480+44>>2]=0.0;g[u+416>>2]=1.0;m=u+416+4|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;c[m+12>>2]=0;g[u+416+20>>2]=1.0;n=u+416+24|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[u+416+40>>2]=1.0;g[u+416+44>>2]=0.0;c[u+416+48>>2]=c[a>>2];c[u+416+48+4>>2]=c[a+4>>2];c[u+416+48+8>>2]=c[a+8>>2];c[u+416+48+12>>2]=c[a+12>>2];a=e;l=a+36|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(l|0));c[u+536>>2]=b;c[u+536+4>>2]=u+480;H=+g[d>>2];G=+g[d+16>>2];F=+g[d+32>>2];E=+g[d+4>>2];D=+g[d+20>>2];C=+g[d+36>>2];s=+g[d+8>>2];q=+g[d+24>>2];o=+g[d+40>>2];g[u+536+8>>2]=H+G*0.0+F*0.0;g[u+536+12>>2]=E+D*0.0+C*0.0;g[u+536+16>>2]=s+q*0.0+o*0.0;g[u+536+20>>2]=0.0;g[u+536+24>>2]=H*0.0+G+F*0.0;g[u+536+28>>2]=E*0.0+D+C*0.0;g[u+536+32>>2]=s*0.0+q+o*0.0;g[u+536+36>>2]=0.0;g[u+536+40>>2]=H*0.0+G*0.0+F;g[u+536+44>>2]=E*0.0+D*0.0+C;g[u+536+48>>2]=s*0.0+q*0.0+o;g[u+536+52>>2]=0.0;o=+g[u+416+48>>2]-+g[d+48>>2];q=+g[u+416+52>>2]-+g[d+52>>2];s=+g[u+416+56>>2]-+g[d+56>>2];B=+g[u+416>>2];A=+g[u+416+16>>2];z=+g[u+416+32>>2];y=+g[m>>2];x=+g[u+416+20>>2];w=+g[u+416+36>>2];v=+g[u+416+8>>2];f=+g[n>>2];h=+g[u+416+40>>2];p=+g[d+8>>2];r=+g[d+24>>2];t=+g[d+40>>2];j=o*+g[d>>2]+q*+g[d+16>>2]+s*+g[d+32>>2];k=o*+g[d+4>>2]+q*+g[d+20>>2]+s*+g[d+36>>2];g[u+536+56>>2]=H*B+G*A+F*z;g[u+536+60>>2]=H*y+G*x+F*w;g[u+536+64>>2]=H*v+G*f+F*h;g[u+536+68>>2]=0.0;g[u+536+72>>2]=B*E+A*D+z*C;g[u+536+76>>2]=y*E+x*D+w*C;g[u+536+80>>2]=v*E+f*D+h*C;g[u+536+84>>2]=0.0;g[u+536+88>>2]=B*p+A*r+z*t;g[u+536+92>>2]=y*p+x*r+w*t;g[u+536+96>>2]=v*p+f*r+h*t;g[u+536+100>>2]=0.0;g[u+536+104>>2]=j;g[u+536+108>>2]=k;g[u+536+112>>2]=o*p+q*r+s*t;g[u+536+116>>2]=0.0;c[u+536+120>>2]=80;c[u+536+124>>2]=0;a=u+32+128|0;c[u+32+364>>2]=0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[u+32+376>>2]=2;c[u+32+368>>2]=0;g[u+32+144>>2]=0.0;c[u+16>>2]=1065353216;c[u+16+4>>2]=1065353216;c[u+16+8>>2]=1065353216;g[u+16+12>>2]=0.0;switch(Uc(u+32|0,u+536|0,u+16|0)|0){case 0:{a=c[u+32+372>>2]|0;if(!(c[a+32>>2]|0)){k=0.0;j=0.0;f=0.0;r=0.0;q=0.0;h=0.0}else{n=0;k=0.0;j=0.0;f=0.0;r=0.0;q=0.0;h=0.0;do{t=+g[a+16+(n<<2)>>2];l=c[u+536+120>>2]|0;I=c[u+536+124>>2]|0;m=(c[u+536>>2]|0)+(I>>1)|0;if(I&1)l=c[(c[m>>2]|0)+l>>2]|0;ic[l&127](u,m,c[a+(n<<2)>>2]|0);k=k+t*+g[u>>2];f=f+t*+g[u+4>>2];j=j+t*+g[u+8>>2];a=c[(c[u+32+372>>2]|0)+(n<<2)>>2]|0;o=-+g[a>>2];p=-+g[a+4>>2];s=-+g[a+8>>2];a=c[u+536+120>>2]|0;I=c[u+536+124>>2]|0;l=(c[u+536+4>>2]|0)+(I>>1)|0;if(I&1)a=c[(c[l>>2]|0)+a>>2]|0;G=+g[u+536+24>>2]*o+ +g[u+536+28>>2]*p+ +g[u+536+32>>2]*s;F=+g[u+536+40>>2]*o+ +g[u+536+44>>2]*p+ +g[u+536+48>>2]*s;g[u+664>>2]=+g[u+536+8>>2]*o+ +g[u+536+12>>2]*p+ +g[u+536+16>>2]*s;g[u+664+4>>2]=G;g[u+664+8>>2]=F;g[u+664+12>>2]=0.0;ic[a&127](u+680|0,l,u+664|0);F=+g[u+680>>2];G=+g[u+680+4>>2];H=+g[u+680+8>>2];r=r+t*(F*+g[u+536+56>>2]+G*+g[u+536+60>>2]+H*+g[u+536+64>>2]+ +g[u+536+104>>2]);h=h+t*(F*+g[u+536+72>>2]+G*+g[u+536+76>>2]+H*+g[u+536+80>>2]+ +g[u+536+108>>2]);q=q+t*(F*+g[u+536+88>>2]+G*+g[u+536+92>>2]+H*+g[u+536+96>>2]+ +g[u+536+112>>2]);n=n+1|0;a=c[u+32+372>>2]|0}while(n>>>0<(c[a+32>>2]|0)>>>0)}s=k*+g[d>>2]+f*+g[d+4>>2]+j*+g[d+8>>2]+ +g[d+48>>2];t=k*+g[d+16>>2]+f*+g[d+20>>2]+j*+g[d+24>>2]+ +g[d+52>>2];k=k*+g[d+32>>2]+f*+g[d+36>>2]+j*+g[d+40>>2]+ +g[d+56>>2];g[e+4>>2]=s;g[e+8>>2]=t;g[e+12>>2]=k;g[e+16>>2]=0.0;o=r*+g[d>>2]+h*+g[d+4>>2]+q*+g[d+8>>2]+ +g[d+48>>2];p=r*+g[d+16>>2]+h*+g[d+20>>2]+q*+g[d+24>>2]+ +g[d+52>>2];j=r*+g[d+32>>2]+h*+g[d+36>>2]+q*+g[d+40>>2]+ +g[d+56>>2];g[e+20>>2]=o;g[e+24>>2]=p;g[e+28>>2]=j;g[e+32>>2]=0.0;switch(c[b+4>>2]|0){case 8:{f=+g[b+28>>2]*+g[b+12>>2];break}case 0:{f=+g[b+44>>2];break}case 1:{f=+g[b+44>>2];break}case 13:{f=+g[b+44>>2];break}case 11:{f=+g[b+44>>2];break}case 10:{f=+g[b+44>>2];break}case 4:case 5:{f=+g[b+44>>2];break}default:f=+Sb[c[(c[b>>2]|0)+48>>2]&15](b)}switch(c[u+480+4>>2]|0){case 8:{h=+g[u+480+28>>2]*+g[u+480+12>>2];break}case 0:{h=+g[u+480+44>>2];break}case 1:{h=+g[u+480+44>>2];break}case 13:{h=+g[u+480+44>>2];break}case 11:{h=+g[u+480+44>>2];break}case 10:{h=+g[u+480+44>>2];break}case 4:case 5:{h=+g[u+480+44>>2];break}default:h=+Sb[c[(c[u+480>>2]|0)+48>>2]&15](u+480|0)}H=f+h;G=+O(+((o-s)*(o-s)+(p-t)*(p-t)+(j-k)*(j-k)));g[e+36>>2]=(o-s)*(1.0/G);g[e+40>>2]=(p-t)*(1.0/G);g[e+44>>2]=(j-k)*(1.0/G);g[e+48>>2]=0.0;g[e+4>>2]=H*(o-s)*(1.0/G)+ +g[e+4>>2];g[e+8>>2]=H*(p-t)*(1.0/G)+ +g[e+8>>2];g[e+12>>2]=H*(j-k)*(1.0/G)+ +g[e+12>>2];H=G-H;i=u;return +H}case 1:{if(!(Pc(b,d,u+480|0,u+416|0,a,e,1)|0)){H=3402823466385288598117041.0e14;i=u;return +H}f=+g[e+4>>2]-+g[e+20>>2];h=+g[e+8>>2]-+g[e+24>>2];j=+g[e+12>>2]-+g[e+28>>2];k=+O(+(f*f+h*h+j*j));if(k>=1.1920928955078125e-07){g[e+36>>2]=f*(1.0/k);g[e+40>>2]=h*(1.0/k);g[e+44>>2]=j*(1.0/k);g[e+48>>2]=0.0}H=-k;i=u;return +H}default:{H=3402823466385288598117041.0e14;i=u;return +H}}return 0.0}function fd(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;o=i;i=i+48|0;d=c[a+24>>2]|0;if((d|0)<=0){i=o;return}n=0;do{m=c[(c[a+32>>2]|0)+(n<<2)>>2]|0;switch(c[m+216>>2]|0){case 2:case 5:break;default:{Wd(m,0);d=c[m+732>>2]|0;if((d|0)>0){e=0;do{l=c[m+740>>2]|0;j=c[l+(e*52|0)+12>>2]|0;k=c[l+(e*52|0)+8>>2]|0;y=+g[j+24>>2]-+g[k+24>>2];x=+g[j+28>>2]-+g[k+28>>2];b=+g[j+32>>2]-+g[k+32>>2];g[l+(e*52|0)+36>>2]=y;g[l+(e*52|0)+40>>2]=x;g[l+(e*52|0)+44>>2]=b;g[l+(e*52|0)+48>>2]=0.0;g[l+(e*52|0)+32>>2]=1.0/(+g[l+(e*52|0)+24>>2]*(y*y+x*x+b*b));e=e+1|0}while((e|0)!=(d|0))}e=c[m+792>>2]|0;if((e|0)>0){b=+g[m+452>>2];f=0;do{l=c[m+800>>2]|0;d=l+(f*96|0)+20|0;h=c[d>>2]|0;B=+g[l+(f*96|0)+4>>2];A=+g[l+(f*96|0)+8>>2];y=+g[l+(f*96|0)+12>>2];z=+g[h+4>>2]*B+ +g[h+8>>2]*A+ +g[h+12>>2]*y;x=B*+g[h+20>>2]+A*+g[h+24>>2]+y*+g[h+28>>2];y=B*+g[h+36>>2]+A*+g[h+40>>2]+y*+g[h+44>>2];j=l+(f*96|0)+28|0;k=l+(f*96|0)|0;Pf(o,b,+g[(c[k>>2]|0)+88>>2],+g[h+344>>2],h+264|0,z,x,y);c[j>>2]=c[o>>2];c[j+4>>2]=c[o+4>>2];c[j+8>>2]=c[o+8>>2];c[j+12>>2]=c[o+12>>2];j=l+(f*96|0)+44|0;c[j>>2]=c[o+16>>2];c[j+4>>2]=c[o+16+4>>2];c[j+8>>2]=c[o+16+8>>2];c[j+12>>2]=c[o+16+12>>2];j=l+(f*96|0)+60|0;c[j>>2]=c[o+32>>2];c[j+4>>2]=c[o+32+4>>2];c[j+8>>2]=c[o+32+8>>2];c[j+12>>2]=c[o+32+12>>2];g[l+(f*96|0)+76>>2]=z;g[l+(f*96|0)+80>>2]=x;g[l+(f*96|0)+84>>2]=y;g[l+(f*96|0)+88>>2]=0.0;b=+g[m+452>>2];g[l+(f*96|0)+92>>2]=b*+g[(c[k>>2]|0)+88>>2];d=c[d>>2]|0;if(!(c[d+204>>2]&3)){if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=1;g[d+220>>2]=0.0}f=f+1|0}while((f|0)!=(e|0))}d=c[m+372>>2]|0;if((d|0)>0){e=c[m+396>>2]|0;f=0;do{if((e|0)>0){d=0;do{zb[((c[(c[m+404>>2]|0)+(d<<2)>>2]|0)==0?23:0)&31](m,1.0);d=d+1|0;e=c[m+396>>2]|0}while((d|0)<(e|0));d=c[m+372>>2]|0}f=f+1|0}while((f|0)<(d|0));d=c[m+712>>2]|0;if((d|0)>0){e=0;do{l=c[m+720>>2]|0;z=+g[m+452>>2];A=z*+g[l+(e*104|0)+44>>2]+ +g[l+(e*104|0)+28>>2];B=z*+g[l+(e*104|0)+48>>2]+ +g[l+(e*104|0)+32>>2];g[l+(e*104|0)+8>>2]=+g[l+(e*104|0)+40>>2]*z+ +g[l+(e*104|0)+24>>2];g[l+(e*104|0)+12>>2]=A;g[l+(e*104|0)+16>>2]=B;g[l+(e*104|0)+20>>2]=0.0;e=e+1|0}while((e|0)!=(d|0))}}d=c[m+376>>2]|0;if((d|0)>0){e=c[m+416>>2]|0;h=0;do{b=+(h|0)/+(d|0);if((e|0)>0){f=0;do{switch(c[(c[m+424>>2]|0)+(f<<2)>>2]|0){case 1:{d=2;break}case 0:{d=3;break}case 2:{d=4;break}case 3:{d=5;break}default:d=0}Nb[d&7](m,1.0,b);f=f+1|0;e=c[m+416>>2]|0}while((f|0)<(e|0));d=c[m+376>>2]|0}h=h+1|0}while((h|0)<(d|0));b=+g[m+456>>2]*(1.0-+g[m+296>>2]);d=c[m+712>>2]|0;if((d|0)>0){e=0;do{l=c[m+720>>2]|0;A=b*(+g[l+(e*104|0)+12>>2]-+g[l+(e*104|0)+28>>2]);B=b*(+g[l+(e*104|0)+16>>2]-+g[l+(e*104|0)+32>>2]);g[l+(e*104|0)+40>>2]=b*(+g[l+(e*104|0)+8>>2]-+g[l+(e*104|0)+24>>2]);g[l+(e*104|0)+44>>2]=A;g[l+(e*104|0)+48>>2]=B;l=l+(e*104|0)+52|0;e=e+1|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0}while((e|0)!=(d|0))}}d=c[m+380>>2]|0;if((d|0)>0){b=+g[m+292>>2]*+g[m+456>>2];e=c[m+712>>2]|0;if((e|0)>0){d=0;do{k=c[m+720>>2]|0;l=k+(d*104|0)+24|0;k=k+(d*104|0)+8|0;c[l>>2]=c[k>>2];c[l+4>>2]=c[k+4>>2];c[l+8>>2]=c[k+8>>2];c[l+12>>2]=c[k+12>>2];d=d+1|0}while((d|0)!=(e|0));d=c[m+380>>2]|0;if((d|0)>0)w=42}else w=42;if((w|0)==42){w=0;e=c[m+436>>2]|0;h=0;do{if((e|0)>0){f=0;do{switch(c[(c[m+444>>2]|0)+(f<<2)>>2]|0){case 1:{d=2;break}case 0:{d=3;break}case 2:{d=4;break}case 3:{d=5;break}default:d=0}Nb[d&7](m,1.0,0.0);f=f+1|0;e=c[m+436>>2]|0}while((f|0)<(e|0));d=c[m+380>>2]|0}h=h+1|0}while((h|0)<(d|0))}d=c[m+712>>2]|0;if((d|0)>0){e=c[m+720>>2]|0;f=0;do{A=b*(+g[e+(f*104|0)+12>>2]-+g[e+(f*104|0)+28>>2]);B=b*(+g[e+(f*104|0)+16>>2]-+g[e+(f*104|0)+32>>2]);l=e+(f*104|0)+40|0;g[l>>2]=b*(+g[e+(f*104|0)+8>>2]-+g[e+(f*104|0)+24>>2])+ +g[l>>2];l=e+(f*104|0)+44|0;g[l>>2]=A+ +g[l>>2];l=e+(f*104|0)+48|0;g[l>>2]=B+ +g[l>>2];f=f+1|0}while((f|0)!=(d|0))}}d=c[m+1112>>2]|0;if((d|0)>0){e=c[m+1120>>2]|0;k=0;do{f=c[e+(k<<2)>>2]|0;if(+g[f+352>>2]>0.0?(p=c[f+24>>2]|0,(p|0)>0):0){h=c[f+32>>2]|0;l=0;do{j=c[h+(l<<2)>>2]|0;if(+g[j+88>>2]>0.0?(t=+g[j+24>>2]-+g[f+228>>2],v=+g[j+28>>2]-+g[f+232>>2],r=+g[j+32>>2]-+g[f+236>>2],s=+g[f+336>>2],B=+g[f+340>>2],u=+g[f+332>>2],q=+g[f+316>>2]+(s*r-v*B),r=+g[f+320>>2]+(t*B-r*u),s=v*u-t*s+ +g[f+324>>2],t=+g[j+40>>2],u=+g[j+44>>2],v=+g[j+48>>2],q*q+r*r+s*s<=t*t+u*u+v*v):0){B=+g[f+352>>2];g[j+40>>2]=t+(q-t)*B;g[j+44>>2]=(r-u)*B+u;g[j+48>>2]=(s-v)*B+v}l=l+1|0}while((l|0)!=(p|0))}k=k+1|0}while((k|0)!=(d|0))}Wd(m,1);d=c[a+24>>2]|0}}n=n+1|0}while((n|0)<(d|0));i=o;return}function gd(d,e){d=d|0;e=+e;var f=0,h=0.0,j=0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0.0,u=0;s=i;i=i+304|0;li(12028);a:do if((c[d+232>>2]|0)>0){n=s+136+48|0;o=0;while(1){m=c[(c[d+240>>2]|0)+(o<<2)>>2]|0;g[m+244>>2]=1.0;b:do switch(c[m+216>>2]|0){case 2:case 5:break;default:if(!(c[m+204>>2]&3)){Zg(m+4|0,+g[m+312>>2],+g[m+316>>2],+g[m+320>>2],m+328|0,e,s+136|0);h=+g[n>>2]-+g[m+52>>2];k=+g[s+136+52>>2]-+g[m+56>>2];l=+g[s+136+56>>2]-+g[m+60>>2];if(a[d+44>>0]|0?(t=+g[m+252>>2],t*t!=0.0?t*t<h*h+k*k+l*l:0):0){li(12048);if((c[(c[m+192>>2]|0)+4>>2]|0)<20){c[5816]=(c[5816]|0)+1;f=c[d+68>>2]|0;f=Eb[c[(c[f>>2]|0)+36>>2]&127](f)|0;j=c[d+24>>2]|0;g[s+200+4>>2]=1.0;b[s+200+8>>1]=1;b[s+200+10>>1]=-1;c[s+200>>2]=2872;c[s+200+12>>2]=c[m+52>>2];c[s+200+12+4>>2]=c[m+52+4>>2];c[s+200+12+8>>2]=c[m+52+8>>2];c[s+200+12+12>>2]=c[m+52+12>>2];c[s+200+28>>2]=c[n>>2];c[s+200+28+4>>2]=c[n+4>>2];c[s+200+28+8>>2]=c[n+8>>2];c[s+200+28+12>>2]=c[n+12>>2];c[s+200+76>>2]=0;c[s+200>>2]=4332;c[s+200+80>>2]=m;c[s+200+88>>2]=f;c[s+200+92>>2]=j;j=c[m+248>>2]|0;c[s+64+8>>2]=0;c[s+64+12>>2]=1065353216;c[s+64+16>>2]=1065353216;c[s+64+20>>2]=1065353216;g[s+64+24>>2]=0.0;c[s+64>>2]=6672;c[s+64+4>>2]=8;c[s+64+28>>2]=j;c[s+64+44>>2]=j;c[s+200+84>>2]=c[d+56>>2];j=c[(c[m+188>>2]|0)+4>>2]|0;b[s+200+8>>1]=j;b[s+200+10>>1]=j>>>16;c[s+48>>2]=c[n>>2];c[s+48+4>>2]=c[n+4>>2];c[s+48+8>>2]=c[n+8>>2];c[s+48+12>>2]=c[n+12>>2];c[s>>2]=c[m+4>>2];c[s+4>>2]=c[m+4+4>>2];c[s+8>>2]=c[m+4+8>>2];c[s+12>>2]=c[m+4+12>>2];c[s+16>>2]=c[m+20>>2];c[s+16+4>>2]=c[m+20+4>>2];c[s+16+8>>2]=c[m+20+8>>2];c[s+16+12>>2]=c[m+20+12>>2];c[s+32>>2]=c[m+36>>2];c[s+32+4>>2]=c[m+36+4>>2];c[s+32+8>>2]=c[m+36+8>>2];c[s+32+12>>2]=c[m+36+12>>2];Kd(d,s+64|0,m+4|0,s,s+200|0,0.0);h=+g[s+200+4>>2];if(h<1.0){g[m+244>>2]=h;Zg(m+4|0,+g[m+312>>2],+g[m+316>>2],+g[m+320>>2],m+328|0,h*e,s+136|0);g[m+244>>2]=0.0;Se(m,s+136|0);f=4}else f=0;if(!f)p=12}else p=12;if((p|0)==12){p=0;f=0}j=c[2357]|0;u=(c[j+16>>2]|0)+-1|0;c[j+16>>2]=u;do if(!u){if(c[j+4>>2]|0){tb(s+200|0,0)|0;u=c[6434]|0;g[j+8>>2]=+g[j+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[j+12>>2]|0)|0)>>>0)/1.0e3;if(c[j+16>>2]|0)break;j=c[2357]|0}c[2357]=c[j+20>>2]}while(0);if(f|0)break b}Se(m,s+136|0)}}while(0);o=o+1|0;if((o|0)>=(c[d+232>>2]|0))break a}}while(0);do if(a[d+275>>0]|0){li(12105);if((c[d+308>>2]|0)>0){p=0;do{o=c[(c[d+316>>2]|0)+(p<<2)>>2]|0;m=c[o+740>>2]|0;m=(c[m+236>>2]&2|0)==0?0:m;n=c[o+744>>2]|0;n=(c[n+236>>2]&2|0)==0?0:n;f=c[o+748>>2]|0;if((f|0)>0)if(!m){j=0;do{h=+g[57]*+g[n+228>>2];if(h>0.0?(q=+g[o+4+(j*184|0)+120>>2],q!=0.0):0){l=h*+g[o+4+(j*184|0)+64>>2]*q;e=h*+g[o+4+(j*184|0)+68>>2]*q;t=h*+g[o+4+(j*184|0)+72>>2]*q;h=+g[o+4+(j*184|0)+36>>2]-+g[n+56>>2];k=+g[o+4+(j*184|0)+40>>2]-+g[n+60>>2];g[s>>2]=+g[o+4+(j*184|0)+32>>2]-+g[n+52>>2];g[s+4>>2]=h;g[s+8>>2]=k;g[s+12>>2]=0.0;g[s+120>>2]=l;g[s+120+4>>2]=e;g[s+120+8>>2]=t;g[s+120+12>>2]=0.0;gj(n,s+120|0,s);f=c[o+748>>2]|0}j=j+1|0}while((j|0)<(f|0))}else{j=0;do{h=+g[m+228>>2]*+g[n+228>>2];if(h>0.0?(r=+g[o+4+(j*184|0)+120>>2],r!=0.0):0){l=h*+g[o+4+(j*184|0)+64>>2]*r;e=h*+g[o+4+(j*184|0)+68>>2]*r;t=h*+g[o+4+(j*184|0)+72>>2]*r;g[s+200>>2]=-l;g[s+200+4>>2]=-e;g[s+200+8>>2]=-t;g[s+200+12>>2]=0.0;k=+g[o+4+(j*184|0)+52>>2]-+g[m+56>>2];h=+g[o+4+(j*184|0)+56>>2]-+g[m+60>>2];g[s+64>>2]=+g[o+4+(j*184|0)+48>>2]-+g[m+52>>2];g[s+64+4>>2]=k;g[s+64+8>>2]=h;g[s+64+12>>2]=0.0;h=+g[o+4+(j*184|0)+36>>2]-+g[n+56>>2];k=+g[o+4+(j*184|0)+40>>2]-+g[n+60>>2];g[s>>2]=+g[o+4+(j*184|0)+32>>2]-+g[n+52>>2];g[s+4>>2]=h;g[s+8>>2]=k;g[s+12>>2]=0.0;gj(m,s+200|0,s+64|0);g[s+120>>2]=l;g[s+120+4>>2]=e;g[s+120+8>>2]=t;g[s+120+12>>2]=0.0;gj(n,s+120|0,s);f=c[o+748>>2]|0}j=j+1|0}while((j|0)<(f|0))}p=p+1|0}while((p|0)<(c[d+308>>2]|0))}f=c[2357]|0;u=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=u;if(!u){if(c[f+4>>2]|0){tb(s+200|0,0)|0;u=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(c[f+16>>2]|0)break;f=c[2357]|0}c[2357]=c[f+20>>2]}}while(0);f=c[2357]|0;u=(c[f+16>>2]|0)+-1|0;c[f+16>>2]=u;if(u|0){i=s;return}do if(c[f+4>>2]|0){tb(s+200|0,0)|0;u=c[6434]|0;g[f+8>>2]=+g[f+8>>2]+ +(((c[s+200+4>>2]|0)-(c[u+4>>2]|0)+(((c[s+200>>2]|0)-(c[u>>2]|0)|0)*1e6|0)-(c[f+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[f+16>>2]|0)){f=c[2357]|0;break}else{i=s;return}}while(0);c[2357]=c[f+20>>2];i=s;return}function hd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(!a)return;h=c[6442]|0;if((a+-8|0)>>>0<h>>>0)Va();b=c[a+-4>>2]|0;if((b&3|0)==1)Va();n=a+-8+(b&-8)|0;do if(!(b&1)){e=c[a+-8>>2]|0;if(!(b&3))return;k=a+-8+(0-e)|0;j=e+(b&-8)|0;if(k>>>0<h>>>0)Va();if((k|0)==(c[6443]|0)){a=c[n+4>>2]|0;if((a&3|0)!=3){q=k;f=j;break}c[6440]=j;c[n+4>>2]=a&-2;c[k+4>>2]=j|1;c[k+j>>2]=j;return}if(e>>>0<256){a=c[k+8>>2]|0;b=c[k+12>>2]|0;if((a|0)!=(25792+(e>>>3<<1<<2)|0)){if(a>>>0<h>>>0)Va();if((c[a+12>>2]|0)!=(k|0))Va()}if((b|0)==(a|0)){c[6438]=c[6438]&~(1<<(e>>>3));q=k;f=j;break}if((b|0)!=(25792+(e>>>3<<1<<2)|0)){if(b>>>0<h>>>0)Va();if((c[b+8>>2]|0)!=(k|0))Va();else d=b+8|0}else d=b+8|0;c[a+12>>2]=b;c[d>>2]=a;q=k;f=j;break}g=c[k+24>>2]|0;a=c[k+12>>2]|0;do if((a|0)==(k|0)){a=c[k+16+4>>2]|0;if(!a){a=c[k+16>>2]|0;if(!a){i=0;break}else e=k+16|0}else e=k+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b}}if(e>>>0<h>>>0)Va();else{c[e>>2]=0;i=a;break}}else{b=c[k+8>>2]|0;if(b>>>0<h>>>0)Va();if((c[b+12>>2]|0)!=(k|0))Va();if((c[a+8>>2]|0)==(k|0)){c[b+12>>2]=a;c[a+8>>2]=b;i=a;break}else Va()}while(0);if(g){a=c[k+28>>2]|0;if((k|0)==(c[26056+(a<<2)>>2]|0)){c[26056+(a<<2)>>2]=i;if(!i){c[6439]=c[6439]&~(1<<a);q=k;f=j;break}}else{if(g>>>0<(c[6442]|0)>>>0)Va();if((c[g+16>>2]|0)==(k|0))c[g+16>>2]=i;else c[g+20>>2]=i;if(!i){q=k;f=j;break}}b=c[6442]|0;if(i>>>0<b>>>0)Va();c[i+24>>2]=g;a=c[k+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Va();else{c[i+16>>2]=a;c[a+24>>2]=i;break}while(0);a=c[k+16+4>>2]|0;if(a)if(a>>>0<(c[6442]|0)>>>0)Va();else{c[i+20>>2]=a;c[a+24>>2]=i;q=k;f=j;break}else{q=k;f=j}}else{q=k;f=j}}else{q=a+-8|0;f=b&-8}while(0);if(q>>>0>=n>>>0)Va();d=c[n+4>>2]|0;if(!(d&1))Va();if(!(d&2)){if((n|0)==(c[6444]|0)){p=(c[6441]|0)+f|0;c[6441]=p;c[6444]=q;c[q+4>>2]=p|1;if((q|0)!=(c[6443]|0))return;c[6443]=0;c[6440]=0;return}if((n|0)==(c[6443]|0)){p=(c[6440]|0)+f|0;c[6440]=p;c[6443]=q;c[q+4>>2]=p|1;c[q+p>>2]=p;return}f=(d&-8)+f|0;do if(d>>>0>=256){g=c[n+24>>2]|0;a=c[n+12>>2]|0;do if((a|0)==(n|0)){a=c[n+16+4>>2]|0;if(!a){a=c[n+16>>2]|0;if(!a){m=0;break}else e=n+16|0}else e=n+16+4|0;while(1){b=a+20|0;d=c[b>>2]|0;if(d|0){a=d;e=b;continue}b=a+16|0;d=c[b>>2]|0;if(!d)break;else{a=d;e=b}}if(e>>>0<(c[6442]|0)>>>0)Va();else{c[e>>2]=0;m=a;break}}else{b=c[n+8>>2]|0;if(b>>>0<(c[6442]|0)>>>0)Va();if((c[b+12>>2]|0)!=(n|0))Va();if((c[a+8>>2]|0)==(n|0)){c[b+12>>2]=a;c[a+8>>2]=b;m=a;break}else Va()}while(0);if(g|0){a=c[n+28>>2]|0;if((n|0)==(c[26056+(a<<2)>>2]|0)){c[26056+(a<<2)>>2]=m;if(!m){c[6439]=c[6439]&~(1<<a);break}}else{if(g>>>0<(c[6442]|0)>>>0)Va();if((c[g+16>>2]|0)==(n|0))c[g+16>>2]=m;else c[g+20>>2]=m;if(!m)break}b=c[6442]|0;if(m>>>0<b>>>0)Va();c[m+24>>2]=g;a=c[n+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Va();else{c[m+16>>2]=a;c[a+24>>2]=m;break}while(0);a=c[n+16+4>>2]|0;if(a|0)if(a>>>0<(c[6442]|0)>>>0)Va();else{c[m+20>>2]=a;c[a+24>>2]=m;break}}}else{a=c[n+8>>2]|0;b=c[n+12>>2]|0;if((a|0)!=(25792+(d>>>3<<1<<2)|0)){if(a>>>0<(c[6442]|0)>>>0)Va();if((c[a+12>>2]|0)!=(n|0))Va()}if((b|0)==(a|0)){c[6438]=c[6438]&~(1<<(d>>>3));break}if((b|0)!=(25792+(d>>>3<<1<<2)|0)){if(b>>>0<(c[6442]|0)>>>0)Va();if((c[b+8>>2]|0)!=(n|0))Va();else l=b+8|0}else l=b+8|0;c[a+12>>2]=b;c[l>>2]=a}while(0);c[q+4>>2]=f|1;c[q+f>>2]=f;if((q|0)==(c[6443]|0)){c[6440]=f;return}}else{c[n+4>>2]=d&-2;c[q+4>>2]=f|1;c[q+f>>2]=f}b=f>>>3;if(f>>>0<256){a=c[6438]|0;if(a&1<<b){a=c[25792+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[6442]|0)>>>0)Va();else{o=25792+(b<<1<<2)+8|0;p=a}}else{c[6438]=a|1<<b;o=25792+(b<<1<<2)+8|0;p=25792+(b<<1<<2)|0}c[o>>2]=q;c[p+12>>2]=q;c[q+8>>2]=p;c[q+12>>2]=25792+(b<<1<<2);return}a=f>>>8;if(a)if(f>>>0>16777215)d=31;else{d=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);d=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(d+245760|0)>>>16&2)+(d<<((d+245760|0)>>>16&2)>>>15)|0;d=f>>>(d+7|0)&1|d<<1}else d=0;e=26056+(d<<2)|0;c[q+28>>2]=d;c[q+20>>2]=0;c[q+16>>2]=0;a=c[6439]|0;b=1<<d;do if(a&b){d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){a=130;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){a=127;break}else{d=d<<1;e=a}}if((a|0)==127)if(b>>>0<(c[6442]|0)>>>0)Va();else{c[b>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q;break}else if((a|0)==130){a=e+8|0;b=c[a>>2]|0;p=c[6442]|0;if(b>>>0>=p>>>0&e>>>0>=p>>>0){c[b+12>>2]=q;c[a>>2]=q;c[q+8>>2]=b;c[q+12>>2]=e;c[q+24>>2]=0;break}else Va()}}else{c[6439]=a|b;c[e>>2]=q;c[q+24>>2]=e;c[q+12>>2]=q;c[q+8>>2]=q}while(0);q=(c[6446]|0)+-1|0;c[6446]=q;if(!q)a=26208;else return;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0}c[6446]=-1;return}function id(b,d,e){b=b|0;d=d|0;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0,r=0,s=0;s=i;i=i+112|0;q=c[b+716>>2]|0;if((q|0)==(c[b+712>>2]|0)){a:do if(q){k=c[b+720>>2]|0;if((q|0)>0){h=k;j=0;while(1){f=c[h+(j*104|0)+96>>2]|0;if(f|0)c[f+36>>2]=j;f=j+1|0;if((f|0)==(q|0))break a;h=c[b+720>>2]|0;j=f}}}else k=0;while(0);f=c[b+732>>2]|0;if((f|0)>0){h=0;do{o=(c[b+740>>2]|0)+(h*52|0)+8|0;c[o>>2]=((c[o>>2]|0)-k|0)/104|0;o=(c[b+740>>2]|0)+(h*52|0)+12|0;c[o>>2]=((c[o>>2]|0)-k|0)/104|0;h=h+1|0}while((h|0)!=(f|0))}f=c[b+752>>2]|0;if((f|0)>0){j=0;do{h=(c[b+760>>2]|0)+(j*44|0)+8|0;c[h>>2]=((c[h>>2]|0)-k|0)/104|0;h=(c[b+760>>2]|0)+(j*44|0)+12|0;c[h>>2]=((c[h>>2]|0)-k|0)/104|0;h=(c[b+760>>2]|0)+(j*44|0)+16|0;c[h>>2]=((c[h>>2]|0)-k|0)/104|0;h=c[(c[b+760>>2]|0)+(j*44|0)+40>>2]|0;if(h|0)c[h+36>>2]=j;j=j+1|0}while((j|0)!=(f|0))}f=c[b+792>>2]|0;if((f|0)>0){h=c[b+800>>2]|0;j=0;do{o=h+(j*96|0)|0;c[o>>2]=((c[o>>2]|0)-k|0)/104|0;j=j+1|0}while((j|0)!=(f|0))}j=c[b+692>>2]|0;if((j|0)>0){f=c[b+700>>2]|0;l=0;do{if((c[f+(l*60|0)+24>>2]|0)>0){h=0;do{f=f+(l*60|0)+28+(h<<2)|0;c[f>>2]=((c[f>>2]|0)-k|0)/104|0;h=h+1|0;f=c[b+700>>2]|0}while((h|0)<(c[f+(l*60|0)+24>>2]|0))}l=l+1|0}while((l|0)!=(j|0))}if((q|0)<(q<<1|1|0)){c[6435]=(c[6435]|0)+1;f=yc(((q<<1|1)*104|3)+16|0)|0;if(!f)j=0;else{c[(f+4+15&-16)+-4>>2]=f;j=f+4+15&-16}f=c[b+712>>2]|0;if((f|0)>0){h=0;do{l=j+(h*104|0)|0;k=(c[b+720>>2]|0)+(h*104|0)|0;o=l+104|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(o|0));h=h+1|0}while((h|0)!=(f|0))}f=c[b+720>>2]|0;if(f|0){if(a[b+724>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+720>>2]=0}a[b+724>>0]=1;c[b+720>>2]=j;c[b+716>>2]=q<<1|1;j=c[b+712>>2]|0}else j=q;b:do if(j){k=c[b+720>>2]|0;if((j|0)>0){l=k;f=0;while(1){h=c[l+(f*104|0)+96>>2]|0;if(h|0)c[h+36>>2]=l+(f*104|0);f=f+1|0;if((f|0)==(j|0)){l=k;break b}l=c[b+720>>2]|0}}else l=k}else l=0;while(0);f=c[b+732>>2]|0;if((f|0)>0){h=0;do{q=(c[b+740>>2]|0)+(h*52|0)+8|0;c[q>>2]=l+((c[q>>2]|0)*104|0);q=(c[b+740>>2]|0)+(h*52|0)+12|0;c[q>>2]=l+((c[q>>2]|0)*104|0);h=h+1|0}while((h|0)!=(f|0))}f=c[b+752>>2]|0;if((f|0)>0){k=0;do{h=(c[b+760>>2]|0)+(k*44|0)+8|0;c[h>>2]=l+((c[h>>2]|0)*104|0);h=(c[b+760>>2]|0)+(k*44|0)+12|0;c[h>>2]=l+((c[h>>2]|0)*104|0);h=(c[b+760>>2]|0)+(k*44|0)+16|0;c[h>>2]=l+((c[h>>2]|0)*104|0);h=c[b+760>>2]|0;j=c[h+(k*44|0)+40>>2]|0;if(j|0)c[j+36>>2]=h+(k*44|0);k=k+1|0}while((k|0)!=(f|0))}f=c[b+792>>2]|0;if((f|0)>0){h=c[b+800>>2]|0;j=0;do{c[h+(j*96|0)>>2]=l+((c[h+(j*96|0)>>2]|0)*104|0);j=j+1|0}while((j|0)!=(f|0))}j=c[b+692>>2]|0;if((j|0)>0){f=c[b+700>>2]|0;k=0;do{if((c[f+(k*60|0)+24>>2]|0)>0){h=0;do{f=f+(k*60|0)+28+(h<<2)|0;c[f>>2]=l+((c[f>>2]|0)*104|0);h=h+1|0;f=c[b+700>>2]|0}while((h|0)<(c[f+(k*60|0)+24>>2]|0))}k=k+1|0}while((k|0)!=(j|0))}}l=c[b+192>>2]|0;p=+Sb[c[(c[l>>2]|0)+48>>2]&15](l);l=s;o=l+100|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(o|0));f=c[b+712>>2]|0;if((f|0)==(c[b+716>>2]|0)?(r=f|0?f<<1:1,(f|0)<(r|0)):0){if(!r)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((r*104|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[b+712>>2]|0}if((f|0)>0){h=0;do{l=j+(h*104|0)|0;k=(c[b+720>>2]|0)+(h*104|0)|0;o=l+104|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(o|0));h=h+1|0}while((h|0)!=(f|0))}f=c[b+720>>2]|0;if(f|0){if(a[b+724>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+720>>2]=0}a[b+724>>0]=1;c[b+720>>2]=j;c[b+716>>2]=r;f=c[b+712>>2]|0}l=c[b+720>>2]|0;c[l+(f*104|0)>>2]=0;l=l+(f*104|0)+4|0;k=s;o=l+100|0;do{c[l>>2]=c[k>>2];l=l+4|0;k=k+4|0}while((l|0)<(o|0));h=c[b+712>>2]|0;c[b+712>>2]=h+1;j=c[b+720>>2]|0;l=j+(h*104|0)|0;o=l+104|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(o|0));c[j+(h*104|0)+8>>2]=c[d>>2];c[j+(h*104|0)+8+4>>2]=c[d+4>>2];c[j+(h*104|0)+8+8>>2]=c[d+8>>2];c[j+(h*104|0)+8+12>>2]=c[d+12>>2];Ep(j+(h*104|0)+24|0,d|0,16)|0;g[j+(h*104|0)+88>>2]=e>0.0?1.0/e:0.0;c[j+(h*104|0)+4>>2]=c[c[b+880>>2]>>2];e=+g[j+(h*104|0)+8>>2];m=+g[j+(h*104|0)+12>>2];n=+g[j+(h*104|0)+16>>2];f=c[b+932>>2]|0;if(f|0){c[b+932>>2]=0;d=f;r=d+32|0;c[r>>2]=0;r=d+36|0;c[r>>2]=j+(h*104|0);r=d+40|0;c[r>>2]=0;g[d>>2]=e-p;r=d+4|0;g[r>>2]=m-p;r=d+8|0;g[r>>2]=n-p;r=d+12|0;g[r>>2]=0.0;r=d+16|0;g[r>>2]=p+e;r=d+20|0;g[r>>2]=p+m;r=d+24|0;g[r>>2]=p+n;r=d+28|0;g[r>>2]=0.0;r=c[b+928>>2]|0;lf(b+928|0,r,d);b=b+940|0;r=c[b>>2]|0;r=r+1|0;c[b>>2]=r;b=j+(h*104|0)+96|0;c[b>>2]=d;i=s;return}c[6435]=(c[6435]|0)+1;f=yc(63)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}l=f;o=l+44|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(o|0));d=f;r=d+32|0;c[r>>2]=0;r=d+36|0;c[r>>2]=j+(h*104|0);r=d+40|0;c[r>>2]=0;g[d>>2]=e-p;r=d+4|0;g[r>>2]=m-p;r=d+8|0;g[r>>2]=n-p;r=d+12|0;g[r>>2]=0.0;r=d+16|0;g[r>>2]=p+e;r=d+20|0;g[r>>2]=p+m;r=d+24|0;g[r>>2]=p+n;r=d+28|0;g[r>>2]=0.0;r=c[b+928>>2]|0;lf(b+928|0,r,d);b=b+940|0;r=c[b>>2]|0;r=r+1|0;c[b>>2]=r;b=j+(h*104|0)+96|0;c[b>>2]=d;i=s;return}function jd(b,d,e,f,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0;G=i;i=i+32|0;c[G+16>>2]=j;c[G+16+4>>2]=k;c[G+16+8>>2]=l;c[G>>2]=e;c[G+4>>2]=f;c[G+8>>2]=h;if(!(+g[d+52>>2]<+g[b+12>>2])){m=0;i=G;return m|0}E=+g[d+36>>2];F=+g[d+40>>2];w=+g[d+44>>2];h=c[d+48>>2]|0;x=1.0/+O(+(E*E+F*F+w*w));l=ri(G)|0;y=+g[d+4>>2]-+g[l+48>>2];z=+g[d+8>>2]-+g[l+52>>2];A=+g[d+12>>2]-+g[l+56>>2];l=ri(G+16|0)|0;B=+g[d+20>>2]-+g[l+48>>2];C=+g[d+24>>2]-+g[l+52>>2];D=+g[d+28>>2]-+g[l+56>>2];if(!f)if(!e){n=0.0;o=0.0;r=0.0;s=0.0;p=0.0;q=0.0}else{q=+g[e+336>>2];r=+g[e+340>>2];v=+g[e+332>>2];n=A*q-z*r;o=+g[e+316>>2];r=y*r-A*v;s=+g[e+320>>2];p=+g[e+324>>2];q=z*v-y*q}else{q=+g[f+332>>2];r=+g[f+336>>2];v=+g[f+328>>2];n=A*q-z*r;o=+g[f+312>>2];r=y*r-A*v;s=+g[f+316>>2];p=+g[f+320>>2];q=z*v-y*q}v=o+n;u=s+r;t=p+q;if(!k)if(!j){p=0.0;q=0.0;r=0.0;s=0.0;n=0.0;o=0.0}else{o=+g[j+336>>2];r=+g[j+340>>2];H=+g[j+332>>2];p=D*o-C*r;q=+g[j+316>>2];r=B*r-D*H;s=+g[j+320>>2];n=+g[j+324>>2];o=C*H-B*o}else{o=+g[k+332>>2];r=+g[k+336>>2];H=+g[k+328>>2];p=D*o-C*r;q=+g[k+312>>2];r=B*r-D*H;s=+g[k+316>>2];n=+g[k+320>>2];o=C*H-B*o}q=v-(q+p);u=u-(s+r);t=t-(n+o);v=w*x*t+(F*x*u+E*x*q);H=+g[d+52>>2]-+g[b+12>>2];c[m+4>>2]=c[G>>2];c[m+4+4>>2]=c[G+4>>2];c[m+4+8>>2]=c[G+8>>2];c[m+16>>2]=c[G+16>>2];c[m+16+4>>2]=c[G+16+4>>2];c[m+16+8>>2]=c[G+16+8>>2];d=ri(G)|0;s=y*+g[d+4>>2]+z*+g[d+20>>2]+A*+g[d+36>>2];r=y*+g[d+8>>2]+z*+g[d+24>>2]+A*+g[d+40>>2];g[m+28>>2]=y*+g[d>>2]+z*+g[d+16>>2]+A*+g[d+32>>2];g[m+32>>2]=s;g[m+36>>2]=r;g[m+40>>2]=0.0;d=ri(G+16|0)|0;r=B*+g[d+4>>2]+C*+g[d+20>>2]+D*+g[d+36>>2];s=B*+g[d+8>>2]+C*+g[d+24>>2]+D*+g[d+40>>2];g[m+44>>2]=B*+g[d>>2]+C*+g[d+16>>2]+D*+g[d+32>>2];g[m+48>>2]=r;g[m+52>>2]=s;g[m+56>>2]=0.0;g[m+164>>2]=y;g[m+168>>2]=z;g[m+172>>2]=A;g[m+176>>2]=0.0;g[m+180>>2]=B;g[m+184>>2]=C;g[m+188>>2]=D;g[m+192>>2]=0.0;g[m+60>>2]=1.0;g[m+64>>2]=1.0;c[m+156>>2]=0;c[m+160>>2]=0;g[m+68>>2]=1.0;g[m+72>>2]=E*x*H;g[m+76>>2]=F*x*H;g[m+80>>2]=w*x*H;g[m+84>>2]=0.0;g[m+196>>2]=E*x;g[m+200>>2]=F*x;g[m+204>>2]=w*x;c[m+208>>2]=h;a[m+152>>0]=0;H=+g[b+16>>2];g[m+212>>2]=(t-w*x*v)*(t-w*x*v)+((q-E*x*v)*(q-E*x*v)+(u-F*x*v)*(u-F*x*v))<H*v*v*H?1.0:H;h=c[G+4>>2]|0;if(!h){h=c[G>>2]|0;if(!h)o=0.0;else o=+g[h+128>>2]}else o=+g[h+344>>2];if((a[22504]|0)==0?Wa(22504)|0:0){h=23084;l=h+48|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(l|0));_a(22504)}h=c[G+4>>2]|0;if(!h){e=c[G>>2]|0;e=(e|0)==0?23084:e+180|0}else e=h+264|0;h=c[G+16+4>>2]|0;if(!h){h=c[G+16>>2]|0;if(!h)n=0.0;else n=+g[h+128>>2]}else n=+g[h+344>>2];if((a[22504]|0)==0?Wa(22504)|0:0){h=23084;l=h+48|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(l|0));_a(22504)}h=c[G+16+4>>2]|0;if(!h){h=c[G+16>>2]|0;h=(h|0)==0?23084:h+180|0}else h=h+264|0;V=+g[m+172>>2];M=+g[m+168>>2];L=+g[m+164>>2];U=+g[e>>2];T=+g[e+16>>2];S=+g[e+32>>2];R=+g[e+4>>2];Q=+g[e+20>>2];P=+g[e+36>>2];N=+g[e+8>>2];K=+g[e+24>>2];J=+g[e+40>>2];B=+g[m+188>>2];v=+g[m+184>>2];w=+g[m+180>>2];I=+g[h>>2];p=+g[h+16>>2];q=+g[h+32>>2];r=+g[h+4>>2];s=+g[h+20>>2];t=+g[h+36>>2];u=+g[h+8>>2];H=+g[h+24>>2];x=+g[h+40>>2];D=o-((U*0.0+T*-V+M*S)*0.0+V*(R*0.0+Q*-V+M*P)+(N*0.0+K*-V+M*J)*-M)+(n-((I*0.0+p*-B+v*q)*0.0+B*(r*0.0+s*-B+v*t)+(u*0.0+H*-B+v*x)*-v));F=0.0-((U*0.0+T*-V+M*S)*-V+(R*0.0+Q*-V+M*P)*0.0+L*(N*0.0+K*-V+M*J))+(0.0-((I*0.0+p*-B+v*q)*-B+(r*0.0+s*-B+v*t)*0.0+w*(u*0.0+H*-B+v*x)));y=0.0-(M*(U*0.0+T*-V+M*S)+(R*0.0+Q*-V+M*P)*-L+(N*0.0+K*-V+M*J)*0.0)+(0.0-(v*(I*0.0+p*-B+v*q)+(r*0.0+s*-B+v*t)*-w+(u*0.0+H*-B+v*x)*0.0));E=0.0-((V*U+T*0.0+S*-L)*0.0+V*(V*R+Q*0.0+P*-L)+(V*N+K*0.0+J*-L)*-M)+(0.0-((B*I+p*0.0+q*-w)*0.0+B*(B*r+s*0.0+t*-w)+(B*u+H*0.0+x*-w)*-v));C=o-((V*U+T*0.0+S*-L)*-V+(V*R+Q*0.0+P*-L)*0.0+L*(V*N+K*0.0+J*-L))+(n-((B*I+p*0.0+q*-w)*-B+(B*r+s*0.0+t*-w)*0.0+w*(B*u+H*0.0+x*-w)));z=0.0-(M*(V*U+T*0.0+S*-L)+(V*R+Q*0.0+P*-L)*-L+(V*N+K*0.0+J*-L)*0.0)+(0.0-(v*(B*I+p*0.0+q*-w)+(B*r+s*0.0+t*-w)*-w+(B*u+H*0.0+x*-w)*0.0));A=0.0-((U*-M+L*T+S*0.0)*0.0+V*(R*-M+L*Q+P*0.0)+(N*-M+L*K+J*0.0)*-M)+(0.0-((I*-v+w*p+q*0.0)*0.0+B*(r*-v+w*s+t*0.0)+(u*-v+w*H+x*0.0)*-v));B=0.0-((U*-M+L*T+S*0.0)*-V+(R*-M+L*Q+P*0.0)*0.0+L*(N*-M+L*K+J*0.0))+(0.0-((I*-v+w*p+q*0.0)*-B+(r*-v+w*s+t*0.0)*0.0+w*(u*-v+w*H+x*0.0)));x=o-(M*(U*-M+L*T+S*0.0)+(R*-M+L*Q+P*0.0)*-L+(N*-M+L*K+J*0.0)*0.0)+(n-(v*(I*-v+w*p+q*0.0)+(r*-v+w*s+t*0.0)*-w+(u*-v+w*H+x*0.0)*0.0));H=1.0/(y*(B*E-C*A)+(D*(C*x-z*B)+F*(z*A-x*E)));g[m+104>>2]=(C*x-z*B)*H;g[m+108>>2]=(B*y-x*F)*H;g[m+112>>2]=(z*F-C*y)*H;g[m+116>>2]=0.0;g[m+120>>2]=(z*A-x*E)*H;g[m+124>>2]=(x*D-A*y)*H;g[m+128>>2]=(E*y-z*D)*H;g[m+132>>2]=0.0;g[m+136>>2]=(B*E-C*A)*H;g[m+140>>2]=(A*F-B*D)*H;g[m+144>>2]=(C*D-E*F)*H;g[m+148>>2]=0.0;m=1;i=G;return m|0}function kd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0;if((a[b+180>>0]|0)==0?(a[b+48>>0]|0)!=0:0){w=+g[b+116>>2];i=+g[e>>2];x=+g[b+132>>2];C=+g[e+4>>2];y=+g[b+148>>2];D=+g[e+8>>2];l=+g[b+120>>2];n=+g[b+136>>2];p=+g[b+152>>2];q=+g[b+124>>2];s=+g[b+140>>2];t=+g[b+156>>2];j=+g[e+16>>2];m=+g[e+20>>2];o=+g[e+24>>2];r=+g[e+32>>2];z=+g[e+36>>2];A=+g[e+40>>2];h=+g[b+164>>2];f=+g[b+168>>2];v=+g[b+172>>2];u=+g[e+48>>2]+(i*h+C*f+D*v);B=j*h+m*f+o*v+ +g[e+52>>2];v=r*h+z*f+A*v+ +g[e+56>>2];g[b+824>>2]=w*i+x*C+y*D;g[b+828>>2]=i*l+C*n+D*p;g[b+832>>2]=i*q+C*s+D*t;g[b+836>>2]=0.0;g[b+840>>2]=w*j+x*m+y*o;g[b+844>>2]=l*j+n*m+p*o;g[b+848>>2]=q*j+s*m+t*o;g[b+852>>2]=0.0;g[b+856>>2]=w*r+x*z+y*A;g[b+860>>2]=l*r+n*z+p*A;g[b+864>>2]=q*r+s*z+t*A;g[b+868>>2]=0.0;g[b+872>>2]=u;g[b+876>>2]=B;g[b+880>>2]=v;g[b+884>>2]=0.0;v=+g[b+52>>2];B=+g[d>>2];u=+g[b+68>>2];A=+g[d+4>>2];t=+g[b+84>>2];z=+g[d+8>>2];s=+g[b+56>>2];r=+g[b+72>>2];q=+g[b+88>>2];p=+g[b+60>>2];n=+g[b+76>>2];l=+g[b+92>>2];y=+g[d+16>>2];x=+g[d+20>>2];w=+g[d+24>>2];o=+g[d+32>>2];m=+g[d+36>>2];j=+g[d+40>>2];D=+g[b+100>>2];C=+g[b+104>>2];i=+g[b+108>>2];f=+g[d+48>>2]+(B*D+A*C+z*i);h=y*D+x*C+w*i+ +g[d+52>>2];i=o*D+m*C+j*i+ +g[d+56>>2];g[b+888>>2]=v*B+u*A+t*z;g[b+892>>2]=B*s+A*r+z*q;g[b+896>>2]=B*p+A*n+z*l;g[b+900>>2]=0.0;g[b+904>>2]=v*y+u*x+t*w;g[b+908>>2]=s*y+r*x+q*w;g[b+912>>2]=p*y+n*x+l*w;g[b+916>>2]=0.0;g[b+920>>2]=v*o+u*m+t*j;g[b+924>>2]=s*o+r*m+q*j;g[b+928>>2]=p*o+n*m+l*j;g[b+932>>2]=0.0;g[b+936>>2]=f;g[b+940>>2]=h;g[b+944>>2]=i;g[b+948>>2]=0.0;d=b+856|0;e=b+840|0}else{o=+g[b+52>>2];D=+g[d>>2];n=+g[b+68>>2];h=+g[d+4>>2];m=+g[b+84>>2];f=+g[d+8>>2];z=+g[b+56>>2];x=+g[b+72>>2];v=+g[b+88>>2];u=+g[b+60>>2];s=+g[b+76>>2];r=+g[b+92>>2];A=+g[d+16>>2];y=+g[d+20>>2];w=+g[d+24>>2];t=+g[d+32>>2];l=+g[d+36>>2];j=+g[d+40>>2];C=+g[b+100>>2];B=+g[b+104>>2];p=+g[b+108>>2];q=+g[d+48>>2]+(D*C+h*B+f*p);i=A*C+y*B+w*p+ +g[d+52>>2];p=t*C+l*B+j*p+ +g[d+56>>2];g[b+824>>2]=o*D+n*h+m*f;g[b+828>>2]=D*z+h*x+f*v;g[b+832>>2]=D*u+h*s+f*r;g[b+836>>2]=0.0;g[b+840>>2]=o*A+n*y+m*w;g[b+844>>2]=z*A+x*y+v*w;g[b+848>>2]=u*A+s*y+r*w;g[b+852>>2]=0.0;g[b+856>>2]=o*t+n*l+m*j;g[b+860>>2]=z*t+x*l+v*j;g[b+864>>2]=u*t+s*l+r*j;g[b+868>>2]=0.0;g[b+872>>2]=q;g[b+876>>2]=i;g[b+880>>2]=p;g[b+884>>2]=0.0;p=+g[b+116>>2];i=+g[e>>2];q=+g[b+132>>2];j=+g[e+4>>2];r=+g[b+148>>2];l=+g[e+8>>2];s=+g[b+120>>2];t=+g[b+136>>2];u=+g[b+152>>2];v=+g[b+124>>2];x=+g[b+140>>2];z=+g[b+156>>2];m=+g[e+16>>2];n=+g[e+20>>2];o=+g[e+24>>2];w=+g[e+32>>2];y=+g[e+36>>2];A=+g[e+40>>2];f=+g[b+164>>2];h=+g[b+168>>2];D=+g[b+172>>2];B=+g[e+48>>2]+(i*f+j*h+l*D);C=m*f+n*h+o*D+ +g[e+52>>2];D=w*f+y*h+A*D+ +g[e+56>>2];g[b+888>>2]=p*i+q*j+r*l;g[b+892>>2]=i*s+j*t+l*u;g[b+896>>2]=i*v+j*x+l*z;g[b+900>>2]=0.0;g[b+904>>2]=p*m+q*n+r*o;g[b+908>>2]=s*m+t*n+u*o;g[b+912>>2]=v*m+x*n+z*o;g[b+916>>2]=0.0;g[b+920>>2]=p*w+q*y+r*A;g[b+924>>2]=s*w+t*y+u*A;g[b+928>>2]=v*w+x*y+z*A;g[b+932>>2]=0.0;g[b+936>>2]=B;g[b+940>>2]=C;g[b+944>>2]=D;g[b+948>>2]=0.0;d=b+856|0;e=b+840|0}c[b+968>>2]=c[b+872>>2];c[b+968+4>>2]=c[b+872+4>>2];c[b+968+8>>2]=c[b+872+8>>2];c[b+968+12>>2]=c[b+872+12>>2];c[b+984>>2]=c[b+936>>2];c[b+984+4>>2]=c[b+936+4>>2];c[b+984+8>>2]=c[b+936+8>>2];c[b+984+12>>2]=c[b+936+12>>2];F=c[b+824>>2]|0;E=c[e>>2]|0;e=c[d>>2]|0;c[b+952>>2]=F;c[b+956>>2]=E;c[b+960>>2]=e;g[b+964>>2]=0.0;f=(c[k>>2]=F,+g[k>>2]);h=(c[k>>2]=E,+g[k>>2]);i=(c[k>>2]=e,+g[k>>2]);if((a[b+180>>0]|0)==0?(a[b+48>>0]|0)==0:0){u=+g[b+968>>2];A=u-+g[b+984>>2];v=+g[b+972>>2];C=v-+g[b+988>>2];w=+g[b+976>>2];D=w-+g[b+992>>2];g[b+1016>>2]=A;g[b+1020>>2]=C;g[b+1024>>2]=D;g[b+1028>>2]=0.0;B=f*A;x=h*C;x=B+x;B=i*D;B=x+B;x=f*B;y=h*B;z=i*B;x=u+x;y=v+y;z=w+z;F=b+1e3|0;g[F>>2]=x;F=b+1004|0;g[F>>2]=y;F=b+1008|0;g[F>>2]=z;F=b+1012|0;g[F>>2]=0.0;F=b+1032|0;g[F>>2]=B;F=b+828|0;E=b+844|0;e=b+860|0;B=+g[F>>2];z=+g[E>>2];y=+g[e>>2];B=B*A;z=z*C;z=B+z;y=y*D;y=z+y;e=b+1036|0;g[e>>2]=y;e=b+832|0;E=b+848|0;F=b+864|0;y=+g[e>>2];z=+g[E>>2];B=+g[F>>2];A=y*A;C=z*C;C=A+C;D=B*D;D=C+D;F=b+1040|0;g[F>>2]=D;return}u=+g[b+968>>2];A=+g[b+984>>2]-u;v=+g[b+972>>2];C=+g[b+988>>2]-v;w=+g[b+976>>2];D=+g[b+992>>2]-w;g[b+1016>>2]=A;g[b+1020>>2]=C;g[b+1024>>2]=D;g[b+1028>>2]=0.0;B=f*A;x=h*C;x=B+x;B=i*D;B=x+B;x=f*B;y=h*B;z=i*B;x=u+x;y=v+y;z=w+z;F=b+1e3|0;g[F>>2]=x;F=b+1004|0;g[F>>2]=y;F=b+1008|0;g[F>>2]=z;F=b+1012|0;g[F>>2]=0.0;F=b+1032|0;g[F>>2]=B;F=b+828|0;E=b+844|0;e=b+860|0;B=+g[F>>2];z=+g[E>>2];y=+g[e>>2];B=B*A;z=z*C;z=B+z;y=y*D;y=z+y;e=b+1036|0;g[e>>2]=y;e=b+832|0;E=b+848|0;F=b+864|0;y=+g[e>>2];z=+g[E>>2];B=+g[F>>2];A=y*A;C=z*C;C=A+C;D=B*D;D=C+D;F=b+1040|0;g[F>>2]=D;return}function ld(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;s=i;i=i+224|0;q=(a[b+28>>0]|0)!=0;p=q?e:d;q=q?d:e;r=c[p+4>>2]|0;if((c[r+68>>2]|0)!=(c[b+40>>2]|0)){j=c[b+12>>2]|0;if((j|0)>0){l=0;do{k=c[(c[b+20>>2]|0)+(l<<2)>>2]|0;if(k|0){Ab[c[c[k>>2]>>2]&255](k);n=c[b+4>>2]|0;Cb[c[(c[n>>2]|0)+60>>2]&127](n,c[(c[b+20>>2]|0)+(l<<2)>>2]|0)}l=l+1|0}while((l|0)!=(j|0))}lh(b,d,e)}n=c[r+64>>2]|0;j=c[b+4>>2]|0;k=c[b+20>>2]|0;m=c[b+32>>2]|0;c[s+192>>2]=6192;c[s+192+4>>2]=p;c[s+192+8>>2]=q;c[s+192+12>>2]=j;c[s+192+16>>2]=f;c[s+192+20>>2]=h;c[s+192+24>>2]=k;c[s+192+28>>2]=m;a[s+128+16>>0]=1;m=s+128+12|0;c[m>>2]=0;c[s+128+4>>2]=0;c[s+128+8>>2]=0;j=c[b+12>>2]|0;if((j|0)>0){d=k;f=0;while(1){k=c[d+(f<<2)>>2]|0;if(k){Cb[c[(c[k>>2]|0)+16>>2]&127](k,s+128|0);j=c[s+128+4>>2]|0;if((j|0)>0){l=0;do{e=c[(c[m>>2]|0)+(l<<2)>>2]|0;if(c[e+748>>2]|0){c[h+4>>2]=e;j=c[e+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;d=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(k|0))ef(e,j+4|0,d+4|0);else ef(e,d+4|0,k+4|0);c[h+4>>2]=0;j=c[s+128+4>>2]|0}l=l+1|0}while((l|0)<(j|0))}if((j|0)<0){if((c[s+128+8>>2]|0)<0){k=c[m>>2]|0;if(k|0){if(a[s+128+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[m>>2]=0}a[s+128+16>>0]=1;c[m>>2]=0;c[s+128+8>>2]=0}do{c[(c[m>>2]|0)+(j<<2)>>2]=0;j=j+1|0}while((j|0)!=0)}c[s+128+4>>2]=0;j=c[b+12>>2]|0}k=f+1|0;if((k|0)>=(j|0))break;d=c[b+20>>2]|0;f=k}j=c[m>>2]|0;if(j|0){if(a[s+128+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[m>>2]=0}}if(!n){k=c[b+12>>2]|0;if((k|0)>0){j=0;do{Te(s+192|0,c[(c[r+24>>2]|0)+(j*80|0)+64>>2]|0,j);j=j+1|0}while((j|0)<(k|0));o=38}}else{o=c[p+12>>2]|0;H=+g[o>>2];G=+g[o+16>>2];F=+g[o+32>>2];E=+g[o+4>>2];D=+g[o+20>>2];C=+g[o+36>>2];y=+g[o+8>>2];w=+g[o+24>>2];u=+g[o+40>>2];B=-+g[o+48>>2];A=-+g[o+52>>2];z=-+g[o+56>>2];o=c[q+12>>2]|0;Q=+g[o>>2];P=+g[o+16>>2];O=+g[o+32>>2];N=+g[o+4>>2];M=+g[o+20>>2];L=+g[o+36>>2];K=+g[o+8>>2];J=+g[o+24>>2];I=+g[o+40>>2];x=+g[o+48>>2];v=+g[o+52>>2];t=+g[o+56>>2];g[s+48>>2]=H*Q+G*P+F*O;g[s+48+4>>2]=H*N+G*M+F*L;g[s+48+8>>2]=H*K+G*J+F*I;g[s+48+12>>2]=0.0;g[s+48+16>>2]=E*Q+D*P+C*O;g[s+48+20>>2]=E*N+D*M+C*L;g[s+48+24>>2]=E*K+D*J+C*I;g[s+48+28>>2]=0.0;g[s+48+32>>2]=y*Q+w*P+u*O;g[s+48+36>>2]=y*N+w*M+u*L;g[s+48+40>>2]=y*K+w*J+u*I;g[s+48+44>>2]=0.0;g[s+48+48>>2]=H*B+G*A+F*z+(H*x+G*v+F*t);g[s+48+52>>2]=E*B+D*A+C*z+(E*x+D*v+C*t);g[s+48+56>>2]=y*B+w*A+u*z+(y*x+w*v+u*t);g[s+48+60>>2]=0.0;o=c[q+4>>2]|0;mc[c[(c[o>>2]|0)+8>>2]&127](o,s+48|0,s+128|0,s+112|0);c[s+16>>2]=c[s+128>>2];c[s+16+4>>2]=c[s+128+4>>2];c[s+16+8>>2]=c[s+128+8>>2];c[s+16+12>>2]=c[s+128+12>>2];c[s+16+16>>2]=c[s+112>>2];c[s+16+16+4>>2]=c[s+112+4>>2];c[s+16+16+8>>2]=c[s+112+8>>2];c[s+16+16+12>>2]=c[s+112+12>>2];bg(c[n>>2]|0,s+16|0,s+192|0);o=38}if((o|0)==38)k=c[b+12>>2]|0;if((k|0)<=0){i=s;return}d=0;do{do if(c[(c[b+20>>2]|0)+(d<<2)>>2]|0){n=c[r+24>>2]|0;o=c[n+(d*80|0)+64>>2]|0;h=c[p+12>>2]|0;w=+g[h>>2];x=+g[h+4>>2];y=+g[h+8>>2];z=+g[h+16>>2];A=+g[h+20>>2];B=+g[h+24>>2];I=+g[h+32>>2];K=+g[h+36>>2];M=+g[h+40>>2];C=+g[n+(d*80|0)>>2];D=+g[n+(d*80|0)+16>>2];E=+g[n+(d*80|0)+32>>2];F=+g[n+(d*80|0)+4>>2];G=+g[n+(d*80|0)+20>>2];H=+g[n+(d*80|0)+36>>2];J=+g[n+(d*80|0)+8>>2];L=+g[n+(d*80|0)+24>>2];N=+g[n+(d*80|0)+40>>2];u=+g[n+(d*80|0)+48>>2];v=+g[n+(d*80|0)+52>>2];Q=+g[n+(d*80|0)+56>>2];O=+g[h+48>>2]+(w*u+x*v+y*Q);P=+g[h+52>>2]+(z*u+A*v+B*Q);Q=+g[h+56>>2]+(I*u+K*v+M*Q);g[s+128>>2]=w*C+x*D+y*E;g[s+128+4>>2]=w*F+x*G+y*H;g[s+128+8>>2]=w*J+x*L+y*N;g[s+128+12>>2]=0.0;g[s+128+16>>2]=z*C+A*D+B*E;g[s+128+20>>2]=z*F+A*G+B*H;g[s+128+24>>2]=z*J+A*L+B*N;g[s+128+28>>2]=0.0;g[s+128+32>>2]=I*C+K*D+M*E;g[s+128+36>>2]=I*F+K*G+M*H;g[s+128+40>>2]=I*J+K*L+M*N;g[s+128+44>>2]=0.0;g[s+128+48>>2]=O;g[s+128+52>>2]=P;g[s+128+56>>2]=Q;g[s+128+60>>2]=0.0;mc[c[(c[o>>2]|0)+8>>2]&127](o,s+128|0,s+112|0,s+48|0);o=c[q+4>>2]|0;mc[c[(c[o>>2]|0)+8>>2]&127](o,c[q+12>>2]|0,s+16|0,s);if(!(+g[s+112>>2]>+g[s>>2])?!(+g[s+48>>2]<+g[s+16>>2]):0)j=1;else j=0;if(!(!(+g[s+112+8>>2]>+g[s+8>>2])?!(+g[s+48+8>>2]<+g[s+16+8>>2]):0))j=0;if(!(+g[s+112+4>>2]>+g[s+4>>2])?!(+g[s+48+4>>2]<+g[s+16+4>>2]|j^1):0)break;o=c[(c[b+20>>2]|0)+(d<<2)>>2]|0;Ab[c[c[o>>2]>>2]&255](o);o=c[b+4>>2]|0;Cb[c[(c[o>>2]|0)+60>>2]&127](o,c[(c[b+20>>2]|0)+(d<<2)>>2]|0);c[(c[b+20>>2]|0)+(d<<2)>>2]=0}while(0);d=d+1|0}while((d|0)<(k|0));i=s;return}function md(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,O=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0;c[b>>2]=c[a>>2];c[b+4>>2]=c[a+4>>2];c[b+8>>2]=c[a+8>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+16+4>>2]=c[a+16+4>>2];c[b+16+8>>2]=c[a+16+8>>2];c[b+16+12>>2]=c[a+16+12>>2];c[b+32>>2]=c[a+32>>2];c[b+32+4>>2]=c[a+32+4>>2];c[b+32+8>>2]=c[a+32+8>>2];c[b+32+12>>2]=c[a+32+12>>2];o=+g[a+20>>2];v=+g[a+40>>2];m=+g[a+24>>2];p=+g[a+36>>2];r=+g[a+32>>2];n=+g[a+16>>2];s=+g[a>>2];q=+g[a+4>>2];t=+g[a+8>>2];u=1.0/((o*v-m*p)*s+q*(m*r-v*n)+(p*n-o*r)*t);g[d>>2]=(o*v-m*p)*u;g[d+4>>2]=(p*t-v*q)*u;g[d+8>>2]=(m*q-o*t)*u;g[d+12>>2]=0.0;g[d+16>>2]=(m*r-v*n)*u;g[d+20>>2]=(v*s-r*t)*u;g[d+24>>2]=(n*t-m*s)*u;g[d+28>>2]=0.0;g[d+32>>2]=(p*n-o*r)*u;g[d+36>>2]=(r*q-p*s)*u;g[d+40>>2]=(o*s-n*q)*u;g[d+44>>2]=0.0;a:do if(!(c[5788]|0)){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0}else{C=(r*q-p*s)*u;D=(m*q-o*t)*u;E=(n*t-m*s)*u;F=(o*s-n*q)*u;G=(o*v-m*p)*u;B=(m*r-v*n)*u;A=(p*n-o*r)*u;z=(p*t-v*q)*u;y=(v*s-r*t)*u;e=0;while(1){n=+N(+G);m=+N(+B);L=+N(+A);W=+N(+z);M=+N(+y);K=+N(+C);Q=+N(+D);O=+N(+E);w=+N(+F);R=n+m+L>W+M+K?n+m+L:W+M+K;M=n+W+Q>m+M+O?n+W+Q:m+M+O;m=+g[b>>2];W=+N(+m);n=+g[b+16>>2];T=+N(+n);o=+g[b+32>>2];I=+N(+o);p=+g[b+4>>2];V=+N(+p);q=+g[b+20>>2];S=+N(+q);r=+g[b+36>>2];H=+N(+r);s=+g[b+8>>2];U=+N(+s);t=+g[b+24>>2];J=+N(+t);u=+g[b+40>>2];x=+N(+u);v=W+T+I>V+S+H?W+T+I:V+S+H;v=v>U+J+x?v:U+J+x;J=W+V+U>T+S+J?W+V+U:T+S+J;w=(R>Q+O+w?R:Q+O+w)*(M>L+K+w?M:L+K+w);x=v*(J>I+H+x?J:I+H+x);if(+N(+w)<1.1920928955078125e-07){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}if(+N(+x)<1.1920928955078125e-07){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}W=+P(+(w/x),.25);M=(m*(W+-2.0)+G*(1.0/W))*.5;Q=(p*(W+-2.0)+1.0/W*B)*.5;S=(s*(W+-2.0)+1.0/W*A)*.5;O=(n*(W+-2.0)+1.0/W*z)*.5;R=(q*(W+-2.0)+1.0/W*y)*.5;T=(t*(W+-2.0)+1.0/W*C)*.5;U=(o*(W+-2.0)+1.0/W*D)*.5;V=(r*(W+-2.0)+1.0/W*E)*.5;W=(u*(W+-2.0)+1.0/W*F)*.5;g[b>>2]=m+M;g[b+4>>2]=p+Q;g[b+8>>2]=s+S;g[b+12>>2]=0.0;g[b+16>>2]=n+O;g[b+20>>2]=q+R;g[b+24>>2]=t+T;g[b+28>>2]=0.0;g[b+32>>2]=o+U;g[b+36>>2]=r+V;g[b+40>>2]=u+W;g[b+44>>2]=0.0;L=1.0/(((u+W)*(q+R)-(t+T)*(r+V))*(m+M)+(p+Q)*((t+T)*(o+U)-(u+W)*(n+O))+((r+V)*(n+O)-(q+R)*(o+U))*(s+S));G=((u+W)*(q+R)-(t+T)*(r+V))*L;z=((r+V)*(s+S)-(u+W)*(p+Q))*L;D=((t+T)*(p+Q)-(q+R)*(s+S))*L;B=((t+T)*(o+U)-(u+W)*(n+O))*L;y=((u+W)*(m+M)-(o+U)*(s+S))*L;E=((n+O)*(s+S)-(t+T)*(m+M))*L;A=((r+V)*(n+O)-(q+R)*(o+U))*L;C=((o+U)*(p+Q)-(r+V)*(m+M))*L;F=((q+R)*(m+M)-(n+O)*(p+Q))*L;g[d>>2]=G;g[d+4>>2]=z;g[d+8>>2]=D;g[d+12>>2]=0.0;g[d+16>>2]=B;g[d+20>>2]=y;g[d+24>>2]=E;g[d+28>>2]=0.0;g[d+32>>2]=A;g[d+36>>2]=C;g[d+40>>2]=F;g[d+44>>2]=0.0;U=+N(+M)+ +N(+O)+ +N(+U);V=+N(+Q)+ +N(+R)+ +N(+V);W=+N(+S)+ +N(+T)+ +N(+W);V=U>V?U:V;if((V>W?V:W)<=v*+g[5787])break;e=e+1|0;if(e>>>0>=(c[5788]|0)>>>0){e=b+20|0;f=b+36|0;h=b+8|0;i=b+24|0;j=b+40|0;k=b;l=b+4|0;break a}}K=+g[b>>2];M=+g[b+16>>2];Q=+g[b+32>>2];F=+g[b+4>>2];H=+g[b+20>>2];J=+g[b+36>>2];A=+g[b+8>>2];C=+g[b+24>>2];E=+g[b+40>>2];L=+g[a>>2];O=+g[a+16>>2];R=+g[a+32>>2];G=+g[a+4>>2];I=+g[a+20>>2];T=+g[a+36>>2];B=+g[a+8>>2];D=+g[a+24>>2];W=+g[a+40>>2];V=A*G+C*I+E*T+(F*B+H*D+J*W);S=F*L+H*O+J*R+(K*G+M*I+Q*T);U=A*L+C*O+E*R+(K*B+M*D+Q*W);W=A*B+C*D+E*W+(A*B+C*D+E*W);T=F*G+H*I+J*T+(F*G+H*I+J*T);R=K*L+M*O+Q*R+(K*L+M*O+Q*R);S=S*.5;U=U*.5;V=V*.5;R=R*.5;g[d>>2]=R;g[d+4>>2]=S;g[d+8>>2]=U;g[d+12>>2]=0.0;g[d+16>>2]=S;T=T*.5;g[d+20>>2]=T;g[d+24>>2]=V;g[d+28>>2]=0.0;g[d+32>>2]=U;g[d+36>>2]=V;W=W*.5;g[d+40>>2]=W;g[d+44>>2]=0.0;return}while(0);K=+g[k>>2];M=+g[b+16>>2];Q=+g[b+32>>2];F=+g[l>>2];H=+g[e>>2];J=+g[f>>2];A=+g[h>>2];C=+g[i>>2];E=+g[j>>2];L=+g[a>>2];O=+g[a+16>>2];R=+g[a+32>>2];G=+g[a+4>>2];I=+g[a+20>>2];T=+g[a+36>>2];B=+g[a+8>>2];D=+g[a+24>>2];W=+g[a+40>>2];V=A*G+C*I+E*T+(F*B+H*D+J*W);S=F*L+H*O+J*R+(K*G+M*I+Q*T);U=A*L+C*O+E*R+(K*B+M*D+Q*W);W=A*B+C*D+E*W+(A*B+C*D+E*W);T=F*G+H*I+J*T+(F*G+H*I+J*T);R=K*L+M*O+Q*R+(K*L+M*O+Q*R);S=S*.5;U=U*.5;V=V*.5;R=R*.5;g[d>>2]=R;g[d+4>>2]=S;g[d+8>>2]=U;g[d+12>>2]=0.0;g[d+16>>2]=S;T=T*.5;g[d+20>>2]=T;g[d+24>>2]=V;g[d+28>>2]=0.0;g[d+32>>2]=U;g[d+36>>2]=V;W=W*.5;g[d+40>>2]=W;g[d+44>>2]=0.0;return}function nd(a,b,f,j){a=a|0;b=b|0;f=f|0;j=j|0;var k=0.0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0,u=0;o=i;i=i+80|0;f=Eb[c[(c[a>>2]|0)+28>>2]&127](a)|0;k=+g[a+4>>2];l=+g[a+8>>2];m=+g[a+12>>2];if((f|0)<=0){i=o;return}n=0;do{Yb[c[(c[a>>2]|0)+16>>2]&3](a,o+76|0,o+52|0,o+64|0,o+56|0,o+72|0,o+68|0,o+48|0,o+60|0,n);a:do switch(c[o+64>>2]|0){case 0:{switch(c[o+60>>2]|0){case 2:{if((c[o+48>>2]|0)>0)j=0;else break a;do{r=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;t=c[o+76>>2]|0;s=c[o+56>>2]|0;u=t+(_(s,c[r>>2]|0)|0)|0;q=l*+g[u+4>>2];p=m*+g[u+8>>2];g[o>>2]=k*+g[u>>2];g[o+4>>2]=q;g[o+8>>2]=p;g[o+12>>2]=0.0;u=t+(_(s,c[r+4>>2]|0)|0)|0;p=l*+g[u+4>>2];q=m*+g[u+8>>2];g[o+16>>2]=k*+g[u>>2];g[o+20>>2]=p;g[o+24>>2]=q;g[o+28>>2]=0.0;r=t+(_(s,c[r+8>>2]|0)|0)|0;q=l*+g[r+4>>2];p=m*+g[r+8>>2];g[o+32>>2]=k*+g[r>>2];g[o+36>>2]=q;g[o+40>>2]=p;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}case 3:{if((c[o+48>>2]|0)>0)j=0;else break a;do{t=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(_(e[t>>1]|0,u)|0)|0;p=l*+g[r+4>>2];q=m*+g[r+8>>2];g[o>>2]=k*+g[r>>2];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(_(e[t+2>>1]|0,u)|0)|0;q=l*+g[r+4>>2];p=m*+g[r+8>>2];g[o+16>>2]=k*+g[r>>2];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(_(e[t+4>>1]|0,u)|0)|0;p=l*+g[u+4>>2];q=m*+g[u+8>>2];g[o+32>>2]=k*+g[u>>2];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}case 5:{if((c[o+48>>2]|0)>0)j=0;else break a;do{t=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(_(d[t>>0]|0,u)|0)|0;p=l*+g[r+4>>2];q=m*+g[r+8>>2];g[o>>2]=k*+g[r>>2];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(_(d[t+1>>0]|0,u)|0)|0;q=l*+g[r+4>>2];p=m*+g[r+8>>2];g[o+16>>2]=k*+g[r>>2];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(_(d[t+2>>0]|0,u)|0)|0;p=l*+g[u+4>>2];q=m*+g[u+8>>2];g[o+32>>2]=k*+g[u>>2];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}default:break a}break}case 1:{switch(c[o+60>>2]|0){case 2:{if((c[o+48>>2]|0)>0)j=0;else break a;do{u=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;s=c[o+76>>2]|0;t=c[o+56>>2]|0;r=s+(_(t,c[u>>2]|0)|0)|0;p=l*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=k*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(_(t,c[u+4>>2]|0)|0)|0;q=l*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=k*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(_(t,c[u+8>>2]|0)|0)|0;p=l*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=k*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}case 3:{if((c[o+48>>2]|0)>0)j=0;else break a;do{t=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(_(e[t>>1]|0,u)|0)|0;p=l*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=k*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(_(e[t+2>>1]|0,u)|0)|0;q=l*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=k*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(_(e[t+4>>1]|0,u)|0)|0;p=l*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=k*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}case 5:{if((c[o+48>>2]|0)>0)j=0;else break a;do{t=(c[o+72>>2]|0)+(_(c[o+68>>2]|0,j)|0)|0;s=c[o+76>>2]|0;u=c[o+56>>2]|0;r=s+(_(d[t>>0]|0,u)|0)|0;p=l*+h[r+8>>3];q=m*+h[r+16>>3];g[o>>2]=k*+h[r>>3];g[o+4>>2]=p;g[o+8>>2]=q;g[o+12>>2]=0.0;r=s+(_(d[t+1>>0]|0,u)|0)|0;q=l*+h[r+8>>3];p=m*+h[r+16>>3];g[o+16>>2]=k*+h[r>>3];g[o+20>>2]=q;g[o+24>>2]=p;g[o+28>>2]=0.0;u=s+(_(d[t+2>>0]|0,u)|0)|0;p=l*+h[u+8>>3];q=m*+h[u+16>>3];g[o+32>>2]=k*+h[u>>3];g[o+36>>2]=p;g[o+40>>2]=q;g[o+44>>2]=0.0;mc[c[(c[b>>2]|0)+8>>2]&127](b,o,n,j);j=j+1|0}while((j|0)<(c[o+48>>2]|0));break}default:break a}break}default:{}}while(0);Cb[c[(c[a>>2]|0)+24>>2]&127](a,n);n=n+1|0}while((n|0)!=(f|0));i=o;return}function od(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0.0;ga=i;i=i+128|0;K=c[b+4>>2]|0;a[K+312>>0]=0;c[K>>2]=0;a[K+356>>0]=1;c[K+292>>2]=1566444395;c[K+296>>2]=1566444395;c[K+300>>2]=1566444395;g[K+304>>2]=0.0;c[K+336>>2]=0;c[K+336+4>>2]=0;c[K+336+8>>2]=0;c[K+336+12>>2]=0;a[K+336+16>>0]=0;a[K+332>>0]=a[K+332>>0]&-16;m=+g[d+48>>2];n=+g[d+52>>2];o=+g[d+56>>2];p=+g[f+48>>2];t=+g[f+52>>2];u=+g[f+56>>2];L=+g[d>>2];M=+g[d+4>>2];N=+g[d+8>>2];P=+g[d+16>>2];Q=+g[d+20>>2];R=+g[d+24>>2];S=+g[d+32>>2];T=+g[d+36>>2];U=+g[d+40>>2];V=+g[f>>2];W=+g[f+4>>2];X=+g[f+8>>2];Y=+g[f+16>>2];Z=+g[f+20>>2];_=+g[f+24>>2];$=+g[f+32>>2];aa=+g[f+36>>2];ba=+g[f+40>>2];da=+g[e+48>>2]-m-(+g[h+48>>2]-p);ea=+g[e+52>>2]-n-(+g[h+52>>2]-t);fa=+g[e+56>>2]-o-(+g[h+56>>2]-u);K=c[b+8>>2]|0;B=c[(c[K>>2]|0)+64>>2]|0;g[ga+96>>2]=L*-da+P*-ea+S*-fa;g[ga+96+4>>2]=M*-da+Q*-ea+T*-fa;g[ga+96+8>>2]=N*-da+R*-ea+U*-fa;g[ga+96+12>>2]=0.0;ic[B&127](ga+112|0,K,ga+96|0);I=+g[ga+112>>2];J=+g[ga+112+4>>2];H=+g[ga+112+8>>2];v=I*+g[d>>2]+J*+g[d+4>>2]+H*+g[d+8>>2]+ +g[d+48>>2];y=I*+g[d+16>>2]+J*+g[d+20>>2]+H*+g[d+24>>2]+ +g[d+52>>2];H=I*+g[d+32>>2]+J*+g[d+36>>2]+H*+g[d+40>>2]+ +g[d+56>>2];K=c[b+12>>2]|0;B=c[(c[K>>2]|0)+64>>2]|0;J=da*+g[f+4>>2]+ea*+g[f+20>>2]+fa*+g[f+36>>2];I=da*+g[f+8>>2]+ea*+g[f+24>>2]+fa*+g[f+40>>2];g[ga+64>>2]=da*+g[f>>2]+ea*+g[f+16>>2]+fa*+g[f+32>>2];g[ga+64+4>>2]=J;g[ga+64+8>>2]=I;g[ga+64+12>>2]=0.0;ic[B&127](ga+80|0,K,ga+64|0);I=+g[ga+80>>2];J=+g[ga+80+4>>2];x=+g[ga+80+8>>2];v=v-(I*+g[f>>2]+J*+g[f+4>>2]+x*+g[f+8>>2]+ +g[f+48>>2]);y=y-(I*+g[f+16>>2]+J*+g[f+20>>2]+x*+g[f+24>>2]+ +g[f+52>>2]);x=H-(I*+g[f+32>>2]+J*+g[f+36>>2]+x*+g[f+40>>2]+ +g[f+56>>2]);a:do if(v*v+y*y+x*x>9.999999747378752e-05){J=m;m=0.0;K=32;r=0;s=0;q=0;l=0;A=0;while(1){if(!K)break a;K=K+-1|0;w=c[b+8>>2]|0;z=c[(c[w>>2]|0)+64>>2]|0;F=-v;ha=-y;C=-x;g[ga+32>>2]=L*F+P*ha+S*C;g[ga+32+4>>2]=M*F+Q*ha+T*C;g[ga+32+8>>2]=N*F+R*ha+U*C;g[ga+32+12>>2]=0.0;ic[z&127](ga+48|0,w,ga+32|0);C=+g[ga+48>>2];ha=+g[ga+48+4>>2];F=+g[ga+48+8>>2];D=J+(L*C+M*ha+N*F);E=n+(P*C+Q*ha+R*F);F=o+(S*C+T*ha+U*F);w=c[b+12>>2]|0;z=c[(c[w>>2]|0)+64>>2]|0;g[ga>>2]=V*v+Y*y+$*x;g[ga+4>>2]=W*v+Z*y+aa*x;g[ga+8>>2]=X*v+_*y+ba*x;g[ga+12>>2]=0.0;ic[z&127](ga+16|0,w,ga);ha=+g[ga+16>>2];C=+g[ga+16+4>>2];I=+g[ga+16+8>>2];G=p+(V*ha+W*C+X*I);H=t+(Y*ha+Z*C+_*I);I=u+($*ha+aa*C+ba*I);C=v*(D-G)+y*(E-H)+x*(F-I);w=(g[k>>2]=v,c[k>>2]|0);z=(g[k>>2]=y,c[k>>2]|0);B=(g[k>>2]=x,c[k>>2]|0);if(m>1.0){l=0;ca=24;break}if(C>0.0){n=da*v+ea*y+fa*x;if(n>=-1.4210854715202004e-14){l=0;ca=24;break}m=m-C/n;C=(1.0-m)*+g[d+48>>2]+m*+g[e+48>>2];n=(1.0-m)*+g[d+52>>2]+m*+g[e+52>>2];o=(1.0-m)*+g[d+56>>2]+m*+g[e+56>>2];p=(1.0-m)*+g[f+48>>2]+m*+g[h+48>>2];t=(1.0-m)*+g[f+52>>2]+m*+g[h+52>>2];u=(1.0-m)*+g[f+56>>2]+m*+g[h+56>>2];r=w;s=A;q=z;l=B}else C=J;A=c[b+4>>2]|0;B=c[A>>2]|0;if((B|0)>0){v=+g[A+308>>2];w=0;z=0;do{y=D-G-+g[A+4+(z<<4)>>2];J=E-H-+g[A+4+(z<<4)+4>>2];ha=F-I-+g[A+4+(z<<4)+8>>2];w=w|y*y+J*J+ha*ha<=v;z=z+1|0}while((z|0)!=(B|0))}else w=0;if((+g[A+304>>2]==0.0?F-I==+g[A+300>>2]:0)?E-H==+g[A+296>>2]:0){if(!(D-G==+g[A+292>>2]|w))ca=16}else if(!w)ca=16;if((ca|0)==16){ca=0;g[A+292>>2]=D-G;g[A+296>>2]=E-H;g[A+300>>2]=F-I;g[A+304>>2]=0.0;a[A+356>>0]=1;g[A+4+(B<<4)>>2]=D-G;g[A+4+(B<<4)+4>>2]=E-H;g[A+4+(B<<4)+8>>2]=F-I;g[A+4+(B<<4)+12>>2]=0.0;B=c[A>>2]|0;g[A+84+(B<<4)>>2]=D;g[A+84+(B<<4)+4>>2]=E;g[A+84+(B<<4)+8>>2]=F;g[A+84+(B<<4)+12>>2]=0.0;B=c[A>>2]|0;g[A+164+(B<<4)>>2]=G;g[A+164+(B<<4)+4>>2]=H;g[A+164+(B<<4)+8>>2]=I;g[A+164+(B<<4)+12>>2]=0.0;c[A>>2]=(c[A>>2]|0)+1;A=c[b+4>>2]|0}B=Ec(A)|0;v=+g[A+276>>2];y=+g[A+280>>2];x=+g[A+284>>2];if(!B)break a;if(!(v*v+y*y+x*x>9.999999747378752e-05))break a;else{J=C;A=c[A+288>>2]|0}}if((ca|0)==24){i=ga;return l|0}}else{m=0.0;r=0;s=0;q=0;l=0}while(0);g[j+164>>2]=m;m=(c[k>>2]=r,+g[k>>2]);n=(c[k>>2]=q,+g[k>>2]);p=(c[k>>2]=l,+g[k>>2]);if(!(m*m+n*n+p*p>=1.4210854715202004e-14)){c[j+132>>2]=0;c[j+132+4>>2]=0;c[j+132+8>>2]=0;c[j+132+12>>2]=0;o=0.0;n=0.0;m=0.0}else{ha=1.0/+O(+(m*m+n*n+p*p));g[j+132>>2]=m*ha;g[j+136>>2]=n*ha;g[j+140>>2]=p*ha;c[j+144>>2]=s;o=m*ha;n=n*ha;m=p*ha}if(da*o+ea*n+fa*m>=-+g[j+172>>2]){b=0;i=ga;return b|0}b=c[b+4>>2]|0;Ec(b)|0;Ep(j+148|0,b+260|0,16)|0;b=1;i=ga;return b|0}function pd(d,e,f,h,j){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0.0,l=0.0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0;A=i;i=i+160|0;a[d+60>>0]=f&1;if(f){r=+g[h>>2]+-1.0;u=+g[h+4>>2]+-1.0;s=+g[h+8>>2]+-1.0;g[d+4>>2]=r;g[d+8>>2]=u;g[d+12>>2]=s;g[d+16>>2]=0.0;v=+g[j>>2]+1.0;x=+g[j+4>>2]+1.0;y=+g[j+8>>2]+1.0;g[d+20>>2]=v;g[d+24>>2]=x;g[d+28>>2]=y;g[d+32>>2]=0.0;g[d+36>>2]=65533.0/(v-r);g[d+40>>2]=65533.0/(x-u);g[d+44>>2]=65533.0/(y-s);g[d+48>>2]=0.0;a[d+60>>0]=1;k=r+ +(~~((r-r)*(65533.0/(v-r)))&65534)/(65533.0/(v-r))+-1.0;l=u+ +(~~((u-u)*(65533.0/(x-u)))&65534)/(65533.0/(x-u))+-1.0;p=s+ +(~~((s-s)*(65533.0/(y-s)))&65534)/(65533.0/(y-s))+-1.0;if(k<r){g[d+4>>2]=k;z=k}else z=r;if(l<u){g[d+8>>2]=l;w=l}else w=u;if(p<s){g[d+12>>2]=p;t=p}else t=s;p=z+ +((~~((v-z)*(65533.0/(v-r))+1.0)&65535|1)&65535)/(65533.0/(v-r))+1.0;l=w+ +((~~((x-w)*(65533.0/(x-u))+1.0)&65535|1)&65535)/(65533.0/(x-u))+1.0;k=t+ +((~~((y-t)*(65533.0/(y-s))+1.0)&65535|1)&65535)/(65533.0/(y-s))+1.0;if(v<p)g[d+20>>2]=p;else p=v;if(x<l)g[d+24>>2]=l;else l=x;if(y<k)g[d+28>>2]=k;else k=y;g[d+36>>2]=65533.0/(p-z);g[d+40>>2]=65533.0/(l-w);g[d+44>>2]=65533.0/(k-t);g[d+48>>2]=0.0;c[A+144>>2]=8020;c[A+144+4>>2]=d+104;c[A+144+8>>2]=d;mc[c[(c[e>>2]|0)+8>>2]&127](e,A+144|0,d+4|0,d+20|0);f=c[d+108>>2]|0;c[A+128>>2]=0;c[A+128+4>>2]=0;c[A+128+8>>2]=0;c[A+128+12>>2]=0;m=c[d+128>>2]|0;if((m|0)<(f<<1|0)){if((c[d+132>>2]|0)<(f<<1|0)){if(!f){h=0;j=m}else{c[6435]=(c[6435]|0)+1;h=yc(f<<5|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[d+128>>2]|0}if((j|0)>0){e=0;do{q=h+(e<<4)|0;o=(c[d+136>>2]|0)+(e<<4)|0;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2];c[q+12>>2]=c[o+12>>2];e=e+1|0}while((e|0)!=(j|0))}j=c[d+136>>2]|0;if(j|0){if(a[d+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=h;c[d+132>>2]=f<<1;j=d+136|0}else j=d+136|0;h=m;do{q=(c[j>>2]|0)+(h<<4)|0;c[q>>2]=c[A+128>>2];c[q+4>>2]=c[A+128+4>>2];c[q+8>>2]=c[A+128+8>>2];c[q+12>>2]=c[A+128+12>>2];h=h+1|0}while((h|0)!=(f<<1|0))}c[d+128>>2]=f<<1}else{c[A+144>>2]=8040;c[A+144+4>>2]=d+64;c[A+112>>2]=-581039253;c[A+112+4>>2]=-581039253;c[A+112+8>>2]=-581039253;g[A+112+12>>2]=0.0;c[A+96>>2]=1566444395;c[A+96+4>>2]=1566444395;c[A+96+8>>2]=1566444395;g[A+96+12>>2]=0.0;mc[c[(c[e>>2]|0)+8>>2]&127](e,A+144|0,A+112|0,A+96|0);f=c[d+68>>2]|0;m=A+32|0;o=m+64|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(o|0));q=c[d+88>>2]|0;if((q|0)<(f<<1|0)){if((c[d+92>>2]|0)<(f<<1|0)){if(!f){h=0;j=q}else{c[6435]=(c[6435]|0)+1;h=yc(f<<7|19)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[d+88>>2]|0}if((j|0)>0){e=0;do{m=h+(e<<6)|0;n=(c[d+96>>2]|0)+(e<<6)|0;o=m+64|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));e=e+1|0}while((e|0)!=(j|0))}j=c[d+96>>2]|0;if(j|0){if(a[d+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=h;c[d+92>>2]=f<<1;j=d+96|0}else j=d+96|0;h=q;do{m=(c[j>>2]|0)+(h<<6)|0;n=A+32|0;o=m+64|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));h=h+1|0}while((h|0)!=(f<<1|0))}c[d+88>>2]=f<<1}c[d+56>>2]=0;Lc(d,0,f);if(a[d+60>>0]|0?(c[d+152>>2]|0)==0:0){if(!(c[d+156>>2]|0)){c[6435]=(c[6435]|0)+1;f=yc(51)|0;if(!f)e=0;else{c[(f+4+15&-16)+-4>>2]=f;e=f+4+15&-16}f=c[d+152>>2]|0;if((f|0)>0){h=0;do{q=e+(h<<5)|0;o=(c[d+160>>2]|0)+(h<<5)|0;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2];c[q+12>>2]=c[o+12>>2];c[q+16>>2]=c[o+16>>2];c[q+20>>2]=c[o+20>>2];c[q+24>>2]=c[o+24>>2];c[q+28>>2]=c[o+28>>2];h=h+1|0}while((h|0)!=(f|0))}f=c[d+160>>2]|0;if(f|0){if(a[d+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=e;c[d+156>>2]=1;h=d+160|0;j=(c[d+152>>2]|0)+1|0;f=e}else{h=d+160|0;j=1;f=c[d+160>>2]|0}c[d+152>>2]=j;c[f>>2]=c[A>>2];c[f+4>>2]=c[A+4>>2];c[f+8>>2]=c[A+8>>2];c[f+12>>2]=c[A+12>>2];c[f+16>>2]=c[A+16>>2];c[f+20>>2]=c[A+20>>2];c[f+24>>2]=c[A+24>>2];c[f+28>>2]=c[A+28>>2];q=c[h>>2]|0;o=c[d+136>>2]|0;b[q>>1]=b[o>>1]|0;b[q+2>>1]=b[o+2>>1]|0;b[q+4>>1]=b[o+4>>1]|0;b[q+6>>1]=b[o+6>>1]|0;b[q+8>>1]=b[o+8>>1]|0;b[q+10>>1]=b[o+10>>1]|0;c[q+12>>2]=0;o=c[o+12>>2]|0;c[q+16>>2]=(o|0)>-1?1:0-o|0}c[d+168>>2]=c[d+152>>2];f=c[d+116>>2]|0;if(f|0){if(a[d+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[d+116>>2]=0}a[d+120>>0]=1;c[d+116>>2]=0;c[d+108>>2]=0;c[d+112>>2]=0;f=c[d+76>>2]|0;if(!f){a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;d=d+72|0;c[d>>2]=0;i=A;return}if(a[d+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[d+76>>2]=0;a[d+80>>0]=1;c[d+76>>2]=0;c[d+68>>2]=0;d=d+72|0;c[d>>2]=0;i=A;return}function qd(b,d,e,f,h,i,j,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;l=l|0;m=+m;n=+n;o=+o;var p=0,q=0,r=0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0.0,P=0.0,Q=0.0,R=0.0;N=c[b+68>>2]|0;if((N|0)==(c[b+72>>2]|0)?(t=N|0?N<<1:1,(N|0)<(t|0)):0){if(!t){p=0;q=N}else{c[6435]=(c[6435]|0)+1;p=yc((t*152|3)+16|0)|0;if(!p)p=0;else{c[(p+4+15&-16)+-4>>2]=p;p=p+4+15&-16}q=c[b+68>>2]|0}if((q|0)>0){r=0;do{bn(p+(r*152|0)|0,(c[b+76>>2]|0)+(r*152|0)|0,152)|0;r=r+1|0}while((r|0)!=(q|0))}q=c[b+76>>2]|0;if(q|0){if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[b+76>>2]=0}a[b+80>>0]=1;c[b+76>>2]=p;c[b+72>>2]=t;p=c[b+68>>2]|0}else p=N;c[b+68>>2]=p+1;M=c[b+76>>2]|0;c[M+(N*152|0)+140>>2]=h;r=c[b+16>>2]|0;p=c[r+(e*244|0)+240>>2]|0;t=c[r+(f*244|0)+240>>2]|0;c[M+(N*152|0)+144>>2]=e;c[M+(N*152|0)+148>>2]=f;q=c[i+84>>2]|0;c[M+(N*152|0)+104>>2]=q;c[M+(N*152|0)+132>>2]=0;g[M+(N*152|0)+100>>2]=0.0;g[M+(N*152|0)+96>>2]=0.0;L=(c[k>>2]=q,+g[k>>2]);if(p|0){c[M+(N*152|0)+16>>2]=c[d>>2];c[M+(N*152|0)+16+4>>2]=c[d+4>>2];c[M+(N*152|0)+16+8>>2]=c[d+8>>2];c[M+(N*152|0)+16+12>>2]=c[d+12>>2];K=+g[j+4>>2];D=+g[M+(N*152|0)+24>>2];H=+g[j+8>>2];I=+g[M+(N*152|0)+20>>2];E=+g[M+(N*152|0)+16>>2];J=+g[j>>2];g[M+(N*152|0)>>2]=K*D-H*I;g[M+(N*152|0)+4>>2]=H*E-D*J;g[M+(N*152|0)+8>>2]=I*J-K*E;g[M+(N*152|0)+12>>2]=0.0;v=((K*D-H*I)*+g[p+264>>2]+(H*E-D*J)*+g[p+268>>2]+(I*J-K*E)*+g[p+272>>2])*+g[p+544>>2];s=((K*D-H*I)*+g[p+280>>2]+(H*E-D*J)*+g[p+284>>2]+(I*J-K*E)*+g[p+288>>2])*+g[p+548>>2];u=((K*D-H*I)*+g[p+296>>2]+(H*E-D*J)*+g[p+300>>2]+(I*J-K*E)*+g[p+304>>2])*+g[p+552>>2];g[M+(N*152|0)+64>>2]=v;g[M+(N*152|0)+68>>2]=s;g[M+(N*152|0)+72>>2]=u;g[M+(N*152|0)+76>>2]=0.0;z=E;A=I;B=D;C=K*D-H*I;D=H*E-D*J;E=I*J-K*E}else{c[M+(N*152|0)+64>>2]=0;c[M+(N*152|0)+64+4>>2]=0;c[M+(N*152|0)+64+8>>2]=0;c[M+(N*152|0)+64+12>>2]=0;c[M+(N*152|0)>>2]=0;c[M+(N*152|0)+4>>2]=0;c[M+(N*152|0)+8>>2]=0;c[M+(N*152|0)+12>>2]=0;c[M+(N*152|0)+16>>2]=0;c[M+(N*152|0)+20>>2]=0;c[M+(N*152|0)+24>>2]=0;c[M+(N*152|0)+28>>2]=0;s=0.0;u=0.0;v=0.0;z=0.0;A=0.0;B=0.0;C=0.0;D=0.0;E=0.0}if(t|0){K=-+g[d>>2];P=-+g[d+4>>2];J=-+g[d+8>>2];g[M+(N*152|0)+48>>2]=K;g[M+(N*152|0)+52>>2]=P;g[M+(N*152|0)+56>>2]=J;g[M+(N*152|0)+60>>2]=0.0;O=+g[l+4>>2];R=+g[l+8>>2];Q=+g[l>>2];g[M+(N*152|0)+32>>2]=O*J-R*P;g[M+(N*152|0)+36>>2]=R*K-Q*J;g[M+(N*152|0)+40>>2]=Q*P-O*K;g[M+(N*152|0)+44>>2]=0.0;w=((O*J-R*P)*+g[t+264>>2]+(R*K-Q*J)*+g[t+268>>2]+(Q*P-O*K)*+g[t+272>>2])*+g[t+544>>2];x=((O*J-R*P)*+g[t+280>>2]+(R*K-Q*J)*+g[t+284>>2]+(Q*P-O*K)*+g[t+288>>2])*+g[t+548>>2];y=((O*J-R*P)*+g[t+296>>2]+(R*K-Q*J)*+g[t+300>>2]+(Q*P-O*K)*+g[t+304>>2])*+g[t+552>>2];g[M+(N*152|0)+80>>2]=w;g[M+(N*152|0)+84>>2]=x;g[M+(N*152|0)+88>>2]=y;g[M+(N*152|0)+92>>2]=0.0;F=K;G=P;H=J;I=O*J-R*P;J=R*K-Q*J;K=Q*P-O*K}else{c[M+(N*152|0)+80>>2]=0;c[M+(N*152|0)+80+4>>2]=0;c[M+(N*152|0)+80+8>>2]=0;c[M+(N*152|0)+80+12>>2]=0;c[M+(N*152|0)+32>>2]=0;c[M+(N*152|0)+32+4>>2]=0;c[M+(N*152|0)+32+8>>2]=0;c[M+(N*152|0)+32+12>>2]=0;c[M+(N*152|0)+32+16>>2]=0;c[M+(N*152|0)+32+20>>2]=0;c[M+(N*152|0)+32+24>>2]=0;c[M+(N*152|0)+32+28>>2]=0;w=0.0;x=0.0;y=0.0;F=0.0;G=0.0;H=0.0;I=0.0;J=0.0;K=0.0}if(p|0){P=+g[j+8>>2];Q=+g[j+4>>2];R=+g[j>>2];u=+g[p+344>>2]+((s*P-u*Q)*+g[d>>2]+(u*R-P*v)*+g[d+4>>2]+(Q*v-s*R)*+g[d+8>>2])}else u=0.0;if(t|0){Q=-w;s=-x;y=-y;O=+g[l+8>>2];P=+g[l+4>>2];R=+g[l>>2];s=+g[t+344>>2]+((O*s-P*y)*+g[d>>2]+(R*y-O*Q)*+g[d+4>>2]+(P*Q-R*s)*+g[d+8>>2])}else s=0.0;x=m/(u+s);g[M+(N*152|0)+108>>2]=x;if(p|0){u=+g[r+(e*244|0)+192>>2];v=+g[r+(e*244|0)+196>>2];w=+g[r+(e*244|0)+200>>2];s=(+g[r+(e*244|0)+176>>2]+ +g[r+(e*244|0)+208>>2])*z+(+g[r+(e*244|0)+180>>2]+ +g[r+(e*244|0)+212>>2])*A+(+g[r+(e*244|0)+184>>2]+ +g[r+(e*244|0)+216>>2])*B}else{u=0.0;v=0.0;w=0.0;s=z*0.0+A*0.0+B*0.0}s=s+(u*C+v*D+w*E);if(t|0){O=+g[r+(f*244|0)+192>>2];P=+g[r+(f*244|0)+196>>2];R=+g[r+(f*244|0)+200>>2];Q=(+g[r+(f*244|0)+176>>2]+ +g[r+(f*244|0)+208>>2])*F+(+g[r+(f*244|0)+180>>2]+ +g[r+(f*244|0)+212>>2])*G+(+g[r+(f*244|0)+184>>2]+ +g[r+(f*244|0)+216>>2])*H;O=O*I;P=P*J;P=O+P;R=R*K;R=P+R;R=Q+R;R=s+R;R=n-R;R=x*R;f=M+(N*152|0)+112|0;g[f>>2]=R;f=M+(N*152|0)+116|0;g[f>>2]=o;R=-L;f=M+(N*152|0)+120|0;g[f>>2]=R;f=M+(N*152|0)+124|0;c[f>>2]=q;return}else{O=0.0;P=0.0;R=0.0;Q=F*0.0+G*0.0+H*0.0;O=O*I;P=P*J;P=O+P;R=R*K;R=P+R;R=Q+R;R=s+R;R=n-R;R=x*R;f=M+(N*152|0)+112|0;g[f>>2]=R;f=M+(N*152|0)+116|0;g[f>>2]=o;R=-L;f=M+(N*152|0)+120|0;g[f>>2]=R;f=M+(N*152|0)+124|0;c[f>>2]=q;return}}function rd(b,d){b=b|0;d=+d;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0;C=i;i=i+64|0;e=c[b+136>>2]|0;if((e|0)>0){f=0;do{Ae(c[b+116>>2]|0,c[b+144>>2]|0,f,0);f=f+1|0;e=c[b+136>>2]|0}while((f|0)<(e|0))}f=c[b+116>>2]|0;t=+g[f+312>>2];u=+g[f+316>>2];h=+g[f+320>>2];h=+O(+(t*t+u*u+h*h))*3.5999999046325684;g[b+112>>2]=h;B=c[b+128>>2]|0;if(+g[f+4+(B<<2)>>2]*+g[f+312>>2]+ +g[f+20+(B<<2)>>2]*+g[f+316>>2]+ +g[f+36+(B<<2)>>2]*+g[f+320>>2]<0.0)g[b+112>>2]=-h;if((e|0)>0){B=0;do{A=c[b+144>>2]|0;p=A+(B*284|0)|0;Tg(f,p,0);o=A+(B*284|0)+204|0;e=A+(B*284|0)+212|0;h=+g[o>>2]+ +g[e>>2];q=A+(B*284|0)+52|0;v=A+(B*284|0)+56|0;w=A+(B*284|0)+60|0;D=A+(B*284|0)+36|0;x=A+(B*284|0)+16|0;t=h*+g[v>>2]+ +g[A+(B*284|0)+40>>2];u=h*+g[w>>2]+ +g[A+(B*284|0)+44>>2];g[A+(B*284|0)+16>>2]=+g[q>>2]*h+ +g[D>>2];y=A+(B*284|0)+20|0;g[y>>2]=t;z=A+(B*284|0)+24|0;g[z>>2]=u;g[A+(B*284|0)+28>>2]=0.0;g[C+32>>2]=-1.0;f=c[b+100>>2]|0;D=Ib[c[(c[f>>2]|0)+8>>2]&31](f,D,x,C)|0;f=A+(B*284|0)+88|0;c[f>>2]=0;do if(D){h=h*+g[C+32>>2];c[p>>2]=c[C+16>>2];c[p+4>>2]=c[C+16+4>>2];c[p+8>>2]=c[C+16+8>>2];c[p+12>>2]=c[C+16+12>>2];a[A+(B*284|0)+84>>0]=1;if((a[22552]|0)==0?Wa(22552)|0:0){c[C+40>>2]=0;c[C+40+4>>2]=0;c[C+40+8>>2]=0;c[C+40+12>>2]=0;og(23888,0.0,0,0,C+40|0);_a(22552)}c[6023]=c[6023]|1;g[6058]=0.0;j=+g[6068]*0.0;k=+g[6069]*0.0;g[6063]=+g[6067]*0.0;g[6064]=j;g[6065]=k;g[6066]=0.0;c[6071]=0;c[6072]=0;c[6073]=0;c[6074]=0;k=+g[6060]*0.0;j=+g[6061]*0.0;g[6112]=+g[6059]*0.0;g[6113]=k;g[6114]=j;g[6115]=0.0;c[f>>2]=23888;h=h-+g[e>>2];e=A+(B*284|0)+32|0;g[e>>2]=h;j=+g[o>>2];k=+g[A+(B*284|0)+208>>2]*.009999999776482582;if(h<j-k){g[e>>2]=j-k;h=j-k}if(h>j+k)g[e>>2]=j+k;c[x>>2]=c[C>>2];c[x+4>>2]=c[C+4>>2];c[x+8>>2]=c[C+8>>2];c[x+12>>2]=c[C+12>>2];s=+g[p>>2];t=+g[A+(B*284|0)+4>>2];u=+g[A+(B*284|0)+8>>2];r=s*+g[q>>2]+t*+g[v>>2]+u*+g[w>>2];e=c[b+116>>2]|0;n=+g[x>>2]-+g[e+52>>2];m=+g[y>>2]-+g[e+56>>2];h=+g[z>>2]-+g[e+60>>2];j=+g[e+332>>2];k=+g[e+336>>2];l=+g[e+328>>2];if(!(r>=-.10000000149011612)){g[A+(B*284|0)+272>>2]=-1.0/r*(s*(j*h-m*k+ +g[e+312>>2])+t*(n*k-h*l+ +g[e+316>>2])+u*(m*l-n*j+ +g[e+320>>2]));g[A+(B*284|0)+268>>2]=-1.0/r;break}else{g[A+(B*284|0)+272>>2]=0.0;g[A+(B*284|0)+268>>2]=10.0;break}}else{c[A+(B*284|0)+32>>2]=c[o>>2];g[A+(B*284|0)+272>>2]=0.0;t=-+g[v>>2];u=-+g[w>>2];g[p>>2]=-+g[q>>2];g[A+(B*284|0)+4>>2]=t;g[A+(B*284|0)+8>>2]=u;g[A+(B*284|0)+12>>2]=0.0;g[A+(B*284|0)+268>>2]=1.0}while(0);B=B+1|0;e=c[b+136>>2]|0;f=c[b+116>>2]|0}while((B|0)<(e|0));j=1.0/+g[f+344>>2];if((e|0)>0){f=0;do{e=c[b+144>>2]|0;if(!(a[e+(f*284|0)+84>>0]|0))h=0.0;else{h=+g[e+(f*284|0)+272>>2];h=j*(+g[e+(f*284|0)+216>>2]*(+g[e+(f*284|0)+204>>2]-+g[e+(f*284|0)+32>>2])*+g[e+(f*284|0)+268>>2]-h*+g[(h<0.0?e+(f*284|0)+220|0:e+(f*284|0)+224|0)>>2]);h=h<0.0?0.0:h}g[e+(f*284|0)+276>>2]=h;f=f+1|0;e=c[b+136>>2]|0}while((f|0)<(e|0));if((e|0)>0){e=0;do{B=c[b+144>>2]|0;s=+g[B+(e*284|0)+276>>2];u=+g[B+(e*284|0)+248>>2];s=s>u?u:s;u=s*+g[B+(e*284|0)+4>>2]*d;t=s*+g[B+(e*284|0)+8>>2]*d;g[C+40>>2]=+g[B+(e*284|0)>>2]*s*d;g[C+40+4>>2]=u;g[C+40+8>>2]=t;g[C+40+12>>2]=0.0;D=c[b+116>>2]|0;t=+g[B+(e*284|0)+20>>2]-+g[D+56>>2];u=+g[B+(e*284|0)+24>>2]-+g[D+60>>2];g[C>>2]=+g[B+(e*284|0)+16>>2]-+g[D+52>>2];g[C+4>>2]=t;g[C+8>>2]=u;g[C+12>>2]=0.0;gj(D,C+40|0,C);e=e+1|0}while((e|0)<(c[b+136>>2]|0))}}}zb[c[(c[b>>2]|0)+20>>2]&31](b,d);f=c[b+136>>2]|0;if((f|0)<=0){i=C;return}o=c[b+144>>2]|0;p=c[b+116>>2]|0;q=0;do{h=+g[o+(q*284|0)+36>>2]-+g[p+52>>2];j=+g[o+(q*284|0)+40>>2]-+g[p+56>>2];k=+g[o+(q*284|0)+44>>2]-+g[p+60>>2];l=+g[p+332>>2];m=+g[p+336>>2];n=+g[p+328>>2];if(!(a[o+(q*284|0)+84>>0]|0)){e=o+(q*284|0)+240|0;h=+g[e>>2];D=o+(q*284|0)+236|0;g[D>>2]=h+ +g[D>>2]}else{e=c[b+128>>2]|0;F=+g[p+4+(e<<2)>>2];r=+g[p+20+(e<<2)>>2];t=+g[p+36+(e<<2)>>2];E=+g[o+(q*284|0)>>2];s=+g[o+(q*284|0)+4>>2];u=+g[o+(q*284|0)+8>>2];h=((j*n-h*l+ +g[p+320>>2])*(t-u*(F*E+r*s+t*u))+((l*k-j*m+ +g[p+312>>2])*(F-E*(F*E+r*s+t*u))+(h*m-k*n+ +g[p+316>>2])*(r-s*(F*E+r*s+t*u))))*d/+g[o+(q*284|0)+212>>2];e=o+(q*284|0)+240|0;g[e>>2]=h;D=o+(q*284|0)+236|0;g[D>>2]=+g[D>>2]+h}g[e>>2]=h*.9900000095367432;q=q+1|0}while((q|0)!=(f|0));i=C;return}function sd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;C=+g[b+48>>2];i=+g[d>>2];D=+g[b+64>>2];j=+g[d+4>>2];E=+g[b+80>>2];p=+g[d+8>>2];s=+g[b+52>>2];r=+g[b+68>>2];q=+g[b+84>>2];w=+g[b+56>>2];y=+g[b+72>>2];z=+g[b+88>>2];v=+g[d+16>>2];u=+g[d+20>>2];t=+g[d+24>>2];x=+g[d+32>>2];F=+g[d+36>>2];G=+g[d+40>>2];k=+g[b+96>>2];h=+g[b+100>>2];B=+g[b+104>>2];A=+g[d+48>>2]+(i*k+j*h+p*B);f=v*k+u*h+t*B+ +g[d+52>>2];B=x*k+F*h+G*B+ +g[d+56>>2];g[b+1064>>2]=C*i+D*j+E*p;g[b+1068>>2]=i*s+j*r+p*q;g[b+1072>>2]=i*w+j*y+p*z;g[b+1076>>2]=0.0;g[b+1080>>2]=C*v+D*u+E*t;g[b+1084>>2]=s*v+r*u+q*t;g[b+1088>>2]=w*v+y*u+z*t;g[b+1092>>2]=0.0;g[b+1096>>2]=C*x+D*F+E*G;g[b+1100>>2]=s*x+r*F+q*G;g[b+1104>>2]=w*x+y*F+z*G;g[b+1108>>2]=0.0;g[b+1112>>2]=A;g[b+1116>>2]=f;g[b+1120>>2]=B;g[b+1124>>2]=0.0;B=+g[b+112>>2];f=+g[e>>2];A=+g[b+128>>2];G=+g[e+4>>2];z=+g[b+144>>2];F=+g[e+8>>2];y=+g[b+116>>2];x=+g[b+132>>2];w=+g[b+148>>2];q=+g[b+120>>2];r=+g[b+136>>2];s=+g[b+152>>2];E=+g[e+16>>2];D=+g[e+20>>2];C=+g[e+24>>2];t=+g[e+32>>2];u=+g[e+36>>2];v=+g[e+40>>2];p=+g[b+160>>2];j=+g[b+164>>2];i=+g[b+168>>2];h=+g[e+48>>2]+(f*p+G*j+F*i);k=E*p+D*j+C*i+ +g[e+52>>2];i=t*p+u*j+v*i+ +g[e+56>>2];g[b+1128>>2]=B*f+A*G+z*F;g[b+1132>>2]=f*y+G*x+F*w;g[b+1136>>2]=f*q+G*r+F*s;g[b+1140>>2]=0.0;g[b+1144>>2]=B*E+A*D+z*C;g[b+1148>>2]=y*E+x*D+w*C;g[b+1152>>2]=q*E+r*D+s*C;g[b+1156>>2]=0.0;g[b+1160>>2]=B*t+A*u+z*v;g[b+1164>>2]=y*t+x*u+w*v;g[b+1168>>2]=q*t+r*u+s*v;g[b+1172>>2]=0.0;g[b+1176>>2]=h;g[b+1180>>2]=k;g[b+1184>>2]=i;g[b+1188>>2]=0.0;h=h-+g[b+1112>>2];k=k-+g[b+1116>>2];i=i-+g[b+1120>>2];w=+g[b+1084>>2];x=+g[b+1104>>2];y=+g[b+1088>>2];z=+g[b+1100>>2];A=+g[b+1096>>2];B=+g[b+1080>>2];C=+g[b+1064>>2];D=+g[b+1068>>2];E=+g[b+1072>>2];F=1.0/((w*x-y*z)*C+D*(y*A-x*B)+(z*B-w*A)*E);G=(z*B-w*A)*F;f=i*(y*D-w*E)*F+(h*(w*x-y*z)*F+k*(z*E-x*D)*F);j=i*(B*E-y*C)*F+(h*(y*A-x*B)*F+k*(x*C-A*E)*F);k=i*(w*C-B*D)*F+(h*G+k*(A*D-z*C)*F);g[b+1256>>2]=f;g[b+1260>>2]=j;g[b+1264>>2]=k;g[b+1268>>2]=0.0;g[b+840>>2]=f;h=+g[b+680>>2];i=+g[b+696>>2];do if(!(h>i)){if(h>f){c[b+856>>2]=2;g[b+824>>2]=f-h;break}if(i<f){c[b+856>>2]=1;g[b+824>>2]=f-i;break}else{c[b+856>>2]=0;g[b+824>>2]=0.0;break}}else{c[b+856>>2]=0;g[b+824>>2]=0.0}while(0);g[b+844>>2]=j;f=+g[b+684>>2];h=+g[b+700>>2];do if(!(f>h)){if(f>j){c[b+860>>2]=2;g[b+828>>2]=j-f;break}if(h<j){c[b+860>>2]=1;g[b+828>>2]=j-h;break}else{c[b+860>>2]=0;g[b+828>>2]=0.0;break}}else{c[b+860>>2]=0;g[b+828>>2]=0.0}while(0);g[b+848>>2]=k;f=+g[b+688>>2];h=+g[b+704>>2];do if(!(f>h)){if(f>k){c[b+864>>2]=2;g[b+832>>2]=k-f;break}if(h<k){c[b+864>>2]=1;g[b+832>>2]=k-h;break}else{c[b+864>>2]=0;g[b+832>>2]=0.0;break}}else{c[b+864>>2]=0;g[b+832>>2]=0.0}while(0);h=+g[b+1128>>2];i=+g[b+1144>>2];j=+g[b+1160>>2];k=+g[b+1132>>2];l=+g[b+1148>>2];m=+g[b+1164>>2];n=(w*x-y*z)*F*k+(z*E-x*D)*F*l+(y*D-w*E)*F*m;o=k*(y*A-x*B)*F+(x*C-A*E)*F*l+(B*E-y*C)*F*m;p=j*(w*C-B*D)*F+(h*G+i*(A*D-z*C)*F);f=G*+g[b+1136>>2]+(A*D-z*C)*F*+g[b+1152>>2]+(w*C-B*D)*F*(q*t+r*u+s*v);do if(p<1.0)if(p>-1.0){g[b+1192>>2]=+W(+-(k*G+(A*D-z*C)*F*l+(w*C-B*D)*F*m),+f);G=p<-1.0?-1.0:p;g[b+1196>>2]=+U(+(G>1.0?1.0:G));g[b+1200>>2]=+W(+-(j*(B*E-y*C)*F+(h*(y*A-x*B)*F+i*(x*C-A*E)*F)),+(j*(y*D-w*E)*F+(h*(w*x-y*z)*F+i*(z*E-x*D)*F)));break}else{g[b+1192>>2]=-+W(+n,+o);g[b+1196>>2]=-1.5707963705062866;g[b+1200>>2]=0.0;break}else{g[b+1192>>2]=+W(+n,+o);g[b+1196>>2]=1.5707963705062866;g[b+1200>>2]=0.0}while(0);g[b+1236>>2]=0.0;z=x*(h*x-j*E)-y*(i*E-h*y);A=E*(i*E-h*y)-x*(j*y-i*x);B=y*(j*y-i*x)-E*(h*x-j*E);g[b+1220>>2]=0.0;C=i*(i*E-h*y)-j*(h*x-j*E);D=j*(j*y-i*x)-h*(i*E-h*y);F=h*(h*x-j*E)-i*(j*y-i*x);g[b+1252>>2]=0.0;G=1.0/+O(+(z*z+A*A+B*B));g[b+1208>>2]=z*G;g[b+1212>>2]=A*G;g[b+1216>>2]=B*G;G=1.0/+O(+((j*y-i*x)*(j*y-i*x)+(h*x-j*E)*(h*x-j*E)+(i*E-h*y)*(i*E-h*y)));g[b+1224>>2]=(j*y-i*x)*G;g[b+1228>>2]=(h*x-j*E)*G;g[b+1232>>2]=(i*E-h*y)*G;G=1.0/+O(+(C*C+D*D+F*F));g[b+1240>>2]=C*G;g[b+1244>>2]=D*G;g[b+1248>>2]=F*G;if(!(a[b+1301>>0]|0))return;F=+g[(c[b+28>>2]|0)+344>>2];G=+g[(c[b+32>>2]|0)+344>>2];a[b+1280>>0]=(F<1.1920928955078125e-07|G<1.1920928955078125e-07)&1;G=F+G>0.0?G/(F+G):.5;g[b+1272>>2]=G;g[b+1276>>2]=1.0-G;return}function td(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;x=i;i=i+80|0;e=c[b+8>>2]|0;if((e|0)>0){g=0;do{f=c[(c[b+16>>2]|0)+(g<<2)>>2]|0;if((c[f+236>>2]|0)==1){Cb[c[(c[f>>2]|0)+24>>2]&127](f,d);e=c[b+8>>2]|0}g=g+1|0}while((g|0)<(e|0))}a[x+16>>0]=1;c[x+12>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;a[x+36>>0]=1;c[x+32>>2]=0;c[x+24>>2]=0;c[x+28>>2]=0;a[x+56>>0]=1;c[x+52>>2]=0;c[x+44>>2]=0;c[x+48>>2]=0;a[x+76>>0]=1;c[x+72>>2]=0;c[x+64>>2]=0;c[x+68>>2]=0;if((e|0)<=0){pj(x);i=x;return}j=0;k=0;g=0;f=0;r=0;while(1){q=c[(c[(c[b+16>>2]|0)+(r<<2)>>2]|0)+192>>2]|0;p=(q+~(q<<15)>>10^q+~(q<<15))*9|0;p=(p>>6^p)+~((p>>6^p)<<11)>>16^(p>>6^p)+~((p>>6^p)<<11);o=p&j+-1;l=o>>>0<k>>>0;a:do if(l){h=c[g+(o<<2)>>2]|0;if((h|0)!=-1){m=c[x+72>>2]|0;while(1){if((q|0)==(c[m+(h<<3)>>2]|0)){n=13;break}k=c[f+(h<<2)>>2]|0;if((k|0)==-1)break;else h=k}if((n|0)==13?(n=0,(c[x+52>>2]|0)+(h<<2)|0):0)break;if(!l){n=20;break}}e=c[g+(o<<2)>>2]|0;if((e|0)!=-1){h=c[x+72>>2]|0;while(1){if((q|0)==(c[h+(e<<3)>>2]|0))break;e=c[f+(e<<2)>>2]|0;if((e|0)==-1){n=20;break a}}c[(c[x+52>>2]|0)+(e<<2)>>2]=q;e=j;n=82}else n=20}else n=20;while(0);if((n|0)==20){l=c[x+44>>2]|0;if((l|0)==(j|0)){e=j|0?j<<1:1;if((j|0)<(e|0)){if((e|0)!=0?(c[6435]=(c[6435]|0)+1,w=yc((e<<2|3)+16|0)|0,(w|0)!=0):0){c[(w+4+15&-16)+-4>>2]=w;g=w+4+15&-16}else g=0;if((j|0)>0){f=0;do{c[g+(f<<2)>>2]=c[(c[x+52>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(j|0))}f=c[x+52>>2]|0;if(f|0){if(a[x+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[x+52>>2]=0}a[x+56>>0]=1;c[x+52>>2]=g;c[x+48>>2]=e;f=j}else{f=j;e=j}}else{f=l;e=j}c[(c[x+52>>2]|0)+(f<<2)>>2]=q;c[x+44>>2]=f+1;f=c[x+64>>2]|0;if((f|0)==(c[x+68>>2]|0)?(s=f|0?f<<1:1,(f|0)<(s|0)):0){if((s|0)!=0?(c[6435]=(c[6435]|0)+1,t=yc((s<<3|3)+16|0)|0,(t|0)!=0):0){c[(t+4+15&-16)+-4>>2]=t;g=t+4+15&-16}else g=0;if((f|0)>0){e=0;do{k=(c[x+72>>2]|0)+(e<<3)|0;m=c[k+4>>2]|0;n=g+(e<<3)|0;c[n>>2]=c[k>>2];c[n+4>>2]=m;e=e+1|0}while((e|0)!=(f|0))}e=c[x+72>>2]|0;if(e|0){if(a[x+76>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[x+72>>2]=0}a[x+76>>0]=1;c[x+72>>2]=g;c[x+68>>2]=s;f=c[x+64>>2]|0;e=c[x+48>>2]|0}n=(c[x+72>>2]|0)+(f<<3)|0;c[n>>2]=q;c[n+4>>2]=0;c[x+64>>2]=f+1;if((j|0)<(e|0)){k=c[x+4>>2]|0;do if((e|0)>(k|0)){if((e|0)>=(k|0)){do if((c[x+8>>2]|0)<(e|0)){if((e|0)!=0?(c[6435]=(c[6435]|0)+1,u=yc((e<<2|3)+16|0)|0,(u|0)!=0):0){c[(u+4+15&-16)+-4>>2]=u;f=u+4+15&-16}else f=0;g=c[x+12>>2]|0;if((k|0)<=0){if(!g){a[x+16>>0]=1;c[x+12>>2]=f;c[x+8>>2]=e;break}}else{h=0;do{c[f+(h<<2)>>2]=c[g+(h<<2)>>2];h=h+1|0}while((h|0)!=(k|0))}if(a[x+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}a[x+16>>0]=1;c[x+12>>2]=f;c[x+8>>2]=e}else f=c[x+12>>2]|0;while(0);Tn(f+(k<<2)|0,0,e-k<<2|0)|0}c[x+4>>2]=e;j=c[x+24>>2]|0;if((e|0)>(j|0)){do if((c[x+28>>2]|0)<(e|0)){if((e|0)!=0?(c[6435]=(c[6435]|0)+1,v=yc((e<<2|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;f=v+4+15&-16}else f=0;g=c[x+32>>2]|0;if((j|0)<=0){if(!g){a[x+36>>0]=1;c[x+32>>2]=f;c[x+28>>2]=e;break}}else{h=0;do{c[f+(h<<2)>>2]=c[g+(h<<2)>>2];h=h+1|0}while((h|0)!=(j|0))}if(a[x+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}a[x+36>>0]=1;c[x+32>>2]=f;c[x+28>>2]=e}else f=c[x+32>>2]|0;while(0);Tn(f+(j<<2)|0,0,e-j<<2|0)|0}c[x+24>>2]=e;if((e|0)>0){o=e<<2;Tn(c[x+12>>2]|0,-1,o|0)|0;Tn(c[x+32>>2]|0,-1,o|0)|0}if((k|0)<=0){e=c[x+48>>2]|0;break}f=c[x+72>>2]|0;g=c[x+12>>2]|0;h=c[x+32>>2]|0;e=c[x+48>>2]|0;j=0;do{o=c[f+(j<<3)>>2]|0;o=(o+~(o<<15)>>10^o+~(o<<15))*9|0;o=g+((((o>>6^o)+~((o>>6^o)<<11)>>16^(o>>6^o)+~((o>>6^o)<<11))&e+-1)<<2)|0;c[h+(j<<2)>>2]=c[o>>2];c[o>>2]=j;j=j+1|0}while((j|0)!=(k|0))}while(0);f=e;e=p&e+-1}else{f=e;e=o}g=c[x+12>>2]|0;e=g+(e<<2)|0;n=c[x+32>>2]|0;c[n+(l<<2)>>2]=c[e>>2];c[e>>2]=l;e=f;f=n;n=82}if((n|0)==82){n=0;Cb[c[(c[q>>2]|0)+60>>2]&127](q,d);j=e;e=c[b+8>>2]|0}h=r+1|0;if((h|0)>=(e|0))break;k=c[x+4>>2]|0;r=h}pj(x);i=x;return}function ud(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;r=i;i=i+32|0;ig(b+4|0,((_(c[b+152>>2]|0,c[b+16>>2]|0)|0)/100|0)+1|0);if(c[b+164>>2]|0){p=((_(c[b+148>>2]|0,c[b+76>>2]|0)|0)/100|0)+1|0;ig(b+64|0,p);p=(c[b+164>>2]|0)-p|0;c[b+164>>2]=(p|0)<0?0:p}e=((c[b+144>>2]|0)+1|0)%2|0;c[b+144>>2]=e;e=c[b+124+(e<<2)>>2]|0;if(e|0){do{l=e+56|0;m=e;e=c[l>>2]|0;k=c[m+52>>2]|0;j=e;if(!k)c[b+124+(c[m+60>>2]<<2)>>2]=j;else c[k+56>>2]=j;j=c[l>>2]|0;if(j|0)c[j+52>>2]=c[m+52>>2];c[m+52>>2]=0;c[l>>2]=c[b+132>>2];j=c[b+132>>2]|0;if(j|0)c[j+52>>2]=m;c[b+132>>2]=m;j=c[m+48>>2]|0;hh(b+4|0,j)|0;k=c[b+8>>2]|0;if(k|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[b+8>>2]=j;c[b+16>>2]=(c[b+16>>2]|0)+-1;c[r>>2]=c[m+16>>2];c[r+4>>2]=c[m+16+4>>2];c[r+8>>2]=c[m+16+8>>2];c[r+12>>2]=c[m+16+12>>2];c[r+16>>2]=c[m+32>>2];c[r+16+4>>2]=c[m+32+4>>2];c[r+16+8>>2]=c[m+32+8>>2];c[r+16+12>>2]=c[m+32+12>>2];j=c[b+68>>2]|0;if(!j){c[6435]=(c[6435]|0)+1;j=yc(63)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}k=j;l=k+44|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0))}else c[b+68>>2]=0;c[j+32>>2]=0;c[j+36>>2]=m;c[j+40>>2]=0;c[j>>2]=c[r>>2];c[j+4>>2]=c[r+4>>2];c[j+8>>2]=c[r+8>>2];c[j+12>>2]=c[r+12>>2];c[j+16>>2]=c[r+16>>2];c[j+20>>2]=c[r+20>>2];c[j+24>>2]=c[r+24>>2];c[j+28>>2]=c[r+28>>2];lf(b+64|0,c[b+64>>2]|0,j);k=(c[b+76>>2]|0)+1|0;c[b+76>>2]=k;c[m+48>>2]=j;c[m+60>>2]=2}while((e|0)!=0);c[b+164>>2]=k;a[b+194>>0]=1}c[r>>2]=8904;c[r+4>>2]=b;if(a[b+193>>0]|0?(we(b+4|0,c[b+4>>2]|0,c[b+64>>2]|0,r),a[b+193>>0]|0):0){p=c[b+4>>2]|0;we(b+4|0,p,p,r)}if(a[b+194>>0]|0?(n=c[b+136>>2]|0,n=Eb[c[(c[n>>2]|0)+28>>2]&127](n)|0,f=c[n+4>>2]|0,(f|0)>0):0){e=(_(c[b+156>>2]|0,f)|0)/100|0;p=c[b+160>>2]|0;e=(p|0)>(e|0)?p:e;e=(f|0)<(e|0)?f:e;if((e|0)>0){j=0;do{l=((c[b+184>>2]|0)+j|0)%(f|0)|0;o=c[n+12>>2]|0;k=c[o+(l<<4)>>2]|0;l=c[o+(l<<4)+4>>2]|0;o=c[k+48>>2]|0;p=c[l+48>>2]|0;if(!(((((+g[o>>2]<=+g[p+16>>2]?+g[o+16>>2]>=+g[p>>2]:0)?+g[o+4>>2]<=+g[p+20>>2]:0)?+g[o+20>>2]>=+g[p+4>>2]:0)?+g[o+8>>2]<=+g[p+24>>2]:0)?+g[o+24>>2]>=+g[p+8>>2]:0)){f=c[b+136>>2]|0;Ib[c[(c[f>>2]|0)+12>>2]&31](f,k,l,d)|0;f=c[n+4>>2]|0;j=j+-1|0;e=e+-1|0}j=j+1|0}while((j|0)<(e|0));if((f|0)>0)q=37;else e=0}else q=37;if((q|0)==37)e=((c[b+184>>2]|0)+e|0)%(f|0)|0;c[b+184>>2]=e}c[b+180>>2]=(c[b+180>>2]|0)+1;c[b+160>>2]=1;a[b+194>>0]=0;f=c[b+168>>2]|0;e=c[b+172>>2]|0;if(!f)h=0.0;else h=+(e>>>0)/+(f>>>0);g[b+176>>2]=h;c[b+172>>2]=e>>>1;c[b+168>>2]=f>>>1;p=c[b+136>>2]|0;if(!(Eb[c[(c[p>>2]|0)+56>>2]&127](p)|0)){i=r;return}p=c[b+136>>2]|0;p=Eb[c[(c[p>>2]|0)+28>>2]&127](p)|0;e=c[p+4>>2]|0;if((e|0)>1){Vd(p,0,e+-1|0);j=0;k=0;l=0;f=0;q=44}else{j=0;o=0;n=0;f=0}while(1){if((q|0)==44){q=0;e=c[p+4>>2]|0;o=k;n=l}if((j|0)>=(e|0))break;m=c[p+12>>2]|0;k=m+(j<<4)|0;l=c[k>>2]|0;m=m+(j<<4)+4|0;e=c[m>>2]|0;if(!((l|0)==(n|0)&(e|0)==(f|0))){f=c[l+48>>2]|0;n=c[e+48>>2]|0;if(((((+g[f>>2]<=+g[n+16>>2]?+g[f+16>>2]>=+g[n>>2]:0)?+g[f+4>>2]<=+g[n+20>>2]:0)?+g[f+20>>2]>=+g[n+4>>2]:0)?+g[f+8>>2]<=+g[n+24>>2]:0)?+g[f+24>>2]>=+g[n+8>>2]:0){f=e;e=o}else q=53}else{e=f;q=53}if((q|0)==53){f=c[b+136>>2]|0;ic[c[(c[f>>2]|0)+32>>2]&127](f,k,d);c[k>>2]=0;c[m>>2]=0;f=e;e=o+1|0}j=j+1|0;k=e;q=44}if((e|0)>1){Vd(p,0,e+-1|0);k=c[p+4>>2]|0}else k=e;l=k-o|0;if((o|0)<0){if((c[p+8>>2]|0)<(l|0)){if((k|0)!=(o|0)){c[6435]=(c[6435]|0)+1;e=yc((l<<4|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}f=c[p+4>>2]|0;if((f|0)>0){j=0;do{q=c[p+12>>2]|0;c[e+(j<<4)>>2]=c[q+(j<<4)>>2];c[e+(j<<4)+4>>2]=c[q+(j<<4)+4>>2];c[e+(j<<4)+8>>2]=c[q+(j<<4)+8>>2];c[e+(j<<4)+12>>2]=c[q+(j<<4)+12>>2];j=j+1|0}while((j|0)!=(f|0));f=p+12|0}else f=p+12|0}else{e=0;f=p+12|0}j=c[f>>2]|0;if(j|0){if(a[p+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[f>>2]=0}a[p+16>>0]=1;c[f>>2]=e;c[p+8>>2]=l}else f=p+12|0;e=k;do{q=(c[f>>2]|0)+(e<<4)|0;e=e+1|0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0}while((e|0)!=(l|0))}c[p+4>>2]=l;i=r;return}function vd(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0;o=c[b+28>>2]|0;h=c[b+32>>2]|0;Fc(b,o+4|0,h+4|0,o+264|0,h+264|0);q=c[d+8>>2]|0;g[q>>2]=1.0;p=c[d+24>>2]|0;g[q+(p+1<<2)>>2]=1.0;g[q+((p<<1)+2<<2)>>2]=1.0;l=+g[b+348>>2];u=+g[b+352>>2];n=+g[b+356>>2];s=+g[o+4>>2]*l+ +g[o+8>>2]*u+ +g[o+12>>2]*n;m=l*+g[o+20>>2]+u*+g[o+24>>2]+n*+g[o+28>>2];n=l*+g[o+36>>2]+u*+g[o+40>>2]+n*+g[o+44>>2];q=c[d+12>>2]|0;c[q>>2]=0;g[q+4>>2]=n;g[q+8>>2]=-m;g[q+12>>2]=0.0;g[q+(p<<2)>>2]=-n;c[q+(p<<2)+4>>2]=0;g[q+(p<<2)+8>>2]=s;g[q+(p<<2)+12>>2]=0.0;g[q+(p<<1<<2)>>2]=m;g[q+(p<<1<<2)+4>>2]=-s;c[q+(p<<1<<2)+8>>2]=0;g[q+(p<<1<<2)+12>>2]=0.0;q=c[d+16>>2]|0;g[q>>2]=-1.0;g[q+(p+1<<2)>>2]=-1.0;g[q+((p<<1)+2<<2)>>2]=-1.0;u=+g[b+412>>2];l=+g[b+416>>2];k=+g[b+420>>2];t=+g[h+4>>2]*u+ +g[h+8>>2]*l+ +g[h+12>>2]*k;j=u*+g[h+20>>2]+l*+g[h+24>>2]+k*+g[h+28>>2];k=u*+g[h+36>>2]+l*+g[h+40>>2]+k*+g[h+44>>2];p=c[d+20>>2]|0;q=c[d+24>>2]|0;c[p>>2]=0;g[p+4>>2]=-k;g[p+8>>2]=j;g[p+12>>2]=0.0;g[p+(q<<2)>>2]=k;c[p+(q<<2)+4>>2]=0;g[p+(q<<2)+8>>2]=-t;g[p+(q<<2)+12>>2]=0.0;g[p+(q<<1<<2)>>2]=-j;g[p+(q<<1<<2)+4>>2]=t;c[p+(q<<1<<2)+8>>2]=0;g[p+(q<<1<<2)+12>>2]=0.0;q=c[b+592>>2]|0;l=+g[((q&2|0)==0?d+4|0:b+600|0)>>2]*+g[d>>2];r=c[d+24>>2]|0;i=c[d+28>>2]|0;f=c[d+36>>2]|0;e=c[d+40>>2]|0;g[i>>2]=l*(t+ +g[h+52>>2]-s-+g[o+52>>2]);g[f>>2]=-3402823466385288598117041.0e14;g[e>>2]=3402823466385288598117041.0e14;if(!(q&1)){g[i+(r<<2)>>2]=l*(j+ +g[h+56>>2]-m-+g[o+56>>2]);g[f+(r<<2)>>2]=-3402823466385288598117041.0e14;g[e+(r<<2)>>2]=3402823466385288598117041.0e14;g[i+(r<<1<<2)>>2]=l*(k+ +g[h+60>>2]-n-+g[o+60>>2]);g[f+(r<<1<<2)>>2]=-3402823466385288598117041.0e14;g[e+(r<<1<<2)>>2]=3402823466385288598117041.0e14}else{v=c[d+32>>2]|0;c[v>>2]=c[b+596>>2];g[i+(r<<2)>>2]=l*(j+ +g[h+56>>2]-m-+g[o+56>>2]);g[f+(r<<2)>>2]=-3402823466385288598117041.0e14;g[e+(r<<2)>>2]=3402823466385288598117041.0e14;c[v+(r<<2)>>2]=c[b+596>>2];g[i+(r<<1<<2)>>2]=l*(k+ +g[h+60>>2]-n-+g[o+60>>2]);g[f+(r<<1<<2)>>2]=-3402823466385288598117041.0e14;g[e+(r<<1<<2)>>2]=3402823466385288598117041.0e14;c[v+(r<<1<<2)>>2]=c[b+596>>2]}do if(!(a[b+526>>0]|0))h=r*3|0;else{h=c[d+12>>2]|0;u=+g[b+456>>2];if(+g[b+444>>2]<u?+g[b+448>>2]<u:0){z=+g[o+4>>2];y=+g[o+8>>2];x=+g[o+12>>2];D=+g[b+304>>2];C=+g[b+320>>2];B=+g[b+336>>2];l=+g[b+308>>2];n=+g[b+324>>2];t=+g[b+340>>2];w=+g[o+20>>2];j=+g[o+24>>2];k=+g[o+28>>2];m=+g[o+36>>2];s=+g[o+40>>2];u=+g[o+44>>2];g[h+(r*3<<2)>>2]=z*D+y*C+x*B;g[h+((r*3|0)+1<<2)>>2]=D*w+C*j+B*k;g[h+((r*3|0)+2<<2)>>2]=D*m+C*s+B*u;g[h+(r<<2<<2)>>2]=z*l+y*n+x*t;g[h+((r<<2|1)<<2)>>2]=l*w+n*j+t*k;g[h+((r<<2|2)<<2)>>2]=l*m+n*s+t*u;g[p+(r*3<<2)>>2]=-(z*D+y*C+x*B);g[p+((r*3|0)+1<<2)>>2]=-(D*w+C*j+B*k);g[p+((r*3|0)+2<<2)>>2]=-(D*m+C*s+B*u);g[p+(r<<2<<2)>>2]=-(z*l+y*n+x*t);g[p+((r<<2|1)<<2)>>2]=-(l*w+n*j+t*k);g[p+((r<<2|2)<<2)>>2]=-(l*m+n*s+t*u);A=+g[d>>2]*+g[b+436>>2];i=c[d+28>>2]|0;g[i+(r*3<<2)>>2]=A*((z*D+y*C+x*B)*+g[b+460>>2]+(D*w+C*j+B*k)*+g[b+464>>2]+(D*m+C*s+B*u)*+g[b+468>>2]);g[i+(r<<2<<2)>>2]=A*((z*l+y*n+x*t)*+g[b+460>>2]+(l*w+n*j+t*k)*+g[b+464>>2]+(l*m+n*s+t*u)*+g[b+468>>2]);f=c[d+36>>2]|0;g[f+(r*3<<2)>>2]=-3402823466385288598117041.0e14;e=c[d+40>>2]|0;g[e+(r*3<<2)>>2]=3402823466385288598117041.0e14;g[f+(r<<2<<2)>>2]=-3402823466385288598117041.0e14;g[e+(r<<2<<2)>>2]=3402823466385288598117041.0e14;h=(c[d+24>>2]|0)+(r<<2)|0;break}D=+g[b+436>>2];B=D*+g[b+460>>2]*D;C=D*D*+g[b+464>>2];D=D*D*+g[b+468>>2];g[h+(r*3<<2)>>2]=B;g[h+((r*3|0)+1<<2)>>2]=C;g[h+((r*3|0)+2<<2)>>2]=D;g[p+(r*3<<2)>>2]=-B;g[p+((r*3|0)+1<<2)>>2]=-C;g[p+((r*3|0)+2<<2)>>2]=-D;g[i+(r*3<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+504>>2];if(q&4|0)c[(c[d+32>>2]|0)+(r*3<<2)>>2]=c[b+604>>2];g[f+(r*3<<2)>>2]=0.0;g[e+(r*3<<2)>>2]=3402823466385288598117041.0e14;h=r<<2}while(0);if(!(a[b+525>>0]|0))return;D=+g[b+436>>2];B=D*+g[b+476>>2]*D;C=D*D*+g[b+480>>2];D=D*D*+g[b+484>>2];p=c[d+12>>2]|0;r=c[d+20>>2]|0;g[p+(h<<2)>>2]=B;q=h+1|0;g[p+(q<<2)>>2]=C;v=h+2|0;g[p+(v<<2)>>2]=D;g[r+(h<<2)>>2]=-B;g[r+(q<<2)>>2]=-C;g[r+(v<<2)>>2]=-D;g[i+(h<<2)>>2]=+g[d>>2]*+g[b+432>>2]*+g[b+508>>2];if(c[b+592>>2]&4|0)c[(c[d+32>>2]|0)+(h<<2)>>2]=c[b+604>>2];if(!(+g[b+452>>2]>0.0)){g[f+(h<<2)>>2]=-3402823466385288598117041.0e14;g[e+(h<<2)>>2]=3402823466385288598117041.0e14;return}f=f+(h<<2)|0;e=c[d+40>>2]|0;if(+g[b+508>>2]>0.0){g[f>>2]=0.0;g[e+(h<<2)>>2]=3402823466385288598117041.0e14;return}else{g[f>>2]=-3402823466385288598117041.0e14;g[e+(h<<2)>>2]=0.0;return}}function wd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var j=0.0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0;K=i;i=i+288|0;c[K+144>>2]=c[d>>2];c[K+144+4>>2]=c[d+4>>2];c[K+144+8>>2]=c[d+8>>2];c[K+144+12>>2]=c[d+12>>2];c[K+144+16>>2]=c[d+16>>2];c[K+144+16+4>>2]=c[d+16+4>>2];c[K+144+16+8>>2]=c[d+16+8>>2];c[K+144+16+12>>2]=c[d+16+12>>2];c[K+144+32>>2]=c[d+32>>2];c[K+144+32+4>>2]=c[d+32+4>>2];c[K+144+32+8>>2]=c[d+32+8>>2];c[K+144+32+12>>2]=c[d+32+12>>2];c[K+144+48>>2]=c[d+48>>2];c[K+144+48+4>>2]=c[d+48+4>>2];c[K+144+48+8>>2]=c[d+48+8>>2];c[K+144+48+12>>2]=c[d+48+12>>2];c[K+80>>2]=c[e>>2];c[K+80+4>>2]=c[e+4>>2];c[K+80+8>>2]=c[e+8>>2];c[K+80+12>>2]=c[e+12>>2];c[K+80+16>>2]=c[e+16>>2];c[K+80+16+4>>2]=c[e+16+4>>2];c[K+80+16+8>>2]=c[e+16+8>>2];c[K+80+16+12>>2]=c[e+16+12>>2];c[K+80+32>>2]=c[e+32>>2];c[K+80+32+4>>2]=c[e+32+4>>2];c[K+80+32+8>>2]=c[e+32+8>>2];c[K+80+32+12>>2]=c[e+32+12>>2];c[K+80+48>>2]=c[e+48>>2];c[K+80+48+4>>2]=c[e+48+4>>2];c[K+80+48+8>>2]=c[e+48+8>>2];c[K+80+48+12>>2]=c[e+48+12>>2];m=+g[K+80+52>>2]-+g[K+144+52>>2];O=+g[K+80+56>>2]-+g[K+144+56>>2];g[K+32>>2]=+g[K+80+48>>2]-+g[K+144+48>>2];g[K+32+4>>2]=m;g[K+32+8>>2]=O;g[K+32+12>>2]=0.0;Gf(K+144|0,K+80|0,K+224|0,K+208|0);O=+g[K+208>>2];m=O*+g[K+224+4>>2];L=O*+g[K+224+8>>2];g[K>>2]=+g[K+224>>2]*O;g[K+4>>2]=m;g[K+8>>2]=L;g[K+12>>2]=0.0;c[K+224+4>>2]=0;c[K+224+4+4>>2]=0;c[K+224+24>>2]=0;c[K+224+24+4>>2]=0;J=K+224+44|0;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=0;c[J+16>>2]=0;Wg(K+144|0,K+16|0);L=+g[K+16>>2];m=+g[K+16+4>>2];O=+g[K+16+8>>2];M=+g[K+16+12>>2];j=L*(2.0/(L*L+m*m+O*O+M*M));o=m*(2.0/(L*L+m*m+O*O+M*M));N=O*(2.0/(L*L+m*m+O*O+M*M));g[K+224>>2]=1.0-(m*o+O*N);g[K+224+4>>2]=L*o-M*N;g[K+224+8>>2]=L*N+M*o;g[K+224+12>>2]=0.0;g[K+224+16>>2]=L*o+M*N;g[K+224+20>>2]=1.0-(L*j+O*N);g[K+224+24>>2]=m*N-M*j;g[K+224+28>>2]=0.0;g[K+224+32>>2]=L*N-M*o;g[K+224+36>>2]=m*N+M*j;g[K+224+40>>2]=1.0-(L*j+m*o);g[J>>2]=0.0;rh(b,K+224|0,K+32|0,K,K+64|0,K+48|0);if((c[a+268>>2]|0)<=0){i=K;return}I=0;do{p=c[(c[a+276>>2]|0)+(I<<2)>>2]|0;if(Zb[c[(c[f>>2]|0)+8>>2]&31](f,c[p+188>>2]|0)|0?(C=c[p+192>>2]|0,mc[c[(c[C>>2]|0)+8>>2]&127](C,p+4|0,K+208|0,K+32|0),q=+g[K+208>>2]+ +g[K+64>>2],r=+g[K+208+4>>2]+ +g[K+64+4>>2],s=+g[K+208+8>>2]+ +g[K+64+8>>2],g[K+208>>2]=q,g[K+208+4>>2]=r,g[K+208+8>>2]=s,g[K+208+12>>2]=0.0,t=+g[K+32>>2]+ +g[K+48>>2],u=+g[K+32+4>>2]+ +g[K+48+4>>2],v=+g[K+32+8>>2]+ +g[K+48+8>>2],g[K+32>>2]=t,g[K+32+4>>2]=u,g[K+32+8>>2]=v,g[K+32+12>>2]=0.0,w=+g[d+48>>2]-(t+q)*.5,x=+g[d+52>>2]-(u+r)*.5,y=+g[d+56>>2]-(v+s)*.5,z=+g[e+48>>2]-(t+q)*.5,A=+g[e+52>>2]-(u+r)*.5,B=+g[e+56>>2]-(v+s)*.5,C=w<-((t-q)*.5)|(w>(t-q)*.5?8:0)|(x<-((u-r)*.5)?2:0)|(x>(u-r)*.5?16:0)|(y<-((v-s)*.5)?4:0)|(y>(v-s)*.5?32:0),D=z<-((t-q)*.5)|(z>(t-q)*.5?8:0)|(A<-((u-r)*.5)?2:0)|(A>(u-r)*.5?16:0)|(B<-((v-s)*.5)?4:0)|(B>(v-s)*.5?32:0),(C&D|0)==0):0){H=1;J=0;j=0.0;l=1065353216;o=1.0;while(1){if(!(H&C)){if((H&D|0)!=0?(E=(-w-o*(t-q)*.5)/(z-w),E<(c[k>>2]=l,+g[k>>2])):0)l=(g[k>>2]=E,c[k>>2]|0)}else{m=(-w-o*(t-q)*.5)/(z-w);if(j<=m)j=m}n=H<<1;if(!(n&C))if((n&D|0)!=0?(F=(-x-o*(u-r)*.5)/(A-x),F<(c[k>>2]=l,+g[k>>2])):0){m=j;l=(g[k>>2]=F,c[k>>2]|0)}else m=j;else{m=(-x-o*(u-r)*.5)/(A-x);if(!(j<=m))m=j}n=H<<2;if(!(n&C))if((n&D|0)!=0?(G=(-y-o*(v-s)*.5)/(B-y),G<(c[k>>2]=l,+g[k>>2])):0){j=m;l=(g[k>>2]=G,c[k>>2]|0)}else j=m;else{j=(-y-o*(v-s)*.5)/(B-y);if(!(m<=j))j=m}J=J+1|0;if((J|0)==2)break;else{H=H<<3;o=-1.0}}if(j<=(c[k>>2]=l,+g[k>>2])){J=c[p+192>>2]|0;c[K+224>>2]=0;c[K+224+4>>2]=J;c[K+224+8>>2]=p;c[K+224+12>>2]=p+4;c[K+224+16>>2]=-1;c[K+224+20>>2]=-1;Ic(b,K+144|0,K+80|0,K+224|0,f,h)}}I=I+1|0}while((I|0)<(c[a+268>>2]|0));i=K;return}function xd(d,e){d=d|0;e=e|0;var f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=i;i=i+112|0;g[d+20>>2]=+h[e+32>>3];g[d+24>>2]=+h[e+40>>3];g[d+28>>2]=+h[e+48>>3];g[d+32>>2]=+h[e+56>>3];g[d+4>>2]=+h[e>>3];g[d+8>>2]=+h[e+8>>3];g[d+12>>2]=+h[e+16>>3];g[d+16>>2]=+h[e+24>>3];g[d+36>>2]=+h[e+64>>3];g[d+40>>2]=+h[e+72>>3];g[d+44>>2]=+h[e+80>>3];g[d+48>>2]=+h[e+88>>3];c[d+56>>2]=c[e+96>>2];a[d+60>>0]=(c[e+100>>2]|0)!=0&1;p=c[e+104>>2]|0;l=q+48|0;n=l+64|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(n|0));o=c[d+88>>2]|0;if((o|0)<(p|0)){if((c[d+92>>2]|0)<(p|0)){if(!p){f=0;j=o}else{c[6435]=(c[6435]|0)+1;f=yc(p<<6|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=c[d+88>>2]|0}if((j|0)>0){k=0;do{l=f+(k<<6)|0;m=(c[d+96>>2]|0)+(k<<6)|0;n=l+64|0;do{c[l>>2]=c[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));k=k+1|0}while((k|0)!=(j|0))}j=c[d+96>>2]|0;if(j|0){if(a[d+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=f;c[d+92>>2]=p;j=d+96|0}else j=d+96|0;f=o;do{l=(c[j>>2]|0)+(f<<6)|0;m=q+48|0;n=l+64|0;do{c[l>>2]=c[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));f=f+1|0}while((f|0)!=(p|0))}c[d+88>>2]=p;if((p|0)>0){f=c[d+96>>2]|0;j=0;k=c[e+112>>2]|0;while(1){g[f+(j<<6)+16>>2]=+h[k+32>>3];g[f+(j<<6)+20>>2]=+h[k+40>>3];g[f+(j<<6)+24>>2]=+h[k+48>>3];g[f+(j<<6)+28>>2]=+h[k+56>>3];g[f+(j<<6)>>2]=+h[k>>3];g[f+(j<<6)+4>>2]=+h[k+8>>3];g[f+(j<<6)+8>>2]=+h[k+16>>3];g[f+(j<<6)+12>>2]=+h[k+24>>3];c[f+(j<<6)+32>>2]=c[k+64>>2];c[f+(j<<6)+36>>2]=c[k+68>>2];c[f+(j<<6)+40>>2]=c[k+72>>2];j=j+1|0;if((j|0)==(p|0))break;else k=k+80|0}}m=c[e+108>>2]|0;c[q+32>>2]=0;c[q+32+4>>2]=0;c[q+32+8>>2]=0;c[q+32+12>>2]=0;l=c[d+128>>2]|0;if((l|0)<(m|0)){if((c[d+132>>2]|0)<(m|0)){if(!m){f=0;j=l}else{c[6435]=(c[6435]|0)+1;f=yc((m<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=c[d+128>>2]|0}if((j|0)>0){k=0;do{p=f+(k<<4)|0;o=(c[d+136>>2]|0)+(k<<4)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[d+136>>2]|0;if(j|0){if(a[d+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=f;c[d+132>>2]=m;j=d+136|0}else j=d+136|0;f=l;do{p=(c[j>>2]|0)+(f<<4)|0;c[p>>2]=c[q+32>>2];c[p+4>>2]=c[q+32+4>>2];c[p+8>>2]=c[q+32+8>>2];c[p+12>>2]=c[q+32+12>>2];f=f+1|0}while((f|0)!=(m|0))}c[d+128>>2]=m;if((m|0)>0){f=c[d+136>>2]|0;j=0;k=c[e+116>>2]|0;while(1){c[f+(j<<4)+12>>2]=c[k+12>>2];b[f+(j<<4)+6>>1]=b[k+6>>1]|0;b[f+(j<<4)+8>>1]=b[k+8>>1]|0;b[f+(j<<4)+10>>1]=b[k+10>>1]|0;b[f+(j<<4)>>1]=b[k>>1]|0;b[f+(j<<4)+2>>1]=b[k+2>>1]|0;b[f+(j<<4)+4>>1]=b[k+4>>1]|0;j=j+1|0;if((j|0)==(m|0))break;else k=k+16|0}}c[d+144>>2]=c[e+120>>2];m=c[e+124>>2]|0;l=c[d+152>>2]|0;if((l|0)<(m|0)){if((c[d+156>>2]|0)<(m|0)){if(!m){f=0;j=l}else{c[6435]=(c[6435]|0)+1;f=yc(m<<5|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=c[d+152>>2]|0}if((j|0)>0){k=0;do{p=f+(k<<5)|0;o=(c[d+160>>2]|0)+(k<<5)|0;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2];c[p+12>>2]=c[o+12>>2];c[p+16>>2]=c[o+16>>2];c[p+20>>2]=c[o+20>>2];c[p+24>>2]=c[o+24>>2];c[p+28>>2]=c[o+28>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[d+160>>2]|0;if(j|0){if(a[d+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=f;c[d+156>>2]=m;j=d+160|0}else j=d+160|0;f=l;do{p=(c[j>>2]|0)+(f<<5)|0;c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];c[p+16>>2]=c[q+16>>2];c[p+20>>2]=c[q+20>>2];c[p+24>>2]=c[q+24>>2];c[p+28>>2]=c[q+28>>2];f=f+1|0}while((f|0)!=(m|0))}c[d+152>>2]=m;if((m|0)<=0){i=q;return}j=c[d+160>>2]|0;k=0;f=c[e+128>>2]|0;while(1){b[j+(k<<5)+6>>1]=b[f+14>>1]|0;b[j+(k<<5)+8>>1]=b[f+16>>1]|0;b[j+(k<<5)+10>>1]=b[f+18>>1]|0;b[j+(k<<5)>>1]=b[f+8>>1]|0;b[j+(k<<5)+2>>1]=b[f+10>>1]|0;b[j+(k<<5)+4>>1]=b[f+12>>1]|0;c[j+(k<<5)+12>>2]=c[f>>2];c[j+(k<<5)+16>>2]=c[f+4>>2];k=k+1|0;if((k|0)==(m|0))break;else f=f+20|0}i=q;return}function yd(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0;n=i;i=i+16|0;m=c[a+372>>2]|0;a:do switch(c[m+32>>2]|0){case 1:{d=1;b=0;while(1){c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[n+(b<<2)>>2]=1.0;o=m+32|0;g[m+16+(d<<2)>>2]=0.0;d=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=d;c[m+(c[o>>2]<<2)>>2]=c[a+348+(d<<2)>>2];d=c[o>>2]|0;c[o>>2]=d+1;e=+g[n>>2];f=+g[n+4>>2];h=+g[n+8>>2];Nh(a,e,f,h,c[m+(d<<2)>>2]|0);if(yd(a)|0)break;m=c[a+372>>2]|0;o=(c[m+32>>2]|0)+-1|0;c[m+32>>2]=o;o=c[m+(o<<2)>>2]|0;m=c[a+364>>2]|0;c[a+364>>2]=m+1;c[a+348+(m<<2)>>2]=o;m=c[a+372>>2]|0;g[m+16+(c[m+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[m+(c[m+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[m+32>>2]|0;c[m+32>>2]=o+1;Nh(a,-e,-f,-h,c[m+(o<<2)>>2]|0);if(yd(a)|0)break;o=c[a+372>>2]|0;m=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=m;m=c[o+(m<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=m;b=b+1|0;if(b>>>0>=3)break a;m=c[a+372>>2]|0;d=c[m+32>>2]|0}o=1;i=n;return o|0}case 2:{o=c[m+4>>2]|0;b=c[m>>2]|0;e=+g[o+16>>2]-+g[b+16>>2];f=+g[o+20>>2]-+g[b+20>>2];h=+g[o+24>>2]-+g[b+24>>2];b=0;while(1){c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;g[n+(b<<2)>>2]=1.0;j=+g[n+8>>2];k=+g[n+4>>2];l=+g[n>>2];if((f*j-h*k)*(f*j-h*k)+(h*l-e*j)*(h*l-e*j)+(e*k-f*l)*(e*k-f*l)>0.0){m=c[a+372>>2]|0;g[m+16+(c[m+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[m+(c[m+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[m+32>>2]|0;c[m+32>>2]=o+1;Nh(a,f*j-h*k,h*l-e*j,e*k-f*l,c[m+(o<<2)>>2]|0);if(yd(a)|0)break;m=c[a+372>>2]|0;o=(c[m+32>>2]|0)+-1|0;c[m+32>>2]=o;o=c[m+(o<<2)>>2]|0;m=c[a+364>>2]|0;c[a+364>>2]=m+1;c[a+348+(m<<2)>>2]=o;m=c[a+372>>2]|0;g[m+16+(c[m+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[m+(c[m+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[m+32>>2]|0;c[m+32>>2]=o+1;Nh(a,-(f*j-h*k),-(h*l-e*j),-(e*k-f*l),c[m+(o<<2)>>2]|0);if(yd(a)|0)break;o=c[a+372>>2]|0;m=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=m;m=c[o+(m<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=m}b=b+1|0;if(b>>>0>=3)break a}o=1;i=n;return o|0}case 3:{o=c[m+4>>2]|0;d=c[m>>2]|0;j=+g[d+16>>2];e=+g[o+16>>2]-j;k=+g[d+20>>2];f=+g[o+20>>2]-k;l=+g[d+24>>2];h=+g[o+24>>2]-l;o=c[m+8>>2]|0;j=+g[o+16>>2]-j;k=+g[o+20>>2]-k;l=+g[o+24>>2]-l;if((f*l-h*k)*(f*l-h*k)+(h*j-e*l)*(h*j-e*l)+(e*k-f*j)*(e*k-f*j)>0.0){g[m+28>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[m+12>>2]=c[a+348+(o<<2)>>2];o=c[m+32>>2]|0;c[m+32>>2]=o+1;Nh(a,f*l-h*k,h*j-e*l,e*k-f*j,c[m+(o<<2)>>2]|0);if(yd(a)|0){o=1;i=n;return o|0}m=c[a+372>>2]|0;o=(c[m+32>>2]|0)+-1|0;c[m+32>>2]=o;o=c[m+(o<<2)>>2]|0;m=c[a+364>>2]|0;c[a+364>>2]=m+1;c[a+348+(m<<2)>>2]=o;m=c[a+372>>2]|0;g[m+16+(c[m+32>>2]<<2)>>2]=0.0;o=(c[a+364>>2]|0)+-1|0;c[a+364>>2]=o;c[m+(c[m+32>>2]<<2)>>2]=c[a+348+(o<<2)>>2];o=c[m+32>>2]|0;c[m+32>>2]=o+1;Nh(a,-(f*l-h*k),-(h*j-e*l),-(e*k-f*j),c[m+(o<<2)>>2]|0);if(yd(a)|0){o=1;i=n;return o|0}else{o=c[a+372>>2]|0;m=(c[o+32>>2]|0)+-1|0;c[o+32>>2]=m;m=c[o+(m<<2)>>2]|0;o=c[a+364>>2]|0;c[a+364>>2]=o+1;c[a+348+(o<<2)>>2]=m;break a}}break}case 4:{o=c[m>>2]|0;a=c[m+12>>2]|0;l=+g[a+16>>2];r=+g[o+16>>2]-l;p=+g[a+20>>2];e=+g[o+20>>2]-p;h=+g[a+24>>2];j=+g[o+24>>2]-h;o=c[m+4>>2]|0;f=+g[o+16>>2]-l;k=+g[o+20>>2]-p;q=+g[o+24>>2]-h;o=c[m+8>>2]|0;l=+g[o+16>>2]-l;p=+g[o+20>>2]-p;h=+g[o+24>>2]-h;if(!(( false?1:r*k*h+(e*q*l+j*f*p-r*q*p-e*f*h)-j*k*l!=r*k*h+(e*q*l+j*f*p-r*q*p-e*f*h)-j*k*l)|r*k*h+(e*q*l+j*f*p-r*q*p-e*f*h)-j*k*l==0.0)){o=1;i=n;return o|0}break}default:{}}while(0);o=0;i=n;return o|0}function zd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0,Y=0,Z=0;Y=c[d+36>>2]|0;X=c[e+36>>2]|0;K=+g[Y+8>>2];L=+g[Y+12>>2];M=+g[Y+16>>2];d=c[X+8>>2]|0;R=+g[d+8>>2];S=+g[d+12>>2];T=+g[d+16>>2];e=c[X+12>>2]|0;N=+g[e+8>>2];P=+g[e+12>>2];Q=+g[e+16>>2];h=c[X+16>>2]|0;U=+g[h+8>>2];V=+g[h+12>>2];W=+g[h+16>>2];w=N-K-(R-K);D=P-L-(S-L);B=Q-M-(T-M);x=D*(W-M-(T-M))-B*(V-L-(S-L));E=B*(U-K-(R-K))-w*(W-M-(T-M));C=w*(V-L-(S-L))-D*(U-K-(R-K));do if(C*C+(x*x+E*E)>1.1920928955078125e-07?(G=1.0/+O(+(C*C+(x*x+E*E))),H=(T-M)*C*G+((R-K)*x*G+(S-L)*E*G),H*H<3402823466385288598117041.0e14):0){f=R-K-x*G*H;r=S-L-E*G*H;s=T-M-C*G*H;t=N-K-x*G*H;u=P-L-E*G*H;v=Q-M-C*G*H;if((C*(u*f-r*t)+(x*(r*v-s*u)+E*(s*t-v*f))>0.0?(y=U-K-x*G*H,z=V-L-E*G*H,A=W-M-C*G*H,C*(z*t-u*y)+(x*(u*A-v*z)+E*(v*y-A*t))>0.0):0)?C*(r*y-z*f)+(x*(z*s-A*r)+E*(A*f-s*y))>0.0:0){q=H*H;p=x*G*H;n=C*G*H;m=E*G*H;break}if(w*w+D*D+B*B>1.1920928955078125e-07?(F=-((R-K)*w+(S-L)*D+(T-M)*B)/(w*w+D*D+B*B),F=F<0.0?0.0:F>1.0?1.0:F,q=(T-M+B*F)*(T-M+B*F)+((R-K+w*F)*(R-K+w*F)+(S-L+D*F)*(S-L+D*F)),q<3402823466385288598117041.0e14):0){s=R-K+w*F;t=T-M+B*F;r=S-L+D*F}else{q=3402823466385288598117041.0e14;s=0.0;t=0.0;r=0.0}f=(U-K-(N-K))*(U-K-(N-K))+(V-L-(P-L))*(V-L-(P-L))+(W-M-(Q-M))*(W-M-(Q-M));if(f>1.1920928955078125e-07?(n=-((N-K)*(U-K-(N-K))+(P-L)*(V-L-(P-L))+(Q-M)*(W-M-(Q-M)))/f,n=n<0.0?0.0:n>1.0?1.0:n,p=N-K+(U-K-(N-K))*n,k=P-L+(V-L-(P-L))*n,n=Q-M+(W-M-(Q-M))*n,n*n+(p*p+k*k)<q):0)q=n*n+(p*p+k*k);else{p=s;n=t;k=r}f=(R-K-(U-K))*(R-K-(U-K))+(S-L-(V-L))*(S-L-(V-L))+(T-M-(W-M))*(T-M-(W-M));if(f>1.1920928955078125e-07?(J=-((U-K)*(R-K-(U-K))+(V-L)*(S-L-(V-L))+(W-M)*(T-M-(W-M)))/f,J=J<0.0?0.0:J>1.0?1.0:J,I=U-K+(R-K-(U-K))*J,m=V-L+(S-L-(V-L))*J,J=W-M+(T-M-(W-M))*J,J*J+(I*I+m*m)<q):0){q=J*J+(I*I+m*m);p=I;n=J}else m=k}else{q=3402823466385288598117041.0e14;p=0.0;n=0.0;m=0.0}while(0);I=K-+g[Y+24>>2];J=L-+g[Y+28>>2];u=M-+g[Y+32>>2];u=+g[b+12>>2]+ +O(+(I*I+J*J+u*u))*2.0;if(!(q<u*u))return;r=K+p;f=L+m;k=M+n;t=+O(+(((R-r)*(P-f)-(S-f)*(N-r))*((R-r)*(P-f)-(S-f)*(N-r))+(((S-f)*(Q-k)-(T-k)*(P-f))*((S-f)*(Q-k)-(T-k)*(P-f))+((T-k)*(N-r)-(R-r)*(Q-k))*((T-k)*(N-r)-(R-r)*(Q-k)))));s=+O(+(((N-r)*(V-f)-(P-f)*(U-r))*((N-r)*(V-f)-(P-f)*(U-r))+(((P-f)*(W-k)-(Q-k)*(V-f))*((P-f)*(W-k)-(Q-k)*(V-f))+((Q-k)*(U-r)-(N-r)*(W-k))*((Q-k)*(U-r)-(N-r)*(W-k)))));r=+O(+(((S-f)*(U-r)-(R-r)*(V-f))*((S-f)*(U-r)-(R-r)*(V-f))+(((T-k)*(V-f)-(S-f)*(W-k))*((T-k)*(V-f)-(S-f)*(W-k))+((R-r)*(W-k)-(T-k)*(U-r))*((R-r)*(W-k)-(T-k)*(U-r)))));k=+g[Y+88>>2];V=+g[d+88>>2];W=+g[e+88>>2];f=+g[h+88>>2];f=!(V<=0.0)&!(W<=0.0)&!(f<=0.0)?V*s*(1.0/(t+s+r))+W*r*(1.0/(t+s+r))+t*(1.0/(t+s+r))*f:0.0;if(!(k+f>0.0))return;W=1.0/-+O(+q);q=p*W;p=m*W;n=n*W;o=c[b+4>>2]|0;d=c[b+8>>2]|0;l=c[(+g[o+316>>2]>+g[d+316>>2]?o+316|0:d+316|0)>>2]|0;m=k/(k+f)*+g[o+332>>2];f=f/(k+f)*+g[d+332>>2];d=c[o+832>>2]|0;if((d|0)==(c[o+836>>2]|0)?(Z=d|0?d<<1:1,(d|0)<(Z|0)):0){if(!Z)j=0;else{c[6435]=(c[6435]|0)+1;d=yc((Z*56|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}j=d;d=c[o+832>>2]|0}if((d|0)>0){e=0;do{h=j+(e*56|0)|0;b=(c[o+840>>2]|0)+(e*56|0)|0;i=h+56|0;do{c[h>>2]=c[b>>2];h=h+4|0;b=b+4|0}while((h|0)<(i|0));e=e+1|0}while((e|0)!=(d|0))}d=c[o+840>>2]|0;if(d|0){if(a[o+844>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[o+840>>2]=0}a[o+844>>0]=1;c[o+840>>2]=j;c[o+836>>2]=Z;d=c[o+832>>2]|0}Z=c[o+840>>2]|0;c[Z+(d*56|0)>>2]=Y;c[Z+(d*56|0)+4>>2]=X;g[Z+(d*56|0)+8>>2]=s*(1.0/(t+s+r));g[Z+(d*56|0)+12>>2]=r*(1.0/(t+s+r));g[Z+(d*56|0)+16>>2]=t*(1.0/(t+s+r));g[Z+(d*56|0)+20>>2]=0.0;g[Z+(d*56|0)+24>>2]=q;g[Z+(d*56|0)+28>>2]=p;g[Z+(d*56|0)+32>>2]=n;g[Z+(d*56|0)+36>>2]=0.0;g[Z+(d*56|0)+40>>2]=u;c[Z+(d*56|0)+44>>2]=l;g[Z+(d*56|0)+48>>2]=m;g[Z+(d*56|0)+52>>2]=f;c[o+832>>2]=(c[o+832>>2]|0)+1;return}function Ad(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;o=i;i=i+112|0;c[d+20>>2]=c[e+16>>2];c[d+24>>2]=c[e+20>>2];c[d+28>>2]=c[e+24>>2];c[d+32>>2]=c[e+28>>2];c[d+4>>2]=c[e>>2];c[d+8>>2]=c[e+4>>2];c[d+12>>2]=c[e+8>>2];c[d+16>>2]=c[e+12>>2];c[d+36>>2]=c[e+32>>2];c[d+40>>2]=c[e+36>>2];c[d+44>>2]=c[e+40>>2];c[d+48>>2]=c[e+44>>2];c[d+56>>2]=c[e+48>>2];a[d+60>>0]=(c[e+52>>2]|0)!=0&1;n=c[e+56>>2]|0;j=o+48|0;l=j+64|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(l|0));m=c[d+88>>2]|0;if((m|0)<(n|0)){if((c[d+92>>2]|0)<(n|0)){if(!n){f=0;g=m}else{c[6435]=(c[6435]|0)+1;f=yc(n<<6|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g=c[d+88>>2]|0}if((g|0)>0){h=0;do{j=f+(h<<6)|0;k=(c[d+96>>2]|0)+(h<<6)|0;l=j+64|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0));h=h+1|0}while((h|0)!=(g|0))}g=c[d+96>>2]|0;if(g|0){if(a[d+100>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[d+96>>2]=0}a[d+100>>0]=1;c[d+96>>2]=f;c[d+92>>2]=n;g=d+96|0}else g=d+96|0;f=m;do{j=(c[g>>2]|0)+(f<<6)|0;k=o+48|0;l=j+64|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0));f=f+1|0}while((f|0)!=(n|0))}c[d+88>>2]=n;if((n|0)>0){f=c[d+96>>2]|0;g=0;h=c[e+64>>2]|0;while(1){c[f+(g<<6)+16>>2]=c[h+16>>2];c[f+(g<<6)+20>>2]=c[h+20>>2];c[f+(g<<6)+24>>2]=c[h+24>>2];c[f+(g<<6)+28>>2]=c[h+28>>2];c[f+(g<<6)>>2]=c[h>>2];c[f+(g<<6)+4>>2]=c[h+4>>2];c[f+(g<<6)+8>>2]=c[h+8>>2];c[f+(g<<6)+12>>2]=c[h+12>>2];c[f+(g<<6)+32>>2]=c[h+32>>2];c[f+(g<<6)+36>>2]=c[h+36>>2];c[f+(g<<6)+40>>2]=c[h+40>>2];g=g+1|0;if((g|0)==(n|0))break;else h=h+48|0}}k=c[e+60>>2]|0;c[o+32>>2]=0;c[o+32+4>>2]=0;c[o+32+8>>2]=0;c[o+32+12>>2]=0;j=c[d+128>>2]|0;if((j|0)<(k|0)){if((c[d+132>>2]|0)<(k|0)){if(!k){f=0;g=j}else{c[6435]=(c[6435]|0)+1;f=yc((k<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g=c[d+128>>2]|0}if((g|0)>0){h=0;do{n=f+(h<<4)|0;m=(c[d+136>>2]|0)+(h<<4)|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];h=h+1|0}while((h|0)!=(g|0))}g=c[d+136>>2]|0;if(g|0){if(a[d+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[d+136>>2]=0}a[d+140>>0]=1;c[d+136>>2]=f;c[d+132>>2]=k;g=d+136|0}else g=d+136|0;f=j;do{n=(c[g>>2]|0)+(f<<4)|0;c[n>>2]=c[o+32>>2];c[n+4>>2]=c[o+32+4>>2];c[n+8>>2]=c[o+32+8>>2];c[n+12>>2]=c[o+32+12>>2];f=f+1|0}while((f|0)!=(k|0))}c[d+128>>2]=k;if((k|0)>0){f=c[d+136>>2]|0;g=0;h=c[e+68>>2]|0;while(1){c[f+(g<<4)+12>>2]=c[h+12>>2];b[f+(g<<4)+6>>1]=b[h+6>>1]|0;b[f+(g<<4)+8>>1]=b[h+8>>1]|0;b[f+(g<<4)+10>>1]=b[h+10>>1]|0;b[f+(g<<4)>>1]=b[h>>1]|0;b[f+(g<<4)+2>>1]=b[h+2>>1]|0;b[f+(g<<4)+4>>1]=b[h+4>>1]|0;g=g+1|0;if((g|0)==(k|0))break;else h=h+16|0}}c[d+144>>2]=c[e+76>>2];k=c[e+80>>2]|0;j=c[d+152>>2]|0;if((j|0)<(k|0)){if((c[d+156>>2]|0)<(k|0)){if(!k){f=0;g=j}else{c[6435]=(c[6435]|0)+1;f=yc(k<<5|19)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}g=c[d+152>>2]|0}if((g|0)>0){h=0;do{n=f+(h<<5)|0;m=(c[d+160>>2]|0)+(h<<5)|0;c[n>>2]=c[m>>2];c[n+4>>2]=c[m+4>>2];c[n+8>>2]=c[m+8>>2];c[n+12>>2]=c[m+12>>2];c[n+16>>2]=c[m+16>>2];c[n+20>>2]=c[m+20>>2];c[n+24>>2]=c[m+24>>2];c[n+28>>2]=c[m+28>>2];h=h+1|0}while((h|0)!=(g|0))}g=c[d+160>>2]|0;if(g|0){if(a[d+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=f;c[d+156>>2]=k;g=d+160|0}else g=d+160|0;f=j;do{n=(c[g>>2]|0)+(f<<5)|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];c[n+16>>2]=c[o+16>>2];c[n+20>>2]=c[o+20>>2];c[n+24>>2]=c[o+24>>2];c[n+28>>2]=c[o+28>>2];f=f+1|0}while((f|0)!=(k|0))}c[d+152>>2]=k;if((k|0)<=0){i=o;return}g=c[d+160>>2]|0;h=0;f=c[e+72>>2]|0;while(1){b[g+(h<<5)+6>>1]=b[f+14>>1]|0;b[g+(h<<5)+8>>1]=b[f+16>>1]|0;b[g+(h<<5)+10>>1]=b[f+18>>1]|0;b[g+(h<<5)>>1]=b[f+8>>1]|0;b[g+(h<<5)+2>>1]=b[f+10>>1]|0;b[g+(h<<5)+4>>1]=b[f+12>>1]|0;c[g+(h<<5)+12>>2]=c[f>>2];c[g+(h<<5)+16>>2]=c[f+4>>2];h=h+1|0;if((h|0)==(k|0))break;else f=f+20|0}i=o;return}function Bd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[b>>2]=3180;d=c[b+192>>2]|0;if(d|0)Ab[c[(c[d>>2]|0)+4>>2]&255](d);a:do if((c[b+1112>>2]|0)>0)do{h=c[c[b+1120>>2]>>2]|0;d=c[h+348>>2]|0;if(d|0){hh(b+1048|0,d)|0;e=c[b+1052>>2]|0;if(e|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+1052>>2]=d;c[b+1060>>2]=(c[b+1060>>2]|0)+-1}Fk(h);if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}d=c[b+1112>>2]|0;if((d|0)<=0)break a;g=c[b+1120>>2]|0;e=0;do{f=g+(e<<2)|0;if((c[f>>2]|0)==(h|0)){i=18;break}e=e+1|0}while((e|0)<(d|0));if((i|0)==18){i=0;if((e|0)<(d|0)){c[f>>2]=c[g+(d+-1<<2)>>2];c[(c[b+1120>>2]|0)+(d+-1<<2)>>2]=h;c[b+1112>>2]=d+-1;d=d+-1|0}}}while((d|0)>0);while(0);d=c[b+872>>2]|0;if((d|0)>0){f=0;do{e=c[(c[b+880>>2]|0)+(f<<2)>>2]|0;if(e){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+872>>2]|0}f=f+1|0}while((f|0)<(d|0))}d=c[b+852>>2]|0;if((d|0)>0){f=0;do{e=c[(c[b+860>>2]|0)+(f<<2)>>2]|0;if(e){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0);d=c[b+852>>2]|0}f=f+1|0}while((f|0)<(d|0))}d=c[b+1244>>2]|0;if(d|0){if(a[b+1248>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+1244>>2]=0}a[b+1248>>0]=1;c[b+1244>>2]=0;c[b+1236>>2]=0;c[b+1240>>2]=0;d=c[b+1140>>2]|0;if(d|0){if(a[b+1144>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+1140>>2]=0}a[b+1144>>0]=1;c[b+1140>>2]=0;c[b+1132>>2]=0;c[b+1136>>2]=0;d=c[b+1120>>2]|0;if(d|0){if(a[b+1124>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+1120>>2]=0}a[b+1124>>0]=1;c[b+1120>>2]=0;c[b+1112>>2]=0;c[b+1116>>2]=0;pi(b+1048|0);pi(b+988|0);pi(b+928|0);d=c[b+880>>2]|0;if(d|0){if(a[b+884>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+880>>2]=0}a[b+884>>0]=1;c[b+880>>2]=0;c[b+872>>2]=0;c[b+876>>2]=0;d=c[b+860>>2]|0;if(d|0){if(a[b+864>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+860>>2]=0}a[b+864>>0]=1;c[b+860>>2]=0;c[b+852>>2]=0;c[b+856>>2]=0;d=c[b+840>>2]|0;if(d|0){if(a[b+844>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+840>>2]=0}a[b+844>>0]=1;c[b+840>>2]=0;c[b+832>>2]=0;c[b+836>>2]=0;d=c[b+820>>2]|0;if(d|0){if(a[b+824>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+820>>2]=0}a[b+824>>0]=1;c[b+820>>2]=0;c[b+812>>2]=0;c[b+816>>2]=0;d=c[b+800>>2]|0;if(d|0){if(a[b+804>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+800>>2]=0}a[b+804>>0]=1;c[b+800>>2]=0;c[b+792>>2]=0;c[b+796>>2]=0;d=c[b+780>>2]|0;if(d|0){if(a[b+784>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+780>>2]=0}a[b+784>>0]=1;c[b+780>>2]=0;c[b+772>>2]=0;c[b+776>>2]=0;d=c[b+760>>2]|0;if(d|0){if(a[b+764>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+760>>2]=0}a[b+764>>0]=1;c[b+760>>2]=0;c[b+752>>2]=0;c[b+756>>2]=0;d=c[b+740>>2]|0;if(d|0){if(a[b+744>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+740>>2]=0}a[b+744>>0]=1;c[b+740>>2]=0;c[b+732>>2]=0;c[b+736>>2]=0;d=c[b+720>>2]|0;if(d|0){if(a[b+724>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+720>>2]=0}a[b+724>>0]=1;c[b+720>>2]=0;c[b+712>>2]=0;c[b+716>>2]=0;d=c[b+700>>2]|0;if(d|0){if(a[b+704>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+700>>2]=0}a[b+704>>0]=1;c[b+700>>2]=0;c[b+692>>2]=0;c[b+696>>2]=0;d=c[b+512>>2]|0;if(d|0){if(a[b+516>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+512>>2]=0}a[b+516>>0]=1;c[b+512>>2]=0;c[b+504>>2]=0;c[b+508>>2]=0;d=c[b+492>>2]|0;if(d|0){if(a[b+496>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+492>>2]=0}a[b+496>>0]=1;c[b+492>>2]=0;c[b+484>>2]=0;c[b+488>>2]=0;d=c[b+444>>2]|0;if(d|0){if(!((a[b+448>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+444>>2]=0}a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;d=c[b+424>>2]|0;if(d|0){if(!((a[b+428>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;d=c[b+404>>2]|0;if(d|0){if(!((a[b+408>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+404>>2]=0}a[b+408>>0]=1;c[b+404>>2]=0;c[b+396>>2]=0;c[b+400>>2]=0;d=c[b+276>>2]|0;if(!d){a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;i=b+272|0;c[i>>2]=0;c[b>>2]=5008;return}if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+276>>2]=0;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;i=b+272|0;c[i>>2]=0;c[b>>2]=5008;return}function Cd(a,d,f,h,j,k,l,m,n){a=a|0;d=d|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=i;i=i+16|0;Bj(a,w+6|0,+g[d>>2],+g[d+4>>2],+g[d+8>>2],0);Bj(a,w,+g[f>>2],+g[f+4>>2],+g[f+8>>2],1);v=b[a+64>>1]|0;u=c[a+60>>2]|0;b[a+64>>1]=b[u+((v&65535)<<6)+48>>1]|0;o=(b[a+56>>1]|0)+1<<16>>16;b[a+56>>1]=o;c[u+((v&65535)<<6)+12>>2]=v&65535;c[u+((v&65535)<<6)>>2]=j;b[u+((v&65535)<<6)+4>>1]=k;b[u+((v&65535)<<6)+6>>1]=l;c[u+((v&65535)<<6)+8>>2]=n;q=(o&65535)<<1&65534;b[u+54>>1]=(e[u+54>>1]|0)+2;p=c[a+68>>2]|0;n=e[p+(q+-1<<2)>>1]|e[p+(q+-1<<2)+2>>1]<<16;b[p+((q|1)<<2)>>1]=n;b[p+((q|1)<<2)+2>>1]=n>>>16;p=c[a+68>>2]|0;b[p+(q+-1<<2)>>1]=b[w+6>>1]|0;b[p+(q+-1<<2)+2>>1]=v;b[p+(q<<2)>>1]=b[w>>1]|0;b[p+(q<<2)+2>>1]=v;b[u+((v&65535)<<6)+48>>1]=q+-1;b[u+((v&65535)<<6)+54>>1]=(o&65535)<<1;p=(c[a+60>>2]|0)+56|0;b[p>>1]=(e[p>>1]|0)+2;p=c[a+72>>2]|0;n=e[p+(q+-1<<2)>>1]|e[p+(q+-1<<2)+2>>1]<<16;b[p+((q|1)<<2)>>1]=n;b[p+((q|1)<<2)+2>>1]=n>>>16;p=c[a+72>>2]|0;b[p+(q+-1<<2)>>1]=b[w+6+2>>1]|0;b[p+(q+-1<<2)+2>>1]=v;b[p+(q<<2)>>1]=b[w+2>>1]|0;b[p+(q<<2)+2>>1]=v;b[u+((v&65535)<<6)+50>>1]=q+-1;b[u+((v&65535)<<6)+56>>1]=(o&65535)<<1;p=(c[a+60>>2]|0)+58|0;b[p>>1]=(e[p>>1]|0)+2;p=c[a+76>>2]|0;n=e[p+(q+-1<<2)>>1]|e[p+(q+-1<<2)+2>>1]<<16;b[p+((q|1)<<2)>>1]=n;b[p+((q|1)<<2)+2>>1]=n>>>16;p=c[a+76>>2]|0;b[p+(q+-1<<2)>>1]=b[w+6+4>>1]|0;b[p+(q+-1<<2)+2>>1]=v;b[p+(q<<2)>>1]=b[w+4>>1]|0;b[p+(q<<2)+2>>1]=v;b[u+((v&65535)<<6)+52>>1]=q+-1;b[u+((v&65535)<<6)+58>>1]=(o&65535)<<1;o=c[a+68>>2]|0;q=e[u+((v&65535)<<6)+48>>1]|0;p=c[a+60>>2]|0;n=b[o+(q<<2)+-4>>1]|0;if((e[o+(q<<2)>>1]|0)<(n&65535)){s=p+((e[o+(q<<2)+2>>1]|0)<<6)+48|0;r=o+(q<<2)|0;q=o+(q<<2)+-4|0;while(1){o=e[r+-2>>1]|0;if(!(n&1)){t=p+(o<<6)+48|0;b[t>>1]=(b[t>>1]|0)+1<<16>>16}else{t=p+(o<<6)+54|0;b[t>>1]=(b[t>>1]|0)+1<<16>>16}b[s>>1]=(b[s>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;n=e[q>>1]|e[q+2>>1]<<16;b[r>>1]=n;b[r+2>>1]=n>>>16;b[q>>1]=o;b[q+2>>1]=o>>>16;o=r+-4|0;q=q+-4|0;n=b[q>>1]|0;if((e[o>>1]|0)>=(n&65535))break;p=c[a+60>>2]|0;r=o}o=c[a+68>>2]|0}n=e[u+((v&65535)<<6)+54>>1]|0;q=o+(n<<2)|0;p=b[q+-4>>1]|0;a:do if((e[q>>1]|0)<(p&65535)){s=c[a+60>>2]|0;t=s+((e[o+(n<<2)+2>>1]|0)<<6)+54|0;n=p;r=q;p=q+-4|0;while(1){o=e[r+-2>>1]|0;if(!(n&1)){s=s+(o<<6)+48|0;b[s>>1]=(b[s>>1]|0)+1<<16>>16}else{s=s+(o<<6)+54|0;b[s>>1]=(b[s>>1]|0)+1<<16>>16}b[t>>1]=(b[t>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;n=e[p>>1]|e[p+2>>1]<<16;b[r>>1]=n;b[r+2>>1]=n>>>16;b[p>>1]=o;b[p+2>>1]=o>>>16;o=r+-4|0;p=p+-4|0;n=b[p>>1]|0;if((e[o>>1]|0)>=(n&65535))break a;s=c[a+60>>2]|0;r=o}}while(0);o=c[a+72>>2]|0;q=e[u+((v&65535)<<6)+50>>1]|0;p=c[a+60>>2]|0;n=b[o+(q<<2)+-4>>1]|0;if((e[o+(q<<2)>>1]|0)<(n&65535)){s=p+((e[o+(q<<2)+2>>1]|0)<<6)+50|0;r=o+(q<<2)|0;q=o+(q<<2)+-4|0;while(1){o=e[r+-2>>1]|0;if(!(n&1)){t=p+(o<<6)+50|0;b[t>>1]=(b[t>>1]|0)+1<<16>>16}else{t=p+(o<<6)+56|0;b[t>>1]=(b[t>>1]|0)+1<<16>>16}b[s>>1]=(b[s>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;n=e[q>>1]|e[q+2>>1]<<16;b[r>>1]=n;b[r+2>>1]=n>>>16;b[q>>1]=o;b[q+2>>1]=o>>>16;o=r+-4|0;q=q+-4|0;n=b[q>>1]|0;if((e[o>>1]|0)>=(n&65535))break;p=c[a+60>>2]|0;r=o}o=c[a+72>>2]|0}n=e[u+((v&65535)<<6)+56>>1]|0;q=o+(n<<2)|0;p=b[q+-4>>1]|0;b:do if((e[q>>1]|0)<(p&65535)){s=c[a+60>>2]|0;t=s+((e[o+(n<<2)+2>>1]|0)<<6)+56|0;n=p;r=q;p=q+-4|0;while(1){o=e[r+-2>>1]|0;if(!(n&1)){s=s+(o<<6)+50|0;b[s>>1]=(b[s>>1]|0)+1<<16>>16}else{s=s+(o<<6)+56|0;b[s>>1]=(b[s>>1]|0)+1<<16>>16}b[t>>1]=(b[t>>1]|0)+-1<<16>>16;o=e[r>>1]|e[r+2>>1]<<16;n=e[p>>1]|e[p+2>>1]<<16;b[r>>1]=n;b[r+2>>1]=n>>>16;b[p>>1]=o;b[p+2>>1]=o>>>16;o=r+-4|0;p=p+-4|0;n=b[p>>1]|0;if((e[o>>1]|0)>=(n&65535))break b;s=c[a+60>>2]|0;r=o}}while(0);wh(a,2,b[u+((v&65535)<<6)+52>>1]|0);uh(a,2,b[u+((v&65535)<<6)+58>>1]|0,m);o=c[a+60>>2]|0;n=c[a+108>>2]|0;if(!n){j=o+((v&65535)<<6)|0;i=w;return j|0}c[o+((v&65535)<<6)+60>>2]=gc[c[(c[n>>2]|0)+8>>2]&3](n,d,f,h,j,k,l,m,0)|0;j=o+((v&65535)<<6)|0;i=w;return j|0}function Dd(b,d,e,f,h,i,j,k,l,m,n,o,p){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0;A=_(c[l+24>>2]|0,m)|0;m=a[d+44>>0]|0;z=c[d+56>>2]|0;if(!(m<<24>>24!=0|(z|0)!=0)){A=0;return A|0}C=c[(o|0?l+12|0:l+8|0)>>2]|0;B=c[(o|0?l+20|0:l+16|0)>>2]|0;c[C+(A<<2)>>2]=c[n>>2];c[C+(A+1<<2)>>2]=c[n+4>>2];c[C+(A+2<<2)>>2]=c[n+8>>2];g[B+(A<<2)>>2]=-+g[n>>2];g[B+(A+1<<2)>>2]=-+g[n+4>>2];g[B+(A+2<<2)>>2]=-+g[n+8>>2];do if(!o){q=+g[b+1176>>2];if(!(a[b+1301>>0]|0)){t=q-+g[e+48>>2];w=+g[b+1180>>2]-+g[e+52>>2];x=+g[b+1184>>2]-+g[e+56>>2];v=+g[n+8>>2];s=+g[n+4>>2];u=+g[n>>2];C=c[l+12>>2]|0;g[C+(A<<2)>>2]=w*v-x*s;g[C+(A+1<<2)>>2]=x*u-t*v;g[C+(A+2<<2)>>2]=t*s-w*u;u=+g[b+1176>>2]-+g[f+48>>2];w=+g[b+1180>>2]-+g[f+52>>2];s=+g[b+1184>>2]-+g[f+56>>2];t=+g[n+8>>2];v=+g[n+4>>2];x=+g[n>>2];C=c[l+20>>2]|0;g[C+(A<<2)>>2]=-(w*t-s*v);g[C+(A+1<<2)>>2]=-(s*x-u*t);g[C+(A+2<<2)>>2]=-(u*v-w*x);break}I=q-+g[f+48>>2];H=+g[b+1180>>2]-+g[f+52>>2];F=+g[b+1184>>2]-+g[f+56>>2];u=+g[n>>2];G=+g[n+4>>2];E=+g[n+8>>2];K=+g[b+1112>>2]-+g[e+48>>2];t=+g[b+1116>>2]-+g[e+52>>2];q=+g[b+1120>>2]-+g[e+56>>2];v=+g[d+52>>2]-+g[d+48>>2];J=u*(u*K+G*t+E*q)+u*v-u*(I*u+H*G+F*E);D=G*(u*K+G*t+E*q)+G*v-G*(I*u+H*G+F*E);v=E*(u*K+G*t+E*q)+E*v-E*(I*u+H*G+F*E);x=+g[b+1272>>2];w=+g[b+1276>>2];s=E*(t-G*(u*K+G*t+E*q)+x*D)-G*(q-E*(u*K+G*t+E*q)+x*v);r=u*(q-E*(u*K+G*t+E*q)+x*v)-E*(K-u*(u*K+G*t+E*q)+x*J);q=G*(K-u*(u*K+G*t+E*q)+x*J)-u*(t-G*(u*K+G*t+E*q)+x*D);t=(H-G*(I*u+H*G+F*E)-w*D)*E-(F-E*(I*u+H*G+F*E)-w*v)*G;v=(F-E*(I*u+H*G+F*E)-w*v)*u-(I-u*(I*u+H*G+F*E)-w*J)*E;u=(I-u*(I*u+H*G+F*E)-w*J)*G-(H-G*(I*u+H*G+F*E)-w*D)*u;if(!((p|0)!=0|(a[b+1280>>0]|0)==0)){t=w*t;v=w*v;u=w*u;s=x*s;r=x*r;q=x*q}C=(c[l+12>>2]|0)+(A<<2)|0;g[C>>2]=s;g[C+4>>2]=r;g[C+8>>2]=q;C=c[l+20>>2]|0;g[C+(A<<2)>>2]=-t;g[C+(A+1<<2)>>2]=-v;g[C+(A+2<<2)>>2]=-u}while(0);if(z|0?+g[d>>2]==+g[d+4>>2]:0){m=c[l+28>>2]|0;g[m+(A<<2)>>2]=0.0;q=0.0;e=l+28|0}else y=11;do if((y|0)==11){e=c[l+28>>2]|0;g[e+(A<<2)>>2]=0.0;if(!(m<<24>>24)){if(z|0){m=e;q=0.0;e=l+28|0;break}else m=1;return m|0}c[(c[l+32>>2]|0)+(A<<2)>>2]=c[d+28>>2];if(z|0){m=e;q=+g[e+(A<<2)>>2];e=l+28|0;break}v=+g[d+8>>2];q=o|0?v:-v;r=+g[d+52>>2];s=+g[d>>2];t=+g[d+4>>2];u=+g[l>>2]*+g[d+32>>2];do if(!(s>t))if(!(s==t)){if(q/u<0.0)if(r>=s?s-q/u>r:0){q=(s-r)/(q/u);break}else{q=r<s?0.0:1.0;break}if(q/u>0.0)if(r<=t?t-q/u<r:0){q=(t-r)/(q/u);break}else{q=r>t?0.0:1.0;break}else q=0.0}else q=0.0;else q=1.0;while(0);g[e+(A<<2)>>2]=q*v+ +g[e+(A<<2)>>2];g[(c[l+36>>2]|0)+(A<<2)>>2]=-+g[d+12>>2];c[(c[l+40>>2]|0)+(A<<2)>>2]=c[d+12>>2];C=1;return C|0}while(0);K=+g[l>>2]*+g[d+32>>2]*+g[d+48>>2];g[m+(A<<2)>>2]=q+(o|0?-K:K);c[(c[l+32>>2]|0)+(A<<2)>>2]=c[d+36>>2];if(+g[d>>2]==+g[d+4>>2]){g[(c[l+36>>2]|0)+(A<<2)>>2]=-3402823466385288598117041.0e14;g[(c[l+40>>2]|0)+(A<<2)>>2]=3402823466385288598117041.0e14;C=1;return C|0}C=c[l+40>>2]|0;g[(c[l+36>>2]|0)+(A<<2)>>2]=(z|0)==1?0.0:-3402823466385288598117041.0e14;g[C+(A<<2)>>2]=(z|0)==1?3402823466385288598117041.0e14:0.0;r=+g[d+40>>2];if(!(r>0.0)){C=1;return C|0}if(o|0){J=+g[n>>2];K=+g[n+4>>2];q=+g[n+8>>2];q=+g[j>>2]*J+ +g[j+4>>2]*K+ +g[j+8>>2]*q-(J*+g[k>>2]+K*+g[k+4>>2]+q*+g[k+8>>2])}else{J=+g[n>>2];K=+g[n+4>>2];q=+g[n+8>>2];q=+g[h>>2]*J+ +g[h+4>>2]*K+ +g[h+8>>2]*q-(J*+g[i>>2]+K*+g[i+4>>2]+q*+g[i+8>>2])}if((z|0)==1){if(!(q<0.0)){C=1;return C|0}q=-(q*r);m=(c[e>>2]|0)+(A<<2)|0;if(!(+g[m>>2]<q)){C=1;return C|0}g[m>>2]=q;C=1;return C|0}else{if(!(q>0.0)){C=1;return C|0}q=-(q*r);m=(c[e>>2]|0)+(A<<2)|0;if(!(+g[m>>2]>q)){C=1;return C|0}g[m>>2]=q;C=1;return C|0}return 0}function Ed(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var l=0.0,m=0,n=0.0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0;u=i;i=i+288|0;q=c[b+4>>2]|0;a[q+312>>0]=0;c[q>>2]=0;a[q+356>>0]=1;c[q+292>>2]=1566444395;c[q+296>>2]=1566444395;c[q+300>>2]=1566444395;g[q+304>>2]=0.0;c[q+336>>2]=0;c[q+336+4>>2]=0;c[q+336+8>>2]=0;c[q+336+12>>2]=0;a[q+336+16>>0]=0;a[q+332>>0]=a[q+332>>0]&-16;r=+g[e+48>>2]-+g[d+48>>2]-(+g[h+48>>2]-+g[f+48>>2]);s=+g[e+52>>2]-+g[d+52>>2]-(+g[h+52>>2]-+g[f+52>>2]);t=+g[e+56>>2]-+g[d+56>>2]-(+g[h+56>>2]-+g[f+56>>2]);c[u+216>>2]=9160;g[u+216+36>>2]=999999984306749440.0;a[u+216+40>>0]=0;q=c[b+8>>2]|0;p=c[b+12>>2]|0;o=c[b+4>>2]|0;c[u+136>>2]=9208;c[u+136+4>>2]=0;c[u+136+8>>2]=1065353216;c[u+136+12>>2]=0;g[u+136+16>>2]=0.0;c[u+136+20>>2]=0;c[u+136+24>>2]=o;c[u+136+28>>2]=q;c[u+136+32>>2]=p;c[u+136+36>>2]=c[q+4>>2];c[u+136+40>>2]=c[p+4>>2];g[u+136+44>>2]=+Sb[c[(c[q>>2]|0)+48>>2]&15](q);g[u+136+48>>2]=+Sb[c[(c[p>>2]|0)+48>>2]&15](p);a[u+136+52>>0]=0;c[u+136+60>>2]=-1;c[u+136+72>>2]=1;c[u+136+76>>2]=1;g[u+128>>2]=999999984306749440.0;c[u>>2]=c[d>>2];c[u+4>>2]=c[d+4>>2];c[u+8>>2]=c[d+8>>2];c[u+12>>2]=c[d+12>>2];c[u+16>>2]=c[d+16>>2];c[u+16+4>>2]=c[d+16+4>>2];c[u+16+8>>2]=c[d+16+8>>2];c[u+16+12>>2]=c[d+16+12>>2];c[u+32>>2]=c[d+32>>2];c[u+32+4>>2]=c[d+32+4>>2];c[u+32+8>>2]=c[d+32+8>>2];c[u+32+12>>2]=c[d+32+12>>2];c[u+48>>2]=c[d+48>>2];c[u+48+4>>2]=c[d+48+4>>2];c[u+48+8>>2]=c[d+48+8>>2];c[u+48+12>>2]=c[d+48+12>>2];c[u+64>>2]=c[f>>2];c[u+64+4>>2]=c[f+4>>2];c[u+64+8>>2]=c[f+8>>2];c[u+64+12>>2]=c[f+12>>2];c[u+80>>2]=c[f+16>>2];c[u+80+4>>2]=c[f+16+4>>2];c[u+80+8>>2]=c[f+16+8>>2];c[u+80+12>>2]=c[f+16+12>>2];c[u+96>>2]=c[f+32>>2];c[u+96+4>>2]=c[f+32+4>>2];c[u+96+8>>2]=c[f+32+8>>2];c[u+96+12>>2]=c[f+32+12>>2];c[u+112>>2]=c[f+48>>2];c[u+112+4>>2]=c[f+48+4>>2];c[u+112+8>>2]=c[f+48+8>>2];c[u+112+12>>2]=c[f+48+12>>2];Vc(u+136|0,u,u+216|0,0,0);p=(a[u+216+40>>0]|0)==0;q=u+216+20|0;c[u+264>>2]=c[q>>2];c[u+264+4>>2]=c[q+4>>2];c[u+264+8>>2]=c[q+8>>2];c[u+264+12>>2]=c[q+12>>2];if(p){j=0;i=u;return j|0}n=+g[u+216+36>>2];l=+g[u+216+16>>2];b=c[u+216+12>>2]|0;m=c[u+216+8>>2]|0;o=c[u+216+4>>2]|0;do if(n>1.0000000474974513e-03){l=0.0;p=0;while(1){if((p|0)>31){b=0;p=13;break}w=r*(c[k>>2]=o,+g[k>>2]);w=s*(c[k>>2]=m,+g[k>>2])+w;v=l;l=l-n/(t*(c[k>>2]=b,+g[k>>2])+w);if(!(!(l<=v)&(!(l<0.0)&!(l>1.0)))){b=0;p=13;break}zb[c[c[j>>2]>>2]&31](j,l);w=1.0-l;g[u+48>>2]=w*+g[d+48>>2]+l*+g[e+48>>2];g[u+52>>2]=w*+g[d+52>>2]+l*+g[e+52>>2];g[u+56>>2]=w*+g[d+56>>2]+l*+g[e+56>>2];g[u+112>>2]=w*+g[f+48>>2]+l*+g[h+48>>2];g[u+116>>2]=w*+g[f+52>>2]+l*+g[h+52>>2];g[u+120>>2]=w*+g[f+56>>2]+l*+g[h+56>>2];Vc(u+136|0,u,u+216|0,0,0);if(!(a[u+216+40>>0]|0)){b=0;p=13;break}n=+g[u+216+36>>2];if(n<0.0){p=8;break}c[u+264>>2]=c[q>>2];c[u+264+4>>2]=c[q+4>>2];c[u+264+8>>2]=c[q+8>>2];c[u+264+12>>2]=c[q+12>>2];b=c[u+216+12>>2]|0;m=c[u+216+8>>2]|0;o=c[u+216+4>>2]|0;if(!(n>1.0000000474974513e-03)){p=10;break}else p=p+1|0}if((p|0)==8){g[j+164>>2]=l;f=c[u+216+8>>2]|0;e=c[u+216+12>>2]|0;h=c[u+216+16>>2]|0;c[j+132>>2]=c[u+216+4>>2];c[j+136>>2]=f;c[j+140>>2]=e;c[j+144>>2]=h;c[j+148>>2]=c[q>>2];c[j+148+4>>2]=c[q+4>>2];c[j+148+8>>2]=c[q+8>>2];c[j+148+12>>2]=c[q+12>>2];j=1;i=u;return j|0}else if((p|0)==10){n=l;l=+g[u+216+16>>2];break}else if((p|0)==13){i=u;return b|0}}else n=0.0;while(0);w=r*(c[k>>2]=o,+g[k>>2]);w=s*(c[k>>2]=m,+g[k>>2])+w;if(t*(c[k>>2]=b,+g[k>>2])+w>=-+g[j+172>>2]){j=0;i=u;return j|0}g[j+164>>2]=n;c[j+132>>2]=o;c[j+136>>2]=m;c[j+140>>2]=b;g[j+144>>2]=l;c[j+148>>2]=c[u+264>>2];c[j+148+4>>2]=c[u+264+4>>2];c[j+148+8>>2]=c[u+264+8>>2];c[j+148+12>>2]=c[u+264+12>>2];j=1;i=u;return j|0}function Fd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0;m=i;i=i+240|0;c[a+4>>2]=(c[a+4>>2]|0)+1;k=c[b+36>>2]|0;j=c[d+36>>2]|0;f=c[a+8>>2]|0;K=c[(c[f+4>>2]|0)+24>>2]|0;d=c[K+(k*80|0)+64>>2]|0;b=(c[(c[a+12>>2]|0)+4>>2]|0)+24|0;e=c[(c[b>>2]|0)+(j*80|0)+64>>2]|0;f=c[f+12>>2]|0;n=+g[f>>2];I=+g[f+4>>2];J=+g[f+8>>2];q=+g[f+16>>2];s=+g[f+20>>2];u=+g[f+24>>2];r=+g[f+32>>2];v=+g[f+36>>2];D=+g[f+40>>2];w=+g[K+(k*80|0)>>2];x=+g[K+(k*80|0)+16>>2];y=+g[K+(k*80|0)+32>>2];z=+g[K+(k*80|0)+4>>2];A=+g[K+(k*80|0)+20>>2];B=+g[K+(k*80|0)+36>>2];t=+g[K+(k*80|0)+8>>2];C=+g[K+(k*80|0)+24>>2];E=+g[K+(k*80|0)+40>>2];o=+g[K+(k*80|0)+48>>2];p=+g[K+(k*80|0)+52>>2];H=+g[K+(k*80|0)+56>>2];F=+g[f+48>>2]+(n*o+I*p+J*H);G=+g[f+52>>2]+(q*o+s*p+u*H);H=+g[f+56>>2]+(r*o+v*p+D*H);g[m+176>>2]=n*w+I*x+J*y;g[m+176+4>>2]=n*z+I*A+J*B;g[m+176+8>>2]=n*t+I*C+J*E;g[m+176+12>>2]=0.0;g[m+176+16>>2]=q*w+s*x+u*y;g[m+176+20>>2]=q*z+s*A+u*B;g[m+176+24>>2]=q*t+s*C+u*E;g[m+176+28>>2]=0.0;g[m+176+32>>2]=r*w+v*x+D*y;g[m+176+36>>2]=r*z+v*A+D*B;g[m+176+40>>2]=r*t+v*C+D*E;g[m+176+44>>2]=0.0;g[m+176+48>>2]=F;g[m+176+52>>2]=G;g[m+176+56>>2]=H;g[m+176+60>>2]=0.0;f=c[(c[a+12>>2]|0)+12>>2]|0;H=+g[f>>2];G=+g[f+4>>2];F=+g[f+8>>2];E=+g[f+16>>2];D=+g[f+20>>2];C=+g[f+24>>2];v=+g[f+32>>2];t=+g[f+36>>2];r=+g[f+40>>2];b=c[b>>2]|0;B=+g[b+(j*80|0)>>2];A=+g[b+(j*80|0)+16>>2];z=+g[b+(j*80|0)+32>>2];y=+g[b+(j*80|0)+4>>2];x=+g[b+(j*80|0)+20>>2];w=+g[b+(j*80|0)+36>>2];u=+g[b+(j*80|0)+8>>2];s=+g[b+(j*80|0)+24>>2];q=+g[b+(j*80|0)+40>>2];J=+g[b+(j*80|0)+48>>2];I=+g[b+(j*80|0)+52>>2];n=+g[b+(j*80|0)+56>>2];p=+g[f+48>>2]+(H*J+G*I+F*n);o=+g[f+52>>2]+(E*J+D*I+C*n);n=+g[f+56>>2]+(v*J+t*I+r*n);g[m+112>>2]=H*B+G*A+F*z;g[m+112+4>>2]=H*y+G*x+F*w;g[m+112+8>>2]=H*u+G*s+F*q;g[m+112+12>>2]=0.0;g[m+112+16>>2]=E*B+D*A+C*z;g[m+112+20>>2]=E*y+D*x+C*w;g[m+112+24>>2]=E*u+D*s+C*q;g[m+112+28>>2]=0.0;g[m+112+32>>2]=v*B+t*A+r*z;g[m+112+36>>2]=v*y+t*x+r*w;g[m+112+40>>2]=v*u+t*s+r*q;g[m+112+44>>2]=0.0;g[m+112+48>>2]=p;g[m+112+52>>2]=o;g[m+112+56>>2]=n;g[m+112+60>>2]=0.0;mc[c[(c[d>>2]|0)+8>>2]&127](d,m+176|0,m+96|0,m+80|0);mc[c[(c[e>>2]|0)+8>>2]&127](e,m+112|0,m+64|0,m+48|0);if(!(+g[m+96>>2]>+g[m+48>>2])?!(+g[m+80>>2]<+g[m+64>>2]):0)b=1;else b=0;if(!(!(+g[m+96+8>>2]>+g[m+48+8>>2])?!(+g[m+80+8>>2]<+g[m+64+8>>2]):0))b=0;if(+g[m+96+4>>2]>+g[m+48+4>>2]){i=m;return}if(+g[m+80+4>>2]<+g[m+64+4>>2]|b^1){i=m;return}f=c[a+8>>2]|0;b=c[f+8>>2]|0;c[m+24>>2]=f;c[m+24+4>>2]=d;c[m+24+8>>2]=b;c[m+24+12>>2]=m+176;c[m+24+16>>2]=-1;c[m+24+20>>2]=k;b=c[a+12>>2]|0;f=c[b+8>>2]|0;c[m>>2]=b;c[m+4>>2]=e;c[m+8>>2]=f;c[m+12>>2]=m+112;c[m+16>>2]=-1;c[m+20>>2]=j;f=c[a+28>>2]|0;c[6423]=(c[6423]|0)+1;b=((j<<16|k)+~((j<<16|k)<<15)>>10^(j<<16|k)+~((j<<16|k)<<15))*9|0;b=(c[f+12>>2]|0)+-1&((b>>6^b)+~((b>>6^b)<<11)>>16^(b>>6^b)+~((b>>6^b)<<11));a:do if((b|0)<(c[f+32>>2]|0)?(h=c[(c[f+40>>2]|0)+(b<<2)>>2]|0,(h|0)!=-1):0){e=c[f+16>>2]|0;b=h;while(1){d=e+(b*12|0)|0;if((c[d>>2]|0)==(k|0)?(c[e+(b*12|0)+4>>2]|0)==(j|0):0)break;b=c[(c[f+60>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){l=16;break a}}if(d)b=c[e+(b*12|0)+8>>2]|0;else l=16}else l=16;while(0);if((l|0)==16){b=c[a+16>>2]|0;b=Ib[c[(c[b>>2]|0)+8>>2]&31](b,m+24|0,m,c[a+32>>2]|0)|0;K=c[a+28>>2]|0;c[(Ob[c[(c[K>>2]|0)+12>>2]&63](K,k,j)|0)+8>>2]=b}K=c[a+24>>2]|0;h=c[K+8>>2]|0;l=c[K+12>>2]|0;c[K+8>>2]=m+24;c[K+12>>2]=m;ic[c[(c[K>>2]|0)+8>>2]&127](K,-1,k);K=c[a+24>>2]|0;ic[c[(c[K>>2]|0)+12>>2]&127](K,-1,j);yb[c[(c[b>>2]|0)+8>>2]&31](b,m+24|0,m,c[a+20>>2]|0,c[a+24>>2]|0);K=c[a+24>>2]|0;c[K+8>>2]=h;c[K+12>>2]=l;i=m;return}function Gd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0;z=i;i=i+48|0;switch(c[b+4>>2]|0){case 8:{c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;i=z;return}case 0:{w=+g[b+28>>2];x=+g[b+28+4>>2];x=+g[d+4>>2]>=0.0?x:-x;y=+g[b+28+8>>2];y=+g[d+8>>2]>=0.0?y:-y;g[a>>2]=+g[d>>2]>=0.0?w:-w;g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;i=z;return}case 1:{u=+g[d>>2];v=+g[d+4>>2];y=+g[d+8>>2];x=u*+g[b+56>>2]+v*+g[b+56+4>>2]+y*+g[b+56+8>>2];w=u*+g[b+56+16>>2]+v*+g[b+56+20>>2]+y*+g[b+56+24>>2];y=u*+g[b+56+32>>2]+v*+g[b+56+36>>2]+y*+g[b+56+40>>2];d=x<w?(w<y?2:1):x<y?2:0;o=c[b+56+(d<<4)+4>>2]|0;r=c[b+56+(d<<4)+8>>2]|0;c[a>>2]=c[b+56+(d<<4)>>2];c[a+4>>2]=o;c[a+8>>2]=r;g[a+12>>2]=0.0;i=z;return}case 13:{c[z+32>>2]=c[b+28>>2];c[z+32+4>>2]=c[b+28+4>>2];c[z+32+8>>2]=c[b+28+8>>2];c[z+32+12>>2]=c[b+28+12>>2];c[z+16>>2]=c[d>>2];f=c[d+4>>2]|0;c[z+16+4>>2]=f;r=c[d+8>>2]|0;c[z+16+8>>2]=r;g[z+16+12>>2]=0.0;d=c[b+52>>2]|0;e=(c[k>>2]=r,+g[k>>2]);switch(d|0){case 2:{e=(c[k>>2]=f,+g[k>>2]);f=0;b=2;o=1;break}case 1:{f=0;b=1;o=2;break}default:{f=1;b=0;o=2}}n=+g[z+32+(f<<2)>>2];l=+g[z+32+(d<<2)>>2];m=+g[z+16+(f<<2)>>2];h=+O(+(m*m+e*e));j=+g[z+16+(b<<2)>>2];if(h!=0.0){g[z+(f<<2)>>2]=m*(n/h);g[z+(b<<2)>>2]=j<0.0?-l:l;g[z+(o<<2)>>2]=n/h*e;c[a>>2]=c[z>>2];c[a+4>>2]=c[z+4>>2];c[a+8>>2]=c[z+8>>2]}else{g[z+(f<<2)>>2]=n;g[z+(b<<2)>>2]=j<0.0?-l:l;g[z+(o<<2)>>2]=0.0;c[a>>2]=c[z>>2];c[a+4>>2]=c[z+4>>2];c[a+8>>2]=c[z+8>>2]}g[a+12>>2]=0.0;i=z;return}case 10:{e=+g[d>>2];h=+g[d+4>>2];j=+g[d+8>>2];o=c[b+52>>2]|0;v=+g[b+28+(o<<2)>>2];l=+g[b+28+(((o+2|0)%3|0)<<2)>>2];if(e*e+h*h+j*j<9.999999747378752e-05){y=1.0;x=0.0;w=0.0}else{w=1.0/+O(+(e*e+h*h+j*j));y=e*w;x=h*w;w=j*w}c[z+32>>2]=0;c[z+32+4>>2]=0;c[z+32+8>>2]=0;c[z+32+12>>2]=0;g[z+32+(o<<2)>>2]=v;q=l*y;t=l*x;u=l*w;s=+g[b+44>>2];m=y*s;p=x*s;s=w*s;e=q+ +g[z+32>>2]-m;h=t+ +g[z+32+4>>2]-p;l=u+ +g[z+32+8>>2]-s;j=w*l+(y*e+x*h);if(j>-999999984306749440.0){b=(g[k>>2]=e,c[k>>2]|0);f=(g[k>>2]=h,c[k>>2]|0);n=j;d=(g[k>>2]=l,c[k>>2]|0)}else{n=-999999984306749440.0;b=0;d=0;f=0}c[z+32>>2]=0;c[z+32+4>>2]=0;c[z+32+8>>2]=0;c[z+32+12>>2]=0;g[z+32+(o<<2)>>2]=-v;j=q+ +g[z+32>>2]-m;h=t+ +g[z+32+4>>2]-p;e=u+ +g[z+32+8>>2]-s;if(w*e+(y*j+x*h)>n){b=(g[k>>2]=j,c[k>>2]|0);f=(g[k>>2]=h,c[k>>2]|0);d=(g[k>>2]=e,c[k>>2]|0)}c[a>>2]=b;c[a+4>>2]=f;c[a+8>>2]=d;g[a+12>>2]=0.0;i=z;return}case 5:{r=c[b+92>>2]|0;o=c[b+96>>2]|0;p=+g[b+12>>2];q=+g[b+16>>2];n=+g[b+20>>2];l=+g[d>>2]*p;m=+g[d+4>>2]*q;e=+g[d+8>>2]*n;if((o|0)>0){b=0;j=-3402823466385288598117041.0e14;f=-1;while(1){h=l*+g[r+(b<<4)>>2]+m*+g[r+(b<<4)+4>>2]+e*+g[r+(b<<4)+8>>2];d=h>j;f=d?b:f;b=b+1|0;if((b|0)==(o|0))break;else j=d?h:j}}else f=-1;x=q*+g[r+(f<<4)+4>>2];y=n*+g[r+(f<<4)+8>>2];g[a>>2]=p*+g[r+(f<<4)>>2];g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;i=z;return}case 4:{r=c[b+104>>2]|0;o=c[b+96>>2]|0;p=+g[b+12>>2];q=+g[b+16>>2];n=+g[b+20>>2];l=+g[d>>2]*p;m=+g[d+4>>2]*q;e=+g[d+8>>2]*n;if((o|0)>0){b=0;j=-3402823466385288598117041.0e14;f=-1;while(1){h=l*+g[r+(b<<4)>>2]+m*+g[r+(b<<4)+4>>2]+e*+g[r+(b<<4)+8>>2];d=h>j;f=d?b:f;b=b+1|0;if((b|0)==(o|0))break;else j=d?h:j}}else f=-1;x=q*+g[r+(f<<4)+4>>2];y=n*+g[r+(f<<4)+8>>2];g[a>>2]=p*+g[r+(f<<4)>>2];g[a+4>>2]=x;g[a+8>>2]=y;g[a+12>>2]=0.0;i=z;return}default:{ic[c[(c[b>>2]|0)+68>>2]&127](a,b,d);i=z;return}}}function Hd(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0,A=0.0,B=0.0;j=+g[e>>2];m=(g[k>>2]=j,c[k>>2]|0);r=j<999999984306749440.0?m:1566444395;i=+g[e+4>>2];o=(g[k>>2]=i,c[k>>2]|0);t=i<999999984306749440.0?o:1566444395;y=+g[e+8>>2];q=(g[k>>2]=y,c[k>>2]|0);z=y<999999984306749440.0?q:1566444395;m=j>-999999984306749440.0?m:-581039253;o=i>-999999984306749440.0?o:-581039253;q=y>-999999984306749440.0?q:-581039253;y=+g[e+16>>2];x=y<(c[k>>2]=r,+g[k>>2]);l=(g[k>>2]=y,c[k>>2]|0);r=x?l:r;i=+g[e+20>>2];x=i<(c[k>>2]=t,+g[k>>2]);n=(g[k>>2]=i,c[k>>2]|0);t=x?n:t;j=+g[e+24>>2];x=j<(c[k>>2]=z,+g[k>>2]);p=(g[k>>2]=j,c[k>>2]|0);z=x?p:z;x=(c[k>>2]=m,+g[k>>2])<y?l:m;s=(c[k>>2]=o,+g[k>>2])<i?n:o;q=(c[k>>2]=q,+g[k>>2])<j?p:q;y=+g[e+32>>2];m=y<(c[k>>2]=r,+g[k>>2]);o=(g[k>>2]=y,c[k>>2]|0);r=m?o:r;j=+g[e+36>>2];m=j<(c[k>>2]=t,+g[k>>2]);p=(g[k>>2]=j,c[k>>2]|0);m=m?p:t;i=+g[e+40>>2];l=i<(c[k>>2]=z,+g[k>>2]);n=(g[k>>2]=i,c[k>>2]|0);l=l?n:z;o=(c[k>>2]=x,+g[k>>2])<y?o:x;p=(c[k>>2]=s,+g[k>>2])<j?p:s;q=(c[k>>2]=q,+g[k>>2])<i?n:q;i=(c[k>>2]=o,+g[k>>2]);j=(c[k>>2]=r,+g[k>>2]);if(i-j<2.0000000949949026e-03){o=(g[k>>2]=i+1.0000000474974513e-03,c[k>>2]|0);n=(g[k>>2]=j+-1.0000000474974513e-03,c[k>>2]|0)}else n=r;i=(c[k>>2]=p,+g[k>>2]);j=(c[k>>2]=m,+g[k>>2]);if(i-j<2.0000000949949026e-03){p=(g[k>>2]=i+1.0000000474974513e-03,c[k>>2]|0);m=(g[k>>2]=j+-1.0000000474974513e-03,c[k>>2]|0)}i=(c[k>>2]=q,+g[k>>2]);j=(c[k>>2]=l,+g[k>>2]);if(i-j<2.0000000949949026e-03){q=(g[k>>2]=i+1.0000000474974513e-03,c[k>>2]|0);l=(g[k>>2]=j+-1.0000000474974513e-03,c[k>>2]|0)}r=c[d+8>>2]|0;j=+g[r+4>>2];y=(c[k>>2]=n,+g[k>>2])-j;i=+g[r+8>>2];u=(c[k>>2]=m,+g[k>>2])-i;B=+g[r+12>>2];v=+g[r+36>>2];w=+g[r+40>>2];A=+g[r+44>>2];r=~~(((c[k>>2]=l,+g[k>>2])-B)*A)&65534;j=(c[k>>2]=o,+g[k>>2])-j;i=(c[k>>2]=p,+g[k>>2])-i;q=(~~(((c[k>>2]=q,+g[k>>2])-B)*A+1.0)&65535|1)&65535;o=c[d+4>>2]|0;m=c[o+4>>2]|0;if((m|0)!=(c[o+8>>2]|0)){d=m;z=o+12|0;z=c[z>>2]|0;x=z+(d<<4)|0;b[x>>1]=~~(y*v)&65534;x=z+(d<<4)+2|0;b[x>>1]=~~(u*w)&65534;x=z+(d<<4)+4|0;b[x>>1]=r;x=z+(d<<4)+6|0;b[x>>1]=~~(j*v+1.0)&65535|1;x=z+(d<<4)+8|0;b[x>>1]=~~(i*w+1.0)&65535|1;x=z+(d<<4)+10|0;b[x>>1]=q;d=z+(d<<4)+12|0;c[d>>2]=f<<21|h;h=c[o+4>>2]|0;h=h+1|0;c[o+4>>2]=h;return}p=m|0?m<<1:1;if((m|0)>=(p|0)){d=m;z=o+12|0;z=c[z>>2]|0;x=z+(d<<4)|0;b[x>>1]=~~(y*v)&65534;x=z+(d<<4)+2|0;b[x>>1]=~~(u*w)&65534;x=z+(d<<4)+4|0;b[x>>1]=r;x=z+(d<<4)+6|0;b[x>>1]=~~(j*v+1.0)&65535|1;x=z+(d<<4)+8|0;b[x>>1]=~~(i*w+1.0)&65535|1;x=z+(d<<4)+10|0;b[x>>1]=q;d=z+(d<<4)+12|0;c[d>>2]=f<<21|h;h=c[o+4>>2]|0;h=h+1|0;c[o+4>>2]=h;return}if(!p)l=0;else{c[6435]=(c[6435]|0)+1;l=yc((p<<4|3)+16|0)|0;if(!l)l=0;else{c[(l+4+15&-16)+-4>>2]=l;l=l+4+15&-16}m=c[o+4>>2]|0}if((m|0)>0){n=0;do{d=l+(n<<4)|0;z=(c[o+12>>2]|0)+(n<<4)|0;c[d>>2]=c[z>>2];c[d+4>>2]=c[z+4>>2];c[d+8>>2]=c[z+8>>2];c[d+12>>2]=c[z+12>>2];n=n+1|0}while((n|0)!=(m|0))}m=c[o+12>>2]|0;if(m|0){if(a[o+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[o+12>>2]=0}a[o+16>>0]=1;c[o+12>>2]=l;c[o+8>>2]=p;d=c[o+4>>2]|0;z=o+12|0;z=c[z>>2]|0;x=z+(d<<4)|0;b[x>>1]=~~(y*v)&65534;x=z+(d<<4)+2|0;b[x>>1]=~~(u*w)&65534;x=z+(d<<4)+4|0;b[x>>1]=r;x=z+(d<<4)+6|0;b[x>>1]=~~(j*v+1.0)&65535|1;x=z+(d<<4)+8|0;b[x>>1]=~~(i*w+1.0)&65535|1;x=z+(d<<4)+10|0;b[x>>1]=q;d=z+(d<<4)+12|0;c[d>>2]=f<<21|h;h=c[o+4>>2]|0;h=h+1|0;c[o+4>>2]=h;return}function Id(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0;i=c[d+8>>2]|0;if(!i){a=0;return a|0}j=i;D=i;i=0;do{if((c[D+20>>2]|0)>(c[a+100>>2]|0)){A=c[D+12>>2]|0;w=c[A+88>>2]|0;x=w-(c[d+88>>2]|0)|0;y=c[A+92>>2]|0;z=y-(c[d+92>>2]|0)|0;A=c[A+96>>2]|0;B=A-(c[d+96>>2]|0)|0;k=yr(c[g>>2]|0,c[g+4>>2]|0,x|0,((x|0)<0)<<31>>31|0)|0;l=C;j=yr(c[g+8>>2]|0,c[g+8+4>>2]|0,z|0,((z|0)<0)<<31>>31|0)|0;l=Pt(j|0,C|0,k|0,l|0)|0;k=C;j=yr(c[g+16>>2]|0,c[g+16+4>>2]|0,B|0,((B|0)<0)<<31>>31|0)|0;j=Pt(l|0,k|0,j|0,C|0)|0;k=C;l=yr(c[f>>2]|0,c[f+4>>2]|0,x|0,((x|0)<0)<<31>>31|0)|0;v=C;m=yr(c[f+8>>2]|0,c[f+8+4>>2]|0,z|0,((z|0)<0)<<31>>31|0)|0;v=Pt(m|0,C|0,l|0,v|0)|0;l=C;m=yr(c[f+16>>2]|0,c[f+16+4>>2]|0,B|0,((B|0)<0)<<31>>31|0)|0;m=Pt(v|0,l|0,m|0,C|0)|0;l=C;if((k|0)>0|(k|0)==0&j>>>0>0){v=k;k=1}else{t=Ls(0,0,j|0,k|0)|0;v=C;u=Pr(j|0,k|0,63)|0;j=(k|0)<0?t:0;v=(k|0)<0?v:0;k=u}if(!((l|0)>0|(l|0)==0&m>>>0>0)){u=Ls(0,0,m|0,l|0)|0;n=(l|0)<0?0-k|0:k;k=(l|0)<0?u:0;l=(l|0)<0?C:0;if(!((n|0)==0&((k|0)==0&(l|0)==0))){m=k;o=8}}else{n=k;o=8}a:do if((o|0)==8){o=0;if(!i){c[h>>2]=j;c[h+4>>2]=v;c[h+8>>2]=m;c[h+8+4>>2]=l;c[h+16>>2]=n;i=D;break}k=c[h+16>>2]|0;if((n|0)==(k|0)){if(n|0){p=c[h+8>>2]|0;s=c[h+8+4>>2]|0;o=yr(p|0,0,j|0,0)|0;k=C;t=yr(s|0,0,j|0,0)|0;r=C;p=yr(p|0,0,v|0,0)|0;q=C;s=yr(s|0,0,v|0,0)|0;G=C;p=Pt(t|0,0,p|0,0)|0;t=C;G=Pt(r|0,0,s|0,G|0)|0;q=Pt(G|0,C|0,q|0,0)|0;t=Pt(q|0,C|0,t|0,0)|0;q=C;k=Pt(0,p|0,o|0,k|0)|0;o=C;p=Pt(t|0,q|0,(o>>>0<p>>>0|(o|0)==(p|0)&k>>>0<0)&1|0,0)|0;q=C;t=c[h>>2]|0;G=c[h+4>>2]|0;s=yr(t|0,0,m|0,0)|0;r=C;E=yr(G|0,0,m|0,0)|0;H=C;t=yr(t|0,0,l|0,0)|0;u=C;G=yr(G|0,0,l|0,0)|0;F=C;t=Pt(E|0,0,t|0,0)|0;E=C;F=Pt(H|0,0,G|0,F|0)|0;u=Pt(F|0,C|0,u|0,0)|0;E=Pt(u|0,C|0,E|0,0)|0;u=C;r=Pt(0,t|0,s|0,r|0)|0;s=C;t=Pt(E|0,u|0,(s>>>0<t>>>0|(s|0)==(t|0)&r>>>0<0)&1|0,0)|0;u=C;if(!(q>>>0<u>>>0|(q|0)==(u|0)&p>>>0<t>>>0))if(!(q>>>0>u>>>0|(q|0)==(u|0)&p>>>0>t>>>0))if(o>>>0<s>>>0|(o|0)==(s|0)&k>>>0<r>>>0)k=-1;else k=(o>>>0>s>>>0|(o|0)==(s|0)&k>>>0>r>>>0)&1;else k=1;else k=-1;k=_(k,n)|0;o=18}}else{k=n-k|0;o=18}do if((o|0)==18){o=0;if((k|0)>=0)if(!k)break;else break a;else{c[h>>2]=j;c[h+4>>2]=v;c[h+8>>2]=m;c[h+8+4>>2]=l;c[h+16>>2]=n;i=D;break a}}while(0);j=(c[i+4>>2]|0)==(D|0);if((c[i>>2]|0)==(D|0))if(j){H=c[e+8>>2]|0;E=_(H,z)|0;u=c[e+4>>2]|0;E=E-(_(u,B)|0)|0;G=c[e>>2]|0;H=(_(G,B)|0)-(_(H,x)|0)|0;G=(_(u,x)|0)-(_(G,z)|0)|0;u=c[i+12>>2]|0;j=c[(c[D+8>>2]|0)+12>>2]|0;z=c[j+88>>2]|0;x=(c[u+88>>2]|0)-z|0;v=c[j+92>>2]|0;B=(c[u+92>>2]|0)-v|0;j=c[j+96>>2]|0;u=(c[u+96>>2]|0)-j|0;F=(_(A-j|0,B)|0)-(_(y-v|0,u)|0)|0;j=(_(w-z|0,u)|0)-(_(A-j|0,x)|0)|0;B=(_(y-v|0,x)|0)-(_(w-z|0,B)|0)|0;E=yr(F|0,((F|0)<0)<<31>>31|0,E|0,((E|0)<0)<<31>>31|0)|0;F=C;H=yr(j|0,((j|0)<0)<<31>>31|0,H|0,((H|0)<0)<<31>>31|0)|0;j=C;G=yr(B|0,((B|0)<0)<<31>>31|0,G|0,((G|0)<0)<<31>>31|0)|0;G=Pt(E|0,F|0,G|0,C|0)|0;j=Pt(G|0,C|0,H|0,j|0)|0;H=C;j=(H|0)>0|(H|0)==0&j>>>0>0?2:1}else j=2;else j=j&1;i=(j|0)==2^b?i:D}while(0);j=c[d+8>>2]|0}D=c[D>>2]|0}while((D|0)!=(j|0));return i|0}function Jd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0;v=i;i=i+560|0;k=h;l=k+36|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c[v+400>>2]=a;c[v+400+4>>2]=d;o=+g[e>>2];E=+g[b>>2];n=+g[e+16>>2];j=+g[b+16>>2];m=+g[e+32>>2];F=+g[b+32>>2];w=+g[b+4>>2];G=+g[b+20>>2];x=+g[b+36>>2];t=+g[b+8>>2];r=+g[b+24>>2];p=+g[b+40>>2];D=+g[e+4>>2];C=+g[e+20>>2];B=+g[e+36>>2];A=+g[e+8>>2];z=+g[e+24>>2];y=+g[e+40>>2];g[v+400+8>>2]=o*E+n*j+m*F;g[v+400+12>>2]=o*w+n*G+m*x;g[v+400+16>>2]=o*t+n*r+m*p;g[v+400+20>>2]=0.0;g[v+400+24>>2]=E*D+j*C+F*B;g[v+400+28>>2]=w*D+G*C+x*B;g[v+400+32>>2]=t*D+r*C+p*B;g[v+400+36>>2]=0.0;g[v+400+40>>2]=E*A+j*z+F*y;g[v+400+44>>2]=w*A+G*z+x*y;g[v+400+48>>2]=t*A+r*z+p*y;g[v+400+52>>2]=0.0;p=+g[e+48>>2]-+g[b+48>>2];r=+g[e+52>>2]-+g[b+52>>2];t=+g[e+56>>2]-+g[b+56>>2];x=+g[b>>2];G=+g[e>>2];w=+g[b+16>>2];F=+g[e+16>>2];j=+g[b+32>>2];E=+g[e+32>>2];m=+g[b+4>>2];n=+g[b+20>>2];o=+g[b+36>>2];q=+g[b+8>>2];s=+g[b+24>>2];u=+g[b+40>>2];g[v+400+56>>2]=x*G+w*F+j*E;g[v+400+60>>2]=x*D+w*C+j*B;g[v+400+64>>2]=x*A+w*z+j*y;g[v+400+68>>2]=0.0;g[v+400+72>>2]=G*m+F*n+E*o;g[v+400+76>>2]=D*m+C*n+B*o;g[v+400+80>>2]=A*m+z*n+y*o;g[v+400+84>>2]=0.0;g[v+400+88>>2]=G*q+F*s+E*u;g[v+400+92>>2]=D*q+C*s+B*u;g[v+400+96>>2]=A*q+z*s+y*u;g[v+400+100>>2]=0.0;g[v+400+104>>2]=p*x+r*w+t*j;g[v+400+108>>2]=p*m+r*n+t*o;g[v+400+112>>2]=p*q+r*s+t*u;g[v+400+116>>2]=0.0;c[v+400+120>>2]=80;c[v+400+124>>2]=0;c[v+16+364>>2]=0;c[v+16+128>>2]=0;c[v+16+128+4>>2]=0;c[v+16+128+8>>2]=0;c[v+16+128+12>>2]=0;c[v+16+376>>2]=2;c[v+16+368>>2]=0;g[v+16+144>>2]=0.0;f=Uc(v+16|0,v+400|0,f)|0;if(f|0){c[h>>2]=(f|0)==1?1:2;b=0;i=v;return b|0}f=c[v+16+372>>2]|0;if(!(c[f+32>>2]|0)){q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;j=0.0}else{e=0;q=0.0;p=0.0;o=0.0;n=0.0;m=0.0;j=0.0;do{u=+g[f+16+(e<<2)>>2];a=c[v+400+120>>2]|0;l=c[v+400+124>>2]|0;d=(c[v+400>>2]|0)+(l>>1)|0;if(l&1)a=c[(c[d>>2]|0)+a>>2]|0;ic[a&127](v,d,c[f+(e<<2)>>2]|0);q=q+u*+g[v>>2];o=o+u*+g[v+4>>2];p=p+u*+g[v+8>>2];f=c[(c[v+16+372>>2]|0)+(e<<2)>>2]|0;r=-+g[f>>2];s=-+g[f+4>>2];t=-+g[f+8>>2];f=c[v+400+120>>2]|0;l=c[v+400+124>>2]|0;a=(c[v+400+4>>2]|0)+(l>>1)|0;if(l&1)f=c[(c[a>>2]|0)+f>>2]|0;F=+g[v+400+24>>2]*r+ +g[v+400+28>>2]*s+ +g[v+400+32>>2]*t;E=+g[v+400+40>>2]*r+ +g[v+400+44>>2]*s+ +g[v+400+48>>2]*t;g[v+528>>2]=+g[v+400+8>>2]*r+ +g[v+400+12>>2]*s+ +g[v+400+16>>2]*t;g[v+528+4>>2]=F;g[v+528+8>>2]=E;g[v+528+12>>2]=0.0;ic[f&127](v+544|0,a,v+528|0);E=+g[v+544>>2];F=+g[v+544+4>>2];G=+g[v+544+8>>2];n=n+u*(E*+g[v+400+56>>2]+F*+g[v+400+60>>2]+G*+g[v+400+64>>2]+ +g[v+400+104>>2]);j=j+u*(E*+g[v+400+72>>2]+F*+g[v+400+76>>2]+G*+g[v+400+80>>2]+ +g[v+400+108>>2]);m=m+u*(E*+g[v+400+88>>2]+F*+g[v+400+92>>2]+G*+g[v+400+96>>2]+ +g[v+400+112>>2]);e=e+1|0;f=c[v+16+372>>2]|0}while(e>>>0<(c[f+32>>2]|0)>>>0)}D=q*+g[b+16>>2]+o*+g[b+20>>2]+p*+g[b+24>>2]+ +g[b+52>>2];E=q*+g[b+32>>2]+o*+g[b+36>>2]+p*+g[b+40>>2]+ +g[b+56>>2];g[h+4>>2]=q*+g[b>>2]+o*+g[b+4>>2]+p*+g[b+8>>2]+ +g[b+48>>2];g[h+8>>2]=D;g[h+12>>2]=E;g[h+16>>2]=0.0;E=n*+g[b+16>>2]+j*+g[b+20>>2]+m*+g[b+24>>2]+ +g[b+52>>2];D=n*+g[b+32>>2]+j*+g[b+36>>2]+m*+g[b+40>>2]+ +g[b+56>>2];g[h+20>>2]=n*+g[b>>2]+j*+g[b+4>>2]+m*+g[b+8>>2]+ +g[b+48>>2];g[h+24>>2]=E;g[h+28>>2]=D;g[h+32>>2]=0.0;D=q-n;E=o-j;G=p-m;g[h+48>>2]=0.0;F=+O(+(D*D+E*E+G*G));g[h+52>>2]=F;F=F>9.999999747378752e-05?1.0/F:1.0;g[h+36>>2]=F*D;g[h+40>>2]=F*E;g[h+44>>2]=F*G;b=1;i=v;return b|0}function Kd(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0.0;j=i;i=i+464|0;li(15711);c[j+128>>2]=c[d>>2];c[j+128+4>>2]=c[d+4>>2];c[j+128+8>>2]=c[d+8>>2];c[j+128+12>>2]=c[d+12>>2];c[j+128+16>>2]=c[d+16>>2];c[j+128+16+4>>2]=c[d+16+4>>2];c[j+128+16+8>>2]=c[d+16+8>>2];c[j+128+16+12>>2]=c[d+16+12>>2];c[j+128+32>>2]=c[d+32>>2];c[j+128+32+4>>2]=c[d+32+4>>2];c[j+128+32+8>>2]=c[d+32+8>>2];c[j+128+32+12>>2]=c[d+32+12>>2];l=j+128+48|0;c[l>>2]=c[d+48>>2];c[l+4>>2]=c[d+48+4>>2];c[l+8>>2]=c[d+48+8>>2];c[l+12>>2]=c[d+48+12>>2];c[j+64>>2]=c[e>>2];c[j+64+4>>2]=c[e+4>>2];c[j+64+8>>2]=c[e+8>>2];c[j+64+12>>2]=c[e+12>>2];c[j+64+16>>2]=c[e+16>>2];c[j+64+16+4>>2]=c[e+16+4>>2];c[j+64+16+8>>2]=c[e+16+8>>2];c[j+64+16+12>>2]=c[e+16+12>>2];c[j+64+32>>2]=c[e+32>>2];c[j+64+32+4>>2]=c[e+32+4>>2];c[j+64+32+8>>2]=c[e+32+8>>2];c[j+64+32+12>>2]=c[e+32+12>>2];k=j+64+48|0;c[k>>2]=c[e+48>>2];c[k+4>>2]=c[e+48+4>>2];c[k+8>>2]=c[e+48+8>>2];c[k+12>>2]=c[e+48+12>>2];Gf(j+128|0,j+64|0,j+256|0,j+192|0);t=+g[j+192>>2];m=t*+g[j+256+4>>2];r=t*+g[j+256+8>>2];g[j>>2]=+g[j+256>>2]*t;g[j+4>>2]=m;g[j+8>>2]=r;g[j+12>>2]=0.0;c[j+256>>2]=0;c[j+256+4>>2]=0;c[j+256+8>>2]=0;c[j+256+12>>2]=0;c[j+192+4>>2]=0;c[j+192+4+4>>2]=0;c[j+192+24>>2]=0;c[j+192+24+4>>2]=0;s=j+192+44|0;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[s+16>>2]=0;Wg(j+128|0,j+16|0);r=+g[j+16>>2];m=+g[j+16+4>>2];t=+g[j+16+8>>2];q=+g[j+16+12>>2];o=r*(2.0/(r*r+m*m+t*t+q*q));n=m*(2.0/(r*r+m*m+t*t+q*q));p=t*(2.0/(r*r+m*m+t*t+q*q));g[j+192>>2]=1.0-(m*n+t*p);g[j+192+4>>2]=r*n-q*p;g[j+192+8>>2]=r*p+q*n;g[j+192+12>>2]=0.0;g[j+192+16>>2]=r*n+q*p;g[j+192+20>>2]=1.0-(r*o+t*p);g[j+192+24>>2]=m*p-q*o;g[j+192+28>>2]=0.0;g[j+192+32>>2]=r*p-q*n;g[j+192+36>>2]=m*p+q*o;g[j+192+40>>2]=1.0-(r*o+m*n);g[s>>2]=0.0;rh(b,j+192|0,j+256|0,j,j+48|0,j+32|0);c[j+256>>2]=5936;c[j+256+36>>2]=c[d>>2];c[j+256+36+4>>2]=c[d+4>>2];c[j+256+36+8>>2]=c[d+8>>2];c[j+256+36+12>>2]=c[d+12>>2];c[j+256+52>>2]=c[d+16>>2];c[j+256+52+4>>2]=c[d+16+4>>2];c[j+256+52+8>>2]=c[d+16+8>>2];c[j+256+52+12>>2]=c[d+16+12>>2];c[j+256+68>>2]=c[d+32>>2];c[j+256+68+4>>2]=c[d+32+4>>2];c[j+256+68+8>>2]=c[d+32+8>>2];c[j+256+68+12>>2]=c[d+32+12>>2];s=j+256+84|0;c[s>>2]=c[d+48>>2];c[s+4>>2]=c[d+48+4>>2];c[s+8>>2]=c[d+48+8>>2];c[s+12>>2]=c[d+48+12>>2];c[j+256+100>>2]=c[e>>2];c[j+256+100+4>>2]=c[e+4>>2];c[j+256+100+8>>2]=c[e+8>>2];c[j+256+100+12>>2]=c[e+12>>2];c[j+256+116>>2]=c[e+16>>2];c[j+256+116+4>>2]=c[e+16+4>>2];c[j+256+116+8>>2]=c[e+16+8>>2];c[j+256+116+12>>2]=c[e+16+12>>2];c[j+256+132>>2]=c[e+32>>2];c[j+256+132+4>>2]=c[e+32+4>>2];c[j+256+132+8>>2]=c[e+32+8>>2];c[j+256+132+12>>2]=c[e+32+12>>2];d=j+256+148|0;c[d>>2]=c[e+48>>2];c[d+4>>2]=c[e+48+4>>2];c[d+8>>2]=c[e+48+8>>2];c[d+12>>2]=c[e+48+12>>2];c[j+256+180>>2]=a;c[j+256+184>>2]=f;g[j+256+188>>2]=h;c[j+256+192>>2]=b;n=+g[d>>2]-+g[s>>2];m=+g[j+256+152>>2]-+g[j+256+88>>2];o=+g[j+256+156>>2]-+g[j+256+92>>2];h=1.0/+O(+(n*n+m*m+o*o));r=n*h==0.0?999999984306749440.0:1.0/(n*h);g[j+256+4>>2]=r;q=m*h==0.0?999999984306749440.0:1.0/(m*h);g[j+256+8>>2]=q;p=o*h==0.0?999999984306749440.0:1.0/(o*h);g[j+256+12>>2]=p;c[j+256+20>>2]=r<0.0&1;c[j+256+24>>2]=q<0.0&1;c[j+256+28>>2]=p<0.0&1;g[j+256+32>>2]=o*o*h+(n*n*h+m*m*h);b=c[a+68>>2]|0;Qb[c[(c[b>>2]|0)+24>>2]&7](b,l,k,j+256|0,j+48|0,j+32|0);b=c[2357]|0;a=(c[b+16>>2]|0)+-1|0;c[b+16>>2]=a;if(a|0){i=j;return}do if(c[b+4>>2]|0){tb(j+256|0,0)|0;s=c[6434]|0;g[b+8>>2]=+g[b+8>>2]+ +(((c[j+256+4>>2]|0)-(c[s+4>>2]|0)+(((c[j+256>>2]|0)-(c[s>>2]|0)|0)*1e6|0)-(c[b+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[b+16>>2]|0)){b=c[2357]|0;break}else{i=j;return}}while(0);c[2357]=c[b+20>>2];i=j;return}
	function xc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0.0,j=0.0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,P=0.0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,X=0.0,Y=0,Z=0.0,_=0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0,ea=0,fa=0.0,ga=0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0,Ba=0,Ca=0,Da=0.0,Ea=0.0,Fa=0;Fa=i;i=i+592|0;c[Fa+48>>2]=c[b>>2];c[Fa>>2]=c[b+64>>2];E=Fa+48+4|0;c[E>>2]=c[b+4>>2];c[Fa+4>>2]=c[b+68>>2];c[Fa+48+8>>2]=c[b+8>>2];c[Fa+8>>2]=c[b+72>>2];c[Fa+48+16>>2]=c[b+16>>2];c[Fa+16>>2]=c[b+80>>2];c[Fa+48+20>>2]=c[b+20>>2];c[Fa+20>>2]=c[b+84>>2];c[Fa+48+24>>2]=c[b+24>>2];c[Fa+24>>2]=c[b+88>>2];c[Fa+48+32>>2]=c[b+32>>2];c[Fa+32>>2]=c[b+96>>2];c[Fa+48+36>>2]=c[b+36>>2];c[Fa+36>>2]=c[b+100>>2];c[Fa+48+40>>2]=c[b+40>>2];c[Fa+40>>2]=c[b+104>>2];Ca=c[a+4>>2]|0;ia=+g[Ca+28>>2];ja=+g[Ca+32>>2];ma=+g[Ca+36>>2];ka=+Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca);la=+Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca);ma=(ma+ +Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca))*2.0;Ca=c[a+8>>2]|0;qa=+g[Ca+28>>2];ra=+g[Ca+32>>2];wa=+g[Ca+36>>2];sa=+Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca);pa=+Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca);wa=(wa+ +Sb[c[(c[Ca>>2]|0)+48>>2]&15](Ca))*2.0;D=+g[b+112>>2]-+g[b+48>>2];M=+g[b+116>>2]-+g[b+52>>2];P=+g[b+120>>2]-+g[b+56>>2];ca=+g[Fa+48>>2];aa=+g[Fa+48+16>>2];ba=+g[Fa+48+32>>2];$=+g[E>>2];X=+g[Fa+48+20>>2];Z=+g[Fa+48+36>>2];fa=+g[Fa+48+8>>2];ha=+g[Fa+48+24>>2];na=+g[Fa+48+40>>2];g[Fa+484>>2]=(ia+ka)*2.0*.5;g[Fa+484+4>>2]=(ja+la)*2.0*.5;g[Fa+484+8>>2]=ma*.5;g[Fa+472>>2]=(qa+sa)*2.0*.5;g[Fa+472+4>>2]=(ra+pa)*2.0*.5;g[Fa+472+8>>2]=wa*.5;za=+g[Fa>>2];ta=+g[Fa+16>>2];va=+g[Fa+32>>2];ya=+g[Fa+4>>2];oa=+g[Fa+20>>2];ua=+g[Fa+36>>2];xa=+g[Fa+8>>2];Da=+g[Fa+24>>2];Ea=+g[Fa+40>>2];y=+N(+(ca*za+aa*ta+ba*va));A=+N(+(ca*ya+aa*oa+ba*ua));R=+N(+(ca*xa+aa*Da+ba*Ea));z=+N(+(za*$+ta*X+va*Z));B=+N(+(ya*$+oa*X+ua*Z));S=+N(+(xa*$+Da*X+Ea*Z));T=+N(+(za*fa+ta*ha+va*na));U=+N(+(ya*fa+oa*ha+ua*na));C=+N(+(xa*fa+Da*ha+Ea*na));h=+N(+(D*ca+M*aa+P*ba))-(wa*.5*R+((ia+ka)*2.0*.5+y*(qa+sa)*2.0*.5+A*(ra+pa)*2.0*.5));if(h>0.0){i=Fa;return}if(h>-3402823466385288598117041.0e14){n=1;l=D*ca+M*aa+P*ba<0.0&1;e=Fa+48|0}else{n=0;l=0;e=0;h=-3402823466385288598117041.0e14}j=+N(+(D*$+M*X+P*Z))-((ja+la)*2.0*.5+z*(qa+sa)*2.0*.5+B*(ra+pa)*2.0*.5+S*wa*.5);if(j>0.0){i=Fa;return}if(j>h){n=2;l=D*$+M*X+P*Z<0.0&1;e=E;h=j}j=+N(+(D*fa+M*ha+P*na))-(ma*.5+T*(qa+sa)*2.0*.5+U*(ra+pa)*2.0*.5+C*wa*.5);if(j>0.0){i=Fa;return}if(j>h){n=3;l=D*fa+M*ha+P*na<0.0&1;e=Fa+48+8|0;h=j}j=+N(+(D*za+M*ta+P*va))-((qa+sa)*2.0*.5+(y*(ia+ka)*2.0*.5+z*(ja+la)*2.0*.5+T*ma*.5));if(j>0.0){i=Fa;return}if(j>h){n=4;l=D*za+M*ta+P*va<0.0&1;e=Fa;h=j}j=+N(+(D*ya+M*oa+P*ua))-((ra+pa)*2.0*.5+(A*(ia+ka)*2.0*.5+B*(ja+la)*2.0*.5+U*ma*.5));if(j>0.0){i=Fa;return}if(j>h){n=5;l=D*ya+M*oa+P*ua<0.0&1;e=Fa+4|0}else j=h;h=+N(+(D*xa+M*Da+P*Ea))-(wa*.5+(R*(ia+ka)*2.0*.5+S*(ja+la)*2.0*.5+C*ma*.5));if(h>0.0){i=Fa;return}if(h>j){n=6;l=D*xa+M*Da+P*Ea<0.0&1;u=Fa+8|0}else{u=e;h=j}j=(D*fa+M*ha+P*na)*(za*$+ta*X+va*Z)-(D*$+M*X+P*Z)*(za*fa+ta*ha+va*na);m=+N(+j)-((T+9.999999747378752e-06)*(ja+la)*2.0*.5+(z+9.999999747378752e-06)*ma*.5+(R+9.999999747378752e-06)*(ra+pa)*2.0*.5+(A+9.999999747378752e-06)*wa*.5);if(m>1.1920928955078125e-07){i=Fa;return}p=(za*fa+ta*ha+va*na)*(za*fa+ta*ha+va*na)+0.0;v=(za*$+ta*X+va*Z)*(za*$+ta*X+va*Z);o=+O(+(v+p));if(o>1.1920928955078125e-07?m/o*1.0499999523162842>h:0){a=(g[k>>2]=0.0/o,c[k>>2]|0);f=(g[k>>2]=-(za*fa+ta*ha+va*na)/o,c[k>>2]|0);n=7;l=j<0.0&1;e=(g[k>>2]=(za*$+ta*X+va*Z)/o,c[k>>2]|0);u=0;h=m/o}else{a=0;f=0;e=0}j=(D*fa+M*ha+P*na)*(ya*$+oa*X+ua*Z)-(D*$+M*X+P*Z)*(ya*fa+oa*ha+ua*na);m=+N(+j)-((U+9.999999747378752e-06)*(ja+la)*2.0*.5+(B+9.999999747378752e-06)*ma*.5+(R+9.999999747378752e-06)*(qa+sa)*2.0*.5+(y+9.999999747378752e-06)*wa*.5);if(m>1.1920928955078125e-07){i=Fa;return}q=(ya*fa+oa*ha+ua*na)*(ya*fa+oa*ha+ua*na)+0.0;w=(ya*$+oa*X+ua*Z)*(ya*$+oa*X+ua*Z);o=+O(+(w+q));if(o>1.1920928955078125e-07?m/o*1.0499999523162842>h:0){a=(g[k>>2]=0.0/o,c[k>>2]|0);f=(g[k>>2]=-(ya*fa+oa*ha+ua*na)/o,c[k>>2]|0);n=8;l=j<0.0&1;e=(g[k>>2]=(ya*$+oa*X+ua*Z)/o,c[k>>2]|0);u=0;h=m/o}j=(D*fa+M*ha+P*na)*(xa*$+Da*X+Ea*Z)-(D*$+M*X+P*Z)*(xa*fa+Da*ha+Ea*na);m=+N(+j)-((C+9.999999747378752e-06)*(ja+la)*2.0*.5+(S+9.999999747378752e-06)*ma*.5+(A+9.999999747378752e-06)*(qa+sa)*2.0*.5+(y+9.999999747378752e-06)*(ra+pa)*2.0*.5);if(m>1.1920928955078125e-07){i=Fa;return}s=(xa*fa+Da*ha+Ea*na)*(xa*fa+Da*ha+Ea*na)+0.0;x=(xa*$+Da*X+Ea*Z)*(xa*$+Da*X+Ea*Z);o=+O(+(x+s));if(o>1.1920928955078125e-07?m/o*1.0499999523162842>h:0){a=(g[k>>2]=0.0/o,c[k>>2]|0);f=(g[k>>2]=-(xa*fa+Da*ha+Ea*na)/o,c[k>>2]|0);n=9;l=j<0.0&1;e=(g[k>>2]=(xa*$+Da*X+Ea*Z)/o,c[k>>2]|0);u=0;h=m/o}j=(D*ca+M*aa+P*ba)*(za*fa+ta*ha+va*na)-(D*fa+M*ha+P*na)*(ca*za+aa*ta+ba*va);o=+N(+j)-((T+9.999999747378752e-06)*(ia+ka)*2.0*.5+(y+9.999999747378752e-06)*ma*.5+(S+9.999999747378752e-06)*(ra+pa)*2.0*.5+(B+9.999999747378752e-06)*wa*.5);if(o>1.1920928955078125e-07){i=Fa;return}t=(ca*za+aa*ta+ba*va)*(ca*za+aa*ta+ba*va);m=+O(+(t+p));do if(m>1.1920928955078125e-07){if(!(o/m*1.0499999523162842>h))break;a=(g[k>>2]=(za*fa+ta*ha+va*na)/m,c[k>>2]|0);f=(g[k>>2]=0.0/m,c[k>>2]|0);n=10;l=j<0.0&1;e=(g[k>>2]=-(ca*za+aa*ta+ba*va)/m,c[k>>2]|0);u=0;h=o/m}while(0);j=(D*ca+M*aa+P*ba)*(ya*fa+oa*ha+ua*na)-(D*fa+M*ha+P*na)*(ca*ya+aa*oa+ba*ua);o=+N(+j)-((U+9.999999747378752e-06)*(ia+ka)*2.0*.5+(A+9.999999747378752e-06)*ma*.5+(S+9.999999747378752e-06)*(qa+sa)*2.0*.5+(z+9.999999747378752e-06)*wa*.5);if(o>1.1920928955078125e-07){i=Fa;return}r=(ca*ya+aa*oa+ba*ua)*(ca*ya+aa*oa+ba*ua);m=+O(+(r+q));do if(m>1.1920928955078125e-07){if(!(o/m*1.0499999523162842>h))break;a=(g[k>>2]=(ya*fa+oa*ha+ua*na)/m,c[k>>2]|0);f=(g[k>>2]=0.0/m,c[k>>2]|0);n=11;l=j<0.0&1;e=(g[k>>2]=-(ca*ya+aa*oa+ba*ua)/m,c[k>>2]|0);u=0;h=o/m}while(0);j=(D*ca+M*aa+P*ba)*(xa*fa+Da*ha+Ea*na)-(D*fa+M*ha+P*na)*(ca*xa+aa*Da+ba*Ea);o=+N(+j)-((C+9.999999747378752e-06)*(ia+ka)*2.0*.5+(R+9.999999747378752e-06)*ma*.5+(B+9.999999747378752e-06)*(qa+sa)*2.0*.5+(z+9.999999747378752e-06)*(ra+pa)*2.0*.5);if(o>1.1920928955078125e-07){i=Fa;return}p=(ca*xa+aa*Da+ba*Ea)*(ca*xa+aa*Da+ba*Ea);m=+O(+(p+s));do if(m>1.1920928955078125e-07){if(!(o/m*1.0499999523162842>h))break;a=(g[k>>2]=(xa*fa+Da*ha+Ea*na)/m,c[k>>2]|0);f=(g[k>>2]=0.0/m,c[k>>2]|0);n=12;l=j<0.0&1;e=(g[k>>2]=-(ca*xa+aa*Da+ba*Ea)/m,c[k>>2]|0);u=0;h=o/m}while(0);j=(D*$+M*X+P*Z)*(ca*za+aa*ta+ba*va)-(D*ca+M*aa+P*ba)*(za*$+ta*X+va*Z);o=+N(+j)-((z+9.999999747378752e-06)*(ia+ka)*2.0*.5+(y+9.999999747378752e-06)*(ja+la)*2.0*.5+(C+9.999999747378752e-06)*(ra+pa)*2.0*.5+(U+9.999999747378752e-06)*wa*.5);if(o>1.1920928955078125e-07){i=Fa;return}m=+O(+(t+v+0.0));do if(m>1.1920928955078125e-07){if(!(o/m*1.0499999523162842>h))break;a=(g[k>>2]=-(za*$+ta*X+va*Z)/m,c[k>>2]|0);f=(g[k>>2]=(ca*za+aa*ta+ba*va)/m,c[k>>2]|0);n=13;l=j<0.0&1;e=(g[k>>2]=0.0/m,c[k>>2]|0);u=0;h=o/m}while(0);j=(D*$+M*X+P*Z)*(ca*ya+aa*oa+ba*ua)-(D*ca+M*aa+P*ba)*(ya*$+oa*X+ua*Z);o=+N(+j)-((B+9.999999747378752e-06)*(ia+ka)*2.0*.5+(A+9.999999747378752e-06)*(ja+la)*2.0*.5+(C+9.999999747378752e-06)*(qa+sa)*2.0*.5+(T+9.999999747378752e-06)*wa*.5);if(o>1.1920928955078125e-07){i=Fa;return}m=+O(+(r+w+0.0));do if(m>1.1920928955078125e-07){if(!(o/m*1.0499999523162842>h))break;a=(g[k>>2]=-(ya*$+oa*X+ua*Z)/m,c[k>>2]|0);f=(g[k>>2]=(ca*ya+aa*oa+ba*ua)/m,c[k>>2]|0);n=14;l=j<0.0&1;e=(g[k>>2]=0.0/m,c[k>>2]|0);u=0;h=o/m}while(0);m=(D*$+M*X+P*Z)*(ca*xa+aa*Da+ba*Ea)-(D*ca+M*aa+P*ba)*(xa*$+Da*X+Ea*Z);o=+N(+m)-((S+9.999999747378752e-06)*(ia+ka)*2.0*.5+(R+9.999999747378752e-06)*(ja+la)*2.0*.5+(U+9.999999747378752e-06)*(qa+sa)*2.0*.5+(T+9.999999747378752e-06)*(ra+pa)*2.0*.5);if(o>1.1920928955078125e-07){i=Fa;return}j=+O(+(p+x+0.0));do if(j>1.1920928955078125e-07){if(!(o/j*1.0499999523162842>h)){Aa=55;break}a=(g[k>>2]=-(xa*$+Da*X+Ea*Z)/j,c[k>>2]|0);f=(g[k>>2]=(ca*xa+aa*Da+ba*Ea)/j,c[k>>2]|0);n=15;l=m<0.0&1;e=(g[k>>2]=0.0/j,c[k>>2]|0);h=o/j;Aa=58}else Aa=55;while(0);do if((Aa|0)==55){if(!n){i=Fa;return}if(!u){Aa=58;break}e=c[u>>2]|0;a=c[u+16>>2]|0;Ca=c[u+32>>2]|0;j=(c[k>>2]=e,+g[k>>2]);m=(c[k>>2]=a,+g[k>>2]);o=(c[k>>2]=Ca,+g[k>>2]);f=l;l=Ca;D=h}while(0);if((Aa|0)==58){ca=(c[k>>2]=a,+g[k>>2]);o=(c[k>>2]=f,+g[k>>2]);D=(c[k>>2]=e,+g[k>>2]);j=ca*+g[Fa+48>>2]+o*+g[E>>2]+D*fa;e=(g[k>>2]=j,c[k>>2]|0);m=ca*+g[Fa+48+16>>2]+o*+g[Fa+48+20>>2]+D*ha;a=(g[k>>2]=m,c[k>>2]|0);D=ca*+g[Fa+48+32>>2]+o*+g[Fa+48+36>>2]+D*na;o=D;f=l;l=(g[k>>2]=D,c[k>>2]|0);D=h}if(!f){Ba=a;Ca=l}else{e=(g[k>>2]=-j,c[k>>2]|0);Ba=(g[k>>2]=-m,c[k>>2]|0);Ca=(g[k>>2]=-o,c[k>>2]|0)}if((n|0)>6){C=(c[k>>2]=e,+g[k>>2]);B=(c[k>>2]=Ba,+g[k>>2]);A=(c[k>>2]=Ca,+g[k>>2]);j=+g[Fa+48>>2];t=+g[Fa+48+16>>2];w=+g[Fa+48+32>>2];v=(C*j+B*t+A*w>0.0?1.0:-1.0)*(ia+ka)*2.0*.5;z=+g[E>>2];y=+g[Fa+48+20>>2];h=+g[Fa+48+36>>2];s=(C*z+B*y+A*h>0.0?1.0:-1.0)*(ja+la)*2.0*.5;x=(C*fa+B*ha+A*na>0.0?1.0:-1.0)*ma*.5;z=+g[b+48>>2]+v*j+s*z+x*fa;y=+g[b+52>>2]+v*t+s*y+x*ha;x=+g[b+56>>2]+v*w+s*h+x*na;c[Fa+528>>2]=c[b+112>>2];c[Fa+528+4>>2]=c[b+112+4>>2];c[Fa+528+8>>2]=c[b+112+8>>2];h=(C*za+B*ta+A*va>0.0?-1.0:1.0)*(qa+sa)*2.0*.5;s=(C*ya+B*oa+A*ua>0.0?-1.0:1.0)*(ra+pa)*2.0*.5;w=+g[Fa+528+4>>2]+h*ta+s*oa;v=+g[Fa+528+8>>2]+h*va+s*ua;t=(C*xa+B*Da+A*Ea>0.0?-1.0:1.0)*wa*.5;s=+g[Fa+528>>2]+h*za+s*ya+t*xa;g[Fa+528>>2]=s;g[Fa+528+4>>2]=w+t*Da;g[Fa+528+8>>2]=v+t*Ea;Ca=n+-7|0;h=+g[Fa+48+(((Ca|0)/3|0)<<2)>>2];j=+g[Fa+48+(((Ca|0)/3|0)+4<<2)>>2];m=+g[Fa+48+(((Ca|0)/3|0)+8<<2)>>2];p=+g[Fa+(((Ca|0)%3|0)<<2)>>2];q=+g[Fa+(((Ca|0)%3|0)+4<<2)>>2];r=+g[Fa+(((Ca|0)%3|0)+8<<2)>>2];o=1.0-(h*p+j*q+m*r)*(h*p+j*q+m*r);if(!(o<=9.999999747378752e-05))h=(((s-z)*h+(w+t*Da-y)*j+(v+t*Ea-x)*m)*(h*p+j*q+m*r)-((s-z)*p+(w+t*Da-y)*q+(v+t*Ea-x)*r))*(1.0/o);else h=0.0;g[Fa+528>>2]=s+h*p;g[Fa+528+4>>2]=w+t*Da+h*q;g[Fa+528+8>>2]=v+t*Ea+h*r;Ca=c[(c[d>>2]|0)+16>>2]|0;g[Fa+456>>2]=-C;g[Fa+456+4>>2]=-B;g[Fa+456+8>>2]=-A;g[Fa+456+12>>2]=0.0;hc[Ca&15](d,Fa+456|0,Fa+528|0,D);i=Fa;return}da=(n|0)<4;fa=(c[k>>2]=e,+g[k>>2]);if(da){l=Fa+48|0;_=Fa;Q=Fa+484|0;u=Fa+472|0;ca=fa;f=Ca;e=Ba;ga=b+48|0;a=b+112|0}else{e=(g[k>>2]=-(c[k>>2]=Ba,+g[k>>2]),c[k>>2]|0);l=Fa;_=Fa+48|0;Q=Fa+472|0;u=Fa+484|0;ca=-fa;f=(g[k>>2]=-(c[k>>2]=Ca,+g[k>>2]),c[k>>2]|0);ga=b+112|0;a=b+48|0}ba=(c[k>>2]=e,+g[k>>2]);aa=(c[k>>2]=f,+g[k>>2]);h=ca*+g[_>>2]+ba*+g[_+16>>2]+aa*+g[_+32>>2];g[Fa+440>>2]=h;j=ca*+g[_+4>>2]+ba*+g[_+20>>2]+aa*+g[_+36>>2];g[Fa+440+4>>2]=j;p=ca*+g[_+8>>2]+ba*+g[_+24>>2]+aa*+g[_+40>>2];g[Fa+440+8>>2]=p;h=+N(+h);j=+N(+j);p=+N(+p);e=j>h?(j>p?1:2):h>p?0:2;V=j>h?0:h>p&1;Y=(j>h?j>p:h>p)?2:1;p=+g[u+(e<<2)>>2];h=+g[a>>2]-+g[ga>>2];j=p*+g[_+(e<<2)>>2];m=+g[a+4>>2];ea=ga+4|0;o=+g[ea>>2];if(+g[Fa+440+(e<<2)>>2]<0.0){$=h+j;Z=m-o+p*+g[_+((e|4)<<2)>>2];X=+g[a+8>>2]-+g[ga+8>>2]+p*+g[_+((e|8)<<2)>>2]}else{$=h-j;Z=m-o-p*+g[_+((e|4)<<2)>>2];X=+g[a+8>>2]-+g[ga+8>>2]-p*+g[_+((e|8)<<2)>>2]}K=(da?-1:-4)+n|0;switch(K|0){case 0:{e=1;f=2;break}case 1:{e=0;f=2;break}default:{e=0;f=1}}J=l+(e<<2)|0;T=+g[J>>2];R=+g[J+16>>2];S=+g[J+32>>2];U=$*T+Z*R+X*S;J=l+(f<<2)|0;M=+g[J>>2];A=+g[J+16>>2];B=+g[J+32>>2];P=$*M+Z*A+X*B;J=_+(V<<2)|0;D=+g[J>>2];y=+g[J+16>>2];z=+g[J+32>>2];L=_+(Y<<2)|0;C=+g[L>>2];w=+g[L+16>>2];x=+g[L+32>>2];Da=+g[u+(V<<2)>>2];Ea=+g[u+(Y<<2)>>2];za=(T*C+R*w+S*x)*Ea;Ea=(M*C+A*w+B*x)*Ea;g[Fa+408>>2]=U-(T*D+R*y+S*z)*Da-za;g[Fa+408+4>>2]=P-(M*D+A*y+B*z)*Da-Ea;g[Fa+408+8>>2]=U-(T*D+R*y+S*z)*Da+za;g[Fa+408+12>>2]=P-(M*D+A*y+B*z)*Da+Ea;g[Fa+408+16>>2]=U+(T*D+R*y+S*z)*Da+za;g[Fa+408+20>>2]=P+(M*D+A*y+B*z)*Da+Ea;g[Fa+408+24>>2]=U+(T*D+R*y+S*z)*Da-za;g[Fa+408+28>>2]=P+(M*D+A*y+B*z)*Da-Ea;c[Fa+400>>2]=c[Q+(e<<2)>>2];c[Fa+400+4>>2]=c[Q+(f<<2)>>2];I=0;f=4;b=Fa+408|0;H=Fa+336|0;a:while(1){F=Fa+400+(I<<2)|0;G=1-I|0;do if((f|0)>0){a=0;E=b;e=H;while(1){l=E+(I<<2)|0;h=+g[l>>2];j=+g[F>>2];if(j>-h){c[e>>2]=c[E>>2];c[e+4>>2]=c[E+4>>2];a=a+1|0;if(a&8|0){f=a;e=H;break a}h=+g[l>>2];j=+g[F>>2];n=e+8|0}else n=e;u=(f|0)>1;l=E;E=E+8|0;e=u?E:b;m=+g[e+(I<<2)>>2];if(j>-h^j>-m){Ea=+g[l+(G<<2)>>2];g[n+(G<<2)>>2]=Ea+(-j-h)*((+g[e+(G<<2)>>2]-Ea)/(m-h));g[n+(I<<2)>>2]=-+g[F>>2];e=a+1|0;if(!(e&8)){a=e;e=n+8|0}else{f=e;e=H;break a}}else e=n;if(!u)break;else f=f+-1|0}e=(H|0)==(Fa+336|0)?Fa+528|0:Fa+336|0;if((a|0)<=0){f=0;break}E=a;f=0;b=H;a=e;while(1){l=b+(I<<2)|0;j=+g[l>>2];h=+g[F>>2];if(j<h){c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];f=f+1|0;if(f&8|0)break a;h=+g[F>>2];j=+g[l>>2];a=a+8|0}u=(E|0)>1;n=b;b=b+8|0;l=u?b:H;m=+g[l+(I<<2)>>2];if(j<h^m<h){Ea=+g[n+(G<<2)>>2];g[a+(G<<2)>>2]=Ea+(h-j)*((+g[l+(G<<2)>>2]-Ea)/(m-j));c[a+(I<<2)>>2]=c[F>>2];f=f+1|0;if(!(f&8))a=a+8|0;else break a}if(!u)break;else E=E+-1|0}}else{e=(H|0)==(Fa+336|0)?Fa+528|0:Fa+336|0;f=0}while(0);I=I+1|0;if((I|0)>=2)break;else{b=e;H=(e|0)==(Fa+336|0)?Fa+528|0:Fa+336|0}}if((e|0)!=(Fa+336|0))bn(Fa+336|0,e|0,f<<3|0)|0;if((f|0)>=1){v=1.0/((T*D+R*y+S*z)*(M*C+A*w+B*x)-(M*D+A*y+B*z)*(T*C+R*w+S*x));t=+g[Q+(K<<2)>>2];s=+g[J>>2];p=+g[L>>2];q=+g[_+((V|4)<<2)>>2];r=+g[_+((Y|4)<<2)>>2];o=+g[_+((V|8)<<2)>>2];m=+g[_+((Y|8)<<2)>>2];a=0;e=0;do{_=e<<1;h=+g[Fa+336+(_<<2)>>2];j=+g[Fa+336+((_|1)<<2)>>2];ya=(M*C+A*w+B*x)*v*(h-U)-(T*C+R*w+S*x)*v*(j-P);Ea=(T*D+R*y+S*z)*v*(j-P)-(M*D+A*y+B*z)*v*(h-U);_=a*3|0;za=$+ya*s+Ea*p;g[Fa+240+(_<<2)>>2]=za;Da=Z+ya*q+Ea*r;g[Fa+240+(_+1<<2)>>2]=Da;Ea=X+ya*o+Ea*m;g[Fa+240+(_+2<<2)>>2]=Ea;Ea=t-(ca*za+ba*Da+aa*Ea);g[Fa+208+(a<<2)>>2]=Ea;if(Ea>=0.0){_=a<<1;g[Fa+336+(_<<2)>>2]=h;g[Fa+336+((_|1)<<2)>>2]=j;a=a+1|0}e=e+1|0}while((e|0)!=(f|0));b:do if((a|0)>=1){E=(a|0)<4?a:4;E=(E|0)<1?1:E;if((a|0)<=(E|0))if(da){f=ga+8|0;j=-(c[k>>2]=Ba,+g[k>>2]);h=-(c[k>>2]=Ca,+g[k>>2]);e=0;while(1){Ca=e*3|0;g[Fa+528>>2]=+g[Fa+240+(Ca<<2)>>2]+ +g[ga>>2];g[Fa+528+4>>2]=+g[Fa+240+(Ca+1<<2)>>2]+ +g[ea>>2];g[Fa+528+8>>2]=+g[Fa+240+(Ca+2<<2)>>2]+ +g[f>>2];Ca=c[(c[d>>2]|0)+16>>2]|0;g[Fa+192>>2]=-fa;g[Fa+192+4>>2]=j;g[Fa+192+8>>2]=h;g[Fa+192+12>>2]=0.0;hc[Ca&15](d,Fa+192|0,Fa+528|0,-+g[Fa+208+(e<<2)>>2]);e=e+1|0;if((e|0)==(a|0))break b}}else{f=ga+8|0;j=(c[k>>2]=Ba,+g[k>>2]);h=(c[k>>2]=Ca,+g[k>>2]);e=0;while(1){Ca=e*3|0;Ea=+g[Fa+208+(e<<2)>>2];g[Fa+528>>2]=+g[Fa+240+(Ca<<2)>>2]+ +g[ga>>2]-fa*Ea;g[Fa+528+4>>2]=+g[Fa+240+(Ca+1<<2)>>2]+ +g[ea>>2]-j*Ea;g[Fa+528+8>>2]=+g[Fa+240+(Ca+2<<2)>>2]+ +g[f>>2]-h*Ea;Ca=c[(c[d>>2]|0)+16>>2]|0;g[Fa+176>>2]=-fa;g[Fa+176+4>>2]=-j;g[Fa+176+8>>2]=-h;g[Fa+176+12>>2]=0.0;hc[Ca&15](d,Fa+176|0,Fa+528|0,-Ea);e=e+1|0;if((e|0)==(a|0))break b}}c:do if((a|0)>1){f=1;l=0;j=+g[Fa+208>>2];while(1){h=+g[Fa+208+(f<<2)>>2];e=h>j;l=e?f:l;f=f+1|0;if((f|0)==(a|0))break;else j=e?h:j}switch(a|0){case 1:{e=Fa+144|0;f=Fa+144|0;a=1;Aa=111;break c}case 2:{e=Fa+144|0;f=Fa+144|0;a=2;j=(+g[Fa+336>>2]+ +g[Fa+336+8>>2])*.5;h=(+g[Fa+336+4>>2]+ +g[Fa+336+12>>2])*.5;Aa=116;break c}default:{}}e=a+-1|0;h=0.0;j=0.0;r=0.0;f=0;do{_=f<<1;ya=+g[Fa+336+(_<<2)>>2];za=+g[Fa+336+(_+3<<2)>>2];Da=+g[Fa+336+(_+2<<2)>>2];Ea=+g[Fa+336+((_|1)<<2)>>2];h=h+(ya*za-Da*Ea);j=j+(ya+Da)*(ya*za-Da*Ea);r=r+(za+Ea)*(ya*za-Da*Ea);f=f+1|0}while((f|0)!=(e|0));_=a<<1;m=+g[Fa+336+(_+-2<<2)>>2];o=+g[Fa+336+4>>2];p=+g[Fa+336>>2];q=+g[Fa+336+(_+-1<<2)>>2];h=h+(m*o-p*q);if(+N(+h)>1.1920928955078125e-07)h=1.0/(h*3.0);else h=999999984306749440.0;if((a|0)>0){u=Fa+144|0;f=Fa+144|0;n=Fa+528|0;j=h*(j+(m*o-p*q)*(m+p));h=h*(r+(m*o-p*q)*(q+o));Aa=119;break}e=Fa+144|0;f=0;u=a}else{e=Fa+144|0;f=Fa+144|0;l=0;Aa=111}while(0);if((Aa|0)==111){j=+g[Fa+336>>2];h=+g[Fa+336+4>>2];Aa=116}if((Aa|0)==116){u=e;n=Fa+528|0;Aa=119}if((Aa|0)==119){e=0;do{Aa=e<<1;g[Fa+528+(e<<2)>>2]=+W(+(+g[Fa+336+((Aa|1)<<2)>>2]-h),+(+g[Fa+336+(Aa<<2)>>2]-j));e=e+1|0}while((e|0)!=(a|0));e=0;do{c[Fa+496+(e<<2)>>2]=1;e=e+1|0}while((e|0)!=(a|0));e=u;f=1;u=a}a=Fa+496+(l<<2)|0;c[a>>2]=0;c[e>>2]=l;d:do if((E|0)>1){o=+g[Fa+528+(l<<2)>>2];if(f){f=Fa+144+4|0;n=1}else{e=Fa+144+4|0;f=1;while(1){c[e>>2]=l;c[a>>2]=0;f=f+1|0;if((f|0)==(E|0))break d;else e=e+4|0}}while(1){m=6.2831854820251465/+(E|0)*+(n|0)+o;m=m>3.1415927410125732?m+-6.2831854820251465:m;c[f>>2]=l;e=l;a=0;j=1.0e9;while(1){do if(!(c[Fa+496+(a<<2)>>2]|0))h=j;else{h=+N(+(+g[Fa+528+(a<<2)>>2]-m));h=h>3.1415927410125732?6.2831854820251465-h:h;if(!(h<j)){h=j;break}c[f>>2]=a;e=a}while(0);a=a+1|0;if((a|0)==(u|0))break;else j=h}c[Fa+496+(e<<2)>>2]=0;n=n+1|0;if((n|0)==(E|0))break;else f=f+4|0}}while(0);if((E|0)>0){f=ga+8|0;j=(c[k>>2]=Ba,+g[k>>2]);h=(c[k>>2]=Ca,+g[k>>2]);if(da){e=0;do{Ca=c[Fa+144+(e<<2)>>2]|0;g[Fa+528>>2]=+g[Fa+240+(Ca*3<<2)>>2]+ +g[ga>>2];g[Fa+528+4>>2]=+g[Fa+240+((Ca*3|0)+1<<2)>>2]+ +g[ea>>2];g[Fa+528+8>>2]=+g[Fa+240+((Ca*3|0)+2<<2)>>2]+ +g[f>>2];Ba=c[(c[d>>2]|0)+16>>2]|0;g[Fa+128>>2]=-fa;g[Fa+128+4>>2]=-j;g[Fa+128+8>>2]=-h;g[Fa+128+12>>2]=0.0;hc[Ba&15](d,Fa+128|0,Fa+528|0,-+g[Fa+208+(Ca<<2)>>2]);e=e+1|0}while((e|0)<(E|0))}else{e=0;do{Ba=c[Fa+144+(e<<2)>>2]|0;ya=+g[Fa+240+(Ba*3<<2)>>2]+ +g[ga>>2];g[Fa+528>>2]=ya;za=+g[Fa+240+((Ba*3|0)+1<<2)>>2]+ +g[ea>>2];g[Fa+528+4>>2]=za;Da=+g[Fa+240+((Ba*3|0)+2<<2)>>2]+ +g[f>>2];g[Fa+528+8>>2]=Da;Ca=c[(c[d>>2]|0)+16>>2]|0;g[Fa+112>>2]=-fa;g[Fa+112+4>>2]=-j;g[Fa+112+8>>2]=-h;g[Fa+112+12>>2]=0.0;Ea=+g[Fa+208+(Ba<<2)>>2];g[Fa+96>>2]=ya-fa*Ea;g[Fa+96+4>>2]=za-Ea*j;g[Fa+96+8>>2]=Da-Ea*h;g[Fa+96+12>>2]=0.0;hc[Ca&15](d,Fa+112|0,Fa+96|0,-Ea);e=e+1|0}while((e|0)<(E|0))}}}while(0)}i=Fa;return}function yc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;do if(a>>>0<245){n=a>>>0<11?16:a+11&-8;g=c[6438]|0;if(g>>>(n>>>3)&3|0){a=25792+((g>>>(n>>>3)&1^1)+(n>>>3)<<1<<2)|0;b=c[a+8>>2]|0;d=c[b+8>>2]|0;do if((a|0)!=(d|0)){if(d>>>0<(c[6442]|0)>>>0)Va();if((c[d+12>>2]|0)==(b|0)){c[d+12>>2]=a;c[a+8>>2]=d;break}else Va()}else c[6438]=g&~(1<<(g>>>(n>>>3)&1^1)+(n>>>3));while(0);D=(g>>>(n>>>3)&1^1)+(n>>>3)<<3;c[b+4>>2]=D|3;c[b+D+4>>2]=c[b+D+4>>2]|1;D=b+8|0;return D|0}b=c[6440]|0;if(n>>>0>b>>>0){if(g>>>(n>>>3)|0){a=g>>>(n>>>3)<<(n>>>3)&(2<<(n>>>3)|0-(2<<(n>>>3)));f=((a&0-a)+-1|0)>>>(((a&0-a)+-1|0)>>>12&16);e=f>>>(f>>>5&8)>>>(f>>>(f>>>5&8)>>>2&4);e=(f>>>5&8|((a&0-a)+-1|0)>>>12&16|f>>>(f>>>5&8)>>>2&4|e>>>1&2|e>>>(e>>>1&2)>>>1&1)+(e>>>(e>>>1&2)>>>(e>>>(e>>>1&2)>>>1&1))|0;f=c[25792+(e<<1<<2)+8>>2]|0;a=c[f+8>>2]|0;do if((25792+(e<<1<<2)|0)!=(a|0)){if(a>>>0<(c[6442]|0)>>>0)Va();if((c[a+12>>2]|0)==(f|0)){c[a+12>>2]=25792+(e<<1<<2);c[25792+(e<<1<<2)+8>>2]=a;h=c[6440]|0;break}else Va()}else{c[6438]=g&~(1<<e);h=b}while(0);c[f+4>>2]=n|3;c[f+n+4>>2]=(e<<3)-n|1;c[f+n+((e<<3)-n)>>2]=(e<<3)-n;if(h|0){d=c[6443]|0;b=h>>>3;a=c[6438]|0;if(a&1<<b){a=c[25792+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[6442]|0)>>>0)Va();else{i=25792+(b<<1<<2)+8|0;j=a}}else{c[6438]=a|1<<b;i=25792+(b<<1<<2)+8|0;j=25792+(b<<1<<2)|0}c[i>>2]=d;c[j+12>>2]=d;c[d+8>>2]=j;c[d+12>>2]=25792+(b<<1<<2)}c[6440]=(e<<3)-n;c[6443]=f+n;D=f+8|0;return D|0}a=c[6439]|0;if(a){i=((a&0-a)+-1|0)>>>(((a&0-a)+-1|0)>>>12&16);j=i>>>(i>>>5&8)>>>(i>>>(i>>>5&8)>>>2&4);j=c[26056+((i>>>5&8|((a&0-a)+-1|0)>>>12&16|i>>>(i>>>5&8)>>>2&4|j>>>1&2|j>>>(j>>>1&2)>>>1&1)+(j>>>(j>>>1&2)>>>(j>>>(j>>>1&2)>>>1&1))<<2)>>2]|0;i=(c[j+4>>2]&-8)-n|0;b=j;while(1){a=c[b+16>>2]|0;if(!a){a=c[b+20>>2]|0;if(!a)break}b=(c[a+4>>2]&-8)-n|0;D=b>>>0<i>>>0;i=D?b:i;b=a;j=D?a:j}f=c[6442]|0;if(j>>>0<f>>>0)Va();h=j+n|0;if(j>>>0>=h>>>0)Va();g=c[j+24>>2]|0;a=c[j+12>>2]|0;do if((a|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){k=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)Va();else{c[b>>2]=0;k=a;break}}else{b=c[j+8>>2]|0;if(b>>>0<f>>>0)Va();if((c[b+12>>2]|0)!=(j|0))Va();if((c[a+8>>2]|0)==(j|0)){c[b+12>>2]=a;c[a+8>>2]=b;k=a;break}else Va()}while(0);do if(g|0){a=c[j+28>>2]|0;if((j|0)==(c[26056+(a<<2)>>2]|0)){c[26056+(a<<2)>>2]=k;if(!k){c[6439]=c[6439]&~(1<<a);break}}else{if(g>>>0<(c[6442]|0)>>>0)Va();if((c[g+16>>2]|0)==(j|0))c[g+16>>2]=k;else c[g+20>>2]=k;if(!k)break}b=c[6442]|0;if(k>>>0<b>>>0)Va();c[k+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Va();else{c[k+16>>2]=a;c[a+24>>2]=k;break}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[6442]|0)>>>0)Va();else{c[k+20>>2]=a;c[a+24>>2]=k;break}}while(0);if(i>>>0<16){D=i+n|0;c[j+4>>2]=D|3;D=j+D+4|0;c[D>>2]=c[D>>2]|1}else{c[j+4>>2]=n|3;c[h+4>>2]=i|1;c[h+i>>2]=i;b=c[6440]|0;if(b|0){d=c[6443]|0;a=c[6438]|0;if(a&1<<(b>>>3)){a=c[25792+(b>>>3<<1<<2)+8>>2]|0;if(a>>>0<(c[6442]|0)>>>0)Va();else{l=25792+(b>>>3<<1<<2)+8|0;m=a}}else{c[6438]=a|1<<(b>>>3);l=25792+(b>>>3<<1<<2)+8|0;m=25792+(b>>>3<<1<<2)|0}c[l>>2]=d;c[m+12>>2]=d;c[d+8>>2]=m;c[d+12>>2]=25792+(b>>>3<<1<<2)}c[6440]=i;c[6443]=h}D=j+8|0;return D|0}}}else if(a>>>0<=4294967231){n=a+11&-8;i=c[6439]|0;if(i){if((a+11|0)>>>8)if(n>>>0>16777215)h=31;else{h=(a+11|0)>>>8<<((((a+11|0)>>>8)+1048320|0)>>>16&8);h=14-((h+520192|0)>>>16&4|(((a+11|0)>>>8)+1048320|0)>>>16&8|((h<<((h+520192|0)>>>16&4))+245760|0)>>>16&2)+(h<<((h+520192|0)>>>16&4)<<(((h<<((h+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;h=n>>>(h+7|0)&1|h<<1}else h=0;b=c[26056+(h<<2)>>2]|0;a:do if(!b){d=0-n|0;a=0;b=0;w=86}else{d=0-n|0;a=0;f=n<<((h|0)==31?0:25-(h>>>1)|0);g=b;b=0;while(1){e=c[g+4>>2]&-8;if((e-n|0)>>>0<d>>>0)if((e|0)==(n|0)){d=e-n|0;a=g;b=g;w=90;break a}else{d=e-n|0;b=g}e=c[g+20>>2]|0;g=c[g+16+(f>>>31<<2)>>2]|0;a=(e|0)==0|(e|0)==(g|0)?a:e;e=(g|0)==0;if(e){w=86;break}else f=f<<(e&1^1)}}while(0);if((w|0)==86){if((a|0)==0&(b|0)==0){a=2<<h;if(!(i&(a|0-a)))break;l=(i&(a|0-a)&0-(i&(a|0-a)))+-1|0;m=l>>>(l>>>12&16)>>>(l>>>(l>>>12&16)>>>5&8);a=m>>>(m>>>2&4)>>>(m>>>(m>>>2&4)>>>1&2);a=c[26056+((l>>>(l>>>12&16)>>>5&8|l>>>12&16|m>>>2&4|m>>>(m>>>2&4)>>>1&2|a>>>1&1)+(a>>>(a>>>1&1))<<2)>>2]|0}if(!a){i=d;j=b}else w=90}if((w|0)==90)while(1){w=0;m=(c[a+4>>2]&-8)-n|0;e=m>>>0<d>>>0;d=e?m:d;b=e?a:b;e=c[a+16>>2]|0;if(e|0){a=e;w=90;continue}a=c[a+20>>2]|0;if(!a){i=d;j=b;break}else w=90}if((j|0)!=0?i>>>0<((c[6440]|0)-n|0)>>>0:0){f=c[6442]|0;if(j>>>0<f>>>0)Va();h=j+n|0;if(j>>>0>=h>>>0)Va();g=c[j+24>>2]|0;a=c[j+12>>2]|0;do if((a|0)==(j|0)){b=j+20|0;a=c[b>>2]|0;if(!a){b=j+16|0;a=c[b>>2]|0;if(!a){p=0;break}}while(1){d=a+20|0;e=c[d>>2]|0;if(e|0){a=e;b=d;continue}d=a+16|0;e=c[d>>2]|0;if(!e)break;else{a=e;b=d}}if(b>>>0<f>>>0)Va();else{c[b>>2]=0;p=a;break}}else{b=c[j+8>>2]|0;if(b>>>0<f>>>0)Va();if((c[b+12>>2]|0)!=(j|0))Va();if((c[a+8>>2]|0)==(j|0)){c[b+12>>2]=a;c[a+8>>2]=b;p=a;break}else Va()}while(0);do if(g|0){a=c[j+28>>2]|0;if((j|0)==(c[26056+(a<<2)>>2]|0)){c[26056+(a<<2)>>2]=p;if(!p){c[6439]=c[6439]&~(1<<a);break}}else{if(g>>>0<(c[6442]|0)>>>0)Va();if((c[g+16>>2]|0)==(j|0))c[g+16>>2]=p;else c[g+20>>2]=p;if(!p)break}b=c[6442]|0;if(p>>>0<b>>>0)Va();c[p+24>>2]=g;a=c[j+16>>2]|0;do if(a|0)if(a>>>0<b>>>0)Va();else{c[p+16>>2]=a;c[a+24>>2]=p;break}while(0);a=c[j+20>>2]|0;if(a|0)if(a>>>0<(c[6442]|0)>>>0)Va();else{c[p+20>>2]=a;c[a+24>>2]=p;break}}while(0);do if(i>>>0>=16){c[j+4>>2]=n|3;c[h+4>>2]=i|1;c[h+i>>2]=i;b=i>>>3;if(i>>>0<256){a=c[6438]|0;if(a&1<<b){a=c[25792+(b<<1<<2)+8>>2]|0;if(a>>>0<(c[6442]|0)>>>0)Va();else{q=25792+(b<<1<<2)+8|0;r=a}}else{c[6438]=a|1<<b;q=25792+(b<<1<<2)+8|0;r=25792+(b<<1<<2)|0}c[q>>2]=h;c[r+12>>2]=h;c[h+8>>2]=r;c[h+12>>2]=25792+(b<<1<<2);break}a=i>>>8;if(a)if(i>>>0>16777215)d=31;else{d=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);d=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(d+245760|0)>>>16&2)+(d<<((d+245760|0)>>>16&2)>>>15)|0;d=i>>>(d+7|0)&1|d<<1}else d=0;e=26056+(d<<2)|0;c[h+28>>2]=d;c[h+16+4>>2]=0;c[h+16>>2]=0;a=c[6439]|0;b=1<<d;if(!(a&b)){c[6439]=a|b;c[e>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}d=i<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(i|0)){w=148;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){w=145;break}else{d=d<<1;e=a}}if((w|0)==145)if(b>>>0<(c[6442]|0)>>>0)Va();else{c[b>>2]=h;c[h+24>>2]=e;c[h+12>>2]=h;c[h+8>>2]=h;break}else if((w|0)==148){a=e+8|0;b=c[a>>2]|0;D=c[6442]|0;if(b>>>0>=D>>>0&e>>>0>=D>>>0){c[b+12>>2]=h;c[a>>2]=h;c[h+8>>2]=b;c[h+12>>2]=e;c[h+24>>2]=0;break}else Va()}}else{D=i+n|0;c[j+4>>2]=D|3;D=j+D+4|0;c[D>>2]=c[D>>2]|1}while(0);D=j+8|0;return D|0}}}else n=-1;while(0);d=c[6440]|0;if(d>>>0>=n>>>0){a=d-n|0;b=c[6443]|0;if(a>>>0>15){D=b+n|0;c[6443]=D;c[6440]=a;c[D+4>>2]=a|1;c[D+a>>2]=a;c[b+4>>2]=n|3}else{c[6440]=0;c[6443]=0;c[b+4>>2]=d|3;c[b+d+4>>2]=c[b+d+4>>2]|1}D=b+8|0;return D|0}a=c[6441]|0;if(a>>>0>n>>>0){B=a-n|0;c[6441]=B;D=c[6444]|0;C=D+n|0;c[6444]=C;c[C+4>>2]=B|1;c[D+4>>2]=n|3;D=D+8|0;return D|0}do if(!(c[6556]|0)){a=gb(30)|0;if(!(a+-1&a)){c[6558]=a;c[6557]=a;c[6559]=-1;c[6560]=-1;c[6561]=0;c[6549]=0;c[6556]=(sb(0)|0)&-16^1431655768;break}else Va()}while(0);f=n+48|0;d=c[6558]|0;g=n+47|0;h=d+g&0-d;if(h>>>0<=n>>>0){D=0;return D|0}a=c[6548]|0;if(a|0?(r=c[6546]|0,(r+h|0)>>>0<=r>>>0|(r+h|0)>>>0>a>>>0):0){D=0;return D|0}b:do if(!(c[6549]&4)){b=c[6444]|0;c:do if(b){e=26200;while(1){a=c[e>>2]|0;if(a>>>0<=b>>>0?(o=e+4|0,(a+(c[o>>2]|0)|0)>>>0>b>>>0):0)break;a=c[e+8>>2]|0;if(!a){w=173;break c}else e=a}a=d+g-(c[6441]|0)&0-d;if(a>>>0<2147483647){b=ab(a|0)|0;if((b|0)==((c[e>>2]|0)+(c[o>>2]|0)|0)){if((b|0)!=(-1|0)){h=b;g=a;w=193;break b}}else w=183}}else w=173;while(0);do if((w|0)==173?(s=ab(0)|0,(s|0)!=(-1|0)):0){a=c[6557]|0;if(!(a+-1&s))a=h;else a=h-s+(a+-1+s&0-a)|0;b=c[6546]|0;d=b+a|0;if(a>>>0>n>>>0&a>>>0<2147483647){r=c[6548]|0;if(r|0?d>>>0<=b>>>0|d>>>0>r>>>0:0)break;b=ab(a|0)|0;if((b|0)==(s|0)){h=s;g=a;w=193;break b}else w=183}}while(0);d:do if((w|0)==183){d=0-a|0;do if(f>>>0>a>>>0&(a>>>0<2147483647&(b|0)!=(-1|0))?(t=c[6558]|0,t=g-a+t&0-t,t>>>0<2147483647):0)if((ab(t|0)|0)==(-1|0)){ab(d|0)|0;break d}else{a=t+a|0;break}while(0);if((b|0)!=(-1|0)){h=b;g=a;w=193;break b}}while(0);c[6549]=c[6549]|4;w=190}else w=190;while(0);if((((w|0)==190?h>>>0<2147483647:0)?(u=ab(h|0)|0,v=ab(0)|0,u>>>0<v>>>0&((u|0)!=(-1|0)&(v|0)!=(-1|0))):0)?(v-u|0)>>>0>(n+40|0)>>>0:0){h=u;g=v-u|0;w=193}if((w|0)==193){a=(c[6546]|0)+g|0;c[6546]=a;if(a>>>0>(c[6547]|0)>>>0)c[6547]=a;k=c[6444]|0;do if(k){f=26200;while(1){a=c[f>>2]|0;b=f+4|0;d=c[b>>2]|0;if((h|0)==(a+d|0)){w=203;break}e=c[f+8>>2]|0;if(!e)break;else f=e}if(((w|0)==203?(c[f+12>>2]&8|0)==0:0)?k>>>0<h>>>0&k>>>0>=a>>>0:0){c[b>>2]=d+g;C=(k+8&7|0)==0?0:0-(k+8)&7;D=g-C+(c[6441]|0)|0;c[6444]=k+C;c[6441]=D;c[k+C+4>>2]=D|1;c[k+C+D+4>>2]=40;c[6445]=c[6560];break}a=c[6442]|0;if(h>>>0<a>>>0){c[6442]=h;j=h}else j=a;b=h+g|0;a=26200;while(1){if((c[a>>2]|0)==(b|0)){w=211;break}a=c[a+8>>2]|0;if(!a){b=26200;break}}if((w|0)==211)if(!(c[a+12>>2]&8)){c[a>>2]=h;m=a+4|0;c[m>>2]=(c[m>>2]|0)+g;m=h+8|0;m=h+((m&7|0)==0?0:0-m&7)|0;a=b+((b+8&7|0)==0?0:0-(b+8)&7)|0;l=m+n|0;i=a-m-n|0;c[m+4>>2]=n|3;do if((a|0)!=(k|0)){if((a|0)==(c[6443]|0)){D=(c[6440]|0)+i|0;c[6440]=D;c[6443]=l;c[l+4>>2]=D|1;c[l+D>>2]=D;break}h=c[a+4>>2]|0;if((h&3|0)==1){e:do if(h>>>0>=256){g=c[a+24>>2]|0;b=c[a+12>>2]|0;do if((b|0)==(a|0)){b=c[a+16+4>>2]|0;if(!b){b=c[a+16>>2]|0;if(!b){B=0;break}else f=a+16|0}else f=a+16+4|0;while(1){d=b+20|0;e=c[d>>2]|0;if(e|0){b=e;f=d;continue}d=b+16|0;e=c[d>>2]|0;if(!e)break;else{b=e;f=d}}if(f>>>0<j>>>0)Va();else{c[f>>2]=0;B=b;break}}else{d=c[a+8>>2]|0;if(d>>>0<j>>>0)Va();if((c[d+12>>2]|0)!=(a|0))Va();if((c[b+8>>2]|0)==(a|0)){c[d+12>>2]=b;c[b+8>>2]=d;B=b;break}else Va()}while(0);if(!g)break;b=c[a+28>>2]|0;do if((a|0)!=(c[26056+(b<<2)>>2]|0)){if(g>>>0<(c[6442]|0)>>>0)Va();if((c[g+16>>2]|0)==(a|0))c[g+16>>2]=B;else c[g+20>>2]=B;if(!B)break e}else{c[26056+(b<<2)>>2]=B;if(B|0)break;c[6439]=c[6439]&~(1<<b);break e}while(0);d=c[6442]|0;if(B>>>0<d>>>0)Va();c[B+24>>2]=g;b=c[a+16>>2]|0;do if(b|0)if(b>>>0<d>>>0)Va();else{c[B+16>>2]=b;c[b+24>>2]=B;break}while(0);b=c[a+16+4>>2]|0;if(!b)break;if(b>>>0<(c[6442]|0)>>>0)Va();else{c[B+20>>2]=b;c[b+24>>2]=B;break}}else{b=c[a+8>>2]|0;d=c[a+12>>2]|0;do if((b|0)!=(25792+(h>>>3<<1<<2)|0)){if(b>>>0<j>>>0)Va();if((c[b+12>>2]|0)==(a|0))break;Va()}while(0);if((d|0)==(b|0)){c[6438]=c[6438]&~(1<<(h>>>3));break}do if((d|0)==(25792+(h>>>3<<1<<2)|0))z=d+8|0;else{if(d>>>0<j>>>0)Va();if((c[d+8>>2]|0)==(a|0)){z=d+8|0;break}Va()}while(0);c[b+12>>2]=d;c[z>>2]=b}while(0);a=a+(h&-8)|0;f=(h&-8)+i|0}else f=i;b=a+4|0;c[b>>2]=c[b>>2]&-2;c[l+4>>2]=f|1;c[l+f>>2]=f;b=f>>>3;if(f>>>0<256){a=c[6438]|0;do if(!(a&1<<b)){c[6438]=a|1<<b;C=25792+(b<<1<<2)+8|0;D=25792+(b<<1<<2)|0}else{a=c[25792+(b<<1<<2)+8>>2]|0;if(a>>>0>=(c[6442]|0)>>>0){C=25792+(b<<1<<2)+8|0;D=a;break}Va()}while(0);c[C>>2]=l;c[D+12>>2]=l;c[l+8>>2]=D;c[l+12>>2]=25792+(b<<1<<2);break}a=f>>>8;do if(!a)d=0;else{if(f>>>0>16777215){d=31;break}d=a<<((a+1048320|0)>>>16&8)<<(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4);d=14-(((a<<((a+1048320|0)>>>16&8))+520192|0)>>>16&4|(a+1048320|0)>>>16&8|(d+245760|0)>>>16&2)+(d<<((d+245760|0)>>>16&2)>>>15)|0;d=f>>>(d+7|0)&1|d<<1}while(0);e=26056+(d<<2)|0;c[l+28>>2]=d;c[l+16+4>>2]=0;c[l+16>>2]=0;a=c[6439]|0;b=1<<d;if(!(a&b)){c[6439]=a|b;c[e>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}d=f<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f|0)){w=281;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){w=278;break}else{d=d<<1;e=a}}if((w|0)==278)if(b>>>0<(c[6442]|0)>>>0)Va();else{c[b>>2]=l;c[l+24>>2]=e;c[l+12>>2]=l;c[l+8>>2]=l;break}else if((w|0)==281){a=e+8|0;b=c[a>>2]|0;D=c[6442]|0;if(b>>>0>=D>>>0&e>>>0>=D>>>0){c[b+12>>2]=l;c[a>>2]=l;c[l+8>>2]=b;c[l+12>>2]=e;c[l+24>>2]=0;break}else Va()}}else{D=(c[6441]|0)+i|0;c[6441]=D;c[6444]=l;c[l+4>>2]=D|1}while(0);D=m+8|0;return D|0}else b=26200;while(1){a=c[b>>2]|0;if(a>>>0<=k>>>0?(x=a+(c[b+4>>2]|0)|0,x>>>0>k>>>0):0)break;b=c[b+8>>2]|0}f=x+-47+((x+-47+8&7|0)==0?0:0-(x+-47+8)&7)|0;f=f>>>0<(k+16|0)>>>0?k:f;a=h+8|0;a=(a&7|0)==0?0:0-a&7;D=h+a|0;a=g+-40-a|0;c[6444]=D;c[6441]=a;c[D+4>>2]=a|1;c[D+a+4>>2]=40;c[6445]=c[6560];c[f+4>>2]=27;c[f+8>>2]=c[6550];c[f+8+4>>2]=c[6551];c[f+8+8>>2]=c[6552];c[f+8+12>>2]=c[6553];c[6550]=h;c[6551]=g;c[6553]=0;c[6552]=f+8;a=f+24|0;do{a=a+4|0;c[a>>2]=7}while((a+4|0)>>>0<x>>>0);if((f|0)!=(k|0)){c[f+4>>2]=c[f+4>>2]&-2;c[k+4>>2]=f-k|1;c[f>>2]=f-k;if((f-k|0)>>>0<256){b=25792+((f-k|0)>>>3<<1<<2)|0;a=c[6438]|0;if(a&1<<((f-k|0)>>>3)){a=c[b+8>>2]|0;if(a>>>0<(c[6442]|0)>>>0)Va();else{y=b+8|0;A=a}}else{c[6438]=a|1<<((f-k|0)>>>3);y=b+8|0;A=b}c[y>>2]=k;c[A+12>>2]=k;c[k+8>>2]=A;c[k+12>>2]=b;break}if((f-k|0)>>>8)if((f-k|0)>>>0>16777215)d=31;else{d=(f-k|0)>>>8<<((((f-k|0)>>>8)+1048320|0)>>>16&8);d=14-((d+520192|0)>>>16&4|(((f-k|0)>>>8)+1048320|0)>>>16&8|((d<<((d+520192|0)>>>16&4))+245760|0)>>>16&2)+(d<<((d+520192|0)>>>16&4)<<(((d<<((d+520192|0)>>>16&4))+245760|0)>>>16&2)>>>15)|0;d=(f-k|0)>>>(d+7|0)&1|d<<1}else d=0;e=26056+(d<<2)|0;c[k+28>>2]=d;c[k+20>>2]=0;c[k+16>>2]=0;a=c[6439]|0;b=1<<d;if(!(a&b)){c[6439]=a|b;c[e>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}d=f-k<<((d|0)==31?0:25-(d>>>1)|0);e=c[e>>2]|0;while(1){if((c[e+4>>2]&-8|0)==(f-k|0)){w=307;break}b=e+16+(d>>>31<<2)|0;a=c[b>>2]|0;if(!a){w=304;break}else{d=d<<1;e=a}}if((w|0)==304)if(b>>>0<(c[6442]|0)>>>0)Va();else{c[b>>2]=k;c[k+24>>2]=e;c[k+12>>2]=k;c[k+8>>2]=k;break}else if((w|0)==307){a=e+8|0;b=c[a>>2]|0;D=c[6442]|0;if(b>>>0>=D>>>0&e>>>0>=D>>>0){c[b+12>>2]=k;c[a>>2]=k;c[k+8>>2]=b;c[k+12>>2]=e;c[k+24>>2]=0;break}else Va()}}}else{D=c[6442]|0;if((D|0)==0|h>>>0<D>>>0)c[6442]=h;c[6550]=h;c[6551]=g;c[6553]=0;c[6447]=c[6556];c[6446]=-1;a=0;do{D=25792+(a<<1<<2)|0;c[D+12>>2]=D;c[D+8>>2]=D;a=a+1|0}while((a|0)!=32);D=h+8|0;D=(D&7|0)==0?0:0-D&7;C=h+D|0;D=g+-40-D|0;c[6444]=C;c[6441]=D;c[C+4>>2]=D|1;c[C+D+4>>2]=40;c[6445]=c[6560]}while(0);a=c[6441]|0;if(a>>>0>n>>>0){B=a-n|0;c[6441]=B;D=c[6444]|0;C=D+n|0;c[6444]=C;c[C+4>>2]=B|1;c[D+4>>2]=n|3;D=D+8|0;return D|0}}if(true)a=25748;else a=c[(ib()|0)+64>>2]|0;c[a>>2]=12;D=0;return D|0}function zc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0.0,r=0,s=0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0;P=i;i=i+448|0;if(!(a[b+527>>0]|0)){i=P;return}N=c[b+28>>2]|0;x=+g[b+348>>2];w=+g[b+352>>2];D=+g[b+356>>2];y=+g[N+52>>2];z=x*+g[N+4>>2]+w*+g[N+8>>2]+D*+g[N+12>>2]+y;A=+g[N+56>>2];B=x*+g[N+20>>2]+w*+g[N+24>>2]+D*+g[N+28>>2]+A;C=+g[N+60>>2];D=x*+g[N+36>>2]+w*+g[N+40>>2]+D*+g[N+44>>2]+C;N=c[b+32>>2]|0;w=+g[b+412>>2];x=+g[b+416>>2];l=+g[b+420>>2];E=+g[N+52>>2];F=w*+g[N+4>>2]+x*+g[N+8>>2]+l*+g[N+12>>2]+E;G=+g[N+56>>2];H=w*+g[N+20>>2]+x*+g[N+24>>2]+l*+g[N+28>>2]+G;k=+g[N+60>>2];l=w*+g[N+36>>2]+x*+g[N+40>>2]+l*+g[N+44>>2]+k;if(!(a[b+524>>0]|0)){u=+g[d+192>>2]+ +g[d+80>>2];w=+g[d+196>>2]+ +g[d+84>>2];q=+g[d+200>>2]+ +g[d+88>>2];x=+g[e+192>>2]+ +g[e+80>>2];p=+g[e+196>>2]+ +g[e+84>>2];n=+g[e+200>>2]+ +g[e+88>>2];m=+g[d+176>>2]+ +g[d+64>>2]+((D-C)*w-(B-A)*q)-(+g[e+176>>2]+ +g[e+64>>2]+((l-k)*p-(H-G)*n));n=+g[d+180>>2]+ +g[d+68>>2]+((z-y)*q-(D-C)*u)-(+g[e+180>>2]+ +g[e+68>>2]+((F-E)*n-(l-k)*x));p=+g[d+184>>2]+ +g[d+72>>2]+((B-A)*u-(z-y)*w)-(+g[e+184>>2]+ +g[e+72>>2]+((H-G)*x-(F-E)*p));o=(c[d+240>>2]|0)==0;v=0;do{x=1.0/+g[b+48+(v*84|0)+80>>2];r=b+48+(v*84|0)|0;w=+g[r>>2];s=b+48+(v*84|0)+4|0;u=+g[s>>2];t=b+48+(v*84|0)+8|0;q=+g[t>>2];q=x*(((z-F)*w+(B-H)*u+(D-l)*q)*-.30000001192092896/f)-x*(m*w+n*u+p*q);g[b+36>>2]=+g[b+36>>2]+q;u=+g[t>>2];w=+g[s>>2];x=+g[r>>2];h=c[b+28>>2]|0;j=+g[h+344>>2];if(!o){S=((B-A)*u-(D-C)*w)*+g[h+296>>2]+((D-C)*x-(z-y)*u)*+g[h+300>>2]+((z-y)*w-(B-A)*x)*+g[h+304>>2];Q=((B-A)*u-(D-C)*w)*+g[h+280>>2]+((D-C)*x-(z-y)*u)*+g[h+284>>2]+((z-y)*w-(B-A)*x)*+g[h+288>>2];R=((B-A)*u-(D-C)*w)*+g[h+264>>2]+((D-C)*x-(z-y)*u)*+g[h+268>>2]+((z-y)*w-(B-A)*x)*+g[h+272>>2];U=q*w*j*+g[d+116>>2];T=q*u*j*+g[d+120>>2];g[d+64>>2]=q*x*j*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=U+ +g[d+68>>2];g[d+72>>2]=T+ +g[d+72>>2];Q=Q*q*+g[d+100>>2];j=S*q*+g[d+104>>2];g[d+80>>2]=R*q*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=Q+ +g[d+84>>2];g[d+88>>2]=j+ +g[d+88>>2]}h=c[b+32>>2]|0;j=+g[h+344>>2];if(c[e+240>>2]|0){U=((H-G)*u-(l-k)*w)*+g[h+296>>2]+((l-k)*x-(F-E)*u)*+g[h+300>>2]+((F-E)*w-(H-G)*x)*+g[h+304>>2];T=((H-G)*u-(l-k)*w)*+g[h+280>>2]+((l-k)*x-(F-E)*u)*+g[h+284>>2]+((F-E)*w-(H-G)*x)*+g[h+288>>2];S=((H-G)*u-(l-k)*w)*+g[h+264>>2]+((l-k)*x-(F-E)*u)*+g[h+268>>2]+((F-E)*w-(H-G)*x)*+g[h+272>>2];Q=j*+g[s>>2]*-q*+g[e+116>>2];R=j*+g[t>>2]*-q*+g[e+120>>2];g[e+64>>2]=+g[e+112>>2]*j*+g[r>>2]*-q+ +g[e+64>>2];g[e+68>>2]=Q+ +g[e+68>>2];g[e+72>>2]=R+ +g[e+72>>2];T=T*+g[e+100>>2]*-q;U=U*+g[e+104>>2]*-q;g[e+80>>2]=S*+g[e+96>>2]*-q+ +g[e+80>>2];g[e+84>>2]=T+ +g[e+84>>2];g[e+88>>2]=U+ +g[e+88>>2]}v=v+1|0}while((v|0)!=3)}do if(!(a[b+552>>0]|0)){j=+g[b+440>>2];if(!(j>1.1920928955078125e-07)){I=d+80|0;o=d+196|0;J=d+84|0;r=d+200|0;K=d+88|0;s=e+192|0;L=e+80|0;t=e+196|0;M=e+84|0;v=e+200|0;N=e+88|0;h=d+192|0;break}k=+g[e+192>>2]+ +g[e+80>>2]-(+g[d+192>>2]+ +g[d+80>>2]);l=+g[e+196>>2]+ +g[e+84>>2]-(+g[d+196>>2]+ +g[d+84>>2]);m=+g[e+200>>2]+ +g[e+88>>2]-(+g[d+200>>2]+ +g[d+88>>2]);if(k*k+l*l+m*m>1.1920928955078125e-07){C=1.0/+O(+(k*k+l*l+m*m));h=c[b+28>>2]|0;p=+g[h+264>>2];q=+g[h+280>>2];u=+g[h+296>>2];w=+g[h+268>>2];x=+g[h+284>>2];y=+g[h+300>>2];z=+g[h+272>>2];A=+g[h+288>>2];B=+g[h+304>>2];h=c[b+32>>2]|0;j=j*(1.0/(k*C*(p*k*C+l*C*q+m*C*u)+l*C*(k*C*w+l*C*x+m*C*y)+m*C*(k*C*z+l*C*A+m*C*B)+(k*C*(k*C*+g[h+264>>2]+l*C*+g[h+280>>2]+m*C*+g[h+296>>2])+l*C*(k*C*+g[h+268>>2]+l*C*+g[h+284>>2]+m*C*+g[h+300>>2])+m*C*(k*C*+g[h+272>>2]+l*C*+g[h+288>>2]+m*C*+g[h+304>>2]))));C=+O(+(m*j*m*j+(k*j*k*j+l*j*l*j)));n=1.0/C*k*j;k=1.0/C*l*j;j=1.0/C*m*j;if(c[d+240>>2]|0){U=C*0.0*+g[d+116>>2];T=C*0.0*+g[d+120>>2];g[d+64>>2]=C*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=U+ +g[d+68>>2];g[d+72>>2]=T+ +g[d+72>>2];T=(n*q+k*x+j*A)*C*+g[d+100>>2];U=(n*u+k*y+j*B)*C*+g[d+104>>2];g[d+80>>2]=(n*p+k*w+j*z)*C*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=T+ +g[d+84>>2];g[d+88>>2]=U+ +g[d+88>>2];h=c[b+32>>2]|0}if(c[e+240>>2]|0){U=n*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];T=n*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];S=n*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];Q=C*-0.0*+g[e+116>>2];R=C*-0.0*+g[e+120>>2];g[e+64>>2]=C*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Q+ +g[e+68>>2];g[e+72>>2]=R+ +g[e+72>>2];T=T*+g[e+100>>2]*-C;U=U*+g[e+104>>2]*-C;g[e+80>>2]=S*+g[e+96>>2]*-C+ +g[e+80>>2];g[e+84>>2]=T+ +g[e+84>>2];g[e+88>>2]=U+ +g[e+88>>2];I=d+80|0;o=d+196|0;J=d+84|0;r=d+200|0;K=d+88|0;s=e+192|0;L=e+80|0;t=e+196|0;M=e+84|0;v=e+200|0;N=e+88|0;h=d+192|0}else{I=d+80|0;o=d+196|0;J=d+84|0;r=d+200|0;K=d+88|0;s=e+192|0;L=e+80|0;t=e+196|0;M=e+84|0;v=e+200|0;N=e+88|0;h=d+192|0}}else{I=d+80|0;o=d+196|0;J=d+84|0;r=d+200|0;K=d+88|0;s=e+192|0;L=e+80|0;t=e+196|0;M=e+84|0;v=e+200|0;N=e+88|0;h=d+192|0}}else{M=c[b+28>>2]|0;c[P+352>>2]=c[M+4>>2];c[P+352+4>>2]=c[M+4+4>>2];c[P+352+8>>2]=c[M+4+8>>2];c[P+352+12>>2]=c[M+4+12>>2];c[P+352+16>>2]=c[M+20>>2];c[P+352+16+4>>2]=c[M+20+4>>2];c[P+352+16+8>>2]=c[M+20+8>>2];c[P+352+16+12>>2]=c[M+20+12>>2];c[P+352+32>>2]=c[M+36>>2];c[P+352+32+4>>2]=c[M+36+4>>2];c[P+352+32+8>>2]=c[M+36+8>>2];c[P+352+32+12>>2]=c[M+36+12>>2];c[P+352+48>>2]=c[M+52>>2];c[P+352+48+4>>2]=c[M+52+4>>2];c[P+352+48+8>>2]=c[M+52+8>>2];c[P+352+48+12>>2]=c[M+52+12>>2];M=c[b+32>>2]|0;c[P+288>>2]=c[M+4>>2];c[P+288+4>>2]=c[M+4+4>>2];c[P+288+8>>2]=c[M+4+8>>2];c[P+288+12>>2]=c[M+4+12>>2];c[P+288+16>>2]=c[M+20>>2];c[P+288+16+4>>2]=c[M+20+4>>2];c[P+288+16+8>>2]=c[M+20+8>>2];c[P+288+16+12>>2]=c[M+20+12>>2];c[P+288+32>>2]=c[M+36>>2];c[P+288+32+4>>2]=c[M+36+4>>2];c[P+288+32+8>>2]=c[M+36+8>>2];c[P+288+32+12>>2]=c[M+36+12>>2];c[P+288+48>>2]=c[M+52>>2];c[P+288+48+4>>2]=c[M+52+4>>2];c[P+288+48+8>>2]=c[M+52+8>>2];c[P+288+48+12>>2]=c[M+52+12>>2];S=+g[d+196>>2]+ +g[d+84>>2];u=+g[d+200>>2]+ +g[d+88>>2];g[P+272>>2]=+g[d+192>>2]+ +g[d+80>>2];g[P+272+4>>2]=S;g[P+272+8>>2]=u;g[P+272+12>>2]=0.0;u=+g[e+196>>2]+ +g[e+84>>2];S=+g[e+200>>2]+ +g[e+88>>2];g[P+256>>2]=+g[e+192>>2]+ +g[e+80>>2];g[P+256+4>>2]=u;g[P+256+8>>2]=S;g[P+256+12>>2]=0.0;c[P+192>>2]=1065353216;M=P+192+4|0;c[M>>2]=0;c[M+4>>2]=0;c[M+8>>2]=0;c[M+12>>2]=0;c[P+192+20>>2]=1065353216;N=P+192+24|0;c[N>>2]=0;c[N+4>>2]=0;c[N+8>>2]=0;c[N+12>>2]=0;c[P+192+40>>2]=1065353216;K=P+192+44|0;c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;c[K+16>>2]=0;Zg(P+352|0,0.0,0.0,0.0,P+272|0,f,P+192|0);c[P+128>>2]=1065353216;K=P+128+4|0;c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;c[P+128+20>>2]=1065353216;L=P+128+24|0;c[L>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;c[P+128+40>>2]=1065353216;J=P+128+44|0;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=0;c[J+16>>2]=0;Zg(P+288|0,0.0,0.0,0.0,P+256|0,f,P+128|0);S=+g[b+556>>2];u=+g[b+560>>2];T=+g[b+564>>2];w=+g[b+568>>2];F=S*(2.0/(S*S+u*u+T*T+w*w));A=u*(2.0/(S*S+u*u+T*T+w*w));G=T*(2.0/(S*S+u*u+T*T+w*w));W=+g[b+364>>2];V=+g[b+368>>2];Z=+g[b+372>>2];k=Z*(S*G-w*A)+(V*(S*A+w*G)+W*(1.0-(u*A+T*G)));l=Z*(u*G+w*F)+(W*(S*A-w*G)+V*(1.0-(S*F+T*G)));m=W*(S*G+w*A)+V*(u*G-w*F)+Z*(1.0-(S*F+u*A));j=+g[b+380>>2];E=+g[b+384>>2];B=+g[b+388>>2];n=(S*G-w*A)*B+(E*(S*A+w*G)+j*(1.0-(u*A+T*G)));p=(u*G+w*F)*B+(j*(S*A-w*G)+E*(1.0-(S*F+T*G)));q=j*(S*G+w*A)+E*(u*G-w*F)+B*(1.0-(S*F+u*A));Q=+g[b+396>>2];C=+g[b+400>>2];z=+g[b+404>>2];R=(1.0-(u*A+T*G))*Q+(S*A+w*G)*C+(S*G-w*A)*z;T=(S*A-w*G)*Q+(1.0-(S*F+T*G))*C+(u*G+w*F)*z;A=(S*G+w*A)*Q+(u*G-w*F)*C+(1.0-(S*F+u*A))*z;u=+g[b+300>>2];F=+g[b+316>>2];S=+g[b+332>>2];w=+g[b+304>>2];G=+g[b+320>>2];U=+g[b+336>>2];D=+g[b+308>>2];H=+g[b+324>>2];y=+g[b+340>>2];x=-+g[b+348>>2];aa=-+g[b+352>>2];Y=-+g[b+356>>2];Z=W*0.0+V*0.0+Z*0.0+ +g[b+412>>2]+(m*(D*x+H*aa+y*Y)+(k*(u*x+F*aa+S*Y)+l*(w*x+G*aa+U*Y)));B=j*0.0+E*0.0+B*0.0+ +g[b+416>>2]+(q*(D*x+H*aa+y*Y)+(n*(u*x+F*aa+S*Y)+p*(w*x+G*aa+U*Y)));Y=Q*0.0+C*0.0+z*0.0+ +g[b+420>>2]+(A*(D*x+H*aa+y*Y)+(R*(u*x+F*aa+S*Y)+T*(w*x+G*aa+U*Y)));aa=+g[P+128>>2];x=+g[K>>2];z=+g[P+128+8>>2];C=+g[P+128+16>>2];Q=+g[P+128+20>>2];E=+g[L>>2];j=+g[P+128+32>>2];V=+g[P+128+36>>2];W=+g[P+128+40>>2];X=z*Y+(aa*Z+x*B)+ +g[P+128+48>>2];_=C*Z+B*Q+Y*E+ +g[P+128+52>>2];$=Z*j+B*V+Y*W+ +g[P+128+56>>2];g[P+64>>2]=(k*u+l*w+m*D)*aa+(n*u+p*w+q*D)*x+(R*u+T*w+A*D)*z;g[P+64+4>>2]=(k*F+l*G+m*H)*aa+(n*F+p*G+q*H)*x+(R*F+T*G+A*H)*z;g[P+64+8>>2]=(k*S+l*U+m*y)*aa+(n*S+p*U+q*y)*x+(R*S+T*U+A*y)*z;g[P+64+12>>2]=0.0;g[P+64+16>>2]=(k*u+l*w+m*D)*C+(n*u+p*w+q*D)*Q+(R*u+T*w+A*D)*E;g[P+64+20>>2]=(k*F+l*G+m*H)*C+(n*F+p*G+q*H)*Q+(R*F+T*G+A*H)*E;g[P+64+24>>2]=(k*S+l*U+m*y)*C+(n*S+p*U+q*y)*Q+(R*S+T*U+A*y)*E;g[P+64+28>>2]=0.0;g[P+64+32>>2]=(k*u+l*w+m*D)*j+(n*u+p*w+q*D)*V+(R*u+T*w+A*D)*W;g[P+64+36>>2]=(k*F+l*G+m*H)*j+(n*F+p*G+q*H)*V+(R*F+T*G+A*H)*W;g[P+64+40>>2]=(k*S+l*U+m*y)*j+(n*S+p*U+q*y)*V+(R*S+T*U+A*y)*W;g[P+64+44>>2]=0.0;g[P+64+48>>2]=X;g[P+64+52>>2]=_;g[P+64+56>>2]=$;g[P+64+60>>2]=0.0;$=(R*u+T*w+A*D)*-Y+((k*u+l*w+m*D)*-Z+(n*u+p*w+q*D)*-B);_=(R*F+T*G+A*H)*-Y+((k*F+l*G+m*H)*-Z+(n*F+p*G+q*H)*-B);B=(R*S+T*U+A*y)*-Y+((k*S+l*U+m*y)*-Z+(n*S+p*U+q*y)*-B);Z=+g[P+192>>2];Y=+g[M>>2];X=+g[P+192+8>>2];W=+g[P+192+16>>2];V=+g[P+192+20>>2];j=+g[N>>2];E=+g[P+192+32>>2];Q=+g[P+192+36>>2];C=+g[P+192+40>>2];z=$*Z+_*Y+B*X+ +g[P+192+48>>2];x=$*W+_*V+B*j+ +g[P+192+52>>2];B=$*E+_*Q+B*C+ +g[P+192+56>>2];g[P>>2]=(k*u+l*w+m*D)*Z+(k*F+l*G+m*H)*Y+(k*S+l*U+m*y)*X;g[P+4>>2]=(n*u+p*w+q*D)*Z+(n*F+p*G+q*H)*Y+(n*S+p*U+q*y)*X;g[P+8>>2]=(R*u+T*w+A*D)*Z+(R*F+T*G+A*H)*Y+(R*S+T*U+A*y)*X;g[P+12>>2]=0.0;g[P+16>>2]=(k*u+l*w+m*D)*W+(k*F+l*G+m*H)*V+(k*S+l*U+m*y)*j;g[P+20>>2]=(n*u+p*w+q*D)*W+(n*F+p*G+q*H)*V+(n*S+p*U+q*y)*j;g[P+24>>2]=(R*u+T*w+A*D)*W+(R*F+T*G+A*H)*V+(R*S+T*U+A*y)*j;g[P+28>>2]=0.0;g[P+32>>2]=(k*u+l*w+m*D)*E+(k*F+l*G+m*H)*Q+(k*S+l*U+m*y)*C;g[P+36>>2]=(n*u+p*w+q*D)*E+(n*F+p*G+q*H)*Q+(n*S+p*U+q*y)*C;g[P+40>>2]=(R*u+T*w+A*D)*E+(R*F+T*G+A*H)*Q+(R*S+T*U+A*y)*C;g[P+44>>2]=0.0;g[P+48>>2]=z;g[P+52>>2]=x;g[P+56>>2]=B;g[P+60>>2]=0.0;Gf(P+352|0,P+64|0,P+424|0,P+416|0);B=+g[P+416>>2];x=1.0/f*+g[P+424>>2]*B;z=1.0/f*B*+g[P+424+4>>2];B=1.0/f*B*+g[P+424+8>>2];Gf(P+288|0,P,P+424|0,P+416|0);C=+g[P+416>>2];x=x-+g[P+272>>2];z=z-+g[P+272+4>>2];B=B-+g[P+272+8>>2];y=1.0/f*+g[P+424>>2]*C-+g[P+256>>2];A=1.0/f*C*+g[P+424+4>>2]-+g[P+256+4>>2];C=1.0/f*C*+g[P+424+8>>2]-+g[P+256+8>>2];if(x*x+z*z+B*B>1.1920928955078125e-07){q=1.0/+O(+(x*x+z*z+B*B));N=c[b+28>>2]|0;j=x*q;l=z*q;n=B*q;q=x*q*(+g[N+264>>2]*x*q+z*q*+g[N+280>>2]+B*q*+g[N+296>>2])+z*q*(x*q*+g[N+268>>2]+z*q*+g[N+284>>2]+B*q*+g[N+300>>2])+B*q*(x*q*+g[N+272>>2]+z*q*+g[N+288>>2]+B*q*+g[N+304>>2])}else{j=0.0;l=0.0;n=0.0;q=0.0}if(y*y+A*A+C*C>1.1920928955078125e-07){u=1.0/+O(+(y*y+A*A+C*C));N=c[b+32>>2]|0;k=y*u;m=A*u;p=C*u;u=y*u*(+g[N+264>>2]*y*u+A*u*+g[N+280>>2]+C*u*+g[N+296>>2])+A*u*(y*u*+g[N+268>>2]+A*u*+g[N+284>>2]+C*u*+g[N+300>>2])+C*u*(y*u*+g[N+272>>2]+A*u*+g[N+288>>2]+C*u*+g[N+304>>2])}else{k=0.0;m=0.0;p=0.0;u=0.0}w=q*j+u*k;k=q*l+u*m;j=q*n+u*p;if(w*w+k*k+j*j>1.1920928955078125e-07){n=1.0/+O(+(w*w+k*k+j*j));o=c[b+28>>2]|0;l=w*n*(+g[o+264>>2]*w*n+k*n*+g[o+280>>2]+j*n*+g[o+296>>2])+k*n*(w*n*+g[o+268>>2]+k*n*+g[o+284>>2]+j*n*+g[o+300>>2])+j*n*(w*n*+g[o+272>>2]+k*n*+g[o+288>>2]+j*n*+g[o+304>>2]);h=c[b+32>>2]|0;n=w*n*(w*n*+g[h+264>>2]+k*n*+g[h+280>>2]+j*n*+g[h+296>>2])+k*n*(w*n*+g[h+268>>2]+k*n*+g[h+284>>2]+j*n*+g[h+300>>2])+j*n*(w*n*+g[h+272>>2]+k*n*+g[h+288>>2]+j*n*+g[h+304>>2]);k=(x*l-y*n)*(1.0/((l+n)*(l+n)));u=(z*l-A*n)*(1.0/((l+n)*(l+n)));n=(B*l-C*n)*(1.0/((l+n)*(l+n)));j=+g[b+572>>2];if(!(j>=0.0))j=u;else{l=(a[b+553>>0]|0)==0?j:j/l;m=+g[b+576>>2];p=+g[b+580>>2];q=+g[b+584>>2];j=+O(+((k+m)*(k+m)+(u+p)*(u+p)+(n+q)*(n+q)));if(j>l){k=l*(k+m)*(1.0/j)-m;n=l*(n+q)*(1.0/j)-q;j=l*(u+p)*(1.0/j)-p}else j=u;g[b+576>>2]=k+m;g[b+580>>2]=j+p;g[b+584>>2]=n+q}m=+O(+(k*k+j*j+n*n));l=k*(1.0/m);k=j*(1.0/m);j=n*(1.0/m);if(c[d+240>>2]|0){aa=l*+g[o+296>>2]+k*+g[o+300>>2]+j*+g[o+304>>2];$=l*+g[o+280>>2]+k*+g[o+284>>2]+j*+g[o+288>>2];_=l*+g[o+264>>2]+k*+g[o+268>>2]+j*+g[o+272>>2];Y=m*0.0*+g[d+116>>2];Z=m*0.0*+g[d+120>>2];g[d+64>>2]=m*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Y+ +g[d+68>>2];g[d+72>>2]=Z+ +g[d+72>>2];$=$*m*+g[d+100>>2];aa=aa*m*+g[d+104>>2];g[d+80>>2]=_*m*+g[d+96>>2]+ +g[d+80>>2];g[d+84>>2]=$+ +g[d+84>>2];g[d+88>>2]=aa+ +g[d+88>>2];h=c[b+32>>2]|0}if(c[e+240>>2]|0){aa=l*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];$=l*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];_=l*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];Y=m*-0.0*+g[e+116>>2];Z=m*-0.0*+g[e+120>>2];g[e+64>>2]=m*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-m;aa=aa*+g[e+104>>2]*-m;g[e+80>>2]=_*+g[e+96>>2]*-m+ +g[e+80>>2];g[e+84>>2]=$+ +g[e+84>>2];g[e+88>>2]=aa+ +g[e+88>>2]}}I=d+80|0;o=d+196|0;J=d+84|0;r=d+200|0;K=d+88|0;s=e+192|0;L=e+80|0;t=e+196|0;M=e+84|0;v=e+200|0;N=e+88|0;h=d+192|0}while(0);z=+g[h>>2]+ +g[I>>2];y=+g[o>>2]+ +g[J>>2];x=+g[r>>2]+ +g[K>>2];w=+g[s>>2]+ +g[L>>2];u=+g[t>>2]+ +g[M>>2];q=+g[v>>2]+ +g[N>>2];if(a[b+526>>0]|0){k=+g[b+528>>2];j=k*+g[b+504>>2]*+g[b+432>>2]/f;l=+g[b+460>>2];m=+g[b+464>>2];n=+g[b+468>>2];if((w-z)*l+(u-y)*m+(q-x)*n>0.0)j=j+k*((w-z)*l+(u-y)*m+(q-x)*n)*+g[b+436>>2];$=+g[b+516>>2];_=$+j*+g[b+492>>2];_=_>0.0?_:0.0;g[b+516>>2]=_;Z=+g[b+536>>2];k=+g[b+540>>2];aa=+g[b+544>>2];j=l*(_-$)*Z+m*(_-$)*k+(_-$)*n*aa;p=+O(+(((_-$)*n-aa*j)*((_-$)*n-aa*j)+((l*(_-$)-Z*j)*(l*(_-$)-Z*j)+(m*(_-$)-k*j)*(m*(_-$)-k*j))));l=1.0/p*(l*(_-$)-Z*j);k=1.0/p*(m*(_-$)-k*j);j=1.0/p*((_-$)*n-aa*j);h=c[b+28>>2]|0;if(c[d+240>>2]|0){aa=l*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];$=l*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];_=l*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];Y=p*0.0*+g[d+116>>2];Z=p*0.0*+g[d+120>>2];g[d+64>>2]=p*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=Y+ +g[d+68>>2];g[d+72>>2]=Z+ +g[d+72>>2];$=$*p*+g[d+100>>2];aa=aa*p*+g[d+104>>2];g[I>>2]=_*p*+g[d+96>>2]+ +g[I>>2];g[J>>2]=$+ +g[J>>2];g[K>>2]=aa+ +g[K>>2]}h=c[b+32>>2]|0;if(c[e+240>>2]|0){aa=l*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];$=l*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];_=l*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];Y=p*-0.0*+g[e+116>>2];Z=p*-0.0*+g[e+120>>2];g[e+64>>2]=p*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-p;aa=aa*+g[e+104>>2]*-p;g[L>>2]=_*+g[e+96>>2]*-p+ +g[L>>2];g[M>>2]=$+ +g[M>>2];g[N>>2]=aa+ +g[N>>2]}}if(!(a[b+525>>0]|0)){i=P;return}n=+g[b+532>>2];m=n*+g[b+508>>2]*+g[b+432>>2]/f;l=+g[b+476>>2];k=+g[b+480>>2];j=+g[b+484>>2];if((w-z)*l+(u-y)*k+(q-x)*j>0.0)m=m+n*((w-z)*l+(u-y)*k+(q-x)*j)*+g[b+436>>2];n=+g[b+520>>2];m=n+m*+g[b+496>>2];m=m>0.0?m:0.0;g[b+520>>2]=m;h=c[b+28>>2]|0;if(c[d+240>>2]|0){aa=l*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];$=l*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];j=l*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];l=(m-n)*0.0*+g[d+116>>2];k=(m-n)*0.0*+g[d+120>>2];g[d+64>>2]=(m-n)*0.0*+g[d+112>>2]+ +g[d+64>>2];g[d+68>>2]=l+ +g[d+68>>2];g[d+72>>2]=k+ +g[d+72>>2];k=$*(m-n)*+g[d+100>>2];l=aa*(m-n)*+g[d+104>>2];g[I>>2]=j*(m-n)*+g[d+96>>2]+ +g[I>>2];g[J>>2]=k+ +g[J>>2];g[K>>2]=l+ +g[K>>2];l=+g[b+476>>2];k=+g[b+480>>2];j=+g[b+484>>2]}h=c[b+32>>2]|0;if(!(c[e+240>>2]|0)){i=P;return}aa=l*+g[h+296>>2]+k*+g[h+300>>2]+j*+g[h+304>>2];$=l*+g[h+280>>2]+k*+g[h+284>>2]+j*+g[h+288>>2];_=l*+g[h+264>>2]+k*+g[h+268>>2]+j*+g[h+272>>2];Y=(m-n)*-0.0*+g[e+116>>2];Z=(m-n)*-0.0*+g[e+120>>2];g[e+64>>2]=(m-n)*-0.0*+g[e+112>>2]+ +g[e+64>>2];g[e+68>>2]=Y+ +g[e+68>>2];g[e+72>>2]=Z+ +g[e+72>>2];$=$*+g[e+100>>2]*-(m-n);aa=aa*+g[e+104>>2]*-(m-n);g[L>>2]=_*+g[e+96>>2]*-(m-n)+ +g[L>>2];g[M>>2]=$+ +g[M>>2];g[N>>2]=aa+ +g[N>>2];i=P;return}function Ac(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;U=c[e>>2]|0;fa=c[f>>2]|0;if(U|0)g=c[U+12>>2]|0;else g=b;i=c[g+88>>2]|0;j=c[g+92>>2]|0;h=c[g+96>>2]|0;if(!fa)g=d;else g=c[fa+12>>2]|0;s=c[g+88>>2]|0;n=c[g+92>>2]|0;p=c[g+96>>2]|0;$=c[b+88>>2]|0;da=(c[d+88>>2]|0)-$|0;u=c[b+92>>2]|0;ea=(c[d+92>>2]|0)-u|0;b=c[b+96>>2]|0;X=(c[d+96>>2]|0)-b|0;Z=c[(U|0?U:fa)+12>>2]|0;aa=(c[Z+88>>2]|0)-$|0;T=(c[Z+92>>2]|0)-u|0;Z=(c[Z+96>>2]|0)-b|0;Y=(_(T,X)|0)-(_(Z,ea)|0)|0;Z=(_(Z,da)|0)-(_(aa,X)|0)|0;T=(_(aa,ea)|0)-(_(T,da)|0)|0;$=yr(Y|0,((Y|0)<0)<<31>>31|0,$|0,(($|0)<0)<<31>>31|0)|0;aa=C;u=yr(Z|0,((Z|0)<0)<<31>>31|0,u|0,((u|0)<0)<<31>>31|0)|0;t=C;b=yr(T|0,((T|0)<0)<<31>>31|0,b|0,((b|0)<0)<<31>>31|0)|0;b=Pt($|0,aa|0,b|0,C|0)|0;t=Pt(b|0,C|0,u|0,t|0)|0;u=C;b=yr(T|0,((T|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;aa=C;$=yr(Z|0,((Z|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;$=Ls(b|0,aa|0,$|0,C|0)|0;aa=C;b=yr(Y|0,((Y|0)<0)<<31>>31|0,X|0,((X|0)<0)<<31>>31|0)|0;ca=C;ba=yr(T|0,((T|0)<0)<<31>>31|0,da|0,((da|0)<0)<<31>>31|0)|0;ba=Ls(b|0,ca|0,ba|0,C|0)|0;ca=C;b=yr(Z|0,((Z|0)<0)<<31>>31|0,da|0,((da|0)<0)<<31>>31|0)|0;W=C;V=yr(Y|0,((Y|0)<0)<<31>>31|0,ea|0,((ea|0)<0)<<31>>31|0)|0;V=Ls(b|0,W|0,V|0,C|0)|0;W=C;b=yr($|0,aa|0,i|0,((i|0)<0)<<31>>31|0)|0;S=C;g=yr(ba|0,ca|0,j|0,((j|0)<0)<<31>>31|0)|0;S=Pt(g|0,C|0,b|0,S|0)|0;b=C;g=yr(V|0,W|0,h|0,((h|0)<0)<<31>>31|0)|0;g=Pt(S|0,b|0,g|0,C|0)|0;b=C;if((U|0)!=0?(c[U+12>>2]|0)!=0:0){r=U;q=i;o=j;m=h;while(1){r=c[(c[r+8>>2]|0)+4>>2]|0;j=r+12|0;i=c[j>>2]|0;d=c[i+88>>2]|0;R=yr(d|0,((d|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;Q=C;h=c[i+92>>2]|0;S=yr(h|0,((h|0)<0)<<31>>31|0,Z|0,((Z|0)<0)<<31>>31|0)|0;Q=Pt(S|0,C|0,R|0,Q|0)|0;R=C;i=c[i+96>>2]|0;S=yr(i|0,((i|0)<0)<<31>>31|0,T|0,((T|0)<0)<<31>>31|0)|0;S=Pt(Q|0,R|0,S|0,C|0)|0;R=C;if((R|0)<(u|0)|(R|0)==(u|0)&S>>>0<t>>>0){d=q;i=o;h=m;break}if((c[r+20>>2]|0)==(c[a+100>>2]|0)){d=q;i=o;h=m;break}l=yr(d|0,((d|0)<0)<<31>>31|0,$|0,aa|0)|0;S=C;k=yr(h|0,((h|0)<0)<<31>>31|0,ba|0,ca|0)|0;S=Pt(k|0,C|0,l|0,S|0)|0;l=C;k=yr(i|0,((i|0)<0)<<31>>31|0,V|0,W|0)|0;k=Pt(S|0,l|0,k|0,C|0)|0;l=C;if(!((l|0)>(b|0)|(l|0)==(b|0)&k>>>0>g>>>0)){d=q;i=o;h=m;break}c[e>>2]=r;S=c[j>>2]|0;d=c[S+88>>2]|0;i=c[S+92>>2]|0;h=c[S+96>>2]|0;if(!S){g=k;b=l;break}else{b=l;g=k;q=d;o=i;m=h}}o=c[f>>2]|0;S=i}else{o=fa;d=i;S=j}j=yr($|0,aa|0,s|0,((s|0)<0)<<31>>31|0)|0;R=C;i=yr(ba|0,ca|0,n|0,((n|0)<0)<<31>>31|0)|0;R=Pt(i|0,C|0,j|0,R|0)|0;j=C;i=yr(V|0,W|0,p|0,((p|0)<0)<<31>>31|0)|0;i=Pt(R|0,j|0,i|0,C|0)|0;j=C;a:do if(o)if(!(c[o+12>>2]|0))k=s;else{r=o;q=s;while(1){o=c[c[r+8>>2]>>2]|0;m=c[o+12>>2]|0;k=c[m+88>>2]|0;Q=yr(k|0,((k|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;P=C;l=c[m+92>>2]|0;R=yr(l|0,((l|0)<0)<<31>>31|0,Z|0,((Z|0)<0)<<31>>31|0)|0;P=Pt(R|0,C|0,Q|0,P|0)|0;Q=C;m=c[m+96>>2]|0;R=yr(m|0,((m|0)<0)<<31>>31|0,T|0,((T|0)<0)<<31>>31|0)|0;R=Pt(P|0,Q|0,R|0,C|0)|0;Q=C;if((Q|0)<(u|0)|(Q|0)==(u|0)&R>>>0<t>>>0){o=r;k=q;break a}if((c[o+20>>2]|0)==(c[a+100>>2]|0)){o=r;k=q;break a}R=yr(k|0,((k|0)<0)<<31>>31|0,$|0,aa|0)|0;Q=C;l=yr(l|0,((l|0)<0)<<31>>31|0,ba|0,ca|0)|0;Q=Pt(l|0,C|0,R|0,Q|0)|0;R=C;l=yr(m|0,((m|0)<0)<<31>>31|0,V|0,W|0)|0;l=Pt(Q|0,R|0,l|0,C|0)|0;m=C;if(!((m|0)>(j|0)|(m|0)==(j|0)&l>>>0>i>>>0)){o=r;k=q;break a}c[f>>2]=o;R=c[o+12>>2]|0;k=c[R+88>>2]|0;n=c[R+92>>2]|0;p=c[R+96>>2]|0;if(!R){i=l;j=m;break}else{r=o;j=m;i=l;q=k}}}else{o=0;k=s}while(0);i=Ls(i|0,j|0,g|0,b|0)|0;b=C;if((b|0)>0|(b|0)==0&i>>>0>0){Q=Ls(0,0,T|0,((T|0)<0)<<31>>31|0)|0;R=C;j=o;q=i;m=b;r=d;s=S;t=h;N=k;O=n;P=p;while(1){l=(_(O-s|0,ea)|0)+(_(N-r|0,da)|0)+(_(P-t|0,X)|0)|0;g=c[e>>2]|0;if(!g){E=l;D=l;B=((l|0)<0)<<31>>31;l=q;I=r;H=s;G=t}else{K=l;u=l;L=((l|0)<0)<<31>>31;l=q;H=r;I=s;J=t;b:while(1){if(!(c[g+12>>2]|0)){s=K;t=L;r=H;q=I;g=J;break}G=c[(c[g>>2]|0)+8>>2]|0;if((c[G+20>>2]|0)<=(c[a+100>>2]|0)){s=K;t=L;r=H;q=I;g=J;break}M=c[G+12>>2]|0;r=c[M+88>>2]|0;F=r-H|0;q=c[M+92>>2]|0;E=q-I|0;M=c[M+96>>2]|0;j=M-J|0;t=yr(F|0,((F|0)<0)<<31>>31|0,$|0,aa|0)|0;D=C;s=yr(E|0,((E|0)<0)<<31>>31|0,ba|0,ca|0)|0;D=Pt(s|0,C|0,t|0,D|0)|0;t=C;s=yr(j|0,((j|0)<0)<<31>>31|0,V|0,W|0)|0;s=Pt(D|0,t|0,s|0,C|0)|0;t=C;j=(_(E,ea)|0)+(_(F,da)|0)+(_(j,X)|0)|0;do if((s|0)==0&(t|0)==0){if((j|0)>=0){s=K;t=L;r=H;q=I;g=J;break b}}else{if((t|0)>=0){s=K;t=L;r=H;q=I;g=J;break b}if((j|0)>0){w=1;x=j;v=((j|0)<0)<<31>>31}else{x=Ls(0,0,j|0,((j|0)<0)<<31>>31|0)|0;w=j>>31;x=(j|0)<0?x:0;v=(j|0)<0?C:0}F=0-w|0;A=Ls(0,0,s|0,t|0)|0;B=C;if((K|0)>0){j=1;D=u;E=L}else{E=(K|0)<0;D=Ls(0,0,u|0,L|0)|0;j=K>>31;D=E?D:0;E=E?C:0}if(!((m|0)>0|(m|0)==0&l>>>0>0))if((m|0)<0){s=Ls(0,0,l|0,m|0)|0;j=0-j|0;t=C}else{s=0;t=0}else{s=l;t=m}if((j|0)==(F|0)){if(!w)break;j=yr(s|0,0,x|0,0)|0;w=C;ja=yr(t|0,0,x|0,0)|0;ia=C;y=yr(s|0,0,v|0,0)|0;z=C;ha=yr(t|0,0,v|0,0)|0;x=C;y=Pt(ja|0,0,y|0,0)|0;s=C;x=Pt(ia|0,0,ha|0,x|0)|0;z=Pt(x|0,C|0,z|0,0)|0;s=Pt(z|0,C|0,s|0,0)|0;z=C;w=Pt(0,y|0,j|0,w|0)|0;x=C;y=Pt(s|0,z|0,(x>>>0<y>>>0|(x|0)==(y|0)&w>>>0<0)&1|0,0)|0;z=C;s=yr(D|0,0,A|0,0)|0;j=C;ha=yr(E|0,0,A|0,0)|0;A=C;t=yr(D|0,0,B|0,0)|0;v=C;B=yr(E|0,0,B|0,0)|0;D=C;t=Pt(ha|0,0,t|0,0)|0;E=C;D=Pt(A|0,0,B|0,D|0)|0;v=Pt(D|0,C|0,v|0,0)|0;E=Pt(v|0,C|0,E|0,0)|0;v=C;j=Pt(0,t|0,s|0,j|0)|0;s=C;t=Pt(E|0,v|0,(s>>>0<t>>>0|(s|0)==(t|0)&j>>>0<0)&1|0,0)|0;v=C;do if(z>>>0<v>>>0|(z|0)==(v|0)&y>>>0<t>>>0)j=-1;else{if(z>>>0>v>>>0|(z|0)==(v|0)&y>>>0>t>>>0){j=1;break}if(x>>>0<s>>>0|(x|0)==(s|0)&w>>>0<j>>>0){j=-1;break}j=(x>>>0>s>>>0|(x|0)==(s|0)&w>>>0>j>>>0)&1}while(0);j=_(j,F)|0}else j=F-j|0;if((j|0)<=-1){s=K;t=L;r=H;q=I;g=J;break b}}while(0);ja=N-r|0;ia=O-q|0;j=P-M|0;m=yr(ja|0,((ja|0)<0)<<31>>31|0,$|0,aa|0)|0;ha=C;l=yr(ia|0,((ia|0)<0)<<31>>31|0,ba|0,ca|0)|0;ha=Pt(l|0,C|0,m|0,ha|0)|0;m=C;l=yr(j|0,((j|0)<0)<<31>>31|0,V|0,W|0)|0;l=Pt(ha|0,m|0,l|0,C|0)|0;m=C;g=(g|0)==(U|0)?0:G;c[e>>2]=g;j=(_(ia,ea)|0)+(_(ja,da)|0)+(_(j,X)|0)|0;if(!g){s=j;u=j;t=((j|0)<0)<<31>>31;g=M;break}else{K=j;u=j;L=((j|0)<0)<<31>>31;H=r;I=q;J=M}}E=s;j=c[f>>2]|0;D=u;B=t;I=r;H=q;G=g}if(!j){g=122;break}if(!(c[j+12>>2]|0)){g=122;break}F=c[c[j+8>>2]>>2]|0;if((c[F+20>>2]|0)<=(c[a+100>>2]|0)){g=122;break}r=c[F+12>>2]|0;t=c[r+88>>2]|0;q=t-N|0;s=c[r+92>>2]|0;j=s-O|0;r=c[r+96>>2]|0;g=r-P|0;ja=yr(q|0,((q|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;ha=C;ia=yr(j|0,((j|0)<0)<<31>>31|0,Z|0,((Z|0)<0)<<31>>31|0)|0;ha=Pt(ia|0,C|0,ja|0,ha|0)|0;ja=C;ia=yr(g|0,((g|0)<0)<<31>>31|0,Q|0,R|0)|0;if(!((ha|0)==(ia|0)&(ja|0)==(C|0))){g=122;break}v=yr(q|0,((q|0)<0)<<31>>31|0,$|0,aa|0)|0;A=C;u=yr(j|0,((j|0)<0)<<31>>31|0,ba|0,ca|0)|0;A=Pt(u|0,C|0,v|0,A|0)|0;v=C;u=yr(g|0,((g|0)<0)<<31>>31|0,V|0,W|0)|0;u=Pt(A|0,v|0,u|0,C|0)|0;v=C;g=(_(j,ea)|0)+(_(q,da)|0)+(_(g,X)|0)|0;A=t-I|0;ia=s-H|0;z=r-G|0;A=yr(A|0,((A|0)<0)<<31>>31|0,$|0,aa|0)|0;ja=C;ia=yr(ia|0,((ia|0)<0)<<31>>31|0,ba|0,ca|0)|0;ja=Pt(ia|0,C|0,A|0,ja|0)|0;A=C;z=yr(z|0,((z|0)<0)<<31>>31|0,V|0,W|0)|0;z=Pt(ja|0,A|0,z|0,C|0)|0;A=C;if(!((A|0)>0|(A|0)==0&z>>>0>0)){g=122;break}if((u|0)==0&(v|0)==0){if((g|0)>=0){g=122;break}}else{if((v|0)>=0){g=122;break}if((g|0)>0){r=1;s=g;q=((g|0)<0)<<31>>31}else{s=Ls(0,0,g|0,((g|0)<0)<<31>>31|0)|0;r=g>>31;s=(g|0)<0?s:0;q=(g|0)<0?C:0}y=0-r|0;w=Ls(0,0,u|0,v|0)|0;x=C;if((E|0)>0){g=1;v=D;u=B}else{u=(E|0)<0;v=Ls(0,0,D|0,B|0)|0;g=E>>31;v=u?v:0;u=u?C:0}do if((m|0)>0|(m|0)==0&l>>>0>0){j=g;g=m}else{if((m|0)>=0){j=g;l=0;g=0;break}l=Ls(0,0,l|0,m|0)|0;j=0-g|0;g=C}while(0);if((j|0)==(y|0)){if(!r){g=122;break}ja=yr(l|0,0,s|0,0)|0;r=C;j=yr(g|0,0,s|0,0)|0;P=C;s=yr(l|0,0,q|0,0)|0;t=C;g=yr(g|0,0,q|0,0)|0;q=C;s=Pt(j|0,0,s|0,0)|0;j=C;q=Pt(P|0,0,g|0,q|0)|0;t=Pt(q|0,C|0,t|0,0)|0;j=Pt(t|0,C|0,j|0,0)|0;t=C;q=Pt(0,s|0,ja|0,r|0)|0;r=C;s=Pt(j|0,t|0,(r>>>0<s>>>0|(r|0)==(s|0)&q>>>0<0)&1|0,0)|0;t=C;j=yr(v|0,0,w|0,0)|0;g=C;ja=yr(u|0,0,w|0,0)|0;P=C;l=yr(v|0,0,x|0,0)|0;m=C;ha=yr(u|0,0,x|0,0)|0;ia=C;l=Pt(ja|0,0,l|0,0)|0;ja=C;ia=Pt(P|0,0,ha|0,ia|0)|0;m=Pt(ia|0,C|0,m|0,0)|0;ja=Pt(m|0,C|0,ja|0,0)|0;m=C;g=Pt(0,l|0,j|0,g|0)|0;j=C;l=Pt(ja|0,m|0,(j>>>0<l>>>0|(j|0)==(l|0)&g>>>0<0)&1|0,0)|0;m=C;do if(t>>>0<m>>>0|(t|0)==(m|0)&s>>>0<l>>>0)g=-1;else{if(t>>>0>m>>>0|(t|0)==(m|0)&s>>>0>l>>>0){g=1;break}if(r>>>0<j>>>0|(r|0)==(j|0)&q>>>0<g>>>0){g=-1;break}g=(r>>>0>j>>>0|(r|0)==(j|0)&q>>>0>g>>>0)&1}while(0);g=_(g,y)|0}else g=y-j|0;if((g|0)<=0){g=122;break}}c[f>>2]=F;P=c[F+12>>2]|0;j=F;q=z;m=A;r=I;s=H;t=G;N=c[P+88>>2]|0;O=c[P+92>>2]|0;P=c[P+96>>2]|0}if((g|0)==122)return}if((b|0)>=0)return;F=Ls(0,0,T|0,((T|0)<0)<<31>>31|0)|0;G=C;g=S;E=k;c:while(1){D=b;B=i;z=g;d:while(1){A=(_(n-z|0,ea)|0)+(_(E-d|0,da)|0)+(_(p-h|0,X)|0)|0;do if((o|0?c[o+12>>2]|0:0)?(ga=c[(c[o+4>>2]|0)+8>>2]|0,(c[ga+20>>2]|0)>(c[a+100>>2]|0)):0){y=c[ga+12>>2]|0;w=c[y+88>>2]|0;ja=w-E|0;x=c[y+92>>2]|0;ia=x-n|0;y=c[y+96>>2]|0;g=y-p|0;i=yr(ja|0,((ja|0)<0)<<31>>31|0,$|0,aa|0)|0;ha=C;b=yr(ia|0,((ia|0)<0)<<31>>31|0,ba|0,ca|0)|0;ha=Pt(b|0,C|0,i|0,ha|0)|0;i=C;b=yr(g|0,((g|0)<0)<<31>>31|0,V|0,W|0)|0;b=Pt(ha|0,i|0,b|0,C|0)|0;i=C;g=(_(ia,ea)|0)+(_(ja,da)|0)+(_(g,X)|0)|0;if((b|0)==0&(i|0)==0)if((g|0)>0)break d;else break;if((i|0)<0){if((g|0)>0){k=1;l=g;j=((g|0)<0)<<31>>31}else{l=Ls(0,0,g|0,((g|0)<0)<<31>>31|0)|0;k=g>>31;l=(g|0)<0?l:0;j=(g|0)<0?C:0}v=0-k|0;r=Ls(0,0,b|0,i|0)|0;s=C;if((A|0)>0){g=1;t=A;u=((A|0)<0)<<31>>31}else{t=Ls(0,0,A|0,((A|0)<0)<<31>>31|0)|0;g=A>>31;t=(A|0)<0?t:0;u=(A|0)<0?C:0}if(!((D|0)>0|(D|0)==0&B>>>0>0))if((D|0)<0){b=Ls(0,0,B|0,D|0)|0;g=0-g|0;i=C}else{b=0;i=0}else{b=B;i=D}if((g|0)==(v|0)){if(!k)break d;g=yr(b|0,0,l|0,0)|0;k=C;ha=yr(i|0,0,l|0,0)|0;U=C;m=yr(b|0,0,j|0,0)|0;q=C;ja=yr(i|0,0,j|0,0)|0;l=C;m=Pt(ha|0,0,m|0,0)|0;b=C;l=Pt(U|0,0,ja|0,l|0)|0;q=Pt(l|0,C|0,q|0,0)|0;b=Pt(q|0,C|0,b|0,0)|0;q=C;k=Pt(0,m|0,g|0,k|0)|0;l=C;m=Pt(b|0,q|0,(l>>>0<m>>>0|(l|0)==(m|0)&k>>>0<0)&1|0,0)|0;q=C;b=yr(t|0,0,r|0,0)|0;g=C;ja=yr(u|0,0,r|0,0)|0;U=C;i=yr(t|0,0,s|0,0)|0;j=C;ha=yr(u|0,0,s|0,0)|0;ia=C;i=Pt(ja|0,0,i|0,0)|0;ja=C;ia=Pt(U|0,0,ha|0,ia|0)|0;j=Pt(ia|0,C|0,j|0,0)|0;ja=Pt(j|0,C|0,ja|0,0)|0;j=C;g=Pt(0,i|0,b|0,g|0)|0;b=C;i=Pt(ja|0,j|0,(b>>>0<i>>>0|(b|0)==(i|0)&g>>>0<0)&1|0,0)|0;j=C;do if(q>>>0<j>>>0|(q|0)==(j|0)&m>>>0<i>>>0)g=-1;else{if(q>>>0>j>>>0|(q|0)==(j|0)&m>>>0>i>>>0){g=1;break}if(l>>>0<b>>>0|(l|0)==(b|0)&k>>>0<g>>>0){g=-1;break}g=(l>>>0>b>>>0|(l|0)==(b|0)&k>>>0>g>>>0)&1}while(0);g=_(g,v)|0}else g=v-g|0;if((g|0)<1)break d}}while(0);g=c[e>>2]|0;if(!g){g=122;break c}if(!(c[g+12>>2]|0)){g=122;break c}u=c[(c[g+8>>2]|0)+4>>2]|0;if((c[u+20>>2]|0)<=(c[a+100>>2]|0)){g=122;break c}i=c[u+12>>2]|0;k=c[i+88>>2]|0;d=k-d|0;j=c[i+92>>2]|0;b=j-z|0;i=c[i+96>>2]|0;g=i-h|0;ja=yr(d|0,((d|0)<0)<<31>>31|0,Y|0,((Y|0)<0)<<31>>31|0)|0;ha=C;ia=yr(b|0,((b|0)<0)<<31>>31|0,Z|0,((Z|0)<0)<<31>>31|0)|0;ha=Pt(ia|0,C|0,ja|0,ha|0)|0;ja=C;ia=yr(g|0,((g|0)<0)<<31>>31|0,F|0,G|0)|0;if(!((ha|0)==(ia|0)&(ja|0)==(C|0))){g=122;break c}l=yr(d|0,((d|0)<0)<<31>>31|0,$|0,aa|0)|0;t=C;h=yr(b|0,((b|0)<0)<<31>>31|0,ba|0,ca|0)|0;t=Pt(h|0,C|0,l|0,t|0)|0;l=C;h=yr(g|0,((g|0)<0)<<31>>31|0,V|0,W|0)|0;h=Pt(t|0,l|0,h|0,C|0)|0;l=C;g=(_(b,ea)|0)+(_(d,da)|0)+(_(g,X)|0)|0;t=E-k|0;ia=n-j|0;s=p-i|0;t=yr(t|0,((t|0)<0)<<31>>31|0,$|0,aa|0)|0;ja=C;ia=yr(ia|0,((ia|0)<0)<<31>>31|0,ba|0,ca|0)|0;ja=Pt(ia|0,C|0,t|0,ja|0)|0;t=C;s=yr(s|0,((s|0)<0)<<31>>31|0,V|0,W|0)|0;s=Pt(ja|0,t|0,s|0,C|0)|0;t=C;if((t|0)>=0){g=122;break c}if((h|0)==0&(l|0)==0){if((g|0)<=0){g=122;break c}}else{if((l|0)>=0){g=122;break c}if((g|0)>0){j=g;k=((g|0)<0)<<31>>31;i=1}else{j=Ls(0,0,g|0,((g|0)<0)<<31>>31|0)|0;j=(g|0)<0?j:0;k=(g|0)<0?C:0;i=g>>31}r=0-i|0;o=Ls(0,0,h|0,l|0)|0;q=C;if((A|0)>0){g=1;m=A;h=((A|0)<0)<<31>>31}else{m=Ls(0,0,A|0,((A|0)<0)<<31>>31|0)|0;g=A>>31;m=(A|0)<0?m:0;h=(A|0)<0?C:0}do if((D|0)>0|(D|0)==0&B>>>0>0){d=g;b=B;g=D}else{if((D|0)>=0){d=g;b=0;g=0;break}b=Ls(0,0,B|0,D|0)|0;d=0-g|0;g=C}while(0);if((d|0)==(r|0)){if(!i){g=122;break c}ja=yr(b|0,0,j|0,0)|0;i=C;d=yr(g|0,0,j|0,0)|0;U=C;b=yr(b|0,0,k|0,0)|0;l=C;g=yr(g|0,0,k|0,0)|0;j=C;k=Pt(d|0,0,b|0,0)|0;b=C;j=Pt(U|0,0,g|0,j|0)|0;l=Pt(j|0,C|0,l|0,0)|0;b=Pt(l|0,C|0,b|0,0)|0;l=C;i=Pt(0,k|0,ja|0,i|0)|0;j=C;k=Pt(b|0,l|0,(j>>>0<k>>>0|(j|0)==(k|0)&i>>>0<0)&1|0,0)|0;l=C;b=yr(m|0,0,o|0,0)|0;g=C;ja=yr(h|0,0,o|0,0)|0;U=C;d=yr(m|0,0,q|0,0)|0;ia=C;ha=yr(h|0,0,q|0,0)|0;h=C;d=Pt(ja|0,0,d|0,0)|0;ja=C;h=Pt(U|0,0,ha|0,h|0)|0;h=Pt(h|0,C|0,ia|0,0)|0;ja=Pt(h|0,C|0,ja|0,0)|0;h=C;g=Pt(0,d|0,b|0,g|0)|0;b=C;d=Pt(ja|0,h|0,(b>>>0<d>>>0|(b|0)==(d|0)&g>>>0<0)&1|0,0)|0;h=C;do if(l>>>0<h>>>0|(l|0)==(h|0)&k>>>0<d>>>0)g=-1;else{if(l>>>0>h>>>0|(l|0)==(h|0)&k>>>0>d>>>0){g=1;break}if(j>>>0<b>>>0|(j|0)==(b|0)&i>>>0<g>>>0){g=-1;break}g=(j>>>0>b>>>0|(j|0)==(b|0)&i>>>0>g>>>0)&1}while(0);g=_(g,r)|0}else g=r-d|0;if((g|0)>=0){g=122;break c}}c[e>>2]=u;h=c[u+12>>2]|0;o=c[f>>2]|0;D=t;B=s;d=c[h+88>>2]|0;z=c[h+92>>2]|0;h=c[h+96>>2]|0}b=w-d|0;E=x-z|0;i=y-h|0;b=yr(b|0,((b|0)<0)<<31>>31|0,$|0,aa|0)|0;g=C;E=yr(E|0,((E|0)<0)<<31>>31|0,ba|0,ca|0)|0;g=Pt(E|0,C|0,b|0,g|0)|0;b=C;i=yr(i|0,((i|0)<0)<<31>>31|0,V|0,W|0)|0;i=Pt(g|0,b|0,i|0,C|0)|0;o=(o|0)==(fa|0)?0:ga;c[f>>2]=o;b=C;g=z;E=w;n=x;p=y}if((g|0)==122)return}function Bc(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0.0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;O=i;i=i+624|0;K=O+536+40|0;M=O+588|0;N=O+576+12|0;L=O+588+9|0;m=0;n=0;r=0;w=f;a:while(1){do if((m|0)>-1){if((n|0)<=(2147483647-m|0)){m=n+m|0;break}if(true)m=25748;else m=c[(ib()|0)+64>>2]|0;c[m>>2]=75;m=-1}while(0);f=a[w>>0]|0;if(!(f<<24>>24)){J=254;break}else n=w;b:while(1){switch(f<<24>>24){case 37:{f=n;J=11;break b}case 0:{f=n;break b}default:{}}I=n+1|0;f=a[I>>0]|0;n=I}c:do if((J|0)==11)while(1){J=0;if((a[f+1>>0]|0)!=37)break c;n=n+1|0;f=f+2|0;if((a[f>>0]|0)==37)J=11;else break}while(0);v=n-w|0;if(e|0?(c[e>>2]&32|0)==0:0)Ek(w,v,e);if((n|0)!=(w|0)){n=v;w=f;continue}o=f+1|0;n=a[o>>0]|0;if(((n<<24>>24)+-48|0)>>>0<10){I=(a[f+2>>0]|0)==36;o=I?f+3|0:o;q=a[o>>0]|0;u=I?(n<<24>>24)+-48|0:-1;r=I?1:r}else{q=n;u=-1}f=q<<24>>24;d:do if((f&-32|0)==32){n=q;q=0;do{if(!(1<<f+-32&75913))break d;q=1<<(n<<24>>24)+-32|q;o=o+1|0;n=a[o>>0]|0;f=n<<24>>24}while((f&-32|0)==32)}else{n=q;q=0}while(0);do if(n<<24>>24==42){n=o+1|0;f=(a[n>>0]|0)+-48|0;if(f>>>0<10?(a[o+2>>0]|0)==36:0){c[l+(f<<2)>>2]=10;f=1;o=o+3|0;n=c[j+((a[n>>0]|0)+-48<<3)>>2]|0}else{if(r|0){m=-1;break a}if(!e){t=q;I=0;o=n;H=0;break}f=(c[g>>2]|0)+(4-1)&~(4-1);I=c[f>>2]|0;c[g>>2]=f+4;f=0;o=n;n=I}if((n|0)<0){t=q|8192;I=f;H=0-n|0}else{t=q;I=f;H=n}}else{f=(n<<24>>24)+-48|0;if(f>>>0<10){n=0;do{n=(n*10|0)+f|0;o=o+1|0;f=(a[o>>0]|0)+-48|0}while(f>>>0<10);if((n|0)<0){m=-1;break a}else{t=q;I=r;H=n}}else{t=q;I=r;H=0}}while(0);e:do if((a[o>>0]|0)==46){f=o+1|0;q=a[f>>0]|0;if(q<<24>>24!=42){if(((q<<24>>24)+-48|0)>>>0<10){n=0;o=(q<<24>>24)+-48|0}else{r=0;break}while(1){n=(n*10|0)+o|0;f=f+1|0;o=(a[f>>0]|0)+-48|0;if(o>>>0>=10){r=n;break e}}}f=o+2|0;n=(a[f>>0]|0)+-48|0;if(n>>>0<10?(a[o+3>>0]|0)==36:0){c[l+(n<<2)>>2]=10;r=c[j+((a[f>>0]|0)+-48<<3)>>2]|0;f=o+4|0;break}if(I|0){m=-1;break a}if(e|0){G=(c[g>>2]|0)+(4-1)&~(4-1);r=c[G>>2]|0;c[g>>2]=G+4}else r=0}else{r=-1;f=o}while(0);q=0;while(1){n=(a[f>>0]|0)+-65|0;if(n>>>0>57){m=-1;break a}G=f+1|0;n=a[19395+(q*58|0)+n>>0]|0;if(((n&255)+-1|0)>>>0<8){f=G;q=n&255}else break}if(!(n<<24>>24)){m=-1;break}o=(u|0)>-1;do if(n<<24>>24==19)if(o){m=-1;break a}else J=54;else{if(o){c[l+(u<<2)>>2]=n&255;F=j+(u<<3)|0;J=c[F+4>>2]|0;c[O>>2]=c[F>>2];c[O+4>>2]=J;J=54;break}if(!e){m=0;break a}Ug(O,n&255,g)}while(0);if((J|0)==54?(J=0,(e|0)==0):0){n=v;r=I;w=G;continue}E=a[f>>0]|0;E=(q|0)!=0&(E&15|0)==3?E&-33:E;o=t&-65537;F=(t&8192|0)==0?t:o;f:do switch(E|0){case 110:switch(q|0){case 0:{c[c[O>>2]>>2]=m;n=v;r=I;w=G;continue a}case 1:{c[c[O>>2]>>2]=m;n=v;r=I;w=G;continue a}case 2:{n=c[O>>2]|0;c[n>>2]=m;c[n+4>>2]=((m|0)<0)<<31>>31;n=v;r=I;w=G;continue a}case 3:{b[c[O>>2]>>1]=m;n=v;r=I;w=G;continue a}case 4:{a[c[O>>2]>>0]=m;n=v;r=I;w=G;continue a}case 6:{c[c[O>>2]>>2]=m;n=v;r=I;w=G;continue a}case 7:{n=c[O>>2]|0;c[n>>2]=m;c[n+4>>2]=((m|0)<0)<<31>>31;n=v;r=I;w=G;continue a}default:{n=v;r=I;w=G;continue a}}case 112:{t=F|8;r=r>>>0>8?r:8;u=120;J=66;break}case 88:case 120:{t=F;u=E;J=66;break}case 111:{n=c[O>>2]|0;o=c[O+4>>2]|0;if((n|0)==0&(o|0)==0)f=K;else{f=K;do{f=f+-1|0;a[f>>0]=n&7|48;n=xs(n|0,o|0,3)|0;o=C}while(!((n|0)==0&(o|0)==0))}if(!(F&8)){n=F;t=0;q=19875;J=79}else{t=K-f|0;n=F;r=(r|0)>(t|0)?r:t+1|0;t=0;q=19875;J=79}break}case 105:case 100:{f=c[O>>2]|0;n=c[O+4>>2]|0;if((n|0)<0){f=Ls(0,0,f|0,n|0)|0;n=C;c[O>>2]=f;c[O+4>>2]=n;o=1;q=19875;J=78;break f}if(!(F&2048)){o=F&1;q=(F&1|0)==0?19875:19877;J=78}else{o=1;q=19876;J=78}break}case 117:{f=c[O>>2]|0;n=c[O+4>>2]|0;o=0;q=19875;J=78;break}case 99:{a[O+536+39>>0]=c[O>>2];f=O+536+39|0;u=1;w=0;v=19875;n=K;break}case 109:{if(true)f=25748;else f=c[(ib()|0)+64>>2]|0;n=c[f>>2]|0;f=0;while(1){if((d[19885+f>>0]|0)==(n|0)){J=85;break}f=f+1|0;if((f|0)==87){n=87;f=19973;break}}if((J|0)==85)if(!f){n=19973;J=92;break f}else{n=f;f=19973}do{do{J=f;f=f+1|0}while((a[J>>0]|0)!=0);n=n+-1|0}while((n|0)!=0);n=f;J=92;break}case 115:{n=c[O>>2]|0;n=n|0?n:21777;J=92;break}case 67:{c[O+8>>2]=c[O>>2];c[O+8+4>>2]=0;c[O>>2]=O+8;f=O+8|0;r=-1;J=96;break}case 83:{f=c[O>>2]|0;if(!r){Jl(e,32,H,0,F);f=0;J=107}else J=96;break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{p=+h[O>>3];c[O+16>>2]=0;h[k>>3]=p;if((c[k+4>>2]|0)>=0)if(!(F&2048)){B=F&1;D=(F&1|0)==0?21785:21790}else{B=1;D=21787}else{p=-p;B=1;D=21784}h[k>>3]=p;A=c[k+4>>2]&2146435072;do if(A>>>0<2146435072|(A|0)==2146435072&0<0){p=+Jm(p,O+16|0)*2.0;if(p!=0.0)c[O+16>>2]=(c[O+16>>2]|0)+-1;if((E|32|0)==97){u=(E&32|0)==0?D:D+9|0;t=B|2;f=12-r|0;do if(!(r>>>0>11|(f|0)==0)){s=8.0;do{f=f+-1|0;s=s*16.0}while((f|0)!=0);if((a[u>>0]|0)==45){p=-(s+(-p-s));break}else{p=p+s-s;break}}while(0);n=c[O+16>>2]|0;f=(n|0)<0?0-n|0:n;f=Ym(f,((f|0)<0)<<31>>31,O+576+12|0)|0;if((f|0)==(O+576+12|0)){a[O+576+11>>0]=48;f=O+576+11|0}a[f+-1>>0]=(n>>31&2)+43;q=f+-2|0;a[q>>0]=E+15;o=(r|0)<1;f=O+588|0;while(1){D=~~p;n=f+1|0;a[f>>0]=d[19859+D>>0]|E&32;p=(p-+(D|0))*16.0;do if((n-M|0)==1){if((F&8|0)==0&(o&p==0.0))break;a[n>>0]=46;n=f+2|0}while(0);if(!(p!=0.0))break;else f=n}f=(r|0)!=0&(-2-M+n|0)<(r|0)?N+2+r-q|0:N-M-q+n|0;Jl(e,32,H,f+t|0,F);if(!(c[e>>2]&32))Ek(u,t,e);Jl(e,48,H,f+t|0,F^65536);if(!(c[e>>2]&32))Ek(O+588|0,n-M|0,e);Jl(e,48,f-(n-M+(N-q))|0,0,0);if(!(c[e>>2]&32))Ek(q,N-q|0,e);Jl(e,32,H,f+t|0,F^8192);f=(f+t|0)<(H|0)?H:f+t|0;break}f=(r|0)<0?6:r;if(p!=0.0){n=(c[O+16>>2]|0)+-28|0;c[O+16>>2]=n;p=p*268435456.0}else n=c[O+16>>2]|0;A=(n|0)<0?O+24|0:O+24+288|0;q=A;do{z=~~p>>>0;c[q>>2]=z;q=q+4|0;p=(p-+(z>>>0))*1.0e9}while(p!=0.0);n=c[O+16>>2]|0;if((n|0)>0){o=A;do{t=(n|0)>29?29:n;n=q+-4|0;do if(n>>>0>=o>>>0){r=0;do{y=ls(c[n>>2]|0,0,t|0)|0;y=Pt(y|0,C|0,r|0,0)|0;z=C;x=or(y|0,z|0,1e9,0)|0;c[n>>2]=x;r=dw(y|0,z|0,1e9,0)|0;n=n+-4|0}while(n>>>0>=o>>>0);if(!r)break;o=o+-4|0;c[o>>2]=r}while(0);while(1){if(q>>>0<=o>>>0)break;n=q+-4|0;if(!(c[n>>2]|0))q=n;else break}n=(c[O+16>>2]|0)-t|0;c[O+16>>2]=n}while((n|0)>0)}else o=A;if((n|0)<0){do{t=0-n|0;t=(t|0)>9?9:t;do if(o>>>0<q>>>0){r=0;n=o;do{z=c[n>>2]|0;c[n>>2]=(z>>>t)+r;r=_(z&(1<<t)+-1,1e9>>>t)|0;n=n+4|0}while(n>>>0<q>>>0);n=(c[o>>2]|0)==0?o+4|0:o;if(!r){o=n;n=q;break}c[q>>2]=r;o=n;n=q+4|0}else{o=(c[o>>2]|0)==0?o+4|0:o;n=q}while(0);q=(E|32|0)==102?A:o;q=(n-q>>2|0)>(((f+25|0)/9|0)+1|0)?q+(((f+25|0)/9|0)+1<<2)|0:n;n=(c[O+16>>2]|0)+t|0;c[O+16>>2]=n}while((n|0)<0);n=o}else n=o;do if(n>>>0<q>>>0){o=(A-n>>2)*9|0;t=c[n>>2]|0;if(t>>>0<10)break;else r=10;do{r=r*10|0;o=o+1|0}while(t>>>0>=r>>>0)}else o=0;while(0);r=f-((E|32|0)!=102?o:0)+(((f|0)!=0&(E|32|0)==103)<<31>>31)|0;if((r|0)<(((q-A>>2)*9|0)+-9|0)){x=A+4+(((r+9216|0)/9|0)+-1024<<2)|0;if((((r+9216|0)%9|0)+1|0)<9){t=10;u=((r+9216|0)%9|0)+1|0;while(1){r=t*10|0;u=u+1|0;if((u|0)==9)break;else t=r}}else r=10;v=c[x>>2]|0;w=(v>>>0)%(r>>>0)|0;t=(x+4|0)==(q|0);do if(t&(w|0)==0)r=x;else{s=(((v>>>0)/(r>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;u=(r|0)/2|0;if(w>>>0<u>>>0)p=.5;else p=t&(w|0)==(u|0)?1.0:1.5;do if(B){if((a[D>>0]|0)!=45)break;s=-s;p=-p}while(0);c[x>>2]=v-w;if(!(s+p!=s)){r=x;break}z=v-w+r|0;c[x>>2]=z;if(z>>>0>999999999){o=x;while(1){r=o+-4|0;c[o>>2]=0;if(r>>>0<n>>>0){n=n+-4|0;c[n>>2]=0}z=(c[r>>2]|0)+1|0;c[r>>2]=z;if(z>>>0>999999999)o=r;else break}}else r=x;o=(A-n>>2)*9|0;u=c[n>>2]|0;if(u>>>0<10)break;else t=10;do{t=t*10|0;o=o+1|0}while(u>>>0>=t>>>0)}while(0);y=r+4|0;z=n;n=q>>>0>y>>>0?y:q}else{z=n;n=q}u=0-o|0;y=n;while(1){if(y>>>0<=z>>>0){w=0;break}n=y+-4|0;if(!(c[n>>2]|0))y=n;else{w=1;break}}do if((E|32|0)==103){if((((f|0)!=0^1)+f|0)>(o|0)&(o|0)>-5){t=E+-1|0;f=((f|0)!=0^1)+f+-1-o|0}else{t=E+-2|0;f=((f|0)!=0^1)+f+-1|0}if(F&8|0){r=F&8;break}do if(w){n=c[y+-4>>2]|0;if(!n){q=9;break}if(!((n>>>0)%10|0)){r=10;q=0}else{q=0;break}do{r=r*10|0;q=q+1|0}while(!((n>>>0)%(r>>>0)|0|0))}else q=9;while(0);n=((y-A>>2)*9|0)+-9|0;if((t|32|0)==102){r=n-q|0;r=(r|0)<0?0:r;f=(f|0)<(r|0)?f:r;r=0;break}else{r=n+o-q|0;r=(r|0)<0?0:r;f=(f|0)<(r|0)?f:r;r=0;break}}else{t=E;r=F&8}while(0);v=f|r;q=(t|32|0)==102;if(q){n=(o|0)>0?o:0;u=0}else{n=(o|0)<0?u:o;n=Ym(n,((n|0)<0)<<31>>31,O+576+12|0)|0;if((N-n|0)<2)do{n=n+-1|0;a[n>>0]=48}while((N-n|0)<2);a[n+-1>>0]=(o>>31&2)+43;u=n+-2|0;a[u>>0]=t;n=N-u|0}x=B+1+f+((v|0)!=0&1)+n|0;Jl(e,32,H,x,F);if(!(c[e>>2]&32))Ek(D,B,e);Jl(e,48,H,x,F^65536);do if(q){q=z>>>0>A>>>0?A:z;o=q;do{n=Ym(c[o>>2]|0,0,L)|0;do if((o|0)==(q|0)){if((n|0)!=(L|0))break;a[O+588+8>>0]=48;n=O+588+8|0}else{if(n>>>0<=(O+588|0)>>>0)break;Tn(O+588|0,48,n-M|0)|0;do n=n+-1|0;while(n>>>0>(O+588|0)>>>0)}while(0);if(!(c[e>>2]&32))Ek(n,L-n|0,e);o=o+4|0}while(o>>>0<=A>>>0);do if(v|0){if(c[e>>2]&32|0)break;Ek(21819,1,e)}while(0);if((f|0)>0&o>>>0<y>>>0)while(1){n=Ym(c[o>>2]|0,0,L)|0;if(n>>>0>(O+588|0)>>>0){Tn(O+588|0,48,n-M|0)|0;do n=n+-1|0;while(n>>>0>(O+588|0)>>>0)}if(!(c[e>>2]&32))Ek(n,(f|0)>9?9:f,e);o=o+4|0;n=f+-9|0;if(!((f|0)>9&o>>>0<y>>>0)){f=n;break}else f=n}Jl(e,48,f+9|0,9,0)}else{t=w?y:z+4|0;if((f|0)>-1){r=(r|0)==0;q=z;do{n=Ym(c[q>>2]|0,0,L)|0;if((n|0)==(L|0)){a[O+588+8>>0]=48;n=O+588+8|0}do if((q|0)==(z|0)){o=n+1|0;if(!(c[e>>2]&32))Ek(n,1,e);if(r&(f|0)<1){n=o;break}if(c[e>>2]&32|0){n=o;break}Ek(21819,1,e);n=o}else{if(n>>>0<=(O+588|0)>>>0)break;Tn(O+588|0,48,n+(0-M)|0)|0;do n=n+-1|0;while(n>>>0>(O+588|0)>>>0)}while(0);o=L-n|0;if(!(c[e>>2]&32))Ek(n,(f|0)>(o|0)?o:f,e);f=f-o|0;q=q+4|0}while(q>>>0<t>>>0&(f|0)>-1)}Jl(e,48,f+18|0,18,0);if(c[e>>2]&32|0)break;Ek(u,N-u|0,e)}while(0);Jl(e,32,H,x,F^8192);f=(x|0)<(H|0)?H:x}else{q=p!=p|0.0!=0.0;n=q?0:B;Jl(e,32,H,n+3|0,o);f=c[e>>2]|0;if(!(f&32)){Ek(D,n,e);f=c[e>>2]|0}if(!(f&32))Ek(q?(E&32|0?21811:21815):E&32|0?21803:21807,3,e);Jl(e,32,H,n+3|0,F^8192);f=(n+3|0)<(H|0)?H:n+3|0}while(0);n=f;r=I;w=G;continue a}default:{f=w;o=F;u=r;w=0;v=19875;n=K}}while(0);g:do if((J|0)==66){n=c[O>>2]|0;o=c[O+4>>2]|0;q=u&32;if(!((n|0)==0&(o|0)==0)){f=K;do{f=f+-1|0;a[f>>0]=d[19859+(n&15)>>0]|q;n=xs(n|0,o|0,4)|0;o=C}while(!((n|0)==0&(o|0)==0));if((t&8|0)==0|(c[O>>2]|0)==0&(c[O+4>>2]|0)==0){n=t;t=0;q=19875;J=79}else{n=t;t=2;q=19875+(u>>4)|0;J=79}}else{f=K;n=t;t=0;q=19875;J=79}}else if((J|0)==78){f=Ym(f,n,K)|0;n=F;t=o;J=79}else if((J|0)==92){J=0;F=lj(n,0,r)|0;f=n;u=(F|0)==0?r:F-n|0;w=0;v=19875;n=(F|0)==0?n+r|0:F}else if((J|0)==96){J=0;o=0;n=0;t=f;while(1){q=c[t>>2]|0;if(!q)break;n=yl(O+528|0,q)|0;if((n|0)<0|n>>>0>(r-o|0)>>>0)break;o=n+o|0;if(r>>>0>o>>>0)t=t+4|0;else break}if((n|0)<0){m=-1;break a}Jl(e,32,H,o,F);if(!o){f=0;J=107}else{q=0;while(1){n=c[f>>2]|0;if(!n){f=o;J=107;break g}n=yl(O+528|0,n)|0;q=n+q|0;if((q|0)>(o|0)){f=o;J=107;break g}if(!(c[e>>2]&32))Ek(O+528|0,n,e);if(q>>>0>=o>>>0){f=o;J=107;break}else f=f+4|0}}}while(0);if((J|0)==107){J=0;Jl(e,32,H,f,F^8192);n=(H|0)>(f|0)?H:f;r=I;w=G;continue}if((J|0)==79){J=0;o=(r|0)>-1?n&-65537:n;n=(c[O>>2]|0)!=0|(c[O+4>>2]|0)!=0;if((r|0)!=0|n){u=(n&1^1)+(K-f)|0;u=(r|0)>(u|0)?r:u;w=t;v=q;n=K}else{f=K;u=0;w=t;v=q;n=K}}t=n-f|0;q=(u|0)<(t|0)?t:u;r=w+q|0;n=(H|0)<(r|0)?r:H;Jl(e,32,n,r,o);if(!(c[e>>2]&32))Ek(v,w,e);Jl(e,48,n,r,o^65536);Jl(e,48,q,t,0);if(!(c[e>>2]&32))Ek(f,t,e);Jl(e,32,n,r,o^8192);r=I;w=G}h:do if((J|0)==254)if(!e)if(!r)m=0;else{m=1;while(1){f=c[l+(m<<2)>>2]|0;if(!f){f=0;break}Ug(j+(m<<3)|0,f,g);m=m+1|0;if((m|0)>=10){m=1;break h}}while(1){m=m+1|0;if(f|0){m=-1;break h}if((m|0)>=10){m=1;break h}f=c[l+(m<<2)>>2]|0}}while(0);i=O;return m|0}function Cc(b,d,e,f,h,j,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0;Y=i;i=i+304|0;c[b+188>>2]=-1;li(12870);c[b+184>>2]=0;if((e|0)>0){n=0;do{c[(c[d+(n<<2)>>2]|0)+212>>2]=-1;n=n+1|0}while((n|0)!=(e|0))}o=c[b+12>>2]|0;if((o|0)>(e|0))p=b+8|0;else{if((e+1|0)!=0?(c[6435]=(c[6435]|0)+1,p=yc(((e+1|0)*244|3)+16|0)|0,(p|0)!=0):0){c[(p+4+15&-16)+-4>>2]=p;p=p+4+15&-16}else p=0;n=c[b+8>>2]|0;if((n|0)>0){o=0;do{V=p+(o*244|0)|0;W=c[b+16>>2]|0;U=W+(o*244|0)|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];V=p+(o*244|0)+16|0;U=W+(o*244|0)+16|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];V=p+(o*244|0)+32|0;U=W+(o*244|0)+32|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];V=p+(o*244|0)+48|0;U=W+(o*244|0)+48|0;c[V>>2]=c[U>>2];c[V+4>>2]=c[U+4>>2];c[V+8>>2]=c[U+8>>2];c[V+12>>2]=c[U+12>>2];bn(p+(o*244|0)+64|0,W+(o*244|0)+64|0,180)|0;o=o+1|0}while((o|0)!=(n|0))}n=c[b+16>>2]|0;if(n|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=p;c[b+12>>2]=e+1;p=b+8|0;o=e+1|0}Tn(Y|0,0,244)|0;n=c[p>>2]|0;if((n|0)<0){if((o|0)<0){o=c[b+16>>2]|0;if(o|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[o+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+12>>2]=0}do{W=c[b+16>>2]|0;V=W+(n*244|0)|0;c[V>>2]=c[Y>>2];c[V+4>>2]=c[Y+4>>2];c[V+8>>2]=c[Y+8>>2];c[V+12>>2]=c[Y+12>>2];V=W+(n*244|0)+16|0;c[V>>2]=c[Y+16>>2];c[V+4>>2]=c[Y+16+4>>2];c[V+8>>2]=c[Y+16+8>>2];c[V+12>>2]=c[Y+16+12>>2];V=W+(n*244|0)+32|0;c[V>>2]=c[Y+32>>2];c[V+4>>2]=c[Y+32+4>>2];c[V+8>>2]=c[Y+32+8>>2];c[V+12>>2]=c[Y+32+12>>2];V=W+(n*244|0)+48|0;c[V>>2]=c[Y+48>>2];c[V+4>>2]=c[Y+48+4>>2];c[V+8>>2]=c[Y+48+8>>2];c[V+12>>2]=c[Y+48+12>>2];bn(W+(n*244|0)+64|0,Y+64|0,180)|0;n=n+1|0}while((n|0)!=0)}c[p>>2]=0;if((e|0)>0){p=0;do{o=d+(p<<2)|0;n=bk(b,c[o>>2]|0,+g[m+12>>2])|0;o=c[o>>2]|0;if((!((o|0)==0?1:(c[o+236>>2]&2|0)==0)?+g[o+344>>2]!=0.0:0)?(q=c[b+16>>2]|0,c[o+504>>2]&2|0):0){t=+g[m+76>>2];_=1.0/+g[o+396>>2];u=1.0/+g[o+400>>2];r=1.0/+g[o+404>>2];ea=+g[o+4>>2];da=+g[o+8>>2];ca=+g[o+12>>2];ba=+g[o+20>>2];aa=+g[o+24>>2];$=+g[o+28>>2];Z=+g[o+36>>2];B=+g[o+40>>2];w=+g[o+44>>2];x=+g[o+328>>2];y=+g[o+332>>2];v=+g[o+336>>2];z=(_*ea*ea+u*da*da+r*ca*ca)*x+(_*ea*ba+u*da*aa+r*ca*$)*y+(_*ea*Z+u*da*B+r*ca*w)*v;A=(_*ba*ea+u*aa*da+r*$*ca)*x+(_*ba*ba+u*aa*aa+r*$*$)*y+(_*ba*Z+u*aa*B+r*$*w)*v;w=(_*Z*ea+u*B*da+r*w*ca)*x+(_*Z*ba+u*B*aa+r*w*$)*y+(_*Z*Z+u*B*B+r*w*w)*v;r=(y*w-v*A)*(y*w-v*A)+(v*z-x*w)*(v*z-x*w)+(x*A-y*z)*(x*A-y*z);if(r>t*t){r=1.0/+O(+r)*t;u=(y*w-v*A)*r;t=r*(v*z-x*w);r=r*(x*A-y*z)}else{u=y*w-v*A;t=v*z-x*w;r=x*A-y*z}ca=+g[m+12>>2];da=(u*+g[o+268>>2]+t*+g[o+284>>2]+r*+g[o+300>>2])*ca;ea=ca*(u*+g[o+272>>2]+t*+g[o+288>>2]+r*+g[o+304>>2]);g[q+(n*244|0)+224>>2]=+g[q+(n*244|0)+224>>2]-(u*+g[o+264>>2]+t*+g[o+280>>2]+r*+g[o+296>>2])*ca;g[q+(n*244|0)+228>>2]=+g[q+(n*244|0)+228>>2]-da;g[q+(n*244|0)+232>>2]=+g[q+(n*244|0)+232>>2]-ea}p=p+1|0}while((p|0)!=(e|0))}if((l|0)>0){n=0;do{W=c[j+(n<<2)>>2]|0;Ab[c[(c[W>>2]|0)+8>>2]&255](W);g[W+36>>2]=0.0;n=n+1|0}while((n|0)<(l|0))}o=c[b+168>>2]|0;if((o|0)<(l|0)?(c[b+172>>2]|0)<(l|0):0){if(!l)n=0;else{c[6435]=(c[6435]|0)+1;n=yc((l<<3|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}o=c[b+168>>2]|0}if((o|0)>0){p=0;do{U=(c[b+176>>2]|0)+(p<<3)|0;V=c[U+4>>2]|0;W=n+(p<<3)|0;c[W>>2]=c[U>>2];c[W+4>>2]=V;p=p+1|0}while((p|0)!=(o|0))}o=c[b+176>>2]|0;if(o|0){if(a[b+180>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[o+-4>>2]|0)}c[b+176>>2]=0}a[b+180>>0]=1;c[b+176>>2]=n;c[b+172>>2]=l}c[b+168>>2]=l;if((l|0)>0){s=0;n=0;do{d=c[b+176>>2]|0;e=d+(s<<3)|0;q=j+(s<<2)|0;o=c[q>>2]|0;p=c[o+44>>2]|0;if(p){o=p+64|0;do{c[p>>2]=0;p=p+4|0}while((p|0)<(o|0));o=c[q>>2]|0}if(!(a[o+20>>0]|0)){c[e>>2]=0;c[d+(s<<3)+4>>2]=0;o=0}else{Cb[c[(c[o>>2]|0)+16>>2]&127](o,e);o=c[e>>2]|0}n=o+n|0;s=s+1|0}while((s|0)<(l|0))}else n=0;p=c[b+48>>2]|0;if((p|0)<(n|0)?(c[b+52>>2]|0)<(n|0):0){if(!n)o=0;else{c[6435]=(c[6435]|0)+1;o=yc((n*152|3)+16|0)|0;if(!o)o=0;else{c[(o+4+15&-16)+-4>>2]=o;o=o+4+15&-16}p=c[b+48>>2]|0}if((p|0)>0){q=0;do{bn(o+(q*152|0)|0,(c[b+56>>2]|0)+(q*152|0)|0,152)|0;q=q+1|0}while((q|0)!=(p|0))}p=c[b+56>>2]|0;if(p|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=o;c[b+52>>2]=n}c[b+48>>2]=n;if((l|0)>0){n=c[b+176>>2]|0;V=0;W=0;while(1){U=n+(W<<3)|0;if(!(c[U>>2]|0))o=0;else{n=c[b+56>>2]|0;K=n+(V*152|0)|0;L=j+(W<<2)|0;M=c[L>>2]|0;P=c[M+28>>2]|0;Q=c[M+32>>2]|0;R=bk(b,P,+g[m+12>>2])|0;S=bk(b,Q,+g[m+12>>2])|0;T=c[b+16>>2]|0;o=c[M+24>>2]|0;o=(o|0)>0?o:c[m+20>>2]|0;if((o|0)>(c[b+184>>2]|0))c[b+184>>2]=o;if((c[U>>2]|0)>0){p=0;do{Tn(K+(p*152|0)|0,0,152)|0;g[K+(p*152|0)+120>>2]=-3402823466385288598117041.0e14;g[K+(p*152|0)+124>>2]=3402823466385288598117041.0e14;g[K+(p*152|0)+100>>2]=0.0;g[K+(p*152|0)+96>>2]=0.0;c[K+(p*152|0)+144>>2]=R;c[K+(p*152|0)+148>>2]=S;c[K+(p*152|0)+136>>2]=o;p=p+1|0}while((p|0)<(c[U>>2]|0))}c[T+(R*244|0)+64>>2]=0;c[T+(R*244|0)+64+4>>2]=0;c[T+(R*244|0)+64+8>>2]=0;c[T+(R*244|0)+64+12>>2]=0;c[T+(R*244|0)+64+16>>2]=0;c[T+(R*244|0)+64+20>>2]=0;c[T+(R*244|0)+64+24>>2]=0;c[T+(R*244|0)+64+28>>2]=0;c[T+(R*244|0)+144>>2]=0;c[T+(R*244|0)+144+4>>2]=0;c[T+(R*244|0)+144+8>>2]=0;c[T+(R*244|0)+144+12>>2]=0;c[T+(R*244|0)+144+16>>2]=0;c[T+(R*244|0)+144+20>>2]=0;c[T+(R*244|0)+144+24>>2]=0;c[T+(R*244|0)+144+28>>2]=0;c[T+(S*244|0)+64>>2]=0;c[T+(S*244|0)+64+4>>2]=0;c[T+(S*244|0)+64+8>>2]=0;c[T+(S*244|0)+64+12>>2]=0;c[T+(S*244|0)+64+16>>2]=0;c[T+(S*244|0)+64+20>>2]=0;c[T+(S*244|0)+64+24>>2]=0;c[T+(S*244|0)+64+28>>2]=0;c[T+(S*244|0)+144>>2]=0;c[T+(S*244|0)+144+4>>2]=0;c[T+(S*244|0)+144+8>>2]=0;c[T+(S*244|0)+144+12>>2]=0;c[T+(S*244|0)+144+16>>2]=0;c[T+(S*244|0)+144+20>>2]=0;c[T+(S*244|0)+144+24>>2]=0;c[T+(S*244|0)+144+28>>2]=0;g[Y+248>>2]=1.0/+g[m+12>>2];c[Y+248+4>>2]=c[m+32>>2];c[Y+248+8>>2]=n+(V*152|0)+16;c[Y+248+12>>2]=K;c[Y+248+16>>2]=n+(V*152|0)+48;c[Y+248+20>>2]=n+(V*152|0)+32;c[Y+248+24>>2]=38;c[Y+248+28>>2]=n+(V*152|0)+112;J=n+(V*152|0)+116|0;c[J>>2]=c[m+40>>2];c[Y+248+52>>2]=c[m+4>>2];c[Y+248+32>>2]=J;c[Y+248+36>>2]=n+(V*152|0)+120;c[Y+248+40>>2]=n+(V*152|0)+124;c[Y+248+48>>2]=c[m+20>>2];J=c[L>>2]|0;Cb[c[(c[J>>2]|0)+20>>2]&127](J,Y+248|0);if((c[U>>2]|0)>0){J=0;do{n=K+(J*152|0)+124|0;r=+g[(c[L>>2]|0)+16>>2];if(+g[n>>2]>=r)g[n>>2]=r;n=K+(J*152|0)+120|0;if(+g[n>>2]<=-r)g[n>>2]=-r;c[K+(J*152|0)+132>>2]=M;I=K+(J*152|0)|0;n=K+(J*152|0)+64|0;o=c[M+28>>2]|0;da=+g[I>>2];ba=+g[I+4>>2];B=+g[I+8>>2];ca=(da*+g[o+280>>2]+ba*+g[o+284>>2]+B*+g[o+288>>2])*+g[o+548>>2];r=(da*+g[o+296>>2]+ba*+g[o+300>>2]+B*+g[o+304>>2])*+g[o+552>>2];g[n>>2]=(+g[o+264>>2]*da+ +g[o+268>>2]*ba+ +g[o+272>>2]*B)*+g[o+544>>2];g[n+4>>2]=ca;g[n+8>>2]=r;g[n+12>>2]=0.0;n=K+(J*152|0)+32|0;o=K+(J*152|0)+80|0;H=c[M+32>>2]|0;r=+g[n>>2];ca=+g[n+4>>2];B=+g[n+8>>2];ba=(r*+g[H+280>>2]+ca*+g[H+284>>2]+B*+g[H+288>>2])*+g[H+548>>2];da=(r*+g[H+296>>2]+ca*+g[H+300>>2]+B*+g[H+304>>2])*+g[H+552>>2];g[o>>2]=(+g[H+264>>2]*r+ +g[H+268>>2]*ca+ +g[H+272>>2]*B)*+g[H+544>>2];g[o+4>>2]=ba;g[o+8>>2]=da;g[o+12>>2]=0.0;o=K+(J*152|0)+16|0;da=+g[P+344>>2];ba=+g[o>>2];ca=+g[o+4>>2];r=+g[o+8>>2];t=+g[I>>2];u=+g[I+4>>2];v=+g[I+8>>2];I=K+(J*152|0)+48|0;ea=+g[Q+344>>2];w=+g[I>>2];x=+g[I+4>>2];y=+g[I+8>>2];z=+g[n>>2];A=+g[n+4>>2];B=ba*da*ba+ca*da*ca+r*da*r+(t*(+g[P+264>>2]*t+ +g[P+268>>2]*u+ +g[P+272>>2]*v)+u*(t*+g[P+280>>2]+u*+g[P+284>>2]+v*+g[P+288>>2])+v*(t*+g[P+296>>2]+u*+g[P+300>>2]+v*+g[P+304>>2]))+(w*ea*w+x*ea*x+y*ea*y)+(z*(+g[Q+264>>2]*z+ +g[Q+268>>2]*A+ +g[Q+272>>2]*B)+A*(z*+g[Q+280>>2]+A*+g[Q+284>>2]+B*+g[Q+288>>2])+B*(z*+g[Q+296>>2]+A*+g[Q+300>>2]+B*+g[Q+304>>2]));I=+N(+B)>1.1920928955078125e-07;B=I?1.0/B:0.0;g[K+(J*152|0)+108>>2]=B;if(!(c[T+(R*244|0)+240>>2]|0)){p=0;q=0;d=0;D=0;E=0;F=0}else{p=c[T+(R*244|0)+208>>2]|0;q=c[T+(R*244|0)+212>>2]|0;d=c[T+(R*244|0)+216>>2]|0;D=c[T+(R*244|0)+224>>2]|0;E=c[T+(R*244|0)+228>>2]|0;F=c[T+(R*244|0)+232>>2]|0}if(!(c[T+(S*244|0)+240>>2]|0)){e=0;s=0;C=0;G=0;H=0;I=0}else{e=c[T+(S*244|0)+208>>2]|0;s=c[T+(S*244|0)+212>>2]|0;C=c[T+(S*244|0)+216>>2]|0;G=c[T+(S*244|0)+224>>2]|0;H=c[T+(S*244|0)+228>>2]|0;I=c[T+(S*244|0)+232>>2]|0}da=(c[k>>2]=p,+g[k>>2])+ +g[P+312>>2];ca=(c[k>>2]=q,+g[k>>2])+ +g[P+316>>2];ca=da*+g[o>>2]+ca*+g[o+4>>2]+((c[k>>2]=d,+g[k>>2])+ +g[P+320>>2])*r;da=(c[k>>2]=D,+g[k>>2])+ +g[P+328>>2];ba=(c[k>>2]=E,+g[k>>2])+ +g[P+332>>2];ba=ca+(da*t+ba*u+((c[k>>2]=F,+g[k>>2])+ +g[P+336>>2])*v);da=(c[k>>2]=e,+g[k>>2])+ +g[Q+312>>2];ca=(c[k>>2]=s,+g[k>>2])+ +g[Q+316>>2];ca=da*w+ca*x+((c[k>>2]=C,+g[k>>2])+ +g[Q+320>>2])*y;da=(c[k>>2]=G,+g[k>>2])+ +g[Q+328>>2];ea=(c[k>>2]=H,+g[k>>2])+ +g[Q+332>>2];H=K+(J*152|0)+112|0;g[H>>2]=+g[H>>2]*B+B*(0.0-+g[Y+248+52>>2]*(ba+(ca+(da*z+ea*A+((c[k>>2]=I,+g[k>>2])+ +g[Q+336>>2])*+g[n+8>>2]))));g[K+(J*152|0)+100>>2]=0.0;J=J+1|0}while((J|0)<(c[U>>2]|0))}o=c[b+176>>2]|0;n=o;o=c[o+(W<<3)>>2]|0}W=W+1|0;if((W|0)>=(l|0))break;else V=o+V|0}}mc[c[(c[b>>2]|0)+28>>2]&127](b,f,h,m);d=c[b+48>>2]|0;e=c[b+28>>2]|0;s=c[b+68>>2]|0;o=c[b+128>>2]|0;if((o|0)<(d|0)?(c[b+132>>2]|0)<(d|0):0){if(!d)n=0;else{c[6435]=(c[6435]|0)+1;n=yc((d<<2|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}o=c[b+128>>2]|0}q=c[b+136>>2]|0;if((o|0)<=0)if(!q)o=b+140|0;else X=99;else{p=0;do{c[n+(p<<2)>>2]=c[q+(p<<2)>>2];p=p+1|0}while((p|0)!=(o|0));X=99}if((X|0)==99){if(a[b+140>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[b+136>>2]=0;o=b+140|0}a[o>>0]=1;c[b+136>>2]=n;c[b+132>>2]=d}c[b+128>>2]=d;if(!(c[m+64>>2]&16)){o=c[b+108>>2]|0;if((o|0)<(e|0)?(c[b+112>>2]|0)<(e|0):0){if(!e)n=0;else{c[6435]=(c[6435]|0)+1;n=yc((e<<2|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}o=c[b+108>>2]|0}q=c[b+116>>2]|0;if((o|0)<=0)if(!q)o=b+120|0;else X=129;else{p=0;do{c[n+(p<<2)>>2]=c[q+(p<<2)>>2];p=p+1|0}while((p|0)!=(o|0));X=129}if((X|0)==129){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[b+116>>2]=0;o=b+120|0}a[o>>0]=1;c[b+116>>2]=n;c[b+112>>2]=e}c[b+108>>2]=e}else{o=c[b+108>>2]|0;if((o|0)<(e<<1|0)?(c[b+112>>2]|0)<(e<<1|0):0){if(!e)n=0;else{c[6435]=(c[6435]|0)+1;n=yc((e<<3|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}o=c[b+108>>2]|0}q=c[b+116>>2]|0;if((o|0)<=0)if(!q)o=b+120|0;else X=114;else{p=0;do{c[n+(p<<2)>>2]=c[q+(p<<2)>>2];p=p+1|0}while((p|0)!=(o|0));X=114}if((X|0)==114){if(a[b+120>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[b+116>>2]=0;o=b+120|0}a[o>>0]=1;c[b+116>>2]=n;c[b+112>>2]=e<<1}c[b+108>>2]=e<<1}o=c[b+148>>2]|0;if((o|0)<(s|0)?(c[b+152>>2]|0)<(s|0):0){if(!s)n=0;else{c[6435]=(c[6435]|0)+1;n=yc((s<<2|3)+16|0)|0;if(!n)n=0;else{c[(n+4+15&-16)+-4>>2]=n;n=n+4+15&-16}o=c[b+148>>2]|0}q=c[b+156>>2]|0;if((o|0)<=0)if(!q)o=b+160|0;else X=144;else{p=0;do{c[n+(p<<2)>>2]=c[q+(p<<2)>>2];p=p+1|0}while((p|0)!=(o|0));X=144}if((X|0)==144){if(a[b+160>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[q+-4>>2]|0)}c[b+156>>2]=0;o=b+160|0}a[o>>0]=1;c[b+156>>2]=n;c[b+152>>2]=s}c[b+148>>2]=s;if((d|0)>0){n=c[b+136>>2]|0;o=0;do{c[n+(o<<2)>>2]=o;o=o+1|0}while((o|0)!=(d|0))}if((e|0)>0){n=c[b+116>>2]|0;o=0;do{c[n+(o<<2)>>2]=o;o=o+1|0}while((o|0)!=(e|0))}if((s|0)>0){n=c[b+156>>2]|0;o=0;do{c[n+(o<<2)>>2]=o;o=o+1|0}while((o|0)!=(s|0))}n=c[2357]|0;b=(c[n+16>>2]|0)+-1|0;c[n+16>>2]=b;if(b|0){i=Y;return 0.0}do if(c[n+4>>2]|0){tb(Y+248|0,0)|0;b=c[6434]|0;g[n+8>>2]=+g[n+8>>2]+ +(((c[Y+248+4>>2]|0)-(c[b+4>>2]|0)+(((c[Y+248>>2]|0)-(c[b>>2]|0)|0)*1e6|0)-(c[n+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[n+16>>2]|0)){n=c[2357]|0;break}else{i=Y;return 0.0}}while(0);c[2357]=c[n+20>>2];i=Y;return 0.0}function Dc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0.0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0;J=i;i=i+240|0;if((e|0)<1){f=c[b+12>>2]|0;if(f|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=c[b+32>>2]|0;if(f|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;f=c[b+52>>2]|0;if(f|0){if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;i=J;return}c[J+24+32>>2]=0;c[J+24+36>>2]=0;c[J+24+40>>2]=0;c[J+24+44>>2]=256;c[J+24+48>>2]=0;c[J+24+52>>2]=0;c[J+24+56>>2]=0;c[J+24+60>>2]=256;c[J+24+64>>2]=0;c[J+24+68>>2]=0;c[J+24+72>>2]=0;c[J+24+76>>2]=256;a[J+24+96>>0]=1;F=J+24+92|0;c[F>>2]=0;c[J+24+84>>2]=0;c[J+24+88>>2]=0;m=0;n=-246811958;v=-246811958;s=-246811958;r=1900671690;z=1900671690;u=1900671690;o=d;while(1){E=+g[o>>2];j=+g[o+4>>2];p=+g[o+8>>2];G=E<(c[k>>2]=r,+g[k>>2]);f=(g[k>>2]=E,c[k>>2]|0);r=G?f:r;G=j<(c[k>>2]=u,+g[k>>2]);h=(g[k>>2]=j,c[k>>2]|0);u=G?h:u;G=p<(c[k>>2]=z,+g[k>>2]);l=(g[k>>2]=p,c[k>>2]|0);z=G?l:z;n=(c[k>>2]=n,+g[k>>2])<E?f:n;s=(c[k>>2]=s,+g[k>>2])<j?h:s;v=(c[k>>2]=v,+g[k>>2])<p?l:v;m=m+1|0;if((m|0)==(e|0))break;else o=o+16|0}B=(c[k>>2]=n,+g[k>>2]);A=(c[k>>2]=r,+g[k>>2]);y=(c[k>>2]=s,+g[k>>2]);x=(c[k>>2]=u,+g[k>>2]);w=(c[k>>2]=v,+g[k>>2]);t=(c[k>>2]=z,+g[k>>2]);h=B-A<y-x?(y-x<w-t?2:1):B-A<w-t?2:0;c[J+24+112>>2]=h;f=B-A<y-x?(B-A<w-t?0:2):y-x<w-t?1:2;if((f|0)==(h|0))f=((h+1|0)>>>0)%3|0;c[J+24+104>>2]=f;G=(h^3)-f|0;c[J+24+108>>2]=G;if(((G+1|0)%3|0|0)==(h|0)){j=(B-A)*9.788566967472434e-05;p=(y-x)*9.788566967472434e-05;q=(w-t)*9.788566967472434e-05}else{j=-((B-A)*9.788566967472434e-05);p=-((y-x)*9.788566967472434e-05);q=-((w-t)*9.788566967472434e-05)}g[J+24>>2]=j;g[J+24+4>>2]=p;g[J+24+8>>2]=q;g[J+24+12>>2]=0.0;E=j!=0.0?1.0/j:j;D=p!=0.0?1.0/p:p;C=q!=0.0?1.0/q:q;g[J+24+16>>2]=(B+A)*.5;g[J+24+20>>2]=(y+x)*.5;g[J+24+24>>2]=(w+t)*.5;g[J+24+28>>2]=0.0;r=J+216+16|0;a[r>>0]=1;s=J+216+12|0;c[s>>2]=0;c[J+216+4>>2]=0;c[J+216+8>>2]=0;c[6435]=(c[6435]|0)+1;f=yc((e<<4|3)+16|0)|0;if(!f)m=0;else{c[(f+4+15&-16)+-4>>2]=f;m=f+4+15&-16}h=c[J+216+4>>2]|0;l=c[s>>2]|0;if((h|0)<=0){if(l|0)I=26}else{f=0;do{I=m+(f<<4)|0;G=l+(f<<4)|0;c[I>>2]=c[G>>2];c[I+4>>2]=c[G+4>>2];c[I+8>>2]=c[G+8>>2];c[I+12>>2]=c[G+12>>2];f=f+1|0}while((f|0)!=(h|0));I=26}if((I|0)==26){if(a[r>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[s>>2]=0}a[r>>0]=1;c[s>>2]=m;c[J+216+8>>2]=e;c[m>>2]=c[J+200>>2];c[m+4>>2]=c[J+200+4>>2];c[m+8>>2]=c[J+200+8>>2];c[m+12>>2]=c[J+200+12>>2];if((e|0)!=1){f=1;do{G=(c[s>>2]|0)+(f<<4)|0;c[G>>2]=c[J+200>>2];c[G+4>>2]=c[J+200+4>>2];c[G+8>>2]=c[J+200+8>>2];c[G+12>>2]=c[J+200+12>>2];f=f+1|0}while((f|0)!=(e|0))}c[J+216+4>>2]=e;h=J+184+(c[J+24+108>>2]<<2)|0;l=c[s>>2]|0;m=J+184+(c[J+24+112>>2]<<2)|0;n=J+184+(c[J+24+104>>2]<<2)|0;j=+g[J+24+16>>2];p=+g[J+24+20>>2];q=+g[J+24+24>>2];o=0;f=d;while(1){d=c[f>>2]|0;c[J+184>>2]=d;G=c[f+4>>2]|0;c[J+184+4>>2]=G;y=(c[k>>2]=d,+g[k>>2])-j;A=D*((c[k>>2]=G,+g[k>>2])-p);B=C*(+g[f+8>>2]-q);g[J+184>>2]=E*y;g[J+184+4>>2]=A;g[J+184+8>>2]=B;g[J+184+12>>2]=0.0;c[l+(o<<4)>>2]=~~+g[h>>2];c[l+(o<<4)+4>>2]=~~+g[m>>2];c[l+(o<<4)+8>>2]=~~+g[n>>2];c[l+(o<<4)+12>>2]=o;o=o+1|0;if((o|0)==(e|0))break;else f=f+16|0}if((e|0)>1)ch(J+216|0,0,e+-1|0);c[J+24+36>>2]=c[J+24+32>>2];c[J+24+40>>2]=0;c[J+24+44>>2]=e;f=c[J+24+84>>2]|0;if((f|0)<(e|0)){if((c[J+24+88>>2]|0)<(e|0)){if(!e){h=0;l=f}else{c[6435]=(c[6435]|0)+1;h=yc((e<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}l=c[J+24+84>>2]|0}if((l|0)>0){m=0;do{c[h+(m<<2)>>2]=c[(c[F>>2]|0)+(m<<2)>>2];m=m+1|0}while((m|0)!=(l|0))}l=c[F>>2]|0;if(l|0){if(a[J+24+96>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[F>>2]=0}a[J+24+96>>0]=1;c[F>>2]=h;c[J+24+88>>2]=e}do{c[(c[F>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)!=(e|0))}c[J+24+84>>2]=e;n=0;do{f=c[J+24+40>>2]|0;if(!f){f=c[J+24+36>>2]|0;if(!f){c[6435]=(c[6435]|0)+1;f=yc(31)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[J+24+44>>2]|0;c[f+4>>2]=h;l=f+8|0;c[l>>2]=0;c[6435]=(c[6435]|0)+1;h=yc((h*112|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[f>>2]=h;c[l>>2]=c[J+24+32>>2];c[J+24+32>>2]=f}else c[J+24+36>>2]=c[f+8>>2];m=c[f+4>>2]|0;f=c[f>>2]|0;if((m|0)>0){h=0;l=f;do{h=h+1|0;G=l;l=l+112|0;c[G>>2]=(h|0)<(m|0)?l:0}while((h|0)!=(m|0))}}c[J+24+40>>2]=c[f>>2];G=f+104|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[G>>2]=-1;c[f+8>>2]=0;d=f+88|0;z=(c[s>>2]|0)+(n<<4)|0;c[d>>2]=c[z>>2];c[d+4>>2]=c[z+4>>2];c[d+8>>2]=c[z+8>>2];c[d+12>>2]=c[z+12>>2];c[G>>2]=-1;c[(c[F>>2]|0)+(n<<2)>>2]=f;n=n+1|0}while((n|0)<(e|0));f=c[s>>2]|0;if(f|0){if(a[r>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[s>>2]=0}a[r>>0]=1;c[s>>2]=0;c[J+216+4>>2]=0;c[J+216+8>>2]=0;c[J+24+52>>2]=c[J+24+48>>2];c[J+24+56>>2]=0;c[J+24+60>>2]=e*6;c[J+24+116>>2]=0;c[J+24+120>>2]=0;c[J+24+100>>2]=-3;c[J+184>>2]=0;c[J+184+4>>2]=0;c[J+184+8>>2]=0;c[J+184+12>>2]=0;vc(J+24|0,0,e,J+184|0);c[J+24+124>>2]=c[J+184>>2];f=c[s>>2]|0;if(f|0){if(a[r>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[s>>2]=0}f=c[b+4>>2]|0;if((f|0)<0){if((c[b+8>>2]|0)<0){h=c[b+12>>2]|0;if(h|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=0;c[b+8>>2]=0}do{G=(c[b+12>>2]|0)+(f<<4)|0;c[G>>2]=c[J+168>>2];c[G+4>>2]=c[J+168+4>>2];c[G+8>>2]=c[J+168+8>>2];c[G+12>>2]=c[J+168+12>>2];f=f+1|0}while((f|0)!=0)}c[b+4>>2]=0;c[J+152>>2]=0;c[J+152+4>>2]=0;c[J+152+8>>2]=0;f=c[b+24>>2]|0;if((f|0)<0){if((c[b+28>>2]|0)<0){h=c[b+32>>2]|0;if(h|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+28>>2]=0}do{G=(c[b+32>>2]|0)+(f*12|0)|0;c[G>>2]=c[J+152>>2];c[G+4>>2]=c[J+152+4>>2];c[G+8>>2]=c[J+152+8>>2];f=f+1|0}while((f|0)!=0)}c[b+24>>2]=0;h=c[b+44>>2]|0;if((h|0)<0){f=c[b+52>>2]|0;do if((c[b+48>>2]|0)<0){if(!f){a[b+56>>0]=1;c[b+52>>2]=0;c[b+48>>2]=0;f=0;break}if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}a[b+56>>0]=1;c[b+52>>2]=0;c[b+48>>2]=0;f=0}while(0);Tn(f+(h<<2)|0,0,_(h,-4)|0)|0}c[b+44>>2]=0;f=c[J+24+124>>2]|0;if((c[f+104>>2]|0)<0){c[f+104>>2]=0;c[6435]=(c[6435]|0)+1;r=yc(23)|0;c[(r+4+15&-16)+-4>>2]=r;c[(r+4+15&-16)>>2]=f;G=0;m=1;l=1;r=r+4+15&-16;while(1){if((c[f+100>>2]|0)>-1){g[J+216+(c[J+24+108>>2]<<2)>>2]=+(c[f+88>>2]|0);g[J+216+(c[J+24+112>>2]<<2)>>2]=+(c[f+92>>2]|0);j=+(c[f+96>>2]|0)}else{e=f+24|0;d=f+32|0;j=+on(c[e>>2]|0,c[e+4>>2]|0,c[d>>2]|0,c[d+4>>2]|0);d=f+72|0;e=f+80|0;F=c[e>>2]|0;e=c[e+4>>2]|0;j=j/+on(c[d>>2]|0,c[d+4>>2]|0,F,e);g[J+216+(c[J+24+108>>2]<<2)>>2]=j;z=f+40|0;v=f+48|0;j=+on(c[z>>2]|0,c[z+4>>2]|0,c[v>>2]|0,c[v+4>>2]|0);j=j/+on(c[d>>2]|0,c[d+4>>2]|0,F,e);g[J+216+(c[J+24+112>>2]<<2)>>2]=j;v=f+56|0;z=f+64|0;j=+on(c[v>>2]|0,c[v+4>>2]|0,c[z>>2]|0,c[z+4>>2]|0);j=j/+on(c[d>>2]|0,c[d+4>>2]|0,F,e)}g[J+216+(c[J+24+104>>2]<<2)>>2]=j;j=+g[J+216>>2]*+g[J+24>>2]+ +g[J+24+16>>2];p=+g[J+216+4>>2]*+g[J+24+4>>2]+ +g[J+24+20>>2];q=+g[J+216+8>>2]*+g[J+24+8>>2]+ +g[J+24+24>>2];h=c[b+4>>2]|0;if((h|0)==(c[b+8>>2]|0)?(H=h|0?h<<1:1,(h|0)<(H|0)):0){if(!H)o=0;else{c[6435]=(c[6435]|0)+1;h=yc((H<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}o=h;h=c[b+4>>2]|0}if((h|0)>0){n=0;do{e=o+(n<<4)|0;F=(c[b+12>>2]|0)+(n<<4)|0;c[e>>2]=c[F>>2];c[e+4>>2]=c[F+4>>2];c[e+8>>2]=c[F+8>>2];c[e+12>>2]=c[F+12>>2];n=n+1|0}while((n|0)!=(h|0))}h=c[b+12>>2]|0;if(h|0){if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;c[b+12>>2]=o;c[b+8>>2]=H;h=c[b+4>>2]|0}F=c[b+12>>2]|0;g[F+(h<<4)>>2]=j;g[F+(h<<4)+4>>2]=p;g[F+(h<<4)+8>>2]=q;g[F+(h<<4)+12>>2]=0.0;c[b+4>>2]=(c[b+4>>2]|0)+1;F=c[f+8>>2]|0;if(!F)n=r;else{e=F;f=-1;z=r;d=-1;while(1){v=e+20|0;h=c[v>>2]|0;if((h|0)<0){u=c[b+24>>2]|0;c[J+12>>2]=0;c[J+12+4>>2]=0;c[J+12+8>>2]=0;do if((u|0)==(c[b+28>>2]|0)){r=u|0?u<<1:1;if((u|0)>=(r|0)){h=u;break}if(!r){h=0;n=u}else{c[6435]=(c[6435]|0)+1;h=yc((r*12|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}n=c[b+24>>2]|0}if((n|0)>0){o=0;do{s=h+(o*12|0)|0;K=(c[b+32>>2]|0)+(o*12|0)|0;c[s>>2]=c[K>>2];c[s+4>>2]=c[K+4>>2];c[s+8>>2]=c[K+8>>2];o=o+1|0}while((o|0)!=(n|0))}n=c[b+32>>2]|0;if(n|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=h;c[b+28>>2]=r;h=c[b+24>>2]|0}else h=u;while(0);h=(c[b+32>>2]|0)+(h*12|0)|0;c[h>>2]=c[J+12>>2];c[h+4>>2]=c[J+12+4>>2];c[h+8>>2]=c[J+12+8>>2];h=(c[b+24>>2]|0)+1|0;c[b+24>>2]=h;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;do if((h|0)==(c[b+28>>2]|0)){r=h|0?h<<1:1;if((h|0)>=(r|0))break;if(!r)o=0;else{c[6435]=(c[6435]|0)+1;h=yc((r*12|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}o=h;h=c[b+24>>2]|0}if((h|0)>0){n=0;do{K=o+(n*12|0)|0;s=(c[b+32>>2]|0)+(n*12|0)|0;c[K>>2]=c[s>>2];c[K+4>>2]=c[s+4>>2];c[K+8>>2]=c[s+8>>2];n=n+1|0}while((n|0)!=(h|0))}h=c[b+32>>2]|0;if(h|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=o;c[b+28>>2]=r;h=c[b+24>>2]|0}while(0);s=(c[b+32>>2]|0)+(h*12|0)|0;c[s>>2]=c[J>>2];c[s+4>>2]=c[J+4>>2];c[s+8>>2]=c[J+8>>2];c[b+24>>2]=(c[b+24>>2]|0)+1;s=c[b+32>>2]|0;c[v>>2]=u;c[(c[e+8>>2]|0)+20>>2]=u+1;c[s+(u*12|0)+4>>2]=1;c[s+((u+1|0)*12|0)+4>>2]=-1;r=c[e+12>>2]|0;h=c[r+104>>2]|0;if((h|0)<0){c[r+104>>2]=l;do if((l|0)==(m|0)){o=m|0?m<<1:1;if((m|0)>=(o|0)){n=z;break}do if(!o)n=0;else{c[6435]=(c[6435]|0)+1;h=yc((o<<2|3)+16|0)|0;if(!h){n=0;break}c[(h+4+15&-16)+-4>>2]=h;n=h+4+15&-16}while(0);if((m|0)<=0){if(!z){m=o;break}}else{h=0;do{c[n+(h<<2)>>2]=c[z+(h<<2)>>2];h=h+1|0}while((h|0)!=(m|0))}c[6436]=(c[6436]|0)+1;hd(c[z+-4>>2]|0);m=o}else n=z;while(0);c[n+(l<<2)>>2]=r;h=l;l=l+1|0}else n=z;c[s+(u*12|0)+8>>2]=h;c[s+((u+1|0)*12|0)+8>>2]=G;h=c[v>>2]|0}else n=z;if((d|0)>-1)c[(c[b+32>>2]|0)+(h*12|0)>>2]=d-h;else f=h;e=c[e>>2]|0;if((e|0)==(F|0))break;else{z=n;d=h}}c[(c[b+32>>2]|0)+(f*12|0)>>2]=h-f}h=G+1|0;if((h|0)>=(l|0))break;f=c[n+(h<<2)>>2]|0;G=h;r=n}if((G|0)>-1){v=0;while(1){s=c[(c[n+(v<<2)>>2]|0)+8>>2]|0;if(s|0){u=s;do{r=u+20|0;f=c[r>>2]|0;if((f|0)>-1){h=c[b+44>>2]|0;do if((h|0)==(c[b+48>>2]|0)){o=h|0?h<<1:1;if((h|0)>=(o|0))break;if(!o)f=0;else{c[6435]=(c[6435]|0)+1;f=yc((o<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[b+44>>2]|0}m=c[b+52>>2]|0;if((h|0)<=0){if(m)I=173}else{l=0;do{c[f+(l<<2)>>2]=c[m+(l<<2)>>2];l=l+1|0}while((l|0)!=(h|0));I=173}if((I|0)==173){I=0;if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}c[b+52>>2]=0;h=c[b+44>>2]|0}a[b+56>>0]=1;c[b+52>>2]=f;c[b+48>>2]=o;f=c[r>>2]|0}while(0);c[(c[b+52>>2]|0)+(h<<2)>>2]=f;c[b+44>>2]=(c[b+44>>2]|0)+1;f=u;do{c[f+20>>2]=-1;f=c[(c[f+8>>2]|0)+4>>2]|0}while((f|0)!=(u|0))}u=c[u>>2]|0}while((u|0)!=(s|0))}if((v|0)==(G|0))break;else v=v+1|0}}if(n|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}}Zi(J+24|0);i=J;return}function Ec(b){b=b|0;var d=0,e=0.0,f=0.0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0;I=i;i=i+64|0;if(!(a[b+356>>0]|0)){b=a[b+312>>0]|0;b=b<<24>>24!=0;i=I;return b|0}c[b+336>>2]=0;c[b+336+4>>2]=0;c[b+336+8>>2]=0;c[b+336+12>>2]=0;a[b+336+16>>0]=0;h=a[b+332>>0]|0;a[b+332>>0]=h&-16;a[b+356>>0]=0;switch(c[b>>2]|0){case 0:{a[b+312>>0]=0;b=0;b=b<<24>>24!=0;i=I;return b|0}case 1:{c[b+244>>2]=c[b+84>>2];c[b+244+4>>2]=c[b+84+4>>2];c[b+244+8>>2]=c[b+84+8>>2];c[b+244+12>>2]=c[b+84+12>>2];c[b+260>>2]=c[b+164>>2];c[b+260+4>>2]=c[b+164+4>>2];c[b+260+8>>2]=c[b+164+8>>2];c[b+260+12>>2]=c[b+164+12>>2];E=+g[b+248>>2]-+g[b+264>>2];F=+g[b+252>>2]-+g[b+268>>2];g[b+276>>2]=+g[b+244>>2]-+g[b+260>>2];g[b+280>>2]=E;g[b+284>>2]=F;g[b+288>>2]=0.0;c[b+336>>2]=0;c[b+336+4>>2]=0;c[b+336+8>>2]=0;c[b+336+12>>2]=0;a[b+336+16>>0]=0;a[b+332>>0]=h&-16;g[b+336>>2]=1.0;g[b+340>>2]=0.0;g[b+344>>2]=0.0;g[b+348>>2]=0.0;a[b+312>>0]=1;b=1;b=b<<24>>24!=0;i=I;return b|0}case 2:{e=+g[b+4>>2];f=+g[b+8>>2];j=+g[b+12>>2];k=+g[b+20>>2]-e;l=+g[b+24>>2]-f;m=+g[b+28>>2]-j;do if((0.0-e)*k+(0.0-f)*l+(0.0-j)*m>0.0)if((0.0-e)*k+(0.0-f)*l+(0.0-j)*m<k*k+l*l+m*m){a[b+332>>0]=h&-16|3;h=h&-16|3;f=((0.0-e)*k+(0.0-f)*l+(0.0-j)*m)/(k*k+l*l+m*m);break}else{a[b+332>>0]=h&-16|2;h=h&-16|2;f=1.0;break}else{a[b+332>>0]=h&-16|1;h=h&-16|1;f=0.0}while(0);e=1.0-f;g[b+336>>2]=e;g[b+340>>2]=f;g[b+344>>2]=0.0;g[b+348>>2]=0.0;A=+g[b+84>>2];C=+g[b+88>>2];E=+g[b+92>>2];A=A+f*(+g[b+100>>2]-A);C=C+f*(+g[b+104>>2]-C);E=E+f*(+g[b+108>>2]-E);g[b+244>>2]=A;g[b+248>>2]=C;g[b+252>>2]=E;g[b+256>>2]=0.0;B=+g[b+164>>2];D=+g[b+168>>2];F=+g[b+172>>2];B=B+f*(+g[b+180>>2]-B);D=D+f*(+g[b+184>>2]-D);F=F+f*(+g[b+188>>2]-F);g[b+260>>2]=B;g[b+264>>2]=D;g[b+268>>2]=F;g[b+272>>2]=0.0;g[b+276>>2]=A-B;g[b+280>>2]=C-D;g[b+284>>2]=E-F;g[b+288>>2]=0.0;if(!(h&2)){c[b>>2]=1;d=0}else d=1;if(!(h&1)){c[b>>2]=d;H=b+4+(d<<4)|0;c[b+4>>2]=c[H>>2];c[b+4+4>>2]=c[H+4>>2];c[b+4+8>>2]=c[H+8>>2];c[b+4+12>>2]=c[H+12>>2];H=b+84+(d<<4)|0;c[b+84>>2]=c[H>>2];c[b+84+4>>2]=c[H+4>>2];c[b+84+8>>2]=c[H+8>>2];c[b+84+12>>2]=c[H+12>>2];H=b+164+(d<<4)|0;c[b+164>>2]=c[H>>2];c[b+164+4>>2]=c[H+4>>2];c[b+164+8>>2]=c[H+8>>2];c[b+164+12>>2]=c[H+12>>2]}H=(!(e>=0.0)|!(f>=0.0))&1^1;a[b+312>>0]=H;b=H;b=b<<24>>24!=0;i=I;return b|0}case 3:{c[I+16>>2]=0;c[I+16+4>>2]=0;c[I+16+8>>2]=0;c[I+16+12>>2]=0;Ve(I+16|0,b+4|0,b+20|0,b+36|0,b+316|0);F=+g[b+336>>2];e=+g[b+340>>2];f=+g[b+344>>2];A=+g[b+84>>2]*F+ +g[b+100>>2]*e+ +g[b+116>>2]*f;C=F*+g[b+88>>2]+e*+g[b+104>>2]+f*+g[b+120>>2];E=F*+g[b+92>>2]+e*+g[b+108>>2]+f*+g[b+124>>2];g[b+244>>2]=A;g[b+248>>2]=C;g[b+252>>2]=E;g[b+256>>2]=0.0;B=+g[b+164>>2]*F+ +g[b+180>>2]*e+ +g[b+196>>2]*f;D=F*+g[b+168>>2]+e*+g[b+184>>2]+f*+g[b+200>>2];F=F*+g[b+172>>2]+e*+g[b+188>>2]+f*+g[b+204>>2];g[b+260>>2]=B;g[b+264>>2]=D;g[b+268>>2]=F;g[b+272>>2]=0.0;g[b+276>>2]=A-B;g[b+280>>2]=C-D;g[b+284>>2]=E-F;g[b+288>>2]=0.0;h=c[b>>2]|0;do if((h|0)>3){d=a[b+332>>0]|0;if(!(d&8)){c[b>>2]=h+-1;H=b+4+(h+-1<<4)|0;c[b+52>>2]=c[H>>2];c[b+52+4>>2]=c[H+4>>2];c[b+52+8>>2]=c[H+8>>2];c[b+52+12>>2]=c[H+12>>2];H=b+84+(h+-1<<4)|0;c[b+132>>2]=c[H>>2];c[b+132+4>>2]=c[H+4>>2];c[b+132+8>>2]=c[H+8>>2];c[b+132+12>>2]=c[H+12>>2];H=b+164+(h+-1<<4)|0;c[b+212>>2]=c[H>>2];c[b+212+4>>2]=c[H+4>>2];c[b+212+8>>2]=c[H+8>>2];c[b+212+12>>2]=c[H+12>>2];h=h+-1|0;H=21}else H=21}else{if((h|0)>2){d=a[b+332>>0]|0;h=3;H=21;break}if((h|0)>1){d=a[b+332>>0]|0;h=2;H=25;break}if((h|0)>0){o=a[b+332>>0]|0;n=1;H=29}}while(0);if((H|0)==21)if(!(d&4)){h=h+-1|0;c[b>>2]=h;c[b+36>>2]=c[b+4+(h<<4)>>2];c[b+36+4>>2]=c[b+4+(h<<4)+4>>2];c[b+36+8>>2]=c[b+4+(h<<4)+8>>2];c[b+36+12>>2]=c[b+4+(h<<4)+12>>2];c[b+116>>2]=c[b+84+(h<<4)>>2];c[b+116+4>>2]=c[b+84+(h<<4)+4>>2];c[b+116+8>>2]=c[b+84+(h<<4)+8>>2];c[b+116+12>>2]=c[b+84+(h<<4)+12>>2];c[b+196>>2]=c[b+164+(h<<4)>>2];c[b+196+4>>2]=c[b+164+(h<<4)+4>>2];c[b+196+8>>2]=c[b+164+(h<<4)+8>>2];c[b+196+12>>2]=c[b+164+(h<<4)+12>>2];H=25}else H=25;if((H|0)==25)if(!(d&2)){n=h+-1|0;c[b>>2]=n;c[b+20>>2]=c[b+4+(n<<4)>>2];c[b+20+4>>2]=c[b+4+(n<<4)+4>>2];c[b+20+8>>2]=c[b+4+(n<<4)+8>>2];c[b+20+12>>2]=c[b+4+(n<<4)+12>>2];c[b+100>>2]=c[b+84+(n<<4)>>2];c[b+100+4>>2]=c[b+84+(n<<4)+4>>2];c[b+100+8>>2]=c[b+84+(n<<4)+8>>2];c[b+100+12>>2]=c[b+84+(n<<4)+12>>2];c[b+180>>2]=c[b+164+(n<<4)>>2];c[b+180+4>>2]=c[b+164+(n<<4)+4>>2];c[b+180+8>>2]=c[b+164+(n<<4)+8>>2];c[b+180+12>>2]=c[b+164+(n<<4)+12>>2];o=d;H=29}else{o=d;n=h;H=29}if((H|0)==29?(o&1)==0:0){H=n+-1|0;c[b>>2]=H;c[b+4>>2]=c[b+4+(H<<4)>>2];c[b+4+4>>2]=c[b+4+(H<<4)+4>>2];c[b+4+8>>2]=c[b+4+(H<<4)+8>>2];c[b+4+12>>2]=c[b+4+(H<<4)+12>>2];c[b+84>>2]=c[b+84+(H<<4)>>2];c[b+84+4>>2]=c[b+84+(H<<4)+4>>2];c[b+84+8>>2]=c[b+84+(H<<4)+8>>2];c[b+84+12>>2]=c[b+84+(H<<4)+12>>2];c[b+164>>2]=c[b+164+(H<<4)>>2];c[b+164+4>>2]=c[b+164+(H<<4)+4>>2];c[b+164+8>>2]=c[b+164+(H<<4)+8>>2];c[b+164+12>>2]=c[b+164+(H<<4)+12>>2]}if((e>=0.0?!(+g[b+336>>2]>=0.0):1)|!(f>=0.0))d=0;else d=+g[b+348>>2]>=0.0&1;a[b+312>>0]=d;b=d;b=b<<24>>24!=0;i=I;return b|0}case 4:{c[I>>2]=0;c[I+4>>2]=0;c[I+8>>2]=0;c[I+12>>2]=0;q=I+16+16|0;a[q>>0]=0;c[b+316>>2]=0;c[b+316+4>>2]=0;c[b+316+8>>2]=0;c[b+316+12>>2]=0;a[b+332>>0]=h|15;K=+g[b+20>>2];T=+g[b+4>>2];Q=+g[b+24>>2];J=+g[b+8>>2];M=+g[b+28>>2];U=+g[b+12>>2];P=+g[b+36>>2];R=+g[b+40>>2];N=+g[b+44>>2];L=+g[b+52>>2];S=+g[b+56>>2];O=+g[b+60>>2];V=((Q-J)*(N-U)-(M-U)*(R-J))*(L-T)+((M-U)*(P-T)-(K-T)*(N-U))*(S-J)+((K-T)*(R-J)-(Q-J)*(P-T))*(O-U);h=V*V<9.99999905104687e-09?-1:((0.0-T)*((Q-J)*(N-U)-(M-U)*(R-J))+(0.0-J)*((M-U)*(P-T)-(K-T)*(N-U))+((K-T)*(R-J)-(Q-J)*(P-T))*(0.0-U))*V<0.0&1;V=(M-U)*((P-T)*(S-J)-(R-J)*(L-T))+((K-T)*((R-J)*(O-U)-(N-U)*(S-J))+(Q-J)*((N-U)*(L-T)-(P-T)*(O-U)));n=V*V<9.99999905104687e-09?-1:((0.0-U)*((P-T)*(S-J)-(R-J)*(L-T))+((0.0-T)*((R-J)*(O-U)-(N-U)*(S-J))+(0.0-J)*((N-U)*(L-T)-(P-T)*(O-U))))*V<0.0&1;V=(N-U)*((Q-J)*(L-T)-(K-T)*(S-J))+((P-T)*((M-U)*(S-J)-(Q-J)*(O-U))+(R-J)*((K-T)*(O-U)-(M-U)*(L-T)));o=V*V<9.99999905104687e-09?-1:((0.0-U)*((Q-J)*(L-T)-(K-T)*(S-J))+((0.0-T)*((M-U)*(S-J)-(Q-J)*(O-U))+(0.0-J)*((K-T)*(O-U)-(M-U)*(L-T))))*V<0.0&1;J=(U-M)*((R-Q)*(L-K)-(P-K)*(S-Q))+((T-K)*((N-M)*(S-Q)-(R-Q)*(O-M))+(J-Q)*((P-K)*(O-M)-(N-M)*(L-K)));p=J*J<9.99999905104687e-09?-1:((0.0-M)*((R-Q)*(L-K)-(P-K)*(S-Q))+((0.0-K)*((N-M)*(S-Q)-(R-Q)*(O-M))+(0.0-Q)*((P-K)*(O-M)-(N-M)*(L-K))))*J<0.0&1;do if((n|h|o|p|0)<0){a[b+352>>0]=1;d=b+312|0;H=70}else{if(!(n|h|o|p)){if(a[b+352>>0]|0){d=b+312|0;H=70;break}a[b+312>>0]=1;c[b+276>>2]=0;c[b+276+4>>2]=0;c[b+276+8>>2]=0;c[b+276+12>>2]=0;d=1;break}if((h|0)!=0?(Ve(I,b+4|0,b+20|0,b+36|0,I+16|0),e=+g[I+16>>2],f=+g[I+16+4>>2],j=+g[I+16+8>>2],k=e-+g[I>>2],l=f-+g[I+4>>2],m=j-+g[I+8>>2],k*k+l*l+m*m<3402823466385288598117041.0e14):0){W=c[I+16+12>>2]|0;g[b+316>>2]=e;g[b+320>>2]=f;g[b+324>>2]=j;c[b+328>>2]=W;W=a[q>>0]|0;a[b+332>>0]=W&1|a[b+332>>0]&-16|W&2|W&4;W=c[I+16+24>>2]|0;h=c[I+16+28>>2]|0;c[b+336>>2]=c[I+16+20>>2];c[b+340>>2]=W;c[b+344>>2]=h;g[b+348>>2]=0.0;e=k*k+l*l+m*m}else e=3402823466385288598117041.0e14;if((n|0)!=0?(Ve(I,b+4|0,b+36|0,b+52|0,I+16|0),r=+g[I+16>>2],s=+g[I+16+4>>2],t=+g[I+16+8>>2],u=r-+g[I>>2],v=s-+g[I+4>>2],w=t-+g[I+8>>2],u*u+v*v+w*w<e):0){n=c[I+16+12>>2]|0;g[b+316>>2]=r;g[b+320>>2]=s;g[b+324>>2]=t;c[b+328>>2]=n;n=a[q>>0]|0;a[b+332>>0]=n<<1&8|(n&1|a[b+332>>0]&-16|n<<1&4);n=c[I+16+24>>2]|0;W=c[I+16+28>>2]|0;c[b+336>>2]=c[I+16+20>>2];g[b+340>>2]=0.0;c[b+344>>2]=n;c[b+348>>2]=W;e=u*u+v*v+w*w}if((o|0)!=0?(Ve(I,b+4|0,b+52|0,b+20|0,I+16|0),x=+g[I+16>>2],y=+g[I+16+4>>2],z=+g[I+16+8>>2],A=x-+g[I>>2],B=y-+g[I+4>>2],C=z-+g[I+8>>2],A*A+B*B+C*C<e):0){o=c[I+16+12>>2]|0;g[b+316>>2]=x;g[b+320>>2]=y;g[b+324>>2]=z;c[b+328>>2]=o;o=a[q>>0]|0;a[b+332>>0]=o<<2&8|(o&1|a[b+332>>0]&-16|(o&255)>>>1&2);o=c[I+16+28>>2]|0;W=c[I+16+24>>2]|0;c[b+336>>2]=c[I+16+20>>2];c[b+340>>2]=o;g[b+344>>2]=0.0;c[b+348>>2]=W;e=A*A+B*B+C*C}if(p|0?(Ve(I,b+20|0,b+52|0,b+36|0,I+16|0),D=+g[I+16>>2],E=+g[I+16+4>>2],F=+g[I+16+8>>2],T=D-+g[I>>2],U=E-+g[I+4>>2],V=F-+g[I+8>>2],T*T+U*U+V*V<e):0){p=c[I+16+12>>2]|0;g[b+316>>2]=D;g[b+320>>2]=E;g[b+324>>2]=F;c[b+328>>2]=p;p=a[q>>0]|0;a[b+332>>0]=p&4|a[b+332>>0]&-16|p<<1&2|p<<2&8;p=c[I+16+20>>2]|0;q=c[I+16+28>>2]|0;W=c[I+16+24>>2]|0;g[b+336>>2]=0.0;c[b+340>>2]=p;c[b+344>>2]=q;c[b+348>>2]=W}O=+g[b+336>>2];P=+g[b+340>>2];V=+g[b+344>>2];e=+g[b+348>>2];Q=+g[b+84>>2]*O+ +g[b+100>>2]*P+ +g[b+116>>2]*V+ +g[b+132>>2]*e;S=O*+g[b+88>>2]+P*+g[b+104>>2]+V*+g[b+120>>2]+e*+g[b+136>>2];U=O*+g[b+92>>2]+P*+g[b+108>>2]+V*+g[b+124>>2]+e*+g[b+140>>2];g[b+244>>2]=Q;g[b+248>>2]=S;g[b+252>>2]=U;g[b+256>>2]=0.0;R=+g[b+164>>2]*O+ +g[b+180>>2]*P+ +g[b+196>>2]*V+ +g[b+212>>2]*e;T=O*+g[b+168>>2]+P*+g[b+184>>2]+V*+g[b+200>>2]+e*+g[b+216>>2];V=O*+g[b+172>>2]+P*+g[b+188>>2]+V*+g[b+204>>2]+e*+g[b+220>>2];g[b+260>>2]=R;g[b+264>>2]=T;g[b+268>>2]=V;g[b+272>>2]=0.0;g[b+276>>2]=Q-R;g[b+280>>2]=S-T;g[b+284>>2]=U-V;g[b+288>>2]=0.0;h=c[b>>2]|0;do if((h|0)>3){d=a[b+332>>0]|0;if(!(d&8)){c[b>>2]=h+-1;H=b+4+(h+-1<<4)|0;c[b+52>>2]=c[H>>2];c[b+52+4>>2]=c[H+4>>2];c[b+52+8>>2]=c[H+8>>2];c[b+52+12>>2]=c[H+12>>2];H=b+84+(h+-1<<4)|0;c[b+132>>2]=c[H>>2];c[b+132+4>>2]=c[H+4>>2];c[b+132+8>>2]=c[H+8>>2];c[b+132+12>>2]=c[H+12>>2];H=b+164+(h+-1<<4)|0;c[b+212>>2]=c[H>>2];c[b+212+4>>2]=c[H+4>>2];c[b+212+8>>2]=c[H+8>>2];c[b+212+12>>2]=c[H+12>>2];h=h+-1|0;H=54}else H=54}else{if((h|0)>2){d=a[b+332>>0]|0;h=3;H=54;break}if((h|0)>1){d=a[b+332>>0]|0;h=2;H=58;break}if((h|0)>0){d=a[b+332>>0]|0;G=1;H=62}}while(0);if((H|0)==54)if(!(d&4)){h=h+-1|0;c[b>>2]=h;c[b+36>>2]=c[b+4+(h<<4)>>2];c[b+36+4>>2]=c[b+4+(h<<4)+4>>2];c[b+36+8>>2]=c[b+4+(h<<4)+8>>2];c[b+36+12>>2]=c[b+4+(h<<4)+12>>2];c[b+116>>2]=c[b+84+(h<<4)>>2];c[b+116+4>>2]=c[b+84+(h<<4)+4>>2];c[b+116+8>>2]=c[b+84+(h<<4)+8>>2];c[b+116+12>>2]=c[b+84+(h<<4)+12>>2];c[b+196>>2]=c[b+164+(h<<4)>>2];c[b+196+4>>2]=c[b+164+(h<<4)+4>>2];c[b+196+8>>2]=c[b+164+(h<<4)+8>>2];c[b+196+12>>2]=c[b+164+(h<<4)+12>>2];H=58}else H=58;if((H|0)==58)if(!(d&2)){G=h+-1|0;c[b>>2]=G;c[b+20>>2]=c[b+4+(G<<4)>>2];c[b+20+4>>2]=c[b+4+(G<<4)+4>>2];c[b+20+8>>2]=c[b+4+(G<<4)+8>>2];c[b+20+12>>2]=c[b+4+(G<<4)+12>>2];c[b+100>>2]=c[b+84+(G<<4)>>2];c[b+100+4>>2]=c[b+84+(G<<4)+4>>2];c[b+100+8>>2]=c[b+84+(G<<4)+8>>2];c[b+100+12>>2]=c[b+84+(G<<4)+12>>2];c[b+180>>2]=c[b+164+(G<<4)>>2];c[b+180+4>>2]=c[b+164+(G<<4)+4>>2];c[b+180+8>>2]=c[b+164+(G<<4)+8>>2];c[b+180+12>>2]=c[b+164+(G<<4)+12>>2];H=62}else{G=h;H=62}if((H|0)==62?(d&1)==0:0){W=G+-1|0;c[b>>2]=W;c[b+4>>2]=c[b+4+(W<<4)>>2];c[b+4+4>>2]=c[b+4+(W<<4)+4>>2];c[b+4+8>>2]=c[b+4+(W<<4)+8>>2];c[b+4+12>>2]=c[b+4+(W<<4)+12>>2];c[b+84>>2]=c[b+84+(W<<4)>>2];c[b+84+4>>2]=c[b+84+(W<<4)+4>>2];c[b+84+8>>2]=c[b+84+(W<<4)+8>>2];c[b+84+12>>2]=c[b+84+(W<<4)+12>>2];c[b+164>>2]=c[b+164+(W<<4)>>2];c[b+164+4>>2]=c[b+164+(W<<4)+4>>2];c[b+164+8>>2]=c[b+164+(W<<4)+8>>2];c[b+164+12>>2]=c[b+164+(W<<4)+12>>2]}if((+g[b+336>>2]>=0.0?+g[b+340>>2]>=0.0:0)?+g[b+344>>2]>=0.0:0)d=e>=0.0&1;else d=0;a[b+312>>0]=d}while(0);if((H|0)==70){a[d>>0]=0;d=0}W=d;W=W<<24>>24!=0;i=I;return W|0}default:{a[b+312>>0]=0;W=0;W=W<<24>>24!=0;i=I;return W|0}}return 0}function Fc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,P=0,S=0.0,U=0.0,V=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0,ra=0.0,sa=0.0,ta=0.0,ua=0.0,va=0.0,wa=0.0;qa=i;i=i+144|0;g[b+504>>2]=0.0;g[b+500>>2]=0.0;a[b+525>>0]=0;a[b+526>>0]=0;if(a[b+552>>0]|0?(a[b+527>>0]|0)==0:0){wa=+g[b+556>>2];ua=+g[b+560>>2];pa=+g[b+564>>2];ta=+g[b+568>>2];ea=wa*(2.0/(wa*wa+ua*ua+pa*pa+ta*ta));va=ua*(2.0/(wa*wa+ua*ua+pa*pa+ta*ta));sa=pa*(2.0/(wa*wa+ua*ua+pa*pa+ta*ta));fa=+g[b+300>>2];X=+g[d>>2];ga=+g[b+316>>2];Y=+g[d+4>>2];ha=+g[b+332>>2];Z=+g[d+8>>2];ja=+g[b+304>>2];la=+g[b+320>>2];na=+g[b+336>>2];ba=+g[b+308>>2];ca=+g[b+324>>2];da=+g[b+340>>2];_=+g[d+16>>2];$=+g[d+20>>2];aa=+g[d+24>>2];ka=+g[d+32>>2];ma=+g[d+36>>2];oa=+g[d+40>>2];v=+g[b+348>>2];u=+g[b+352>>2];r=+g[b+356>>2];z=+g[b+364>>2];ra=+g[e>>2];A=+g[b+380>>2];n=+g[e+4>>2];B=+g[b+396>>2];m=+g[e+8>>2];C=+g[b+368>>2];D=+g[b+384>>2];E=+g[b+400>>2];w=+g[b+372>>2];x=+g[b+388>>2];y=+g[b+404>>2];o=+g[e+16>>2];q=+g[e+20>>2];l=+g[e+24>>2];F=+g[e+32>>2];H=+g[e+36>>2];J=+g[e+40>>2];G=+g[b+412>>2];I=+g[b+416>>2];j=+g[b+420>>2];L=(1.0-(ua*va+pa*sa))*(z*ra+A*n+B*m)+(wa*va+ta*sa)*(ra*C+n*D+m*E)+(wa*sa-ta*va)*(ra*w+n*x+m*y);M=(wa*va-ta*sa)*(z*ra+A*n+B*m)+(1.0-(wa*ea+pa*sa))*(ra*C+n*D+m*E)+(ua*sa+ta*ea)*(ra*w+n*x+m*y);K=(wa*sa+ta*va)*(z*ra+A*n+B*m)+(ua*sa-ta*ea)*(ra*C+n*D+m*E)+(1.0-(wa*ea+ua*va))*(ra*w+n*x+m*y);U=(wa*sa-ta*va)*(w*o+x*q+y*l)+((1.0-(ua*va+pa*sa))*(z*o+A*q+B*l)+(wa*va+ta*sa)*(C*o+D*q+E*l));V=(ua*sa+ta*ea)*(w*o+x*q+y*l)+((wa*va-ta*sa)*(z*o+A*q+B*l)+(1.0-(wa*ea+pa*sa))*(C*o+D*q+E*l));S=(1.0-(wa*ea+ua*va))*(w*o+x*q+y*l)+((wa*sa+ta*va)*(z*o+A*q+B*l)+(ua*sa-ta*ea)*(C*o+D*q+E*l));ia=(wa*sa-ta*va)*(w*F+x*H+y*J)+((1.0-(ua*va+pa*sa))*(z*F+A*H+B*J)+(wa*va+ta*sa)*(C*F+D*H+E*J));pa=(ua*sa+ta*ea)*(w*F+x*H+y*J)+((wa*va-ta*sa)*(z*F+A*H+B*J)+(1.0-(wa*ea+pa*sa))*(C*F+D*H+E*J));ea=(1.0-(wa*ea+ua*va))*(w*F+x*H+y*J)+((wa*sa+ta*va)*(z*F+A*H+B*J)+(ua*sa-ta*ea)*(C*F+D*H+E*J));ta=-(+g[d+48>>2]+(X*v+Y*u+Z*r));sa=-(_*v+$*u+aa*r+ +g[d+52>>2]);r=-(ka*v+ma*u+oa*r+ +g[d+56>>2]);u=(fa*X+ga*Y+ha*Z)*ta+(fa*_+ga*$+ha*aa)*sa+(fa*ka+ga*ma+ha*oa)*r;v=(X*ja+Y*la+Z*na)*ta+(ja*_+la*$+na*aa)*sa+(ja*ka+la*ma+na*oa)*r;r=(X*ba+Y*ca+Z*da)*ta+(ba*_+ca*$+da*aa)*sa+(ba*ka+ca*ma+da*oa)*r;m=r*K+(u*L+v*M)+((z*ra+A*n+B*m)*0.0+(ra*C+n*D+m*E)*0.0+(ra*w+n*x+m*y)*0.0+(+g[e+48>>2]+(ra*G+n*I+m*j)));l=r*S+(u*U+v*V)+((w*o+x*q+y*l)*0.0+((z*o+A*q+B*l)*0.0+(C*o+D*q+E*l)*0.0)+(o*G+q*I+l*j+ +g[e+52>>2]));j=r*ea+(u*ia+v*pa)+((w*F+x*H+y*J)*0.0+((z*F+A*H+B*J)*0.0+(C*F+D*H+E*J)*0.0)+(F*G+H*I+J*j+ +g[e+56>>2]));g[qa+80>>2]=(X*ba+Y*ca+Z*da)*K+((fa*X+ga*Y+ha*Z)*L+(X*ja+Y*la+Z*na)*M);g[qa+80+4>>2]=(ba*_+ca*$+da*aa)*K+((fa*_+ga*$+ha*aa)*L+(ja*_+la*$+na*aa)*M);g[qa+80+8>>2]=(ba*ka+ca*ma+da*oa)*K+((fa*ka+ga*ma+ha*oa)*L+(ja*ka+la*ma+na*oa)*M);g[qa+80+12>>2]=0.0;g[qa+80+16>>2]=(X*ba+Y*ca+Z*da)*S+((fa*X+ga*Y+ha*Z)*U+(X*ja+Y*la+Z*na)*V);g[qa+80+20>>2]=(ba*_+ca*$+da*aa)*S+((fa*_+ga*$+ha*aa)*U+(ja*_+la*$+na*aa)*V);g[qa+80+24>>2]=(ba*ka+ca*ma+da*oa)*S+((fa*ka+ga*ma+ha*oa)*U+(ja*ka+la*ma+na*oa)*V);g[qa+80+28>>2]=0.0;g[qa+80+32>>2]=(X*ba+Y*ca+Z*da)*ea+((fa*X+ga*Y+ha*Z)*ia+(X*ja+Y*la+Z*na)*pa);g[qa+80+36>>2]=(ba*_+ca*$+da*aa)*ea+((fa*_+ga*$+ha*aa)*ia+(ja*_+la*$+na*aa)*pa);g[qa+80+40>>2]=(ba*ka+ca*ma+da*oa)*ea+((fa*ka+ga*ma+ha*oa)*ia+(ja*ka+la*ma+na*oa)*pa);g[qa+80+44>>2]=0.0;g[qa+80+48>>2]=m;g[qa+80+52>>2]=l;g[qa+80+56>>2]=j;g[qa+80+60>>2]=0.0;Wg(qa+80|0,qa+64|0);j=+g[qa+64>>2];l=+g[qa+64+4>>2];m=+g[qa+64+8>>2];if(!(+N(+(j*j+l*l+m*m))<1.1920928955078125e-07)?(g[b+472>>2]=0.0,wa=1.0/+O(+(j*j+l*l+m*m)),g[b+460>>2]=j*wa,g[b+464>>2]=l*wa,g[b+468>>2]=m*wa,wa=+g[qa+64+12>>2],wa=wa<-1.0?-1.0:wa,wa=+T(+(wa>1.0?1.0:wa))*2.0,g[b+504>>2]=wa,!(+N(+wa)<1.1920928955078125e-07)):0)a[b+526>>0]=1;i=qa;return}Wg(d,qa+48|0);Wg(b+300|0,qa+32|0);Z=+g[qa+48+12>>2];_=+g[qa+32>>2];$=+g[qa+48>>2];aa=+g[qa+32+12>>2];ba=+g[qa+48+4>>2];ca=+g[qa+32+8>>2];da=+g[qa+48+8>>2];ea=+g[qa+32+4>>2];Wg(e,qa+16|0);Wg(b+364|0,qa);fa=+g[qa+16+12>>2];ga=+g[qa>>2];ha=+g[qa+16>>2];ia=+g[qa+12>>2];ja=+g[qa+16+4>>2];ka=+g[qa+8>>2];la=+g[qa+16+8>>2];ma=+g[qa+4>>2];na=-(fa*ga+ha*ia+ja*ka-la*ma);oa=-(ga*la+(ia*ja+fa*ma)-ha*ka);pa=-(fa*ka+ia*la+ha*ma-ga*ja);o=(Z*aa-_*$-ba*ea-ca*da)*na+(Z*_+$*aa+ba*ca-da*ea)*(fa*ia-ga*ha-ja*ma-ka*la)+(Z*ca+aa*da+$*ea-_*ba)*oa-(_*da+(aa*ba+Z*ea)-$*ca)*pa;q=(Z*_+$*aa+ba*ca-da*ea)*pa+((_*da+(aa*ba+Z*ea)-$*ca)*(fa*ia-ga*ha-ja*ma-ka*la)+(Z*aa-_*$-ba*ea-ca*da)*oa)-(Z*ca+aa*da+$*ea-_*ba)*na;r=(_*da+(aa*ba+Z*ea)-$*ca)*na+((Z*ca+aa*da+$*ea-_*ba)*(fa*ia-ga*ha-ja*ma-ka*la)+(Z*aa-_*$-ba*ea-ca*da)*pa)-(Z*_+$*aa+ba*ca-da*ea)*oa;u=(Z*aa-_*$-ba*ea-ca*da)*(fa*ia-ga*ha-ja*ma-ka*la)-(Z*_+$*aa+ba*ca-da*ea)*na-(_*da+(aa*ba+Z*ea)-$*ca)*oa-(Z*ca+aa*da+$*ea-_*ba)*pa;m=-o-q*0.0-r*0.0;l=(r+u*0.0-o*0.0)*-r+(u*(u+q*0.0-r*0.0)+m*-o)-(u*0.0+o*0.0-q)*-q;j=(u*0.0+o*0.0-q)*-o+(u*(r+u*0.0-o*0.0)+m*-q)-(u+q*0.0-r*0.0)*-r;m=(u+q*0.0-r*0.0)*-q+(u*(u*0.0+o*0.0-q)+m*-r)-(r+u*0.0-o*0.0)*-o;n=1.0/+O(+(m*m+(l*l+j*j)));if(n*m*0.0+(n*j*0.0+n*l)<-.9999998807907104){p=-2147483648;s=0;t=0;j=1.0}else{wa=+O(+((n*m*0.0+(n*j*0.0+n*l)+1.0)*2.0));p=(g[k>>2]=(n*m*0.0-n*j*0.0)*(1.0/wa),c[k>>2]|0);s=(g[k>>2]=(n*j-n*l*0.0)*(1.0/wa),c[k>>2]|0);t=(g[k>>2]=wa*.5,c[k>>2]|0);j=(n*l*0.0-n*m)*(1.0/wa)}m=(c[k>>2]=p,+g[k>>2]);w=(c[k>>2]=s,+g[k>>2]);l=(c[k>>2]=t,+g[k>>2]);n=1.0/+O(+(m*m+j*j+w*w+l*l));v=j*n;V=r*-v+(o*l*n+u*-(m*n))-q*-(w*n);X=o*-(w*n)+(u*-v+q*l*n)-r*-(m*n);Y=q*-(m*n)+(r*l*n+u*-(w*n))-o*-v;S=u*l*n-o*-(m*n)-q*-v-r*-(w*n);U=1.0/+O(+(S*S+(Y*Y+(V*V+X*X))));u=+g[b+444>>2];j=+g[b+456>>2];p=(g[k>>2]=u,c[k>>2]|0);if(u>=j?(x=+g[b+448>>2],x>=j):0){r=l*n<-1.0?-1.0:l*n;r=+T(+(r>1.0?1.0:r))*2.0;if(r>1.1920928955078125e-07){j=1.0/+O(+(w*n*w*n+(m*n*m*n+v*v)));if(+N(+(v*j))>1.1920928955078125e-07){wa=+O(+((w*n*j*w*n*j/(v*j*v*j)+1.0)/(1.0/(x*x)+w*n*j*w*n*j/(v*j*v*j)/(u*u))));m=m*n*j;l=w*n*j;j=v*j;p=(g[k>>2]=wa,c[k>>2]|0)}else{m=m*n*j;l=w*n*j;j=v*j}}else{m=0.0;l=0.0;j=0.0;p=0}n=(c[k>>2]=p,+g[k>>2]);o=+g[b+428>>2];if(r>n*o){a[b+526>>0]=1;if(r<n&o<.9999998807907104)q=(r-n*o)/(n-n*o);else q=1.0;g[b+528>>2]=q;g[b+504>>2]=r-n*o;if(+N(+j)>1.1920928955078125e-07){wa=+N(+(j*-l/j*(x/u)));l=l<-0.0?wa:-wa;wa=1.0/+O(+(m*m+j*j+l*l));m=m*wa;l=-(l*wa);j=j*wa}va=-m;ua=-j;sa=-l;ra=(fa*ia-ga*ha-ja*ma-ka*la)*va+(ga*la+(ia*ja+fa*ma)-ha*ka)*sa-(fa*ka+ia*la+ha*ma-ga*ja)*ua;wa=(fa*ka+ia*la+ha*ma-ga*ja)*va+(fa*ia-ga*ha-ja*ma-ka*la)*ua-(fa*ga+ha*ia+ja*ka-la*ma)*sa;ta=(fa*ga+ha*ia+ja*ka-la*ma)*ua+(fa*ia-ga*ha-ja*ma-ka*la)*sa-(ga*la+(ia*ja+fa*ma)-ha*ka)*va;sa=-((fa*ga+ha*ia+ja*ka-la*ma)*va)-(ga*la+(ia*ja+fa*ma)-ha*ka)*ua-(fa*ka+ia*la+ha*ma-ga*ja)*sa;ua=wa*pa+(sa*na+(fa*ia-ga*ha-ja*ma-ka*la)*ra)-ta*oa;va=ta*na+((fa*ia-ga*ha-ja*ma-ka*la)*wa+sa*oa)-ra*pa;wa=ra*oa+(sa*pa+(fa*ia-ga*ha-ja*ma-ka*la)*ta)-wa*na;g[b+460>>2]=ua;g[b+464>>2]=va;g[b+468>>2]=wa;g[b+472>>2]=0.0;c[b+536>>2]=0;c[b+536+4>>2]=0;c[b+536+8>>2]=0;c[b+536+12>>2]=0;g[b+492>>2]=1.0/(ua*(+g[f>>2]*ua+ +g[f+16>>2]*va+ +g[f+32>>2]*wa)+va*(ua*+g[f+4>>2]+va*+g[f+20>>2]+wa*+g[f+36>>2])+wa*(ua*+g[f+8>>2]+va*+g[f+24>>2]+wa*+g[f+40>>2])+(ua*(ua*+g[h>>2]+va*+g[h+16>>2]+wa*+g[h+32>>2])+va*(ua*+g[h+4>>2]+va*+g[h+20>>2]+wa*+g[h+36>>2])+wa*(ua*+g[h+8>>2]+va*+g[h+24>>2]+wa*+g[h+40>>2])))}}else P=20;a:do if((P|0)==20){C=+g[b+300>>2];D=+g[b+316>>2];E=+g[b+332>>2];F=+g[d>>2];G=+g[d+4>>2];H=+g[d+8>>2];I=+g[d+16>>2];J=+g[d+20>>2];K=+g[d+24>>2];L=+g[d+32>>2];M=+g[d+36>>2];u=+g[d+40>>2];v=+g[b+304>>2];w=+g[b+320>>2];x=+g[b+336>>2];y=+g[b+308>>2];z=+g[b+324>>2];A=+g[b+340>>2];l=+g[b+364>>2];o=+g[b+380>>2];q=+g[b+396>>2];B=l*+g[e>>2]+o*+g[e+4>>2]+q*+g[e+8>>2];r=l*+g[e+16>>2]+o*+g[e+20>>2]+q*+g[e+24>>2];q=l*+g[e+32>>2]+o*+g[e+36>>2]+q*+g[e+40>>2];o=(C*F+D*G+E*H)*B+(C*I+D*J+E*K)*r+(C*L+D*M+E*u)*q;l=(F*v+G*w+H*x)*B+(I*v+J*w+K*x)*r+(L*v+M*w+u*x)*q;j=(F*y+G*z+H*A)*B+(I*y+J*z+K*A)*r+(L*y+M*z+u*A)*q;n=+g[b+444>>2];m=+g[b+456>>2];do if(n<m){n=+g[b+448>>2];if(n<m){if(+N(+l)<1.1920928955078125e-07?+N(+j)<1.1920928955078125e-07:0)break a;a[b+526>>0]=1;g[b+460>>2]=-((C*L+D*M+E*u)*r-(C*I+D*J+E*K)*q);g[b+464>>2]=-((C*F+D*G+E*H)*q-(C*L+D*M+E*u)*B);g[b+468>>2]=-((C*I+D*J+E*K)*B-(C*F+D*G+E*H)*r);g[b+472>>2]=0.0;break a}if(+N(+o)<1.1920928955078125e-07?+N(+j)<1.1920928955078125e-07:0){m=o;break}a[b+526>>0]=1;if(n>=m){l=+W(+j,+o);if(l>n){m=+Q(+n);l=0.0;j=+R(+n);break}if(l<-n){m=+Q(+n);l=0.0;j=-+R(+n)}else{m=o;l=0.0}}else m=o}else{if(+N(+o)<1.1920928955078125e-07?+N(+l)<1.1920928955078125e-07:0){m=o;break}a[b+526>>0]=1;if(n>=m){j=+W(+l,+o);if(j>n){m=+Q(+n);l=+R(+n);j=0.0;break}if(j<-n){m=+Q(+n);l=-+R(+n);j=0.0}else{m=o;j=0.0}}else m=o}while(0);va=(F*y+G*z+H*A)*j+((F*v+G*w+H*x)*l+(C*F+D*G+E*H)*m);ta=(I*y+J*z+K*A)*j+((I*v+J*w+K*x)*l+(C*I+D*J+E*K)*m);sa=(L*y+M*z+u*A)*j+((L*v+M*w+u*x)*l+(C*L+D*M+E*u)*m);ua=1.0/+O(+(sa*sa+(va*va+ta*ta)));g[b+472>>2]=0.0;wa=+O(+((r*ua*sa-q*ua*ta)*(r*ua*sa-q*ua*ta)+(q*ua*va-B*ua*sa)*(q*ua*va-B*ua*sa)+(B*ua*ta-r*ua*va)*(B*ua*ta-r*ua*va)));g[b+504>>2]=wa;g[b+460>>2]=-((r*ua*sa-q*ua*ta)*(1.0/wa));g[b+464>>2]=-((q*ua*va-B*ua*sa)*(1.0/wa));g[b+468>>2]=-((B*ua*ta-r*ua*va)*(1.0/wa))}while(0);r=+g[b+452>>2];if(!(r>=0.0)){g[b+512>>2]=0.0;i=qa;return}j=U*S<-1.0?-1.0:U*S;j=+T(+(j>1.0?1.0:j))*2.0;if(j>3.1415927410125732){q=-(U*S)<-1.0?-1.0:-(U*S);q=+T(+(q>1.0?1.0:q))*2.0;l=-(U*V);m=-(U*X);j=-(U*Y)}else{q=j;l=U*V;m=U*X;j=U*Y}g[b+512>>2]=q;if(q>1.1920928955078125e-07){wa=1.0/+O(+(l*l+m*m+j*j));o=l*wa;n=j*wa;m=m*wa}else{o=l;n=j}j=+g[b+428>>2];if(q>r*j){a[b+525>>0]=1;l=q-r*j;if(q<r&j<.9999998807907104)j=l/(r-r*j);else j=1.0;g[b+532>>2]=j;g[b+508>>2]=l;va=-o;ua=-m;sa=-n;ra=(fa*ia-ga*ha-ja*ma-ka*la)*va+(ga*la+(ia*ja+fa*ma)-ha*ka)*sa-(fa*ka+ia*la+ha*ma-ga*ja)*ua;wa=(fa*ka+ia*la+ha*ma-ga*ja)*va+(fa*ia-ga*ha-ja*ma-ka*la)*ua-(fa*ga+ha*ia+ja*ka-la*ma)*sa;ta=(fa*ga+ha*ia+ja*ka-la*ma)*ua+(fa*ia-ga*ha-ja*ma-ka*la)*sa-(ga*la+(ia*ja+fa*ma)-ha*ka)*va;sa=-((fa*ga+ha*ia+ja*ka-la*ma)*va)-(ga*la+(ia*ja+fa*ma)-ha*ka)*ua-(fa*ka+ia*la+ha*ma-ga*ja)*sa;ua=wa*pa+(sa*na+(fa*ia-ga*ha-ja*ma-ka*la)*ra)-ta*oa;va=ta*na+((fa*ia-ga*ha-ja*ma-ka*la)*wa+sa*oa)-ra*pa;wa=ra*oa+(sa*pa+(fa*ia-ga*ha-ja*ma-ka*la)*ta)-wa*na;g[b+476>>2]=ua;g[b+480>>2]=va;g[b+484>>2]=wa;g[b+488>>2]=0.0;g[b+496>>2]=1.0/(ua*(+g[f>>2]*ua+ +g[f+16>>2]*va+ +g[f+32>>2]*wa)+va*(ua*+g[f+4>>2]+va*+g[f+20>>2]+wa*+g[f+36>>2])+wa*(ua*+g[f+8>>2]+va*+g[f+24>>2]+wa*+g[f+40>>2])+(ua*(ua*+g[h>>2]+va*+g[h+16>>2]+wa*+g[h+32>>2])+va*(ua*+g[h+4>>2]+va*+g[h+20>>2]+wa*+g[h+36>>2])+wa*(ua*+g[h+8>>2]+va*+g[h+24>>2]+wa*+g[h+40>>2])))}if(!(a[b+526>>0]|0)){i=qa;return}ra=-o;wa=-m;sa=-n;pa=(Z*aa-_*$-ba*ea-ca*da)*ra+(_*da+(aa*ba+Z*ea)-$*ca)*sa-(Z*ca+aa*da+$*ea-_*ba)*wa;va=(Z*ca+aa*da+$*ea-_*ba)*ra+(Z*aa-_*$-ba*ea-ca*da)*wa-(Z*_+$*aa+ba*ca-da*ea)*sa;ua=(Z*_+$*aa+ba*ca-da*ea)*wa+(Z*aa-_*$-ba*ea-ca*da)*sa-(_*da+(aa*ba+Z*ea)-$*ca)*ra;sa=-((Z*_+$*aa+ba*ca-da*ea)*ra)-(_*da+(aa*ba+Z*ea)-$*ca)*wa-(Z*ca+aa*da+$*ea-_*ba)*sa;wa=-(Z*_+$*aa+ba*ca-da*ea);ra=-(_*da+(aa*ba+Z*ea)-$*ca);ta=-(Z*ca+aa*da+$*ea-_*ba);g[b+536>>2]=va*ta+(sa*wa+(Z*aa-_*$-ba*ea-ca*da)*pa)-ua*ra;g[b+540>>2]=ua*wa+((Z*aa-_*$-ba*ea-ca*da)*va+sa*ra)-pa*ta;g[b+544>>2]=pa*ra+(sa*ta+(Z*aa-_*$-ba*ea-ca*da)*ua)-va*wa;g[b+548>>2]=0.0;i=qa;return}function Gc(d,e){d=d|0;e=e|0;var f=0.0,h=0,j=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0,E=0,F=0.0,G=0.0,H=0,I=0.0,J=0,K=0,L=0,M=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,X=0.0,Y=0.0,Z=0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0,ea=0.0,fa=0,ga=0,ha=0.0,ia=0.0;ga=i;i=i+16|0;da=c[d+28>>2]|0;fa=c[d+32>>2]|0;$=+g[da+344>>2];aa=+g[fa+344>>2];Z=c[e+24>>2]|0;ea=a[d+180>>0]|0?1.0:-1.0;W=+g[d+936>>2]-+g[d+872>>2];X=+g[d+940>>2]-+g[d+876>>2];Y=+g[d+944>>2]-+g[d+880>>2];ba=$+aa>0.0?aa/($+aa):.5;H=c[d+824>>2]|0;J=c[d+840>>2]|0;K=c[d+856>>2]|0;L=c[d+888>>2]|0;M=c[d+904>>2]|0;P=c[d+920>>2]|0;Q=(a[d+49>>0]|0)==0;if(Q){y=c[d+828>>2]|0;l=c[d+844>>2]|0;t=c[d+860>>2]|0;c[ga+4>>2]=l;x=c[d+832>>2]|0;D=c[d+848>>2]|0;ca=c[d+864>>2]|0;c[ga>>2]=x;w=(c[k>>2]=t,+g[k>>2]);v=(c[k>>2]=x,+g[k>>2]);q=(c[k>>2]=D,+g[k>>2]);E=ca;u=(c[k>>2]=ca,+g[k>>2]);ca=H;z=J;A=K}else{f=ba*(c[k>>2]=H,+g[k>>2]);n=ba*(c[k>>2]=J,+g[k>>2]);m=ba*(c[k>>2]=K,+g[k>>2]);j=(1.0-ba)*(c[k>>2]=L,+g[k>>2]);o=(1.0-ba)*(c[k>>2]=M,+g[k>>2]);m=m+(1.0-ba)*(c[k>>2]=P,+g[k>>2]);p=1.0/+O(+((f+j)*(f+j)+(n+o)*(n+o)+m*m));y=(g[k>>2]=(f+j)*p,c[k>>2]|0);z=(g[k>>2]=(n+o)*p,c[k>>2]|0);A=(g[k>>2]=m*p,c[k>>2]|0);if(+N(+(m*p))>.7071067690849304){I=1.0/+O(+(m*p*m*p+(n+o)*p*(n+o)*p));g[ga+4>>2]=-(m*p*I);q=-((f+j)*p*(n+o)*p*I);r=(f+j)*p*-(m*p*I);j=(m*p*m*p+(n+o)*p*(n+o)*p)*I;f=(n+o)*p*I;h=0}else{r=(f+j)*p*(f+j)*p+(n+o)*p*(n+o)*p;I=1.0/+O(+r);h=(g[k>>2]=-((n+o)*p*I),c[k>>2]|0);g[ga+4>>2]=(f+j)*p*I;q=m*p*-((n+o)*p*I);r=r*I;j=-(m*p*(f+j)*p*I);f=0.0}t=(g[k>>2]=f,c[k>>2]|0);x=(g[k>>2]=j,c[k>>2]|0);g[ga>>2]=j;D=(g[k>>2]=q,c[k>>2]|0);l=c[ga+4>>2]|0;E=(g[k>>2]=r,c[k>>2]|0);w=f;v=j;u=r;ca=y;y=h}h=c[e+12>>2]|0;c[h>>2]=y;c[h+4>>2]=l;c[h+8>>2]=t;c[h+(Z<<2)>>2]=x;c[h+(Z+1<<2)>>2]=D;c[h+(Z+2<<2)>>2]=E;r=(c[k>>2]=y,+g[k>>2]);h=c[e+20>>2]|0;g[h>>2]=-r;s=+g[ga+4>>2];g[h+4>>2]=-s;g[h+8>>2]=-w;g[h+(Z<<2)>>2]=-v;g[h+(Z+1<<2)>>2]=-q;g[h+(Z+2<<2)>>2]=-u;h=c[d+300>>2]|0;f=+g[d+280>>2];if(!(h&128))f=f*+g[e+4>>2];o=f*+g[e>>2];G=(c[k>>2]=J,+g[k>>2]);B=(c[k>>2]=P,+g[k>>2]);p=(c[k>>2]=K,+g[k>>2]);F=(c[k>>2]=M,+g[k>>2]);I=(c[k>>2]=L,+g[k>>2]);C=(c[k>>2]=H,+g[k>>2]);V=c[e+28>>2]|0;g[V>>2]=o*((G*B-p*F)*r+(p*I-C*B)*s+(C*F-G*I)*w);g[V+(Z<<2)>>2]=o*((G*B-p*F)*v+(p*I-C*B)*q+(C*F-G*I)*u);if(h&64|0){V=c[e+32>>2]|0;c[V>>2]=c[d+292>>2];c[V+(Z<<2)>>2]=c[d+292>>2]}n=+g[da+52>>2];o=+g[da+56>>2];p=+g[da+60>>2];f=+g[fa+52>>2];j=+g[fa+56>>2];m=+g[fa+60>>2];if(Q){S=(g[k>>2]=j-o,c[k>>2]|0);G=(j-o)*w-(m-p)*s;I=(m-p)*r-(f-n)*w;Q=c[e+12>>2]|0;g[Q+(Z<<1<<2)>>2]=ba*G;g[Q+((Z<<1|1)<<2)>>2]=ba*I;g[Q+((Z<<1)+2<<2)>>2]=ba*((f-n)*s-(j-o)*r);Q=(g[k>>2]=f-n,c[k>>2]|0);R=(g[k>>2]=m-p,c[k>>2]|0);T=c[e+20>>2]|0;g[T+(Z<<1<<2)>>2]=(1.0-ba)*G;g[T+((Z<<1|1)<<2)>>2]=(1.0-ba)*I;g[T+((Z<<1)+2<<2)>>2]=(1.0-ba)*((f-n)*s-(j-o)*r);I=(j-o)*u-(m-p)*q;m=(m-p)*v-(f-n)*u;p=(f-n)*q-(j-o)*v;T=c[e+12>>2]|0;g[T+(Z*3<<2)>>2]=ba*I;g[T+((Z*3|0)+1<<2)>>2]=ba*m;g[T+((Z*3|0)+2<<2)>>2]=ba*p;T=c[e+20>>2]|0;g[T+(Z*3<<2)>>2]=(1.0-ba)*I;g[T+((Z*3|0)+1<<2)>>2]=(1.0-ba)*m;g[T+((Z*3|0)+2<<2)>>2]=(1.0-ba)*p;J=c[e+8>>2]|0;c[J+(Z<<1<<2)>>2]=y;g[J+((Z<<1|1)<<2)>>2]=s;g[J+((Z<<1)+2<<2)>>2]=w;J=c[e+8>>2]|0;M=c[ga>>2]|0;c[J+(Z*3<<2)>>2]=M;c[J+((Z*3|0)+1<<2)>>2]=D;c[J+((Z*3|0)+2<<2)>>2]=E;P=c[e+16>>2]|0;g[P+(Z<<1<<2)>>2]=-r;p=+g[ga+4>>2];g[P+((Z<<1|1)<<2)>>2]=-p;g[P+((Z<<1)+2<<2)>>2]=-w;P=c[e+16>>2]|0;n=(c[k>>2]=M,+g[k>>2]);g[P+(Z*3<<2)>>2]=-n;m=(c[k>>2]=D,+g[k>>2]);g[P+((Z*3|0)+1<<2)>>2]=-m;j=(c[k>>2]=E,+g[k>>2]);g[P+((Z*3|0)+2<<2)>>2]=-j;o=w;M=0;L=0;K=0;t=0;l=0;h=0}else{ia=+g[d+936>>2]-f;ha=+g[d+940>>2]-j;F=+g[d+944>>2]-m;r=(c[k>>2]=ca,+g[k>>2]);s=(c[k>>2]=z,+g[k>>2]);q=(c[k>>2]=A,+g[k>>2]);G=+g[d+872>>2]-n;I=+g[d+876>>2]-o;m=+g[d+880>>2]-p;o=+g[d+1080>>2]-+g[d+1032>>2];u=r*(r*G+s*I+q*m)+r*o-r*(r*ia+s*ha+q*F);v=s*(r*G+s*I+q*m)+s*o-s*(r*ia+s*ha+q*F);o=q*(r*G+s*I+q*m)+q*o-q*(r*ia+s*ha+q*F);B=G-r*(r*G+s*I+q*m)+ba*u;w=I-s*(r*G+s*I+q*m)+ba*v;C=m-q*(r*G+s*I+q*m)+ba*o;M=(g[k>>2]=B,c[k>>2]|0);L=(g[k>>2]=w,c[k>>2]|0);K=(g[k>>2]=C,c[k>>2]|0);u=ia-r*(r*ia+s*ha+q*F)-(1.0-ba)*u;v=ha-s*(r*ia+s*ha+q*F)-(1.0-ba)*v;o=F-q*(r*ia+s*ha+q*F)-(1.0-ba)*o;t=(g[k>>2]=u,c[k>>2]|0);x=(g[k>>2]=v,c[k>>2]|0);y=(g[k>>2]=o,c[k>>2]|0);j=ba*(ia-r*(r*ia+s*ha+q*F))+(1.0-ba)*(G-r*(r*G+s*I+q*m));f=ba*(ha-s*(r*ia+s*ha+q*F))+(1.0-ba)*(I-s*(r*G+s*I+q*m));m=ba*(F-q*(r*ia+s*ha+q*F))+(1.0-ba)*(m-q*(r*G+s*I+q*m));g[ga+4>>2]=f;if(m*m+(j*j+f*f)>1.1920928955078125e-07){ia=1.0/+O(+(m*m+(j*j+f*f)));l=(g[k>>2]=j*ia,c[k>>2]|0);g[ga+4>>2]=ia*f;I=ia*m;n=ia*f;f=j*ia;h=(g[k>>2]=ia*m,c[k>>2]|0)}else{l=c[d+828>>2]|0;V=c[d+844>>2]|0;h=c[d+860>>2]|0;c[ga+4>>2]=V;I=(c[k>>2]=h,+g[k>>2]);n=(c[k>>2]=V,+g[k>>2]);f=(c[k>>2]=l,+g[k>>2])}F=s*I-q*n;G=q*f-r*I;q=r*n-s*f;g[ga>>2]=F;V=(c[e+12>>2]|0)+(Z<<1<<2)|0;g[V>>2]=w*I-C*n;g[V+4>>2]=C*f-B*I;g[V+8>>2]=B*n-w*f;V=c[e+20>>2]|0;g[V+(Z<<1<<2)>>2]=-(v*I-o*n);g[V+((Z<<1|1)<<2)>>2]=-(o*f-u*I);g[V+((Z<<1)+2<<2)>>2]=-(u*n-v*f);if($<1.1920928955078125e-07|aa<1.1920928955078125e-07?(a[d+297>>0]|0)!=0:0){p=(1.0-ba)*(v*q-o*G);o=(1.0-ba)*(o*F-u*q);m=(1.0-ba)*(u*G-v*F);n=ba*(w*q-C*G);j=ba*(B*G-w*F);f=ba*(C*F-B*q)}else{p=v*q-o*G;o=o*F-u*q;m=u*G-v*F;n=w*q-C*G;j=B*G-w*F;f=C*F-B*q}T=(c[e+12>>2]|0)+(Z*3<<2)|0;g[T>>2]=n;g[T+4>>2]=f;g[T+8>>2]=j;T=c[e+20>>2]|0;g[T+(Z*3<<2)>>2]=-p;g[T+((Z*3|0)+1<<2)>>2]=-o;g[T+((Z*3|0)+2<<2)>>2]=-m;J=c[e+8>>2]|0;c[J+(Z<<1<<2)>>2]=l;c[J+((Z<<1|1)<<2)>>2]=c[ga+4>>2];c[J+((Z<<1)+2<<2)>>2]=h;J=c[e+8>>2]|0;g[J+(Z*3<<2)>>2]=F;g[J+((Z*3|0)+1<<2)>>2]=G;g[J+((Z*3|0)+2<<2)>>2]=q;P=c[e+16>>2]|0;r=(c[k>>2]=l,+g[k>>2]);g[P+(Z<<1<<2)>>2]=-r;p=+g[ga+4>>2];g[P+((Z<<1|1)<<2)>>2]=-p;g[P+((Z<<1)+2<<2)>>2]=-I;P=c[e+16>>2]|0;g[P+(Z*3<<2)>>2]=-F;g[P+((Z*3|0)+1<<2)>>2]=-G;g[P+((Z*3|0)+2<<2)>>2]=-q;o=I;n=F;m=G;j=q;Q=0;R=0;S=0;l=x;h=y}U=c[d+300>>2]|0;f=+g[d+264>>2];if(!(U&32))f=f*+g[e+4>>2];ia=f*+g[e>>2];V=c[e+28>>2]|0;g[V+(Z<<1<<2)>>2]=ia*(W*r+X*p+Y*o);g[V+(Z*3<<2)>>2]=ia*(W*n+X*m+Y*j);if(U&16|0){H=c[e+32>>2]|0;c[H+(Z<<1<<2)>>2]=c[d+276>>2];c[H+(Z*3<<2)>>2]=c[d+276>>2]}H=b[d+296>>1]|0;if(!((H&255)<<24>>24)){E=0;u=0.0}else{u=ea*+g[d+1032>>2];E=u>0.0?2:1}x=a[d+1096>>0]|0;y=(E|0)!=0;if(x&255|E){D=c[e+24>>2]<<2;c[J+(D<<2)>>2]=ca;c[J+((D|1)<<2)>>2]=z;c[J+((D|2)<<2)>>2]=A;q=(c[k>>2]=ca,+g[k>>2]);g[P+(D<<2)>>2]=-q;r=(c[k>>2]=z,+g[k>>2]);g[P+((D|1)<<2)>>2]=-r;s=(c[k>>2]=A,+g[k>>2]);g[P+((D|2)<<2)>>2]=-s;if(a[d+49>>0]|0){if(!($<1.1920928955078125e-07|aa<1.1920928955078125e-07)){aa=(c[k>>2]=L,+g[k>>2]);Y=(c[k>>2]=K,+g[k>>2]);$=(c[k>>2]=M,+g[k>>2]);ia=(c[k>>2]=l,+g[k>>2]);ba=(c[k>>2]=h,+g[k>>2]);ha=(c[k>>2]=t,+g[k>>2]);Z=c[e+12>>2]|0;g[Z+(D<<2)>>2]=s*aa-r*Y;g[Z+((D|1)<<2)>>2]=q*Y-s*$;g[Z+((D|2)<<2)>>2]=r*$-q*aa;g[T+(D<<2)>>2]=-(s*ia-r*ba);g[T+((D|1)<<2)>>2]=-(q*ba-s*ha);g[T+((D|2)<<2)>>2]=-(r*ha-q*ia)}}else{ia=(c[k>>2]=S,+g[k>>2]);aa=(c[k>>2]=R,+g[k>>2]);ha=(c[k>>2]=Q,+g[k>>2]);Z=c[e+12>>2]|0;g[Z+(D<<2)>>2]=ba*(s*ia-r*aa);g[Z+((D|1)<<2)>>2]=ba*(q*aa-s*ha);g[Z+((D|2)<<2)>>2]=ba*(r*ha-q*ia);g[T+(D<<2)>>2]=(1.0-ba)*(s*ia-r*aa);g[T+((D|1)<<2)>>2]=(1.0-ba)*(q*aa-s*ha);g[T+((D|2)<<2)>>2]=(1.0-ba)*(r*ha-q*ia)}h=+g[d+184>>2]==+g[d+188>>2];g[V+(D<<2)>>2]=0.0;l=(c[e+36>>2]|0)+(D<<2)|0;g[l>>2]=0.0;t=(c[e+40>>2]|0)+(D<<2)|0;g[t>>2]=0.0;p=+g[((U&512|0)==0?e+4|0:d+232|0)>>2];if(!(x<<24>>24==0|y&h)){if(U&1|0)c[(c[e+32>>2]|0)+(D<<2)>>2]=c[d+212>>2];o=+g[d+1100>>2];f=+g[d+1080>>2];j=+g[d+184>>2];m=+g[d+188>>2];n=p*+g[e>>2];do if(!(j>m))if(!(j==m)){if(o/n<0.0)if(f>=j?j-o/n>f:0){f=(j-f)/(o/n);break}else{f=f<j?0.0:1.0;break}if(o/n>0.0)if(f<=m?m-o/n<f:0){f=(m-f)/(o/n);break}else{f=f>m?0.0:1.0;break}else f=0.0}else f=0.0;else f=1.0;while(0);g[V+(D<<2)>>2]=+g[V+(D<<2)>>2]-ea*f*o;g[l>>2]=+g[l>>2]-+g[d+1104>>2]*+g[e>>2];g[t>>2]=+g[d+1104>>2]*+g[e>>2]+ +g[t>>2]}if(y){g[V+(D<<2)>>2]=+g[V+(D<<2)>>2]+u*p*+g[e>>2];if(U&256|0)c[(c[e+32>>2]|0)+(D<<2)>>2]=c[d+244>>2];do if(!h)if((E|0)==1){g[l>>2]=-3402823466385288598117041.0e14;g[t>>2]=0.0;break}else{g[l>>2]=0.0;g[t>>2]=3402823466385288598117041.0e14;break}else{g[l>>2]=-3402823466385288598117041.0e14;g[t>>2]=3402823466385288598117041.0e14}while(0);ia=1.0-+g[d+240>>2];j=+N(+ia);do if(!(ia!=ia|0.0!=0.0|ia==0.0)){f=ea*(q*+g[da+312>>2]+r*+g[da+316>>2]+s*+g[da+320>>2]-(q*+g[fa+312>>2]+r*+g[fa+316>>2]+s*+g[fa+320>>2]));if((E|0)==1){if(!(f<0.0))break;if(!(+g[V+(D<<2)>>2]<-(j*f)))break;g[V+(D<<2)>>2]=-(j*f);break}else{if(!(f>0.0))break;if(!(+g[V+(D<<2)>>2]>-(j*f)))break;g[V+(D<<2)>>2]=-(j*f);break}}while(0);g[V+(D<<2)>>2]=+g[d+232>>2]*+g[V+(D<<2)>>2];h=5}else h=5}else h=4;if((H&65535)<256){y=0;v=0.0}else{v=+g[d+1088>>2];y=v>0.0?1:2}l=a[d+1112>>0]|0;t=(y|0)!=0;if(!(l&255|y)){i=ga;return}x=_(c[e+24>>2]|0,h)|0;fa=c[e+12>>2]|0;c[fa+(x<<2)>>2]=ca;c[fa+(x+1<<2)>>2]=z;c[fa+(x+2<<2)>>2]=A;w=(c[k>>2]=ca,+g[k>>2]);g[T+(x<<2)>>2]=-w;u=(c[k>>2]=z,+g[k>>2]);g[T+(x+1<<2)>>2]=-u;s=(c[k>>2]=A,+g[k>>2]);g[T+(x+2<<2)>>2]=-s;p=+g[d+192>>2];q=+g[d+196>>2];r=+g[((U&2048|0)==0?e+4|0:d+248|0)>>2];if(!(l<<24>>24==0|t&p==q)){if(!(U&4)){m=q;n=p}else{c[(c[e+32>>2]|0)+(x<<2)>>2]=c[d+228>>2];m=+g[d+196>>2];n=+g[d+192>>2]}f=+g[d+1084>>2];o=+g[d+1116>>2];j=r*+g[e>>2];do if(!(n>m))if(!(n==m)){if(o/j<0.0)if(f>=n?n-o/j>f:0){f=(n-f)/(o/j);break}else{f=f<n?0.0:1.0;break}if(o/j>0.0)if(f<=m?m-o/j<f:0){f=(m-f)/(o/j);break}else{f=f>m?0.0:1.0;break}else f=0.0}else f=0.0;else f=1.0;while(0);g[V+(x<<2)>>2]=f*o;g[(c[e+36>>2]|0)+(x<<2)>>2]=-(+g[d+1120>>2]*+g[e>>2]);g[(c[e+40>>2]|0)+(x<<2)>>2]=+g[d+1120>>2]*+g[e>>2]}if(!t){i=ga;return}g[V+(x<<2)>>2]=+g[V+(x<<2)>>2]+v*r*+g[e>>2];if(U&1024|0)c[(c[e+32>>2]|0)+(x<<2)>>2]=c[d+260>>2];do if(!(p==q)){l=(c[e+36>>2]|0)+(x<<2)|0;h=c[e+40>>2]|0;if((y|0)==1){g[l>>2]=0.0;g[h+(x<<2)>>2]=3402823466385288598117041.0e14;break}else{g[l>>2]=-3402823466385288598117041.0e14;g[h+(x<<2)>>2]=0.0;break}}else{g[(c[e+36>>2]|0)+(x<<2)>>2]=-3402823466385288598117041.0e14;g[(c[e+40>>2]|0)+(x<<2)>>2]=3402823466385288598117041.0e14}while(0);ia=1.0-+g[d+256>>2];j=+N(+ia);do if(!(ia!=ia|0.0!=0.0|ia==0.0)){fa=c[d+28>>2]|0;e=c[d+32>>2]|0;f=w*+g[fa+328>>2]+u*+g[fa+332>>2]+s*+g[fa+336>>2]-(w*+g[e+328>>2]+u*+g[e+332>>2]+s*+g[e+336>>2]);if((y|0)==1){if(!(f<0.0))break;if(!(+g[V+(x<<2)>>2]<-(j*f)))break;g[V+(x<<2)>>2]=-(j*f);break}else{if(!(f>0.0))break;if(!(+g[V+(x<<2)>>2]>-(j*f)))break;g[V+(x<<2)>>2]=-(j*f);break}}while(0);g[V+(x<<2)>>2]=+g[d+248>>2]*+g[V+(x<<2)>>2];i=ga;return}function Hc(d,e){d=d|0;e=e|0;var f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0,q=0,r=0.0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0,qa=0;pa=c[d+28>>2]|0;qa=c[d+32>>2]|0;q=c[e+24>>2]|0;if(!(a[d+739>>0]|0)){z=+g[d+552>>2];S=+g[pa+4>>2];A=+g[d+568>>2];T=+g[pa+8>>2];B=+g[d+584>>2];U=+g[pa+12>>2];C=+g[d+556>>2];D=+g[d+572>>2];E=+g[d+588>>2];V=+g[d+560>>2];W=+g[d+576>>2];X=+g[d+592>>2];Y=+g[pa+20>>2];Z=+g[pa+24>>2];_=+g[pa+28>>2];$=+g[pa+36>>2];aa=+g[pa+40>>2];ba=+g[pa+44>>2];l=+g[d+600>>2];m=+g[d+604>>2];o=+g[d+608>>2];r=+g[pa+52>>2];u=+g[pa+56>>2];v=+g[pa+60>>2];F=+g[qa+4>>2];G=+g[qa+8>>2];H=+g[qa+12>>2];I=+g[d+624>>2];J=+g[d+640>>2];K=+g[d+656>>2];L=+g[qa+20>>2];M=+g[qa+24>>2];N=+g[qa+28>>2];P=+g[qa+36>>2];Q=+g[qa+40>>2];R=+g[qa+44>>2];na=+g[d+664>>2];oa=+g[d+668>>2];y=+g[d+672>>2];w=+g[qa+52>>2]+(F*na+G*oa+H*y);x=L*na+M*oa+N*y+ +g[qa+56>>2];y=P*na+Q*oa+R*y+ +g[qa+60>>2];t=b[d+736>>1]|0;if(!((t&255)<<24>>24)){i=c[e+8>>2]|0;g[i>>2]=1.0;g[i+(q+1<<2)>>2]=1.0;g[i+((q<<1)+2<<2)>>2]=1.0;i=c[e+16>>2]|0;g[i>>2]=-1.0;g[i+(q+1<<2)>>2]=-1.0;g[i+((q<<1)+2<<2)>>2]=-1.0;i=q<<1;f=+g[pa+52>>2];h=+g[pa+56>>2];k=+g[pa+60>>2]}else{i=q<<1;f=r;h=u;k=v}f=r+(S*l+T*m+U*o)-f;oa=Y*l+Z*m+_*o+u-h;na=$*l+aa*m+ba*o+v-k;j=c[e+12>>2]|0;n=j+(i<<2)|0;c[j>>2]=0;g[j+4>>2]=na;g[j+8>>2]=-oa;g[j+12>>2]=0.0;g[j+(q<<2)>>2]=-na;c[j+(q<<2)+4>>2]=0;g[j+(q<<2)+8>>2]=f;g[j+(q<<2)+12>>2]=0.0;g[n>>2]=oa;g[n+4>>2]=-f;c[n+8>>2]=0;g[n+12>>2]=0.0;f=w-+g[qa+52>>2];oa=x-+g[qa+56>>2];na=y-+g[qa+60>>2];n=c[e+20>>2]|0;i=n+(i<<2)|0;c[n>>2]=0;g[n+4>>2]=-na;g[n+8>>2]=oa;g[n+12>>2]=0.0;g[n+(q<<2)>>2]=na;c[n+(q<<2)+4>>2]=0;g[n+(q<<2)+8>>2]=-f;g[n+(q<<2)+12>>2]=0.0;g[i>>2]=-oa;g[i+4>>2]=f;c[i+8>>2]=0;g[i+12>>2]=0.0;f=+g[e>>2]*+g[e+4>>2];i=c[e+28>>2]|0;if(!((t&255)<<24>>24)){g[i>>2]=f*(w-(r+(S*l+T*m+U*o)));g[i+(q<<2)>>2]=f*(x-(Y*l+Z*m+_*o+u));g[i+(q<<1<<2)>>2]=f*(y-($*l+aa*m+ba*o+v))}s=c[e+24>>2]|0;g[j+(s*3<<2)>>2]=z*S+A*T+B*U;g[j+((s*3|0)+1<<2)>>2]=z*Y+A*Z+B*_;g[j+((s*3|0)+2<<2)>>2]=z*$+A*aa+B*ba;g[j+(s<<2<<2)>>2]=S*C+T*D+U*E;g[j+((s<<2|1)<<2)>>2]=C*Y+D*Z+E*_;g[j+((s<<2|2)<<2)>>2]=C*$+D*aa+E*ba;g[n+(s*3<<2)>>2]=-(z*S+A*T+B*U);g[n+((s*3|0)+1<<2)>>2]=-(z*Y+A*Z+B*_);g[n+((s*3|0)+2<<2)>>2]=-(z*$+A*aa+B*ba);g[n+(s<<2<<2)>>2]=-(S*C+T*D+U*E);g[n+((s<<2|1)<<2)>>2]=-(C*Y+D*Z+E*_);g[n+((s<<2|2)<<2)>>2]=-(C*$+D*aa+E*ba);na=(V*Y+W*Z+X*_)*(I*P+J*Q+K*R)-(V*$+W*aa+X*ba)*(I*L+J*M+K*N);oa=(V*$+W*aa+X*ba)*(F*I+G*J+H*K)-(S*V+T*W+U*X)*(I*P+J*Q+K*R);ma=(S*V+T*W+U*X)*(I*L+J*M+K*N)-(V*Y+W*Z+X*_)*(F*I+G*J+H*K);g[i+(s*3<<2)>>2]=((z*$+A*aa+B*ba)*ma+((z*S+A*T+B*U)*na+(z*Y+A*Z+B*_)*oa))*f;g[i+(s<<2<<2)>>2]=((C*$+D*aa+E*ba)*ma+((S*C+T*D+U*E)*na+(C*Y+D*Z+E*_)*oa))*f;if(!(a[d+716>>0]|0)){q=0;r=0.0}else{r=+g[d+708>>2]*+g[d+732>>2];q=r>0.0?1:2}p=(q|0)!=0;if(!((t&65535)>>>8&65535|q))return;g[j+(s*5<<2)>>2]=S*V+T*W+U*X;g[j+((s*5|0)+1<<2)>>2]=V*Y+W*Z+X*_;g[j+((s*5|0)+2<<2)>>2]=V*$+W*aa+X*ba;g[n+(s*5<<2)>>2]=-(S*V+T*W+U*X);g[n+((s*5|0)+1<<2)>>2]=-(V*Y+W*Z+X*_);g[n+((s*5|0)+2<<2)>>2]=-(V*$+W*aa+X*ba);h=+g[d+688>>2];k=+g[d+692>>2];f=+eh(h-k,6.2831854820251465);if(!(f<-3.1415927410125732))if(f>3.1415927410125732)o=f+-6.2831854820251465;else o=f;else o=f+6.2831854820251465;f=+eh(h+k,6.2831854820251465);if(!(f<-3.1415927410125732)){if(f>3.1415927410125732)f=f+-6.2831854820251465}else f=f+6.2831854820251465;j=o==f;n=i+(s*5<<2)|0;g[n>>2]=0.0;i=c[d+748>>2]|0;m=+g[((i&2|0)==0?e+4|0:d+760|0)>>2];if(!((t&65535)>>>8<<16>>16==0|p&j)){if(i&4|0)c[(c[e+32>>2]|0)+(s*5<<2)>>2]=c[d+752>>2];k=+g[d+728>>2];l=+g[d+680>>2];h=o>f?1.0:0.0;do if(!(o>=f)){h=l/(m*+g[e>>2]);if(h<0.0)if(k>=o&o-h>k){f=(o-k)/h;break}else{f=k<o?0.0:1.0;break}if(h>0.0)if(k<=f&f-h<k){f=(f-k)/h;break}else{f=k>f?0.0:1.0;break}else f=0.0}else f=h;while(0);g[n>>2]=f*l*+g[d+732>>2]+ +g[n>>2];g[(c[e+36>>2]|0)+(s*5<<2)>>2]=-+g[d+684>>2];c[(c[e+40>>2]|0)+(s*5<<2)>>2]=c[d+684>>2]}if(!p)return;g[n>>2]=+g[n>>2]+r*m*+g[e>>2];if(i&1|0)c[(c[e+32>>2]|0)+(s*5<<2)>>2]=c[d+756>>2];do if(!j){j=(c[e+36>>2]|0)+(s*5<<2)|0;i=c[e+40>>2]|0;if((q|0)==1){g[j>>2]=0.0;g[i+(s*5<<2)>>2]=3402823466385288598117041.0e14;break}else{g[j>>2]=-3402823466385288598117041.0e14;g[i+(s*5<<2)>>2]=0.0;break}}else{g[(c[e+36>>2]|0)+(s*5<<2)>>2]=-3402823466385288598117041.0e14;g[(c[e+40>>2]|0)+(s*5<<2)>>2]=3402823466385288598117041.0e14}while(0);h=+g[d+704>>2];do if(h>0.0){f=(S*V+T*W+U*X)*+g[pa+328>>2]+(V*Y+W*Z+X*_)*+g[pa+332>>2]+(V*$+W*aa+X*ba)*+g[pa+336>>2]-((S*V+T*W+U*X)*+g[qa+328>>2]+(V*Y+W*Z+X*_)*+g[qa+332>>2]+(V*$+W*aa+X*ba)*+g[qa+336>>2]);if((q|0)==1){if(!(f<0.0))break;if(!(+g[n>>2]<-(h*f)))break;g[n>>2]=-(h*f);break}else{if(!(f>0.0))break;if(!(+g[n>>2]>-(h*f)))break;g[n>>2]=-(h*f);break}}while(0);g[n>>2]=+g[d+700>>2]*+g[n>>2];return}W=+g[pa+4>>2];X=+g[pa+8>>2];Y=+g[pa+12>>2];u=+g[d+556>>2];x=+g[d+572>>2];z=+g[d+588>>2];Z=+g[d+560>>2];_=+g[d+576>>2];$=+g[d+592>>2];aa=+g[pa+20>>2];ba=+g[pa+24>>2];ca=+g[pa+28>>2];da=+g[pa+36>>2];ea=+g[pa+40>>2];fa=+g[pa+44>>2];ha=+g[d+600>>2];ga=+g[d+604>>2];o=+g[d+608>>2];h=+g[pa+52>>2]+(W*ha+X*ga+Y*o);w=aa*ha+ba*ga+ca*o+ +g[pa+56>>2];o=da*ha+ea*ga+fa*o+ +g[pa+60>>2];ga=+g[qa+4>>2];ha=+g[qa+8>>2];ia=+g[qa+12>>2];ja=+g[d+624>>2];ka=+g[d+640>>2];P=+g[d+656>>2];Q=+g[qa+20>>2];R=+g[qa+24>>2];S=+g[qa+28>>2];T=+g[qa+36>>2];U=+g[qa+40>>2];V=+g[qa+44>>2];r=+g[d+664>>2];y=+g[d+668>>2];k=+g[d+672>>2];f=+g[qa+52>>2];v=+g[qa+56>>2];m=+g[qa+60>>2];J=f+(ga*r+ha*y+ia*k)-h;K=Q*r+R*y+S*k+v-w;L=T*r+U*y+V*k+m-o;A=+g[(c[d+28>>2]|0)+344>>2];B=+g[(c[d+32>>2]|0)+344>>2];I=A+B>0.0?B/(A+B):.5;la=(W*Z+X*_+Y*$)*I+(ga*ja+ha*ka+ia*P)*(1.0-I);ma=(Z*aa+_*ba+$*ca)*I+(ja*Q+ka*R+P*S)*(1.0-I);na=(Z*da+_*ea+$*fa)*I+(ja*T+ka*U+P*V)*(1.0-I);oa=1.0/+O(+(la*la+ma*ma+na*na));C=(f+(ga*r+ha*y+ia*k)-f)*la*oa+(Q*r+R*y+S*k+v-v)*ma*oa+(T*r+U*y+V*k+m-m)*na*oa;f=f+(ga*r+ha*y+ia*k)-f-la*oa*C;v=Q*r+R*y+S*k+v-v-ma*oa*C;m=T*r+U*y+V*k+m-m-na*oa*C;h=h-+g[pa+52>>2];w=w-+g[pa+56>>2];o=o-+g[pa+60>>2];k=la*oa*(h*la*oa+w*ma*oa+o*na*oa);y=ma*oa*(h*la*oa+w*ma*oa+o*na*oa);r=na*oa*(h*la*oa+w*ma*oa+o*na*oa);G=h-k+I*(k-la*oa*C);H=w-y+I*(y-ma*oa*C);F=o-r+I*(r-na*oa*C);D=f-(1.0-I)*(k-la*oa*C);E=v-(1.0-I)*(y-ma*oa*C);C=m-(1.0-I)*(r-na*oa*C);l=(I*f+(1.0-I)*(h-k))*(I*f+(1.0-I)*(h-k))+(I*v+(1.0-I)*(w-y))*(I*v+(1.0-I)*(w-y))+(I*m+(1.0-I)*(o-r))*(I*m+(1.0-I)*(o-r));if(l>1.1920928955078125e-07){z=1.0/+O(+l);N=(I*f+(1.0-I)*(h-k))*z;M=z*(I*m+(1.0-I)*(o-r));w=z*(I*v+(1.0-I)*(w-y))}else{N=W*u+X*x+Y*z;M=u*da+x*ea+z*fa;w=u*aa+x*ba+z*ca}r=ma*oa*M-na*oa*w;u=na*oa*N-M*la*oa;v=w*la*oa-ma*oa*N;t=c[e+12>>2]|0;g[t>>2]=H*M-F*w;g[t+4>>2]=F*N-G*M;g[t+8>>2]=G*w-H*N;t=c[e+20>>2]|0;g[t>>2]=-(E*M-C*w);g[t+4>>2]=-(C*N-D*M);g[t+8>>2]=-(D*w-E*N);if(A<1.1920928955078125e-07|B<1.1920928955078125e-07?(a[d+716>>0]|0)!=0:0){f=(1.0-I)*(E*v-C*u);h=(1.0-I)*(C*r-D*v);k=(1.0-I)*(D*u-E*r);l=I*(H*v-F*u);m=I*(F*r-G*v);o=I*(G*u-H*r)}else{f=E*v-C*u;h=C*r-D*v;k=D*u-E*r;l=H*v-F*u;m=F*r-G*v;o=G*u-H*r}t=(c[e+12>>2]|0)+(q<<2)|0;g[t>>2]=l;g[t+4>>2]=m;g[t+8>>2]=o;t=c[e+20>>2]|0;g[t+(q<<2)>>2]=-f;g[t+(q+1<<2)>>2]=-h;g[t+(q+2<<2)>>2]=-k;if(A<1.1920928955078125e-07|B<1.1920928955078125e-07){o=(1.0-I)*(E*na*oa-C*ma*oa);m=(1.0-I)*(C*la*oa-D*na*oa);l=(1.0-I)*(D*ma*oa-E*la*oa);k=I*(H*na*oa-F*ma*oa);h=I*(F*la*oa-G*na*oa);f=I*(G*ma*oa-H*la*oa)}else{o=E*na*oa-C*ma*oa;m=C*la*oa-D*na*oa;l=D*ma*oa-E*la*oa;k=H*na*oa-F*ma*oa;h=F*la*oa-G*na*oa;f=G*ma*oa-H*la*oa}i=(c[e+12>>2]|0)+(q<<1<<2)|0;g[i>>2]=k;g[i+4>>2]=h;g[i+8>>2]=f;i=c[e+20>>2]|0;g[i+(q<<1<<2)>>2]=-o;g[i+((q<<1|1)<<2)>>2]=-m;g[i+((q<<1)+2<<2)>>2]=-l;f=+g[e>>2]*+g[e+4>>2];if(!(a[d+736>>0]|0)){p=c[e+8>>2]|0;g[p>>2]=N;g[p+4>>2]=w;g[p+8>>2]=M;p=(c[e+8>>2]|0)+(q<<2)|0;g[p>>2]=r;g[p+4>>2]=u;g[p+8>>2]=v;p=(c[e+8>>2]|0)+(q<<1<<2)|0;g[p>>2]=la*oa;g[p+4>>2]=ma*oa;g[p+8>>2]=na*oa;p=c[e+16>>2]|0;h=-N;g[p>>2]=h;g[p+4>>2]=-w;g[p+8>>2]=-M;p=c[e+16>>2]|0;g[p+(q<<2)>>2]=-r;g[p+(q+1<<2)>>2]=-u;g[p+(q+2<<2)>>2]=-v;p=c[e+16>>2]|0;g[p+(q<<1<<2)>>2]=-(la*oa);g[p+((q<<1|1)<<2)>>2]=-(ma*oa);g[p+((q<<1)+2<<2)>>2]=-(na*oa);p=c[e+28>>2]|0;g[p>>2]=f*(J*N+K*w+L*M);g[p+(q<<2)>>2]=f*(J*r+K*u+L*v);g[p+(q<<1<<2)>>2]=f*(J*la*oa+K*ma*oa+L*na*oa);f=h;h=-r;k=-u;l=-v;i=c[e+20>>2]|0}else{f=-N;h=-r;k=-u;l=-v;p=c[e+28>>2]|0}j=c[e+12>>2]|0;g[j+(q*3<<2)>>2]=N;g[j+((q*3|0)+1<<2)>>2]=w;g[j+((q*3|0)+2<<2)>>2]=M;g[j+(q<<2<<2)>>2]=r;g[j+((q<<2|1)<<2)>>2]=u;g[j+((q<<2|2)<<2)>>2]=v;g[i+(q*3<<2)>>2]=f;g[i+((q*3|0)+1<<2)>>2]=-w;g[i+((q*3|0)+2<<2)>>2]=-M;g[i+(q<<2<<2)>>2]=h;g[i+((q<<2|1)<<2)>>2]=k;g[i+((q<<2|2)<<2)>>2]=l;K=+g[e>>2]*+g[e+4>>2];L=(Z*aa+_*ba+$*ca)*(ja*T+ka*U+P*V)-(Z*da+_*ea+$*fa)*(ja*Q+ka*R+P*S);fa=(Z*da+_*ea+$*fa)*(ga*ja+ha*ka+ia*P)-(W*Z+X*_+Y*$)*(ja*T+ka*U+P*V);ka=(W*Z+X*_+Y*$)*(ja*Q+ka*R+P*S)-(Z*aa+_*ba+$*ca)*(ga*ja+ha*ka+ia*P);g[p+(q*3<<2)>>2]=K*(L*N+fa*w+ka*M);g[p+(q<<2<<2)>>2]=K*(L*r+fa*u+ka*v);if(!(a[d+716>>0]|0)){t=0;r=0.0}else{r=+g[d+708>>2]*+g[d+732>>2];t=r>0.0?1:2}n=a[d+737>>0]|0;q=(t|0)!=0;if(!(n&255|t))return;s=(c[e+24>>2]|0)*5|0;g[j+(s<<2)>>2]=la*oa;g[j+(s+1<<2)>>2]=ma*oa;g[j+(s+2<<2)>>2]=na*oa;g[i+(s<<2)>>2]=-(la*oa);g[i+(s+1<<2)>>2]=-(ma*oa);g[i+(s+2<<2)>>2]=-(na*oa);h=+g[d+688>>2];k=+g[d+692>>2];f=+eh(h-k,6.2831854820251465);if(!(f<-3.1415927410125732))if(f>3.1415927410125732)o=f+-6.2831854820251465;else o=f;else o=f+6.2831854820251465;f=+eh(h+k,6.2831854820251465);if(!(f<-3.1415927410125732)){if(f>3.1415927410125732)f=f+-6.2831854820251465}else f=f+6.2831854820251465;j=o==f;p=p+(s<<2)|0;g[p>>2]=0.0;i=c[d+748>>2]|0;m=+g[((i&2|0)==0?e+4|0:d+760|0)>>2];if(!(n<<24>>24==0|q&j)){if(i&4|0)c[(c[e+32>>2]|0)+(s<<2)>>2]=c[d+752>>2];k=+g[d+728>>2];l=+g[d+680>>2];h=o>f?1.0:0.0;do if(!(o>=f)){h=l/(m*+g[e>>2]);if(h<0.0)if(k>=o&o-h>k){f=(o-k)/h;break}else{f=k<o?0.0:1.0;break}if(h>0.0)if(k<=f&f-h<k){f=(f-k)/h;break}else{f=k>f?0.0:1.0;break}else f=0.0}else f=h;while(0);g[p>>2]=f*l*+g[d+732>>2]+ +g[p>>2];g[(c[e+36>>2]|0)+(s<<2)>>2]=-+g[d+684>>2];c[(c[e+40>>2]|0)+(s<<2)>>2]=c[d+684>>2]}if(!q)return;g[p>>2]=+g[p>>2]+r*m*+g[e>>2];if(i&1|0)c[(c[e+32>>2]|0)+(s<<2)>>2]=c[d+756>>2];do if(!j){j=(c[e+36>>2]|0)+(s<<2)|0;i=c[e+40>>2]|0;if((t|0)==1){g[j>>2]=0.0;g[i+(s<<2)>>2]=3402823466385288598117041.0e14;break}else{g[j>>2]=-3402823466385288598117041.0e14;g[i+(s<<2)>>2]=0.0;break}}else{g[(c[e+36>>2]|0)+(s<<2)>>2]=-3402823466385288598117041.0e14;g[(c[e+40>>2]|0)+(s<<2)>>2]=3402823466385288598117041.0e14}while(0);h=+g[d+704>>2];do if(h>0.0){f=+g[pa+328>>2]*la*oa+ +g[pa+332>>2]*ma*oa+ +g[pa+336>>2]*na*oa-(la*oa*+g[qa+328>>2]+ma*oa*+g[qa+332>>2]+na*oa*+g[qa+336>>2]);if((t|0)==1){if(!(f<0.0))break;if(!(+g[p>>2]<-(h*f)))break;g[p>>2]=-(h*f);break}else{if(!(f>0.0))break;if(!(+g[p>>2]>-(h*f)))break;g[p>>2]=-(h*f);break}}while(0);g[p>>2]=+g[d+700>>2]*+g[p>>2];return}function Ic(d,e,f,h,j,k){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=+k;var l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0;F=i;i=i+896|0;E=c[h+4>>2]|0;D=c[h+12>>2]|0;w=c[E+4>>2]|0;if((w|0)<20){c[F+712>>2]=3708;c[F+712+168>>2]=0;g[F+712+172>>2]=k;c[F+712+164>>2]=c[j+4>>2];g[F+352+308>>2]=9.999999747378752e-05;a[F+352+332>>0]=0;c[F+288>>2]=9120;c[F+64>>2]=9188;c[F+64+4>>2]=F+352;c[F+64+8>>2]=F+288;c[F+64+12>>2]=d;c[F+64+16>>2]=E;c[F+64+20>>2]=0;if((Xd(F+64|0,e,f,D,D,F+712|0)|0?(l=F+712+132|0,m=+g[l>>2],n=+g[F+712+136>>2],p=+g[F+712+140>>2],m*m+n*n+p*p>9.999999747378752e-05):0)?(t=+g[F+712+164>>2],t<+g[j+4>>2]):0){k=1.0/+O(+(m*m+n*n+p*p));g[l>>2]=m*k;g[F+712+136>>2]=n*k;g[F+712+140>>2]=p*k;c[F+16>>2]=c[h+8>>2];c[F+16+4>>2]=0;c[F+16+8>>2]=c[l>>2];c[F+16+8+4>>2]=c[l+4>>2];c[F+16+8+8>>2]=c[l+8>>2];c[F+16+8+12>>2]=c[l+12>>2];c[F+16+24>>2]=c[F+712+148>>2];c[F+16+24+4>>2]=c[F+712+148+4>>2];c[F+16+24+8>>2]=c[F+712+148+8>>2];c[F+16+24+12>>2]=c[F+712+148+12>>2];g[F+16+40>>2]=t;+_b[c[(c[j>>2]|0)+12>>2]&15](j,F+16|0,1)}i=F;return}if((w+-21|0)>>>0>=9){if((w|0)!=31){i=F;return}li(15534);if((c[E+16>>2]|0)>0){l=0;do{u=c[E+24>>2]|0;m=+g[u+(l*80|0)>>2];p=+g[u+(l*80|0)+4>>2];s=+g[u+(l*80|0)+8>>2];n=+g[u+(l*80|0)+16>>2];q=+g[u+(l*80|0)+20>>2];v=+g[u+(l*80|0)+24>>2];o=+g[u+(l*80|0)+32>>2];r=+g[u+(l*80|0)+36>>2];y=+g[u+(l*80|0)+40>>2];N=+g[u+(l*80|0)+48>>2];M=+g[u+(l*80|0)+52>>2];C=+g[u+(l*80|0)+56>>2];u=c[u+(l*80|0)+64>>2]|0;L=+g[D>>2];K=+g[D+4>>2];J=+g[D+8>>2];I=+g[D+16>>2];H=+g[D+20>>2];G=+g[D+24>>2];t=+g[D+32>>2];x=+g[D+36>>2];z=+g[D+40>>2];A=N*L+M*K+C*J+ +g[D+48>>2];B=N*I+M*H+C*G+ +g[D+52>>2];C=N*t+M*x+C*z+ +g[D+56>>2];g[F+712>>2]=m*L+n*K+o*J;g[F+712+4>>2]=p*L+q*K+r*J;g[F+712+8>>2]=s*L+v*K+y*J;g[F+712+12>>2]=0.0;g[F+712+16>>2]=m*I+n*H+o*G;g[F+712+20>>2]=p*I+q*H+r*G;g[F+712+24>>2]=s*I+v*H+y*G;g[F+712+28>>2]=0.0;g[F+712+32>>2]=m*t+n*x+o*z;g[F+712+36>>2]=p*t+q*x+r*z;g[F+712+40>>2]=s*t+v*x+y*z;g[F+712+44>>2]=0.0;g[F+712+48>>2]=A;g[F+712+52>>2]=B;g[F+712+56>>2]=C;g[F+712+60>>2]=0.0;b[F+352+8>>1]=1;b[F+352+10>>1]=-1;c[F+352>>2]=5912;c[F+352+12>>2]=j;c[F+352+16>>2]=l;c[F+352+4>>2]=c[j+4>>2];w=c[h+8>>2]|0;c[F+288>>2]=h;c[F+288+4>>2]=u;c[F+288+8>>2]=w;c[F+288+12>>2]=F+712;c[F+288+16>>2]=-1;c[F+288+20>>2]=l;Ic(d,e,f,F+288|0,F+352|0,k);l=l+1|0}while((l|0)<(c[E+16>>2]|0))}l=c[2357]|0;E=(c[l+16>>2]|0)+-1|0;c[l+16>>2]=E;if(E|0){i=F;return}do if(c[l+4>>2]|0){tb(F+712|0,0)|0;E=c[6434]|0;g[l+8>>2]=+g[l+8>>2]+ +(((c[F+712+4>>2]|0)-(c[E+4>>2]|0)+(((c[F+712>>2]|0)-(c[E>>2]|0)|0)*1e6|0)-(c[l+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[l+16>>2]|0)){l=c[2357]|0;break}else{i=F;return}}while(0);c[2357]=c[l+20>>2];i=F;return}switch(w|0){case 21:{p=+g[D>>2];q=+g[D+16>>2];r=+g[D+32>>2];s=+g[D+4>>2];t=+g[D+20>>2];v=+g[D+36>>2];x=+g[D+8>>2];y=+g[D+24>>2];z=+g[D+40>>2];A=-+g[D+48>>2];B=-+g[D+52>>2];C=-+g[D+56>>2];o=+g[e+48>>2];n=+g[e+52>>2];m=+g[e+56>>2];g[F+352>>2]=p*A+q*B+r*C+(p*o+q*n+r*m);g[F+352+4>>2]=s*A+t*B+v*C+(s*o+t*n+v*m);g[F+352+8>>2]=x*A+y*B+z*C+(x*o+y*n+z*m);g[F+352+12>>2]=0.0;m=+g[f+48>>2];n=+g[f+52>>2];o=+g[f+56>>2];P=+g[f>>2];G=+g[f+16>>2];H=+g[f+32>>2];I=+g[f+4>>2];J=+g[f+20>>2];K=+g[f+36>>2];L=+g[f+8>>2];M=+g[f+24>>2];N=+g[f+40>>2];g[F+288>>2]=p*P+q*G+r*H;g[F+288+4>>2]=p*I+q*J+r*K;g[F+288+8>>2]=p*L+q*M+r*N;g[F+288+12>>2]=0.0;g[F+288+16>>2]=s*P+t*G+v*H;g[F+288+20>>2]=s*I+t*J+v*K;g[F+288+24>>2]=s*L+t*M+v*N;g[F+288+28>>2]=0.0;g[F+288+32>>2]=x*P+y*G+z*H;g[F+288+36>>2]=x*I+y*J+z*K;g[F+288+40>>2]=x*L+y*M+z*N;l=F+288+44|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;l=c[h+8>>2]|0;N=+Sb[c[(c[E>>2]|0)+48>>2]&15](E);c[F+64>>2]=9048;c[F+64+4>>2]=d;c[F+64+8>>2]=c[e>>2];c[F+64+8+4>>2]=c[e+4>>2];c[F+64+8+8>>2]=c[e+8>>2];c[F+64+8+12>>2]=c[e+12>>2];c[F+64+24>>2]=c[e+16>>2];c[F+64+24+4>>2]=c[e+16+4>>2];c[F+64+24+8>>2]=c[e+16+8>>2];c[F+64+24+12>>2]=c[e+16+12>>2];c[F+64+40>>2]=c[e+32>>2];c[F+64+40+4>>2]=c[e+32+4>>2];c[F+64+40+8>>2]=c[e+32+8>>2];c[F+64+40+12>>2]=c[e+32+12>>2];c[F+64+56>>2]=c[e+48>>2];c[F+64+56+4>>2]=c[e+48+4>>2];c[F+64+56+8>>2]=c[e+48+8>>2];c[F+64+56+12>>2]=c[e+48+12>>2];c[F+64+72>>2]=c[f>>2];c[F+64+72+4>>2]=c[f+4>>2];c[F+64+72+8>>2]=c[f+8>>2];c[F+64+72+12>>2]=c[f+12>>2];c[F+64+88>>2]=c[f+16>>2];c[F+64+88+4>>2]=c[f+16+4>>2];c[F+64+88+8>>2]=c[f+16+8>>2];c[F+64+88+12>>2]=c[f+16+12>>2];c[F+64+104>>2]=c[f+32>>2];c[F+64+104+4>>2]=c[f+32+4>>2];c[F+64+104+8>>2]=c[f+32+8>>2];c[F+64+104+12>>2]=c[f+32+12>>2];c[F+64+120>>2]=c[f+48>>2];c[F+64+120+4>>2]=c[f+48+4>>2];c[F+64+120+8>>2]=c[f+48+8>>2];c[F+64+120+12>>2]=c[f+48+12>>2];c[F+64+136>>2]=c[D>>2];c[F+64+136+4>>2]=c[D+4>>2];c[F+64+136+8>>2]=c[D+8>>2];c[F+64+136+12>>2]=c[D+12>>2];c[F+64+152>>2]=c[D+16>>2];c[F+64+152+4>>2]=c[D+16+4>>2];c[F+64+152+8>>2]=c[D+16+8>>2];c[F+64+152+12>>2]=c[D+16+12>>2];c[F+64+168>>2]=c[D+32>>2];c[F+64+168+4>>2]=c[D+32+4>>2];c[F+64+168+8>>2]=c[D+32+8>>2];c[F+64+168+12>>2]=c[D+32+12>>2];c[F+64+184>>2]=c[D+48>>2];c[F+64+184+4>>2]=c[D+48+4>>2];c[F+64+184+8>>2]=c[D+48+8>>2];c[F+64+184+12>>2]=c[D+48+12>>2];g[F+64+204>>2]=N;c[F+64>>2]=5864;c[F+64+212>>2]=j;c[F+64+216>>2]=l;c[F+64+220>>2]=E;c[F+64+200>>2]=c[j+4>>2];g[F+64+208>>2]=k;mc[c[(c[d>>2]|0)+8>>2]&127](d,F+288|0,F+16|0,F);l=c[E+48>>2]|0;c[F+712>>2]=6904;c[F+712+4>>2]=l;c[F+712+8>>2]=F+64;l=c[E+52>>2]|0;if(!(a[l+60>>0]|0))Re(l,F+712|0,F+352|0,p*A+q*B+r*C+(p*m+q*n+r*o),s*A+t*B+v*C+(s*m+t*n+v*o),x*A+y*B+z*C+(x*m+y*n+z*o),F+16|0,F);else ze(l,F+712|0,F+352|0,p*A+q*B+r*C+(p*m+q*n+r*o),s*A+t*B+v*C+(s*m+t*n+v*o),x*A+y*B+z*C+(x*m+y*n+z*o),F+16|0,F,c[l+56>>2]|0);i=F;return}case 28:{c[F+712>>2]=3708;c[F+712+168>>2]=0;g[F+712+172>>2]=k;c[F+712+164>>2]=c[j+4>>2];c[F+352>>2]=9188;c[F+352+4>>2]=0;c[F+352+8>>2]=0;c[F+352+12>>2]=d;c[F+352+16>>2]=0;c[F+352+20>>2]=E;if((Xd(F+352|0,e,f,D,D,F+712|0)|0?(u=F+712+132|0,o=+g[u>>2],q=+g[F+712+136>>2],r=+g[F+712+140>>2],o*o+q*q+r*r>9.999999747378752e-05):0)?(s=+g[F+712+164>>2],s<+g[j+4>>2]):0){P=1.0/+O(+(o*o+q*q+r*r));g[u>>2]=o*P;g[F+712+136>>2]=q*P;g[F+712+140>>2]=r*P;c[F+288>>2]=c[h+8>>2];c[F+288+4>>2]=0;c[F+288+8>>2]=c[u>>2];c[F+288+8+4>>2]=c[u+4>>2];c[F+288+8+8>>2]=c[u+8>>2];c[F+288+8+12>>2]=c[u+12>>2];c[F+288+24>>2]=c[F+712+148>>2];c[F+288+24+4>>2]=c[F+712+148+4>>2];c[F+288+24+8>>2]=c[F+712+148+8>>2];c[F+288+24+12>>2]=c[F+712+148+12>>2];g[F+288+40>>2]=s;+_b[c[(c[j>>2]|0)+12>>2]&15](j,F+288|0,1)}i=F;return}default:{p=+g[D>>2];q=+g[D+16>>2];r=+g[D+32>>2];x=+g[D+4>>2];y=+g[D+20>>2];z=+g[D+36>>2];J=+g[D+8>>2];L=+g[D+24>>2];N=+g[D+40>>2];H=-+g[D+48>>2];G=-+g[D+52>>2];C=-+g[D+56>>2];A=+g[e+48>>2];B=+g[e+52>>2];m=+g[e+56>>2];o=p*H+q*G+r*C+(p*A+q*B+r*m);n=x*H+y*G+z*C+(x*A+y*B+z*m);m=J*H+L*G+N*C+(J*A+L*B+N*m);B=+g[f+48>>2];A=+g[f+52>>2];v=+g[f+56>>2];s=p*H+q*G+r*C+(p*B+q*A+r*v);t=x*H+y*G+z*C+(x*B+y*A+z*v);v=J*H+L*G+N*C+(J*B+L*A+N*v);A=+g[f>>2];B=+g[f+16>>2];C=+g[f+32>>2];G=+g[f+4>>2];H=+g[f+20>>2];I=+g[f+36>>2];K=+g[f+8>>2];M=+g[f+24>>2];P=+g[f+40>>2];g[F+712>>2]=p*A+q*B+r*C;g[F+712+4>>2]=p*G+q*H+r*I;g[F+712+8>>2]=p*K+q*M+r*P;g[F+712+12>>2]=0.0;g[F+712+16>>2]=x*A+y*B+z*C;g[F+712+20>>2]=x*G+y*H+z*I;g[F+712+24>>2]=x*K+y*M+z*P;g[F+712+28>>2]=0.0;g[F+712+32>>2]=J*A+L*B+N*C;g[F+712+36>>2]=J*G+L*H+N*I;g[F+712+40>>2]=J*K+L*M+N*P;w=F+712+44|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[w+12>>2]=0;c[w+16>>2]=0;h=c[h+8>>2]|0;P=+Sb[c[(c[E>>2]|0)+48>>2]&15](E);c[F+352>>2]=9048;c[F+352+4>>2]=d;c[F+352+8>>2]=c[e>>2];c[F+352+8+4>>2]=c[e+4>>2];c[F+352+8+8>>2]=c[e+8>>2];c[F+352+8+12>>2]=c[e+12>>2];c[F+352+24>>2]=c[e+16>>2];c[F+352+24+4>>2]=c[e+16+4>>2];c[F+352+24+8>>2]=c[e+16+8>>2];c[F+352+24+12>>2]=c[e+16+12>>2];c[F+352+40>>2]=c[e+32>>2];c[F+352+40+4>>2]=c[e+32+4>>2];c[F+352+40+8>>2]=c[e+32+8>>2];c[F+352+40+12>>2]=c[e+32+12>>2];c[F+352+56>>2]=c[e+48>>2];c[F+352+56+4>>2]=c[e+48+4>>2];c[F+352+56+8>>2]=c[e+48+8>>2];c[F+352+56+12>>2]=c[e+48+12>>2];c[F+352+72>>2]=c[f>>2];c[F+352+72+4>>2]=c[f+4>>2];c[F+352+72+8>>2]=c[f+8>>2];c[F+352+72+12>>2]=c[f+12>>2];c[F+352+88>>2]=c[f+16>>2];c[F+352+88+4>>2]=c[f+16+4>>2];c[F+352+88+8>>2]=c[f+16+8>>2];c[F+352+88+12>>2]=c[f+16+12>>2];c[F+352+104>>2]=c[f+32>>2];c[F+352+104+4>>2]=c[f+32+4>>2];c[F+352+104+8>>2]=c[f+32+8>>2];c[F+352+104+12>>2]=c[f+32+12>>2];c[F+352+120>>2]=c[f+48>>2];c[F+352+120+4>>2]=c[f+48+4>>2];c[F+352+120+8>>2]=c[f+48+8>>2];c[F+352+120+12>>2]=c[f+48+12>>2];c[F+352+136>>2]=c[D>>2];c[F+352+136+4>>2]=c[D+4>>2];c[F+352+136+8>>2]=c[D+8>>2];c[F+352+136+12>>2]=c[D+12>>2];c[F+352+152>>2]=c[D+16>>2];c[F+352+152+4>>2]=c[D+16+4>>2];c[F+352+152+8>>2]=c[D+16+8>>2];c[F+352+152+12>>2]=c[D+16+12>>2];c[F+352+168>>2]=c[D+32>>2];c[F+352+168+4>>2]=c[D+32+4>>2];c[F+352+168+8>>2]=c[D+32+8>>2];c[F+352+168+12>>2]=c[D+32+12>>2];c[F+352+184>>2]=c[D+48>>2];c[F+352+184+4>>2]=c[D+48+4>>2];c[F+352+184+8>>2]=c[D+48+8>>2];c[F+352+184+12>>2]=c[D+48+12>>2];g[F+352+204>>2]=P;c[F+352>>2]=5888;c[F+352+212>>2]=j;c[F+352+216>>2]=h;c[F+352+220>>2]=E;c[F+352+200>>2]=c[j+4>>2];g[F+352+208>>2]=k;mc[c[(c[d>>2]|0)+8>>2]&127](d,F+712|0,F+288|0,F+64|0);g[F+16>>2]=o;g[F+16+4>>2]=n;g[F+16+8>>2]=m;g[F+16+12>>2]=0.0;if(s<o){g[F+16>>2]=s;p=s}else p=o;if(t<n){g[F+16+4>>2]=t;q=t}else q=n;if(v<m){g[F+16+8>>2]=v;r=v}else r=m;g[F>>2]=o;g[F+4>>2]=n;g[F+8>>2]=m;g[F+12>>2]=0.0;if(o<s){g[F>>2]=s;o=s}if(n<t){g[F+4>>2]=t;n=t}if(m<v){g[F+8>>2]=v;m=v}g[F+16>>2]=+g[F+288>>2]+p;g[F+16+4>>2]=+g[F+288+4>>2]+q;g[F+16+8>>2]=+g[F+288+8>>2]+r;g[F>>2]=+g[F+64>>2]+o;g[F+4>>2]=+g[F+64+4>>2]+n;g[F+8>>2]=+g[F+64+8>>2]+m;mc[c[(c[E>>2]|0)+64>>2]&127](E,F+352|0,F+16|0,F);i=F;return}}}function Jc(d,e,f){d=d|0;e=e|0;f=+f;var h=0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0;t=i;i=i+528|0;if((a[d+171>>0]|0)==0?+g[d+172>>2]<=0.0:0){i=t;return}a[d+168>>0]=(Eb[c[(c[d>>2]|0)+48>>2]&127](d)|0)&1;j=+g[d+16>>2]-+g[d+44>>2]*f;g[d+16>>2]=j;if(j>0.0?(k=+g[d+28>>2],j>k):0){g[d+16>>2]=k;j=k}if(j<0.0?(r=+N(+j),m=+N(+(+g[d+24>>2])),r>m):0){g[d+16>>2]=-m;j=-m}g[d+20>>2]=j*f;h=c[d+8>>2]|0;c[t>>2]=c[h+4>>2];c[t+4>>2]=c[h+4+4>>2];c[t+8>>2]=c[h+4+8>>2];c[t+12>>2]=c[h+4+12>>2];c[t+16>>2]=c[h+20>>2];c[t+16+4>>2]=c[h+20+4>>2];c[t+16+8>>2]=c[h+20+8>>2];c[t+16+12>>2]=c[h+20+12>>2];c[t+32>>2]=c[h+36>>2];c[t+32+4>>2]=c[h+36+4>>2];c[t+32+8>>2]=c[h+36+8>>2];c[t+32+12>>2]=c[h+36+12>>2];c[t+48>>2]=c[h+52>>2];c[t+48+4>>2]=c[h+52+4>>2];c[t+48+8>>2]=c[h+52+8>>2];c[t+48+12>>2]=c[h+52+12>>2];h=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}m=+g[d+20>>2];m=+g[d+52>>2]+(m>0.0?m:0.0);q=+g[24504+(h<<4)+4>>2]*m+ +g[d+96>>2];r=m*+g[24504+(h<<4)+8>>2]+ +g[d+100>>2];g[d+112>>2]=+g[d+92>>2]+ +g[24504+(h<<4)>>2]*m;g[d+116>>2]=q;g[d+120>>2]=r;g[d+124>>2]=0.0;c[t+456>>2]=1065353216;c[t+456+4>>2]=0;c[t+456+4+4>>2]=0;c[t+456+4+8>>2]=0;c[t+456+4+12>>2]=0;c[t+456+20>>2]=1065353216;c[t+456+24>>2]=0;c[t+456+24+4>>2]=0;c[t+456+24+8>>2]=0;c[t+456+24+12>>2]=0;c[t+456+40>>2]=1065353216;h=t+456+44|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[t+392>>2]=1065353216;c[t+392+4>>2]=0;c[t+392+4+4>>2]=0;c[t+392+4+8>>2]=0;c[t+392+4+12>>2]=0;c[t+392+20>>2]=1065353216;c[t+392+24>>2]=0;c[t+392+24+4>>2]=0;c[t+392+24+8>>2]=0;c[t+392+24+12>>2]=0;c[t+392+40>>2]=1065353216;h=t+392+44|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;h=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}l=c[d+12>>2]|0;m=+Sb[c[(c[l>>2]|0)+48>>2]&15](l);m=m+ +g[d+56>>2];q=m*+g[24504+(h<<4)+4>>2]+ +g[d+96>>2];r=m*+g[24504+(h<<4)+8>>2]+ +g[d+100>>2];g[t+456+48>>2]=+g[24504+(h<<4)>>2]*m+ +g[d+92>>2];g[t+456+52>>2]=q;g[t+456+56>>2]=r;g[t+456+60>>2]=0.0;c[t+392+48>>2]=c[d+112>>2];c[t+392+48+4>>2]=c[d+112+4>>2];c[t+392+48+8>>2]=c[d+112+8>>2];c[t+392+48+12>>2]=c[d+112+12>>2];h=c[d+8>>2]|0;l=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}m=-+g[24504+(l<<4)>>2];q=-+g[24504+(l<<4)+4>>2];r=-+g[24504+(l<<4)+8>>2];g[t+288+4>>2]=1.0;b[t+288+8>>1]=1;b[t+288+10>>1]=-1;p=t+288+12|0;c[t+288+76>>2]=0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[p+16>>2]=0;c[p+20>>2]=0;c[p+24>>2]=0;c[p+28>>2]=0;c[t+288>>2]=4936;c[t+288+80>>2]=h;g[t+288+84>>2]=m;g[t+288+88>>2]=q;g[t+288+92>>2]=r;g[t+288+96>>2]=0.0;g[t+288+100>>2]=.707099974155426;h=c[d+8>>2]|0;p=c[(c[h+188>>2]|0)+4>>2]|0;b[t+288+8>>1]=p;b[t+288+10>>1]=p>>>16;if(!(a[d+170>>0]|0))Kd(e,c[d+12>>2]|0,t+456|0,t+392|0,t+288|0,0.0);else wd(h,c[d+12>>2]|0,t+456|0,t+392|0,t+288|0,+g[e+56>>2]);if(+g[t+288+4>>2]<1.0){h=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}do if(+g[t+288+44>>2]*+g[24504+(h<<4)>>2]+ +g[t+288+48>>2]*+g[24504+(h<<4)+4>>2]+ +g[t+288+52>>2]*+g[24504+(h<<4)+8>>2]>0.0){j=+g[t+288+4>>2];g[d+108>>2]=+g[d+52>>2]*j;if(!(a[d+180>>0]|0)){c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2];break}else{g[d+92>>2]=(1.0-j)*+g[d+92>>2]+j*+g[d+112>>2];g[d+96>>2]=(1.0-j)*+g[d+96>>2]+j*+g[d+116>>2];g[d+100>>2]=(1.0-j)*+g[d+100>>2]+j*+g[d+120>>2];break}}while(0);g[d+16>>2]=0.0;g[d+20>>2]=0.0}else{c[d+108>>2]=c[d+52>>2];c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2]}if(!(a[d+171>>0]|0)){q=+g[d+172>>2];r=q>f?f:q;g[d+172>>2]=q-f;he(d,e,r*+g[d+60>>2],r*+g[d+64>>2],r*+g[d+68>>2])}else he(d,e,+g[d+60>>2],+g[d+64>>2],+g[d+68>>2]);c[t+272>>2]=c[d+112>>2];c[t+272+4>>2]=c[d+112+4>>2];c[t+272+8>>2]=c[d+112+8>>2];c[t+272+12>>2]=c[d+112+12>>2];j=+g[d+16>>2];j=(j<0.0?-j:0.0)*f;if(j>0.0?(o=+g[d+24>>2],j>o):0){p=b[d+168>>1]|0;j=(p&255)<<24>>24!=0|(p&65535)<256?o:j}h=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}o=j+ +g[d+108>>2];q=+g[24504+(h<<4)>>2]*o;r=o*+g[24504+(h<<4)+4>>2];o=o*+g[24504+(h<<4)+8>>2];g[d+112>>2]=+g[d+112>>2]-q;g[d+116>>2]=+g[d+116>>2]-r;g[d+120>>2]=+g[d+120>>2]-o;h=c[d+8>>2]|0;l=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}n=c[d+40>>2]|0;p=t+168+4|0;g[p>>2]=1.0;b[t+168+8>>1]=1;b[t+168+10>>1]=-1;u=t+168+12|0;c[t+168+76>>2]=0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;c[u+20>>2]=0;c[u+24>>2]=0;c[u+28>>2]=0;c[t+168>>2]=4936;c[t+168+80>>2]=h;c[t+168+84>>2]=c[24504+(l<<4)>>2];c[t+168+84+4>>2]=c[24504+(l<<4)+4>>2];c[t+168+84+8>>2]=c[24504+(l<<4)+8>>2];c[t+168+84+12>>2]=c[24504+(l<<4)+12>>2];c[t+168+100>>2]=n;h=c[d+8>>2]|0;l=c[(c[h+188>>2]|0)+4>>2]|0;b[t+168+8>>1]=l;b[t+168+10>>1]=l>>>16;l=c[d+176>>2]|0;if((a[22560]|0)==0?Wa(22560)|0:0){c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}u=c[d+40>>2]|0;g[t+64+4>>2]=1.0;b[t+64+8>>1]=1;b[t+64+10>>1]=-1;n=t+64+12|0;c[t+64+76>>2]=0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;c[n+20>>2]=0;c[n+24>>2]=0;c[n+28>>2]=0;c[t+64>>2]=4936;c[t+64+80>>2]=h;c[t+64+84>>2]=c[24504+(l<<4)>>2];c[t+64+84+4>>2]=c[24504+(l<<4)+4>>2];c[t+64+84+8>>2]=c[24504+(l<<4)+8>>2];c[t+64+84+12>>2]=c[24504+(l<<4)+12>>2];c[t+64+100>>2]=u;h=c[(c[(c[d+8>>2]|0)+188>>2]|0)+4>>2]|0;b[t+64+8>>1]=h;b[t+64+10>>1]=h>>>16;j=+g[d+112>>2];k=+g[d+116>>2];m=+g[d+120>>2];h=0;while(1){c[t+456>>2]=1065353216;c[t+456+4>>2]=0;c[t+456+4+4>>2]=0;c[t+456+4+8>>2]=0;c[t+456+4+12>>2]=0;c[t+456+20>>2]=1065353216;c[t+456+24>>2]=0;c[t+456+24+4>>2]=0;c[t+456+24+8>>2]=0;c[t+456+24+12>>2]=0;c[t+456+40>>2]=1065353216;c[t+456+44>>2]=0;c[t+392>>2]=1065353216;c[t+392+4>>2]=0;c[t+392+4+4>>2]=0;c[t+392+4+8>>2]=0;c[t+392+4+12>>2]=0;c[t+392+20>>2]=1065353216;c[t+392+24>>2]=0;c[t+392+24+4>>2]=0;c[t+392+24+8>>2]=0;c[t+392+24+12>>2]=0;c[t+392+40>>2]=1065353216;c[t+392+44>>2]=0;c[t+288>>2]=1065353216;c[t+288+4>>2]=0;c[t+288+4+4>>2]=0;c[t+288+4+8>>2]=0;c[t+288+4+12>>2]=0;c[t+288+20>>2]=1065353216;c[t+288+24>>2]=0;c[t+288+24+4>>2]=0;c[t+288+24+8>>2]=0;c[t+288+24+12>>2]=0;c[t+288+40>>2]=1065353216;c[t+288+44>>2]=0;c[t+288+44+4>>2]=0;c[t+288+44+8>>2]=0;c[t+456+48>>2]=c[d+92>>2];c[t+456+48+4>>2]=c[d+92+4>>2];c[t+456+48+8>>2]=c[d+92+8>>2];c[t+456+48+12>>2]=c[d+92+12>>2];c[t+392+48>>2]=c[d+112>>2];c[t+392+48+4>>2]=c[d+112+4>>2];c[t+392+48+8>>2]=c[d+112+8>>2];c[t+392+48+12>>2]=c[d+112+12>>2];g[t+288+48>>2]=j-q;g[t+288+52>>2]=k-r;g[t+288+56>>2]=m-o;g[t+288+60>>2]=0.0;if(!(a[d+170>>0]|0)){Kd(e,c[d+12>>2]|0,t+456|0,t+392|0,t+168|0,+g[e+56>>2]);if(!(+g[p>>2]<1.0))Kd(e,c[d+12>>2]|0,t+456|0,t+288|0,t+64|0,+g[e+56>>2])}else{wd(c[d+8>>2]|0,c[d+12>>2]|0,t+456|0,t+392|0,t+168|0,+g[e+56>>2]);if(!(+g[p>>2]<1.0))wd(c[d+8>>2]|0,c[d+12>>2]|0,t+456|0,t+288|0,t+64|0,+g[e+56>>2])}k=+g[d+16>>2];k=(k<0.0?-k:0.0)*f;n=(a[d+182>>0]|0)==0;if(!n?+g[p>>2]<1.0:0)l=1;else l=+g[t+64+4>>2]<1.0;if(!(k>0.0))break;j=+g[d+52>>2];if(h|(!(k<j)|l^1))break;u=b[d+168>>1]|0;if(!((u&255)<<24>>24!=0|(u&65535)<256)){h=0;break}c[d+112>>2]=c[t+272>>2];c[d+112+4>>2]=c[t+272+4>>2];c[d+112+8>>2]=c[t+272+8>>2];c[d+112+12>>2]=c[t+272+12>>2];h=c[d+176>>2]|0;do if(!(a[22560]|0)){if(!(Wa(22560)|0))break;c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}while(0);j=j+ +g[d+108>>2];k=j*+g[24504+(h<<4)+4>>2];m=j*+g[24504+(h<<4)+8>>2];j=+g[d+112>>2]-+g[24504+(h<<4)>>2]*j;g[d+112>>2]=j;k=+g[d+116>>2]-k;g[d+116>>2]=k;m=+g[d+120>>2]-m;g[d+120>>2]=m;h=1}m=+g[p>>2];if(h|m<1.0){j=+g[d+96>>2];k=(j-+g[t+168+64>>2])*.5;do if(!n)if(!(a[d+181>>0]|0)){g[d+92>>2]=(1.0-k)*+g[d+92>>2]+k*+g[d+112>>2];g[d+96>>2]=(1.0-k)*j+k*+g[d+116>>2];g[d+100>>2]=(1.0-k)*+g[d+100>>2]+k*+g[d+120>>2];h=d+181|0;break}else{g[d+92>>2]=(1.0-m)*+g[d+92>>2]+m*+g[d+112>>2];g[d+96>>2]=(1.0-m)*j+m*+g[d+116>>2];g[d+100>>2]=(1.0-m)*+g[d+100>>2]+m*+g[d+120>>2];h=d+181|0;break}else{g[d+92>>2]=(1.0-m)*+g[d+92>>2]+m*+g[d+112>>2];g[d+96>>2]=(1.0-m)*j+m*+g[d+116>>2];g[d+100>>2]=(1.0-m)*+g[d+100>>2]+m*+g[d+120>>2];h=d+181|0}while(0);a[h>>0]=0;g[d+16>>2]=0.0;g[d+20>>2]=0.0;a[d+169>>0]=0}else{a[d+181>>0]=1;if((!n?(s=+g[d+24>>2],k>s):0)?(u=b[d+168>>1]|0,(u&255)<<24>>24!=0|(u&65535)<256):0){g[d+112>>2]=q+ +g[d+112>>2];g[d+116>>2]=r+ +g[d+116>>2];g[d+120>>2]=o+ +g[d+120>>2];h=c[d+176>>2]|0;do if(!(a[22560]|0)){if(!(Wa(22560)|0))break;c[6126]=1065353216;c[6127]=0;c[6128]=0;c[6129]=0;c[6130]=0;c[6131]=1065353216;c[6132]=0;c[6133]=0;c[6134]=0;c[6135]=0;c[6136]=1065353216;g[6137]=0.0;_a(22560)}while(0);r=s+ +g[d+108>>2];f=r*+g[24504+(h<<4)+4>>2];s=r*+g[24504+(h<<4)+8>>2];g[d+112>>2]=+g[d+112>>2]-+g[24504+(h<<4)>>2]*r;g[d+116>>2]=+g[d+116>>2]-f;g[d+120>>2]=+g[d+120>>2]-s}c[d+92>>2]=c[d+112>>2];c[d+92+4>>2]=c[d+112+4>>2];c[d+92+8>>2]=c[d+112+8>>2];c[d+92+12>>2]=c[d+112+12>>2]}c[t+48>>2]=c[d+92>>2];c[t+48+4>>2]=c[d+92+4>>2];c[t+48+8>>2]=c[d+92+8>>2];c[t+48+12>>2]=c[d+92+12>>2];u=c[d+8>>2]|0;c[u+260>>2]=(c[u+260>>2]|0)+1;c[u+4>>2]=c[t>>2];c[u+4+4>>2]=c[t+4>>2];c[u+4+8>>2]=c[t+8>>2];c[u+4+12>>2]=c[t+12>>2];c[u+20>>2]=c[t+16>>2];c[u+20+4>>2]=c[t+16+4>>2];c[u+20+8>>2]=c[t+16+8>>2];c[u+20+12>>2]=c[t+16+12>>2];c[u+36>>2]=c[t+32>>2];c[u+36+4>>2]=c[t+32+4>>2];c[u+36+8>>2]=c[t+32+8>>2];c[u+36+12>>2]=c[t+32+12>>2];c[u+52>>2]=c[t+48>>2];c[u+52+4>>2]=c[t+48+4>>2];c[u+52+8>>2]=c[t+48+8>>2];c[u+52+12>>2]=c[t+48+12>>2];i=t;return}function Kc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0;z=i;i=i+112|0;c[b+164>>2]=1065353216;c[b+168>>2]=1065353216;c[b+172>>2]=1065353216;g[b+176>>2]=0.0;c[b+180>>2]=0;g[b+184>>2]=999999984306749440.0;c[b+188>>2]=0;c[b+188+4>>2]=0;c[b+188+8>>2]=0;c[b+188+12>>2]=0;c[b+204>>2]=1;c[b+208>>2]=-1;c[b+212>>2]=-1;c[b+216>>2]=1;g[b+220>>2]=0.0;g[b+224>>2]=.5;g[b+228>>2]=0.0;g[b+232>>2]=0.0;c[b+236>>2]=1;c[b+240>>2]=0;g[b+244>>2]=1.0;c[b+248>>2]=0;c[b+248+4>>2]=0;c[b+248+8>>2]=0;c[b+248+12>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;c[b>>2]=3180;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b+284>>2]=0;a[b+408>>0]=1;c[b+404>>2]=0;c[b+396>>2]=0;c[b+400>>2]=0;a[b+428>>0]=1;c[b+424>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;a[b+496>>0]=1;c[b+492>>2]=0;c[b+484>>2]=0;c[b+488>>2]=0;a[b+516>>0]=1;c[b+512>>2]=0;c[b+504>>2]=0;c[b+508>>2]=0;c[b+684>>2]=d;a[b+704>>0]=1;c[b+700>>2]=0;c[b+692>>2]=0;c[b+696>>2]=0;a[b+724>>0]=1;c[b+720>>2]=0;c[b+712>>2]=0;c[b+716>>2]=0;a[b+744>>0]=1;c[b+740>>2]=0;c[b+732>>2]=0;c[b+736>>2]=0;a[b+764>>0]=1;c[b+760>>2]=0;c[b+752>>2]=0;c[b+756>>2]=0;a[b+784>>0]=1;c[b+780>>2]=0;c[b+772>>2]=0;c[b+776>>2]=0;a[b+804>>0]=1;c[b+800>>2]=0;c[b+792>>2]=0;c[b+796>>2]=0;a[b+824>>0]=1;c[b+820>>2]=0;c[b+812>>2]=0;c[b+816>>2]=0;a[b+844>>0]=1;c[b+840>>2]=0;c[b+832>>2]=0;c[b+836>>2]=0;a[b+864>>0]=1;c[b+860>>2]=0;c[b+852>>2]=0;c[b+856>>2]=0;a[b+884>>0]=1;c[b+880>>2]=0;c[b+872>>2]=0;c[b+876>>2]=0;a[b+964>>0]=1;c[b+960>>2]=0;c[b+952>>2]=0;c[b+956>>2]=0;a[b+984>>0]=1;c[b+980>>2]=0;c[b+972>>2]=0;c[b+976>>2]=0;c[b+928>>2]=0;c[b+932>>2]=0;c[b+936>>2]=-1;c[b+940>>2]=0;c[b+944>>2]=0;a[b+1024>>0]=1;c[b+1020>>2]=0;c[b+1012>>2]=0;c[b+1016>>2]=0;a[b+1044>>0]=1;c[b+1040>>2]=0;c[b+1032>>2]=0;c[b+1036>>2]=0;c[b+988>>2]=0;c[b+992>>2]=0;c[b+996>>2]=-1;c[b+1e3>>2]=0;c[b+1004>>2]=0;a[b+1084>>0]=1;c[b+1080>>2]=0;c[b+1072>>2]=0;c[b+1076>>2]=0;a[b+1104>>0]=1;c[b+1100>>2]=0;c[b+1092>>2]=0;c[b+1096>>2]=0;c[b+1048>>2]=0;c[b+1052>>2]=0;c[b+1056>>2]=-1;c[b+1060>>2]=0;c[b+1064>>2]=0;a[b+1124>>0]=1;c[b+1120>>2]=0;c[b+1112>>2]=0;c[b+1116>>2]=0;a[b+1144>>0]=1;c[b+1140>>2]=0;c[b+1132>>2]=0;c[b+1136>>2]=0;a[b+1248>>0]=1;c[b+1244>>2]=0;c[b+1236>>2]=0;c[b+1240>>2]=0;c[b+236>>2]=8;c[b+288>>2]=0;g[b+292>>2]=1.0;c[b+296>>2]=0;c[b+296+4>>2]=0;c[b+296+8>>2]=0;c[b+296+12>>2]=0;c[b+296+16>>2]=0;g[b+316>>2]=.20000000298023224;g[b+320>>2]=0.0;g[b+324>>2]=1.0;g[b+328>>2]=.10000000149011612;g[b+332>>2]=1.0;g[b+336>>2]=.699999988079071;g[b+340>>2]=.10000000149011612;g[b+344>>2]=1.0;g[b+348>>2]=.5;g[b+352>>2]=.5;g[b+356>>2]=.5;g[b+360>>2]=.5;g[b+364>>2]=1.0;g[b+368>>2]=1.0;c[b+372>>2]=0;c[b+376>>2]=1;c[b+380>>2]=0;c[b+384>>2]=4;c[b+388>>2]=1;a[b+472>>0]=0;a[b+473>>0]=0;g[b+476>>2]=0.0;c[b+520>>2]=0;c[b+520+4>>2]=0;c[b+520+8>>2]=0;c[b+520+12>>2]=0;c[b+536>>2]=1065353216;c[b+540>>2]=0;c[b+540+4>>2]=0;c[b+540+8>>2]=0;c[b+540+12>>2]=0;c[b+556>>2]=1065353216;c[b+560>>2]=0;c[b+560+4>>2]=0;c[b+560+8>>2]=0;c[b+560+12>>2]=0;c[b+576>>2]=1065353216;g[b+580>>2]=0.0;c[b+584>>2]=1065353216;c[b+588>>2]=0;c[b+588+4>>2]=0;c[b+588+8>>2]=0;c[b+588+12>>2]=0;c[b+604>>2]=1065353216;c[b+608>>2]=0;c[b+608+4>>2]=0;c[b+608+8>>2]=0;c[b+608+12>>2]=0;c[b+624>>2]=1065353216;g[b+628>>2]=0.0;c[b+680>>2]=0;g[b+888>>2]=0.0;a[b+924>>0]=1;c[b+892>>2]=0;c[b+892+4>>2]=0;c[b+892+8>>2]=0;c[b+892+12>>2]=0;c[b+892+16>>2]=0;c[b+892+20>>2]=0;c[b+892+24>>2]=0;c[b+892+28>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;c[b+8+4>>2]=0;c[b+8+8>>2]=0;c[b+8+12>>2]=0;c[b+24>>2]=1065353216;c[b+28>>2]=0;c[b+28+4>>2]=0;c[b+28+8>>2]=0;c[b+28+12>>2]=0;c[b+44>>2]=1065353216;c[b+48>>2]=0;c[b+48+4>>2]=0;c[b+48+8>>2]=0;c[b+48+12>>2]=0;c[b+48+16>>2]=0;d=c[b+404>>2]|0;if(d|0){if(a[b+408>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+404>>2]=0}a[b+408>>0]=1;c[b+404>>2]=0;c[b+396>>2]=0;c[b+400>>2]=0;d=c[b+424>>2]|0;if(d|0){if(a[b+428>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=0;c[b+416>>2]=0;c[b+420>>2]=0;d=c[b+444>>2]|0;do if(d)if(a[b+448>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);j=c[b+416>>2]|0;d=c[b+420>>2]|0;c[b+444>>2]=0;a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;if((j|0)==(d|0)){s=14;break}else break}else{c[b+444>>2]=0;a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;d=0;s=14;break}else{a[b+448>>0]=1;c[b+444>>2]=0;c[b+436>>2]=0;c[b+440>>2]=0;d=0;s=14}while(0);if((s|0)==14){o=d|0?d<<1:1;if((d|0)<(o|0)){if(!o)m=0;else{c[6435]=(c[6435]|0)+1;d=yc((o<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}m=d;d=c[b+416>>2]|0}l=c[b+424>>2]|0;if((d|0)<=0){if(l)s=22}else{j=0;do{c[m+(j<<2)>>2]=c[l+(j<<2)>>2];j=j+1|0}while((j|0)!=(d|0));s=22}if((s|0)==22){if(a[b+428>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);d=c[b+416>>2]|0}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=m;c[b+420>>2]=o;j=d;d=o}else j=d}c[(c[b+424>>2]|0)+(j<<2)>>2]=1;j=j+1|0;c[b+416>>2]=j;if((j|0)==(d|0)){o=d|0?d<<1:1;if((d|0)<(o|0)){if(!o)m=0;else{c[6435]=(c[6435]|0)+1;d=yc((o<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}m=d;d=c[b+416>>2]|0}l=c[b+424>>2]|0;if((d|0)<=0){if(l)s=35}else{j=0;do{c[m+(j<<2)>>2]=c[l+(j<<2)>>2];j=j+1|0}while((j|0)!=(d|0));s=35}if((s|0)==35){if(a[b+428>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);d=c[b+416>>2]|0}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=m;c[b+420>>2]=o;j=d;d=o}else j=d}c[(c[b+424>>2]|0)+(j<<2)>>2]=2;j=j+1|0;c[b+416>>2]=j;if((j|0)==(d|0)){o=d|0?d<<1:1;if((d|0)<(o|0)){if(!o)m=0;else{c[6435]=(c[6435]|0)+1;d=yc((o<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}m=d;d=c[b+416>>2]|0}l=c[b+424>>2]|0;if((d|0)<=0){if(l)s=48}else{j=0;do{c[m+(j<<2)>>2]=c[l+(j<<2)>>2];j=j+1|0}while((j|0)!=(d|0));s=48}if((s|0)==48){if(a[b+428>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);d=c[b+416>>2]|0}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=m;c[b+420>>2]=o;j=d;d=o}else j=d}c[(c[b+424>>2]|0)+(j<<2)>>2]=3;j=j+1|0;c[b+416>>2]=j;if((j|0)==(d|0)){o=d|0?d<<1:1;if((d|0)<(o|0)){if(!o)m=0;else{c[6435]=(c[6435]|0)+1;d=yc((o<<2|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}m=d;d=c[b+416>>2]|0}l=c[b+424>>2]|0;if((d|0)<=0){if(l)s=61}else{j=0;do{c[m+(j<<2)>>2]=c[l+(j<<2)>>2];j=j+1|0}while((j|0)!=(d|0));s=61}if((s|0)==61){if(a[b+428>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);d=c[b+416>>2]|0}c[b+424>>2]=0}a[b+428>>0]=1;c[b+424>>2]=m;c[b+420>>2]=o}}else d=j;c[(c[b+424>>2]|0)+(d<<2)>>2]=0;c[b+416>>2]=d+1;c[6435]=(c[6435]|0)+1;d=yc(39)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d>>2]=3288;c[d+4>>2]=32;c[d+16>>2]=b;c[b+192>>2]=d;g[d+12>>2]=.25;c[b+1148>>2]=1065353216;c[b+1152>>2]=0;c[b+1152+4>>2]=0;c[b+1152+8>>2]=0;c[b+1152+12>>2]=0;c[b+1168>>2]=1065353216;c[b+1172>>2]=0;c[b+1172+4>>2]=0;c[b+1172+8>>2]=0;c[b+1172+12>>2]=0;c[b+1188>>2]=1065353216;s=b+1192|0;t=s+36|0;do{c[s>>2]=0;s=s+4|0}while((s|0)<(t|0));g[b+1228>>2]=1.0;x=ph(b)|0;g[x+4>>2]=1.0;g[x+8>>2]=1.0;g[x+12>>2]=1.0;c[x+16>>2]=1;s=c[b+192>>2]|0;y=+Sb[c[(c[s>>2]|0)+48>>2]&15](s);s=z;t=s+100|0;do{c[s>>2]=0;s=s+4|0}while((s|0)<(t|0));o=c[b+712>>2]|0;if((o|0)<(e|0)){if((c[b+716>>2]|0)<(e|0)){if(!e){d=0;j=o}else{c[6435]=(c[6435]|0)+1;d=yc((e*104|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}j=c[b+712>>2]|0}if((j|0)>0){l=0;do{s=d+(l*104|0)|0;m=(c[b+720>>2]|0)+(l*104|0)|0;t=s+104|0;do{c[s>>2]=c[m>>2];s=s+4|0;m=m+4|0}while((s|0)<(t|0));l=l+1|0}while((l|0)!=(j|0))}j=c[b+720>>2]|0;if(j|0){if(a[b+724>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+720>>2]=0}a[b+724>>0]=1;c[b+720>>2]=d;c[b+716>>2]=e;d=o}else d=o;do{s=c[b+720>>2]|0;c[s+(d*104|0)>>2]=0;s=s+(d*104|0)+4|0;m=z;t=s+100|0;do{c[s>>2]=c[m>>2];s=s+4|0;m=m+4|0}while((s|0)<(t|0));d=d+1|0}while((d|0)!=(e|0))}c[b+712>>2]=e;if((e|0)>0){l=f;w=0;while(1){u=c[b+720>>2]|0;v=u+(w*104|0)|0;s=v;t=s+104|0;do{c[s>>2]=0;s=s+4|0}while((s|0)<(t|0));j=u+(w*104|0)+8|0;if(!l){f=0;d=0;m=0;o=0;n=0.0}else{f=l+16|0;d=c[l>>2]|0;m=c[l+4>>2]|0;o=c[l+8>>2]|0;n=+g[l+12>>2]}c[j>>2]=d;c[u+(w*104|0)+12>>2]=m;c[u+(w*104|0)+16>>2]=o;g[u+(w*104|0)+20>>2]=n;t=u+(w*104|0)+24|0;c[t>>2]=c[j>>2];c[t+4>>2]=c[j+4>>2];c[t+8>>2]=c[j+8>>2];c[t+12>>2]=c[j+12>>2];r=(c[k>>2]=d,+g[k>>2]);q=(c[k>>2]=m,+g[k>>2]);p=(c[k>>2]=o,+g[k>>2]);if(!h){j=0;n=1.0}else{j=h+4|0;n=+g[h>>2]}g[u+(w*104|0)+88>>2]=n>0.0?1.0/n:0.0;d=c[b+932>>2]|0;if(!d){c[6435]=(c[6435]|0)+1;d=yc(63)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}s=d;t=s+44|0;do{c[s>>2]=0;s=s+4|0}while((s|0)<(t|0))}else c[b+932>>2]=0;c[d+32>>2]=0;c[d+36>>2]=v;c[d+40>>2]=0;g[d>>2]=r-y;g[d+4>>2]=q-y;g[d+8>>2]=p-y;g[d+12>>2]=0.0;g[d+16>>2]=y+r;g[d+20>>2]=y+q;g[d+24>>2]=y+p;g[d+28>>2]=0.0;lf(b+928|0,c[b+928>>2]|0,d);c[b+940>>2]=(c[b+940>>2]|0)+1;c[u+(w*104|0)+96>>2]=d;c[u+(w*104|0)+4>>2]=x;w=w+1|0;if((w|0)==(e|0))break;else{h=j;l=f}}}d=c[b+928>>2]|0;if(!d){c[b+892>>2]=0;c[b+892+4>>2]=0;c[b+892+8>>2]=0;c[b+892+12>>2]=0;c[b+892+16>>2]=0;c[b+892+20>>2]=0;c[b+892+24>>2]=0;c[b+892+28>>2]=0;i=z;return}e=c[b+192>>2]|0;q=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);y=+g[d+4>>2]-q;r=+g[d+8>>2]-q;g[b+892>>2]=+g[d>>2]-q;g[b+896>>2]=y;g[b+900>>2]=r;g[b+904>>2]=0.0;r=q+ +g[d+20>>2];y=q+ +g[d+24>>2];g[b+908>>2]=q+ +g[d+16>>2];g[b+912>>2]=r;g[b+916>>2]=y;g[b+920>>2]=0.0;d=c[b+188>>2]|0;if(!d){i=z;return}e=c[b+684>>2]|0;x=c[e+32>>2]|0;yb[c[(c[x>>2]|0)+16>>2]&31](x,d,b+892|0,b+908|0,c[e+36>>2]|0);i=z;return}function Lc(d,f,h){d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0.0,m=0,n=0.0,o=0.0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0;K=i;i=i+112|0;H=c[d+56>>2]|0;if((h-f|0)==1){if(!(a[d+60>>0]|0)){p=(c[d+96>>2]|0)+(H<<6)|0;q=(c[d+76>>2]|0)+(f<<6)|0;r=p+64|0;do{c[p>>2]=c[q>>2];p=p+4|0;q=q+4|0}while((p|0)<(r|0))}else{J=(c[d+136>>2]|0)+(H<<4)|0;I=(c[d+116>>2]|0)+(f<<4)|0;c[J>>2]=c[I>>2];c[J+4>>2]=c[I+4>>2];c[J+8>>2]=c[I+8>>2];c[J+12>>2]=c[I+12>>2]}c[d+56>>2]=(c[d+56>>2]|0)+1;i=K;return}if((h|0)>(f|0)){m=(a[d+60>>0]|0)==0;if(m){j=c[d+76>>2]|0;k=f;n=0.0;o=0.0;l=0.0;do{n=n+(+g[j+(k<<6)+16>>2]+ +g[j+(k<<6)>>2])*.5;l=l+(+g[j+(k<<6)+20>>2]+ +g[j+(k<<6)+4>>2])*.5;o=o+(+g[j+(k<<6)+24>>2]+ +g[j+(k<<6)+8>>2])*.5;k=k+1|0}while((k|0)!=(h|0))}else{j=c[d+116>>2]|0;s=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];k=f;n=0.0;o=0.0;l=0.0;do{n=n+(+(e[j+(k<<4)+6>>1]|0)/s+x+(+(e[j+(k<<4)>>1]|0)/s+x))*.5;l=l+(+(e[j+(k<<4)+8>>1]|0)/t+y+(+(e[j+(k<<4)+2>>1]|0)/t+y))*.5;o=o+(+(e[j+(k<<4)+10>>1]|0)/u+z+(+(e[j+(k<<4)+4>>1]|0)/u+z))*.5;k=k+1|0}while((k|0)!=(h|0))}C=1.0/+(h-f|0);E=C*n;D=C*l;C=C*o;if(m){j=c[d+76>>2]|0;k=f;o=0.0;n=0.0;l=0.0;do{x=(+g[j+(k<<6)+16>>2]+ +g[j+(k<<6)>>2])*.5-E;y=(+g[j+(k<<6)+20>>2]+ +g[j+(k<<6)+4>>2])*.5-D;z=(+g[j+(k<<6)+24>>2]+ +g[j+(k<<6)+8>>2])*.5-C;o=o+x*x;l=l+y*y;n=n+z*z;k=k+1|0}while((k|0)!=(h|0));s=+(h-f|0)}else{j=c[d+116>>2]|0;s=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];k=f;o=0.0;n=0.0;l=0.0;do{N=(+(e[j+(k<<4)+6>>1]|0)/s+x+(+(e[j+(k<<4)>>1]|0)/s+x))*.5-E;M=(+(e[j+(k<<4)+8>>1]|0)/t+y+(+(e[j+(k<<4)+2>>1]|0)/t+y))*.5-D;L=(+(e[j+(k<<4)+10>>1]|0)/u+z+(+(e[j+(k<<4)+4>>1]|0)/u+z))*.5-C;o=o+N*N;l=l+M*M;n=n+L*L;k=k+1|0}while((k|0)!=(h|0));s=+(h-f|0)}}else{s=+(h-f|0);o=0.0;n=0.0;l=0.0}N=1.0/(s+-1.0);M=N*o;L=N*l;N=N*n;w=M<L?(L<N?2:1):M<N?2:0;c[K+16>>2]=0;c[K+16+4>>2]=0;c[K+16+8>>2]=0;c[K+16+12>>2]=0;if((h|0)>(f|0)){if(!(a[d+60>>0]|0)){j=c[d+76>>2]|0;o=0.0;n=0.0;l=0.0;k=f;do{o=(+g[j+(k<<6)+16>>2]+ +g[j+(k<<6)>>2])*.5+o;n=(+g[j+(k<<6)+20>>2]+ +g[j+(k<<6)+4>>2])*.5+n;l=(+g[j+(k<<6)+24>>2]+ +g[j+(k<<6)+8>>2])*.5+l;k=k+1|0}while((k|0)!=(h|0))}else{j=c[d+116>>2]|0;s=+g[d+36>>2];t=+g[d+40>>2];u=+g[d+44>>2];x=+g[d+4>>2];y=+g[d+8>>2];z=+g[d+12>>2];o=0.0;n=0.0;l=0.0;k=f;do{o=(+(e[j+(k<<4)+6>>1]|0)/s+x+(+(e[j+(k<<4)>>1]|0)/s+x))*.5+o;n=(+(e[j+(k<<4)+8>>1]|0)/t+y+(+(e[j+(k<<4)+2>>1]|0)/t+y))*.5+n;l=(+(e[j+(k<<4)+10>>1]|0)/u+z+(+(e[j+(k<<4)+4>>1]|0)/u+z))*.5+l;k=k+1|0}while((k|0)!=(h|0))}g[K+16>>2]=o;g[K+16+4>>2]=n;g[K+16+8>>2]=l;j=K+16|0}else{j=K+16|0;o=0.0;n=0.0;l=0.0}g[j>>2]=1.0/+(h-f|0)*o;g[K+16+4>>2]=1.0/+(h-f|0)*n;g[K+16+8>>2]=1.0/+(h-f|0)*l;x=+g[K+16+(w<<2)>>2];if((h|0)>(f|0)){v=f;j=f;do{k=(a[d+60>>0]|0)==0;if(k){G=c[d+76>>2]|0;l=+g[G+(v<<6)>>2];n=+g[G+(v<<6)+16>>2];o=+g[G+(v<<6)+4>>2];s=+g[G+(v<<6)+20>>2];t=+g[G+(v<<6)+8>>2];u=+g[G+(v<<6)+24>>2]}else{G=c[d+116>>2]|0;o=+g[d+36>>2];t=+g[d+40>>2];N=+g[d+44>>2];n=+g[d+4>>2];s=+g[d+8>>2];u=+g[d+12>>2];l=+(e[G+(v<<4)>>1]|0)/o+n;n=+(e[G+(v<<4)+6>>1]|0)/o+n;o=+(e[G+(v<<4)+2>>1]|0)/t+s;s=+(e[G+(v<<4)+8>>1]|0)/t+s;t=+(e[G+(v<<4)+4>>1]|0)/N+u;u=+(e[G+(v<<4)+10>>1]|0)/N+u}g[K>>2]=(n+l)*.5;g[K+4>>2]=(s+o)*.5;g[K+8>>2]=(u+t)*.5;g[K+12>>2]=0.0;if(+g[K+(w<<2)>>2]>x){if(k){k=c[d+76>>2]|0;m=k+(v<<6)|0;p=K+48|0;q=m;r=p+64|0;do{c[p>>2]=c[q>>2];p=p+4|0;q=q+4|0}while((p|0)<(r|0));p=m;q=k+(j<<6)|0;r=p+64|0;do{c[p>>2]=c[q>>2];p=p+4|0;q=q+4|0}while((p|0)<(r|0));p=(c[d+76>>2]|0)+(j<<6)|0;q=K+48|0;r=p+64|0;do{c[p>>2]=c[q>>2];p=p+4|0;q=q+4|0}while((p|0)<(r|0))}else{F=c[d+116>>2]|0;G=F+(v<<4)|0;c[K+48>>2]=c[G>>2];c[K+48+4>>2]=c[G+4>>2];c[K+48+8>>2]=c[G+8>>2];c[K+48+12>>2]=c[G+12>>2];F=F+(j<<4)|0;c[G>>2]=c[F>>2];c[G+4>>2]=c[F+4>>2];c[G+8>>2]=c[F+8>>2];c[G+12>>2]=c[F+12>>2];G=(c[d+116>>2]|0)+(j<<4)|0;c[G>>2]=c[K+48>>2];c[G+4>>2]=c[K+48+4>>2];c[G+8>>2]=c[K+48+8>>2];c[G+12>>2]=c[K+48+12>>2]}j=j+1|0}v=v+1|0}while((v|0)!=(h|0))}else j=f;if(!((j|0)>(((h-f|0)/3|0)+f|0)?(j|0)<(h+-1-((h-f|0)/3|0)|0):0))j=(h-f>>1)+f|0;G=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){F=(c[d+96>>2]|0)+(G<<6)|0;c[F>>2]=c[d+20>>2];c[F+4>>2]=c[d+20+4>>2];c[F+8>>2]=c[d+20+8>>2];c[F+12>>2]=c[d+20+12>>2]}else{F=c[d+136>>2]|0;M=(+g[d+24>>2]-+g[d+8>>2])*+g[d+40>>2];N=(+g[d+28>>2]-+g[d+12>>2])*+g[d+44>>2];b[F+(G<<4)>>1]=~~((+g[d+20>>2]-+g[d+4>>2])*+g[d+36>>2])&65534;b[F+(G<<4)+2>>1]=~~M&65534;b[F+(G<<4)+4>>1]=~~N&65534}k=c[d+56>>2]|0;if(!(a[d+60>>0]|0)){F=(c[d+96>>2]|0)+(k<<6)+16|0;c[F>>2]=c[d+4>>2];c[F+4>>2]=c[d+4+4>>2];c[F+8>>2]=c[d+4+8>>2];c[F+12>>2]=c[d+4+12>>2]}else{F=c[d+136>>2]|0;L=+g[d+4>>2];M=+g[d+8>>2];N=+g[d+12>>2];M=(M-M)*+g[d+40>>2];N=(N-N)*+g[d+44>>2];b[F+(k<<4)+6>>1]=~~((L-L)*+g[d+36>>2]+1.0)&65535|1;b[F+(k<<4)+8>>1]=~~(M+1.0)&65535|1;b[F+(k<<4)+10>>1]=~~(N+1.0)&65535|1}F=c[d+56>>2]|0;if((h|0)>(f|0)){A=a[d+60>>0]|0;B=f;do{if(!(A<<24>>24)){k=c[d+76>>2]|0;l=+g[k+(B<<6)>>2];n=+g[k+(B<<6)+4>>2];o=+g[k+(B<<6)+8>>2];s=+g[k+(B<<6)+12>>2];t=+g[k+(B<<6)+16>>2];u=+g[k+(B<<6)+20>>2];x=+g[k+(B<<6)+24>>2];y=+g[k+(B<<6)+28>>2];k=c[d+96>>2]|0;if(l<+g[k+(F<<6)>>2])g[k+(F<<6)>>2]=l;if(n<+g[k+(F<<6)+4>>2])g[k+(F<<6)+4>>2]=n;if(o<+g[k+(F<<6)+8>>2])g[k+(F<<6)+8>>2]=o;if(s<+g[k+(F<<6)+12>>2])g[k+(F<<6)+12>>2]=s;if(+g[k+(F<<6)+16>>2]<t)g[k+(F<<6)+16>>2]=t;if(+g[k+(F<<6)+20>>2]<u)g[k+(F<<6)+20>>2]=u;if(+g[k+(F<<6)+24>>2]<x)g[k+(F<<6)+24>>2]=x;if(+g[k+(F<<6)+28>>2]<y)g[k+(F<<6)+28>>2]=y}else{q=c[d+116>>2]|0;s=+g[d+36>>2];E=+g[d+40>>2];y=+g[d+44>>2];t=+g[d+4>>2];L=+g[d+8>>2];z=+g[d+12>>2];u=+g[d+4>>2];M=+g[d+8>>2];C=+g[d+12>>2];x=+g[d+36>>2];N=+g[d+40>>2];D=+g[d+44>>2];r=~~((+(e[q+(B<<4)>>1]|0)/s+t-u)*x)&65534;k=~~((+(e[q+(B<<4)+4>>1]|0)/y+z-C)*D)&65534;p=~~((+(e[q+(B<<4)+2>>1]|0)/E+L-M)*N)&65534;v=(~~((+(e[q+(B<<4)+6>>1]|0)/s+t-u)*x+1.0)&65535|1)&65535;m=(~~((+(e[q+(B<<4)+10>>1]|0)/y+z-C)*D+1.0)&65535|1)&65535;q=(~~((+(e[q+(B<<4)+8>>1]|0)/E+L-M)*N+1.0)&65535|1)&65535;w=c[d+136>>2]|0;if((e[w+(F<<4)>>1]|0)>(r&65535))b[w+(F<<4)>>1]=r;if((e[w+(F<<4)+6>>1]|0)<(v&65535))b[w+(F<<4)+6>>1]=v;if((e[w+(F<<4)+2>>1]|0)>(p&65535))b[w+(F<<4)+2>>1]=p;if((e[w+(F<<4)+8>>1]|0)<(q&65535))b[w+(F<<4)+8>>1]=q;if((e[w+(F<<4)+4>>1]|0)>(k&65535))b[w+(F<<4)+4>>1]=k;if((e[w+(F<<4)+10>>1]|0)<(m&65535))b[w+(F<<4)+10>>1]=m}B=B+1|0}while((B|0)!=(h|0))}c[d+56>>2]=F+1;Lc(d,f,j);A=c[d+56>>2]|0;Lc(d,j,h);w=(c[d+56>>2]|0)-H|0;j=a[d+60>>0]|0;if(j<<24>>24!=0&(w<<4|0)>2048){r=c[d+136>>2]|0;p=c[r+(F+1<<4)+12>>2]|0;p=(p|0)>-1?1:0-p|0;v=c[r+(A<<4)+12>>2]|0;v=(v|0)>-1?1:0-v|0;if((p<<4|0)<2049){q=c[d+152>>2]|0;if((q|0)==(c[d+156>>2]|0)?(I=q|0?q<<1:1,(q|0)<(I|0)):0){if(!I){j=0;k=q}else{c[6435]=(c[6435]|0)+1;j=yc(I<<5|19)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}k=c[d+152>>2]|0}if((k|0)>0){m=0;do{h=j+(m<<5)|0;H=(c[d+160>>2]|0)+(m<<5)|0;c[h>>2]=c[H>>2];c[h+4>>2]=c[H+4>>2];c[h+8>>2]=c[H+8>>2];c[h+12>>2]=c[H+12>>2];c[h+16>>2]=c[H+16>>2];c[h+20>>2]=c[H+20>>2];c[h+24>>2]=c[H+24>>2];c[h+28>>2]=c[H+28>>2];m=m+1|0}while((m|0)!=(k|0))}k=c[d+160>>2]|0;if(k|0){if(a[d+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=j;c[d+156>>2]=I;j=c[d+152>>2]|0}else j=q;c[d+152>>2]=j+1;I=(c[d+160>>2]|0)+(q<<5)|0;c[I>>2]=c[K+48>>2];c[I+4>>2]=c[K+48+4>>2];c[I+8>>2]=c[K+48+8>>2];c[I+12>>2]=c[K+48+12>>2];c[I+16>>2]=c[K+48+16>>2];c[I+20>>2]=c[K+48+20>>2];c[I+24>>2]=c[K+48+24>>2];c[I+28>>2]=c[K+48+28>>2];I=c[d+160>>2]|0;b[I+(q<<5)>>1]=b[r+(F+1<<4)>>1]|0;b[I+(q<<5)+2>>1]=b[r+(F+1<<4)+2>>1]|0;b[I+(q<<5)+4>>1]=b[r+(F+1<<4)+4>>1]|0;b[I+(q<<5)+6>>1]=b[r+(F+1<<4)+6>>1]|0;b[I+(q<<5)+8>>1]=b[r+(F+1<<4)+8>>1]|0;b[I+(q<<5)+10>>1]=b[r+(F+1<<4)+10>>1]|0;c[I+(q<<5)+12>>2]=F+1;c[I+(q<<5)+16>>2]=p}if((v<<4|0)<2049){p=c[d+152>>2]|0;if((p|0)==(c[d+156>>2]|0)?(J=p|0?p<<1:1,(p|0)<(J|0)):0){if(!J){j=0;k=p}else{c[6435]=(c[6435]|0)+1;j=yc(J<<5|19)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}k=c[d+152>>2]|0}if((k|0)>0){m=0;do{I=j+(m<<5)|0;h=(c[d+160>>2]|0)+(m<<5)|0;c[I>>2]=c[h>>2];c[I+4>>2]=c[h+4>>2];c[I+8>>2]=c[h+8>>2];c[I+12>>2]=c[h+12>>2];c[I+16>>2]=c[h+16>>2];c[I+20>>2]=c[h+20>>2];c[I+24>>2]=c[h+24>>2];c[I+28>>2]=c[h+28>>2];m=m+1|0}while((m|0)!=(k|0))}k=c[d+160>>2]|0;if(k|0){if(a[d+164>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[d+160>>2]=0}a[d+164>>0]=1;c[d+160>>2]=j;c[d+156>>2]=J;j=c[d+152>>2]|0}else j=p;c[d+152>>2]=j+1;J=(c[d+160>>2]|0)+(p<<5)|0;c[J>>2]=c[K+16>>2];c[J+4>>2]=c[K+16+4>>2];c[J+8>>2]=c[K+16+8>>2];c[J+12>>2]=c[K+16+12>>2];c[J+16>>2]=c[K+16+16>>2];c[J+20>>2]=c[K+16+20>>2];c[J+24>>2]=c[K+16+24>>2];c[J+28>>2]=c[K+16+28>>2];J=c[d+160>>2]|0;b[J+(p<<5)>>1]=b[r+(A<<4)>>1]|0;b[J+(p<<5)+2>>1]=b[r+(A<<4)+2>>1]|0;b[J+(p<<5)+4>>1]=b[r+(A<<4)+4>>1]|0;b[J+(p<<5)+6>>1]=b[r+(A<<4)+6>>1]|0;b[J+(p<<5)+8>>1]=b[r+(A<<4)+8>>1]|0;b[J+(p<<5)+10>>1]=b[r+(A<<4)+10>>1]|0;c[J+(p<<5)+12>>2]=A;c[J+(p<<5)+16>>2]=v}c[d+168>>2]=c[d+152>>2];j=a[d+60>>0]|0}if(!(j<<24>>24)){c[(c[d+96>>2]|0)+(G<<6)+32>>2]=w;i=K;return}else{c[(c[d+136>>2]|0)+(G<<4)+12>>2]=0-w;i=K;return}}function Mc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0;u=i;i=i+368|0;f=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;kc[c[(c[f>>2]|0)+56>>2]&7](f,b,1.0);f=c[d+4>>2]|0;switch(f|0){case 31:{f=c[d+16>>2]|0;if((f|0)<=0){i=u;return}do{t=f;f=f+-1|0;s=c[d+24>>2]|0;J=+g[s+(f*80|0)>>2];G=+g[s+(f*80|0)+4>>2];D=+g[s+(f*80|0)+8>>2];I=+g[s+(f*80|0)+16>>2];F=+g[s+(f*80|0)+20>>2];B=+g[s+(f*80|0)+24>>2];H=+g[s+(f*80|0)+32>>2];E=+g[s+(f*80|0)+36>>2];z=+g[s+(f*80|0)+40>>2];R=+g[s+(f*80|0)+48>>2];Q=+g[s+(f*80|0)+52>>2];v=+g[s+(f*80|0)+56>>2];s=c[s+(f*80|0)+64>>2]|0;r=c[(c[a>>2]|0)+28>>2]|0;P=+g[b>>2];O=+g[b+4>>2];N=+g[b+8>>2];M=+g[b+16>>2];L=+g[b+20>>2];K=+g[b+24>>2];C=+g[b+32>>2];A=+g[b+36>>2];y=+g[b+40>>2];x=R*P+Q*O+v*N+ +g[b+48>>2];w=R*M+Q*L+v*K+ +g[b+52>>2];v=R*C+Q*A+v*y+ +g[b+56>>2];g[u+288>>2]=J*P+I*O+H*N;g[u+288+4>>2]=G*P+F*O+E*N;g[u+288+8>>2]=D*P+B*O+z*N;g[u+288+12>>2]=0.0;g[u+288+16>>2]=J*M+I*L+H*K;g[u+288+20>>2]=G*M+F*L+E*K;g[u+288+24>>2]=D*M+B*L+z*K;g[u+288+28>>2]=0.0;g[u+288+32>>2]=J*C+I*A+H*y;g[u+288+36>>2]=G*C+F*A+E*y;g[u+288+40>>2]=D*C+B*A+z*y;g[u+288+44>>2]=0.0;g[u+288+48>>2]=x;g[u+288+52>>2]=w;g[u+288+56>>2]=v;g[u+288+60>>2]=0.0;mc[r&127](a,u+288|0,s,e)}while((t|0)>1);i=u;return}case 0:{c[u+352>>2]=c[d+28>>2];c[u+352+4>>2]=c[d+28+4>>2];c[u+352+8>>2]=c[d+28+8>>2];c[u+352+12>>2]=c[d+28+12>>2];P=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);Q=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);R=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);P=P+ +g[u+352>>2];g[u+352>>2]=P;Q=Q+ +g[u+352+4>>2];g[u+352+4>>2]=Q;R=R+ +g[u+352+8>>2];g[u+352+8>>2]=R;a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;d=c[(c[a>>2]|0)+72>>2]|0;g[u+272>>2]=-P;g[u+272+4>>2]=-Q;g[u+272+8>>2]=-R;g[u+272+12>>2]=0.0;yb[d&31](a,u+272|0,u+352|0,b,e);i=u;return}case 8:{R=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Hb[c[(c[a>>2]|0)+16>>2]&0](a,R,b,e);i=u;return}case 9:{f=c[d+92>>2]|0;if((f|0)<=0){i=u;return}do{t=f;f=f+-1|0;s=c[d+100>>2]|0;D=+g[s+(f<<4)>>2];E=+g[s+(f<<4)+4>>2];Q=+g[s+(f<<4)+8>>2];s=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;r=c[(c[s>>2]|0)+16>>2]|0;R=+g[(c[d+120>>2]|0)+(f<<2)>>2];G=+g[b>>2];H=+g[b+4>>2];F=+g[b+8>>2];J=+g[b+16>>2];K=+g[b+20>>2];I=+g[b+24>>2];M=+g[b+32>>2];N=+g[b+36>>2];L=+g[b+40>>2];O=D*G+E*H+Q*F+ +g[b+48>>2];P=D*J+E*K+Q*I+ +g[b+52>>2];Q=D*M+E*N+Q*L+ +g[b+56>>2];g[u+192>>2]=G+H*0.0+F*0.0;g[u+192+4>>2]=G*0.0+H+F*0.0;g[u+192+8>>2]=F+(G*0.0+H*0.0);g[u+192+12>>2]=0.0;g[u+192+16>>2]=J+K*0.0+I*0.0;g[u+192+20>>2]=J*0.0+K+I*0.0;g[u+192+24>>2]=I+(J*0.0+K*0.0);g[u+192+28>>2]=0.0;g[u+192+32>>2]=M+N*0.0+L*0.0;g[u+192+36>>2]=M*0.0+N+L*0.0;g[u+192+40>>2]=L+(M*0.0+N*0.0);g[u+192+44>>2]=0.0;g[u+192+48>>2]=O;g[u+192+52>>2]=P;g[u+192+56>>2]=Q;g[u+192+60>>2]=0.0;Hb[r&0](s,R,u+192|0,e)}while((t|0)>1);i=u;return}case 10:{t=c[d+52>>2]|0;Q=+g[d+28+(((t+2|0)%3|0)<<2)>>2];R=+g[d+28+(t<<2)>>2];a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Gb[c[(c[a>>2]|0)+76>>2]&0](a,Q,R,t,b,e);i=u;return}case 11:{Q=+g[d+56>>2];R=+g[d+60>>2];d=c[d+68>>2]|0;a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Gb[c[(c[a>>2]|0)+84>>2]&0](a,Q,R,d,b,e);i=u;return}case 13:{t=c[d+52>>2]|0;Q=+Sb[c[(c[d>>2]|0)+92>>2]&15](d);c[u+80>>2]=c[d+28>>2];c[u+80+4>>2]=c[d+28+4>>2];c[u+80+8>>2]=c[d+28+8>>2];c[u+80+12>>2]=c[d+28+12>>2];O=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);P=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);R=+Sb[c[(c[d>>2]|0)+48>>2]&15](d);g[u+80>>2]=O+ +g[u+80>>2];g[u+80+4>>2]=P+ +g[u+80+4>>2];g[u+80+8>>2]=R+ +g[u+80+8>>2];R=+g[u+80+(t<<2)>>2];a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Gb[c[(c[a>>2]|0)+80>>2]&0](a,Q,R,t,b,e);i=u;return}case 28:{R=+g[d+64>>2];a=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;Vb[c[(c[a>>2]|0)+88>>2]&0](a,d+48|0,R,b,e);i=u;return}default:{a:do if((f|0)<7){q=c[d+52>>2]|0;if(!q){if((Eb[c[(c[d>>2]|0)+100>>2]&127](d)|0)<=0)break;f=0;while(1){mc[c[(c[d>>2]|0)+104>>2]&127](d,f,u+352|0,u+256|0);P=+g[u+352>>2];D=+g[b>>2];N=+g[u+352+4>>2];E=+g[b+4>>2];L=+g[u+352+8>>2];F=+g[b+8>>2];H=+g[b+16>>2];I=+g[b+20>>2];J=+g[b+24>>2];M=+g[b+32>>2];O=+g[b+36>>2];Q=+g[b+40>>2];G=+g[b+48>>2];K=+g[b+52>>2];R=+g[b+56>>2];g[u+96>>2]=P*D+N*E+L*F+G;g[u+96+4>>2]=P*H+N*I+L*J+K;g[u+96+8>>2]=P*M+N*O+L*Q+R;g[u+96+12>>2]=0.0;L=+g[u+256>>2];N=+g[u+256+4>>2];P=+g[u+256+8>>2];g[u+64>>2]=L*D+N*E+P*F+G;g[u+64+4>>2]=L*H+N*I+P*J+K;g[u+64+8>>2]=L*M+N*O+P*Q+R;g[u+64+12>>2]=0.0;t=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;mc[c[(c[t>>2]|0)+8>>2]&127](t,u+96|0,u+64|0,e);f=f+1|0;if((f|0)>=(Eb[c[(c[d>>2]|0)+100>>2]&127](d)|0))break a}}if((c[q+28>>2]|0)>0){s=0;do{f=c[q+36>>2]|0;r=c[f+(s*36|0)+4>>2]|0;b:do if((r|0)!=0?(t=c[f+(s*36|0)+12>>2]|0,(r|0)>0):0){m=t;j=0;h=0;f=0;o=c[t+(r+-1<<2)>>2]|0;l=0;while(1){p=c[m+(l<<2)>>2]|0;n=c[q+16>>2]|0;j=(g[k>>2]=(c[k>>2]=j,+g[k>>2])+ +g[n+(p<<4)>>2],c[k>>2]|0);f=(g[k>>2]=(c[k>>2]=f,+g[k>>2])+ +g[n+(p<<4)+4>>2],c[k>>2]|0);h=(g[k>>2]=(c[k>>2]=h,+g[k>>2])+ +g[n+(p<<4)+8>>2],c[k>>2]|0);n=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;m=c[(c[n>>2]|0)+8>>2]|0;S=c[q+16>>2]|0;P=+g[S+(o<<4)>>2];D=+g[b>>2];N=+g[S+(o<<4)+4>>2];E=+g[b+4>>2];L=+g[S+(o<<4)+8>>2];F=+g[b+8>>2];H=+g[b+16>>2];I=+g[b+20>>2];J=+g[b+24>>2];M=+g[b+32>>2];O=+g[b+36>>2];Q=+g[b+40>>2];G=+g[b+48>>2];K=+g[b+52>>2];R=+g[b+56>>2];g[u+48>>2]=P*D+N*E+L*F+G;g[u+48+4>>2]=P*H+N*I+L*J+K;g[u+48+8>>2]=P*M+N*O+L*Q+R;g[u+48+12>>2]=0.0;L=+g[S+(p<<4)>>2];N=+g[S+(p<<4)+4>>2];P=+g[S+(p<<4)+8>>2];g[u+32>>2]=L*D+N*E+P*F+G;g[u+32+4>>2]=L*H+N*I+P*J+K;g[u+32+8>>2]=L*M+N*O+P*Q+R;g[u+32+12>>2]=0.0;mc[m&127](n,u+48|0,u+32|0,e);n=l+1|0;l=c[q+36>>2]|0;if((n|0)>=(c[l+(s*36|0)+4>>2]|0))break b;m=c[l+(s*36|0)+12>>2]|0;o=p;l=n}}else{j=0;h=0;f=0}while(0);S=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;if((Eb[c[(c[S>>2]|0)+48>>2]&127](S)|0)&16384|0){O=1.0/+(r|0)*(c[k>>2]=h,+g[k>>2]);L=1.0/+(r|0)*(c[k>>2]=f,+g[k>>2]);I=1.0/+(r|0)*(c[k>>2]=j,+g[k>>2]);c[u+352>>2]=1065353216;c[u+352+4>>2]=1065353216;c[u+352+8>>2]=0;g[u+352+12>>2]=0.0;S=c[q+36>>2]|0;J=+g[S+(s*36|0)+20>>2];M=+g[S+(s*36|0)+24>>2];P=+g[S+(s*36|0)+28>>2];S=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;r=c[(c[S>>2]|0)+8>>2]|0;A=+g[b>>2];B=+g[b+4>>2];C=+g[b+8>>2];E=+g[b+16>>2];F=+g[b+20>>2];G=+g[b+24>>2];K=+g[b+32>>2];N=+g[b+36>>2];Q=+g[b+40>>2];D=+g[b+48>>2];H=+g[b+52>>2];R=+g[b+56>>2];g[u+16>>2]=I*A+L*B+O*C+D;g[u+16+4>>2]=I*E+L*F+O*G+H;g[u+16+8>>2]=I*K+L*N+O*Q+R;g[u+16+12>>2]=0.0;g[u>>2]=(I+J)*A+(L+M)*B+(O+P)*C+D;g[u+4>>2]=(I+J)*E+(L+M)*F+(O+P)*G+H;g[u+8>>2]=(I+J)*K+(L+M)*N+(O+P)*Q+R;g[u+12>>2]=0.0;mc[r&127](S,u+16|0,u,u+352|0)}s=s+1|0}while((s|0)<(c[q+28>>2]|0))}}while(0);f=c[d+4>>2]|0;if((f+-21|0)>>>0<9){c[u+352>>2]=1566444395;c[u+352+4>>2]=1566444395;c[u+352+8>>2]=1566444395;g[u+352+12>>2]=0.0;c[u+256>>2]=-581039253;c[u+256+4>>2]=-581039253;c[u+256+8>>2]=-581039253;g[u+256+12>>2]=0.0;f=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[u+96>>2]=5692;c[u+96+4>>2]=5716;c[u+96+8>>2]=f;c[u+96+12>>2]=c[e>>2];c[u+96+12+4>>2]=c[e+4>>2];c[u+96+12+8>>2]=c[e+8>>2];c[u+96+12+12>>2]=c[e+12>>2];c[u+96+28>>2]=c[b>>2];c[u+96+28+4>>2]=c[b+4>>2];c[u+96+28+8>>2]=c[b+8>>2];c[u+96+28+12>>2]=c[b+12>>2];c[u+96+44>>2]=c[b+16>>2];c[u+96+44+4>>2]=c[b+16+4>>2];c[u+96+44+8>>2]=c[b+16+8>>2];c[u+96+44+12>>2]=c[b+16+12>>2];c[u+96+60>>2]=c[b+32>>2];c[u+96+60+4>>2]=c[b+32+4>>2];c[u+96+60+8>>2]=c[b+32+8>>2];c[u+96+60+12>>2]=c[b+32+12>>2];c[u+96+76>>2]=c[b+48>>2];c[u+96+76+4>>2]=c[b+48+4>>2];c[u+96+76+8>>2]=c[b+48+8>>2];c[u+96+76+12>>2]=c[b+48+12>>2];mc[c[(c[d>>2]|0)+64>>2]&127](d,u+96|0,u+256|0,u+352|0);f=c[d+4>>2]|0}if((f|0)!=3){i=u;return}c[u+352>>2]=1566444395;c[u+352+4>>2]=1566444395;c[u+352+8>>2]=1566444395;g[u+352+12>>2]=0.0;c[u+256>>2]=-581039253;c[u+256+4>>2]=-581039253;c[u+256+8>>2]=-581039253;g[u+256+12>>2]=0.0;S=Eb[c[(c[a>>2]|0)+20>>2]&127](a)|0;c[u+96>>2]=5692;c[u+96+4>>2]=5716;c[u+96+8>>2]=S;c[u+96+12>>2]=c[e>>2];c[u+96+12+4>>2]=c[e+4>>2];c[u+96+12+8>>2]=c[e+8>>2];c[u+96+12+12>>2]=c[e+12>>2];c[u+96+28>>2]=c[b>>2];c[u+96+28+4>>2]=c[b+4>>2];c[u+96+28+8>>2]=c[b+8>>2];c[u+96+28+12>>2]=c[b+12>>2];c[u+96+44>>2]=c[b+16>>2];c[u+96+44+4>>2]=c[b+16+4>>2];c[u+96+44+8>>2]=c[b+16+8>>2];c[u+96+44+12>>2]=c[b+16+12>>2];c[u+96+60>>2]=c[b+32>>2];c[u+96+60+4>>2]=c[b+32+4>>2];c[u+96+60+8>>2]=c[b+32+8>>2];c[u+96+60+12>>2]=c[b+32+12>>2];c[u+96+76>>2]=c[b+48>>2];c[u+96+76+4>>2]=c[b+48+4>>2];c[u+96+76+8>>2]=c[b+48+8>>2];c[u+96+76+12>>2]=c[b+48+12>>2];S=c[d+92>>2]|0;mc[c[(c[S>>2]|0)+8>>2]&127](S,u+96+4|0,u+256|0,u+352|0);i=u;return}}}function Nc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;t=i;i=i+48|0;z=1.0/+g[a+108>>2];A=1.0/+g[a+112>>2];B=1.0/+g[a+116>>2];u=+g[a+48>>2];v=z*+g[d>>2]+u;o=+g[a+52>>2];k=A*+g[d+4>>2]+o;q=+g[a+56>>2];p=B*+g[d+8>>2]+q;u=z*+g[e>>2]+u;o=A*+g[e+4>>2]+o;q=B*+g[e+8>>2]+q;B=+g[a+16>>2];v=v<B?B:v;A=+g[a+20>>2];k=k<A?A:k;z=+g[a+24>>2];p=p<z?z:p;y=+g[a+32>>2];v=y<v?y:v;x=+g[a+36>>2];k=x<k?x:k;w=+g[a+40>>2];p=w<p?w:p;u=u<B?B:u;o=o<A?A:o;q=q<z?z:q;u=y<u?y:u;o=x<o?x:o;q=w<q?w:q;m=~~(v+(v<0.0?-.5:.5))+-1|0;f=~~(u+(u<0.0?-.5:.5))+1|0;n=~~(k+(k<0.0?-.5:.5))+-1|0;h=~~(o+(o<0.0?-.5:.5))+1|0;l=~~(p+(p<0.0?-.5:.5))+-1|0;e=~~(q+(q<0.0?-.5:.5))+1|0;j=(c[a+64>>2]|0)+-1|0;d=(c[a+68>>2]|0)+-1|0;switch(c[a+104>>2]|0){case 0:{d=(e|0)<(d|0)?e:d;j=(h|0)<(j|0)?h:j;e=(l|0)>0?l:0;r=(n|0)>0?n:0;break}case 1:{d=(e|0)<(d|0)?e:d;j=(f|0)<(j|0)?f:j;e=(l|0)>0?l:0;r=(m|0)>0?m:0;break}case 2:{d=(h|0)<(d|0)?h:d;j=(f|0)<(j|0)?f:j;e=(n|0)>0?n:0;r=(m|0)>0?m:0;break}default:{e=0;r=0}}if((e|0)>=(d|0)){i=t;return}n=(r|0)<(j|0);m=e;while(1){if(n){l=(m&1|0)==0;e=m+1|0;q=+(m|0);h=r;while(1){f=c[a+100>>2]|0;do if(!((f&255)<<24>>24)){if(f&65280|0?(h+m&1|0)==0:0){s=16;break}if(!(l&(f&16711680|0)!=0)){k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,h,m);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(h|0)-+g[a+80>>2]*.5;p=q-+g[a+84>>2]*.5;g[t>>2]=k;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;break}case 1:{B=+(h|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=q-+g[a+84>>2]*.5;g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}case 2:{B=+(h|0)-+g[a+80>>2]*.5;o=q-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}default:{k=+g[t>>2];o=+g[t+4>>2];p=+g[t+8>>2]}}g[t>>2]=k*+g[a+108>>2];g[t+4>>2]=o*+g[a+112>>2];g[t+8>>2]=p*+g[a+116>>2];k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,h,e);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(h|0)-+g[a+80>>2]*.5;p=+(e|0)-+g[a+84>>2]*.5;g[t+16>>2]=k;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;break}case 1:{B=+(h|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=+(e|0)-+g[a+84>>2]*.5;g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}case 2:{B=+(h|0)-+g[a+80>>2]*.5;o=+(e|0)-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}default:{k=+g[t+16>>2];o=+g[t+20>>2];p=+g[t+24>>2]}}g[t+16>>2]=k*+g[a+108>>2];g[t+20>>2]=o*+g[a+112>>2];g[t+24>>2]=p*+g[a+116>>2];f=h+1|0;k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,m);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=q-+g[a+84>>2]*.5;g[t+32>>2]=k;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=q-+g[a+84>>2]*.5;g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=q-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}default:{k=+g[t+32>>2];o=+g[t+36>>2];p=+g[t+40>>2]}}g[t+32>>2]=k*+g[a+108>>2];g[t+36>>2]=o*+g[a+112>>2];g[t+40>>2]=p*+g[a+116>>2];mc[c[(c[b>>2]|0)+8>>2]&127](b,t,h,m);k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,m);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=q-+g[a+84>>2]*.5;g[t>>2]=k;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=q-+g[a+84>>2]*.5;g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=q-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}default:{k=+g[t>>2];o=+g[t+4>>2];p=+g[t+8>>2]}}g[t>>2]=k*+g[a+108>>2];g[t+4>>2]=o*+g[a+112>>2];g[t+8>>2]=p*+g[a+116>>2];k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,e);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=k;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=+(e|0)-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}default:{k=+g[t+32>>2];o=+g[t+36>>2];p=+g[t+40>>2]}}g[t+32>>2]=k*+g[a+108>>2];g[t+36>>2]=o*+g[a+112>>2];g[t+40>>2]=p*+g[a+116>>2];mc[c[(c[b>>2]|0)+8>>2]&127](b,t,h,m)}else s=16}else s=16;while(0);if((s|0)==16){s=0;k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,h,m);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(h|0)-+g[a+80>>2]*.5;p=q-+g[a+84>>2]*.5;g[t>>2]=k;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;break}case 1:{B=+(h|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=q-+g[a+84>>2]*.5;g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}case 2:{B=+(h|0)-+g[a+80>>2]*.5;o=q-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t>>2]=B;g[t+4>>2]=o;g[t+8>>2]=p;g[t+12>>2]=0.0;k=B;break}default:{k=+g[t>>2];o=+g[t+4>>2];p=+g[t+8>>2]}}g[t>>2]=k*+g[a+108>>2];g[t+4>>2]=o*+g[a+112>>2];g[t+8>>2]=p*+g[a+116>>2];f=h+1|0;k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,m);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=q-+g[a+84>>2]*.5;g[t+16>>2]=k;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=q-+g[a+84>>2]*.5;g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=q-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}default:{k=+g[t+16>>2];o=+g[t+20>>2];p=+g[t+24>>2]}}g[t+16>>2]=k*+g[a+108>>2];g[t+20>>2]=o*+g[a+112>>2];g[t+24>>2]=p*+g[a+116>>2];k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,e);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=k;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=+(e|0)-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}default:{k=+g[t+32>>2];o=+g[t+36>>2];p=+g[t+40>>2]}}g[t+32>>2]=k*+g[a+108>>2];g[t+36>>2]=o*+g[a+112>>2];g[t+40>>2]=p*+g[a+116>>2];mc[c[(c[b>>2]|0)+8>>2]&127](b,t,h,m);k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,f,e);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(f|0)-+g[a+80>>2]*.5;p=+(e|0)-+g[a+84>>2]*.5;g[t+16>>2]=k;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;break}case 1:{B=+(f|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=+(e|0)-+g[a+84>>2]*.5;g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}case 2:{B=+(f|0)-+g[a+80>>2]*.5;o=+(e|0)-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+16>>2]=B;g[t+20>>2]=o;g[t+24>>2]=p;g[t+28>>2]=0.0;k=B;break}default:{k=+g[t+16>>2];o=+g[t+20>>2];p=+g[t+24>>2]}}g[t+16>>2]=k*+g[a+108>>2];g[t+20>>2]=o*+g[a+112>>2];g[t+24>>2]=p*+g[a+116>>2];k=+_b[c[(c[a>>2]|0)+68>>2]&15](a,h,e);switch(c[a+104>>2]|0){case 0:{k=k-+g[a+48>>2];o=+(h|0)-+g[a+80>>2]*.5;p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=k;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;break}case 1:{B=+(h|0)-+g[a+80>>2]*.5;o=k-+g[a+52>>2];p=+(e|0)-+g[a+84>>2]*.5;g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}case 2:{B=+(h|0)-+g[a+80>>2]*.5;o=+(e|0)-+g[a+84>>2]*.5;p=k-+g[a+56>>2];g[t+32>>2]=B;g[t+36>>2]=o;g[t+40>>2]=p;g[t+44>>2]=0.0;k=B;break}default:{k=+g[t+32>>2];o=+g[t+36>>2];p=+g[t+40>>2]}}g[t+32>>2]=k*+g[a+108>>2];g[t+36>>2]=o*+g[a+112>>2];g[t+40>>2]=p*+g[a+116>>2];mc[c[(c[b>>2]|0)+8>>2]&127](b,t,h,m)}if((f|0)==(j|0))break;else h=f}}else e=m+1|0;if((e|0)==(d|0))break;else m=e}i=t;return}function Oc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0;da=i;i=i+176|0;aa=c[d+4>>2]|0;ba=c[e+4>>2]|0;if((c[aa+68>>2]|0)==(c[b+40>>2]|0)?(c[ba+68>>2]|0)==(c[b+44>>2]|0):0)$=b+8|0;else{j=c[b+8>>2]|0;k=c[j+8>>2]|0;if((k|0)>0){m=0;do{l=c[(c[j+16>>2]|0)+(m*12|0)+8>>2]|0;if(l|0){Ab[c[c[l>>2]>>2]&255](l);$=c[b+4>>2]|0;Cb[c[(c[$>>2]|0)+60>>2]&127]($,l)}m=m+1|0}while((m|0)!=(k|0));j=c[b+8>>2]|0}$h(j);$=b+8|0}a[da+128+16>>0]=1;q=da+128+12|0;c[q>>2]=0;c[da+128+4>>2]=0;c[da+128+8>>2]=0;p=c[$>>2]|0;j=c[p+8>>2]|0;if((j|0)>0){o=0;do{k=c[(c[p+16>>2]|0)+(o*12|0)+8>>2]|0;if(k){Cb[c[(c[k>>2]|0)+16>>2]&127](k,da+128|0);j=c[da+128+4>>2]|0;if((j|0)>0){n=0;do{m=c[(c[q>>2]|0)+(n<<2)>>2]|0;if(c[m+748>>2]|0){c[h+4>>2]=m;j=c[m+740>>2]|0;k=c[(c[h+8>>2]|0)+8>>2]|0;l=c[(c[h+12>>2]|0)+8>>2]|0;if((j|0)==(k|0))ef(m,j+4|0,l+4|0);else ef(m,l+4|0,k+4|0);c[h+4>>2]=0;j=c[da+128+4>>2]|0}n=n+1|0}while((n|0)<(j|0))}if((j|0)<0){if((c[da+128+8>>2]|0)<0){k=c[q>>2]|0;if(k|0){if(a[da+128+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[k+-4>>2]|0)}c[q>>2]=0}a[da+128+16>>0]=1;c[q>>2]=0;c[da+128+8>>2]=0}do{c[(c[q>>2]|0)+(j<<2)>>2]=0;j=j+1|0}while((j|0)!=0)}c[da+128+4>>2]=0;j=c[p+8>>2]|0}o=o+1|0}while((o|0)<(j|0));j=c[q>>2]|0;if(j|0){if(a[da+128+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[q>>2]=0}}k=c[aa+64>>2]|0;l=c[ba+64>>2]|0;p=c[b+4>>2]|0;q=c[$>>2]|0;r=c[b+32>>2]|0;c[da+128>>2]=6256;c[da+128+4>>2]=0;c[da+128+8>>2]=d;c[da+128+12>>2]=e;c[da+128+16>>2]=p;c[da+128+20>>2]=f;c[da+128+24>>2]=h;c[da+128+28>>2]=q;c[da+128+32>>2]=r;r=c[d+12>>2]|0;B=+g[r>>2];C=+g[r+16>>2];D=+g[r+32>>2];E=+g[r+4>>2];F=+g[r+20>>2];G=+g[r+36>>2];H=+g[r+8>>2];I=+g[r+24>>2];J=+g[r+40>>2];K=-+g[r+48>>2];L=-+g[r+52>>2];M=-+g[r+56>>2];r=c[e+12>>2]|0;O=+g[r>>2];P=+g[r+16>>2];Q=+g[r+32>>2];R=+g[r+4>>2];S=+g[r+20>>2];T=+g[r+36>>2];U=+g[r+8>>2];V=+g[r+24>>2];W=+g[r+40>>2];X=+g[r+48>>2];Y=+g[r+52>>2];Z=+g[r+56>>2];k=c[k>>2]|0;l=c[l>>2]|0;if((k|0)!=0&(l|0)!=0){c[6435]=(c[6435]|0)+1;j=yc(1043)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}c[j>>2]=k;c[j+4>>2]=l;s=+N(+(B*O+C*P+D*Q));t=+N(+(B*R+C*S+D*T));u=+N(+(B*U+C*V+D*W));v=+N(+(E*O+F*P+G*Q));w=+N(+(E*R+F*S+G*T));x=+N(+(E*U+F*V+G*W));y=+N(+(H*O+I*P+J*Q));z=+N(+(H*R+I*S+J*T));A=+N(+(H*U+I*V+J*W));r=1;l=128;m=128;k=124;while(1){q=r+-1|0;f=c[j+(q<<3)>>2]|0;h=c[j+(q<<3)+4>>2]|0;oa=+g[h+16>>2];na=+g[h>>2];ma=+g[h+20>>2];la=+g[h+4>>2];ka=+g[h+24>>2];ea=+g[h+8>>2];ja=B*K+C*L+D*M+(B*X+C*Y+D*Z)+((B*O+C*P+D*Q)*(oa+na)*.5+(B*R+C*S+D*T)*(ma+la)*.5+(B*U+C*V+D*W)*(ka+ea)*.5);ha=E*K+F*L+G*M+(E*X+F*Y+G*Z)+((E*O+F*P+G*Q)*(oa+na)*.5+(E*R+F*S+G*T)*(ma+la)*.5+(E*U+F*V+G*W)*(ka+ea)*.5);fa=H*K+I*L+J*M+(H*X+I*Y+J*Z)+((H*O+I*P+J*Q)*(oa+na)*.5+(H*R+I*S+J*T)*(ma+la)*.5+(H*U+I*V+J*W)*(ka+ea)*.5);ia=((oa-na)*.5+0.0)*s+((ma-la)*.5+0.0)*t+((ka-ea)*.5+0.0)*u;ga=((oa-na)*.5+0.0)*v+((ma-la)*.5+0.0)*w+((ka-ea)*.5+0.0)*x;ea=((oa-na)*.5+0.0)*y+((ma-la)*.5+0.0)*z+((ka-ea)*.5+0.0)*A;do if(((((+g[f>>2]<=ia+ja?+g[f+16>>2]>=ja-ia:0)?+g[f+4>>2]<=ha+ga:0)?+g[f+20>>2]>=ha-ga:0)?+g[f+8>>2]<=fa+ea:0)?+g[f+24>>2]>=fa-ea:0){if((q|0)>(k|0)){n=m<<1;do if((m|0)<(n|0)&(l|0)<(n|0)){do if(!m){k=0;_=52}else{c[6435]=(c[6435]|0)+1;k=yc((m<<4|3)+16|0)|0;if(!k)k=0;else{c[(k+4+15&-16)+-4>>2]=k;k=k+4+15&-16}if((m|0)>0)l=0;else{_=52;break}do{pa=j+(l<<3)|0;o=c[pa+4>>2]|0;p=k+(l<<3)|0;c[p>>2]=c[pa>>2];c[p+4>>2]=o;l=l+1|0}while((l|0)!=(m|0))}while(0);if((_|0)==52){_=0;if(!j){l=n;j=k;break}}c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);l=n;j=k}while(0);p=n;k=n+-4|0}else p=m;m=(c[h+40>>2]|0)!=0;if(!(c[f+40>>2]|0))if(m){n=c[h+36>>2]|0;c[j+(q<<3)>>2]=f;c[j+(q<<3)+4>>2]=n;n=c[h+40>>2]|0;c[j+(r<<3)>>2]=f;c[j+(r<<3)+4>>2]=n;n=r+1|0;m=p;break}else{ic[c[(c[da+128>>2]|0)+8>>2]&127](da+128|0,f,h);n=q;m=p;break}else{n=j+(q<<3)|0;o=c[f+36>>2]|0;if(m){m=c[h+36>>2]|0;c[n>>2]=o;c[j+(q<<3)+4>>2]=m;m=r+1|0;n=c[h+36>>2]|0;c[j+(r<<3)>>2]=c[f+40>>2];c[j+(r<<3)+4>>2]=n;n=r+2|0;pa=c[h+40>>2]|0;c[j+(m<<3)>>2]=c[f+36>>2];c[j+(m<<3)+4>>2]=pa;m=c[h+40>>2]|0;c[j+(n<<3)>>2]=c[f+40>>2];c[j+(n<<3)+4>>2]=m;n=r+3|0;m=p;break}else{c[n>>2]=o;c[j+(q<<3)+4>>2]=h;c[j+(r<<3)>>2]=c[f+40>>2];c[j+(r<<3)+4>>2]=h;n=r+1|0;m=p;break}}}else n=q;while(0);if(!n)break;else r=n}if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}}o=c[$>>2]|0;if((c[o+8>>2]|0)>0){p=0;do{j=c[o+16>>2]|0;k=c[j+(p*12|0)+8>>2]|0;do if(k|0){pa=c[j+(p*12|0)>>2]|0;_=c[aa+24>>2]|0;r=c[_+(pa*80|0)+64>>2]|0;h=c[d+12>>2]|0;oa=+g[h>>2];P=+g[h+4>>2];O=+g[h+8>>2];la=+g[h+16>>2];ja=+g[h+20>>2];ha=+g[h+24>>2];ka=+g[h+32>>2];ga=+g[h+36>>2];U=+g[h+40>>2];fa=+g[_+(pa*80|0)>>2];ea=+g[_+(pa*80|0)+16>>2];Z=+g[_+(pa*80|0)+32>>2];Y=+g[_+(pa*80|0)+4>>2];X=+g[_+(pa*80|0)+20>>2];W=+g[_+(pa*80|0)+36>>2];ia=+g[_+(pa*80|0)+8>>2];V=+g[_+(pa*80|0)+24>>2];T=+g[_+(pa*80|0)+40>>2];na=+g[_+(pa*80|0)+48>>2];ma=+g[_+(pa*80|0)+52>>2];Q=+g[_+(pa*80|0)+56>>2];S=+g[h+48>>2]+(oa*na+P*ma+O*Q);R=+g[h+52>>2]+(la*na+ja*ma+ha*Q);Q=+g[h+56>>2]+(ka*na+ga*ma+U*Q);g[da>>2]=oa*fa+P*ea+O*Z;g[da+4>>2]=oa*Y+P*X+O*W;g[da+8>>2]=oa*ia+P*V+O*T;g[da+12>>2]=0.0;g[da+16>>2]=la*fa+ja*ea+ha*Z;g[da+20>>2]=la*Y+ja*X+ha*W;g[da+24>>2]=la*ia+ja*V+ha*T;g[da+28>>2]=0.0;g[da+32>>2]=ka*fa+ga*ea+U*Z;g[da+36>>2]=ka*Y+ga*X+U*W;g[da+40>>2]=ka*ia+ga*V+U*T;g[da+44>>2]=0.0;g[da+48>>2]=S;g[da+52>>2]=R;g[da+56>>2]=Q;g[da+60>>2]=0.0;mc[c[(c[r>>2]|0)+8>>2]&127](r,da,da+112|0,da+96|0);r=c[(c[o+16>>2]|0)+(p*12|0)+4>>2]|0;h=c[ba+24>>2]|0;pa=c[h+(r*80|0)+64>>2]|0;_=c[e+12>>2]|0;Q=+g[_>>2];R=+g[_+4>>2];S=+g[_+8>>2];T=+g[_+16>>2];U=+g[_+20>>2];V=+g[_+24>>2];ga=+g[_+32>>2];ia=+g[_+36>>2];ka=+g[_+40>>2];W=+g[h+(r*80|0)>>2];X=+g[h+(r*80|0)+16>>2];Y=+g[h+(r*80|0)+32>>2];Z=+g[h+(r*80|0)+4>>2];ea=+g[h+(r*80|0)+20>>2];fa=+g[h+(r*80|0)+36>>2];ha=+g[h+(r*80|0)+8>>2];ja=+g[h+(r*80|0)+24>>2];la=+g[h+(r*80|0)+40>>2];O=+g[h+(r*80|0)+48>>2];P=+g[h+(r*80|0)+52>>2];oa=+g[h+(r*80|0)+56>>2];ma=+g[_+48>>2]+(Q*O+R*P+S*oa);na=+g[_+52>>2]+(T*O+U*P+V*oa);oa=+g[_+56>>2]+(ga*O+ia*P+ka*oa);g[da>>2]=Q*W+R*X+S*Y;g[da+4>>2]=Q*Z+R*ea+S*fa;g[da+8>>2]=Q*ha+R*ja+S*la;g[da+12>>2]=0.0;g[da+16>>2]=T*W+U*X+V*Y;g[da+20>>2]=T*Z+U*ea+V*fa;g[da+24>>2]=T*ha+U*ja+V*la;g[da+28>>2]=0.0;g[da+32>>2]=ga*W+ia*X+ka*Y;g[da+36>>2]=ga*Z+ia*ea+ka*fa;g[da+40>>2]=ga*ha+ia*ja+ka*la;g[da+44>>2]=0.0;g[da+48>>2]=ma;g[da+52>>2]=na;g[da+56>>2]=oa;g[da+60>>2]=0.0;mc[c[(c[pa>>2]|0)+8>>2]&127](pa,da,da+80|0,da+64|0);if(!(+g[da+112>>2]>+g[da+64>>2])?!(+g[da+96>>2]<+g[da+80>>2]):0)j=1;else j=0;if(!(!(+g[da+112+8>>2]>+g[da+64+8>>2])?!(+g[da+96+8>>2]<+g[da+80+8>>2]):0))j=0;if(!(+g[da+112+4>>2]>+g[da+64+4>>2])?!(+g[da+96+4>>2]<+g[da+80+4>>2]|j^1):0)break;Ab[c[c[k>>2]>>2]&255](k);n=c[b+4>>2]|0;Cb[c[(c[n>>2]|0)+60>>2]&127](n,k);n=c[o+16>>2]|0;m=c[n+(p*12|0)>>2]|0;n=c[n+(p*12|0)+4>>2]|0;j=c[b+16>>2]|0;if((j|0)==(c[b+20>>2]|0)?(ca=j|0?j<<1:1,(j|0)<(ca|0)):0){if(!ca)l=0;else{c[6435]=(c[6435]|0)+1;j=yc((ca*12|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=j;j=c[b+16>>2]|0}if((j|0)>0){k=0;do{pa=l+(k*12|0)|0;_=(c[b+24>>2]|0)+(k*12|0)|0;c[pa>>2]=c[_>>2];c[pa+4>>2]=c[_+4>>2];c[pa+8>>2]=c[_+8>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[b+24>>2]|0;if(j|0){if(a[b+28>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+24>>2]=0}a[b+28>>0]=1;c[b+24>>2]=l;c[b+20>>2]=ca;j=c[b+16>>2]|0}pa=c[b+24>>2]|0;c[pa+(j*12|0)>>2]=m;c[pa+(j*12|0)+4>>2]=n;c[pa+(j*12|0)+8>>2]=0;c[b+16>>2]=(c[b+16>>2]|0)+1}while(0);p=p+1|0}while((p|0)<(c[o+8>>2]|0));k=b+24|0;l=b+16|0}else{k=b+24|0;l=b+16|0}if((c[l>>2]|0)>0){j=0;do{e=c[$>>2]|0;pa=c[k>>2]|0;Ob[c[(c[e>>2]|0)+8>>2]&63](e,c[pa+(j*12|0)>>2]|0,c[pa+(j*12|0)+4>>2]|0)|0;j=j+1|0}while((j|0)<(c[l>>2]|0))}j=c[k>>2]|0;if(!j){a[b+28>>0]=1;c[k>>2]=0;c[l>>2]=0;pa=b+20|0;c[pa>>2]=0;i=da;return}if(a[b+28>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[k>>2]=0;a[b+28>>0]=1;c[k>>2]=0;c[l>>2]=0;pa=b+20|0;c[pa>>2]=0;i=da;return}function Pc(b,e,f,h,j,l,m){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;m=m|0;var n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0;B=i;i=i+9856|0;q=l;r=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(r|0));c[B+9712>>2]=b;c[B+9712+4>>2]=f;E=+g[h>>2];R=+g[e>>2];F=+g[h+16>>2];H=+g[e+16>>2];G=+g[h+32>>2];S=+g[e+32>>2];I=+g[e+4>>2];T=+g[e+20>>2];J=+g[e+36>>2];s=+g[e+8>>2];n=+g[e+24>>2];D=+g[e+40>>2];Q=+g[h+4>>2];P=+g[h+20>>2];N=+g[h+36>>2];M=+g[h+8>>2];L=+g[h+24>>2];K=+g[h+40>>2];g[B+9712+8>>2]=E*R+F*H+G*S;g[B+9712+12>>2]=E*I+F*T+G*J;g[B+9712+16>>2]=E*s+F*n+G*D;g[B+9712+20>>2]=0.0;g[B+9712+24>>2]=R*Q+H*P+S*N;g[B+9712+28>>2]=I*Q+T*P+J*N;g[B+9712+32>>2]=s*Q+n*P+D*N;g[B+9712+36>>2]=0.0;g[B+9712+40>>2]=R*M+H*L+S*K;g[B+9712+44>>2]=I*M+T*L+J*K;g[B+9712+48>>2]=s*M+n*L+D*K;g[B+9712+52>>2]=0.0;D=+g[h+48>>2]-+g[e+48>>2];n=+g[h+52>>2]-+g[e+52>>2];s=+g[h+56>>2]-+g[e+56>>2];J=+g[e>>2];T=+g[h>>2];I=+g[e+16>>2];S=+g[h+16>>2];H=+g[e+32>>2];R=+g[h+32>>2];G=+g[e+4>>2];F=+g[e+20>>2];E=+g[e+36>>2];C=+g[e+8>>2];o=+g[e+24>>2];p=+g[e+40>>2];g[B+9712+56>>2]=J*T+I*S+H*R;g[B+9712+60>>2]=J*Q+I*P+H*N;g[B+9712+64>>2]=J*M+I*L+H*K;g[B+9712+68>>2]=0.0;g[B+9712+72>>2]=T*G+S*F+R*E;g[B+9712+76>>2]=Q*G+P*F+N*E;g[B+9712+80>>2]=M*G+L*F+K*E;g[B+9712+84>>2]=0.0;g[B+9712+88>>2]=T*C+S*o+R*p;g[B+9712+92>>2]=Q*C+P*o+N*p;g[B+9712+96>>2]=M*C+L*o+K*p;g[B+9712+100>>2]=0.0;g[B+9712+104>>2]=D*J+n*I+s*H;g[B+9712+108>>2]=D*G+n*F+s*E;g[B+9712+112>>2]=D*C+n*o+s*p;g[B+9712+116>>2]=0.0;c[B+9712+120>>2]=m?81:80;c[B+9712+124>>2]=0;c[B+9328+364>>2]=0;c[B+9328+128>>2]=0;c[B+9328+128+4>>2]=0;c[B+9328+128+8>>2]=0;c[B+9328+128+12>>2]=0;c[B+9328+376>>2]=2;c[B+9328+368>>2]=0;g[B+9328+144>>2]=0.0;p=-+g[j+4>>2];s=-+g[j+8>>2];g[B+16>>2]=-+g[j>>2];g[B+16+4>>2]=p;g[B+16+8>>2]=s;g[B+16+12>>2]=0.0;switch(Uc(B+9328|0,B+9712|0,B+16|0)|0){case 1:{w=B+32+9280|0;x=B+32+9288|0;y=B+32+9292|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[w+12>>2]=0;c[B+32>>2]=9;A=B+32+40|0;c[B+32+9276>>2]=0;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[A+12>>2]=0;c[A+16>>2]=0;m=0;do{b=128-m+-1|0;c[B+32+2108+(b*56|0)+44>>2]=0;f=c[x>>2]|0;c[B+32+2108+(b*56|0)+48>>2]=f;if(f|0)c[f+44>>2]=B+32+2108+(b*56|0);c[x>>2]=B+32+2108+(b*56|0);c[y>>2]=(c[y>>2]|0)+1;m=m+1|0}while((m|0)!=128);p=+g[j>>2];s=+g[j+4>>2];o=+g[j+8>>2];t=c[B+9328+372>>2]|0;do if((c[t+32>>2]|0)>>>0>1?yd(B+9328|0)|0:0){v=B+32+9280|0;b=c[v>>2]|0;if(b|0){q=c[B+32+9284>>2]|0;r=c[y>>2]|0;do{f=b+44|0;h=b+48|0;m=c[h>>2]|0;if(m|0)c[m+44>>2]=c[f>>2];f=c[f>>2]|0;if(f|0)c[f+48>>2]=c[h>>2];if((c[v>>2]|0)==(b|0))c[v>>2]=c[h>>2];q=q+-1|0;c[b+44>>2]=0;c[h>>2]=c[x>>2];f=c[x>>2]|0;if(f|0)c[f+44>>2]=b;c[x>>2]=b;r=r+1|0;b=c[v>>2]|0}while((b|0)!=0);c[B+32+9284>>2]=q;c[y>>2]=r}c[B+32>>2]=0;c[B+32+9276>>2]=0;b=c[t>>2]|0;f=c[t+12>>2]|0;T=+g[f+16>>2];K=+g[b+16>>2]-T;M=+g[f+20>>2];N=+g[b+20>>2]-M;Q=+g[f+24>>2];R=+g[b+24>>2]-Q;f=c[t+4>>2]|0;P=+g[f+16>>2]-T;S=+g[f+20>>2]-M;L=+g[f+24>>2]-Q;m=c[t+8>>2]|0;T=+g[m+16>>2]-T;M=+g[m+20>>2]-M;Q=+g[m+24>>2]-Q;if(K*S*Q+(N*L*T+R*P*M-K*L*M-N*P*Q)-R*S*T<0.0){c[t>>2]=f;c[t+4>>2]=b;h=c[t+16>>2]|0;c[t+16>>2]=c[t+20>>2];c[t+20>>2]=h;h=f}else{h=b;b=f}h=nf(B+32|0,h,b,m,1)|0;q=nf(B+32|0,c[t+4>>2]|0,c[t>>2]|0,c[t+12>>2]|0,1)|0;r=nf(B+32|0,c[t+8>>2]|0,c[t+4>>2]|0,c[t+12>>2]|0,1)|0;j=nf(B+32|0,c[t>>2]|0,c[t+8>>2]|0,c[t+12>>2]|0,1)|0;if((c[B+32+9284>>2]|0)==4){b=c[w>>2]|0;n=+g[b+16>>2];f=c[b+48>>2]|0;if(f){o=n*n;while(1){n=+g[f+16>>2];m=n*n<o;b=m?f:b;f=c[f+48>>2]|0;if(!f)break;else o=m?n*n:o}}s=+g[b>>2];p=+g[b+4>>2];o=+g[b+8>>2];n=+g[b+12>>2];u=c[b+16>>2]|0;U=c[b+20>>2]|0;f=c[b+24>>2]|0;m=c[b+28>>2]|0;a[h+52>>0]=0;c[h+32>>2]=q;a[q+52>>0]=0;c[q+32>>2]=h;a[h+53>>0]=0;c[h+36>>2]=r;a[r+52>>0]=1;c[r+32>>2]=h;a[h+54>>0]=0;c[h+40>>2]=j;a[j+52>>0]=2;c[j+32>>2]=h;a[q+53>>0]=2;c[q+36>>2]=j;a[j+54>>0]=1;c[j+40>>2]=q;a[q+54>>0]=1;c[q+40>>2]=r;a[r+53>>0]=2;c[r+36>>2]=q;a[r+54>>0]=1;c[r+40>>2]=j;a[j+53>>0]=2;c[j+36>>2]=r;c[B+32>>2]=0;t=b;r=U;j=f;q=m;b=u;u=0;while(1){f=c[B+32+9276>>2]|0;if(f>>>0>=64){z=43;break}c[B+9840>>2]=0;c[B+9840+4>>2]=0;c[B+9840+8>>2]=0;c[B+32+9276>>2]=f+1;u=u+1|0;a[t+55>>0]=u;h=t+4|0;U=t+8|0;Nh(B+9328|0,+g[t>>2],+g[h>>2],+g[U>>2],B+32+60+(f<<5)|0);if(+g[t>>2]*+g[B+32+60+(f<<5)+16>>2]+ +g[h>>2]*+g[B+32+60+(f<<5)+20>>2]+ +g[U>>2]*+g[B+32+60+(f<<5)+24>>2]-+g[t+16>>2]>9.999999747378752e-05)h=0;else{f=7;z=42;break}do{m=zh(B+32|0,u,B+32+60+(f<<5)|0,c[t+32+(h<<2)>>2]|0,d[t+52+h>>0]|0,B+9840|0)|0;h=h+1|0}while(m&h>>>0<3);if(!(m&(c[B+9840+8>>2]|0)>>>0>2)){f=4;z=42;break}m=c[B+9840>>2]|0;b=c[B+9840+4>>2]|0;a[m+53>>0]=2;c[m+36>>2]=b;a[b+54>>0]=1;c[b+40>>2]=m;b=t+44|0;m=t+48|0;f=c[m>>2]|0;if(f|0)c[f+44>>2]=c[b>>2];b=c[b>>2]|0;if(b|0)c[b+48>>2]=c[m>>2];if((c[v>>2]|0)==(t|0))c[v>>2]=c[m>>2];c[B+32+9284>>2]=(c[B+32+9284>>2]|0)+-1;c[t+44>>2]=0;c[m>>2]=c[x>>2];b=c[x>>2]|0;if(b|0)c[b+44>>2]=t;c[x>>2]=t;c[y>>2]=(c[y>>2]|0)+1;f=c[w>>2]|0;n=+g[f+16>>2];b=c[f+48>>2]|0;if(b){o=n*n;while(1){n=+g[b+16>>2];m=n*n<o;f=m?b:f;b=c[b+48>>2]|0;if(!b)break;else o=m?n*n:o}}s=+g[f>>2];p=+g[f+4>>2];o=+g[f+8>>2];n=+g[f+12>>2];b=c[f+16>>2]|0;m=c[f+20>>2]|0;h=c[f+24>>2]|0;q=c[f+28>>2]|0;if(u>>>0>=255){f=q;break}else{t=f;r=m;j=h}}if((z|0)==42){c[B+32>>2]=f;m=r;h=j;f=q}else if((z|0)==43){c[B+32>>2]=6;m=r;h=j;f=q}R=(c[k>>2]=b,+g[k>>2]);P=s*R;M=p*R;R=o*R;g[B+32+40>>2]=s;g[B+32+44>>2]=p;g[B+32+48>>2]=o;g[B+32+52>>2]=n;c[B+32+56>>2]=b;c[B+32+36>>2]=3;c[B+32+4>>2]=m;c[B+32+8>>2]=h;c[B+32+12>>2]=f;U=h;Q=+g[U+16>>2]-P;K=+g[U+20>>2]-M;N=+g[U+24>>2]-R;y=f;J=+g[y+16>>2]-P;L=+g[y+20>>2]-M;S=+g[y+24>>2]-R;S=+O(+((Q*L-K*J)*(Q*L-K*J)+((K*S-N*L)*(K*S-N*L)+(N*J-Q*S)*(N*J-Q*S))));g[B+32+20>>2]=S;Q=+g[y+16>>2]-P;J=+g[y+20>>2]-M;N=+g[y+24>>2]-R;y=m;L=+g[y+16>>2]-P;K=+g[y+20>>2]-M;T=+g[y+24>>2]-R;T=+O(+((Q*K-J*L)*(Q*K-J*L)+((J*T-N*K)*(J*T-N*K)+(N*L-Q*T)*(N*L-Q*T))));g[B+32+24>>2]=T;Q=+g[y+16>>2]-P;L=+g[y+20>>2]-M;N=+g[y+24>>2]-R;P=+g[U+16>>2]-P;M=+g[U+20>>2]-M;R=+g[U+24>>2]-R;R=+O(+((Q*M-L*P)*(Q*M-L*P)+((L*R-N*M)*(L*R-N*M)+(N*P-Q*R)*(N*P-Q*R))));g[B+32+20>>2]=S/(R+(S+T));g[B+32+24>>2]=T/(R+(S+T));g[B+32+28>>2]=R/(R+(S+T));if((c[B+32>>2]|0)!=9)if(!(c[B+32+36>>2]|0)){p=0.0;o=0.0;n=0.0;break}else{h=B+32+36|0;z=51;break}c[l>>2]=3;U=0;i=B;return U|0}else z=45}else z=45;while(0);if((z|0)==45){c[B+32>>2]=8;g[B+32+40>>2]=p;g[B+32+44>>2]=s;g[B+32+48>>2]=o;g[B+32+52>>2]=0.0;n=+O(+(p*p+s*s+o*o));if(n>0.0){g[B+32+40>>2]=1.0/n*p;g[B+32+44>>2]=1.0/n*s;g[B+32+48>>2]=1.0/n*o}else{c[A>>2]=1065353216;c[B+32+44>>2]=0;c[B+32+48>>2]=0}g[B+32+52>>2]=0.0;g[B+32+56>>2]=0.0;c[B+32+36>>2]=1;c[B+32+4>>2]=c[t>>2];g[B+32+20>>2]=1.0;h=B+32+36|0;z=51}if((z|0)==51){m=0;p=0.0;o=0.0;n=0.0;do{b=c[B+9712+120>>2]|0;U=c[B+9712+124>>2]|0;f=(c[B+9712>>2]|0)+(U>>1)|0;if(U&1)b=c[(c[f>>2]|0)+b>>2]|0;ic[b&127](B,f,c[B+32+4+(m<<2)>>2]|0);T=+g[B+32+20+(m<<2)>>2];p=p+ +g[B>>2]*T;n=n+T*+g[B+4>>2];o=o+T*+g[B+8>>2];m=m+1|0}while(m>>>0<(c[h>>2]|0)>>>0)}c[l>>2]=1;T=p*+g[e+16>>2]+n*+g[e+20>>2]+o*+g[e+24>>2]+ +g[e+52>>2];Q=p*+g[e+32>>2]+n*+g[e+36>>2]+o*+g[e+40>>2]+ +g[e+56>>2];g[l+4>>2]=p*+g[e>>2]+n*+g[e+4>>2]+o*+g[e+8>>2]+ +g[e+48>>2];g[l+8>>2]=T;g[l+12>>2]=Q;g[l+16>>2]=0.0;Q=+g[A>>2];T=+g[B+32+56>>2];R=+g[B+32+44>>2];S=+g[B+32+48>>2];K=p-Q*T;L=n-T*R;M=o-T*S;N=K*+g[e+16>>2]+L*+g[e+20>>2]+M*+g[e+24>>2]+ +g[e+52>>2];P=K*+g[e+32>>2]+L*+g[e+36>>2]+M*+g[e+40>>2]+ +g[e+56>>2];g[l+20>>2]=K*+g[e>>2]+L*+g[e+4>>2]+M*+g[e+8>>2]+ +g[e+48>>2];g[l+24>>2]=N;g[l+28>>2]=P;g[l+32>>2]=0.0;g[l+36>>2]=-Q;g[l+40>>2]=-R;g[l+44>>2]=-S;g[l+48>>2]=0.0;g[l+52>>2]=-T;U=1;i=B;return U|0}case 2:{c[l>>2]=2;U=0;i=B;return U|0}default:{U=0;i=B;return U|0}}return 0}function Qc(b,d){b=b|0;d=+d;var e=0,f=0.0,h=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,P=0.0,Q=0.0,R=0.0;r=i;i=i+144|0;o=c[b+136>>2]|0;if(!o){i=r;return}k=c[b+8>>2]|0;if((k|0)<(o|0)){if((c[b+12>>2]|0)<(o|0)){c[6435]=(c[6435]|0)+1;e=yc((o<<4|3)+16|0)|0;if(!e)j=0;else{c[(e+4+15&-16)+-4>>2]=e;j=e+4+15&-16}e=c[b+8>>2]|0;if((e|0)>0){h=0;do{n=j+(h<<4)|0;s=(c[b+16>>2]|0)+(h<<4)|0;c[n>>2]=c[s>>2];c[n+4>>2]=c[s+4>>2];c[n+8>>2]=c[s+8>>2];c[n+12>>2]=c[s+12>>2];h=h+1|0}while((h|0)!=(e|0))}e=c[b+16>>2]|0;if(e|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=j;c[b+12>>2]=o;h=b+16|0}else h=b+16|0;e=k;do{s=(c[h>>2]|0)+(e<<4)|0;c[s>>2]=c[r+80>>2];c[s+4>>2]=c[r+80+4>>2];c[s+8>>2]=c[r+80+8>>2];c[s+12>>2]=c[r+80+12>>2];e=e+1|0}while((e|0)!=(o|0))}c[b+8>>2]=o;k=c[b+28>>2]|0;if((k|0)<(o|0)){if((c[b+32>>2]|0)<(o|0)){c[6435]=(c[6435]|0)+1;e=yc((o<<4|3)+16|0)|0;if(!e)j=0;else{c[(e+4+15&-16)+-4>>2]=e;j=e+4+15&-16}e=c[b+28>>2]|0;if((e|0)>0){h=0;do{s=j+(h<<4)|0;n=(c[b+36>>2]|0)+(h<<4)|0;c[s>>2]=c[n>>2];c[s+4>>2]=c[n+4>>2];c[s+8>>2]=c[n+8>>2];c[s+12>>2]=c[n+12>>2];h=h+1|0}while((h|0)!=(e|0))}e=c[b+36>>2]|0;if(e|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=j;c[b+32>>2]=o;h=b+36|0}else h=b+36|0;e=k;do{s=(c[h>>2]|0)+(e<<4)|0;c[s>>2]=c[r+64>>2];c[s+4>>2]=c[r+64+4>>2];c[s+8>>2]=c[r+64+8>>2];c[s+12>>2]=c[r+64+12>>2];e=e+1|0}while((e|0)!=(o|0))}c[b+28>>2]=o;n=c[b+48>>2]|0;if((n|0)<(o|0)){do if((c[b+52>>2]|0)<(o|0)){c[6435]=(c[6435]|0)+1;e=yc((o<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[b+48>>2]|0;j=c[b+56>>2]|0;if((h|0)<=0){if(!j){a[b+60>>0]=1;c[b+56>>2]=e;c[b+52>>2]=o;h=o<<2;break}}else{k=0;do{c[e+(k<<2)>>2]=c[j+(k<<2)>>2];k=k+1|0}while((k|0)!=(h|0))}if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[b+60>>0]=1;c[b+56>>2]=e;c[b+52>>2]=o;h=o<<2}else{h=o<<2;e=c[b+56>>2]|0}while(0);Tn(e+(n<<2)|0,0,h-(n<<2)|0)|0}c[b+48>>2]=o;n=c[b+68>>2]|0;if((n|0)<(o|0)){do if((c[b+72>>2]|0)<(o|0)){c[6435]=(c[6435]|0)+1;e=yc((o<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}h=c[b+68>>2]|0;j=c[b+76>>2]|0;if((h|0)<=0){if(!j){a[b+80>>0]=1;c[b+76>>2]=e;c[b+72>>2]=o;h=o<<2;break}}else{k=0;do{c[e+(k<<2)>>2]=c[j+(k<<2)>>2];k=k+1|0}while((k|0)!=(h|0))}if(a[b+80>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[b+80>>0]=1;c[b+76>>2]=e;c[b+72>>2]=o;h=o<<2}else{h=o<<2;e=c[b+76>>2]|0}while(0);Tn(e+(n<<2)|0,0,h-(n<<2)|0)|0}c[b+68>>2]=o;e=c[b+136>>2]|0;if((e|0)<=0){i=r;return}h=c[b+76>>2]|0;j=c[b+56>>2]|0;k=0;do{g[h+(k<<2)>>2]=0.0;g[j+(k<<2)>>2]=0.0;k=k+1|0}while((k|0)!=(e|0));k=0;do{h=c[b+144>>2]|0;j=c[h+(k*284|0)+88>>2]|0;if(j){e=h+(k*284|0)+92|0;c[r+96>>2]=c[e>>2];c[r+96+4>>2]=c[e+4>>2];c[r+96+8>>2]=c[e+8>>2];c[r+96+12>>2]=c[e+12>>2];e=h+(k*284|0)+108|0;c[r+96+16>>2]=c[e>>2];c[r+96+16+4>>2]=c[e+4>>2];c[r+96+16+8>>2]=c[e+8>>2];c[r+96+16+12>>2]=c[e+12>>2];e=h+(k*284|0)+124|0;c[r+96+32>>2]=c[e>>2];c[r+96+32+4>>2]=c[e+4>>2];c[r+96+32+8>>2]=c[e+8>>2];c[r+96+32+12>>2]=c[e+12>>2];e=c[b+36>>2]|0;x=c[b+120>>2]|0;o=c[r+96+16+(x<<2)>>2]|0;y=c[r+96+32+(x<<2)>>2]|0;c[e+(k<<4)>>2]=c[r+96+(x<<2)>>2];c[e+(k<<4)+4>>2]=o;c[e+(k<<4)+8>>2]=y;g[e+(k<<4)+12>>2]=0.0;e=c[b+36>>2]|0;y=e+(k<<4)|0;z=+g[y>>2];o=h+(k*284|0)|0;f=+g[o>>2];x=e+(k<<4)+4|0;w=+g[x>>2];n=h+(k*284|0)+4|0;l=+g[n>>2];e=e+(k<<4)+8|0;t=+g[e>>2];s=h+(k*284|0)+8|0;v=+g[s>>2];m=z-f*(z*f+w*l+t*v);u=w-l*(z*f+w*l+t*v);v=t-v*(z*f+w*l+t*v);t=1.0/+O(+(m*m+u*u+v*v));g[y>>2]=m*t;g[x>>2]=u*t;g[e>>2]=v*t;e=c[b+16>>2]|0;l=+g[n>>2];w=+g[s>>2];f=+g[o>>2];g[e+(k<<4)>>2]=l*v*t-w*u*t;g[e+(k<<4)+4>>2]=w*m*t-v*t*f;g[e+(k<<4)+8>>2]=u*t*f-l*m*t;g[e+(k<<4)+12>>2]=0.0;e=c[b+16>>2]|0;o=e+(k<<4)|0;t=+g[o>>2];s=e+(k<<4)+4|0;m=+g[s>>2];e=e+(k<<4)+8|0;l=+g[e>>2];f=1.0/+O(+(t*t+m*m+l*l));g[o>>2]=t*f;g[s>>2]=m*f;g[e>>2]=l*f;e=c[b+116>>2]|0;s=c[b+36>>2]|0;f=+g[s+(k<<4)>>2];l=+g[s+(k<<4)+4>>2];m=+g[s+(k<<4)+8>>2];if(f*f+l*l+m*m>1.100000023841858)f=0.0;else{C=+g[h+(k*284|0)+16>>2];G=C-+g[e+52>>2];E=+g[h+(k*284|0)+20>>2];I=E-+g[e+56>>2];J=+g[h+(k*284|0)+24>>2];L=J-+g[e+60>>2];C=C-+g[j+52>>2];E=E-+g[j+56>>2];J=J-+g[j+60>>2];F=+g[e+332>>2];M=+g[e+336>>2];H=+g[e+328>>2];B=+g[j+332>>2];K=+g[j+336>>2];D=+g[j+328>>2];A=(m*I-l*L)*+g[e+4>>2]+(f*L-m*G)*+g[e+20>>2]+(l*G-f*I)*+g[e+36>>2];t=(m*I-l*L)*+g[e+8>>2]+(f*L-m*G)*+g[e+24>>2]+(l*G-f*I)*+g[e+40>>2];u=(m*I-l*L)*+g[e+12>>2]+(f*L-m*G)*+g[e+28>>2]+(l*G-f*I)*+g[e+44>>2];v=(E*-m-J*-l)*+g[j+4>>2]+(J*-f-C*-m)*+g[j+20>>2]+(C*-l-E*-f)*+g[j+36>>2];w=(E*-m-J*-l)*+g[j+8>>2]+(J*-f-C*-m)*+g[j+24>>2]+(C*-l-E*-f)*+g[j+40>>2];z=(E*-m-J*-l)*+g[j+12>>2]+(J*-f-C*-m)*+g[j+28>>2]+(C*-l-E*-f)*+g[j+44>>2];f=(f*(L*F-I*M+ +g[e+312>>2]-(J*B-E*K+ +g[j+312>>2]))+l*(+g[e+316>>2]+(G*M-L*H)-(+g[j+316>>2]+(C*K-J*D)))+m*(I*H-G*F+ +g[e+320>>2]-(E*D-C*B+ +g[j+320>>2])))*-.20000000298023224*(1.0/(+g[j+344>>2]+(+g[e+344>>2]+(A*A*+g[e+396>>2]+t*t*+g[e+400>>2]+u*u*+g[e+404>>2]))+(v*v*+g[j+396>>2]+w*w*+g[j+400>>2]+z*z*+g[j+404>>2])))}g[(c[b+76>>2]|0)+(k<<2)>>2]=f;e=c[b+136>>2]|0}k=k+1|0}while((k|0)<(e|0));if((e|0)<=0){i=r;return}h=c[b+144>>2]|0;j=0;o=0;while(1){e=c[h+(o*284|0)+88>>2]|0;if(e){f=+g[h+(o*284|0)+252>>2];if(f!=0.0){k=h;f=f*d}else{M=+g[h+(o*284|0)+256>>2];M=M==0.0?0.0:M;k=c[b+116>>2]|0;y=c[b+16>>2]|0;G=+g[h+(o*284|0)+16>>2];E=+g[h+(o*284|0)+20>>2];A=+g[h+(o*284|0)+24>>2];w=+g[y+(o<<4)>>2];D=+g[y+(o<<4)+4>>2];f=+g[y+(o<<4)+8>>2];P=G-+g[k+52>>2];Q=E-+g[k+56>>2];l=A-+g[k+60>>2];m=+g[k+264>>2]*(Q*f-l*D)+ +g[k+280>>2]*(l*w-P*f)+(P*D-Q*w)*+g[k+296>>2];R=(Q*f-l*D)*+g[k+268>>2]+(l*w-P*f)*+g[k+284>>2]+(P*D-Q*w)*+g[k+300>>2];N=(Q*f-l*D)*+g[k+272>>2]+(l*w-P*f)*+g[k+288>>2]+(P*D-Q*w)*+g[k+304>>2];K=G-+g[e+52>>2];I=E-+g[e+56>>2];C=A-+g[e+60>>2];v=(D*K-w*I)*+g[e+296>>2]+(+g[e+264>>2]*(f*I-D*C)+ +g[e+280>>2]*(w*C-f*K));t=(f*I-D*C)*+g[e+268>>2]+(w*C-f*K)*+g[e+284>>2]+(D*K-w*I)*+g[e+300>>2];u=(f*I-D*C)*+g[e+272>>2]+(w*C-f*K)*+g[e+288>>2]+(D*K-w*I)*+g[e+304>>2];G=G-+g[k+52>>2];E=E-+g[k+56>>2];A=A-+g[k+60>>2];H=+g[k+332>>2];z=+g[k+336>>2];F=+g[k+328>>2];L=+g[e+332>>2];B=+g[e+336>>2];J=+g[e+328>>2];f=-(1.0/(+g[k+344>>2]+(f*(Q*m-P*R)+(w*(l*R-Q*N)+D*(P*N-l*m)))+(+g[e+344>>2]+(f*(I*v-K*t)+(w*(C*t-I*u)+D*(K*u-C*v)))))*((A*H-E*z+ +g[k+312>>2]-(C*L-I*B+ +g[e+312>>2]))*w+(+g[k+316>>2]+(G*z-A*F)-(+g[e+316>>2]+(K*B-C*J)))*D+(E*F-G*H+ +g[k+320>>2]-(I*J-K*L+ +g[e+320>>2]))*f));f=M<f?M:f;k=c[b+144>>2]|0;f=f<-M?-M:f}n=c[b+56>>2]|0;y=n+(o<<2)|0;g[y>>2]=0.0;e=k+(o*284|0)+280|0;g[e>>2]=1.0;m=+g[h+(o*284|0)+276>>2]*d*+g[h+(o*284|0)+228>>2];g[y>>2]=f;f=f*.5;l=+g[(c[b+76>>2]|0)+(o<<2)>>2];if(f*f+l*l>m*m){R=m/+O(+(f*f+l*l));g[e>>2]=R*+g[e>>2];e=1}else e=j}else{n=c[b+56>>2]|0;g[n+(o<<2)>>2]=0.0;g[h+(o*284|0)+280>>2]=1.0;k=h;e=j}o=o+1|0;j=c[b+136>>2]|0;if((o|0)>=(j|0))break;else{h=k;j=e}}if(e){if((j|0)<=0){i=r;return}e=c[b+76>>2]|0;h=0;do{if(+g[e+(h<<2)>>2]!=0.0?(p=k+(h*284|0)+280|0,q=+g[p>>2],q<1.0):0){y=n+(h<<2)|0;g[y>>2]=q*+g[y>>2];y=(c[b+76>>2]|0)+(h<<2)|0;g[y>>2]=+g[p>>2]*+g[y>>2]}h=h+1|0}while((h|0)!=(j|0))}if((j|0)<=0){i=r;return}j=n;e=0;while(1){h=c[b+116>>2]|0;n=k+(e*284|0)+16|0;l=+g[n>>2]-+g[h+52>>2];o=k+(e*284|0)+20|0;m=+g[o>>2]-+g[h+56>>2];p=k+(e*284|0)+24|0;d=+g[p>>2]-+g[h+60>>2];g[r+96>>2]=l;g[r+96+4>>2]=m;g[r+96+8>>2]=d;g[r+96+12>>2]=0.0;f=+g[j+(e<<2)>>2];if(f!=0.0){y=c[b+16>>2]|0;Q=f*+g[y+(e<<4)+4>>2];R=f*+g[y+(e<<4)+8>>2];g[r+16>>2]=f*+g[y+(e<<4)>>2];g[r+16+4>>2]=Q;g[r+16+8>>2]=R;g[r+16+12>>2]=0.0;gj(h,r+16|0,r+96|0)}f=+g[(c[b+76>>2]|0)+(e<<2)>>2];if(f!=0.0){y=c[(c[b+144>>2]|0)+(e*284|0)+88>>2]|0;Q=+g[o>>2]-+g[y+56>>2];P=+g[p>>2]-+g[y+60>>2];g[r+48>>2]=+g[n>>2]-+g[y+52>>2];g[r+48+4>>2]=Q;g[r+48+8>>2]=P;g[r+48+12>>2]=0.0;x=c[b+36>>2]|0;P=+g[x+(e<<4)>>2]*f;Q=f*+g[x+(e<<4)+4>>2];R=f*+g[x+(e<<4)+8>>2];g[r+32>>2]=P;g[r+32+4>>2]=Q;g[r+32+8>>2]=R;g[r+32+12>>2]=0.0;x=c[b+116>>2]|0;s=c[b+124>>2]|0;K=+g[x+4+(s<<2)>>2];L=+g[x+20+(s<<2)>>2];M=+g[x+36+(s<<2)>>2];N=(K*l+L*m+M*d)*(1.0-+g[k+(e*284|0)+244>>2]);g[r+96>>2]=l-K*N;g[r+96+4>>2]=m-L*N;g[r+96+8>>2]=d-M*N;gj(x,r+32|0,r+96|0);g[r>>2]=-P;g[r+4>>2]=-Q;g[r+8>>2]=-R;g[r+12>>2]=0.0;gj(y,r,r+48|0)}e=e+1|0;if((e|0)>=(c[b+136>>2]|0))break;k=c[b+144>>2]|0;j=c[b+56>>2]|0}i=r;return}function Rc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,P=0,Q=0.0,R=0.0;P=i;i=i+240|0;M=c[d+36>>2]|0;s=+g[(+g[M+88>>2]>0.0?b+16|0:b+20|0)>>2];if(a[M+100>>0]&1){i=P;return}K=c[b+8>>2]|0;u=c[K+4>>2]|0;L=c[K+12>>2]|0;I=c[(c[b+4>>2]|0)+684>>2]|0;B=+g[M+8>>2]-+g[L+48>>2];o=+g[M+12>>2]-+g[L+52>>2];C=+g[M+16>>2]-+g[L+56>>2];A=1.0/+g[I+76>>2];z=(B*+g[L>>2]+o*+g[L+16>>2]+C*+g[L+32>>2])*A/3.0;F=z<0.0?~~(1.0-z):0;J=~~((z+ +(F|0)-+(~~(z+ +(F|0))|0))*3.0);r=(z+ +(F|0)-+(~~(z+ +(F|0))|0))*3.0-+(J|0);F=~~(z+ +(F|0))-F|0;z=A*(B*+g[L+4>>2]+o*+g[L+20>>2]+C*+g[L+36>>2])/3.0;D=z<0.0?~~(1.0-z):0;G=~~((z+ +(D|0)-+(~~(z+ +(D|0))|0))*3.0);n=(z+ +(D|0)-+(~~(z+ +(D|0))|0))*3.0-+(G|0);D=~~(z+ +(D|0))-D|0;C=A*(B*+g[L+8>>2]+o*+g[L+24>>2]+C*+g[L+40>>2])/3.0;E=C<0.0?~~(1.0-C):0;H=~~((C+ +(E|0)-+(~~(C+ +(E|0))|0))*3.0);o=(C+ +(E|0)-+(~~(C+ +(E|0))|0))*3.0-+(H|0);E=~~(C+ +(E|0))-E|0;p=(F>>>16<<11^(F&65535)+16^(F&65535)+16<<16)+(D&65535)+((F>>>16<<11^(F&65535)+16^(F&65535)+16<<16)>>>11)|0;p=(p^D>>>16<<11^p<<16)+(E&65535)+((p^D>>>16<<11^p<<16)>>>11)|0;p=(p^E>>>16<<11^p<<16)+(u&65535)+((p^E>>>16<<11^p<<16)>>>11)|0;p=((p^u>>>16<<11^p<<16)>>>11)+(p^u>>>16<<11^p<<16)|0;p=((p<<3^p)>>>5)+(p<<3^p)<<4^((p<<3^p)>>>5)+(p<<3^p);p=(((p>>>17)+p<<25^(p>>>17)+p)>>>6)+((p>>>17)+p<<25^(p>>>17)+p)|0;q=c[I+60>>2]|0;t=c[I+68>>2]|0;d=c[t+(((p>>>0)%(q>>>0)|0)<<2)>>2]|0;c[I+96>>2]=(c[I+96>>2]|0)+1;e=(c[I+92>>2]|0)+1|0;c[I+92>>2]=e;a:do if(!d)w=9;else while(1){if(((((c[d+272>>2]|0)==(p|0)?(c[d+256>>2]|0)==(F|0):0)?(c[d+260>>2]|0)==(D|0):0)?(c[d+264>>2]|0)==(E|0):0)?(c[d+276>>2]|0)==(u|0):0)break a;d=c[d+280>>2]|0;e=e+1|0;c[I+92>>2]=e;if(!d){w=9;break}}while(0);if((w|0)==9){f=c[I+84>>2]|0;c[I+84>>2]=f+1;if((f|0)>=(c[I+88>>2]|0)){c[5789]=(c[5789]|0)+1;b:do if((q|0)>0){e=t;f=0;while(1){e=e+(f<<2)|0;d=c[e>>2]|0;c[e>>2]=0;if(d|0)do{e=d;d=c[d+280>>2]|0;hd(e)}while((d|0)!=0);d=f+1|0;if((d|0)==(q|0))break b;e=c[I+68>>2]|0;f=d}}while(0);g[I+76>>2]=.25;c[I+80>>2]=0;c[I+84>>2]=0;c[I+92>>2]=1;c[I+96>>2]=1}while(1){d=yc(284)|0;if(d|0)break;d=c[6564]|0;c[6564]=d+0;if(!d){w=19;break}jc[d&3]()}if((w|0)==19){P=Ya(4)|0;c[P>>2]=9640;pb(P|0,2800,251)}Tn(d|0,0,284)|0;c[d+280>>2]=c[t+(((p>>>0)%(q>>>0)|0)<<2)>>2];c[t+(((p>>>0)%(q>>>0)|0)<<2)>>2]=d;c[d+276>>2]=u;c[d+272>>2]=p;c[d+256>>2]=F;c[d+260>>2]=D;c[d+264>>2]=E;l=+g[I+76>>2];q=P+168+4|0;t=P+168+24|0;u=P+168+44|0;h=l;e=0;while(1){k=l*+(E|0)*3.0+ +(e|0)*h;p=0;while(1){j=l*+(D|0)*3.0+ +(p|0)*h;g[P+96>>2]=+(F|0)*3.0*l+h*0.0;g[P+96+4>>2]=j;g[P+96+8>>2]=k;g[P+96+12>>2]=0.0;f=c[d+276>>2]|0;c[P+168>>2]=1065353216;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[P+168+20>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[P+168+40>>2]=1065353216;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;if((c[f+4>>2]|0)<20)h=+ed(P+96|0,f,P+168|0,P+112|0);else h=0.0;g[d+(p<<4)+(e<<2)>>2]=h;g[P+96>>2]=+(F|0)*3.0*l+ +g[I+76>>2];g[P+96+4>>2]=j;g[P+96+8>>2]=k;g[P+96+12>>2]=0.0;f=c[d+276>>2]|0;c[P+168>>2]=1065353216;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[P+168+20>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[P+168+40>>2]=1065353216;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;if((c[f+4>>2]|0)<20)h=+ed(P+96|0,f,P+168|0,P+112|0);else h=0.0;g[d+64+(p<<4)+(e<<2)>>2]=h;g[P+96>>2]=+(F|0)*3.0*l+ +g[I+76>>2]*2.0;g[P+96+4>>2]=j;g[P+96+8>>2]=k;g[P+96+12>>2]=0.0;f=c[d+276>>2]|0;c[P+168>>2]=1065353216;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[P+168+20>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[P+168+40>>2]=1065353216;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;if((c[f+4>>2]|0)<20)h=+ed(P+96|0,f,P+168|0,P+112|0);else h=0.0;g[d+128+(p<<4)+(e<<2)>>2]=h;g[P+96>>2]=+(F|0)*3.0*l+ +g[I+76>>2]*3.0;g[P+96+4>>2]=j;g[P+96+8>>2]=k;g[P+96+12>>2]=0.0;f=c[d+276>>2]|0;c[P+168>>2]=1065353216;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[P+168+20>>2]=1065353216;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[t+12>>2]=0;c[P+168+40>>2]=1065353216;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[u+12>>2]=0;c[u+16>>2]=0;if((c[f+4>>2]|0)<20)h=+ed(P+96|0,f,P+168|0,P+112|0);else h=0.0;g[d+192+(p<<4)+(e<<2)>>2]=h;f=p+1|0;if((f|0)==4)break;h=+g[I+76>>2];p=f}e=e+1|0;if((e|0)==4)break;h=+g[I+76>>2]}}c[d+268>>2]=c[I+80>>2];h=+g[d+(J<<6)+(G<<4)+(H<<2)>>2];y=+g[d+(J+1<<6)+(G<<4)+(H<<2)>>2];v=+g[d+(J+1<<6)+(G+1<<4)+(H<<2)>>2];x=+g[d+(J<<6)+(G+1<<4)+(H<<2)>>2];C=+g[d+(J<<6)+(G<<4)+(H+1<<2)>>2];B=+g[d+(J+1<<6)+(G<<4)+(H+1<<2)>>2];z=+g[d+(J+1<<6)+(G+1<<4)+(H+1<<2)>>2];A=+g[d+(J<<6)+(G+1<<4)+(H+1<<2)>>2];j=y-h+n*(v-x-(y-h))+o*(B-C+n*(z-A-(B-C))-(y-h+n*(v-x-(y-h))));k=x-h+r*(v-y-(x-h))+o*(A-C+r*(z-B-(A-C))-(x-h+r*(v-y-(x-h))));l=C-h+r*(B-y-(C-h))+n*(A-x+r*(z-v-(A-x))-(C-h+r*(B-y-(C-h))));m=1.0/+O(+(j*j+k*k+l*l));h=h+r*(y-h)+n*(x+r*(v-x)-(h+r*(y-h)));h=h+o*(C+r*(B-C)+n*(A+r*(z-A)-(C+r*(B-C)))-h)-s;if(!(h<0.0)){i=P;return}t=c[K+8>>2]|0;B=+g[L>>2]*j*m+ +g[L+4>>2]*k*m+ +g[L+8>>2]*l*m;C=j*m*+g[L+16>>2]+k*m*+g[L+20>>2]+l*m*+g[L+24>>2];A=j*m*+g[L+32>>2]+k*m*+g[L+36>>2]+l*m*+g[L+40>>2];z=-(B*(+g[M+8>>2]-h*B)+C*(+g[M+12>>2]-h*C)+A*(+g[M+16>>2]-h*A));s=+g[M+88>>2];d=c[b+12>>2]|0;if(!d)r=0.0;else r=+g[d+344>>2];if(!(s+r>0.0)){i=P;return}if(!d)d=c[(c[b+8>>2]|0)+8>>2]|0;if((a[22528]|0)==0?Wa(22528)|0:0){e=23160;f=e+48|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));_a(22528)}e=c[b+12>>2]|0;m=+g[M+8>>2];x=m-+g[d+52>>2];n=+g[M+12>>2];y=n-+g[d+56>>2];o=+g[M+16>>2];v=o-+g[d+60>>2];if(!e){L=c[b+4>>2]|0;d=L;h=+g[L+452>>2];j=0.0;k=0.0;l=0.0}else{Q=+g[e+332>>2];k=+g[e+336>>2];R=+g[e+328>>2];d=c[b+4>>2]|0;l=+g[d+452>>2];h=l;j=(Q*v-k*y+ +g[e+312>>2])*l;k=(+g[e+316>>2]+(k*x-v*R))*l;l=(y*R-Q*x+ +g[e+320>>2])*l}m=m-+g[M+24>>2]-j;Q=n-+g[M+28>>2]-k;R=o-+g[M+32>>2]-l;j=+g[d+316>>2]*+g[(c[(c[b+8>>2]|0)+8>>2]|0)+224>>2];Pf(P,h,s,r,(e|0)==0?23160:e+264|0,x,y,v);c[P+80>>2]=c[P>>2];c[P+80+4>>2]=c[P+4>>2];c[P+80+8>>2]=c[P+8>>2];c[P+80+12>>2]=c[P+12>>2];c[P+64>>2]=c[P+16>>2];c[P+64+4>>2]=c[P+16+4>>2];c[P+64+8>>2]=c[P+16+8>>2];c[P+64+12>>2]=c[P+16+12>>2];c[P+48>>2]=c[P+32>>2];c[P+48+4>>2]=c[P+32+4>>2];c[P+48+8>>2]=c[P+32+8>>2];c[P+48+12>>2]=c[P+32+12>>2];q=c[b+4>>2]|0;h=s*+g[q+452>>2];j=(R-A*(m*B+Q*C+R*A))*(R-A*(m*B+Q*C+R*A))+((m-B*(m*B+Q*C+R*A))*(m-B*(m*B+Q*C+R*A))+(Q-C*(m*B+Q*C+R*A))*(Q-C*(m*B+Q*C+R*A)))<j*(m*B+Q*C+R*A)*(m*B+Q*C+R*A)*j?0.0:1.0-j;p=c[(c[(c[(c[b+8>>2]|0)+8>>2]|0)+204>>2]&3|0?q+328|0:q+324|0)>>2]|0;d=c[q+812>>2]|0;if((d|0)==(c[q+816>>2]|0)?(N=d|0?d<<1:1,(d|0)<(N|0)):0){if(!N)f=0;else{c[6435]=(c[6435]|0)+1;d=yc((N*104|3)+16|0)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}f=d;d=c[q+812>>2]|0}if((d|0)>0){e=0;do{L=f+(e*104|0)|0;K=c[q+820>>2]|0;J=K+(e*104|0)|0;c[L>>2]=c[J>>2];c[L+4>>2]=c[J+4>>2];c[L+8>>2]=c[J+8>>2];c[L+12>>2]=c[J+12>>2];c[L+16>>2]=c[J+16>>2];c[L+20>>2]=c[J+20>>2];c[L+24>>2]=c[J+24>>2];L=f+(e*104|0)+28|0;J=K+(e*104|0)+28|0;c[L>>2]=c[J>>2];c[L+4>>2]=c[J+4>>2];c[L+8>>2]=c[J+8>>2];c[L+12>>2]=c[J+12>>2];L=f+(e*104|0)+44|0;J=K+(e*104|0)+44|0;c[L>>2]=c[J>>2];c[L+4>>2]=c[J+4>>2];c[L+8>>2]=c[J+8>>2];c[L+12>>2]=c[J+12>>2];L=f+(e*104|0)+60|0;J=K+(e*104|0)+60|0;c[L>>2]=c[J>>2];c[L+4>>2]=c[J+4>>2];c[L+8>>2]=c[J+8>>2];c[L+12>>2]=c[J+12>>2];L=f+(e*104|0)+76|0;K=K+(e*104|0)+76|0;c[L>>2]=c[K>>2];c[L+4>>2]=c[K+4>>2];c[L+8>>2]=c[K+8>>2];c[L+12>>2]=c[K+12>>2];c[L+16>>2]=c[K+16>>2];c[L+20>>2]=c[K+20>>2];c[L+24>>2]=c[K+24>>2];e=e+1|0}while((e|0)!=(d|0))}d=c[q+820>>2]|0;if(d|0){if(a[q+824>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[q+820>>2]=0}a[q+824>>0]=1;c[q+820>>2]=f;c[q+816>>2]=N;d=c[q+812>>2]|0}L=c[q+820>>2]|0;c[L+(d*104|0)>>2]=t;g[L+(d*104|0)+4>>2]=B;g[L+(d*104|0)+8>>2]=C;g[L+(d*104|0)+12>>2]=A;g[L+(d*104|0)+16>>2]=0.0;g[L+(d*104|0)+20>>2]=z;c[L+(d*104|0)+24>>2]=M;N=L+(d*104|0)+28|0;c[N>>2]=c[P+80>>2];c[N+4>>2]=c[P+80+4>>2];c[N+8>>2]=c[P+80+8>>2];c[N+12>>2]=c[P+80+12>>2];N=L+(d*104|0)+44|0;c[N>>2]=c[P+64>>2];c[N+4>>2]=c[P+64+4>>2];c[N+8>>2]=c[P+64+8>>2];c[N+12>>2]=c[P+64+12>>2];N=L+(d*104|0)+60|0;c[N>>2]=c[P+48>>2];c[N+4>>2]=c[P+48+4>>2];c[N+8>>2]=c[P+48+8>>2];c[N+12>>2]=c[P+48+12>>2];N=L+(d*104|0)+76|0;g[N>>2]=x;g[L+(d*104|0)+80>>2]=y;g[L+(d*104|0)+84>>2]=v;g[L+(d*104|0)+88>>2]=0.0;g[N+16>>2]=h;g[N+20>>2]=j;c[N+24>>2]=p;c[q+812>>2]=(c[q+812>>2]|0)+1;d=c[b+12>>2]|0;if(!d){i=P;return}if(c[d+204>>2]&3|0){i=P;return}if((c[d+216>>2]&-2|0)!=4)c[d+216>>2]=1;g[d+220>>2]=0.0;i=P;return}
	function nc(d,f){d=d|0;f=f|0;var h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0,ha=0;da=i;i=i+288|0;h=c[d+52>>2]|0;if(h|0?(Ab[c[c[h>>2]>>2]&255](h),j=c[d+52>>2]|0,j|0):0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[6435]=(c[6435]|0)+1;h=yc(151)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h>>2]=9352;a[h+20>>0]=1;c[h+16>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;a[h+40>>0]=1;c[h+36>>2]=0;c[h+28>>2]=0;c[h+32>>2]=0;a[h+60>>0]=1;c[h+56>>2]=0;c[h+48>>2]=0;c[h+52>>2]=0;c[d+52>>2]=h;o=0;n=0;ca=0;J=0;while(1){if((o|0)>=(Eb[c[(c[d>>2]|0)+96>>2]&127](d)|0))break;do if((J|0)==(n|0)){l=n|0?n<<1:1;if((n|0)<(l|0)){if((l|0)!=0?(c[6435]=(c[6435]|0)+1,p=yc((l<<4|3)+16|0)|0,(p|0)!=0):0){c[(p+4+15&-16)+-4>>2]=p;h=p+4+15&-16}else h=0;if((n|0)<=0){if(!ca){m=n;j=l;break}}else{j=0;do{ba=h+(j<<4)|0;aa=ca+(j<<4)|0;c[ba>>2]=c[aa>>2];c[ba+4>>2]=c[aa+4>>2];c[ba+8>>2]=c[aa+8>>2];c[ba+12>>2]=c[aa+12>>2];j=j+1|0}while((j|0)!=(n|0))}c[6436]=(c[6436]|0)+1;hd(c[ca+-4>>2]|0);m=n;j=l}else{m=n;j=n;h=ca}}else{m=J;j=n;h=ca}while(0);n=h+(J<<4)|0;c[n>>2]=c[da+192>>2];c[n+4>>2]=c[da+192+4>>2];c[n+8>>2]=c[da+192+8>>2];c[n+12>>2]=c[da+192+12>>2];ic[c[(c[d>>2]|0)+108>>2]&127](d,o,n);o=o+1|0;n=j;ca=h;J=m+1|0}a[da+128+16>>0]=1;ba=da+128+12|0;c[ba>>2]=0;c[da+128+4>>2]=0;c[da+128+8>>2]=0;a[da+128+36>>0]=1;aa=da+128+32|0;c[aa>>2]=0;c[da+128+24>>2]=0;c[da+128+28>>2]=0;a[da+128+56>>0]=1;$=da+128+52|0;c[$>>2]=0;c[da+128+44>>2]=0;c[da+128+48>>2]=0;if(f){if((J|0)>0){G=0;j=0;m=0;l=0;while(1){h=G;G=G+1|0;if((G|0)<(J|0)){C=ca+(h<<4)|0;D=ca+(h<<4)+4|0;A=ca+(h<<4)+8|0;B=G;h=l;do{l=B;B=B+1|0;if((B|0)<(J|0)){y=ca+(l<<4)|0;z=ca+(l<<4)+4|0;f=ca+(l<<4)+8|0;w=B;do{E=+g[C>>2];I=+g[y>>2]-E;F=+g[D>>2];v=+g[z>>2]-F;H=+g[A>>2];x=+g[f>>2]-H;E=+g[ca+(w<<4)>>2]-E;F=+g[ca+(w<<4)+4>>2]-F;H=+g[ca+(w<<4)+8>>2]-H;q=1.0;p=0;while(1){t=(v*H-x*F)*q;u=(x*E-I*H)*q;r=(I*F-v*E)*q;a:do if(r*r+(t*t+u*u)>9.999999747378752e-05){s=1.0/+O(+(r*r+(t*t+u*u)));if((h|0)>0){l=0;do{if(t*s*+g[m+(l<<4)>>2]+u*s*+g[m+(l<<4)+4>>2]+r*s*+g[m+(l<<4)+8>>2]>.9990000128746033)break a;l=l+1|0}while((l|0)<(h|0))}q=t*s*+g[C>>2]+u*s*+g[D>>2]+r*s*+g[A>>2];l=0;do{if(t*s*+g[ca+(l<<4)>>2]+u*s*+g[ca+(l<<4)+4>>2]+r*s*+g[ca+(l<<4)+8>>2]-q+-.009999999776482582>0.0)break a;l=l+1|0}while((l|0)<(J|0));do if((h|0)==(j|0)){o=j|0?j<<1:1;if((j|0)<(o|0)){do if(!o)n=0;else{c[6435]=(c[6435]|0)+1;l=yc((o<<4|3)+16|0)|0;if(!l){n=0;break}c[(l+4+15&-16)+-4>>2]=l;n=l+4+15&-16}while(0);if((j|0)<=0){if(!m){l=j;j=o;m=n;break}}else{l=0;do{Y=n+(l<<4)|0;X=m+(l<<4)|0;c[Y>>2]=c[X>>2];c[Y+4>>2]=c[X+4>>2];c[Y+8>>2]=c[X+8>>2];c[Y+12>>2]=c[X+12>>2];l=l+1|0}while((l|0)!=(j|0))}c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0);l=j;j=o;m=n}else l=j}else l=h;while(0);g[m+(l<<4)>>2]=t*s;g[m+(l<<4)+4>>2]=u*s;g[m+(l<<4)+8>>2]=r*s;g[m+(l<<4)+12>>2]=-q;h=h+1|0}while(0);p=p+1|0;if((p|0)==2)break;else q=-1.0}w=w+1|0}while((w|0)!=(J|0))}}while((B|0)!=(J|0))}else h=l;if((G|0)==(J|0))break;else l=h}if((h|0)>0){o=0;p=0;f=0;while(1){Y=m+(f<<4)|0;c[da+208>>2]=c[Y>>2];c[da+208+4>>2]=c[Y+4>>2];c[da+208+8>>2]=c[Y+8>>2];q=+g[m+(f<<4)+12>>2];q=q-+Sb[c[(c[d>>2]|0)+48>>2]&15](d);do if((f|0)==(o|0)){n=o|0?o<<1:1;if((o|0)<(n|0)){if((n|0)!=0?(c[6435]=(c[6435]|0)+1,K=yc((n<<4|3)+16|0)|0,(K|0)!=0):0){c[(K+4+15&-16)+-4>>2]=K;l=K+4+15&-16}else l=0;if((o|0)<=0){if(!p){j=o;break}}else{j=0;do{Y=l+(j<<4)|0;X=p+(j<<4)|0;c[Y>>2]=c[X>>2];c[Y+4>>2]=c[X+4>>2];c[Y+8>>2]=c[X+8>>2];c[Y+12>>2]=c[X+12>>2];j=j+1|0}while((j|0)!=(o|0))}c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0);j=o}else{j=o;n=o;l=p}}else{j=f;n=o;l=p}while(0);Y=l+(j<<4)|0;c[Y>>2]=c[da+208>>2];c[Y+4>>2]=c[da+208+4>>2];c[Y+8>>2]=c[da+208+8>>2];g[l+(j<<4)+12>>2]=q;f=f+1|0;if((f|0)<(h|0)){o=n;p=l}else break}if((f|0)>0){C=0;n=0;j=0;h=0;do{A=C;C=C+1|0;if((C|0)<(f|0)){B=C;do{y=B;B=B+1|0;if((B|0)<(f|0)){z=B;do{t=+g[l+(y<<4)+4>>2];q=+g[l+(z<<4)+8>>2];r=+g[l+(y<<4)+8>>2];u=+g[l+(z<<4)+4>>2];v=+g[l+(z<<4)>>2];x=+g[l+(y<<4)>>2];s=+g[l+(A<<4)+8>>2];E=+g[l+(A<<4)+4>>2];F=+g[l+(A<<4)>>2];b:do if((((u*x-t*v)*(u*x-t*v)+((t*q-r*u)*(t*q-r*u)+(r*v-q*x)*(r*v-q*x))>9.999999747378752e-05?(v*E-u*F)*(v*E-u*F)+((u*s-q*E)*(u*s-q*E)+(q*F-v*s)*(q*F-v*s))>9.999999747378752e-05:0)?(t*F-x*E)*(t*F-x*E)+((r*E-t*s)*(r*E-t*s)+(x*s-r*F)*(x*s-r*F))>9.999999747378752e-05:0)?(U=s*(u*x-t*v)+(E*(r*v-q*x)+(t*q-r*u)*F),+N(+U)>9.999999974752427e-07):0){ea=+g[l+(A<<4)+12>>2];I=+g[l+(y<<4)+12>>2];fa=+g[l+(z<<4)+12>>2];H=-1.0/U*((r*E-t*s)*fa+((t*q-r*u)*ea+(u*s-q*E)*I));r=-1.0/U*((x*s-r*F)*fa+((r*v-q*x)*ea+(q*F-v*s)*I));q=-1.0/U*((t*F-x*E)*fa+((u*x-t*v)*ea+(v*E-u*F)*I));o=0;do{if(+g[l+(o<<4)+12>>2]+(H*+g[l+(o<<4)>>2]+r*+g[l+(o<<4)+4>>2]+q*+g[l+(o<<4)+8>>2])+-.009999999776482582>0.0)break b;o=o+1|0}while((o|0)<(f|0));do if((h|0)==(n|0)){w=n|0?n<<1:1;if((n|0)>=(w|0)){o=n;break}do if(!w)p=0;else{c[6435]=(c[6435]|0)+1;o=yc((w<<4|3)+16|0)|0;if(!o){p=0;break}c[(o+4+15&-16)+-4>>2]=o;p=o+4+15&-16}while(0);if((n|0)<=0){if(!j){o=n;n=w;j=p;break}}else{o=0;do{Y=p+(o<<4)|0;X=j+(o<<4)|0;c[Y>>2]=c[X>>2];c[Y+4>>2]=c[X+4>>2];c[Y+8>>2]=c[X+8>>2];c[Y+12>>2]=c[X+12>>2];o=o+1|0}while((o|0)!=(n|0))}c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);o=n;n=w;j=p}else o=h;while(0);g[j+(o<<4)>>2]=H;g[j+(o<<4)+4>>2]=r;g[j+(o<<4)+8>>2]=q;g[j+(o<<4)+12>>2]=0.0;h=h+1|0}while(0);z=z+1|0}while((z|0)!=(f|0))}}while((B|0)!=(f|0))}}while((C|0)!=(f|0))}else{j=0;h=0}}else{l=0;j=0;h=0}}else{m=0;l=0;j=0;h=0}Dc(da+128|0,j,h);if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}if(l|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}if(m|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}}else Dc(da+128|0,ca,J);G=c[da+128+44>>2]|0;if((G|0)>0){c[6435]=(c[6435]|0)+1;h=yc((G<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}h=0;do{Y=j+(h<<4)|0;c[Y>>2]=c[da+112>>2];c[Y+4>>2]=c[da+112+4>>2];c[Y+8>>2]=c[da+112+8>>2];c[Y+12>>2]=c[da+112+12>>2];h=h+1|0}while((h|0)!=(G|0))}else j=0;a[da+92+16>>0]=1;Y=da+92+12|0;c[Y>>2]=0;X=da+92+4|0;c[X>>2]=0;c[da+92+8>>2]=0;m=da+256|0;o=m+19|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(o|0));if((G|0)<0)lb();if((G|0)>0){If(da+92|0,G);h=c[Y>>2]|0;l=0;do{m=h+(l*36|0)|0;a[m+16>>0]=1;c[m+4>>2]=0;c[m+4+4>>2]=0;c[m+4+8>>2]=0;m=m+20|0;n=da+256+3|0;o=m+16|0;do{a[m>>0]=a[n>>0]|0;m=m+1|0;n=n+1|0}while((m|0)<(o|0));l=l+1|0}while((l|0)!=(G|0))}c[X>>2]=G;p=c[da+128+4>>2]|0;o=c[d+52>>2]|0;n=c[o+8>>2]|0;if((n|0)<(p|0)){if((c[o+12>>2]|0)<(p|0)){if(!p){h=0;l=n}else{c[6435]=(c[6435]|0)+1;h=yc((p<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}l=c[o+8>>2]|0}if((l|0)>0){m=0;do{W=h+(m<<4)|0;V=(c[o+16>>2]|0)+(m<<4)|0;c[W>>2]=c[V>>2];c[W+4>>2]=c[V+4>>2];c[W+8>>2]=c[V+8>>2];c[W+12>>2]=c[V+12>>2];m=m+1|0}while((m|0)!=(l|0))}l=c[o+16>>2]|0;if(l|0){if(a[o+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[o+16>>2]=0}a[o+20>>0]=1;c[o+16>>2]=h;c[o+12>>2]=p;l=o+16|0}else l=o+16|0;h=n;do{W=(c[l>>2]|0)+(h<<4)|0;c[W>>2]=c[da+56>>2];c[W+4>>2]=c[da+56+4>>2];c[W+8>>2]=c[da+56+8>>2];c[W+12>>2]=c[da+56+12>>2];h=h+1|0}while((h|0)!=(p|0))}c[o+8>>2]=p;if((p|0)>0){h=0;do{W=(c[(c[d+52>>2]|0)+16>>2]|0)+(h<<4)|0;V=(c[ba>>2]|0)+(h<<4)|0;c[W>>2]=c[V>>2];c[W+4>>2]=c[V+4>>2];c[W+8>>2]=c[V+8>>2];c[W+12>>2]=c[V+12>>2];h=h+1|0}while((h|0)!=(p|0))}if((G|0)>0){D=0;do{A=(c[aa>>2]|0)+((c[(c[$>>2]|0)+(D<<2)>>2]|0)*12|0)|0;C=A;l=0;do{B=C+4|0;z=c[C+((c[B>>2]|0)*12|0)+8>>2]|0;w=c[Y>>2]|0;y=w+(D*36|0)+4|0;h=c[y>>2]|0;f=w+(D*36|0)+8|0;if((h|0)==(c[f>>2]|0)?(L=h|0?h<<1:1,(h|0)<(L|0)):0){if(!L)p=0;else{c[6435]=(c[6435]|0)+1;h=yc((L<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}p=h;h=c[y>>2]|0}o=w+(D*36|0)+12|0;n=c[o>>2]|0;if((h|0)<=0)if(!n)m=w+(D*36|0)+16|0;else _=132;else{m=0;do{c[p+(m<<2)>>2]=c[n+(m<<2)>>2];m=m+1|0}while((m|0)!=(h|0));_=132}if((_|0)==132){_=0;h=w+(D*36|0)+16|0;if(a[h>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}c[o>>2]=0;m=h;h=c[y>>2]|0}a[m>>0]=1;c[o>>2]=p;c[f>>2]=L}c[(c[w+(D*36|0)+12>>2]|0)+(h<<2)>>2]=z;c[y>>2]=(c[y>>2]|0)+1;V=c[C+8>>2]|0;W=c[ba>>2]|0;s=+g[W+(V<<4)>>2]-+g[W+(z<<4)>>2];t=+g[W+(V<<4)+4>>2]-+g[W+(z<<4)+4>>2];q=+g[W+(V<<4)+8>>2]-+g[W+(z<<4)+8>>2];r=1.0/+O(+(s*s+t*t+q*q));if((l|0)<2){g[da+208+(l<<4)>>2]=s*r;g[da+208+(l<<4)+4>>2]=t*r;g[da+208+(l<<4)+8>>2]=q*r;g[da+208+(l<<4)+12>>2]=0.0;l=l+1|0}W=C+((c[B>>2]|0)*12|0)|0;C=W+((c[W>>2]|0)*12|0)|0}while((C|0)!=(A|0));h=j+(D<<4)|0;if((l|0)==2){H=+g[da+208+4>>2];I=+g[da+208+24>>2];U=+g[da+208+8>>2];ea=+g[da+208+20>>2];F=+g[da+208+16>>2];E=+g[da+208>>2];V=j+(D<<4)+4|0;W=j+(D<<4)+8|0;g[j+(D<<4)+12>>2]=0.0;fa=1.0/+O(+((H*I-U*ea)*(H*I-U*ea)+(U*F-I*E)*(U*F-I*E)+(ea*E-H*F)*(ea*E-H*F)));g[h>>2]=(H*I-U*ea)*fa;g[V>>2]=(U*F-I*E)*fa;g[W>>2]=(ea*E-H*F)*fa;o=c[Y>>2]|0;g[o+(D*36|0)+20>>2]=(H*I-U*ea)*fa;c[o+(D*36|0)+24>>2]=c[V>>2];c[o+(D*36|0)+28>>2]=c[W>>2];g[o+(D*36|0)+32>>2]=1000000015047466219876688.0e6}else{c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;o=c[Y>>2]|0}m=c[o+(D*36|0)+4>>2]|0;if((m|0)>0){n=c[(c[d+52>>2]|0)+16>>2]|0;r=+g[h>>2];s=+g[j+(D<<4)+4>>2];t=+g[j+(D<<4)+8>>2];h=c[o+(D*36|0)+12>>2]|0;q=1000000015047466219876688.0e6;l=0;do{W=c[h+(l<<2)>>2]|0;fa=+g[n+(W<<4)>>2]*r+ +g[n+(W<<4)+4>>2]*s+ +g[n+(W<<4)+8>>2]*t;q=q>fa?fa:q;l=l+1|0}while((l|0)!=(m|0))}else q=1000000015047466219876688.0e6;g[o+(D*36|0)+32>>2]=-q;D=D+1|0}while((D|0)!=(G|0))}if((c[X>>2]|0)>0){o=0;h=0;n=0;while(1){do if((o|0)==(h|0)){h=o|0?o<<1:1;if((o|0)<(h|0)){if((h|0)!=0?(c[6435]=(c[6435]|0)+1,M=yc((h<<2|3)+16|0)|0,(M|0)!=0):0){c[(M+4+15&-16)+-4>>2]=M;m=M+4+15&-16}else m=0;if((o|0)<=0){if(!n)break}else{l=0;do{c[m+(l<<2)>>2]=c[n+(l<<2)>>2];l=l+1|0}while((l|0)!=(o|0))}c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}else{h=o;m=n}}else m=n;while(0);c[m+(o<<2)>>2]=o;o=o+1|0;if((o|0)>=(c[X>>2]|0))break;else n=m}L=da+72+12|0;M=da+72+4|0;while(1){f=o+-1|0;l=c[m+(f<<2)>>2]|0;c[6435]=(c[6435]|0)+1;h=yc(23)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h>>2]=l;W=c[Y>>2]|0;r=+g[W+(l*36|0)+20>>2];s=+g[W+(l*36|0)+24>>2];q=+g[W+(l*36|0)+28>>2];c:do if((o|0)>1){n=1;p=1;l=h;h=f;z=f;while(1){y=p;f=l;d:while(1){l=c[Y>>2]|0;do{W=h;h=h+-1|0;if((W|0)<=0){h=l;K=y;J=f;o=z;break c}w=c[m+(h<<2)>>2]|0}while(!(r*+g[l+(w*36|0)+20>>2]+s*+g[l+(w*36|0)+24>>2]+q*+g[l+(w*36|0)+28>>2]>.9990000128746033));do if((y|0)==(n|0)){n=y|0?y<<1:1;if((y|0)<(n|0)){do if(!n)o=0;else{c[6435]=(c[6435]|0)+1;l=yc((n<<2|3)+16|0)|0;if(!l){o=0;break}c[(l+4+15&-16)+-4>>2]=l;o=l+4+15&-16}while(0);if((y|0)<=0){if(!f){f=o;break}}else{l=0;do{c[o+(l<<2)>>2]=c[f+(l<<2)>>2];l=l+1|0}while((l|0)!=(y|0))}c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);f=o}else n=y}while(0);c[f+(y<<2)>>2]=w;y=y+1|0;l=0;while(1){p=m+(l<<2)|0;if((c[p>>2]|0)==(w|0))break;l=l+1|0;if((l|0)>=(z|0))continue d}if((l|0)<(z|0))break}o=z+-1|0;W=m+(o<<2)|0;c[p>>2]=c[W>>2];c[W>>2]=w;if((z|0)>1){p=y;l=f;z=o}else{p=y;l=f;_=161;break}}}else{n=1;p=1;l=h;h=f;o=f;_=161}while(0);e:do if((_|0)==161){_=0;y=p;w=l;while(1){l=c[Y>>2]|0;do{W=h;h=h+-1|0;if((W|0)<=0){h=l;K=y;J=w;break e}f=c[m+(h<<2)>>2]|0}while(!(r*+g[l+(f*36|0)+20>>2]+s*+g[l+(f*36|0)+24>>2]+q*+g[l+(f*36|0)+28>>2]>.9990000128746033));do if((y|0)==(n|0)){n=y|0?y<<1:1;if((y|0)<(n|0)){do if(!n)l=0;else{c[6435]=(c[6435]|0)+1;l=yc((n<<2|3)+16|0)|0;if(!l){l=0;break}c[(l+4+15&-16)+-4>>2]=l;l=l+4+15&-16}while(0);if((y|0)<=0){if(!w)break}else{p=0;do{c[l+(p<<2)>>2]=c[w+(p<<2)>>2];p=p+1|0}while((p|0)!=(y|0))}c[6436]=(c[6436]|0)+1;hd(c[w+-4>>2]|0)}else{n=y;l=w}}else l=w;while(0);c[l+(y<<2)>>2]=f;y=y+1|0;w=l}}while(0);if((K|0)>1){a[da+72+16>>0]=1;c[L>>2]=0;c[M>>2]=0;c[da+72+8>>2]=0;q=0.0;r=0.0;s=0.0;n=0;B=0;do{l=c[J+(B<<2)>>2]|0;q=+g[h+(l*36|0)+20>>2]+q;r=+g[h+(l*36|0)+24>>2]+r;s=+g[h+(l*36|0)+28>>2]+s;A=h+(l*36|0)+4|0;if((c[A>>2]|0)>0){z=h+(l*36|0)+12|0;h=n;y=0;while(1){w=c[(c[z>>2]|0)+(y<<2)>>2]|0;W=(c[(c[d+52>>2]|0)+16>>2]|0)+(w<<4)|0;c[da+208>>2]=c[W>>2];c[da+208+4>>2]=c[W+4>>2];c[da+208+8>>2]=c[W+8>>2];c[da+208+12>>2]=c[W+12>>2];f:do if((h|0)>0){l=c[L>>2]|0;n=0;while(1){if((c[l+(n*24|0)+20>>2]|0)==(w|0))break f;n=n+1|0;if((n|0)>=(h|0)){_=248;break}}}else _=248;while(0);if((_|0)==248){_=0;c[da>>2]=c[da+208>>2];c[da+4>>2]=c[da+208+4>>2];c[da+8>>2]=c[da+208+8>>2];c[da+12>>2]=c[da+208+12>>2];do if((h|0)==(c[da+72+8>>2]|0)){f=h|0?h<<1:1;if((h|0)>=(f|0))break;if(!f)p=0;else{c[6435]=(c[6435]|0)+1;h=yc((f*24|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}p=h;h=c[M>>2]|0}n=c[L>>2]|0;if((h|0)<=0){if(n)_=257}else{l=0;do{_=p+(l*24|0)|0;W=n+(l*24|0)|0;c[_>>2]=c[W>>2];c[_+4>>2]=c[W+4>>2];c[_+8>>2]=c[W+8>>2];c[_+12>>2]=c[W+12>>2];c[_+16>>2]=c[W+16>>2];c[_+20>>2]=c[W+20>>2];l=l+1|0}while((l|0)!=(h|0));_=257}if((_|0)==257){_=0;if(a[da+72+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0);h=c[M>>2]|0}c[L>>2]=0}a[da+72+16>>0]=1;c[L>>2]=p;c[da+72+8>>2]=f}while(0);W=c[L>>2]|0;V=W+(h*24|0)|0;c[V>>2]=c[da>>2];c[V+4>>2]=c[da+4>>2];c[V+8>>2]=c[da+8>>2];c[V+12>>2]=c[da+12>>2];c[V+16>>2]=c[da+16>>2];c[W+(h*24|0)+20>>2]=w;h=(c[M>>2]|0)+1|0;c[M>>2]=h}y=y+1|0;if((y|0)>=(c[A>>2]|0)){n=h;break}}}B=B+1|0;h=c[Y>>2]|0}while((B|0)<(K|0));a[da+20+16>>0]=1;c[da+20+12>>2]=0;c[da+20+4>>2]=0;c[da+20+8>>2]=0;W=h+20+((c[J>>2]|0)*9<<2)|0;c[da+20+20>>2]=c[W>>2];c[da+20+20+4>>2]=c[W+4>>2];c[da+20+20+8>>2]=c[W+8>>2];c[da+20+20+12>>2]=c[W+12>>2];u=1.0/+O(+(q*q+r*r+s*s));x=q*u;v=r*u;u=s*u;if(+N(+u)>.7071067690849304){t=1.0/+O(+(u*u+v*v));r=0.0;s=v*t;t=-(u*t)}else{t=1.0/+O(+(x*x+v*v));r=-(v*t);s=0.0;t=x*t}if((n|0)<2)if((n|0)>0){h=n;n=0;p=0;y=0;while(1){z=c[L>>2]|0;do if((n|0)==(p|0)){w=p|0?p<<1:1;if((p|0)>=(w|0)){f=p;l=y;break}do if(!w)l=0;else{c[6435]=(c[6435]|0)+1;h=yc((w*24|3)+16|0)|0;if(!h){l=0;p=n;break}c[(h+4+15&-16)+-4>>2]=h;l=h+4+15&-16;p=n}while(0);if((p|0)<=0){if(y|0)_=209}else{h=0;do{_=l+(h*24|0)|0;W=y+(h*24|0)|0;c[_>>2]=c[W>>2];c[_+4>>2]=c[W+4>>2];c[_+8>>2]=c[W+8>>2];c[_+12>>2]=c[W+12>>2];c[_+16>>2]=c[W+16>>2];c[_+20>>2]=c[W+20>>2];h=h+1|0}while((h|0)!=(p|0));_=209}if((_|0)==209){_=0;c[6436]=(c[6436]|0)+1;hd(c[y+-4>>2]|0)}f=n;h=c[M>>2]|0;p=w}else{f=n;l=y}while(0);W=l+(f*24|0)|0;c[W>>2]=c[z>>2];c[W+4>>2]=c[z+4>>2];c[W+8>>2]=c[z+8>>2];c[W+12>>2]=c[z+12>>2];c[W+16>>2]=c[z+16>>2];c[W+20>>2]=c[z+20>>2];n=n+1|0;if((n|0)<(h|0))y=l;else{_=263;break}}}else{h=0;l=0;_=292}else{h=c[L>>2]|0;l=n;p=0;do{if(r*+g[h+(p*24|0)>>2]+t*+g[h+(p*24|0)+4>>2]+s*+g[h+(p*24|0)+8>>2]<r*+g[h>>2]+t*+g[h+4>>2]+s*+g[h+8>>2]){c[da+208>>2]=c[h>>2];c[da+208+4>>2]=c[h+4>>2];c[da+208+8>>2]=c[h+8>>2];c[da+208+12>>2]=c[h+12>>2];c[da+208+16>>2]=c[h+16>>2];c[da+208+20>>2]=c[h+20>>2];l=h+(p*24|0)|0;c[h>>2]=c[l>>2];c[h+4>>2]=c[l+4>>2];c[h+8>>2]=c[l+8>>2];c[h+12>>2]=c[l+12>>2];c[h+16>>2]=c[l+16>>2];c[h+20>>2]=c[l+20>>2];l=h+(p*24|0)|0;c[l>>2]=c[da+208>>2];c[l+4>>2]=c[da+208+4>>2];c[l+8>>2]=c[da+208+8>>2];c[l+12>>2]=c[da+208+12>>2];c[l+16>>2]=c[da+208+16>>2];c[l+20>>2]=c[da+208+20>>2];l=n}p=p+1|0}while((p|0)<(l|0));g[h+16>>2]=-1000000015047466219876688.0e6;if((l|0)>1){h=c[L>>2]|0;l=c[M>>2]|0;q=+g[h+4>>2];n=1;do{U=+g[h+(n*24|0)>>2]-+g[h>>2];ea=+g[h+(n*24|0)+4>>2]-q;fa=+g[h+(n*24|0)+8>>2]-+g[h+8>>2];g[h+(n*24|0)+16>>2]=((r*ea-t*U)*u+(x*(t*fa-s*ea)+v*(s*U-r*fa)))/+O(+(U*U+ea*ea+fa*fa));n=n+1|0}while((n|0)<(l|0))}c[da+208>>2]=c[h>>2];c[da+208+4>>2]=c[h+4>>2];c[da+208+8>>2]=c[h+8>>2];c[da+208+12>>2]=c[h+12>>2];xf(da+72|0,da+208|0,1,(c[M>>2]|0)+-1|0);l=c[L>>2]|0;c[6435]=(c[6435]|0)+1;h=yc(43)|0;if(!h)p=0;else{c[(h+4+15&-16)+-4>>2]=h;p=h+4+15&-16}n=c[L>>2]|0;c[p>>2]=c[l>>2];c[p+4>>2]=c[l+4>>2];c[p+8>>2]=c[l+8>>2];c[p+12>>2]=c[l+12>>2];c[p+16>>2]=c[l+16>>2];c[p+20>>2]=c[l+20>>2];c[6435]=(c[6435]|0)+1;h=yc(67)|0;if(!h)l=0;else{c[(h+4+15&-16)+-4>>2]=h;l=h+4+15&-16}c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[l+12>>2]=c[p+12>>2];c[l+16>>2]=c[p+16>>2];c[l+20>>2]=c[p+20>>2];if(p|0){c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0)}h=l+24|0;c[h>>2]=c[n+24>>2];c[h+4>>2]=c[n+24+4>>2];c[h+8>>2]=c[n+24+8>>2];c[h+12>>2]=c[n+24+12>>2];c[h+16>>2]=c[n+24+16>>2];c[h+20>>2]=c[n+24+20>>2];h=c[M>>2]|0;if((h|0)==2){h=2;n=2}else{f=2;n=2;p=2;A=2;do{g:do if((f|0)>1){W=c[L>>2]|0;z=W+(A*24|0)|0;q=+g[z>>2];r=+g[W+(A*24|0)+4>>2];s=+g[W+(A*24|0)+8>>2];while(1){W=f+-2|0;w=f+-1|0;U=+g[l+(W*24|0)>>2];ea=U-+g[l+(w*24|0)>>2];H=+g[l+(W*24|0)+4>>2];F=H-+g[l+(w*24|0)+4>>2];fa=+g[l+(W*24|0)+8>>2];I=fa-+g[l+(w*24|0)+8>>2];if((ea*(H-r)-F*(U-q))*u+(x*(F*(fa-s)-I*(H-r))+v*(I*(U-q)-ea*(fa-s)))>0.0)break;if((w|0)>1){f=w;n=w}else{f=w;n=w;break g}}do if((f|0)==(p|0)){y=p<<1;if((p|0)>=(y|0)){f=p;w=p;break}if(p){c[6435]=(c[6435]|0)+1;h=yc((p*48|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}if((n|0)>0){p=h;f=n;_=230}else p=h}else{p=0;h=0;f=0;_=230}if((_|0)==230){_=0;w=0;do{W=h+(w*24|0)|0;V=l+(w*24|0)|0;c[W>>2]=c[V>>2];c[W+4>>2]=c[V+4>>2];c[W+8>>2]=c[V+8>>2];c[W+12>>2]=c[V+12>>2];c[W+16>>2]=c[V+16>>2];c[W+20>>2]=c[V+20>>2];w=w+1|0}while((w|0)!=(f|0))}c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);h=c[M>>2]|0;f=n;w=y;l=p}else w=p;while(0);f=l+(f*24|0)|0;c[f>>2]=c[z>>2];c[f+4>>2]=c[z+4>>2];c[f+8>>2]=c[z+8>>2];c[f+12>>2]=c[z+12>>2];c[f+16>>2]=c[z+16>>2];c[f+20>>2]=c[z+20>>2];n=n+1|0;f=n;p=w}while(0);A=A+1|0}while((A|0)!=(h|0))}_=263}h:do if((_|0)==263){_=0;if((n|0)>0){D=0;A=0;f=0;h=0;G=0;while(1){B=l+(G*24|0)+20|0;do if((D|0)==(A|0)){w=A|0?A<<1:1;if((A|0)>=(w|0)){C=f;break}do if(!w)p=0;else{c[6435]=(c[6435]|0)+1;h=yc((w<<2|3)+16|0)|0;if(!h){p=0;break}c[(h+4+15&-16)+-4>>2]=h;p=h+4+15&-16}while(0);if((A|0)<=0){if(f|0)_=284}else{h=0;do{c[p+(h<<2)>>2]=c[f+(h<<2)>>2];h=h+1|0}while((h|0)!=(A|0));_=284}if((_|0)==284){_=0;c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);c[da+20+12>>2]=0}a[da+20+16>>0]=1;c[da+20+12>>2]=p;c[da+20+8>>2]=w;C=p;h=p;A=w}else C=f;while(0);c[C+(D<<2)>>2]=c[B>>2];D=(c[da+20+4>>2]|0)+1|0;c[da+20+4>>2]=D;y=c[M>>2]|0;i:do if((y|0)>0){z=c[L>>2]|0;p=c[B>>2]|0;w=0;while(1){f=z+(w*24|0)+20|0;w=w+1|0;if((c[f>>2]|0)==(p|0))break;if((w|0)>=(y|0))break i}c[f>>2]=-1}while(0);G=G+1|0;if((G|0)>=(n|0)){D=y;break}else f=C}}else{D=h;h=0}if((D|0)<=0){_=292;break}w=c[L>>2]|0;y=c[X>>2]|0;z=c[Y>>2]|0;if((y|0)>0)B=0;else{_=292;break}while(1){A=c[w+(B*24|0)+20>>2]|0;if((A|0)!=-1){C=0;do{n=0;while(1){if((c[J+(n<<2)>>2]|0)==(C|0))break;n=n+1|0;if((n|0)>=(K|0)){_=270;break}}do if((_|0)==270){_=0;n=c[z+(C*36|0)+4>>2]|0;if((n|0)<=0)break;p=c[z+(C*36|0)+12>>2]|0;f=0;do{if((c[p+(f<<2)>>2]|0)==(A|0)){n=1;break h}f=f+1|0}while((f|0)<(n|0))}while(0);C=C+1|0}while((C|0)<(y|0))}B=B+1|0;if((B|0)>=(D|0)){_=292;break}}}while(0);if((_|0)==292){_=0;th((c[d+52>>2]|0)+24|0,da+20|0);n=0}if(l|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);c[da+20+12>>2]=0}h=c[L>>2]|0;if(h|0){if(a[da+72+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[L>>2]=0}if(n&(K|0)>0){y=0;_=302}}else if((K|0)>0){y=0;_=302}if((_|0)==302)while(1){_=0;f=c[J+(y<<2)>>2]|0;w=c[Y>>2]|0;a[da+208+16>>0]=1;c[da+208+12>>2]=0;c[da+208+4>>2]=0;c[da+208+8>>2]=0;p=c[w+(f*36|0)+4>>2]|0;if((p|0)>0){c[6435]=(c[6435]|0)+1;h=yc((p<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}a[da+208+16>>0]=1;c[da+208+12>>2]=h;c[da+208+8>>2]=p;Tn(h|0,0,p<<2|0)|0;l=c[w+(f*36|0)+12>>2]|0;c[da+208+4>>2]=p;n=0;do{c[h+(n<<2)>>2]=c[l+(n<<2)>>2];n=n+1|0}while((n|0)!=(p|0))}else{c[da+208+4>>2]=p;h=0}c[da+208+20>>2]=c[w+(f*36|0)+20>>2];c[da+208+20+4>>2]=c[w+(f*36|0)+20+4>>2];c[da+208+20+8>>2]=c[w+(f*36|0)+20+8>>2];c[da+208+20+12>>2]=c[w+(f*36|0)+20+12>>2];th((c[d+52>>2]|0)+24|0,da+208|0);if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);c[da+208+12>>2]=0}y=y+1|0;if((y|0)>=(K|0))break;else _=302}if(J|0){c[6436]=(c[6436]|0)+1;hd(c[J+-4>>2]|0)}if(!o)break}}else m=0;W=c[d+52>>2]|0;c[W+64>>2]=0;c[W+64+4>>2]=0;c[W+64+8>>2]=0;c[W+64+12>>2]=0;h=c[W+28>>2]|0;if((h|0)>0){z=0;l=0;n=0;D=0;B=0;w=0;o=0;C=0;y=0;p=0;A=0;G=0;V=0;while(1){f=c[W+36>>2]|0;T=c[f+(V*36|0)+4>>2]|0;if((T|0)>0){R=V&65535;S=V|-65536;P=w;L=y;K=G;h=0;while(1){Q=h+1|0;J=c[f+(V*36|0)+12>>2]|0;w=c[J+(h<<2)>>2]&65535;J=c[J+(((Q|0)==(T|0)?0:Q)<<2)>>2]&65535;M=J<<16>>16>w<<16>>16?w:J;d=J<<16>>16>w<<16>>16?J:w;f=J<<16>>16>w<<16>>16?w:J;w=J<<16>>16>w<<16>>16?J:w;J=L+-1|0;j:do if((((f&65535)<<16)+(w<<16>>16)&J)>>>0<D>>>0?(Z=c[n+((((f&65535)<<16)+(w<<16>>16)&J)<<2)>>2]|0,(Z|0)!=-1):0){h=Z;while(1){if(w<<16>>16==(b[l+(h<<2)>>1]|0)?f<<16>>16==(b[l+(h<<2)+2>>1]|0):0)break;h=c[o+(h<<2)>>2]|0;if((h|0)==-1){G=0;break j}}G=p+(h<<2)|0}else G=0;while(0);h=c[W+16>>2]|0;u=+g[h+(f<<16>>16<<4)>>2]-+g[h+(w<<16>>16<<4)>>2];v=+g[h+(f<<16>>16<<4)+4>>2]-+g[h+(w<<16>>16<<4)+4>>2];s=+g[h+(f<<16>>16<<4)+8>>2]-+g[h+(w<<16>>16<<4)+8>>2];t=1.0/+O(+(u*u+v*v+s*s));h=c[W+48>>2]|0;k:do if((h|0)>0){f=c[W+56>>2]|0;w=0;while(1){q=+g[f+(w<<4)>>2];r=+g[f+(w<<4)+8>>2];do if(!(+N(+(q-u*t))>1.0e-06)){if(+N(+(+g[f+(w<<4)+4>>2]-v*t))>1.0e-06)break;if(!(+N(+(r-s*t))>1.0e-06))break k}while(0);do if(!(+N(+(u*t+q))>1.0e-06)){if(+N(+(v*t+ +g[f+(w<<4)+4>>2]))>1.0e-06)break;if(!(+N(+(s*t+r))>1.0e-06))break k}while(0);w=w+1|0;if((w|0)>=(h|0)){_=338;break}}}else _=338;while(0);if((_|0)==338){_=0;do if((h|0)==(c[W+52>>2]|0)){y=h|0?h<<1:1;if((h|0)>=(y|0))break;if(!y)w=0;else{c[6435]=(c[6435]|0)+1;h=yc((y<<4|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}w=h;h=c[W+48>>2]|0}if((h|0)>0){f=0;do{ga=w+(f<<4)|0;ha=(c[W+56>>2]|0)+(f<<4)|0;c[ga>>2]=c[ha>>2];c[ga+4>>2]=c[ha+4>>2];c[ga+8>>2]=c[ha+8>>2];c[ga+12>>2]=c[ha+12>>2];f=f+1|0}while((f|0)!=(h|0))}h=c[W+56>>2]|0;if(h|0){if(a[W+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[W+56>>2]=0}a[W+60>>0]=1;c[W+56>>2]=w;c[W+52>>2]=y;h=c[W+48>>2]|0}while(0);ha=c[W+56>>2]|0;g[ha+(h<<4)>>2]=u*t;g[ha+(h<<4)+4>>2]=v*t;g[ha+(h<<4)+8>>2]=s*t;g[ha+(h<<4)+12>>2]=0.0;c[W+48>>2]=(c[W+48>>2]|0)+1}l:do if(!G){h=((M&65535)<<16)+(d<<16>>16)&J;m:do if(h>>>0<D>>>0){f=c[n+(h<<2)>>2]|0;if((f|0)==-1)break;while(1){if(d<<16>>16==(b[l+(f<<2)>>1]|0)?M<<16>>16==(b[l+(f<<2)+2>>1]|0):0)break;f=c[o+(f<<2)>>2]|0;if((f|0)==-1)break m}w=p+(f<<2)|0;b[w>>1]=S;b[w+2>>1]=S>>>16;w=P;y=L;G=K;break l}while(0);do if((C|0)==(L|0)){y=C|0?C<<1:1;if((C|0)>=(y|0)){y=C;break}do if(!y)w=0;else{c[6435]=(c[6435]|0)+1;f=yc((y<<2|3)+16|0)|0;if(!f){w=0;break}c[(f+4+15&-16)+-4>>2]=f;w=f+4+15&-16}while(0);if((C|0)<=0){if(!p){p=w;break}}else{f=0;do{ha=w+(f<<2)|0;ga=p+(f<<2)|0;ga=e[ga>>1]|e[ga+2>>1]<<16;b[ha>>1]=ga;b[ha+2>>1]=ga>>>16;f=f+1|0}while((f|0)!=(C|0))}c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0);p=w}else y=L;while(0);J=p+(C<<2)|0;b[J>>1]=S;b[J+2>>1]=S>>>16;J=C+1|0;do if((K|0)==(z|0)){z=K|0?K<<1:1;if((K|0)>=(z|0)){z=K;break}do if(!z)w=0;else{c[6435]=(c[6435]|0)+1;f=yc((z<<2|3)+16|0)|0;if(!f){w=0;break}c[(f+4+15&-16)+-4>>2]=f;w=f+4+15&-16}while(0);if((K|0)<=0){if(!l){l=w;break}}else{f=0;do{ha=w+(f<<2)|0;ga=l+(f<<2)|0;ga=e[ga>>1]|e[ga+2>>1]<<16;b[ha>>1]=ga;b[ha+2>>1]=ga>>>16;f=f+1|0}while((f|0)!=(K|0))}c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);l=w}while(0);G=l+(K<<2)|0;b[G>>1]=(M&65535)<<16|d&65535;b[G+2>>1]=((M&65535)<<16|d&65535)>>>16;G=K+1|0;if((L|0)<(y|0)){do if((y|0)>(D|0)){if((y|0)>=(D|0)){do if((A|0)<(y|0)){do if(!y)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((y<<2|3)+16|0)|0;if(!h){h=0;break}c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}while(0);if((D|0)<=0){if(!n){n=h;h=y;break}}else{f=0;do{c[h+(f<<2)>>2]=c[n+(f<<2)>>2];f=f+1|0}while((f|0)!=(D|0))}c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0);n=h;h=y}else h=A;while(0);Tn(n+(D<<2)|0,0,y-D<<2|0)|0;A=h}if((y|0)>(B|0)){do if((P|0)<(y|0)){do if(!y)f=0;else{c[6435]=(c[6435]|0)+1;h=yc((y<<2|3)+16|0)|0;if(!h){f=0;break}c[(h+4+15&-16)+-4>>2]=h;f=h+4+15&-16}while(0);if((B|0)<=0){if(!o){h=y;o=f;break}}else{h=0;do{c[f+(h<<2)>>2]=c[o+(h<<2)>>2];h=h+1|0}while((h|0)!=(B|0))}c[6436]=(c[6436]|0)+1;hd(c[o+-4>>2]|0);h=y;o=f}else h=P;while(0);Tn(o+(B<<2)|0,0,y-B<<2|0)|0;w=h}else w=P;if((y|0)>0){ha=y<<2;Tn(n|0,-1,ha|0)|0;Tn(o|0,-1,ha|0)|0}if((D|0)<=0){f=y;B=y;h=A;break}h=y+-1|0;f=0;do{ha=n+(((e[l+(f<<2)+2>>1]<<16)+(b[l+(f<<2)>>1]|0)&h)<<2)|0;c[o+(f<<2)>>2]=c[ha>>2];c[ha>>2]=f;f=f+1|0}while((f|0)!=(D|0));f=y;B=y;h=A}else{f=D;w=P;h=A}while(0);A=h;h=((M&65535)<<16)+(d<<16>>16)&y+-1}else{f=D;w=P}D=n+(h<<2)|0;c[o+(C<<2)>>2]=c[D>>2];c[D>>2]=C;D=f;C=J}else{b[G+2>>1]=R;w=P;y=L;G=K}while(0);if((Q|0)>=(T|0))break;f=c[W+36>>2]|0;P=w;L=y;K=G;h=Q}h=c[W+28>>2]|0;f=G}else f=G;V=V+1|0;if((V|0)>=(h|0))break;else G=f}if((h|0)>0){A=c[W+36>>2]|0;B=c[W+16>>2]|0;q=0.0;C=0;do{w=c[A+(C*36|0)+4>>2]|0;y=c[A+(C*36|0)+12>>2]|0;z=c[y>>2]|0;if((w+-2|0)>=1){r=+g[W+64>>2];s=+g[W+68>>2];t=+g[W+72>>2];f=1;do{ga=c[y+(f<<2)>>2]|0;f=f+1|0;ha=c[y+(((f|0)%(w|0)|0)<<2)>>2]|0;u=+g[B+(z<<4)>>2];v=+g[B+(ga<<4)>>2];E=+g[B+(z<<4)+4>>2];F=+g[B+(ga<<4)+4>>2];I=+g[B+(z<<4)+8>>2];U=+g[B+(ga<<4)+8>>2];x=+g[B+(ha<<4)>>2];H=+g[B+(ha<<4)+4>>2];ea=+g[B+(ha<<4)+8>>2];fa=+O(+(((u-v)*(E-H)-(E-F)*(u-x))*((u-v)*(E-H)-(E-F)*(u-x))+(((E-F)*(I-ea)-(I-U)*(E-H))*((E-F)*(I-ea)-(I-U)*(E-H))+((I-U)*(u-x)-(u-v)*(I-ea))*((I-U)*(u-x)-(u-v)*(I-ea)))))*.5;r=r+(u+v+x)*.3333333432674408*fa;g[W+64>>2]=r;s=(E+F+H)*.3333333432674408*fa+s;g[W+68>>2]=s;t=fa*(I+U+ea)*.3333333432674408+t;g[W+72>>2]=t;q=q+fa}while((f|0)!=(w+-1|0))}C=C+1|0}while((C|0)!=(h|0));f=W+64|0;w=1;z=l;y=n}else _=317}else{l=0;n=0;o=0;p=0;_=317}if((_|0)==317){f=W+64|0;w=0;q=0.0;z=l;y=n}t=1.0/q;u=t*+g[f>>2];g[f>>2]=u;s=t*+g[W+68>>2];g[W+68>>2]=s;t=t*+g[W+72>>2];g[W+72>>2]=t;g[W+96>>2]=3402823466385288598117041.0e14;if(w){l=c[W+36>>2]|0;r=3402823466385288598117041.0e14;n=0;while(1){q=+N(+(+g[l+(n*36|0)+32>>2]+(+g[l+(n*36|0)+20>>2]*u+ +g[l+(n*36|0)+24>>2]*s+ +g[l+(n*36|0)+28>>2]*t)));if(q<r)g[W+96>>2]=q;else q=r;n=n+1|0;if((n|0)>=(h|0))break;else r=q}}else q=3402823466385288598117041.0e14;h=c[W+8>>2]|0;if((h|0)>0){l=c[W+16>>2]|0;x=-3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;u=-3402823466385288598117041.0e14;t=3402823466385288598117041.0e14;s=3402823466385288598117041.0e14;r=3402823466385288598117041.0e14;n=0;do{fa=+g[l+(n<<4)>>2];t=fa<t?fa:t;x=fa>x?fa:x;fa=+g[l+(n<<4)+4>>2];s=fa<s?fa:s;v=fa>v?fa:v;fa=+g[l+(n<<4)+8>>2];r=fa<r?fa:r;u=fa>u?fa:u;n=n+1|0}while((n|0)!=(h|0))}else{x=-3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;u=-3402823466385288598117041.0e14;t=3402823466385288598117041.0e14;s=3402823466385288598117041.0e14;r=3402823466385288598117041.0e14}g[W+100>>2]=x+t;g[W+104>>2]=s+v;g[W+108>>2]=r+u;g[W+112>>2]=0.0;fa=x-t;ea=v-s;r=u-r;g[W+116>>2]=fa;g[W+120>>2]=ea;g[W+124>>2]=r;g[W+128>>2]=0.0;s=q/1.7320507764816284;f=fa<ea?(ea<r?2:1):fa<r?2:0;q=(+g[W+116+(f<<2)>>2]*.5-s)*.0009765625;g[W+88>>2]=s;g[W+84>>2]=s;g[W+80>>2]=s;r=+g[W+116+(f<<2)>>2]*.5;g[W+80+(f<<2)>>2]=r;h=0;while(1){if(ih(W)|0){_=425;break}r=r-q;g[W+80+(f<<2)>>2]=r;h=h+1|0;if((h|0)>=1024){_=424;break}}n:do if((_|0)==424){g[W+88>>2]=s;g[W+84>>2]=s;g[W+80>>2]=s}else if((_|0)==425){q=(+g[W+96>>2]-s)*.0009765625;l=c[W+80+((1<<(1<<f&3)&3)<<2)>>2]|0;n=0;while(1){h=c[W+80+((1<<f&3)<<2)>>2]|0;g[W+80+((1<<f&3)<<2)>>2]=q+(c[k>>2]=h,+g[k>>2]);r=q+ +g[W+80+((1<<(1<<f&3)&3)<<2)>>2];g[W+80+((1<<(1<<f&3)&3)<<2)>>2]=r;n=n+1|0;if(!(ih(W)|0))break;if((n|0)>=1024)break n;else l=(g[k>>2]=r,c[k>>2]|0)}c[W+80+((1<<f&3)<<2)>>2]=h;c[W+80+((1<<(1<<f&3)&3)<<2)>>2]=l}while(0);if(z|0){c[6436]=(c[6436]|0)+1;hd(c[z+-4>>2]|0)}if(p|0){c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0)}if(o|0){c[6436]=(c[6436]|0)+1;hd(c[o+-4>>2]|0)}if(y|0){c[6436]=(c[6436]|0)+1;hd(c[y+-4>>2]|0)}if(m|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}p=c[X>>2]|0;f=c[Y>>2]|0;if((p|0)<=0){if(f|0)_=446}else{o=0;do{l=f+(o*36|0)+4|0;m=f+(o*36|0)+12|0;n=c[m>>2]|0;h=f+(o*36|0)+16|0;if(n|0){if(a[h>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[n+-4>>2]|0)}c[m>>2]=0}a[h>>0]=1;c[m>>2]=0;c[l>>2]=0;c[f+(o*36|0)+8>>2]=0;o=o+1|0}while((o|0)!=(p|0));_=446}if((_|0)==446){if(a[da+92+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[Y>>2]=0}if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}h=c[$>>2]|0;if(h|0){if(a[da+128+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[$>>2]=0}a[da+128+56>>0]=1;c[$>>2]=0;c[da+128+44>>2]=0;c[da+128+48>>2]=0;h=c[aa>>2]|0;if(h|0){if(a[da+128+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[aa>>2]=0}a[da+128+36>>0]=1;c[aa>>2]=0;c[da+128+24>>2]=0;c[da+128+28>>2]=0;h=c[ba>>2]|0;if(h|0){if(a[da+128+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[ba>>2]=0}if(!ca){i=da;return 1}c[6436]=(c[6436]|0)+1;hd(c[ca+-4>>2]|0);i=da;return 1}function oc(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0,G=0,H=0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,P=0.0,S=0,T=0,U=0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0,na=0.0,oa=0.0,pa=0.0,qa=0,ra=0.0,sa=0,ta=0,ua=0,va=0;va=i;i=i+688|0;k=c[b+20>>2]|0;if(!k){k=c[b+4>>2]|0;k=Ob[c[(c[k>>2]|0)+12>>2]&63](k,c[d+8>>2]|0,c[e+8>>2]|0)|0;c[b+20>>2]=k;a[b+16>>0]=1}c[h+4>>2]=k;sa=c[d+4>>2]|0;ta=c[e+4>>2]|0;j=c[sa+4>>2]|0;l=c[ta+4>>2]|0;if((j|0)==10&(l|0)==10){L=+g[k+752>>2];qa=c[sa+52>>2]|0;r=+g[sa+28+(qa<<2)>>2];K=+g[sa+28+(((qa+2|0)%3|0)<<2)>>2];ua=c[ta+52>>2]|0;s=+g[ta+28+(ua<<2)>>2];I=+g[ta+28+(((ua+2|0)%3|0)<<2)>>2];b=c[d+12>>2]|0;j=c[e+12>>2]|0;B=+g[b+(qa<<2)>>2];E=+g[b+16+(qa<<2)>>2];C=+g[b+32+(qa<<2)>>2];p=+g[j+(ua<<2)>>2];q=+g[j+16+(ua<<2)>>2];w=+g[j+32+(ua<<2)>>2];x=+g[j+48>>2]-+g[b+48>>2];y=+g[j+52>>2]-+g[b+52>>2];A=+g[j+56>>2]-+g[b+56>>2];n=1.0-(B*p+E*q+C*w)*(B*p+E*q+C*w);if(!(n==0.0)){n=(B*x+E*y+C*A-(B*p+E*q+C*w)*(p*x+q*y+w*A))/n;if(!(n<-r)){if(n>r)n=r}else n=-r}else n=0.0;o=(B*p+E*q+C*w)*n-(p*x+q*y+w*A);if(o<-s){n=(B*p+E*q+C*w)*-s+(B*x+E*y+C*A);if(!(n<-r))if(n>r){n=r;o=-s}else o=-s;else{n=-r;o=-s}}else if(o>s){n=s*(B*p+E*q+C*w)+(B*x+E*y+C*A);if(!(n<-r))if(n>r){n=r;o=s}else o=s;else{n=-r;o=s}}u=p*o;t=q*o;s=w*o;o=u+(x-B*n);q=t+(y-E*n);n=s+(A-C*n);r=+O(+(n*n+(o*o+q*q)));if(!(r-K-I>L)){do if(n*n+(o*o+q*q)<=1.4210854715202004e-14)if(+N(+C)>.7071067690849304){n=1.0/+O(+(E*E+C*C));g[va+280>>2]=0.0;g[va+280+4>>2]=-(C*n);g[va+280+8>>2]=E*n;p=0.0;o=-(C*n);n=E*n;break}else{o=1.0/+O(+(B*B+E*E));g[va+280>>2]=-(E*o);g[va+280+4>>2]=B*o;g[va+280+8>>2]=0.0;p=-(E*o);o=B*o;n=0.0;break}else{g[va+280>>2]=o*-(1.0/r);g[va+280+4>>2]=q*-(1.0/r);g[va+280+8>>2]=n*-(1.0/r);g[va+280+12>>2]=0.0;p=o*-(1.0/r);o=q*-(1.0/r);n=n*-(1.0/r)}while(0);pa=I*o+(t+ +g[j+52>>2]);ra=I*n+(s+ +g[j+56>>2]);g[va+264>>2]=I*p+(u+ +g[j+48>>2]);g[va+264+4>>2]=pa;g[va+264+8>>2]=ra;g[va+264+12>>2]=0.0}if(r-K-I<L){hc[c[(c[h>>2]|0)+16>>2]&15](h,va+280|0,va+264|0,r-K-I);k=c[h+4>>2]|0}if(!(c[k+748>>2]|0)){i=va;return}l=c[k+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((l|0)==(m|0)){ef(k,l+4|0,j+4|0);i=va;return}else{ef(k,j+4|0,m+4|0);i=va;return}}g[va+128+128>>2]=999999984306749440.0;D=c[b+8>>2]|0;v=c[b+12>>2]|0;c[va+48>>2]=9208;c[va+48+4>>2]=0;c[va+48+8>>2]=1065353216;c[va+48+12>>2]=0;g[va+48+16>>2]=0.0;c[va+48+20>>2]=v;c[va+48+24>>2]=D;c[va+48+28>>2]=sa;c[va+48+32>>2]=ta;c[va+48+36>>2]=j;c[va+48+40>>2]=l;g[va+48+44>>2]=+Sb[c[(c[sa>>2]|0)+48>>2]&15](sa);g[va+48+48>>2]=+Sb[c[(c[ta>>2]|0)+48>>2]&15](ta);a[va+48+52>>0]=0;c[va+48+60>>2]=-1;c[va+48+72>>2]=1;c[va+48+76>>2]=1;c[va+48+28>>2]=sa;c[va+48+32>>2]=ta;pa=+Sb[c[(c[sa>>2]|0)+48>>2]&15](sa);ra=+Sb[c[(c[ta>>2]|0)+48>>2]&15](ta);ra=pa+ra+ +g[(c[b+20>>2]|0)+752>>2];g[va+128+128>>2]=ra*ra;D=c[d+12>>2]|0;c[va+128>>2]=c[D>>2];c[va+128+4>>2]=c[D+4>>2];c[va+128+8>>2]=c[D+8>>2];c[va+128+12>>2]=c[D+12>>2];l=va+128+16|0;c[l>>2]=c[D+16>>2];c[l+4>>2]=c[D+16+4>>2];c[l+8>>2]=c[D+16+8>>2];c[l+12>>2]=c[D+16+12>>2];v=va+128+32|0;c[v>>2]=c[D+32>>2];c[v+4>>2]=c[D+32+4>>2];c[v+8>>2]=c[D+32+8>>2];c[v+12>>2]=c[D+32+12>>2];z=va+128+48|0;c[z>>2]=c[D+48>>2];c[z+4>>2]=c[D+48+4>>2];c[z+8>>2]=c[D+48+8>>2];c[z+12>>2]=c[D+48+12>>2];D=va+128+64|0;j=c[e+12>>2]|0;c[D>>2]=c[j>>2];c[D+4>>2]=c[j+4>>2];c[D+8>>2]=c[j+8>>2];c[D+12>>2]=c[j+12>>2];F=va+128+80|0;c[F>>2]=c[j+16>>2];c[F+4>>2]=c[j+16+4>>2];c[F+8>>2]=c[j+16+8>>2];c[F+12>>2]=c[j+16+12>>2];G=va+128+96|0;c[G>>2]=c[j+32>>2];c[G+4>>2]=c[j+32+4>>2];c[G+8>>2]=c[j+32+8>>2];c[G+12>>2]=c[j+32+12>>2];H=va+128+112|0;c[H>>2]=c[j+48>>2];c[H+4>>2]=c[j+48+4>>2];c[H+8>>2]=c[j+48+8>>2];c[H+12>>2]=c[j+48+12>>2];j=c[sa+4>>2]|0;if((j|0)<7?(m=c[ta+4>>2]|0,(m|0)<7):0){c[va+40>>2]=6080;if(!j){j=m;o=0.0}else{o=+Sb[c[(c[sa>>2]|0)+48>>2]&15](sa);j=c[ta+4>>2]|0}if(!j)n=0.0;else n=+Sb[c[(c[ta>>2]|0)+48>>2]&15](ta);c[va>>2]=6108;c[va+4>>2]=h;g[va+24>>2]=o;g[va+28>>2]=n;a[va+36>>0]=0;U=c[sa+52>>2]|0;a:do if(U|0){ma=c[ta+52>>2]|0;do if(!ma){if((c[ta+4>>2]|0)!=1)break a;z=va+624+16|0;a[z>>0]=1;D=va+624+12|0;c[D>>2]=0;v=va+624+4|0;c[v>>2]=0;m=va+624+8|0;c[m>>2]=0;j=c[e+12>>2]|0;pa=+g[ta+56>>2];ra=+g[ta+56+4>>2];p=+g[ta+56+8>>2];n=pa*+g[j>>2]+ra*+g[j+4>>2]+p*+g[j+8>>2]+ +g[j+48>>2];o=pa*+g[j+16>>2]+ra*+g[j+20>>2]+p*+g[j+24>>2]+ +g[j+52>>2];p=pa*+g[j+32>>2]+ra*+g[j+36>>2]+p*+g[j+40>>2]+ +g[j+56>>2];c[6435]=(c[6435]|0)+1;j=yc(35)|0;if(!j)k=0;else{c[(j+4+15&-16)+-4>>2]=j;k=j+4+15&-16}j=c[D>>2]|0;if(!j)j=0;else{c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);j=c[v>>2]|0;c[D>>2]=0}a[z>>0]=1;c[D>>2]=k;c[m>>2]=1;g[k+(j<<4)>>2]=n;g[k+(j<<4)+4>>2]=o;g[k+(j<<4)+8>>2]=p;g[k+(j<<4)+12>>2]=0.0;j=(c[v>>2]|0)+1|0;c[v>>2]=j;ua=c[e+12>>2]|0;pa=+g[ta+56+16>>2];ra=+g[ta+56+20>>2];p=+g[ta+56+24>>2];n=pa*+g[ua>>2]+ra*+g[ua+4>>2]+p*+g[ua+8>>2]+ +g[ua+48>>2];o=pa*+g[ua+16>>2]+ra*+g[ua+20>>2]+p*+g[ua+24>>2]+ +g[ua+52>>2];p=pa*+g[ua+32>>2]+ra*+g[ua+36>>2]+p*+g[ua+40>>2]+ +g[ua+56>>2];if((j|0)==(c[m>>2]|0)?(J=j|0?j<<1:1,(j|0)<(J|0)):0){if(!J)l=0;else{c[6435]=(c[6435]|0)+1;j=yc((J<<4|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=j;j=c[v>>2]|0}if((j|0)>0){k=0;do{ua=l+(k<<4)|0;qa=(c[D>>2]|0)+(k<<4)|0;c[ua>>2]=c[qa>>2];c[ua+4>>2]=c[qa+4>>2];c[ua+8>>2]=c[qa+8>>2];c[ua+12>>2]=c[qa+12>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[D>>2]|0;if(j|0){if(a[z>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[D>>2]=0}a[z>>0]=1;c[D>>2]=l;c[m>>2]=J;j=c[v>>2]|0}ua=c[D>>2]|0;g[ua+(j<<4)>>2]=n;g[ua+(j<<4)+4>>2]=o;g[ua+(j<<4)+8>>2]=p;g[ua+(j<<4)+12>>2]=0.0;j=(c[v>>2]|0)+1|0;c[v>>2]=j;ua=c[e+12>>2]|0;pa=+g[ta+56+32>>2];ra=+g[ta+56+36>>2];p=+g[ta+56+40>>2];n=pa*+g[ua>>2]+ra*+g[ua+4>>2]+p*+g[ua+8>>2]+ +g[ua+48>>2];o=pa*+g[ua+16>>2]+ra*+g[ua+20>>2]+p*+g[ua+24>>2]+ +g[ua+52>>2];p=pa*+g[ua+32>>2]+ra*+g[ua+36>>2]+p*+g[ua+40>>2]+ +g[ua+56>>2];if((j|0)==(c[m>>2]|0)?(S=j|0?j<<1:1,(j|0)<(S|0)):0){if(!S)l=0;else{c[6435]=(c[6435]|0)+1;j=yc((S<<4|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=j;j=c[v>>2]|0}if((j|0)>0){k=0;do{ua=l+(k<<4)|0;e=(c[D>>2]|0)+(k<<4)|0;c[ua>>2]=c[e>>2];c[ua+4>>2]=c[e+4>>2];c[ua+8>>2]=c[e+8>>2];c[ua+12>>2]=c[e+12>>2];k=k+1|0}while((k|0)!=(j|0))}j=c[D>>2]|0;if(j|0){if(a[z>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[D>>2]=0}a[z>>0]=1;c[D>>2]=l;c[m>>2]=S;j=c[v>>2]|0}ua=c[D>>2]|0;g[ua+(j<<4)>>2]=n;g[ua+(j<<4)+4>>2]=o;g[ua+(j<<4)+8>>2]=p;g[ua+(j<<4)+12>>2]=0.0;c[v>>2]=(c[v>>2]|0)+1;q=+g[(c[b+20>>2]|0)+752>>2];Vc(va+48|0,va+128|0,va+40|0,c[f+20>>2]|0,0);n=+g[va+48+4>>2];o=+g[va+48+8>>2];p=+g[va+48+12>>2];if(n*n+o*o+p*p>1.1920928955078125e-07){pa=1.0/(n*n+o*o+p*p);g[va+384>>2]=n*pa;g[va+384+4>>2]=o*pa;g[va+384+8>>2]=p*pa;g[va+384+12>>2]=0.0;pa=+g[va+48+56>>2];ra=+Sb[c[(c[sa>>2]|0)+48>>2]&15](sa);ra=pa-ra-+Sb[c[(c[ta>>2]|0)+48>>2]&15](ta);Wc(va+384|0,c[sa+52>>2]|0,c[d+12>>2]|0,va+624|0,ra-q,q,h)}do if(a[b+16>>0]|0?(T=c[h+4>>2]|0,c[T+748>>2]|0):0){k=c[T+740>>2]|0;l=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((k|0)==(l|0)){ef(T,k+4|0,j+4|0);break}else{ef(T,j+4|0,l+4|0);break}}while(0);j=c[D>>2]|0;if(j|0){if(a[z>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[D>>2]=0}}else{ra=+g[(c[b+20>>2]|0)+752>>2];b:do if(!(a[f+24>>0]|0)){Vc(va+48|0,va+128|0,va,c[f+20>>2]|0,0);n=+g[va+32>>2];if(n<0.0&(a[va+36>>0]|0)!=0){p=+g[va+8>>2];q=+g[va+16>>2];j=c[va+20>>2]|0;o=+g[va+12>>2];qa=111}}else{z=c[d+12>>2]|0;D=c[e+12>>2]|0;c[6418]=(c[6418]|0)+1;ha=+g[U+64>>2];ia=+g[U+68>>2];n=+g[z+4>>2];ja=+g[U+72>>2];o=+g[z+8>>2];p=+g[z+16>>2];q=+g[z+20>>2];r=+g[z+24>>2];s=+g[z+32>>2];t=+g[z+36>>2];u=+g[z+40>>2];ka=+g[ma+64>>2];la=+g[ma+68>>2];pa=+g[ma+72>>2];na=ha*+g[z>>2]+ia*n+ja*o+ +g[z+48>>2]-(ka*+g[D>>2]+la*+g[D+4>>2]+pa*+g[D+8>>2]+ +g[D+48>>2]);oa=ha*p+ia*q+ja*r+ +g[z+52>>2]-(ka*+g[D+16>>2]+la*+g[D+20>>2]+pa*+g[D+24>>2]+ +g[D+52>>2]);pa=ha*s+ia*t+ja*u+ +g[z+56>>2]-(ka*+g[D+32>>2]+la*+g[D+36>>2]+pa*+g[D+40>>2]+ +g[D+56>>2]);l=c[U+28>>2]|0;c:do if((l|0)>0){A=o;B=p;y=q;C=0.0;E=3402823466385288598117041.0e14;k=0;p=0.0;q=0.0;o=0.0;while(1){f=c[U+36>>2]|0;ja=+g[f+(k*36|0)+20>>2];ka=+g[f+(k*36|0)+24>>2];la=+g[f+(k*36|0)+28>>2];w=ja*+g[z>>2]+ka*n+la*A;r=ja*B+ka*y+la*r;n=ja*s+ka*t+la*u;g[va+296>>2]=w;g[va+296+4>>2]=r;g[va+296+8>>2]=n;g[va+296+12>>2]=0.0;if(na*w+oa*r+pa*n<0.0){g[va+296>>2]=-w;g[va+296+4>>2]=-r;g[va+296+8>>2]=-n;x=-w;r=-r;n=-n}else x=w;c[6416]=(c[6416]|0)+1;if(Qi(z,D,na,oa,pa,x,r,n,U,ma,E)|0){c[6417]=(c[6417]|0)+1;gh(U,z,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);gh(ma,D,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);s=+g[va+384>>2];t=+g[va+380>>2];do if(s<t){j=0;t=C}else{u=+g[va+376>>2];w=+g[va+624>>2];if(u<w){j=0;t=C;break}j=1;t=s-t<u-w?s-t:u-w}while(0);if(!j)break;if(t<E){s=t;p=x;q=n;o=r}else s=E;x=t;w=s}else{x=C;w=E}j=k+1|0;if((j|0)>=(l|0)){n=w;break c}n=+g[z+4>>2];A=+g[z+8>>2];B=+g[z+16>>2];y=+g[z+20>>2];r=+g[z+24>>2];s=+g[z+32>>2];t=+g[z+36>>2];u=+g[z+40>>2];C=x;E=w;k=j}break b}else{n=3402823466385288598117041.0e14;p=0.0;q=0.0;o=0.0}while(0);l=c[ma+28>>2]|0;d:do if((l|0)>0){A=0.0;k=0;while(1){f=c[ma+36>>2]|0;ka=+g[f+(k*36|0)+20>>2];la=+g[f+(k*36|0)+24>>2];t=+g[f+(k*36|0)+28>>2];r=ka*+g[D>>2]+la*+g[D+4>>2]+t*+g[D+8>>2];s=ka*+g[D+16>>2]+la*+g[D+20>>2]+t*+g[D+24>>2];t=ka*+g[D+32>>2]+la*+g[D+36>>2]+t*+g[D+40>>2];g[va+296>>2]=r;g[va+296+4>>2]=s;g[va+296+8>>2]=t;g[va+296+12>>2]=0.0;if(na*r+oa*s+pa*t<0.0){g[va+296>>2]=-r;g[va+296+4>>2]=-s;g[va+296+8>>2]=-t;r=-r;s=-s;t=-t}c[6416]=(c[6416]|0)+1;if(Qi(z,D,na,oa,pa,r,s,t,U,ma,n)|0){c[6417]=(c[6417]|0)+1;gh(U,z,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);gh(ma,D,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);u=+g[va+384>>2];w=+g[va+380>>2];do if(u<w){j=0;u=A}else{x=+g[va+376>>2];y=+g[va+624>>2];if(x<y){j=0;u=A;break}j=1;u=u-w<x-y?u-w:x-y}while(0);if(!j)break;if(u<n){n=u;p=r;q=t;o=s}}else u=A;k=k+1|0;if((k|0)>=(l|0))break d;else A=u}break b}while(0);j=c[U+48>>2]|0;e:do if((j|0)>0){l=c[ma+48>>2]|0;t=0.0;v=0;k=-1;m=-1;x=0.0;y=0.0;A=0.0;B=0.0;V=0.0;W=0.0;Y=0.0;r=0.0;s=0.0;P=0.0;M=0.0;L=0.0;E=0.0;I=0.0;K=0.0;u=0.0;w=0.0;C=0.0;f:while(1){f=c[U+56>>2]|0;ha=+g[f+(v<<4)>>2];ia=+g[f+(v<<4)+4>>2];la=+g[f+(v<<4)+8>>2];ja=ha*+g[z>>2]+ia*+g[z+4>>2]+la*+g[z+8>>2];ka=ha*+g[z+16>>2]+ia*+g[z+20>>2]+la*+g[z+24>>2];la=ha*+g[z+32>>2]+ia*+g[z+36>>2]+la*+g[z+40>>2];if((l|0)>0){X=t;l=0;ia=p;ha=q;ga=o;_=x;aa=y;ca=A;while(1){f=c[ma+56>>2]|0;ea=+g[f+(l<<4)>>2];fa=+g[f+(l<<4)+4>>2];ba=+g[f+(l<<4)+8>>2];Z=ea*+g[D>>2]+fa*+g[D+4>>2]+ba*+g[D+8>>2];$=ea*+g[D+16>>2]+fa*+g[D+20>>2]+ba*+g[D+24>>2];ba=ea*+g[D+32>>2]+fa*+g[D+36>>2]+ba*+g[D+40>>2];g[va+296>>2]=ka*ba-la*$;g[va+296+4>>2]=la*Z-ja*ba;g[va+296+8>>2]=ja*$-ka*Z;g[va+296+12>>2]=0.0;do if(!(+N(+(ka*ba-la*$))>1.0e-06)){if(+N(+(la*Z-ja*ba))>1.0e-06){qa=75;break}if(!(+N(+(ja*$-ka*Z))>1.0e-06)){p=ia;q=ha;o=ga;da=B;ea=V;fa=W}else qa=75}else qa=75;while(0);do if((qa|0)==75){qa=0;q=1.0/+O(+((ka*ba-la*$)*(ka*ba-la*$)+(la*Z-ja*ba)*(la*Z-ja*ba)+(ja*$-ka*Z)*(ja*$-ka*Z)));p=(ka*ba-la*$)*q;g[va+296>>2]=p;o=(la*Z-ja*ba)*q;g[va+296+4>>2]=o;q=(ja*$-ka*Z)*q;g[va+296+8>>2]=q;if(p*na+o*oa+pa*q<0.0){g[va+296>>2]=-p;g[va+296+4>>2]=-o;g[va+296+8>>2]=-q;p=-p;o=-o;q=-q}c[6416]=(c[6416]|0)+1;if(!(Qi(z,D,na,oa,pa,p,o,q,U,ma,n)|0)){p=ia;q=ha;o=ga;da=B;ea=V;fa=W;break}c[6417]=(c[6417]|0)+1;gh(U,z,va+296|0,va+624|0,va+384|0,va+360|0,va+344|0);gh(ma,D,va+296|0,va+380|0,va+376|0,va+328|0,va+312|0);t=+g[va+384>>2];x=+g[va+380>>2];do if(!(t<x)){y=+g[va+376>>2];A=+g[va+624>>2];if(y<A){j=0;t=X;x=_;y=aa;A=ca;break}if(t-x<y-A){j=1;t=t-x;x=+g[va+344>>2];y=+g[va+344+4>>2];A=+g[va+344+8>>2];B=+g[va+328>>2];V=+g[va+328+4>>2];W=+g[va+328+8>>2];break}else{j=1;t=y-A;x=+g[va+360>>2];y=+g[va+360+4>>2];A=+g[va+360+8>>2];B=+g[va+312>>2];V=+g[va+312+4>>2];W=+g[va+312+8>>2];break}}else{j=0;t=X;x=_;y=aa;A=ca}while(0);if(!j)break f;if(!(t<n)){X=t;p=ia;q=ha;o=ga;_=x;aa=y;ca=A;da=B;ea=V;fa=W;break}X=t;n=t;k=v;m=l;_=x;aa=y;ca=A;da=B;ea=V;fa=W;Y=x;r=y;s=A;P=B;M=V;L=W;E=ja;I=ka;K=la;u=Z;w=$;C=ba}while(0);l=l+1|0;j=c[ma+48>>2]|0;if((l|0)>=(j|0))break;else{ia=p;ha=q;ga=o;B=da;V=ea;W=fa}}l=j;j=c[U+48>>2]|0;t=X;x=_;y=aa;A=ca;B=da;V=ea;W=fa;X=Y}else X=Y;v=v+1|0;if((v|0)>=(j|0)){j=m;n=X;break e}else Y=X}break b}else{k=-1;j=-1;n=0.0;r=0.0;s=0.0;P=0.0;M=0.0;L=0.0;E=0.0;I=0.0;K=0.0;u=0.0;w=0.0;C=0.0}while(0);if((j|k|0)>-1){y=P-n;A=M-r;B=L-s;r=u*E+w*I+C*K;s=y*E+A*I+B*K;n=y*u+A*w+B*C;do if(1.0-r*r==0.0)t=0.0;else{if((s-n*r)/(1.0-r*r)<-1000000015047466219876688.0e6){t=-1000000015047466219876688.0e6;break}if(!((s-n*r)/(1.0-r*r)>1000000015047466219876688.0e6)){t=(s-n*r)/(1.0-r*r);break}t=1000000015047466219876688.0e6}while(0);n=r*t-n;do if(n<-1000000015047466219876688.0e6){if(s-r*1000000015047466219876688.0e6<-1000000015047466219876688.0e6){r=-1000000015047466219876688.0e6;n=-1000000015047466219876688.0e6;break}if(!(s-r*1000000015047466219876688.0e6>1000000015047466219876688.0e6)){r=s-r*1000000015047466219876688.0e6;n=-1000000015047466219876688.0e6;break}r=1000000015047466219876688.0e6;n=-1000000015047466219876688.0e6}else{if(!(n>1000000015047466219876688.0e6)){r=t;break}if(s+r*1000000015047466219876688.0e6<-1000000015047466219876688.0e6){r=-1000000015047466219876688.0e6;n=1000000015047466219876688.0e6;break}if(!(s+r*1000000015047466219876688.0e6>1000000015047466219876688.0e6)){r=s+r*1000000015047466219876688.0e6;n=1000000015047466219876688.0e6;break}r=1000000015047466219876688.0e6;n=1000000015047466219876688.0e6}while(0);x=u*n;w=w*n;u=C*n;t=x+(y-E*r);s=w+(A-I*r);n=u+(B-K*r);g[va+624>>2]=t;g[va+624+4>>2]=s;g[va+624+8>>2]=n;g[va+624+12>>2]=0.0;if(t*t+s*s+n*n>1.1920928955078125e-07){r=+O(+(t*t+s*s+n*n));g[va+624>>2]=t*(1.0/r);g[va+624+4>>2]=1.0/r*s;g[va+624+8>>2]=1.0/r*n;if(t*(1.0/r)*na+1.0/r*s*oa+1.0/r*n*pa<0.0){g[va+624>>2]=-(t*(1.0/r));g[va+624+4>>2]=-(1.0/r*s);g[va+624+8>>2]=-(1.0/r*n)}g[va+384>>2]=P+x;g[va+384+4>>2]=M+w;g[va+384+8>>2]=L+u;g[va+384+12>>2]=0.0;hc[c[(c[h>>2]|0)+16>>2]&15](h,va+624|0,va+384|0,-r)}}if(na*p+oa*o+pa*q<0.0){n=-1000000015047466219876688.0e6;p=-p;q=-q;j=0;o=-o;qa=111}else{n=-1000000015047466219876688.0e6;j=0;qa=111}}while(0);if((qa|0)==111){U=c[sa+52>>2]|0;f=c[ta+52>>2]|0;T=c[d+12>>2]|0;S=c[e+12>>2]|0;K=n-ra;C=1.0/+O(+(p*p+o*o+q*q));I=p*C;E=o*C;C=q*C;g[va+624>>2]=I;g[va+624+4>>2]=E;g[va+624+8>>2]=C;c[va+624+12>>2]=j;k=c[f+28>>2]|0;v=c[f+36>>2]|0;if((k|0)>0){n=+g[S>>2];o=+g[S+4>>2];p=+g[S+8>>2];q=+g[S+16>>2];r=+g[S+20>>2];s=+g[S+24>>2];t=+g[S+32>>2];u=+g[S+36>>2];w=+g[S+40>>2];j=-1;B=-3402823466385288598117041.0e14;m=0;while(1){x=+g[v+(m*36|0)+20>>2];y=+g[v+(m*36|0)+24>>2];A=+g[v+(m*36|0)+28>>2];l=(x*n+y*o+A*p)*I+(x*q+y*r+A*s)*E+(x*t+y*u+A*w)*C>B;j=l?m:j;m=m+1|0;if((m|0)==(k|0)){H=j;break}else B=l?(x*n+y*o+A*p)*I+(x*q+y*r+A*s)*E+(x*t+y*u+A*w)*C:B}}else H=-1;a[va+384+16>>0]=1;J=va+384+12|0;c[J>>2]=0;F=va+384+4|0;c[F>>2]=0;c[va+384+8>>2]=0;G=c[v+(H*36|0)+4>>2]|0;g:do if((G|0)>0){D=v+(H*36|0)+12|0;j=0;l=0;k=0;while(1){d=c[(c[D>>2]|0)+(k<<2)>>2]|0;e=c[f+16>>2]|0;oa=+g[e+(d<<4)>>2];pa=+g[e+(d<<4)+4>>2];p=+g[e+(d<<4)+8>>2];n=oa*+g[S>>2]+pa*+g[S+4>>2]+p*+g[S+8>>2]+ +g[S+48>>2];o=oa*+g[S+16>>2]+pa*+g[S+20>>2]+p*+g[S+24>>2]+ +g[S+52>>2];p=oa*+g[S+32>>2]+pa*+g[S+36>>2]+p*+g[S+40>>2]+ +g[S+56>>2];if((j|0)==(l|0)){z=l|0?l<<1:1;if((l|0)<(z|0)){if(!z){v=0;j=l}else{c[6435]=(c[6435]|0)+1;j=yc((z<<4|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}v=j;j=c[F>>2]|0}m=c[J>>2]|0;if((j|0)<=0){if(m)qa=126}else{l=0;do{d=v+(l<<4)|0;e=m+(l<<4)|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];l=l+1|0}while((l|0)!=(j|0));qa=126}if((qa|0)==126){qa=0;if(a[va+384+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0);j=c[F>>2]|0}c[J>>2]=0}a[va+384+16>>0]=1;c[J>>2]=v;c[va+384+8>>2]=z}else j=l}d=c[J>>2]|0;g[d+(j<<4)>>2]=n;g[d+(j<<4)+4>>2]=o;g[d+(j<<4)+8>>2]=p;g[d+(j<<4)+12>>2]=0.0;j=(c[F>>2]|0)+1|0;c[F>>2]=j;k=k+1|0;if((k|0)>=(G|0))break g;l=c[va+384+8>>2]|0}}while(0);if((H|0)>-1)Wc(va+624|0,U,T,va+384|0,K,ra,h);j=c[J>>2]|0;if(j|0){if(a[va+384+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[J>>2]=0}}if(a[b+16>>0]|0?(ua=c[h+4>>2]|0,c[ua+748>>2]|0):0){k=c[ua+740>>2]|0;l=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((k|0)==(l|0)){ef(ua,k+4|0,j+4|0);break}else{ef(ua,j+4|0,l+4|0);break}}}while(0);i=va;return}while(0)}Vc(va+48|0,va+128|0,h,c[f+20>>2]|0,0);if((c[b+28>>2]|0?(c[(c[h+4>>2]|0)+748>>2]|0)<(c[b+32>>2]|0):0)?(K=+g[va+48+4>>2],L=+g[va+48+8>>2],M=+g[va+48+12>>2],K*K+L*L+M*M>1.1920928955078125e-07):0){B=1.0/(K*K+L*L+M*M);if(+N(+(M*B))>.7071067690849304){I=1.0/+O(+(M*B*M*B+L*B*L*B));C=0.0;E=L*B*I;I=-(M*B*I)}else{I=1.0/+O(+(K*B*K*B+L*B*L*B));C=-(L*B*I);E=0.0;I=K*B*I}A=+Sb[c[(c[sa>>2]|0)+16>>2]&15](sa);x=+Sb[c[(c[ta>>2]|0)+16>>2]&15](ta);n=.019999999552965164/(A<x?A:x);if(A<x){c[va+624>>2]=c[va+128>>2];c[va+624+4>>2]=c[va+128+4>>2];c[va+624+8>>2]=c[va+128+8>>2];c[va+624+12>>2]=c[va+128+12>>2];c[va+624+16>>2]=c[l>>2];c[va+624+16+4>>2]=c[l+4>>2];c[va+624+16+8>>2]=c[l+8>>2];c[va+624+16+12>>2]=c[l+12>>2];c[va+624+32>>2]=c[v>>2];c[va+624+32+4>>2]=c[v+4>>2];c[va+624+32+8>>2]=c[v+8>>2];c[va+624+32+12>>2]=c[v+12>>2];c[va+624+48>>2]=c[z>>2];c[va+624+48+4>>2]=c[z+4>>2];c[va+624+48+8>>2]=c[z+8>>2];c[va+624+48+12>>2]=c[z+12>>2]}else{c[va+624>>2]=c[D>>2];c[va+624+4>>2]=c[D+4>>2];c[va+624+8>>2]=c[D+8>>2];c[va+624+12>>2]=c[D+12>>2];c[va+624+16>>2]=c[F>>2];c[va+624+16+4>>2]=c[F+4>>2];c[va+624+16+8>>2]=c[F+8>>2];c[va+624+16+12>>2]=c[F+12>>2];c[va+624+32>>2]=c[G>>2];c[va+624+32+4>>2]=c[G+4>>2];c[va+624+32+8>>2]=c[G+8>>2];c[va+624+32+12>>2]=c[G+12>>2];c[va+624+48>>2]=c[H>>2];c[va+624+48+4>>2]=c[H+4>>2];c[va+624+48+8>>2]=c[H+8>>2];c[va+624+48+12>>2]=c[H+12>>2]}j=c[b+28>>2]|0;if((j|0)>0){y=C*C+I*I+E*E;w=(n>.39269909262657166?.39269909262657166:n)*.5;k=0;do{if(y>1.1920928955078125e-07){t=+R(+w)/+O(+y);r=C*t;s=I*t;t=E*t;u=+Q(+w);q=+(k|0)*(6.2831854820251465/+(j|0))*.5;p=+R(+q)/+O(+(M*B*M*B+(K*B*K*B+L*B*L*B)));n=K*B*p;o=L*B*p;p=M*B*p;q=+Q(+q);if(A<x){la=p*(r*-p+(s*q+u*-o)-t*-n)+(n*(u*q-r*-n-s*-o-t*-p)+q*(t*-o+(r*q+u*-n)-s*-p))-o*(s*-n+(t*q+u*-p)-r*-o);oa=n*(s*-n+(t*q+u*-p)-r*-o)+(q*(r*-p+(s*q+u*-o)-t*-n)+o*(u*q-r*-n-s*-o-t*-p))-p*(t*-o+(r*q+u*-n)-s*-p);aa=o*(t*-o+(r*q+u*-n)-s*-p)+(p*(u*q-r*-n-s*-o-t*-p)+q*(s*-n+(t*q+u*-p)-r*-o))-n*(r*-p+(s*q+u*-o)-t*-n);ja=q*(u*q-r*-n-s*-o-t*-p)-n*(t*-o+(r*q+u*-n)-s*-p)-o*(r*-p+(s*q+u*-o)-t*-n)-p*(s*-n+(t*q+u*-p)-r*-o);na=la*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));pa=oa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ia=aa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ua=c[d+12>>2]|0;ba=+g[ua>>2];ca=+g[ua+16>>2];da=+g[ua+32>>2];ea=+g[ua+4>>2];fa=+g[ua+20>>2];ga=+g[ua+36>>2];ha=+g[ua+8>>2];ka=+g[ua+24>>2];ra=+g[ua+40>>2];g[va+128>>2]=(1.0-(oa*pa+aa*ia))*ba+(la*pa-ja*ia)*ca+(la*ia+ja*pa)*da;g[va+128+4>>2]=(1.0-(oa*pa+aa*ia))*ea+(la*pa-ja*ia)*fa+(la*ia+ja*pa)*ga;g[va+128+8>>2]=(1.0-(oa*pa+aa*ia))*ha+(la*pa-ja*ia)*ka+(la*ia+ja*pa)*ra;g[va+128+12>>2]=0.0;g[va+128+16>>2]=(la*pa+ja*ia)*ba+(1.0-(la*na+aa*ia))*ca+(oa*ia-ja*na)*da;g[va+128+20>>2]=(la*pa+ja*ia)*ea+(1.0-(la*na+aa*ia))*fa+(oa*ia-ja*na)*ga;g[va+128+24>>2]=(la*pa+ja*ia)*ha+(1.0-(la*na+aa*ia))*ka+(oa*ia-ja*na)*ra;g[va+128+28>>2]=0.0;g[va+128+32>>2]=(la*ia-ja*pa)*ba+(oa*ia+ja*na)*ca+(1.0-(la*na+oa*pa))*da;g[va+128+36>>2]=(la*ia-ja*pa)*ea+(oa*ia+ja*na)*fa+(1.0-(la*na+oa*pa))*ga;g[va+128+40>>2]=(la*ia-ja*pa)*ha+(oa*ia+ja*na)*ka+(1.0-(la*na+oa*pa))*ra;g[va+128+44>>2]=0.0;ua=c[e+12>>2]|0;c[D>>2]=c[ua>>2];c[D+4>>2]=c[ua+4>>2];c[D+8>>2]=c[ua+8>>2];c[D+12>>2]=c[ua+12>>2];c[F>>2]=c[ua+16>>2];c[F+4>>2]=c[ua+16+4>>2];c[F+8>>2]=c[ua+16+8>>2];c[F+12>>2]=c[ua+16+12>>2];c[G>>2]=c[ua+32>>2];c[G+4>>2]=c[ua+32+4>>2];c[G+8>>2]=c[ua+32+8>>2];c[G+12>>2]=c[ua+32+12>>2];c[H>>2]=c[ua+48>>2];c[H+4>>2]=c[ua+48+4>>2];c[H+8>>2]=c[ua+48+8>>2];c[H+12>>2]=c[ua+48+12>>2]}else{ua=c[d+12>>2]|0;c[va+128>>2]=c[ua>>2];c[va+128+4>>2]=c[ua+4>>2];c[va+128+8>>2]=c[ua+8>>2];c[va+128+12>>2]=c[ua+12>>2];c[l>>2]=c[ua+16>>2];c[l+4>>2]=c[ua+16+4>>2];c[l+8>>2]=c[ua+16+8>>2];c[l+12>>2]=c[ua+16+12>>2];c[v>>2]=c[ua+32>>2];c[v+4>>2]=c[ua+32+4>>2];c[v+8>>2]=c[ua+32+8>>2];c[v+12>>2]=c[ua+32+12>>2];c[z>>2]=c[ua+48>>2];c[z+4>>2]=c[ua+48+4>>2];c[z+8>>2]=c[ua+48+8>>2];c[z+12>>2]=c[ua+48+12>>2];la=p*(r*-p+(s*q+u*-o)-t*-n)+(n*(u*q-r*-n-s*-o-t*-p)+q*(t*-o+(r*q+u*-n)-s*-p))-o*(s*-n+(t*q+u*-p)-r*-o);oa=n*(s*-n+(t*q+u*-p)-r*-o)+(q*(r*-p+(s*q+u*-o)-t*-n)+o*(u*q-r*-n-s*-o-t*-p))-p*(t*-o+(r*q+u*-n)-s*-p);aa=o*(t*-o+(r*q+u*-n)-s*-p)+(p*(u*q-r*-n-s*-o-t*-p)+q*(s*-n+(t*q+u*-p)-r*-o))-n*(r*-p+(s*q+u*-o)-t*-n);ja=q*(u*q-r*-n-s*-o-t*-p)-n*(t*-o+(r*q+u*-n)-s*-p)-o*(r*-p+(s*q+u*-o)-t*-n)-p*(s*-n+(t*q+u*-p)-r*-o);na=la*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));pa=oa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ia=aa*(2.0/(ja*ja+(aa*aa+(la*la+oa*oa))));ua=c[e+12>>2]|0;ba=+g[ua>>2];ca=+g[ua+16>>2];da=+g[ua+32>>2];ea=+g[ua+4>>2];fa=+g[ua+20>>2];ga=+g[ua+36>>2];ha=+g[ua+8>>2];ka=+g[ua+24>>2];ra=+g[ua+40>>2];g[va+128+64>>2]=(1.0-(oa*pa+aa*ia))*ba+(la*pa-ja*ia)*ca+(la*ia+ja*pa)*da;g[va+128+68>>2]=(1.0-(oa*pa+aa*ia))*ea+(la*pa-ja*ia)*fa+(la*ia+ja*pa)*ga;g[va+128+72>>2]=(1.0-(oa*pa+aa*ia))*ha+(la*pa-ja*ia)*ka+(la*ia+ja*pa)*ra;g[va+128+76>>2]=0.0;g[va+128+80>>2]=(la*pa+ja*ia)*ba+(1.0-(la*na+aa*ia))*ca+(oa*ia-ja*na)*da;g[va+128+84>>2]=(la*pa+ja*ia)*ea+(1.0-(la*na+aa*ia))*fa+(oa*ia-ja*na)*ga;g[va+128+88>>2]=(la*pa+ja*ia)*ha+(1.0-(la*na+aa*ia))*ka+(oa*ia-ja*na)*ra;g[va+128+92>>2]=0.0;g[va+128+96>>2]=(la*ia-ja*pa)*ba+(oa*ia+ja*na)*ca+(1.0-(la*na+oa*pa))*da;g[va+128+100>>2]=(la*ia-ja*pa)*ea+(oa*ia+ja*na)*fa+(1.0-(la*na+oa*pa))*ga;g[va+128+104>>2]=(la*ia-ja*pa)*ha+(oa*ia+ja*na)*ka+(1.0-(la*na+oa*pa))*ra;g[va+128+108>>2]=0.0}j=c[f+20>>2]|0;c[va+384>>2]=6136;c[va+384+32>>2]=h;c[va+384+36>>2]=c[va+128>>2];c[va+384+36+4>>2]=c[va+128+4>>2];c[va+384+36+8>>2]=c[va+128+8>>2];c[va+384+36+12>>2]=c[va+128+12>>2];c[va+384+52>>2]=c[l>>2];c[va+384+52+4>>2]=c[l+4>>2];c[va+384+52+8>>2]=c[l+8>>2];c[va+384+52+12>>2]=c[l+12>>2];c[va+384+68>>2]=c[v>>2];c[va+384+68+4>>2]=c[v+4>>2];c[va+384+68+8>>2]=c[v+8>>2];c[va+384+68+12>>2]=c[v+12>>2];c[va+384+84>>2]=c[z>>2];c[va+384+84+4>>2]=c[z+4>>2];c[va+384+84+8>>2]=c[z+8>>2];c[va+384+84+12>>2]=c[z+12>>2];c[va+384+100>>2]=c[D>>2];c[va+384+100+4>>2]=c[D+4>>2];c[va+384+100+8>>2]=c[D+8>>2];c[va+384+100+12>>2]=c[D+12>>2];c[va+384+116>>2]=c[F>>2];c[va+384+116+4>>2]=c[F+4>>2];c[va+384+116+8>>2]=c[F+8>>2];c[va+384+116+12>>2]=c[F+12>>2];c[va+384+132>>2]=c[G>>2];c[va+384+132+4>>2]=c[G+4>>2];c[va+384+132+8>>2]=c[G+8>>2];c[va+384+132+12>>2]=c[G+12>>2];c[va+384+148>>2]=c[H>>2];c[va+384+148+4>>2]=c[H+4>>2];c[va+384+148+8>>2]=c[H+8>>2];c[va+384+148+12>>2]=c[H+12>>2];c[va+384+164>>2]=c[va+624>>2];c[va+384+164+4>>2]=c[va+624+4>>2];c[va+384+164+8>>2]=c[va+624+8>>2];c[va+384+164+12>>2]=c[va+624+12>>2];c[va+384+180>>2]=c[va+624+16>>2];c[va+384+180+4>>2]=c[va+624+16+4>>2];c[va+384+180+8>>2]=c[va+624+16+8>>2];c[va+384+180+12>>2]=c[va+624+16+12>>2];c[va+384+196>>2]=c[va+624+32>>2];c[va+384+196+4>>2]=c[va+624+32+4>>2];c[va+384+196+8>>2]=c[va+624+32+8>>2];c[va+384+196+12>>2]=c[va+624+32+12>>2];c[va+384+212>>2]=c[va+624+48>>2];c[va+384+212+4>>2]=c[va+624+48+4>>2];c[va+384+212+8>>2]=c[va+624+48+8>>2];c[va+384+212+12>>2]=c[va+624+48+12>>2];a[va+384+228>>0]=A<x&1;c[va+384+232>>2]=j;Vc(va+48|0,va+128|0,va+384|0,j,0);j=c[b+28>>2]|0}k=k+1|0}while((k|0)<(j|0))}}if(!(a[b+16>>0]|0)){i=va;return}k=c[h+4>>2]|0;if(!(c[k+748>>2]|0)){i=va;return}l=c[k+740>>2]|0;m=c[(c[h+8>>2]|0)+8>>2]|0;j=c[(c[h+12>>2]|0)+8>>2]|0;if((l|0)==(m|0)){ef(k,l+4|0,j+4|0);i=va;return}else{ef(k,j+4|0,m+4|0);i=va;return}}function pc(d){d=d|0;var e=0,f=0,h=0,j=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0;X=i;i=i+1024|0;tc(d);if(!(Eb[c[(c[d>>2]|0)+20>>2]&127](d)|0)){i=X;return}if((c[d+328>>2]|0)<=0){i=X;return}Q=X+944+32|0;R=X+944+52|0;W=0;do{S=c[(c[d+336>>2]|0)+(W<<2)>>2]|0;if(Eb[c[(c[d>>2]|0)+20>>2]&127](d)|0?(M=Eb[c[(c[d>>2]|0)+20>>2]&127](d)|0,(Eb[c[(c[M>>2]|0)+48>>2]&127](M)|0)&1|0):0){e=c[d+72>>2]|0;if(!(a[S+473>>0]|0))M=e;else{c[X+864>>2]=c[S+520>>2];c[X+864+4>>2]=c[S+520+4>>2];c[X+864+8>>2]=c[S+520+8>>2];c[X+864+12>>2]=c[S+520+12>>2];j=+g[S+584>>2];l=+g[S+536>>2];m=+g[S+600>>2];u=+g[S+540>>2];v=+g[S+616>>2];w=+g[S+544>>2];x=+g[S+588>>2];y=+g[S+604>>2];z=+g[S+620>>2];A=+g[S+592>>2];B=+g[S+608>>2];D=+g[S+624>>2];E=+g[S+552>>2];F=+g[S+556>>2];G=+g[S+560>>2];H=+g[S+568>>2];I=+g[S+572>>2];J=+g[S+576>>2];ha=j*l+m*u+v*w+(l*x+u*y+w*z)*0.0+(l*A+u*B+w*D)*0.0;fa=(A*E+B*F+D*G)*0.0+(j*E+m*F+v*G+(x*E+y*F+z*G)*0.0);ea=(A*H+B*I+D*J)*0.0+(j*H+m*I+v*J+(x*H+y*I+z*J)*0.0);ga=1.0/+O(+(ha*ha+fa*fa+ea*ea));da=(j*l+m*u+v*w)*0.0+(l*x+u*y+w*z)+(l*A+u*B+w*D)*0.0;ba=(A*E+B*F+D*G)*0.0+(x*E+y*F+z*G+(j*E+m*F+v*G)*0.0);aa=(A*H+B*I+D*J)*0.0+(x*H+y*I+z*J+(j*H+m*I+v*J)*0.0);ca=1.0/+O(+(da*da+ba*ba+aa*aa));$=(j*l+m*u+v*w)*0.0+(l*x+u*y+w*z)*0.0+(l*A+u*B+w*D);Z=A*E+B*F+D*G+((j*E+m*F+v*G)*0.0+(x*E+y*F+z*G)*0.0);Y=A*H+B*I+D*J+((j*H+m*I+v*J)*0.0+(x*H+y*I+z*J)*0.0);_=1.0/+O(+($*$+Z*Z+Y*Y));M=c[(c[e>>2]|0)+8>>2]|0;fa=fa*ga*10.0+ +g[X+864+4>>2];ea=ga*ea*10.0+ +g[X+864+8>>2];g[X+848>>2]=ha*ga*10.0+ +g[X+864>>2];g[X+848+4>>2]=fa;g[X+848+8>>2]=ea;g[X+848+12>>2]=0.0;c[X+832>>2]=1065353216;c[X+832+4>>2]=0;c[X+832+8>>2]=0;g[X+832+12>>2]=0.0;mc[M&127](e,X+864|0,X+848|0,X+832|0);M=c[(c[e>>2]|0)+8>>2]|0;ba=ba*ca*10.0+ +g[X+864+4>>2];aa=ca*aa*10.0+ +g[X+864+8>>2];g[X+816>>2]=da*ca*10.0+ +g[X+864>>2];g[X+816+4>>2]=ba;g[X+816+8>>2]=aa;g[X+816+12>>2]=0.0;c[X+800>>2]=0;c[X+800+4>>2]=1065353216;c[X+800+8>>2]=0;g[X+800+12>>2]=0.0;mc[M&127](e,X+864|0,X+816|0,X+800|0);M=c[(c[e>>2]|0)+8>>2]|0;Z=Z*_*10.0+ +g[X+864+4>>2];Y=_*Y*10.0+ +g[X+864+8>>2];g[X+784>>2]=$*_*10.0+ +g[X+864>>2];g[X+784+4>>2]=Z;g[X+784+8>>2]=Y;g[X+784+12>>2]=0.0;c[X+768>>2]=0;c[X+768+4>>2]=0;c[X+768+8>>2]=1065353216;g[X+768+12>>2]=0.0;mc[M&127](e,X+864|0,X+784|0,X+768|0);if((c[S+484>>2]|0)>0){f=0;do{M=c[S+492>>2]|0;da=+g[M+(f<<4)>>2];ea=+g[M+(f<<4)+4>>2];ha=+g[M+(f<<4)+8>>2];fa=+g[X+864>>2]+((j*l+m*u+v*w)*da+(l*x+u*y+w*z)*ea+(l*A+u*B+w*D)*ha);ga=+g[X+864+4>>2]+((j*E+m*F+v*G)*da+(x*E+y*F+z*G)*ea+(A*E+B*F+D*G)*ha);ha=(j*H+m*I+v*J)*da+(x*H+y*I+z*J)*ea+(A*H+B*I+D*J)*ha+ +g[X+864+8>>2];c[X+752>>2]=1065353216;c[X+752+4>>2]=0;c[X+752+8>>2]=1065353216;g[X+752+12>>2]=0.0;M=c[(c[e>>2]|0)+8>>2]|0;g[X+1008>>2]=fa+-.10000000149011612;g[X+1008+4>>2]=ga;g[X+1008+8>>2]=ha;g[X+1008+12>>2]=0.0;g[X+944>>2]=fa+.10000000149011612;g[X+944+4>>2]=ga+0.0;g[X+944+8>>2]=ha+0.0;g[X+944+12>>2]=0.0;mc[M&127](e,X+1008|0,X+944|0,X+752|0);M=c[(c[e>>2]|0)+8>>2]|0;g[X+928>>2]=fa;g[X+928+4>>2]=ga+-.10000000149011612;g[X+928+8>>2]=ha;g[X+928+12>>2]=0.0;g[X+912>>2]=fa+0.0;g[X+912+4>>2]=ga+.10000000149011612;g[X+912+8>>2]=ha+0.0;g[X+912+12>>2]=0.0;mc[M&127](e,X+928|0,X+912|0,X+752|0);M=c[(c[e>>2]|0)+8>>2]|0;g[X+896>>2]=fa;g[X+896+4>>2]=ga;g[X+896+8>>2]=ha+-.10000000149011612;g[X+896+12>>2]=0.0;g[X+880>>2]=fa+0.0;g[X+880+4>>2]=ga+0.0;g[X+880+8>>2]=ha+.10000000149011612;g[X+880+12>>2]=0.0;mc[M&127](e,X+896|0,X+880|0,X+752|0);f=f+1|0}while((f|0)<(c[S+484>>2]|0))}M=c[d+72>>2]|0}L=c[d+344>>2]|0;c[X+864>>2]=0;c[X+864+4>>2]=0;c[X+864+8>>2]=0;c[X+864+12>>2]=0;c[X+848>>2]=1065353216;c[X+848+4>>2]=1065353216;c[X+848+8>>2]=1065353216;g[X+848+12>>2]=0.0;c[X+832>>2]=1065353216;c[X+832+4>>2]=0;c[X+832+8>>2]=0;g[X+832+12>>2]=0.0;if(!(L&256)){if(L&1|0?(T=c[S+712>>2]|0,(T|0)>0):0){e=T;h=0;do{f=c[S+720>>2]|0;if(c[(c[f+(h*104|0)+4>>2]|0)+16>>2]&1){e=c[(c[M>>2]|0)+8>>2]|0;K=f+(h*104|0)+8|0;s=f+(h*104|0)+12|0;q=c[s>>2]|0;t=f+(h*104|0)+16|0;r=c[t>>2]|0;g[X+800>>2]=+g[K>>2]+-.10000000149011612;c[X+800+4>>2]=q;c[X+800+8>>2]=r;g[X+800+12>>2]=0.0;ga=+g[s>>2]+0.0;ha=+g[t>>2]+0.0;g[X+784>>2]=+g[K>>2]+.10000000149011612;g[X+784+4>>2]=ga;g[X+784+8>>2]=ha;g[X+784+12>>2]=0.0;c[X+768>>2]=1065353216;c[X+768+4>>2]=0;c[X+768+8>>2]=0;g[X+768+12>>2]=0.0;mc[e&127](M,X+800|0,X+784|0,X+768|0);e=c[(c[M>>2]|0)+8>>2]|0;ha=+g[s>>2]+-.10000000149011612;r=c[t>>2]|0;c[X+752>>2]=c[K>>2];g[X+752+4>>2]=ha;c[X+752+8>>2]=r;g[X+752+12>>2]=0.0;ha=+g[s>>2]+.10000000149011612;ga=+g[t>>2]+0.0;g[X+736>>2]=+g[K>>2]+0.0;g[X+736+4>>2]=ha;g[X+736+8>>2]=ga;g[X+736+12>>2]=0.0;c[X+720>>2]=0;c[X+720+4>>2]=1065353216;c[X+720+8>>2]=0;g[X+720+12>>2]=0.0;mc[e&127](M,X+752|0,X+736|0,X+720|0);e=c[(c[M>>2]|0)+8>>2]|0;r=c[s>>2]|0;ga=+g[t>>2]+-.10000000149011612;c[X+704>>2]=c[K>>2];c[X+704+4>>2]=r;g[X+704+8>>2]=ga;g[X+704+12>>2]=0.0;ga=+g[s>>2]+0.0;ha=+g[t>>2]+.10000000149011612;g[X+688>>2]=+g[K>>2]+0.0;g[X+688+4>>2]=ga;g[X+688+8>>2]=ha;g[X+688+12>>2]=0.0;c[X+672>>2]=0;c[X+672+4>>2]=0;c[X+672+8>>2]=1065353216;g[X+672+12>>2]=0.0;mc[e&127](M,X+704|0,X+688|0,X+672|0);e=c[S+712>>2]|0}h=h+1|0}while((h|0)<(e|0))}if(L&2|0?(U=c[S+732>>2]|0,(U|0)>0):0){e=U;h=0;do{f=c[S+740>>2]|0;if(c[(c[f+(h*52|0)+4>>2]|0)+16>>2]&1){mc[c[(c[M>>2]|0)+8>>2]&127](M,(c[f+(h*52|0)+8>>2]|0)+8|0,(c[f+(h*52|0)+12>>2]|0)+8|0,X+864|0);e=c[S+732>>2]|0}h=h+1|0}while((h|0)<(e|0))}if(L&16|0?(V=c[S+712>>2]|0,(V|0)>0):0){e=V;h=0;do{f=c[S+720>>2]|0;if(c[(c[f+(h*104|0)+4>>2]|0)+16>>2]&1){fa=+g[f+(h*104|0)+72>>2]*.5;ha=+g[f+(h*104|0)+76>>2]*.5;ga=+g[f+(h*104|0)+80>>2]*.5;K=c[(c[M>>2]|0)+8>>2]|0;e=f+(h*104|0)+8|0;s=f+(h*104|0)+12|0;da=ha+ +g[s>>2];t=f+(h*104|0)+16|0;ea=ga+ +g[t>>2];g[X+656>>2]=fa+ +g[e>>2];g[X+656+4>>2]=da;g[X+656+8>>2]=ea;g[X+656+12>>2]=0.0;mc[K&127](M,e,X+656|0,X+848|0);K=c[(c[M>>2]|0)+8>>2]|0;ha=+g[s>>2]-ha;ga=+g[t>>2]-ga;g[X+640>>2]=+g[e>>2]-fa;g[X+640+4>>2]=ha;g[X+640+8>>2]=ga;g[X+640+12>>2]=0.0;ga=+g[X+848+4>>2]*.5;ha=+g[X+848+8>>2]*.5;g[X+624>>2]=+g[X+848>>2]*.5;g[X+624+4>>2]=ga;g[X+624+8>>2]=ha;g[X+624+12>>2]=0.0;mc[K&127](M,e,X+640|0,X+624|0);e=c[S+712>>2]|0}h=h+1|0}while((h|0)<(e|0))}if(L&32|0){if((a[22536]|0)==0?Wa(22536)|0:0){c[5803]=1065353216;c[5804]=0;c[5805]=0;c[5806]=0;c[5807]=0;c[5808]=1065353216;c[5809]=0;c[5810]=0;c[5811]=0;c[5812]=0;c[5813]=1065353216;g[5814]=0.0;_a(22536)}if((c[S+812>>2]|0)>0){e=0;do{K=c[S+820>>2]|0;s=c[K+(e*104|0)+24>>2]|0;E=+g[s+8>>2];t=K+(e*104|0)+4|0;F=+g[t>>2];I=+g[s+12>>2];r=K+(e*104|0)+8|0;J=+g[r>>2];ga=+g[s+16>>2];s=K+(e*104|0)+12|0;ea=+g[s>>2];ca=+g[K+(e*104|0)+20>>2]+(E*F+I*J+ga*ea);g[X+1008>>2]=E-F*ca;g[X+1008+4>>2]=I-J*ca;g[X+1008+8>>2]=ga-ea*ca;g[X+1008+12>>2]=0.0;Y=+g[t>>2];_=+g[r>>2];G=+g[s>>2];K=Y<_?(Y<G?0:2):_<G?1:2;H=+g[23212+(K<<4)+8>>2];Z=+g[23212+(K<<4)+4>>2];$=+g[23212+(K<<4)>>2];aa=1.0/+O(+((Y*Z-_*$)*(Y*Z-_*$)+((_*H-G*Z)*(_*H-G*Z)+(G*$-Y*H)*(G*$-Y*H))));ba=G*(G*$-Y*H)*aa-_*(Y*Z-_*$)*aa;da=Y*(Y*Z-_*$)*aa-G*(_*H-G*Z)*aa;ha=_*(_*H-G*Z)*aa-Y*(G*$-Y*H)*aa;fa=1.0/+O(+(ha*ha+(ba*ba+da*da)));K=c[(c[M>>2]|0)+8>>2]|0;g[X+608>>2]=E-F*ca-(_*H-G*Z)*aa*.5;g[X+608+4>>2]=I-J*ca-(G*$-Y*H)*aa*.5;g[X+608+8>>2]=ga-ea*ca-(Y*Z-_*$)*aa*.5;g[X+608+12>>2]=0.0;g[X+592>>2]=(_*H-G*Z)*aa*.5+(E-F*ca);g[X+592+4>>2]=(G*$-Y*H)*aa*.5+(I-J*ca);g[X+592+8>>2]=(Y*Z-_*$)*aa*.5+(ga-ea*ca);g[X+592+12>>2]=0.0;mc[K&127](M,X+608|0,X+592|0,X+832|0);K=c[(c[M>>2]|0)+8>>2]|0;ca=+g[X+1008>>2];ea=+g[X+1008+4>>2];ga=+g[X+1008+8>>2];g[X+576>>2]=ca-fa*ba*.5;g[X+576+4>>2]=ea-fa*da*.5;g[X+576+8>>2]=ga-fa*ha*.5;g[X+576+12>>2]=0.0;g[X+560>>2]=fa*ba*.5+ca;g[X+560+4>>2]=fa*da*.5+ea;g[X+560+8>>2]=fa*ha*.5+ga;g[X+560+12>>2]=0.0;mc[K&127](M,X+576|0,X+560|0,X+832|0);K=c[(c[M>>2]|0)+8>>2]|0;ga=+g[r>>2]*.5*3.0+ +g[X+1008+4>>2];ha=+g[s>>2]*.5*3.0+ +g[X+1008+8>>2];g[X+544>>2]=+g[t>>2]*.5*3.0+ +g[X+1008>>2];g[X+544+4>>2]=ga;g[X+544+8>>2]=ha;g[X+544+12>>2]=0.0;c[X+528>>2]=1065353216;c[X+528+4>>2]=1065353216;c[X+528+8>>2]=0;g[X+528+12>>2]=0.0;mc[K&127](M,X+1008|0,X+544|0,X+528|0);e=e+1|0}while((e|0)<(c[S+812>>2]|0))}}if(L&4|0?(c[X+1008>>2]=0,c[X+1008+4>>2]=1060320051,c[X+1008+8>>2]=0,g[X+1008+12>>2]=0.0,N=c[S+752>>2]|0,(N|0)>0):0){e=N;h=0;do{f=c[S+760>>2]|0;if(c[(c[f+(h*44|0)+4>>2]|0)+16>>2]&1){e=c[f+(h*44|0)+8>>2]|0;$=+g[e+8>>2];ca=+g[e+12>>2];fa=+g[e+16>>2];e=c[f+(h*44|0)+12>>2]|0;aa=+g[e+8>>2];da=+g[e+12>>2];ga=+g[e+16>>2];e=c[f+(h*44|0)+16>>2]|0;ba=+g[e+8>>2];ea=+g[e+12>>2];ha=+g[e+16>>2];e=c[(c[M>>2]|0)+28>>2]|0;g[X+512>>2]=($+aa+ba)*.3333333432674408+($-($+aa+ba)*.3333333432674408)*.800000011920929;g[X+512+4>>2]=(ca+da+ea)*.3333333432674408+(ca-(ca+da+ea)*.3333333432674408)*.800000011920929;g[X+512+8>>2]=(fa+ga+ha)*.3333333432674408+(fa-(fa+ga+ha)*.3333333432674408)*.800000011920929;g[X+512+12>>2]=0.0;g[X+496>>2]=($+aa+ba)*.3333333432674408+(aa-($+aa+ba)*.3333333432674408)*.800000011920929;g[X+496+4>>2]=(ca+da+ea)*.3333333432674408+(da-(ca+da+ea)*.3333333432674408)*.800000011920929;g[X+496+8>>2]=(fa+ga+ha)*.3333333432674408+(ga-(fa+ga+ha)*.3333333432674408)*.800000011920929;g[X+496+12>>2]=0.0;g[X+480>>2]=($+aa+ba)*.3333333432674408+(ba-($+aa+ba)*.3333333432674408)*.800000011920929;g[X+480+4>>2]=(ca+da+ea)*.3333333432674408+(ea-(ca+da+ea)*.3333333432674408)*.800000011920929;g[X+480+8>>2]=(fa+ga+ha)*.3333333432674408+(ha-(fa+ga+ha)*.3333333432674408)*.800000011920929;g[X+480+12>>2]=0.0;Pb[e&0](M,X+512|0,X+496|0,X+480|0,X+1008|0,1.0);e=c[S+752>>2]|0}h=h+1|0}while((h|0)<(e|0))}if(L&8|0?(c[X+1008>>2]=1050253722,c[X+1008+4>>2]=1050253722,c[X+1008+8>>2]=1060320051,g[X+1008+12>>2]=0.0,P=c[S+772>>2]|0,(P|0)>0):0){e=P;h=0;do{f=c[S+780>>2]|0;if(c[(c[f+(h*104|0)+4>>2]|0)+16>>2]&1){e=c[f+(h*104|0)+8>>2]|0;A=+g[e+8>>2];E=+g[e+12>>2];H=+g[e+16>>2];e=c[f+(h*104|0)+12>>2]|0;B=+g[e+8>>2];F=+g[e+12>>2];I=+g[e+16>>2];e=c[f+(h*104|0)+16>>2]|0;D=+g[e+8>>2];G=+g[e+12>>2];J=+g[e+16>>2];e=c[f+(h*104|0)+20>>2]|0;fa=+g[e+8>>2];ga=+g[e+12>>2];ha=+g[e+16>>2];e=c[(c[M>>2]|0)+28>>2]|0;ca=(A+B+D+fa)*.25+(A-(A+B+D+fa)*.25)*.800000011920929;da=(E+F+G+ga)*.25+(E-(E+F+G+ga)*.25)*.800000011920929;ea=(H+I+J+ha)*.25+(H-(H+I+J+ha)*.25)*.800000011920929;g[X+464>>2]=ca;g[X+464+4>>2]=da;g[X+464+8>>2]=ea;g[X+464+12>>2]=0.0;Y=(A+B+D+fa)*.25+(B-(A+B+D+fa)*.25)*.800000011920929;Z=(E+F+G+ga)*.25+(F-(E+F+G+ga)*.25)*.800000011920929;_=(H+I+J+ha)*.25+(I-(H+I+J+ha)*.25)*.800000011920929;g[X+448>>2]=Y;g[X+448+4>>2]=Z;g[X+448+8>>2]=_;g[X+448+12>>2]=0.0;$=(A+B+D+fa)*.25+(D-(A+B+D+fa)*.25)*.800000011920929;aa=(E+F+G+ga)*.25+(G-(E+F+G+ga)*.25)*.800000011920929;ba=(H+I+J+ha)*.25+(J-(H+I+J+ha)*.25)*.800000011920929;g[X+432>>2]=$;g[X+432+4>>2]=aa;g[X+432+8>>2]=ba;g[X+432+12>>2]=0.0;Pb[e&0](M,X+464|0,X+448|0,X+432|0,X+1008|0,1.0);e=c[(c[M>>2]|0)+28>>2]|0;g[X+416>>2]=ca;g[X+416+4>>2]=da;g[X+416+8>>2]=ea;g[X+416+12>>2]=0.0;g[X+400>>2]=Y;g[X+400+4>>2]=Z;g[X+400+8>>2]=_;g[X+400+12>>2]=0.0;fa=(A+B+D+fa)*.25+(fa-(A+B+D+fa)*.25)*.800000011920929;ga=(E+F+G+ga)*.25+(ga-(E+F+G+ga)*.25)*.800000011920929;ha=(H+I+J+ha)*.25+(ha-(H+I+J+ha)*.25)*.800000011920929;g[X+384>>2]=fa;g[X+384+4>>2]=ga;g[X+384+8>>2]=ha;g[X+384+12>>2]=0.0;Pb[e&0](M,X+416|0,X+400|0,X+384|0,X+1008|0,1.0);e=c[(c[M>>2]|0)+28>>2]|0;g[X+368>>2]=Y;g[X+368+4>>2]=Z;g[X+368+8>>2]=_;g[X+368+12>>2]=0.0;g[X+352>>2]=$;g[X+352+4>>2]=aa;g[X+352+8>>2]=ba;g[X+352+12>>2]=0.0;g[X+336>>2]=fa;g[X+336+4>>2]=ga;g[X+336+8>>2]=ha;g[X+336+12>>2]=0.0;Pb[e&0](M,X+368|0,X+352|0,X+336|0,X+1008|0,1.0);e=c[(c[M>>2]|0)+28>>2]|0;g[X+320>>2]=$;g[X+320+4>>2]=aa;g[X+320+8>>2]=ba;g[X+320+12>>2]=0.0;g[X+304>>2]=ca;g[X+304+4>>2]=da;g[X+304+8>>2]=ea;g[X+304+12>>2]=0.0;g[X+288>>2]=fa;g[X+288+4>>2]=ga;g[X+288+8>>2]=ha;g[X+288+12>>2]=0.0;Pb[e&0](M,X+320|0,X+304|0,X+288|0,X+1008|0,1.0);e=c[S+772>>2]|0}h=h+1|0}while((h|0)<(e|0))}}else{c[5646]=1805;c[5647]=0;e=c[S+1112>>2]|0;if((e|0)>0){K=0;do{if(a[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+377>>0]|0){r=yr(c[5646]|0,c[5647]|0,1284865837,1481765933)|0;r=Pt(r|0,C|0,1,0)|0;h=C;s=xs(r|0,h|0,33)|0;h=yr(r|0,h|0,1284865837,1481765933)|0;h=Pt(h|0,C|0,1,0)|0;r=C;t=xs(h|0,r|0,33)|0;r=yr(h|0,r|0,1284865837,1481765933)|0;r=Pt(r|0,C|0,1,0)|0;h=C;c[5646]=r;c[5647]=h;h=xs(r|0,h|0,33)|0;ha=1.0/+O(+(+(h|0)*4.656612873077393e-10*+(h|0)*4.656612873077393e-10+(+(s|0)*4.656612873077393e-10*+(s|0)*4.656612873077393e-10+ +(t|0)*4.656612873077393e-10*+(t|0)*4.656612873077393e-10)));g[X+1008>>2]=+(s|0)*4.656612873077393e-10*ha*.75;g[X+1008+4>>2]=+(t|0)*4.656612873077393e-10*ha*.75;g[X+1008+8>>2]=+(h|0)*4.656612873077393e-10*ha*.75;g[X+1008+12>>2]=0.0;h=c[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+24>>2]|0;if((h|0)>0){c[6435]=(c[6435]|0)+1;e=yc((h<<4|3)+16|0)|0;if(!e)f=0;else{c[(e+4+15&-16)+-4>>2]=e;f=e+4+15&-16}e=0;do{t=f+(e<<4)|0;c[t>>2]=c[X+816>>2];c[t+4>>2]=c[X+816+4>>2];c[t+8>>2]=c[X+816+8>>2];c[t+12>>2]=c[X+816+12>>2];e=e+1|0}while((e|0)!=(h|0));e=0;do{t=f+(e<<4)|0;s=(c[(c[(c[(c[S+1120>>2]|0)+(K<<2)>>2]|0)+32>>2]|0)+(e<<2)>>2]|0)+8|0;c[t>>2]=c[s>>2];c[t+4>>2]=c[s+4>>2];c[t+8>>2]=c[s+8>>2];c[t+12>>2]=c[s+12>>2];e=e+1|0}while((e|0)!=(h|0))}else f=0;a[X+944+16>>0]=1;c[X+944+12>>2]=0;c[X+944+4>>2]=0;c[X+944+8>>2]=0;a[X+944+36>>0]=1;c[Q>>2]=0;c[X+944+24>>2]=0;c[X+944+28>>2]=0;a[X+944+56>>0]=1;c[R>>2]=0;c[X+944+44>>2]=0;c[X+944+48>>2]=0;Dc(X+944|0,f,h);r=c[X+944+44>>2]|0;if((r|0)>0){p=c[Q>>2]|0;t=0;do{s=c[(c[R>>2]|0)+(t<<2)>>2]|0;h=c[p+(s*12|0)+4>>2]|0;e=p+(s*12|0)+(h*12|0)+((c[p+(s*12|0)+(h*12|0)>>2]|0)*12|0)|0;if((e|0)!=(p+(s*12|0)|0)){q=c[X+944+12>>2]|0;n=c[p+(s*12|0)+(h*12|0)+8>>2]|0;o=c[p+(s*12|0)+8>>2]|0;while(1){h=c[e+8>>2]|0;Pb[c[(c[M>>2]|0)+28>>2]&0](M,q+(n<<4)|0,q+(o<<4)|0,q+(h<<4)|0,X+1008|0,1.0);n=e+((c[e+4>>2]|0)*12|0)|0;e=n+((c[n>>2]|0)*12|0)|0;if((e|0)==(p+(s*12|0)|0))break;else{n=o;o=h}}}t=t+1|0}while((t|0)<(r|0))}e=c[R>>2]|0;if(e|0){if(a[X+944+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[R>>2]=0}a[X+944+56>>0]=1;c[R>>2]=0;c[X+944+44>>2]=0;c[X+944+48>>2]=0;e=c[Q>>2]|0;if(e|0){if(a[X+944+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[Q>>2]=0}a[X+944+36>>0]=1;c[Q>>2]=0;c[X+944+24>>2]=0;c[X+944+28>>2]=0;e=c[X+944+12>>2]|0;if(e|0){if(a[X+944+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[X+944+12>>2]=0}if(f|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}e=c[S+1112>>2]|0}K=K+1|0}while((K|0)<(e|0))}}if(L&64|0){if((c[S+792>>2]|0)>0){e=0;do{K=c[S+800>>2]|0;q=c[K+(e*96|0)+20>>2]|0;da=+g[K+(e*96|0)+4>>2];ea=+g[K+(e*96|0)+8>>2];fa=+g[K+(e*96|0)+12>>2];ga=da*+g[q+20>>2]+ea*+g[q+24>>2]+fa*+g[q+28>>2]+ +g[q+56>>2];ha=da*+g[q+36>>2]+ea*+g[q+40>>2]+fa*+g[q+44>>2]+ +g[q+60>>2];g[X+272>>2]=da*+g[q+4>>2]+ea*+g[q+8>>2]+fa*+g[q+12>>2]+ +g[q+52>>2];g[X+272+4>>2]=ga;g[X+272+8>>2]=ha;g[X+272+12>>2]=0.0;K=K+(e*96|0)|0;q=c[K>>2]|0;c[X+256>>2]=1065353216;c[X+256+4>>2]=0;c[X+256+8>>2]=0;g[X+256+12>>2]=0.0;t=c[(c[M>>2]|0)+8>>2]|0;ha=+g[q+8>>2];s=c[q+12>>2]|0;r=c[q+16>>2]|0;g[X+1008>>2]=ha+-.25;c[X+1008+4>>2]=s;c[X+1008+8>>2]=r;g[X+1008+12>>2]=0.0;ga=(c[k>>2]=s,+g[k>>2])+0.0;fa=(c[k>>2]=r,+g[k>>2])+0.0;g[X+944>>2]=ha+.25;g[X+944+4>>2]=ga;g[X+944+8>>2]=fa;g[X+944+12>>2]=0.0;mc[t&127](M,X+1008|0,X+944|0,X+256|0);t=c[(c[M>>2]|0)+8>>2]|0;r=c[q+8>>2]|0;fa=+g[q+12>>2];s=c[q+16>>2]|0;c[X+928>>2]=r;g[X+928+4>>2]=fa+-.25;c[X+928+8>>2]=s;g[X+928+12>>2]=0.0;ga=(c[k>>2]=r,+g[k>>2])+0.0;ha=(c[k>>2]=s,+g[k>>2])+0.0;g[X+912>>2]=ga;g[X+912+4>>2]=fa+.25;g[X+912+8>>2]=ha;g[X+912+12>>2]=0.0;mc[t&127](M,X+928|0,X+912|0,X+256|0);t=c[(c[M>>2]|0)+8>>2]|0;s=c[q+8>>2]|0;r=c[q+12>>2]|0;ha=+g[q+16>>2];c[X+896>>2]=s;c[X+896+4>>2]=r;g[X+896+8>>2]=ha+-.25;g[X+896+12>>2]=0.0;fa=(c[k>>2]=s,+g[k>>2])+0.0;ga=(c[k>>2]=r,+g[k>>2])+0.0;g[X+880>>2]=fa;g[X+880+4>>2]=ga;g[X+880+8>>2]=ha+.25;g[X+880+12>>2]=0.0;mc[t&127](M,X+896|0,X+880|0,X+256|0);c[X+240>>2]=0;c[X+240+4>>2]=1065353216;c[X+240+8>>2]=0;g[X+240+12>>2]=0.0;t=c[(c[M>>2]|0)+8>>2]|0;ha=+g[X+272>>2];r=c[X+272+4>>2]|0;s=c[X+272+8>>2]|0;g[X+1008>>2]=ha+-.25;c[X+1008+4>>2]=r;c[X+1008+8>>2]=s;g[X+1008+12>>2]=0.0;ga=(c[k>>2]=r,+g[k>>2])+0.0;fa=(c[k>>2]=s,+g[k>>2])+0.0;g[X+944>>2]=ha+.25;g[X+944+4>>2]=ga;g[X+944+8>>2]=fa;g[X+944+12>>2]=0.0;mc[t&127](M,X+1008|0,X+944|0,X+240|0);t=c[(c[M>>2]|0)+8>>2]|0;s=c[X+272>>2]|0;fa=+g[X+272+4>>2];r=c[X+272+8>>2]|0;c[X+928>>2]=s;g[X+928+4>>2]=fa+-.25;c[X+928+8>>2]=r;g[X+928+12>>2]=0.0;ga=(c[k>>2]=s,+g[k>>2])+0.0;ha=(c[k>>2]=r,+g[k>>2])+0.0;g[X+912>>2]=ga;g[X+912+4>>2]=fa+.25;g[X+912+8>>2]=ha;g[X+912+12>>2]=0.0;mc[t&127](M,X+928|0,X+912|0,X+240|0);t=c[(c[M>>2]|0)+8>>2]|0;r=c[X+272>>2]|0;s=c[X+272+4>>2]|0;ha=+g[X+272+8>>2];c[X+896>>2]=r;c[X+896+4>>2]=s;g[X+896+8>>2]=ha+-.25;g[X+896+12>>2]=0.0;fa=(c[k>>2]=r,+g[k>>2])+0.0;ga=(c[k>>2]=s,+g[k>>2])+0.0;g[X+880>>2]=fa;g[X+880+4>>2]=ga;g[X+880+8>>2]=ha+.25;g[X+880+12>>2]=0.0;mc[t&127](M,X+896|0,X+880|0,X+240|0);t=c[(c[M>>2]|0)+8>>2]|0;K=(c[K>>2]|0)+8|0;c[X+224>>2]=1065353216;c[X+224+4>>2]=1065353216;c[X+224+8>>2]=1065353216;g[X+224+12>>2]=0.0;mc[t&127](M,K,X+272|0,X+224|0);e=e+1|0}while((e|0)<(c[S+792>>2]|0))}e=c[S+712>>2]|0;if((e|0)>0){h=0;do{f=c[S+720>>2]|0;if((c[(c[f+(h*104|0)+4>>2]|0)+16>>2]&1|0)!=0?+g[f+(h*104|0)+88>>2]<=0.0:0){t=f+(h*104|0)+8|0;c[X+208>>2]=1065353216;c[X+208+4>>2]=0;c[X+208+8>>2]=0;g[X+208+12>>2]=0.0;e=c[(c[M>>2]|0)+8>>2]|0;ha=+g[t>>2];K=f+(h*104|0)+12|0;r=c[K>>2]|0;s=f+(h*104|0)+16|0;q=c[s>>2]|0;g[X+1008>>2]=ha+-.25;c[X+1008+4>>2]=r;c[X+1008+8>>2]=q;g[X+1008+12>>2]=0.0;ga=(c[k>>2]=r,+g[k>>2])+0.0;fa=(c[k>>2]=q,+g[k>>2])+0.0;g[X+944>>2]=ha+.25;g[X+944+4>>2]=ga;g[X+944+8>>2]=fa;g[X+944+12>>2]=0.0;mc[e&127](M,X+1008|0,X+944|0,X+208|0);e=c[(c[M>>2]|0)+8>>2]|0;q=c[t>>2]|0;fa=+g[K>>2];r=c[s>>2]|0;c[X+928>>2]=q;g[X+928+4>>2]=fa+-.25;c[X+928+8>>2]=r;g[X+928+12>>2]=0.0;ga=(c[k>>2]=q,+g[k>>2])+0.0;ha=(c[k>>2]=r,+g[k>>2])+0.0;g[X+912>>2]=ga;g[X+912+4>>2]=fa+.25;g[X+912+8>>2]=ha;g[X+912+12>>2]=0.0;mc[e&127](M,X+928|0,X+912|0,X+208|0);e=c[(c[M>>2]|0)+8>>2]|0;t=c[t>>2]|0;K=c[K>>2]|0;ha=+g[s>>2];c[X+896>>2]=t;c[X+896+4>>2]=K;g[X+896+8>>2]=ha+-.25;g[X+896+12>>2]=0.0;fa=(c[k>>2]=t,+g[k>>2])+0.0;ga=(c[k>>2]=K,+g[k>>2])+0.0;g[X+880>>2]=fa;g[X+880+4>>2]=ga;g[X+880+8>>2]=ha+.25;g[X+880+12>>2]=0.0;mc[e&127](M,X+896|0,X+880|0,X+208|0);e=c[S+712>>2]|0}h=h+1|0}while((h|0)<(e|0))}}if(L&128|0?(c[S+692>>2]|0)>0:0){h=0;do{e=c[S+700>>2]|0;f=e+(h*60|0)+8|0;c[X+1008>>2]=c[f>>2];c[X+1008+4>>2]=c[f+4>>2];c[X+1008+8>>2]=c[f+8>>2];c[X+1008+12>>2]=c[f+12>>2];f=c[e+(h*60|0)+24>>2]|0;if((f|0)>0){j=+g[X+1008>>2];l=+g[X+1008+4>>2];m=+g[X+1008+8>>2];n=0;do{K=c[e+(h*60|0)+28+(n<<2)>>2]|0;fa=+g[e+(h*60|0)+44+(n<<2)>>2];ga=fa*+g[K+12>>2];ha=fa*+g[K+16>>2];j=+g[K+8>>2]*fa+j;g[X+1008>>2]=j;l=ga+l;g[X+1008+4>>2]=l;m=ha+m;g[X+1008+8>>2]=m;n=n+1|0}while((n|0)!=(f|0))}ic[c[(c[M>>2]|0)+40>>2]&127](M,X+1008|0,c[e+(h*60|0)+4>>2]|0);h=h+1|0}while((h|0)<(c[S+692>>2]|0))}if(L&512|0){K=c[S+928>>2]|0;c[X+1008>>2]=1065353216;c[X+1008+4>>2]=0;c[X+1008+8>>2]=1065353216;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=1065353216;c[X+944+8>>2]=1065353216;g[X+944+12>>2]=0.0;Of(M,K,0,X+1008|0,X+944|0)}if(L&1024|0){K=c[S+988>>2]|0;c[X+1008>>2]=0;c[X+1008+4>>2]=1065353216;c[X+1008+8>>2]=0;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=0;c[X+944+8>>2]=0;g[X+944+12>>2]=0.0;Of(M,K,0,X+1008|0,X+944|0)}if(L&2048|0){K=c[S+1048>>2]|0;c[X+1008>>2]=0;c[X+1008+4>>2]=1065353216;c[X+1008+8>>2]=1065353216;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=0;c[X+944+8>>2]=0;g[X+944+12>>2]=0.0;Of(M,K,0,X+1008|0,X+944|0)}a:do if(L&4096|0?(c[S+852>>2]|0)>0:0){f=0;while(1){e=c[(c[S+860>>2]|0)+(f<<2)>>2]|0;switch(Eb[c[(c[e>>2]|0)+20>>2]&127](e)|0){case 0:{L=ri(e+4|0)|0;ha=+g[e+28>>2];ga=+g[e+32>>2];fa=+g[e+36>>2];ea=ha*+g[L+16>>2]+ga*+g[L+20>>2]+fa*+g[L+24>>2]+ +g[L+52>>2];da=ha*+g[L+32>>2]+ga*+g[L+36>>2]+fa*+g[L+40>>2]+ +g[L+56>>2];g[X+272>>2]=ha*+g[L>>2]+ga*+g[L+4>>2]+fa*+g[L+8>>2]+ +g[L+48>>2];g[X+272+4>>2]=ea;g[X+272+8>>2]=da;g[X+272+12>>2]=0.0;L=ri(e+16|0)|0;da=+g[e+44>>2];ea=+g[e+48>>2];fa=+g[e+52>>2];ga=da*+g[L+16>>2]+ea*+g[L+20>>2]+fa*+g[L+24>>2]+ +g[L+52>>2];ha=da*+g[L+32>>2]+ea*+g[L+36>>2]+fa*+g[L+40>>2]+ +g[L+56>>2];g[X+192>>2]=da*+g[L>>2]+ea*+g[L+4>>2]+fa*+g[L+8>>2]+ +g[L+48>>2];g[X+192+4>>2]=ga;g[X+192+8>>2]=ha;g[X+192+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;K=(ri(e+4|0)|0)+48|0;c[X+176>>2]=1065353216;c[X+176+4>>2]=1065353216;c[X+176+8>>2]=0;g[X+176+12>>2]=0.0;mc[L&127](M,K,X+272|0,X+176|0);K=c[(c[M>>2]|0)+8>>2]|0;L=(ri(e+16|0)|0)+48|0;c[X+160>>2]=0;c[X+160+4>>2]=1065353216;c[X+160+8>>2]=1065353216;g[X+160+12>>2]=0.0;mc[K&127](M,L,X+192|0,X+160|0);c[X+144>>2]=1065353216;c[X+144+4>>2]=1065353216;c[X+144+8>>2]=0;g[X+144+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;ha=+g[X+272>>2];K=c[X+272+4>>2]|0;t=c[X+272+8>>2]|0;g[X+1008>>2]=ha+-.25;c[X+1008+4>>2]=K;c[X+1008+8>>2]=t;g[X+1008+12>>2]=0.0;ga=(c[k>>2]=K,+g[k>>2])+0.0;fa=(c[k>>2]=t,+g[k>>2])+0.0;g[X+944>>2]=ha+.25;g[X+944+4>>2]=ga;g[X+944+8>>2]=fa;g[X+944+12>>2]=0.0;mc[L&127](M,X+1008|0,X+944|0,X+144|0);L=c[(c[M>>2]|0)+8>>2]|0;t=c[X+272>>2]|0;fa=+g[X+272+4>>2];K=c[X+272+8>>2]|0;c[X+928>>2]=t;g[X+928+4>>2]=fa+-.25;c[X+928+8>>2]=K;g[X+928+12>>2]=0.0;ga=(c[k>>2]=t,+g[k>>2])+0.0;ha=(c[k>>2]=K,+g[k>>2])+0.0;g[X+912>>2]=ga;g[X+912+4>>2]=fa+.25;g[X+912+8>>2]=ha;g[X+912+12>>2]=0.0;mc[L&127](M,X+928|0,X+912|0,X+144|0);L=c[(c[M>>2]|0)+8>>2]|0;K=c[X+272>>2]|0;t=c[X+272+4>>2]|0;ha=+g[X+272+8>>2];c[X+896>>2]=K;c[X+896+4>>2]=t;g[X+896+8>>2]=ha+-.25;g[X+896+12>>2]=0.0;fa=(c[k>>2]=K,+g[k>>2])+0.0;ga=(c[k>>2]=t,+g[k>>2])+0.0;g[X+880>>2]=fa;g[X+880+4>>2]=ga;g[X+880+8>>2]=ha+.25;g[X+880+12>>2]=0.0;mc[L&127](M,X+896|0,X+880|0,X+144|0);c[X+128>>2]=0;c[X+128+4>>2]=1065353216;c[X+128+8>>2]=1065353216;g[X+128+12>>2]=0.0;L=c[(c[M>>2]|0)+8>>2]|0;ha=+g[X+192>>2];t=c[X+192+4>>2]|0;K=c[X+192+8>>2]|0;g[X+1008>>2]=ha+-.25;c[X+1008+4>>2]=t;c[X+1008+8>>2]=K;g[X+1008+12>>2]=0.0;ga=(c[k>>2]=t,+g[k>>2])+0.0;fa=(c[k>>2]=K,+g[k>>2])+0.0;g[X+944>>2]=ha+.25;g[X+944+4>>2]=ga;g[X+944+8>>2]=fa;g[X+944+12>>2]=0.0;mc[L&127](M,X+1008|0,X+944|0,X+128|0);L=c[(c[M>>2]|0)+8>>2]|0;K=c[X+192>>2]|0;fa=+g[X+192+4>>2];t=c[X+192+8>>2]|0;c[X+928>>2]=K;g[X+928+4>>2]=fa+-.25;c[X+928+8>>2]=t;g[X+928+12>>2]=0.0;ga=(c[k>>2]=K,+g[k>>2])+0.0;ha=(c[k>>2]=t,+g[k>>2])+0.0;g[X+912>>2]=ga;g[X+912+4>>2]=fa+.25;g[X+912+8>>2]=ha;g[X+912+12>>2]=0.0;mc[L&127](M,X+928|0,X+912|0,X+128|0);L=c[(c[M>>2]|0)+8>>2]|0;t=c[X+192>>2]|0;K=c[X+192+4>>2]|0;ha=+g[X+192+8>>2];c[X+896>>2]=t;c[X+896+4>>2]=K;g[X+896+8>>2]=ha+-.25;g[X+896+12>>2]=0.0;fa=(c[k>>2]=t,+g[k>>2])+0.0;ga=(c[k>>2]=K,+g[k>>2])+0.0;g[X+880>>2]=fa;g[X+880+4>>2]=ga;g[X+880+8>>2]=ha+.25;g[X+880+12>>2]=0.0;mc[L&127](M,X+896|0,X+880|0,X+128|0);break}case 1:{L=(ri(e+4|0)|0)+48|0;c[X+1008>>2]=c[L>>2];c[X+1008+4>>2]=c[L+4>>2];c[X+1008+8>>2]=c[L+8>>2];c[X+1008+12>>2]=c[L+12>>2];L=(ri(e+16|0)|0)+48|0;c[X+944>>2]=c[L>>2];c[X+944+4>>2]=c[L+4>>2];c[X+944+8>>2]=c[L+8>>2];c[X+944+12>>2]=c[L+12>>2];L=ri(e+4|0)|0;ba=+g[e+28>>2];aa=+g[e+32>>2];ea=+g[e+36>>2];ca=+g[L>>2]*ba+ +g[L+4>>2]*aa+ +g[L+8>>2]*ea;da=ba*+g[L+16>>2]+aa*+g[L+20>>2]+ea*+g[L+24>>2];ea=ba*+g[L+32>>2]+aa*+g[L+36>>2]+ea*+g[L+40>>2];L=ri(e+16|0)|0;aa=+g[e+44>>2];ba=+g[e+48>>2];ha=+g[e+52>>2];fa=+g[L>>2]*aa+ +g[L+4>>2]*ba+ +g[L+8>>2]*ha;ga=aa*+g[L+16>>2]+ba*+g[L+20>>2]+ha*+g[L+24>>2];ha=aa*+g[L+32>>2]+ba*+g[L+36>>2]+ha*+g[L+40>>2];L=c[(c[M>>2]|0)+8>>2]|0;ba=da*10.0+ +g[X+1008+4>>2];aa=ea*10.0+ +g[X+1008+8>>2];g[X+112>>2]=ca*10.0+ +g[X+1008>>2];g[X+112+4>>2]=ba;g[X+112+8>>2]=aa;g[X+112+12>>2]=0.0;c[X+96>>2]=1065353216;c[X+96+4>>2]=1065353216;c[X+96+8>>2]=0;g[X+96+12>>2]=0.0;mc[L&127](M,X+1008|0,X+112|0,X+96|0);L=c[(c[M>>2]|0)+8>>2]|0;aa=ga*10.0+ +g[X+1008+4>>2];ba=ha*10.0+ +g[X+1008+8>>2];g[X+80>>2]=fa*10.0+ +g[X+1008>>2];g[X+80+4>>2]=aa;g[X+80+8>>2]=ba;g[X+80+12>>2]=0.0;c[X+64>>2]=1065353216;c[X+64+4>>2]=1065353216;c[X+64+8>>2]=0;g[X+64+12>>2]=0.0;mc[L&127](M,X+1008|0,X+80|0,X+64|0);L=c[(c[M>>2]|0)+8>>2]|0;da=da*10.0+ +g[X+944+4>>2];ea=ea*10.0+ +g[X+944+8>>2];g[X+48>>2]=ca*10.0+ +g[X+944>>2];g[X+48+4>>2]=da;g[X+48+8>>2]=ea;g[X+48+12>>2]=0.0;c[X+32>>2]=0;c[X+32+4>>2]=1065353216;c[X+32+8>>2]=1065353216;g[X+32+12>>2]=0.0;mc[L&127](M,X+944|0,X+48|0,X+32|0);L=c[(c[M>>2]|0)+8>>2]|0;ga=ga*10.0+ +g[X+944+4>>2];ha=ha*10.0+ +g[X+944+8>>2];g[X+16>>2]=fa*10.0+ +g[X+944>>2];g[X+16+4>>2]=ga;g[X+16+8>>2]=ha;g[X+16+12>>2]=0.0;c[X>>2]=0;c[X+4>>2]=1065353216;c[X+8>>2]=1065353216;g[X+12>>2]=0.0;mc[L&127](M,X+944|0,X+16|0,X);break}default:{}}f=f+1|0;if((f|0)>=(c[S+852>>2]|0))break a}}while(0)}e=c[d+72>>2]|0;if(e|0?(Eb[c[(c[e>>2]|0)+48>>2]&127](e)|0)&2|0:0){e=b[d+348>>1]|0;if(!((e&255)<<24>>24))e=(e&65535)>>>8&255;else{M=c[d+72>>2]|0;e=c[S+928>>2]|0;c[X+1008>>2]=1065353216;c[X+1008+4>>2]=0;c[X+1008+8>>2]=1065353216;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=1065353216;c[X+944+8>>2]=1065353216;g[X+944+12>>2]=0.0;Of(M,e,0,X+1008|0,X+944|0);e=a[d+349>>0]|0}if(e<<24>>24){L=c[d+72>>2]|0;M=c[S+988>>2]|0;c[X+1008>>2]=0;c[X+1008+4>>2]=1065353216;c[X+1008+8>>2]=0;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=0;c[X+944+8>>2]=0;g[X+944+12>>2]=0.0;Of(L,M,0,X+1008|0,X+944|0)}if(a[d+350>>0]|0){M=c[d+72>>2]|0;S=c[S+1048>>2]|0;c[X+1008>>2]=0;c[X+1008+4>>2]=1065353216;c[X+1008+8>>2]=1065353216;g[X+1008+12>>2]=0.0;c[X+944>>2]=1065353216;c[X+944+4>>2]=0;c[X+944+8>>2]=0;g[X+944+12>>2]=0.0;Of(M,S,0,X+1008|0,X+944|0)}}W=W+1|0}while((W|0)<(c[d+328>>2]|0));i=X;return}function qc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0,m=0.0,n=0.0,o=0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0.0,ha=0.0,ia=0.0;fa=i;i=i+80|0;if((e|0)<=0){i=fa;return}ca=0;do{X=c[d+(ca<<2)>>2]|0;Y=c[X+740>>2]|0;Z=c[X+744>>2]|0;_=bk(b,Y,+g[f+12>>2])|0;$=bk(b,Z,+g[f+12>>2])|0;aa=c[b+16>>2]|0;if(!(((((+g[aa+(_*244|0)+128>>2]==0.0?+g[aa+(_*244|0)+132>>2]==0.0:0)?+g[aa+(_*244|0)+136>>2]==0.0:0)?+g[aa+($*244|0)+128>>2]==0.0:0)?+g[aa+($*244|0)+132>>2]==0.0:0)?+g[aa+($*244|0)+136>>2]==0.0:0))ea=9;if((ea|0)==9?(ea=0,ba=c[X+748>>2]|0,(ba|0)>0):0){j=ba;da=0;h=1;do{U=X+4+(da*184|0)|0;D=X+4+(da*184|0)+80|0;if(+g[D>>2]<=+g[X+756>>2]){V=c[b+28>>2]|0;if((V|0)==(c[b+32>>2]|0)?(W=V|0?V<<1:1,(V|0)<(W|0)):0){if(!W){j=0;l=V}else{c[6435]=(c[6435]|0)+1;j=yc((W*152|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=c[b+28>>2]|0}if((l|0)>0){o=0;do{bn(j+(o*152|0)|0,(c[b+36>>2]|0)+(o*152|0)|0,152)|0;o=o+1|0}while((o|0)!=(l|0))}l=c[b+36>>2]|0;if(l|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=j;c[b+32>>2]=W;j=c[b+28>>2]|0}else j=V;c[b+28>>2]=j+1;T=c[b+36>>2]|0;G=(c[Y+236>>2]&2|0)==0?0:Y;H=(c[Z+236>>2]&2|0)==0?0:Z;c[T+(V*152|0)+144>>2]=_;c[T+(V*152|0)+148>>2]=$;c[T+(V*152|0)+132>>2]=U;z=+g[X+4+(da*184|0)+48>>2]-+g[Y+52>>2];A=+g[X+4+(da*184|0)+52>>2]-+g[Y+56>>2];y=+g[X+4+(da*184|0)+56>>2]-+g[Y+60>>2];g[fa+64>>2]=z;g[fa+64+4>>2]=A;g[fa+64+8>>2]=y;g[fa+64+12>>2]=0.0;C=+g[X+4+(da*184|0)+32>>2]-+g[Z+52>>2];E=+g[X+4+(da*184|0)+36>>2]-+g[Z+56>>2];B=+g[X+4+(da*184|0)+40>>2]-+g[Z+60>>2];g[fa+48>>2]=C;g[fa+48+4>>2]=E;g[fa+48+8>>2]=B;g[fa+48+12>>2]=0.0;if(!(c[aa+(_*244|0)+240>>2]|0)){j=0;o=0;r=0}else{M=+g[aa+(_*244|0)+192>>2]+ +g[aa+(_*244|0)+224>>2];P=+g[aa+(_*244|0)+196>>2]+ +g[aa+(_*244|0)+228>>2];L=+g[aa+(_*244|0)+200>>2]+ +g[aa+(_*244|0)+232>>2];j=(g[k>>2]=+g[aa+(_*244|0)+176>>2]+ +g[aa+(_*244|0)+208>>2]+(P*y-L*A),c[k>>2]|0);o=(g[k>>2]=+g[aa+(_*244|0)+180>>2]+ +g[aa+(_*244|0)+212>>2]+(L*z-M*y),c[k>>2]|0);r=(g[k>>2]=+g[aa+(_*244|0)+184>>2]+ +g[aa+(_*244|0)+216>>2]+(M*A-P*z),c[k>>2]|0)}if(!(c[aa+($*244|0)+240>>2]|0)){l=0;q=0;s=0}else{M=+g[aa+($*244|0)+192>>2]+ +g[aa+($*244|0)+224>>2];P=+g[aa+($*244|0)+196>>2]+ +g[aa+($*244|0)+228>>2];L=+g[aa+($*244|0)+200>>2]+ +g[aa+($*244|0)+232>>2];l=(g[k>>2]=+g[aa+($*244|0)+176>>2]+ +g[aa+($*244|0)+208>>2]+(P*B-L*E),c[k>>2]|0);q=(g[k>>2]=+g[aa+($*244|0)+180>>2]+ +g[aa+($*244|0)+212>>2]+(L*C-M*B),c[k>>2]|0);s=(g[k>>2]=+g[aa+($*244|0)+184>>2]+ +g[aa+($*244|0)+216>>2]+(M*E-P*C),c[k>>2]|0)}P=(c[k>>2]=j,+g[k>>2]);P=P-(c[k>>2]=l,+g[k>>2]);M=(c[k>>2]=o,+g[k>>2]);M=M-(c[k>>2]=q,+g[k>>2]);I=(c[k>>2]=r,+g[k>>2]);I=I-(c[k>>2]=s,+g[k>>2]);Q=X+4+(da*184|0)+64|0;J=+g[Q>>2];R=X+4+(da*184|0)+68|0;K=+g[R>>2];S=X+4+(da*184|0)+72|0;L=+g[S>>2];s=c[b+16>>2]|0;q=c[s+(_*244|0)+240>>2]|0;r=c[s+($*244|0)+240>>2]|0;if(q|0){o=(g[k>>2]=((A*L-y*K)*+g[q+264>>2]+(y*J-L*z)*+g[q+268>>2]+(K*z-A*J)*+g[q+272>>2])*+g[q+544>>2],c[k>>2]|0);j=(g[k>>2]=((A*L-y*K)*+g[q+280>>2]+(y*J-L*z)*+g[q+284>>2]+(K*z-A*J)*+g[q+288>>2])*+g[q+548>>2],c[k>>2]|0);l=(g[k>>2]=((A*L-y*K)*+g[q+296>>2]+(y*J-L*z)*+g[q+300>>2]+(K*z-A*J)*+g[q+304>>2])*+g[q+552>>2],c[k>>2]|0)}else{o=0;j=0;l=0}c[T+(V*152|0)+64>>2]=o;c[T+(V*152|0)+68>>2]=j;c[T+(V*152|0)+72>>2]=l;g[T+(V*152|0)+76>>2]=0.0;v=+g[S>>2];w=+g[R>>2];x=+g[Q>>2];u=(c[k>>2]=j,+g[k>>2]);t=(c[k>>2]=l,+g[k>>2]);n=(c[k>>2]=o,+g[k>>2]);if(r|0){j=(g[k>>2]=(+g[r+264>>2]*-(E*v-B*w)+ +g[r+268>>2]*-(B*x-v*C)+ +g[r+272>>2]*-(w*C-E*x))*+g[r+544>>2],c[k>>2]|0);l=(g[k>>2]=(+g[r+280>>2]*-(E*v-B*w)+ +g[r+284>>2]*-(B*x-v*C)+ +g[r+288>>2]*-(w*C-E*x))*+g[r+548>>2],c[k>>2]|0);o=(g[k>>2]=(+g[r+296>>2]*-(E*v-B*w)+ +g[r+300>>2]*-(B*x-v*C)+ +g[r+304>>2]*-(w*C-E*x))*+g[r+552>>2],c[k>>2]|0)}else{j=0;l=0;o=0}c[T+(V*152|0)+80>>2]=j;c[T+(V*152|0)+84>>2]=l;c[T+(V*152|0)+88>>2]=o;g[T+(V*152|0)+92>>2]=0.0;p=(c[k>>2]=j,+g[k>>2]);m=(c[k>>2]=l,+g[k>>2]);if(q|0)n=+g[q+344>>2]+((u*y-t*A)*+g[Q>>2]+(t*z-y*n)*+g[R>>2]+(A*n-u*z)*+g[S>>2]);else n=0.0;if(r|0){F=-(c[k>>2]=o,+g[k>>2]);m=+g[r+344>>2]+((B*-m-E*F)*+g[Q>>2]+(C*F-B*-p)*+g[R>>2]+(E*-p-C*-m)*+g[S>>2])}else m=0.0;g[T+(V*152|0)+108>>2]=1.0/(n+m);if(q|0){c[T+(V*152|0)+16>>2]=c[Q>>2];c[T+(V*152|0)+16+4>>2]=c[Q+4>>2];c[T+(V*152|0)+16+8>>2]=c[Q+8>>2];c[T+(V*152|0)+16+12>>2]=c[Q+12>>2];g[T+(V*152|0)>>2]=A*L-y*K;g[T+(V*152|0)+4>>2]=y*J-L*z;g[T+(V*152|0)+8>>2]=K*z-A*J;g[T+(V*152|0)+12>>2]=0.0}else{c[T+(V*152|0)>>2]=0;c[T+(V*152|0)+4>>2]=0;c[T+(V*152|0)+8>>2]=0;c[T+(V*152|0)+12>>2]=0;c[T+(V*152|0)+16>>2]=0;c[T+(V*152|0)+20>>2]=0;c[T+(V*152|0)+24>>2]=0;c[T+(V*152|0)+28>>2]=0}if(r|0){u=-+g[R>>2];F=-+g[S>>2];g[T+(V*152|0)+48>>2]=-+g[Q>>2];g[T+(V*152|0)+52>>2]=u;g[T+(V*152|0)+56>>2]=F;g[T+(V*152|0)+60>>2]=0.0;g[T+(V*152|0)+32>>2]=-(E*v-B*w);g[T+(V*152|0)+36>>2]=-(B*x-v*C);g[T+(V*152|0)+40>>2]=-(w*C-E*x);g[T+(V*152|0)+44>>2]=0.0}else{c[T+(V*152|0)+32>>2]=0;c[T+(V*152|0)+32+4>>2]=0;c[T+(V*152|0)+32+8>>2]=0;c[T+(V*152|0)+32+12>>2]=0;c[T+(V*152|0)+32+16>>2]=0;c[T+(V*152|0)+32+20>>2]=0;c[T+(V*152|0)+32+24>>2]=0;c[T+(V*152|0)+32+28>>2]=0}F=+g[D>>2]+ +g[f+56>>2];if(q|0){t=+g[q+332>>2];u=+g[q+336>>2];x=+g[q+328>>2];v=t*y-u*A+ +g[q+312>>2];u=+g[q+316>>2]+(u*z-y*x);t=A*x-t*z+ +g[q+320>>2]}else{v=0.0;u=0.0;t=0.0}if(r|0){m=+g[r+332>>2];n=+g[r+336>>2];A=+g[r+328>>2];p=m*B-n*E+ +g[r+312>>2];n=+g[r+316>>2]+(n*C-B*A);m=E*A-m*C+ +g[r+320>>2]}else{p=0.0;n=0.0;m=0.0}C=(v-p)*+g[Q>>2]+(u-n)*+g[R>>2]+(t-m)*+g[S>>2];c[T+(V*152|0)+104>>2]=c[X+4+(da*184|0)+84>>2];C=-(C*+g[X+4+(da*184|0)+92>>2]);C=C<=0.0?0.0:C;do if(!(c[f+64>>2]&4))g[T+(V*152|0)+100>>2]=0.0;else{m=+g[X+4+(da*184|0)+120>>2]*+g[f+60>>2];g[T+(V*152|0)+100>>2]=m;do if(q|0){if(!(c[s+(_*244|0)+240>>2]|0))break;E=m*+g[T+(V*152|0)+20>>2]*+g[s+(_*244|0)+132>>2]*+g[q+352>>2]*+g[s+(_*244|0)+116>>2];B=m*+g[T+(V*152|0)+24>>2]*+g[s+(_*244|0)+136>>2]*+g[q+356>>2]*+g[s+(_*244|0)+120>>2];g[s+(_*244|0)+64>>2]=+g[s+(_*244|0)+112>>2]*m*+g[T+(V*152|0)+16>>2]*+g[s+(_*244|0)+128>>2]*+g[q+348>>2]+ +g[s+(_*244|0)+64>>2];g[s+(_*244|0)+68>>2]=E+ +g[s+(_*244|0)+68>>2];g[s+(_*244|0)+72>>2]=B+ +g[s+(_*244|0)+72>>2];B=m*+g[s+(_*244|0)+100>>2]*+g[T+(V*152|0)+68>>2];E=m*+g[s+(_*244|0)+104>>2]*+g[T+(V*152|0)+72>>2];g[s+(_*244|0)+80>>2]=m*+g[s+(_*244|0)+96>>2]*+g[T+(V*152|0)+64>>2]+ +g[s+(_*244|0)+80>>2];g[s+(_*244|0)+84>>2]=B+ +g[s+(_*244|0)+84>>2];g[s+(_*244|0)+88>>2]=E+ +g[s+(_*244|0)+88>>2]}while(0);if(!r)break;m=+g[T+(V*152|0)+100>>2];if(!(c[s+($*244|0)+240>>2]|0))break;E=+g[T+(V*152|0)+88>>2];B=+g[T+(V*152|0)+84>>2];A=+g[T+(V*152|0)+80>>2];y=m*+g[T+(V*152|0)+52>>2]*+g[s+($*244|0)+132>>2]*+g[r+352>>2]*+g[s+($*244|0)+116>>2];z=m*+g[T+(V*152|0)+56>>2]*+g[s+($*244|0)+136>>2]*+g[r+356>>2]*+g[s+($*244|0)+120>>2];g[s+($*244|0)+64>>2]=+g[s+($*244|0)+112>>2]*m*+g[T+(V*152|0)+48>>2]*+g[s+($*244|0)+128>>2]*+g[r+348>>2]+ +g[s+($*244|0)+64>>2];g[s+($*244|0)+68>>2]=y+ +g[s+($*244|0)+68>>2];g[s+($*244|0)+72>>2]=z+ +g[s+($*244|0)+72>>2];B=B*+g[s+($*244|0)+100>>2]*-m;E=E*+g[s+($*244|0)+104>>2]*-m;g[s+($*244|0)+80>>2]=+g[s+($*244|0)+80>>2]-A*+g[s+($*244|0)+96>>2]*-m;g[s+($*244|0)+84>>2]=+g[s+($*244|0)+84>>2]-B;g[s+($*244|0)+88>>2]=+g[s+($*244|0)+88>>2]-E}while(0);g[T+(V*152|0)+96>>2]=0.0;if(!(c[s+(_*244|0)+240>>2]|0)){m=0.0;n=0.0;p=0.0;w=0.0;x=0.0;y=0.0}else{m=+g[s+(_*244|0)+208>>2];n=+g[s+(_*244|0)+212>>2];p=+g[s+(_*244|0)+216>>2];w=+g[s+(_*244|0)+224>>2];x=+g[s+(_*244|0)+228>>2];y=+g[s+(_*244|0)+232>>2]}if(!(c[s+($*244|0)+240>>2]|0)){t=0.0;u=0.0;v=0.0;z=0.0;A=0.0;B=0.0}else{t=+g[s+($*244|0)+208>>2];u=+g[s+($*244|0)+212>>2];v=+g[s+($*244|0)+216>>2];z=+g[s+($*244|0)+224>>2];A=+g[s+($*244|0)+228>>2];B=+g[s+($*244|0)+232>>2]}m=C-((m+ +g[s+(_*244|0)+176>>2])*+g[T+(V*152|0)+16>>2]+(n+ +g[s+(_*244|0)+180>>2])*+g[T+(V*152|0)+20>>2]+(p+ +g[s+(_*244|0)+184>>2])*+g[T+(V*152|0)+24>>2]+((w+ +g[s+(_*244|0)+192>>2])*+g[T+(V*152|0)>>2]+(x+ +g[s+(_*244|0)+196>>2])*+g[T+(V*152|0)+4>>2]+(y+ +g[s+(_*244|0)+200>>2])*+g[T+(V*152|0)+8>>2])+((t+ +g[s+($*244|0)+176>>2])*+g[T+(V*152|0)+48>>2]+(u+ +g[s+($*244|0)+180>>2])*+g[T+(V*152|0)+52>>2]+(v+ +g[s+($*244|0)+184>>2])*+g[T+(V*152|0)+56>>2]+((z+ +g[s+($*244|0)+192>>2])*+g[T+(V*152|0)+32>>2]+(A+ +g[s+($*244|0)+196>>2])*+g[T+(V*152|0)+36>>2]+(B+ +g[s+($*244|0)+200>>2])*+g[T+(V*152|0)+40>>2])));j=(c[f+44>>2]|0)==0;n=+g[f+12>>2];if(F>0.0){p=0.0;m=m-F/n}else p=-(F*+g[(j|F>+g[f+48>>2]?f+32|0:f+36|0)>>2])/n;E=+g[T+(V*152|0)+108>>2];n=p*E;m=m*E;if(j|F>+g[f+48>>2]){g[T+(V*152|0)+112>>2]=n+m;g[T+(V*152|0)+128>>2]=0.0}else{g[T+(V*152|0)+112>>2]=m;g[T+(V*152|0)+128>>2]=n}g[T+(V*152|0)+116>>2]=0.0;g[T+(V*152|0)+120>>2]=0.0;g[T+(V*152|0)+124>>2]=1.0e10;c[T+(V*152|0)+140>>2]=c[b+68>>2];if(!G){l=0;r=0;s=0}else{l=c[G+328>>2]|0;r=c[G+332>>2]|0;s=c[G+336>>2]|0}if(!H){j=0;o=0;q=0}else{j=c[H+328>>2]|0;o=c[H+332>>2]|0;q=c[H+336>>2]|0}p=(c[k>>2]=j,+g[k>>2]);p=p-(c[k>>2]=l,+g[k>>2]);n=(c[k>>2]=o,+g[k>>2]);n=n-(c[k>>2]=r,+g[k>>2]);t=(c[k>>2]=q,+g[k>>2]);t=t-(c[k>>2]=s,+g[k>>2]);g[fa+32>>2]=p;g[fa+32+4>>2]=n;g[fa+32+8>>2]=t;g[fa+32+12>>2]=0.0;do if((h|0)>0?+g[X+4+(da*184|0)+88>>2]>0.0:0){h=h+-1|0;m=+O(+(p*p+n*n+t*t));if(m>+g[f+80>>2]){g[fa+32>>2]=p*(1.0/m);g[fa+32+4>>2]=n*(1.0/m);g[fa+32+8>>2]=t*(1.0/m);if(!(c[Y+180>>2]&2)){p=p*(1.0/m);n=n*(1.0/m);m=t*(1.0/m)}else{u=+g[Y+4>>2];x=+g[Y+20>>2];A=+g[Y+36>>2];v=+g[Y+8>>2];y=+g[Y+24>>2];C=+g[Y+40>>2];w=+g[Y+12>>2];z=+g[Y+28>>2];F=+g[Y+44>>2];B=(u*p*(1.0/m)+x*n*(1.0/m)+t*(1.0/m)*A)*+g[Y+164>>2];E=(p*(1.0/m)*v+n*(1.0/m)*y+t*(1.0/m)*C)*+g[Y+168>>2];m=(p*(1.0/m)*w+n*(1.0/m)*z+t*(1.0/m)*F)*+g[Y+172>>2];g[fa+32>>2]=u*B+v*E+w*m;g[fa+32+4>>2]=x*B+y*E+z*m;g[fa+32+8>>2]=A*B+C*E+F*m;g[fa+32+12>>2]=0.0;p=u*B+v*E+w*m;n=x*B+y*E+z*m;m=A*B+C*E+F*m}if(c[Z+180>>2]&2){u=+g[Z+4>>2];x=+g[Z+20>>2];A=+g[Z+36>>2];v=+g[Z+8>>2];y=+g[Z+24>>2];C=+g[Z+40>>2];w=+g[Z+12>>2];z=+g[Z+28>>2];F=+g[Z+44>>2];B=(u*p+x*n+A*m)*+g[Z+164>>2];E=(p*v+n*y+m*C)*+g[Z+168>>2];m=(p*w+n*z+m*F)*+g[Z+172>>2];g[fa+32>>2]=u*B+v*E+w*m;g[fa+32+4>>2]=x*B+y*E+z*m;g[fa+32+8>>2]=A*B+C*E+F*m;g[fa+32+12>>2]=0.0;p=u*B+v*E+w*m;n=x*B+y*E+z*m;m=A*B+C*E+F*m}if(!(+O(+(p*p+n*n+m*m))>.001))break;Nd(b,fa+32|0,_,$,V,U);break}Nd(b,Q,_,$,V,U);m=+g[S>>2];if(+N(+m)>.7071067690849304){F=+g[R>>2];E=1.0/+O(+(m*m+F*F));g[fa+16>>2]=0.0;g[fa+16+4>>2]=-(E*m);g[fa+16+8>>2]=E*F;g[fa>>2]=(m*m+F*F)*E;n=+g[Q>>2];g[fa+4>>2]=-(E*F*n);w=n*-(E*m);p=0.0;u=-(E*m);v=E*F;t=(m*m+F*F)*E;n=-(E*F*n)}else{t=+g[Q>>2];F=+g[R>>2];n=1.0/+O(+(t*t+F*F));g[fa+16>>2]=-(F*n);g[fa+16+4>>2]=n*t;g[fa+16+8>>2]=0.0;g[fa>>2]=-(n*t*m);g[fa+4>>2]=m*-(F*n);w=(t*t+F*F)*n;p=-(F*n);u=n*t;v=0.0;t=-(n*t*m);n=m*-(F*n)}g[fa+8>>2]=w;j=(c[Y+180>>2]&2|0)==0;if(!j){ha=+g[Y+4>>2];x=+g[Y+20>>2];A=+g[Y+36>>2];ga=+g[Y+8>>2];y=+g[Y+24>>2];C=+g[Y+40>>2];m=+g[Y+12>>2];z=+g[Y+28>>2];F=+g[Y+44>>2];B=(ha*p+x*u+A*v)*+g[Y+164>>2];E=(p*ga+u*y+v*C)*+g[Y+168>>2];v=(p*m+u*z+v*F)*+g[Y+172>>2];g[fa+16>>2]=ha*B+ga*E+m*v;g[fa+16+4>>2]=x*B+y*E+z*v;g[fa+16+8>>2]=A*B+C*E+F*v;g[fa+16+12>>2]=0.0;p=ha*B+ga*E+m*v;u=x*B+y*E+z*v;v=A*B+C*E+F*v}l=(c[Z+180>>2]&2|0)==0;if(!l){m=+g[Z+4>>2];z=+g[Z+20>>2];C=+g[Z+36>>2];x=+g[Z+8>>2];A=+g[Z+24>>2];F=+g[Z+40>>2];y=+g[Z+12>>2];B=+g[Z+28>>2];ha=+g[Z+44>>2];E=(m*p+z*u+C*v)*+g[Z+164>>2];ga=(p*x+u*A+v*F)*+g[Z+168>>2];v=(p*y+u*B+v*ha)*+g[Z+172>>2];g[fa+16>>2]=m*E+x*ga+y*v;g[fa+16+4>>2]=z*E+A*ga+B*v;g[fa+16+8>>2]=C*E+F*ga+ha*v;g[fa+16+12>>2]=0.0;p=m*E+x*ga+y*v;u=z*E+A*ga+B*v;v=C*E+F*ga+ha*v}if(j)m=w;else{ia=+g[Y+4>>2];z=+g[Y+20>>2];C=+g[Y+36>>2];x=+g[Y+8>>2];A=+g[Y+24>>2];F=+g[Y+40>>2];y=+g[Y+12>>2];B=+g[Y+28>>2];ha=+g[Y+44>>2];E=(ia*t+z*n+C*w)*+g[Y+164>>2];ga=(t*x+n*A+w*F)*+g[Y+168>>2];m=(t*y+n*B+w*ha)*+g[Y+172>>2];g[fa>>2]=ia*E+x*ga+y*m;g[fa+4>>2]=z*E+A*ga+B*m;g[fa+8>>2]=C*E+F*ga+ha*m;g[fa+12>>2]=0.0;t=ia*E+x*ga+y*m;n=z*E+A*ga+B*m;m=C*E+F*ga+ha*m}if(!l){x=+g[Z+4>>2];A=+g[Z+20>>2];E=+g[Z+36>>2];y=+g[Z+8>>2];B=+g[Z+24>>2];ga=+g[Z+40>>2];z=+g[Z+12>>2];C=+g[Z+28>>2];ia=+g[Z+44>>2];F=(x*t+A*n+E*m)*+g[Z+164>>2];ha=(t*y+n*B+m*ga)*+g[Z+168>>2];m=(t*z+n*C+m*ia)*+g[Z+172>>2];g[fa>>2]=x*F+y*ha+z*m;g[fa+4>>2]=A*F+B*ha+C*m;g[fa+8>>2]=E*F+ga*ha+ia*m;g[fa+12>>2]=0.0;t=x*F+y*ha+z*m;n=A*F+B*ha+C*m;m=E*F+ga*ha+ia*m}if(+O(+(p*p+u*u+v*v))>.001)Nd(b,fa+16|0,_,$,V,U);if(+O(+(t*t+n*n+m*m))>.001)Nd(b,fa,_,$,V,U)}while(0);do if(!(c[f+64>>2]&32))ea=95;else{if(!(a[X+4+(da*184|0)+116>>0]|0)){ea=95;break}qd(b,X+4+(da*184|0)+152|0,_,$,V,U,fa+64|0,fa+48|0,1.0,+g[X+4+(da*184|0)+132>>2],+g[X+4+(da*184|0)+140>>2]);if(!(c[f+64>>2]&16))break;qd(b,X+4+(da*184|0)+168|0,_,$,V,U,fa+64|0,fa+48|0,1.0,+g[X+4+(da*184|0)+136>>2],+g[X+4+(da*184|0)+144>>2])}while(0);do if((ea|0)==95){ea=0;D=X+4+(da*184|0)+152|0;m=+g[Q>>2];x=+g[R>>2];w=+g[S>>2];n=P-(P*J+M*K+I*L)*m;u=M-(P*J+M*K+I*L)*x;t=I-(P*J+M*K+I*L)*w;g[X+4+(da*184|0)+152>>2]=n;r=X+4+(da*184|0)+156|0;g[r>>2]=u;s=X+4+(da*184|0)+160|0;g[s>>2]=t;j=X+4+(da*184|0)+164|0;g[j>>2]=0.0;if((c[f+64>>2]&64|0)==0?n*n+u*u+t*t>1.1920928955078125e-07:0){m=1.0/+O(+(n*n+u*u+t*t));g[D>>2]=n*m;g[r>>2]=m*u;g[s>>2]=m*t;do if(!Y){p=n*m;n=m*u;m=m*t}else{if(!(c[Y+180>>2]&1)){p=n*m;n=m*u;m=m*t;break}F=+g[Y+4>>2];J=+g[Y+20>>2];M=+g[Y+36>>2];I=+g[Y+8>>2];K=+g[Y+24>>2];ga=+g[Y+40>>2];p=+g[Y+12>>2];L=+g[Y+28>>2];ia=+g[Y+44>>2];P=(F*n*m+J*m*u+m*t*M)*+g[Y+164>>2];ha=(n*m*I+m*u*K+m*t*ga)*+g[Y+168>>2];m=(n*m*p+m*u*L+m*t*ia)*+g[Y+172>>2];g[D>>2]=F*P+I*ha+p*m;g[r>>2]=J*P+K*ha+L*m;g[s>>2]=M*P+ga*ha+ia*m;g[j>>2]=0.0;p=F*P+I*ha+p*m;n=J*P+K*ha+L*m;m=M*P+ga*ha+ia*m}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;C=+g[Z+4>>2];I=+g[Z+20>>2];L=+g[Z+36>>2];E=+g[Z+8>>2];J=+g[Z+24>>2];P=+g[Z+40>>2];F=+g[Z+12>>2];K=+g[Z+28>>2];ha=+g[Z+44>>2];M=(C*p+I*n+L*m)*+g[Z+164>>2];ga=(p*E+n*J+m*P)*+g[Z+168>>2];ia=(p*F+n*K+m*ha)*+g[Z+172>>2];g[D>>2]=C*M+E*ga+F*ia;g[r>>2]=I*M+J*ga+K*ia;g[s>>2]=L*M+P*ga+ha*ia;g[j>>2]=0.0}while(0);qd(b,D,_,$,V,U,fa+64|0,fa+48|0,1.0,0.0,0.0);if(!(c[f+64>>2]&16))break;q=X+4+(da*184|0)+168|0;ha=+g[r>>2];p=+g[S>>2];M=+g[s>>2];P=+g[R>>2];ia=+g[Q>>2];ga=+g[D>>2];g[X+4+(da*184|0)+168>>2]=ha*p-M*P;j=X+4+(da*184|0)+172|0;l=X+4+(da*184|0)+176|0;o=X+4+(da*184|0)+180|0;g[o>>2]=0.0;n=1.0/+O(+((ha*p-M*P)*(ha*p-M*P)+(M*ia-p*ga)*(M*ia-p*ga)+(P*ga-ha*ia)*(P*ga-ha*ia)));m=(ha*p-M*P)*n;g[q>>2]=m;p=(M*ia-p*ga)*n;g[j>>2]=p;n=(P*ga-ha*ia)*n;g[l>>2]=n;do if(Y){if(!(c[Y+180>>2]&1))break;E=+g[Y+4>>2];J=+g[Y+20>>2];M=+g[Y+36>>2];F=+g[Y+8>>2];K=+g[Y+24>>2];ga=+g[Y+40>>2];I=+g[Y+12>>2];L=+g[Y+28>>2];ia=+g[Y+44>>2];P=(E*m+J*p+n*M)*+g[Y+164>>2];ha=(m*F+p*K+n*ga)*+g[Y+168>>2];n=(m*I+p*L+n*ia)*+g[Y+172>>2];g[q>>2]=E*P+F*ha+I*n;g[j>>2]=J*P+K*ha+L*n;g[l>>2]=M*P+ga*ha+ia*n;g[o>>2]=0.0;m=E*P+F*ha+I*n;p=J*P+K*ha+L*n;n=M*P+ga*ha+ia*n}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;C=+g[Z+4>>2];I=+g[Z+20>>2];L=+g[Z+36>>2];E=+g[Z+8>>2];J=+g[Z+24>>2];P=+g[Z+40>>2];F=+g[Z+12>>2];K=+g[Z+28>>2];ha=+g[Z+44>>2];M=(C*m+I*p+L*n)*+g[Z+164>>2];ga=(m*E+p*J+n*P)*+g[Z+168>>2];ia=(m*F+p*K+n*ha)*+g[Z+172>>2];g[q>>2]=C*M+E*ga+F*ia;g[j>>2]=I*M+J*ga+K*ia;g[l>>2]=L*M+P*ga+ha*ia;g[o>>2]=0.0}while(0);qd(b,q,_,$,V,U,fa+64|0,fa+48|0,1.0,0.0,0.0);break}q=X+4+(da*184|0)+168|0;if(+N(+w)>.7071067690849304){ia=1.0/+O(+(w*w+x*x));g[D>>2]=0.0;g[r>>2]=-(ia*w);g[s>>2]=ia*x;u=-(ia*x*m);v=m*-(ia*w);t=(w*w+x*x)*ia;p=0.0;n=-(ia*w);m=ia*x}else{n=1.0/+O(+(m*m+x*x));g[D>>2]=-(x*n);g[r>>2]=n*m;g[s>>2]=0.0;u=w*-(x*n);v=(m*m+x*x)*n;t=-(n*m*w);p=-(x*n);n=n*m;m=0.0}g[q>>2]=t;o=X+4+(da*184|0)+172|0;g[o>>2]=u;l=X+4+(da*184|0)+176|0;g[l>>2]=v;do if(Y){if(!(c[Y+180>>2]&1))break;E=+g[Y+4>>2];J=+g[Y+20>>2];M=+g[Y+36>>2];F=+g[Y+8>>2];K=+g[Y+24>>2];ga=+g[Y+40>>2];I=+g[Y+12>>2];L=+g[Y+28>>2];ia=+g[Y+44>>2];P=(E*p+J*n+M*m)*+g[Y+164>>2];ha=(p*F+n*K+m*ga)*+g[Y+168>>2];m=(p*I+n*L+m*ia)*+g[Y+172>>2];g[D>>2]=E*P+F*ha+I*m;g[r>>2]=J*P+K*ha+L*m;g[s>>2]=M*P+ga*ha+ia*m;g[j>>2]=0.0;p=E*P+F*ha+I*m;n=J*P+K*ha+L*m;m=M*P+ga*ha+ia*m}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;C=+g[Z+4>>2];I=+g[Z+20>>2];L=+g[Z+36>>2];E=+g[Z+8>>2];J=+g[Z+24>>2];P=+g[Z+40>>2];F=+g[Z+12>>2];K=+g[Z+28>>2];ha=+g[Z+44>>2];M=(C*p+I*n+L*m)*+g[Z+164>>2];ga=(p*E+n*J+m*P)*+g[Z+168>>2];ia=(p*F+n*K+m*ha)*+g[Z+172>>2];g[D>>2]=C*M+E*ga+F*ia;g[r>>2]=I*M+J*ga+K*ia;g[s>>2]=L*M+P*ga+ha*ia;g[j>>2]=0.0}while(0);qd(b,D,_,$,V,U,fa+64|0,fa+48|0,1.0,0.0,0.0);j=c[f+64>>2]|0;if(j&16){do if(Y|0){if(!(c[Y+180>>2]&1))break;C=+g[Y+4>>2];A=+g[q>>2];I=+g[Y+20>>2];B=+g[o>>2];L=+g[Y+36>>2];ia=+g[l>>2];E=+g[Y+8>>2];J=+g[Y+24>>2];P=+g[Y+40>>2];F=+g[Y+12>>2];K=+g[Y+28>>2];ha=+g[Y+44>>2];M=(C*A+I*B+L*ia)*+g[Y+164>>2];ga=(A*E+B*J+ia*P)*+g[Y+168>>2];ia=(A*F+B*K+ia*ha)*+g[Y+172>>2];g[q>>2]=C*M+E*ga+F*ia;g[o>>2]=I*M+J*ga+K*ia;g[l>>2]=L*M+P*ga+ha*ia;g[X+4+(da*184|0)+180>>2]=0.0}while(0);do if(Z|0){if(!(c[Z+180>>2]&1))break;C=+g[Z+4>>2];A=+g[q>>2];I=+g[Z+20>>2];B=+g[o>>2];L=+g[Z+36>>2];ia=+g[l>>2];E=+g[Z+8>>2];J=+g[Z+24>>2];P=+g[Z+40>>2];F=+g[Z+12>>2];K=+g[Z+28>>2];ha=+g[Z+44>>2];M=(C*A+I*B+L*ia)*+g[Z+164>>2];ga=(A*E+B*J+ia*P)*+g[Z+168>>2];ia=(A*F+B*K+ia*ha)*+g[Z+172>>2];g[q>>2]=C*M+E*ga+F*ia;g[o>>2]=I*M+J*ga+K*ia;g[l>>2]=L*M+P*ga+ha*ia;g[X+4+(da*184|0)+180>>2]=0.0}while(0);qd(b,q,_,$,V,U,fa+64|0,fa+48|0,1.0,0.0,0.0);j=c[f+64>>2]|0}if((j&80|0)!=80)break;a[X+4+(da*184|0)+116>>0]=1}while(0);s=c[b+16>>2]|0;l=c[s+(_*244|0)+240>>2]|0;o=c[s+($*244|0)+240>>2]|0;q=c[T+(V*152|0)+140>>2]|0;r=c[b+76>>2]|0;j=c[f+64>>2]|0;do if(!(j&4))g[r+(q*152|0)+100>>2]=0.0;else{m=+g[X+4+(da*184|0)+124>>2]*+g[f+60>>2];g[r+(q*152|0)+100>>2]=m;if(l|0){ga=+g[l+344>>2];ia=m*ga*+g[r+(q*152|0)+20>>2]*+g[l+352>>2]*+g[s+(_*244|0)+116>>2];ha=m*ga*+g[r+(q*152|0)+24>>2]*+g[l+356>>2]*+g[s+(_*244|0)+120>>2];g[s+(_*244|0)+64>>2]=+g[s+(_*244|0)+112>>2]*m*ga*+g[r+(q*152|0)+16>>2]*+g[l+348>>2]+ +g[s+(_*244|0)+64>>2];g[s+(_*244|0)+68>>2]=ia+ +g[s+(_*244|0)+68>>2];g[s+(_*244|0)+72>>2]=ha+ +g[s+(_*244|0)+72>>2];ha=m*+g[s+(_*244|0)+100>>2]*+g[r+(q*152|0)+68>>2];ia=m*+g[s+(_*244|0)+104>>2]*+g[r+(q*152|0)+72>>2];g[s+(_*244|0)+80>>2]=m*+g[s+(_*244|0)+96>>2]*+g[r+(q*152|0)+64>>2]+ +g[s+(_*244|0)+80>>2];g[s+(_*244|0)+84>>2]=ha+ +g[s+(_*244|0)+84>>2];g[s+(_*244|0)+88>>2]=ia+ +g[s+(_*244|0)+88>>2]}if(!o)break;m=+g[o+344>>2];n=+g[r+(q*152|0)+100>>2];if(!(c[s+($*244|0)+240>>2]|0))break;ia=+g[r+(q*152|0)+88>>2];ha=+g[r+(q*152|0)+84>>2];ga=+g[r+(q*152|0)+80>>2];M=n*m*+g[r+(q*152|0)+52>>2]*+g[o+352>>2]*+g[s+($*244|0)+116>>2];P=n*m*+g[r+(q*152|0)+56>>2]*+g[o+356>>2]*+g[s+($*244|0)+120>>2];g[s+($*244|0)+64>>2]=+g[s+($*244|0)+112>>2]*n*m*+g[r+(q*152|0)+48>>2]*+g[o+348>>2]+ +g[s+($*244|0)+64>>2];g[s+($*244|0)+68>>2]=M+ +g[s+($*244|0)+68>>2];g[s+($*244|0)+72>>2]=P+ +g[s+($*244|0)+72>>2];ha=ha*+g[s+($*244|0)+100>>2]*-n;ia=ia*+g[s+($*244|0)+104>>2]*-n;g[s+($*244|0)+80>>2]=+g[s+($*244|0)+80>>2]-ga*+g[s+($*244|0)+96>>2]*-n;g[s+($*244|0)+84>>2]=+g[s+($*244|0)+84>>2]-ha;g[s+($*244|0)+88>>2]=+g[s+($*244|0)+88>>2]-ia}while(0);do if(j&16|0){if(!(j&4)){g[r+((q+1|0)*152|0)+100>>2]=0.0;break}n=+g[X+4+(da*184|0)+128>>2]*+g[f+60>>2];g[r+((q+1|0)*152|0)+100>>2]=n;do if(l|0){m=+g[l+344>>2];if(!(c[s+(_*244|0)+240>>2]|0))break;ia=n*m*+g[r+((q+1|0)*152|0)+20>>2]*+g[s+(_*244|0)+116>>2];ha=n*m*+g[r+((q+1|0)*152|0)+24>>2]*+g[s+(_*244|0)+120>>2];g[s+(_*244|0)+64>>2]=+g[s+(_*244|0)+112>>2]*n*m*+g[r+((q+1|0)*152|0)+16>>2]+ +g[s+(_*244|0)+64>>2];g[s+(_*244|0)+68>>2]=ia+ +g[s+(_*244|0)+68>>2];g[s+(_*244|0)+72>>2]=ha+ +g[s+(_*244|0)+72>>2];ha=n*+g[s+(_*244|0)+100>>2]*+g[r+((q+1|0)*152|0)+68>>2];ia=n*+g[s+(_*244|0)+104>>2]*+g[r+((q+1|0)*152|0)+72>>2];g[s+(_*244|0)+80>>2]=n*+g[s+(_*244|0)+96>>2]*+g[r+((q+1|0)*152|0)+64>>2]+ +g[s+(_*244|0)+80>>2];g[s+(_*244|0)+84>>2]=ha+ +g[s+(_*244|0)+84>>2];g[s+(_*244|0)+88>>2]=ia+ +g[s+(_*244|0)+88>>2]}while(0);if(!o)break;m=+g[o+344>>2];n=+g[r+((q+1|0)*152|0)+100>>2];if(!(c[s+($*244|0)+240>>2]|0))break;ia=+g[r+((q+1|0)*152|0)+88>>2];ha=+g[r+((q+1|0)*152|0)+84>>2];ga=+g[r+((q+1|0)*152|0)+80>>2];M=n*m*+g[r+((q+1|0)*152|0)+52>>2]*+g[s+($*244|0)+116>>2];P=n*m*+g[r+((q+1|0)*152|0)+56>>2]*+g[s+($*244|0)+120>>2];g[s+($*244|0)+64>>2]=+g[s+($*244|0)+112>>2]*n*m*+g[r+((q+1|0)*152|0)+48>>2]+ +g[s+($*244|0)+64>>2];g[s+($*244|0)+68>>2]=M+ +g[s+($*244|0)+68>>2];g[s+($*244|0)+72>>2]=P+ +g[s+($*244|0)+72>>2];ha=ha*+g[s+($*244|0)+100>>2]*-n;ia=ia*+g[s+($*244|0)+104>>2]*-n;g[s+($*244|0)+80>>2]=+g[s+($*244|0)+80>>2]-ga*+g[s+($*244|0)+96>>2]*-n;g[s+($*244|0)+84>>2]=+g[s+($*244|0)+84>>2]-ha;g[s+($*244|0)+88>>2]=+g[s+($*244|0)+88>>2]-ia}while(0);j=c[X+748>>2]|0}da=da+1|0}while((da|0)<(j|0))}ca=ca+1|0}while((ca|0)!=(e|0));i=fa;return}function rc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;X=i;i=i+160|0;c[X+40>>2]=0;a[X+16>>0]=1;c[X+12>>2]=0;c[X+4>>2]=0;c[X+8>>2]=0;a[X+36>>0]=1;c[X+32>>2]=0;c[X+24>>2]=0;c[X+28>>2]=0;l=e>>>0<8?8:e;if((l|0)>0){c[6435]=(c[6435]|0)+1;h=yc((l<<4|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}h=0;do{W=j+(h<<4)|0;c[W>>2]=c[X+80>>2];c[W+4>>2]=c[X+80+4>>2];c[W+8>>2]=c[X+80+8>>2];c[W+12>>2]=c[X+80+12>>2];h=h+1|0}while((h|0)!=(l|0));W=j}else W=0;do if(!e){h=0;q=0;j=0;n=0;o=0}else{j=c[X+24>>2]|0;if((j|0)<0){h=c[X+32>>2]|0;do if((c[X+28>>2]|0)<0){if(!h){a[X+36>>0]=1;c[X+32>>2]=0;c[X+28>>2]=0;h=0;break}if(a[X+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}a[X+36>>0]=1;c[X+32>>2]=0;c[X+28>>2]=0;h=0}while(0);Tn(h+(j<<2)|0,0,_(j,-4)|0)|0}c[X+24>>2]=0;w=3402823466385288598117041.0e14;p=-3402823466385288598117041.0e14;x=3402823466385288598117041.0e14;r=-3402823466385288598117041.0e14;y=3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;h=0;j=d;while(1){K=+g[j>>2];w=K<w?K:w;p=K>p?K:p;K=+g[j+4>>2];x=K<x?K:x;r=K>r?K:r;K=+g[j+8>>2];y=K<y?K:y;v=K>v?K:v;h=h+1|0;if((h|0)==(e|0))break;else j=j+16|0}s=p-w;r=r-x;p=v-y;E=w+s*.5;C=x+r*.5;B=y+p*.5;do if(e>>>0<3|(s<9.999999974752427e-07|r<9.999999974752427e-07|p<9.999999974752427e-07)){v=s>9.999999974752427e-07&s<3402823466385288598117041.0e14?s:3402823466385288598117041.0e14;v=r>9.999999974752427e-07&r<v?r:v;v=p>9.999999974752427e-07&p<v?p:v;if(!(v==3402823466385288598117041.0e14)){s=s<9.999999974752427e-07?v*.05000000074505806:s;r=r<9.999999974752427e-07?v*.05000000074505806:r;if(p<9.999999974752427e-07)p=v*.05000000074505806}else{s=.009999999776482582;r=.009999999776482582;p=.009999999776482582}K=E-s;J=E+s;I=C-r;r=C+r;H=B-p;s=B+p;g[W>>2]=K;g[W+4>>2]=I;g[W+8>>2]=H;g[W+16>>2]=J;g[W+20>>2]=I;g[W+24>>2]=H;g[W+32>>2]=J;g[W+36>>2]=r;g[W+40>>2]=H;g[W+48>>2]=K;g[W+52>>2]=r;g[W+56>>2]=H;g[W+64>>2]=K;g[W+68>>2]=I;g[W+72>>2]=s;g[W+80>>2]=J;g[W+84>>2]=I;g[W+88>>2]=s;g[W+96>>2]=J;g[W+100>>2]=r;g[W+104>>2]=s;g[W+112>>2]=K;g[W+116>>2]=r;g[W+120>>2]=s;T=8;s=1.0;r=1.0;p=1.0;V=53}else{j=0;q=0;h=0;o=d;do{y=1.0/s*+g[o>>2];z=1.0/r*+g[o+4>>2];A=1.0/p*+g[o+8>>2];o=o+16|0;a:do if(h){l=0;while(1){d=W+(l<<4)|0;v=+g[d>>2];m=W+(l<<4)+4|0;w=+g[m>>2];n=W+(l<<4)+8|0;x=+g[n>>2];if(+N(+(v-y))<1.0000000474974513e-03&+N(+(w-z))<1.0000000474974513e-03&+N(+(x-A))<1.0000000474974513e-03)break;l=l+1|0;if(l>>>0>=h>>>0){n=l;break a}}if((y-1.0/s*E)*(y-1.0/s*E)+(z-1.0/r*C)*(z-1.0/r*C)+(A-1.0/p*B)*(A-1.0/p*B)>(v-1.0/s*E)*(v-1.0/s*E)+(w-1.0/r*C)*(w-1.0/r*C)+(x-1.0/p*B)*(x-1.0/p*B)){g[d>>2]=y;g[m>>2]=z;g[n>>2]=A;n=l}else n=l}else n=0;while(0);if((n|0)==(h|0)){g[W+(h<<4)>>2]=y;g[W+(h<<4)+4>>2]=z;g[W+(h<<4)+8>>2]=A;h=h+1|0}if((j|0)==(c[X+28>>2]|0)?(t=j|0?j<<1:1,(j|0)<(t|0)):0){if((t|0)!=0?(c[6435]=(c[6435]|0)+1,u=yc((t<<2|3)+16|0)|0,(u|0)!=0):0){c[(u+4+15&-16)+-4>>2]=u;m=u+4+15&-16}else m=0;d=c[X+32>>2]|0;if((j|0)<=0){if(d)V=39}else{l=0;do{c[m+(l<<2)>>2]=c[d+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0));V=39}if((V|0)==39){V=0;if(a[X+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[X+32>>2]=0;j=c[X+24>>2]|0}a[X+36>>0]=1;c[X+32>>2]=m;c[X+28>>2]=t}c[(c[X+32>>2]|0)+(j<<2)>>2]=n;j=(c[X+24>>2]|0)+1|0;c[X+24>>2]=j;q=q+1|0}while((q|0)!=(e|0));if(!h){j=1;A=3402823466385288598117041.0e14;x=-3402823466385288598117041.0e14;z=3402823466385288598117041.0e14;w=-3402823466385288598117041.0e14;y=3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14}else{C=3402823466385288598117041.0e14;A=3402823466385288598117041.0e14;E=-3402823466385288598117041.0e14;x=-3402823466385288598117041.0e14;G=3402823466385288598117041.0e14;z=3402823466385288598117041.0e14;H=-3402823466385288598117041.0e14;w=-3402823466385288598117041.0e14;J=3402823466385288598117041.0e14;y=3402823466385288598117041.0e14;K=-3402823466385288598117041.0e14;v=-3402823466385288598117041.0e14;q=0;while(1){B=+g[W+(q<<4)>>2];j=B<C;A=j?B:A;l=B>E;x=l?B:x;F=+g[W+(q<<4)+4>>2];d=F<G;z=d?F:z;m=F>H;w=m?F:w;I=+g[W+(q<<4)+8>>2];n=I<J;y=n?I:y;o=I>K;v=o?I:v;q=q+1|0;if((q|0)==(h|0))break;else{C=j?B:C;E=l?B:E;G=d?F:G;H=m?F:H;J=n?I:J;K=o?I:K}}j=h>>>0<3}x=x-A;C=w-z;v=v-y;if(!(j|(x<9.999999974752427e-07|C<9.999999974752427e-07|v<9.999999974752427e-07))){if(h|0){T=h;V=53;break}break}B=A+x*.5;A=z+C*.5;z=y+v*.5;y=x>=9.999999974752427e-07&x<3402823466385288598117041.0e14?x:3402823466385288598117041.0e14;y=C>=9.999999974752427e-07&C<y?C:y;y=v>=9.999999974752427e-07&v<y?v:y;if(!(y==3402823466385288598117041.0e14)){w=x<9.999999974752427e-07?y*.05000000074505806:x;x=C<9.999999974752427e-07?y*.05000000074505806:C;if(v<9.999999974752427e-07)v=y*.05000000074505806}else{w=.009999999776482582;x=.009999999776482582;v=.009999999776482582}I=B-w;H=B+w;G=A-x;J=A+x;F=z-v;K=z+v;g[W>>2]=I;g[W+4>>2]=G;g[W+8>>2]=F;g[W+16>>2]=H;g[W+20>>2]=G;g[W+24>>2]=F;g[W+32>>2]=H;g[W+36>>2]=J;g[W+40>>2]=F;g[W+48>>2]=I;g[W+52>>2]=J;g[W+56>>2]=F;g[W+64>>2]=I;g[W+68>>2]=G;g[W+72>>2]=K;g[W+80>>2]=H;g[W+84>>2]=G;g[W+88>>2]=K;g[W+96>>2]=H;g[W+100>>2]=J;g[W+104>>2]=K;g[W+112>>2]=I;g[W+116>>2]=J;g[W+120>>2]=K;T=8;V=53}while(0);if((V|0)==53){h=0;do{U=W+(h<<4)|0;g[U>>2]=s*+g[U>>2];U=W+(h<<4)+4|0;g[U>>2]=r*+g[U>>2];U=W+(h<<4)+8|0;g[U>>2]=p*+g[U>>2];h=h+1|0}while(h>>>0<T>>>0);if((T|0)>=4){p=+g[W>>2];r=+g[W+4>>2];v=+g[W+8>>2];U=T<<2;c[6435]=(c[6435]|0)+1;h=yc((U|3)+16|0)|0;if(!h)j=0;else{c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}a[X+100+16>>0]=1;Q=X+100+12|0;c[Q>>2]=0;c[X+100+4>>2]=0;c[X+100+8>>2]=0;c[6435]=(c[6435]|0)+1;h=yc((U|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}a[X+100+16>>0]=1;c[Q>>2]=h;c[X+100+8>>2]=T;o=0;q=T;y=p;z=r;s=v;w=p;x=r;h=T;m=j;n=0;while(1){if((o|0)==(q|0)?(D=q|0?q<<1:1,(q|0)<(D|0)):0){if((D|0)!=0?(c[6435]=(c[6435]|0)+1,L=yc((D<<2|3)+16|0)|0,(L|0)!=0):0){c[(L+4+15&-16)+-4>>2]=L;l=L+4+15&-16}else l=0;d=c[Q>>2]|0;if((q|0)<=0){if(d|0)V=68}else{j=0;do{c[l+(j<<2)>>2]=c[d+(j<<2)>>2];j=j+1|0}while((j|0)!=(q|0));V=68}if((V|0)==68){V=0;c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);c[Q>>2]=0}a[X+100+16>>0]=1;c[Q>>2]=l;c[X+100+8>>2]=D}c[(c[Q>>2]|0)+(o<<2)>>2]=1;c[X+100+4>>2]=o+1;do if((n|0)==(h|0)){h=n|0?n<<1:1;if((n|0)<(h|0)){if((h|0)!=0?(c[6435]=(c[6435]|0)+1,M=yc((h<<2|3)+16|0)|0,(M|0)!=0):0){c[(M+4+15&-16)+-4>>2]=M;l=M+4+15&-16}else l=0;if((n|0)<=0){if(!m){P=l;break}}else{j=0;do{c[l+(j<<2)>>2]=c[m+(j<<2)>>2];j=j+1|0}while((j|0)!=(n|0))}c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0);P=l}else{h=n;P=m}}else P=m;while(0);c[P+(n<<2)>>2]=0;j=n+1|0;p=+g[W+(n<<4)>>2];w=p<w?p:w;r=+g[W+(n<<4)+4>>2];x=r<x?r:x;K=+g[W+(n<<4)+8>>2];v=K<v?K:v;p=y<p?p:y;r=z<r?r:z;s=s<K?K:s;if((j|0)>=(T|0))break;o=c[X+100+4>>2]|0;q=c[X+100+8>>2]|0;y=p;z=r;m=P;n=j}H=+O(+((p-w)*(p-w)+(r-x)*(r-x)+(s-v)*(s-v)))*1.0000000474974513e-03;L=Qe(W,T,.009999999776482582,.019999999552965164,1.0,X+100|0)|0;M=Qe(W,T,-.009999999776482582,-.019999999552965164,-1.0,X+100|0)|0;n=W+(L<<4)|0;o=W+(M<<4)|0;w=+g[n>>2]-+g[o>>2];q=W+(L<<4)+4|0;t=W+(M<<4)+4|0;x=+g[q>>2]-+g[t>>2];u=W+(L<<4)+8|0;D=W+(M<<4)+8|0;y=+g[u>>2]-+g[D>>2];b:do if((L|0)!=(M|0)?!(y==0.0&x==0.0&w==0.0):0){p=+O(+((y*.019999999552965164-x*0.0)*(y*.019999999552965164-x*0.0)+(w*0.0-y)*(w*0.0-y)+(x-w*.019999999552965164)*(x-w*.019999999552965164)));r=+O(+((y-x*0.0)*(y-x*0.0)+(y*.019999999552965164+w*0.0)*(y*.019999999552965164+w*0.0)+(x*-.019999999552965164-w)*(x*-.019999999552965164-w)));if(p>r){s=(x-w*.019999999552965164)*(1.0/p);v=(y*.019999999552965164-x*0.0)*(1.0/p);p=(w*0.0-y)*(1.0/p)}else{s=(x*-.019999999552965164-w)*(1.0/r);v=(y-x*0.0)*(1.0/r);p=(y*.019999999552965164+w*0.0)*(1.0/r)}h=Qe(W,T,v,p,s,X+100|0)|0;if((h|0)==(L|0)|(h|0)==(M|0))m=Qe(W,T,-v,-p,-s,X+100|0)|0;else m=h;if(!((m|0)==(L|0)|(m|0)==(M|0))){j=W+(m<<4)|0;p=+g[j>>2]-+g[n>>2];l=W+(m<<4)+4|0;r=+g[l>>2]-+g[q>>2];d=W+(m<<4)+8|0;s=+g[d>>2]-+g[u>>2];v=1.0/+O(+((x*p-r*w)*(x*p-r*w)+((r*y-s*x)*(r*y-s*x)+(s*w-y*p)*(s*w-y*p))));h=Qe(W,T,(r*y-s*x)*v,(s*w-y*p)*v,(x*p-r*w)*v,X+100|0)|0;if((h|0)==(m|0)|((h|0)==(L|0)|(h|0)==(M|0)))h=Qe(W,T,-((r*y-s*x)*v),-((s*w-y*p)*v),-((x*p-r*w)*v),X+100|0)|0;if(!((h|0)==(m|0)|((h|0)==(L|0)|(h|0)==(M|0)))?(B=+g[n>>2],F=+g[q>>2],A=+g[u>>2],J=+g[o>>2]-B,C=+g[t>>2]-F,G=+g[D>>2]-A,I=+g[j>>2]-B,E=+g[l>>2]-F,K=+g[d>>2]-A,R=(+g[W+(h<<4)+8>>2]-A)*(J*E-C*I)+((+g[W+(h<<4)>>2]-B)*(C*K-G*E)+(+g[W+(h<<4)+4>>2]-F)*(G*I-J*K))<0.0,S=R?m:h,R=R?h:m,(L|0)!=-1):0){E=(+g[W+(L<<4)>>2]+ +g[W+(M<<4)>>2]+ +g[W+(R<<4)>>2]+ +g[W+(S<<4)>>2])*.25;F=(+g[W+(L<<4)+4>>2]+ +g[W+(M<<4)+4>>2]+ +g[W+(R<<4)+4>>2]+ +g[W+(S<<4)+4>>2])*.25;G=(+g[W+(L<<4)+8>>2]+ +g[W+(M<<4)+8>>2]+ +g[W+(R<<4)+8>>2]+ +g[W+(S<<4)+8>>2])*.25;h=Uh(X,R,S,M)|0;c[h+12>>2]=2;c[h+16>>2]=3;c[h+20>>2]=1;h=Uh(X,S,R,L)|0;c[h+12>>2]=3;c[h+16>>2]=2;c[h+20>>2]=0;h=Uh(X,L,M,S)|0;c[h+12>>2]=0;c[h+16>>2]=1;c[h+20>>2]=3;h=Uh(X,M,L,R)|0;c[h+12>>2]=1;c[h+16>>2]=0;c[h+20>>2]=2;c[P+(S<<2)>>2]=1;c[P+(R<<2)>>2]=1;c[P+(M<<2)>>2]=1;c[P+(L<<2)>>2]=1;h=c[X+4>>2]|0;if((h|0)>0){m=c[X+12>>2]|0;n=0;do{d=c[m+(n<<2)>>2]|0;R=c[d>>2]|0;M=c[d+4>>2]|0;S=c[d+8>>2]|0;w=+g[W+(M<<4)>>2];s=w-+g[W+(R<<4)>>2];x=+g[W+(M<<4)+4>>2];v=x-+g[W+(R<<4)+4>>2];r=+g[W+(M<<4)+8>>2];p=r-+g[W+(R<<4)+8>>2];w=+g[W+(S<<4)>>2]-w;x=+g[W+(S<<4)+4>>2]-x;r=+g[W+(S<<4)+8>>2]-r;y=+O(+((s*x-v*w)*(s*x-v*w)+((v*r-p*x)*(v*r-p*x)+(p*w-s*r)*(p*w-s*r))));if(y==0.0){z=1.0;p=0.0;r=0.0;j=1065353216;l=0;h=0}else{j=(g[k>>2]=1.0/y*(v*r-p*x),c[k>>2]|0);l=(g[k>>2]=1.0/y*(p*w-s*r),c[k>>2]|0);z=1.0/y*(v*r-p*x);p=1.0/y*(p*w-s*r);r=1.0/y*(s*x-v*w);h=(g[k>>2]=1.0/y*(s*x-v*w),c[k>>2]|0)}J=(c[k>>2]=j,+g[k>>2]);K=(c[k>>2]=l,+g[k>>2]);S=Qe(W,T,J,K,(c[k>>2]=h,+g[k>>2]),X+100|0)|0;c[d+28>>2]=S;h=c[d>>2]|0;g[d+32>>2]=(+g[W+(S<<4)>>2]-+g[W+(h<<4)>>2])*z+(+g[W+(S<<4)+4>>2]-+g[W+(h<<4)+4>>2])*p+(+g[W+(S<<4)+8>>2]-+g[W+(h<<4)+8>>2])*r;n=n+1|0;h=c[X+4>>2]|0}while((n|0)<(h|0))}if((e+-4|0)>0){q=e+-4|0;while(1){d=c[X+12>>2]|0;m=0;l=0;while(1){j=c[d+(m<<2)>>2]|0;do if(l){if(!j){j=l;break}if(!(+g[l+32>>2]<+g[j+32>>2]))j=l;else V=104}else V=104;while(0);if((V|0)==104)V=0;m=m+1|0;if((m|0)>=(h|0))break;else l=j}if((j|0)==0?1:!(+g[j+32>>2]>H)){h=1;break b}o=c[j+28>>2]|0;c[P+(o<<2)>>2]=1;h=c[X+4>>2]|0;c:do if(!h)h=0;else{l=W+(o<<4)|0;d=W+(o<<4)+4|0;m=W+(o<<4)+8|0;do{h=h+-1|0;j=c[(c[X+12>>2]|0)+(h<<2)>>2]|0;do if(j|0){S=c[j>>2]|0;R=c[j+4>>2]|0;e=c[j+8>>2]|0;s=+g[W+(R<<4)>>2];z=+g[W+(S<<4)>>2];v=+g[W+(R<<4)+4>>2];A=+g[W+(S<<4)+4>>2];p=+g[W+(R<<4)+8>>2];B=+g[W+(S<<4)+8>>2];w=+g[W+(e<<4)>>2]-s;x=+g[W+(e<<4)+4>>2]-v;r=+g[W+(e<<4)+8>>2]-p;y=+O(+(((s-z)*x-(v-A)*w)*((s-z)*x-(v-A)*w)+(((v-A)*r-(p-B)*x)*((v-A)*r-(p-B)*x)+((p-B)*w-(s-z)*r)*((p-B)*w-(s-z)*r))));if(y==0.0){C=1.0;r=0.0;p=0.0}else{C=1.0/y*((v-A)*r-(p-B)*x);r=1.0/y*((p-B)*w-(s-z)*r);p=1.0/y*((s-z)*x-(v-A)*w)}if(!(C*(+g[l>>2]-z)+r*(+g[d>>2]-A)+p*(+g[m>>2]-B)>H*.009999999776482582))break;ue(X,j,o)}while(0)}while((h|0)!=0);h=c[X+4>>2]|0;if(!h){h=0;break}else j=h;d:do{j=j+-1|0;m=c[X+12>>2]|0;n=c[m+(j<<2)>>2]|0;do if(n){d=c[n>>2]|0;do if((d|0)!=(o|0)){l=c[n+4>>2]|0;if((l|0)==(o|0)){l=o;break}if((c[n+8>>2]|0)!=(o|0))break d}else l=c[n+4>>2]|0;while(0);e=c[n+8>>2]|0;z=+g[W+(l<<4)>>2];B=+g[W+(d<<4)>>2];A=+g[W+(l<<4)+4>>2];C=+g[W+(d<<4)+4>>2];r=+g[W+(l<<4)+8>>2];w=+g[W+(d<<4)+8>>2];s=+g[W+(e<<4)>>2]-z;v=+g[W+(e<<4)+4>>2]-A;p=+g[W+(e<<4)+8>>2]-r;x=+O(+(((z-B)*v-(A-C)*s)*((z-B)*v-(A-C)*s)+(((A-C)*p-(r-w)*v)*((A-C)*p-(r-w)*v)+((r-w)*s-(z-B)*p)*((r-w)*s-(z-B)*p))));if(x==0.0){y=1.0;r=0.0;p=0.0}else{y=1.0/x*((A-C)*p-(r-w)*v);r=1.0/x*((r-w)*s-(z-B)*p);p=1.0/x*((z-B)*v-(A-C)*s)}if(!(x<H*H*.10000000149011612?1:(E-B)*y+(F-C)*r+(G-w)*p>H*.009999999776482582))break;ue(X,c[m+(c[n+12>>2]<<2)>>2]|0,o);j=c[X+4>>2]|0;h=j}while(0)}while((j|0)!=0);if(!h){h=0;break}n=c[X+12>>2]|0;m=h;do{m=m+-1|0;o=c[n+(m<<2)>>2]|0;do if(o|0){if((c[o+28>>2]|0)>-1)break c;S=c[o>>2]|0;R=c[o+4>>2]|0;e=c[o+8>>2]|0;w=+g[W+(R<<4)>>2];s=w-+g[W+(S<<4)>>2];x=+g[W+(R<<4)+4>>2];v=x-+g[W+(S<<4)+4>>2];r=+g[W+(R<<4)+8>>2];p=r-+g[W+(S<<4)+8>>2];w=+g[W+(e<<4)>>2]-w;x=+g[W+(e<<4)+4>>2]-x;r=+g[W+(e<<4)+8>>2]-r;y=+O(+((s*x-v*w)*(s*x-v*w)+((v*r-p*x)*(v*r-p*x)+(p*w-s*r)*(p*w-s*r))));if(y==0.0){z=1.0;p=0.0;r=0.0;l=1065353216;d=0;j=0}else{l=(g[k>>2]=1.0/y*(v*r-p*x),c[k>>2]|0);d=(g[k>>2]=1.0/y*(p*w-s*r),c[k>>2]|0);z=1.0/y*(v*r-p*x);p=1.0/y*(p*w-s*r);r=1.0/y*(s*x-v*w);j=(g[k>>2]=1.0/y*(s*x-v*w),c[k>>2]|0)}J=(c[k>>2]=l,+g[k>>2]);K=(c[k>>2]=d,+g[k>>2]);j=Qe(W,T,J,K,(c[k>>2]=j,+g[k>>2]),X+100|0)|0;c[o+28>>2]=j;if(!(c[P+(j<<2)>>2]|0)){e=c[o>>2]|0;g[o+32>>2]=(+g[W+(j<<4)>>2]-+g[W+(e<<4)>>2])*z+(+g[W+(j<<4)+4>>2]-+g[W+(e<<4)+4>>2])*p+(+g[W+(j<<4)+8>>2]-+g[W+(e<<4)+8>>2])*r;break}else{c[o+28>>2]=-1;break}}while(0)}while((m|0)!=0)}while(0);if((q|0)<=1){h=1;break b}q=q+-1|0}}else h=1}else h=0}else h=0}else h=0;while(0);j=c[Q>>2]|0;if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);c[Q>>2]=0}if(P|0){c[6436]=(c[6436]|0)+1;hd(c[P+-4>>2]|0)}if(h){h=c[X+4>>2]|0;if((h|0)>0){j=c[X+12>>2]|0;t=0;o=0;l=0;d=0;while(1){n=c[j+(t<<2)>>2]|0;if(!n)m=o;else{do if((d|0)==(o|0)){m=o|0?o<<1:1;if((o|0)>=(m|0)){m=o;break}do if(!m)j=0;else{c[6435]=(c[6435]|0)+1;h=yc((m<<2|3)+16|0)|0;if(!h){j=0;break}c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}while(0);if((o|0)<=0){if(!l){l=j;break}}else{h=0;do{c[j+(h<<2)>>2]=c[l+(h<<2)>>2];h=h+1|0}while((h|0)!=(o|0))}c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);l=j}else m=o;while(0);c[l+(d<<2)>>2]=c[n>>2];o=d+1|0;q=(c[(c[X+12>>2]|0)+(t<<2)>>2]|0)+4|0;do if((o|0)==(m|0)){n=m|0?m<<1:1;if((m|0)>=(n|0))break;do if(!n)j=0;else{c[6435]=(c[6435]|0)+1;h=yc((n<<2|3)+16|0)|0;if(!h){j=0;break}c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}while(0);if((m|0)<=0){if(!l){m=n;l=j;break}}else{h=0;do{c[j+(h<<2)>>2]=c[l+(h<<2)>>2];h=h+1|0}while((h|0)!=(m|0))}c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);m=n;l=j}while(0);c[l+(o<<2)>>2]=c[q>>2];o=d+2|0;q=(c[(c[X+12>>2]|0)+(t<<2)>>2]|0)+8|0;do if((o|0)==(m|0)){n=m|0?m<<1:1;if((m|0)>=(n|0))break;do if(!n)j=0;else{c[6435]=(c[6435]|0)+1;h=yc((n<<2|3)+16|0)|0;if(!h){j=0;break}c[(h+4+15&-16)+-4>>2]=h;j=h+4+15&-16}while(0);if((m|0)<=0){if(!l){m=n;l=j;break}}else{h=0;do{c[j+(h<<2)>>2]=c[l+(h<<2)>>2];h=h+1|0}while((h|0)!=(m|0))}c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);m=n;l=j}while(0);c[l+(o<<2)>>2]=c[q>>2];j=c[X+12>>2]|0;h=c[j+(t<<2)>>2]|0;c[j+(c[h+24>>2]<<2)>>2]=0;if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}h=c[X+4>>2]|0;d=d+3|0}t=t+1|0;if((t|0)>=(h|0))break;else o=m}c[X+96>>2]=(d|0)/3|0;if((d|0)>0){c[6435]=(c[6435]|0)+1;h=yc((d<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}Tn(h|0,0,d<<2|0)|0;j=0;do{c[h+(j<<2)>>2]=c[l+(j<<2)>>2];j=j+1|0}while((j|0)!=(d|0));m=l;M=d}else{h=0;m=l;M=d}}else{c[X+96>>2]=0;h=0;m=0;M=0}l=c[X+4>>2]|0;if((l|0)<0){j=c[X+12>>2]|0;if((c[X+8>>2]|0)<0){if(j|0){if(a[X+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[X+12>>2]=0}a[X+16>>0]=1;c[X+12>>2]=0;c[X+8>>2]=0;j=0}do{c[j+(l<<2)>>2]=0;l=l+1|0}while((l|0)!=0)}c[X+4>>2]=0;if(m|0){c[6436]=(c[6436]|0)+1;hd(c[m+-4>>2]|0)}L=c[X+96>>2]|0;m=(T|0)>0;if(m){c[6435]=(c[6435]|0)+1;j=yc((T<<4|3)+16|0)|0;if(!j)l=0;else{c[(j+4+15&-16)+-4>>2]=j;l=j+4+15&-16}j=0;do{e=l+(j<<4)|0;c[e>>2]=c[X+64>>2];c[e+4>>2]=c[X+64+4>>2];c[e+8>>2]=c[X+64+8>>2];c[e+12>>2]=c[X+64+12>>2];j=j+1|0}while((j|0)!=(T|0));D=l}else D=0;l=c[X+24>>2]|0;do if((l|0)>0){c[6435]=(c[6435]|0)+1;j=yc((l<<2|3)+16|0)|0;if(!j)d=0;else{c[(j+4+15&-16)+-4>>2]=j;d=j+4+15&-16}Tn(d|0,0,l<<2|0)|0;if((c[X+24>>2]|0)<=0)break;j=c[X+32>>2]|0;l=0;do{c[d+(l<<2)>>2]=c[j+(l<<2)>>2];l=l+1|0}while((l|0)<(c[X+24>>2]|0))}else d=0;while(0);if(m){c[6435]=(c[6435]|0)+1;j=yc((U|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}Tn(j|0,0,U|0)|0}else j=0;Tn(j|0,0,U|0)|0;if((L|0)<=0)if(!j)q=0;else{l=0;V=222}else{t=c[X+32>>2]|0;u=0;l=0;do{m=h+(u<<2)|0;o=c[m>>2]|0;q=j+(o<<2)|0;n=c[q>>2]|0;if(!n){c[m>>2]=l;c[D+(l<<4)>>2]=c[W+(o<<4)>>2];c[D+(l<<4)+4>>2]=c[W+(o<<4)+4>>2];c[D+(l<<4)+8>>2]=c[W+(o<<4)+8>>2];m=c[X+24>>2]|0;if((m|0)>0){n=0;do{if((c[d+(n<<2)>>2]|0)==(o|0))c[t+(n<<2)>>2]=l;n=n+1|0}while((n|0)!=(m|0))}l=l+1|0;c[q>>2]=l}else c[m>>2]=n+-1;u=u+1|0}while((u|0)!=(L*3|0));V=222}if((V|0)==222){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);q=l}if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}if((q|0)>0){c[6435]=(c[6435]|0)+1;j=yc((q<<4|3)+16|0)|0;if(!j)j=0;else{c[(j+4+15&-16)+-4>>2]=j;j=j+4+15&-16}l=0;do{V=j+(l<<4)|0;c[V>>2]=c[X+48>>2];c[V+4>>2]=c[X+48+4>>2];c[V+8>>2]=c[X+48+8>>2];c[V+12>>2]=c[X+48+12>>2];l=l+1|0}while((l|0)!=(q|0))}else j=0;if((L|0)>0){c[6435]=(c[6435]|0)+1;l=yc((L*12|3)+16|0)|0;if(!l)l=0;else{c[(l+4+15&-16)+-4>>2]=l;l=l+4+15&-16}d=c[X+40>>2]|0;if(!d)c[X+40>>2]=l;else{c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);c[X+40>>2]=l}Tn(l|0,0,L*12|0)|0}bn(j|0,D|0,q<<4|0)|0;bn(c[X+40>>2]|0,h|0,L*12|0)|0;do if(M){if(!h){h=0;break}c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);h=0}while(0);if(!D){n=L;o=L*3|0;break}c[6436]=(c[6436]|0)+1;hd(c[D+-4>>2]|0);n=L;o=L*3|0;break}}}h=0;q=0;j=0;n=0;o=0}while(0);if(W|0){c[6436]=(c[6436]|0)+1;hd(c[W+-4>>2]|0)}if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[6435]=(c[6435]|0)+1;h=yc(1271)|0;if(!h)D=0;else{c[(h+4+15&-16)+-4>>2]=h;D=h+4+15&-16}Kc(D,b,q,j,0);if((n|0)>0){m=0;do{d=m*3|0;b=c[X+40>>2]|0;h=c[b+(d<<2)>>2]|0;l=c[b+(d+1<<2)>>2]|0;d=c[b+(d+2<<2)>>2]|0;if((h|0)<(l|0))Rf(D,h,l,0,0);if((l|0)<(d|0))Rf(D,l,d,0,0);if((d|0)<(h|0))Rf(D,d,h,0,0);Zf(D,h,l,d,0);m=m+1|0}while((m|0)!=(n|0))}if(q)if(!j)j=0;else{c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);j=0}if(o|0){h=c[X+40>>2]|0;if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);c[X+40>>2]=0}c[X+40>>2]=0}if(f){l=c[D+732>>2]|0;if((l|0)>0){d=D+740|0;o=0;h=243703;do{m=c[d>>2]|0;n=m+(o*52|0)|0;h=(_(h,1664525)|0)+1013904223|0;q=X+100|0;t=n;u=q+52|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));q=n;t=m+(((h>>>0)%(l>>>0)|0)*52|0)|0;u=q+52|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));q=m+(((h>>>0)%(l>>>0)|0)*52|0)|0;t=X+100|0;u=q+52|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));o=o+1|0}while((o|0)!=(l|0))}else h=243703;m=c[D+752>>2]|0;if((m|0)>0){n=D+760|0;o=0;do{d=c[n>>2]|0;l=d+(o*44|0)|0;h=(_(h,1664525)|0)+1013904223|0;d=d+(((h>>>0)%(m>>>0)|0)*44|0)|0;q=X+100|0;t=l;u=q+44|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));q=l;t=d;u=q+44|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));q=d;t=X+100|0;u=q+44|0;do{c[q>>2]=c[t>>2];q=q+4|0;t=t+4|0}while((q|0)<(u|0));o=o+1|0}while((o|0)!=(m|0))}}h=c[X+32>>2]|0;if(h|0){if(a[X+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[X+32>>2]=0}a[X+36>>0]=1;c[X+32>>2]=0;c[X+24>>2]=0;c[X+28>>2]=0;h=c[X+12>>2]|0;if(h|0){if(a[X+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[X+12>>2]=0}h=c[X+40>>2]|0;if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);c[X+40>>2]=0}c[X+40>>2]=0;if(!j){i=X;return D|0}c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);i=X;return D|0}function sc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0.0,O=0.0;I=i;i=i+16|0;f=c[b+1112>>2]|0;a:do if((f|0)>0)while(1){p=c[c[b+1120>>2]>>2]|0;f=c[p+348>>2]|0;if(f|0){hh(b+1048|0,f)|0;h=c[b+1052>>2]|0;if(h|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+1052>>2]=f;c[b+1060>>2]=(c[b+1060>>2]|0)+-1}Fk(p);if(p|0){c[6436]=(c[6436]|0)+1;hd(c[p+-4>>2]|0)}f=c[b+1112>>2]|0;if((f|0)<=0){p=f;break a}l=c[b+1120>>2]|0;h=0;do{j=l+(h<<2)|0;if((c[j>>2]|0)==(p|0)){H=14;break}h=h+1|0}while((h|0)<(f|0));if((H|0)==14){H=0;if((h|0)<(f|0)){c[j>>2]=c[l+(f+-1<<2)>>2];c[(c[b+1120>>2]|0)+(f+-1<<2)>>2]=p;c[b+1112>>2]=f+-1;f=f+-1|0}}if((f|0)<=0){p=f;break}}else p=f;while(0);f=c[b+712>>2]|0;f=(f|0)>(d|0)?d:f;if((p|0)<(f|0)){if((c[b+1116>>2]|0)<(f|0)){if(f){c[6435]=(c[6435]|0)+1;h=yc((f<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[b+1112>>2]|0;if((j|0)>0){l=0;do{c[h+(l<<2)>>2]=c[(c[b+1120>>2]|0)+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0));j=b+1120|0}else j=b+1120|0}else{h=0;j=b+1120|0}l=c[j>>2]|0;if(l|0){if(a[b+1124>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0)}c[j>>2]=0}a[b+1124>>0]=1;c[j>>2]=h;c[b+1116>>2]=f}else j=b+1120|0;h=p;do{c[(c[j>>2]|0)+(h<<2)>>2]=0;h=h+1|0}while((h|0)!=(f|0))}c[b+1112>>2]=f;if((f|0)>0){h=0;do{c[6435]=(c[6435]|0)+1;f=yc(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;j=f+348|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;j=c[b+1120>>2]|0;a[(c[j+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0;f=c[b+1112>>2]|0}while((h|0)<(f|0));if((f|0)>0){h=c[b+712>>2]|0;b:do if((h|0)>0){s=f;d=j;l=0;p=0;j=0;u=0;while(1){t=c[b+720>>2]|0;l=(g[k>>2]=(c[k>>2]=l,+g[k>>2])+ +g[t+(u*104|0)+8>>2],c[k>>2]|0);j=(g[k>>2]=(c[k>>2]=j,+g[k>>2])+ +g[t+(u*104|0)+12>>2],c[k>>2]|0);p=(g[k>>2]=(c[k>>2]=p,+g[k>>2])+ +g[t+(u*104|0)+16>>2],c[k>>2]|0);s=c[d+(((u*29873|0)%(s|0)|0)<<2)>>2]|0;t=t+(u*104|0)|0;d=c[s+24>>2]|0;if((d|0)==(c[s+28>>2]|0)?(v=d|0?d<<1:1,(d|0)<(v|0)):0){if(!v)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((v<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}d=c[s+24>>2]|0}if((d|0)>0){r=0;do{c[h+(r<<2)>>2]=c[(c[s+32>>2]|0)+(r<<2)>>2];r=r+1|0}while((r|0)!=(d|0))}r=c[s+32>>2]|0;if(r){if(a[s+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[r+-4>>2]|0);d=c[s+24>>2]|0}c[s+32>>2]=0}a[s+36>>0]=1;c[s+32>>2]=h;c[s+28>>2]=v;h=c[b+712>>2]|0}c[(c[s+32>>2]|0)+(d<<2)>>2]=t;c[s+24>>2]=d+1;r=u+1|0;if((r|0)>=(h|0))break b;s=c[b+1112>>2]|0;d=c[b+1120>>2]|0;u=r}}else{l=0;p=0;j=0}while(0);m=1.0/+(h|0);o=(c[k>>2]=l,+g[k>>2])*m;n=(c[k>>2]=j,+g[k>>2])*m;m=(c[k>>2]=p,+g[k>>2])*m;if((f|0)<0)E=0;else{if((f|0)!=0?(c[6435]=(c[6435]|0)+1,w=yc((f<<4|3)+16|0)|0,(w|0)!=0):0){c[(w+4+15&-16)+-4>>2]=w;h=w+4+15&-16}else h=0;j=0;do{g[h+(j<<4)>>2]=o;g[h+(j<<4)+4>>2]=n;g[h+(j<<4)+8>>2]=m;g[h+(j<<4)+12>>2]=0.0;j=j+1|0}while((j|0)!=(f|0));E=h}u=E+4|0;v=E+8|0;w=0;do{m=+(w|0)*.0625;m=2.0-(m>1.0?1.0:m);s=0;t=0;do{h=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;r=c[h+24>>2]|0;if((r|0)>0){p=c[h+32>>2]|0;l=0;j=0;h=0;d=0;do{J=c[p+(d<<2)>>2]|0;l=(g[k>>2]=(c[k>>2]=l,+g[k>>2])+ +g[J+8>>2],c[k>>2]|0);j=(g[k>>2]=(c[k>>2]=j,+g[k>>2])+ +g[J+12>>2],c[k>>2]|0);h=(g[k>>2]=(c[k>>2]=h,+g[k>>2])+ +g[J+16>>2],c[k>>2]|0);d=d+1|0}while((d|0)!=(r|0))}else{l=0;j=0;h=0}if(r){x=(c[k>>2]=l,+g[k>>2])*(1.0/+(r|0));z=(c[k>>2]=j,+g[k>>2])*(1.0/+(r|0));d=E+(t<<4)|0;y=+g[d>>2];J=E+(t<<4)+4|0;A=+g[J>>2];p=E+(t<<4)+8|0;q=+g[p>>2];B=q+m*((c[k>>2]=h,+g[k>>2])*(1.0/+(r|0))-q);l=s|(y+m*(x-y)-y)*(y+m*(x-y)-y)+(A+m*(z-A)-A)*(A+m*(z-A)-A)+(B-q)*(B-q)>1.1920928955078125e-07;g[d>>2]=y+m*(x-y);g[J>>2]=A+m*(z-A);g[p>>2]=B;g[E+(t<<4)+12>>2]=0.0;p=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;h=c[p+24>>2]|0;if((h|0)<0){if((c[p+28>>2]|0)<0){j=c[p+32>>2]|0;if(j|0){if(a[p+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[p+32>>2]=0}a[p+36>>0]=1;c[p+32>>2]=0;c[p+28>>2]=0}do{c[(c[p+32>>2]|0)+(h<<2)>>2]=0;h=h+1|0}while((h|0)!=0)}c[p+24>>2]=0;s=l}t=t+1|0}while((t|0)<(f|0));w=w+1|0;h=c[b+712>>2]|0;c:do if((h|0)>0){if((f|0)>1)t=0;else{r=0;while(1){p=c[c[b+1120>>2]>>2]|0;d=(c[b+720>>2]|0)+(r*104|0)|0;j=c[p+24>>2]|0;if((j|0)==(c[p+28>>2]|0)?(D=j|0?j<<1:1,(j|0)<(D|0)):0){if(!D)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((D<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[p+24>>2]|0}if((j|0)>0){l=0;do{c[h+(l<<2)>>2]=c[(c[p+32>>2]|0)+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0))}l=c[p+32>>2]|0;if(l){if(a[p+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);j=c[p+24>>2]|0}c[p+32>>2]=0}a[p+36>>0]=1;c[p+32>>2]=h;c[p+28>>2]=D;h=c[b+712>>2]|0}c[(c[p+32>>2]|0)+(j<<2)>>2]=d;c[p+24>>2]=j+1;r=r+1|0;if((r|0)>=(h|0))break c}}do{d=c[b+720>>2]|0;m=+g[d+(t*104|0)+8>>2];n=+g[d+(t*104|0)+12>>2];o=+g[d+(t*104|0)+16>>2];l=1;p=0;x=+N(+(+g[E>>2]-m))+ +N(+(+g[u>>2]-n))+ +N(+(+g[v>>2]-o));while(1){q=+N(+(+g[E+(l<<4)>>2]-m))+ +N(+(+g[E+(l<<4)+4>>2]-n))+ +N(+(+g[E+(l<<4)+8>>2]-o));j=q<x;p=j?l:p;l=l+1|0;if((l|0)==(f|0))break;else x=j?q:x}r=c[(c[b+1120>>2]|0)+(p<<2)>>2]|0;p=d+(t*104|0)|0;j=c[r+24>>2]|0;if((j|0)==(c[r+28>>2]|0)?(C=j|0?j<<1:1,(j|0)<(C|0)):0){if(!C)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((C<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[r+24>>2]|0}if((j|0)>0){l=0;do{c[h+(l<<2)>>2]=c[(c[r+32>>2]|0)+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0))}l=c[r+32>>2]|0;if(l){if(a[r+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[l+-4>>2]|0);j=c[r+24>>2]|0}c[r+32>>2]=0}a[r+36>>0]=1;c[r+32>>2]=h;c[r+28>>2]=C;h=c[b+712>>2]|0}c[(c[r+32>>2]|0)+(j<<2)>>2]=p;c[r+24>>2]=j+1;t=t+1|0}while((t|0)<(h|0))}while(0)}while((w|0)<(e|0)&s);if((h|0)>0){h=h<<2;c[6435]=(c[6435]|0)+1;f=yc((h|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}Tn(f|0,-1,h|0)|0;w=f}else w=0;f=c[b+1112>>2]|0;if((f|0)>0){d=c[b+1120>>2]|0;p=0;do{h=c[d+(p<<2)>>2]|0;if((c[h+24>>2]|0)>0){j=c[b+720>>2]|0;l=c[(c[b+1120>>2]|0)+(p<<2)>>2]|0;f=0;while(1){c[w+((((c[(c[h+32>>2]|0)+(f<<2)>>2]|0)-j|0)/104|0)<<2)>>2]=p;f=f+1|0;if((f|0)<(c[l+24>>2]|0))h=l;else break}f=c[b+1112>>2]|0}p=p+1|0}while((p|0)<(f|0))}if((c[b+752>>2]|0)>0){t=0;do{J=c[b+760>>2]|0;f=c[b+720>>2]|0;h=((c[J+(t*44|0)+8>>2]|0)-f|0)/104|0;c[I>>2]=h;c[I+4>>2]=((c[J+(t*44|0)+12>>2]|0)-f|0)/104|0;c[I+8>>2]=((c[J+(t*44|0)+16>>2]|0)-f|0)/104|0;f=0;while(1){d=c[w+(h<<2)>>2]|0;s=1;do{h=c[I+(((s+f|0)%3|0)<<2)>>2]|0;d:do if((c[w+(h<<2)>>2]|0)!=(d|0)){r=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;p=(c[b+720>>2]|0)+(h*104|0)|0;h=c[r+24>>2]|0;e:do if((h|0)>0){l=c[r+32>>2]|0;j=0;while(1){if((c[l+(j<<2)>>2]|0)==(p|0))break;j=j+1|0;if((j|0)>=(h|0))break e}if((j|0)!=(h|0))break d}while(0);if((h|0)==(c[r+28>>2]|0)?(F=h|0?h<<1:1,(h|0)<(F|0)):0){if(!F)l=0;else{c[6435]=(c[6435]|0)+1;h=yc((F<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}l=h;h=c[r+24>>2]|0}if((h|0)>0){j=0;do{c[l+(j<<2)>>2]=c[(c[r+32>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[r+32>>2]|0;if(j){if(a[r+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);h=c[r+24>>2]|0}c[r+32>>2]=0}a[r+36>>0]=1;c[r+32>>2]=l;c[r+28>>2]=F}c[(c[r+32>>2]|0)+(h<<2)>>2]=p;c[r+24>>2]=h+1}while(0);s=s+1|0}while((s|0)!=3);f=f+1|0;if((f|0)>=3)break;h=c[I+(f<<2)>>2]|0}t=t+1|0}while((t|0)<(c[b+752>>2]|0));f=c[b+1112>>2]|0}if((f|0)>1){c[6435]=(c[6435]|0)+1;f=yc(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;r=f+36|0;a[r>>0]=1;s=f+32|0;c[s>>2]=0;t=f+24|0;c[t>>2]=0;u=f+28|0;c[u>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;v=f+348|0;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[v+12>>2]=0;c[v+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;v=f;a[f+377>>0]=0;l=c[b+712>>2]|0;if((l|0)>0){c[6435]=(c[6435]|0)+1;f=yc((l<<2|3)+16|0)|0;if(!f)j=0;else{c[(f+4+15&-16)+-4>>2]=f;j=f+4+15&-16}f=c[t>>2]|0;if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[s>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}f=c[s>>2]|0;if(f|0){if(a[r>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[s>>2]=0}a[r>>0]=1;c[s>>2]=j;c[u>>2]=l;f=c[b+712>>2]|0;if((f|0)>0){j=c[t>>2]|0;h=l;d=0;while(1){p=(c[b+720>>2]|0)+(d*104|0)|0;do if((j|0)==(h|0)){l=h|0?h<<1:1;if((h|0)>=(l|0)){l=h;break}if(!l)f=0;else{c[6435]=(c[6435]|0)+1;f=yc((l<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[t>>2]|0}if((h|0)>0){j=0;do{c[f+(j<<2)>>2]=c[(c[s>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0))}j=c[s>>2]|0;if(j){if(a[r>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0);h=c[t>>2]|0}c[s>>2]=0}a[r>>0]=1;c[s>>2]=f;c[u>>2]=l;f=c[b+712>>2]|0}else{l=h;h=j}while(0);c[(c[s>>2]|0)+(h<<2)>>2]=p;j=h+1|0;c[t>>2]=j;d=d+1|0;if((d|0)>=(f|0))break;else h=l}}}f=c[b+1112>>2]|0;if((f|0)==(c[b+1116>>2]|0)?(G=f|0?f<<1:1,(f|0)<(G|0)):0){if(!G)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((G<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[b+1112>>2]|0}if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[b+1120>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[b+1120>>2]|0;if(h){if(a[b+1124>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[b+1112>>2]|0}c[b+1120>>2]=0}a[b+1124>>0]=1;c[b+1120>>2]=j;c[b+1116>>2]=G}c[(c[b+1120>>2]|0)+(f<<2)>>2]=v;J=f+1|0;c[b+1112>>2]=J;F=c[b+1120>>2]|0;f=F+(f<<2)|0;G=c[F>>2]|0;c[F>>2]=c[f>>2];c[f>>2]=G;f=J}if((f|0)>0){h=0;do{d=c[(c[b+1120>>2]|0)+(h<<2)>>2]|0;f:do if(!(c[d+24>>2]|0)){h=h+-1|0;f=c[d+348>>2]|0;if(f|0){hh(b+1048|0,f)|0;j=c[b+1052>>2]|0;if(j|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[b+1052>>2]=f;c[b+1060>>2]=(c[b+1060>>2]|0)+-1}Fk(d);if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}f=c[b+1112>>2]|0;if((f|0)>0){p=c[b+1120>>2]|0;j=0;while(1){l=p+(j<<2)|0;if((c[l>>2]|0)==(d|0))break;j=j+1|0;if((j|0)>=(f|0))break f}if((j|0)<(f|0)){c[l>>2]=c[p+(f+-1<<2)>>2];c[(c[b+1120>>2]|0)+(f+-1<<2)>>2]=d;c[b+1112>>2]=f+-1;f=f+-1|0}}}while(0);h=h+1|0}while((h|0)<(f|0))}if(w|0){c[6436]=(c[6436]|0)+1;hd(c[w+-4>>2]|0)}if(E|0){c[6436]=(c[6436]|0)+1;hd(c[E+-4>>2]|0)}}else H=212}else H=212;g:do if((H|0)==212){p=c[b+772>>2]|0;if(p|0){if((f|0)<(p|0)){if((c[b+1116>>2]|0)<(p|0)){c[6435]=(c[6435]|0)+1;h=yc((p<<2|3)+16|0)|0;if(!h)l=0;else{c[(h+4+15&-16)+-4>>2]=h;l=h+4+15&-16}h=c[b+1112>>2]|0;if((h|0)>0){j=0;do{c[l+(j<<2)>>2]=c[(c[b+1120>>2]|0)+(j<<2)>>2];j=j+1|0}while((j|0)!=(h|0))}h=c[b+1120>>2]|0;if(h|0){if(a[b+1124>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[b+1120>>2]=0}a[b+1124>>0]=1;c[b+1120>>2]=l;c[b+1116>>2]=p;h=b+1120|0}else h=b+1120|0;do{c[(c[h>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)!=(p|0))}c[b+1112>>2]=p;if((p|0)>0){h=0;do{c[6435]=(c[6435]|0)+1;f=yc(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;J=f+348|0;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=0;c[J+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;a[(c[(c[b+1120>>2]|0)+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0}while((h|0)<(c[b+1112>>2]|0))}if((c[b+772>>2]|0)<=0)break;d=0;while(1){r=0;do{l=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;p=(c[b+780>>2]|0)+(d*104|0)+8+(r<<2)|0;f=c[l+24>>2]|0;if((f|0)==(c[l+28>>2]|0)?(s=f|0?f<<1:1,(f|0)<(s|0)):0){if(!s)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((s<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[l+24>>2]|0}if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[l+32>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[l+32>>2]|0;if(h){if(a[l+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[l+24>>2]|0}c[l+32>>2]=0}a[l+36>>0]=1;c[l+32>>2]=j;c[l+28>>2]=s}c[(c[l+32>>2]|0)+(f<<2)>>2]=c[p>>2];c[l+24>>2]=f+1;r=r+1|0}while((r|0)!=4);d=d+1|0;if((d|0)>=(c[b+772>>2]|0))break g}}p=c[b+752>>2]|0;if((f|0)<(p|0)){if((c[b+1116>>2]|0)<(p|0)){if(p){c[6435]=(c[6435]|0)+1;h=yc((p<<2|3)+16|0)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}j=c[b+1112>>2]|0;if((j|0)>0){l=0;do{c[h+(l<<2)>>2]=c[(c[b+1120>>2]|0)+(l<<2)>>2];l=l+1|0}while((l|0)!=(j|0));l=b+1120|0}else l=b+1120|0}else{h=0;l=b+1120|0}j=c[l>>2]|0;if(j|0){if(a[b+1124>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[l>>2]=0}a[b+1124>>0]=1;c[l>>2]=h;c[b+1116>>2]=p}do{c[(c[b+1120>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)!=(p|0))}c[b+1112>>2]=p;if((p|0)>0){h=0;do{c[6435]=(c[6435]|0)+1;f=yc(403)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}a[f+16>>0]=1;c[f+12>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;a[f+36>>0]=1;c[f+32>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;a[f+56>>0]=1;c[f+52>>2]=0;c[f+44>>2]=0;c[f+48>>2]=0;J=f+348|0;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=0;c[J+12>>2]=0;c[J+16>>2]=0;g[f+368>>2]=100.0;g[f+372>>2]=.009999999776482582;a[f+376>>0]=0;c[(c[b+1120>>2]|0)+(h<<2)>>2]=f;a[(c[(c[b+1120>>2]|0)+(h<<2)>>2]|0)+377>>0]=1;h=h+1|0}while((h|0)<(c[b+1112>>2]|0))}if((c[b+752>>2]|0)>0){d=0;do{r=0;do{l=c[(c[b+1120>>2]|0)+(d<<2)>>2]|0;p=(c[b+760>>2]|0)+(d*44|0)+8+(r<<2)|0;f=c[l+24>>2]|0;if((f|0)==(c[l+28>>2]|0)?(t=f|0?f<<1:1,(f|0)<(t|0)):0){if(!t)j=0;else{c[6435]=(c[6435]|0)+1;f=yc((t<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}j=f;f=c[l+24>>2]|0}if((f|0)>0){h=0;do{c[j+(h<<2)>>2]=c[(c[l+32>>2]|0)+(h<<2)>>2];h=h+1|0}while((h|0)!=(f|0))}h=c[l+32>>2]|0;if(h){if(a[l+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0);f=c[l+24>>2]|0}c[l+32>>2]=0}a[l+36>>0]=1;c[l+32>>2]=j;c[l+28>>2]=t}c[(c[l+32>>2]|0)+(f<<2)>>2]=c[p>>2];c[l+24>>2]=f+1;r=r+1|0}while((r|0)!=3);d=d+1|0}while((d|0)<(c[b+752>>2]|0))}}while(0);f=c[b+1112>>2]|0;if(!f){J=0;i=I;return J|0}if((f|0)>0){t=0;do{s=c[(c[b+1120>>2]|0)+(t<<2)>>2]|0;g[s+128>>2]=0.0;d=c[s+24>>2]|0;p=c[s+4>>2]|0;if((d|0)>(p|0)){do if((c[s+8>>2]|0)<(d|0)){if(!d){f=0;h=p}else{c[6435]=(c[6435]|0)+1;f=yc((d<<2|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[s+4>>2]|0}j=c[s+12>>2]|0;if((h|0)<=0){if(!j){a[s+16>>0]=1;c[s+12>>2]=f;c[s+8>>2]=d;break}}else{l=0;do{c[f+(l<<2)>>2]=c[j+(l<<2)>>2];l=l+1|0}while((l|0)!=(h|0))}if(a[s+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[s+16>>0]=1;c[s+12>>2]=f;c[s+8>>2]=d}else f=c[s+12>>2]|0;while(0);Tn(f+(p<<2)|0,0,d-p<<2|0)|0;l=c[s+24>>2]|0}else l=d;c[s+4>>2]=d;if((l|0)>0){f=c[s+32>>2]|0;h=c[s+12>>2]|0;j=0;do{m=+g[(c[f+(j<<2)>>2]|0)+88>>2];if(m==0.0){a[s+376>>0]=1;m=999999984306749440.0}else m=1.0/m;g[h+(j<<2)>>2]=m;q=m+ +g[s+128>>2];g[s+128>>2]=q;j=j+1|0}while((j|0)!=(l|0));g[s+128>>2]=1.0/q;f=c[s+32>>2]|0;h=c[s+12>>2]|0;n=0.0;o=0.0;m=0.0;j=0;do{J=c[f+(j<<2)>>2]|0;B=+g[h+(j<<2)>>2];n=n+ +g[J+8>>2]*B;m=m+B*+g[J+12>>2];o=o+B*+g[J+16>>2];j=j+1|0}while((j|0)!=(l|0));q=1.0/q}else{q=1.0/+g[s+128>>2];g[s+128>>2]=q;n=0.0;o=0.0;m=0.0}z=n*q;x=m*q;o=o*q;g[s+228>>2]=z;g[s+232>>2]=x;g[s+236>>2]=o;g[s+240>>2]=0.0;f=s+316|0;h=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0));f=s+132|0;h=f+48|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(h|0));f=c[s+24>>2]|0;if((f|0)>0){h=c[s+32>>2]|0;j=c[s+12>>2]|0;B=+g[s+132>>2];A=+g[s+152>>2];y=0.0;n=+g[s+136>>2];m=+g[s+140>>2];q=+g[s+156>>2];l=0;do{J=c[h+(l<<2)>>2]|0;O=+g[J+8>>2]-z;L=+g[J+12>>2]-x;M=+g[J+16>>2]-o;K=+g[j+(l<<2)>>2];B=B+K*(L*L+M*M);g[s+132>>2]=B;A=K*(O*O+M*M)+A;g[s+152>>2]=A;y=(O*O+L*L)*K+y;g[s+172>>2]=y;n=n-L*O*K;g[s+136>>2]=n;m=m-M*O*K;g[s+140>>2]=m;q=q-M*L*K;g[s+156>>2]=q;l=l+1|0}while((l|0)!=(f|0));j=(g[k>>2]=q,c[k>>2]|0);f=(g[k>>2]=m,c[k>>2]|0);l=s+136|0;p=s+140|0;d=s+156|0;r=s+152|0;x=A;h=(g[k>>2]=n,c[k>>2]|0);o=B}else{h=c[s+136>>2]|0;J=c[s+140>>2]|0;j=c[s+156>>2]|0;q=(c[k>>2]=j,+g[k>>2]);n=(c[k>>2]=h,+g[k>>2]);l=s+136|0;p=s+140|0;d=s+156|0;r=s+152|0;y=0.0;x=+g[s+152>>2];f=J;o=+g[s+132>>2];m=(c[k>>2]=J,+g[k>>2])}L=(c[k>>2]=j,+g[k>>2]);z=x*y-q*L;K=(c[k>>2]=f,+g[k>>2]);M=(c[k>>2]=h,+g[k>>2]);A=q*K-y*M;B=L*M-x*K;O=1.0/(z*o+n*A+B*m);g[s+132>>2]=z*O;g[l>>2]=(L*m-y*n)*O;g[p>>2]=(q*n-x*m)*O;g[s+144>>2]=0.0;g[s+148>>2]=A*O;g[r>>2]=(y*o-K*m)*O;g[d>>2]=(M*m-q*o)*O;g[s+160>>2]=0.0;g[s+164>>2]=B*O;g[s+168>>2]=(K*n-L*o)*O;g[s+172>>2]=(x*o-M*n)*O;g[s+176>>2]=0.0;c[s+60>>2]=1065353216;c[s+64>>2]=0;c[s+64+4>>2]=0;c[s+64+8>>2]=0;c[s+64+12>>2]=0;c[s+80>>2]=1065353216;c[s+84>>2]=0;c[s+84+4>>2]=0;c[s+84+8>>2]=0;c[s+84+12>>2]=0;c[s+100>>2]=1065353216;c[s+104>>2]=0;c[s+104+4>>2]=0;c[s+104+8>>2]=0;c[s+104+12>>2]=0;c[s+104+16>>2]=0;c[s+108>>2]=c[s+228>>2];c[s+108+4>>2]=c[s+228+4>>2];c[s+108+8>>2]=c[s+228+8>>2];c[s+108+12>>2]=c[s+228+12>>2];p=c[s+24>>2]|0;l=c[s+44>>2]|0;if((l|0)<(p|0)){if((c[s+48>>2]|0)<(p|0)){if(!p){f=0;h=l}else{c[6435]=(c[6435]|0)+1;f=yc((p<<4|3)+16|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[s+44>>2]|0}if((h|0)>0){j=0;do{J=f+(j<<4)|0;H=(c[s+52>>2]|0)+(j<<4)|0;c[J>>2]=c[H>>2];c[J+4>>2]=c[H+4>>2];c[J+8>>2]=c[H+8>>2];c[J+12>>2]=c[H+12>>2];j=j+1|0}while((j|0)!=(h|0))}h=c[s+52>>2]|0;if(h|0){if(a[s+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[h+-4>>2]|0)}c[s+52>>2]=0}a[s+56>>0]=1;c[s+52>>2]=f;c[s+48>>2]=p;h=s+52|0}else h=s+52|0;f=l;do{J=(c[h>>2]|0)+(f<<4)|0;c[J>>2]=c[I>>2];c[J+4>>2]=c[I+4>>2];c[J+8>>2]=c[I+8>>2];c[J+12>>2]=c[I+12>>2];f=f+1|0}while((f|0)!=(p|0))}c[s+44>>2]=p;if((p|0)>0){f=0;do{J=c[s+52>>2]|0;H=c[(c[s+32>>2]|0)+(f<<2)>>2]|0;M=+g[H+12>>2]-+g[s+232>>2];O=+g[H+16>>2]-+g[s+236>>2];g[J+(f<<4)>>2]=+g[H+8>>2]-+g[s+228>>2];g[J+(f<<4)+4>>2]=M;g[J+(f<<4)+8>>2]=O;g[J+(f<<4)+12>>2]=0.0;f=f+1|0}while((f|0)<(c[s+44>>2]|0))}t=t+1|0}while((t|0)<(c[b+1112>>2]|0))}$c(b);f=c[b+1112>>2]|0;d=_(f,f)|0;p=c[b+1132>>2]|0;if((d|0)>(p|0)){do if((c[b+1136>>2]|0)<(d|0)){if(!d){f=0;h=p}else{c[6435]=(c[6435]|0)+1;f=yc(d+19|0)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}h=c[b+1132>>2]|0}j=c[b+1140>>2]|0;if((h|0)<=0){if(!j){a[b+1144>>0]=1;c[b+1140>>2]=f;c[b+1136>>2]=d;break}}else{l=0;do{a[f+l>>0]=a[j+l>>0]|0;l=l+1|0}while((l|0)!=(h|0))}if(a[b+1144>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[b+1144>>0]=1;c[b+1140>>2]=f;c[b+1136>>2]=d}else f=c[b+1140>>2]|0;while(0);Tn(f+p|0,0,d-p|0)|0;f=c[b+1112>>2]|0}c[b+1132>>2]=d;if((f|0)<=0){J=f;i=I;return J|0}t=c[b+1120>>2]|0;v=0;do{u=c[t+(v<<2)>>2]|0;c[u+380>>2]=v;w=0;do{h=c[t+(w<<2)>>2]|0;j=c[u+24>>2]|0;h:do if((j|0)>0){l=c[h+24>>2]|0;r=0;while(1){if((l|0)>0){p=c[(c[u+32>>2]|0)+(r<<2)>>2]|0;d=c[h+32>>2]|0;s=0;do{if((p|0)==(c[d+(s<<2)>>2]|0)){h=1;break h}s=s+1|0}while((s|0)<(l|0))}r=r+1|0;if((r|0)>=(j|0)){h=0;break}}}else h=0;while(0);J=(_(f,w)|0)+v|0;a[(c[b+1140>>2]|0)+J>>0]=h;w=w+1|0}while((w|0)!=(f|0));v=v+1|0}while((v|0)!=(f|0));i=I;return f|0}function tc(b){b=b|0;var d=0,e=0.0,f=0.0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0,ja=0,ka=0;Y=i;i=i+320|0;li(11923);ae(b);a:do if(Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(X=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(Eb[c[(c[X>>2]|0)+48>>2]&127](X)|0)&6144|0):0){E=Y+256+44|0;F=Y+256+4|0;G=Y+256+8|0;H=Y+256+16|0;I=Y+256+20|0;J=Y+256+24|0;L=Y+256+32|0;M=Y+256+36|0;N=Y+256+40|0;O=Y+256+48|0;P=Y+256+52|0;S=Y+256+56|0;T=Y+256+48|0;U=Y+256+16|0;V=Y+256+32|0;W=Y+256+48|0;B=Y+256+16|0;C=Y+256+32|0;D=Y+256+48|0;d=Eb[c[(c[b>>2]|0)+104>>2]&127](b)|0;while(1){X=d+-1|0;if((d|0)<=0)break a;p=Zb[c[(c[b>>2]|0)+108>>2]&31](b,X)|0;d=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;d=(Eb[c[(c[d>>2]|0)+48>>2]&127](d)|0)>>>11;o=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=(Eb[c[(c[o>>2]|0)+48>>2]&127](o)|0)>>>12;A=+g[p+40>>2];b:do if(!(A<=0.0))switch(c[p+4>>2]|0){case 3:{c[Y+256>>2]=1065353216;c[Y+256+4>>2]=0;c[Y+256+4+4>>2]=0;c[Y+256+4+8>>2]=0;c[Y+256+4+12>>2]=0;c[Y+256+20>>2]=1065353216;c[Y+256+24>>2]=0;c[Y+256+24+4>>2]=0;c[Y+256+24+8>>2]=0;c[Y+256+24+12>>2]=0;c[Y+256+40>>2]=1065353216;c[E>>2]=0;c[E+4>>2]=0;c[E+8>>2]=0;c[E+12>>2]=0;c[E+16>>2]=0;z=+g[p+300>>2];y=+g[p+304>>2];x=+g[p+308>>2];o=c[p+28>>2]|0;w=z*+g[o+20>>2]+y*+g[o+24>>2]+x*+g[o+28>>2]+ +g[o+56>>2];v=z*+g[o+36>>2]+y*+g[o+40>>2]+x*+g[o+44>>2]+ +g[o+60>>2];g[Y+256+48>>2]=z*+g[o+4>>2]+y*+g[o+8>>2]+x*+g[o+12>>2]+ +g[o+52>>2];g[Y+256+52>>2]=w;g[Y+256+56>>2]=v;g[Y+256+60>>2]=0.0;o=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[o>>2]|0)+56>>2]&7](o,Y+256|0,A);v=+g[p+316>>2];w=+g[p+320>>2];x=+g[p+324>>2];p=c[p+32>>2]|0;y=v*+g[p+20>>2]+w*+g[p+24>>2]+x*+g[p+28>>2]+ +g[p+56>>2];z=v*+g[p+36>>2]+w*+g[p+40>>2]+x*+g[p+44>>2]+ +g[p+60>>2];g[Y+256+48>>2]=v*+g[p+4>>2]+w*+g[p+8>>2]+x*+g[p+12>>2]+ +g[p+52>>2];g[Y+256+52>>2]=y;g[Y+256+56>>2]=z;g[Y+256+60>>2]=0.0;if(d&1|0){p=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[p>>2]|0)+56>>2]&7](p,Y+256|0,A)}break b}case 4:{n=c[p+28>>2]|0;Z=+g[p+552>>2];da=+g[n+4>>2];e=+g[p+552+16>>2];ca=+g[n+8>>2];f=+g[p+552+32>>2];ba=+g[n+12>>2];h=+g[p+552+4>>2];j=+g[p+552+20>>2];q=+g[p+552+36>>2];r=+g[p+552+8>>2];t=+g[p+552+24>>2];v=+g[p+552+40>>2];aa=+g[n+20>>2];$=+g[n+24>>2];_=+g[n+28>>2];s=+g[n+36>>2];u=+g[n+40>>2];w=+g[n+44>>2];fa=+g[p+552+48>>2];ea=+g[p+552+52>>2];z=+g[p+552+56>>2];x=+g[n+52>>2]+(da*fa+ca*ea+ba*z);y=aa*fa+$*ea+_*z+ +g[n+56>>2];z=s*fa+u*ea+w*z+ +g[n+60>>2];g[Y+256>>2]=Z*da+e*ca+f*ba;g[Y+256+4>>2]=da*h+ca*j+ba*q;g[Y+256+8>>2]=da*r+ca*t+ba*v;g[Y+256+12>>2]=0.0;g[Y+256+16>>2]=Z*aa+e*$+f*_;g[Y+256+20>>2]=h*aa+j*$+q*_;g[Y+256+24>>2]=r*aa+t*$+v*_;g[Y+256+28>>2]=0.0;g[Y+256+32>>2]=Z*s+e*u+f*w;g[Y+256+36>>2]=h*s+j*u+q*w;g[Y+256+40>>2]=r*s+t*u+v*w;g[Y+256+44>>2]=0.0;g[Y+256+48>>2]=x;g[Y+256+52>>2]=y;g[Y+256+56>>2]=z;g[Y+256+60>>2]=0.0;if(!(d&1)){n=c[p+32>>2]|0;u=+g[p+616>>2];h=+g[n+4>>2];v=+g[p+616+16>>2];j=+g[n+8>>2];w=+g[p+616+32>>2];q=+g[n+12>>2];x=+g[p+616+4>>2];y=+g[p+616+20>>2];z=+g[p+616+36>>2];Z=+g[p+616+8>>2];$=+g[p+616+24>>2];ba=+g[p+616+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+616+48>>2];f=+g[p+616+52>>2];fa=+g[p+616+56>>2];da=+g[n+52>>2]+(h*e+j*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Y+256>>2]=u*h+v*j+w*q;g[Y+256+4>>2]=h*x+j*y+q*z;g[Y+256+8>>2]=h*Z+j*$+q*ba;g[Y+256+12>>2]=0.0;g[Y+256+16>>2]=u*r+v*s+w*t;g[Y+256+20>>2]=x*r+y*s+z*t;g[Y+256+24>>2]=Z*r+$*s+ba*t;g[Y+256+28>>2]=0.0;g[Y+256+32>>2]=u*_+v*aa+w*ca;g[Y+256+36>>2]=x*_+y*aa+z*ca;g[Y+256+40>>2]=Z*_+$*aa+ba*ca;g[Y+256+44>>2]=0.0;g[Y+256+48>>2]=da;g[Y+256+52>>2]=ea;g[Y+256+56>>2]=fa;g[Y+256+60>>2]=0.0}else{n=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[n>>2]|0)+56>>2]&7](n,Y+256|0,A);n=c[p+32>>2]|0;u=+g[p+616>>2];h=+g[n+4>>2];v=+g[p+616+16>>2];j=+g[n+8>>2];w=+g[p+616+32>>2];q=+g[n+12>>2];x=+g[p+616+4>>2];y=+g[p+616+20>>2];z=+g[p+616+36>>2];Z=+g[p+616+8>>2];$=+g[p+616+24>>2];ba=+g[p+616+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+616+48>>2];f=+g[p+616+52>>2];fa=+g[p+616+56>>2];da=+g[n+52>>2]+(h*e+j*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Y+256>>2]=u*h+v*j+w*q;g[Y+256+4>>2]=h*x+j*y+q*z;g[Y+256+8>>2]=h*Z+j*$+q*ba;g[Y+256+12>>2]=0.0;g[Y+256+16>>2]=u*r+v*s+w*t;g[Y+256+20>>2]=x*r+y*s+z*t;g[Y+256+24>>2]=Z*r+$*s+ba*t;g[Y+256+28>>2]=0.0;g[Y+256+32>>2]=u*_+v*aa+w*ca;g[Y+256+36>>2]=x*_+y*aa+z*ca;g[Y+256+40>>2]=Z*_+$*aa+ba*ca;g[Y+256+44>>2]=0.0;g[Y+256+48>>2]=da;g[Y+256+52>>2]=ea;g[Y+256+56>>2]=fa;g[Y+256+60>>2]=0.0;n=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[n>>2]|0)+56>>2]&7](n,Y+256|0,A)}j=+g[p+688>>2];f=+g[p+688+4>>2];e=+eh(j-f,6.2831854820251465);if(!(e<-3.1415927410125732))if(e>3.1415927410125732)h=e+-6.2831854820251465;else h=e;else h=e+6.2831854820251465;e=+eh(j+f,6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465}else e=e+6.2831854820251465;if(!(h==e)?(K=h>e,o&1|0):0){c[Y+240>>2]=c[Y+256+8>>2];c[Y+240+4>>2]=c[Y+256+24>>2];c[Y+240+8>>2]=c[Y+256+40>>2];g[Y+240+12>>2]=0.0;c[Y+224>>2]=c[Y+256>>2];c[Y+224+4>>2]=c[Y+256+16>>2];c[Y+224+8>>2]=c[Y+256+32>>2];g[Y+224+12>>2]=0.0;p=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=c[(c[p>>2]|0)+60>>2]|0;c[Y+208>>2]=0;c[Y+208+4>>2]=0;c[Y+208+8>>2]=0;c[Y+208+12>>2]=0;Lb[o&0](p,Y+256+48|0,Y+240|0,Y+224|0,A,A,K?0.0:h,K?6.2831854820251465:e,Y+208|0,K^1,10.0)}break b}case 5:{n=c[p+28>>2]|0;u=+g[p+300>>2];h=+g[n+4>>2];v=+g[p+300+16>>2];j=+g[n+8>>2];w=+g[p+300+32>>2];q=+g[n+12>>2];x=+g[p+300+4>>2];y=+g[p+300+20>>2];z=+g[p+300+36>>2];Z=+g[p+300+8>>2];$=+g[p+300+24>>2];ba=+g[p+300+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+300+48>>2];f=+g[p+300+52>>2];fa=+g[p+300+56>>2];da=+g[n+52>>2]+(h*e+j*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Y+256>>2]=u*h+v*j+w*q;g[F>>2]=h*x+j*y+q*z;g[G>>2]=h*Z+j*$+q*ba;g[Y+256+12>>2]=0.0;g[H>>2]=u*r+v*s+w*t;g[I>>2]=x*r+y*s+z*t;g[J>>2]=Z*r+$*s+ba*t;g[Y+256+28>>2]=0.0;g[L>>2]=u*_+v*aa+w*ca;g[M>>2]=x*_+y*aa+z*ca;g[N>>2]=Z*_+$*aa+ba*ca;g[Y+256+44>>2]=0.0;g[O>>2]=da;g[P>>2]=ea;g[S>>2]=fa;g[Y+256+60>>2]=0.0;if(!(d&1)){n=c[p+32>>2]|0;u=+g[p+364>>2];h=+g[n+4>>2];v=+g[p+364+16>>2];j=+g[n+8>>2];w=+g[p+364+32>>2];q=+g[n+12>>2];x=+g[p+364+4>>2];y=+g[p+364+20>>2];z=+g[p+364+36>>2];Z=+g[p+364+8>>2];$=+g[p+364+24>>2];ba=+g[p+364+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+364+48>>2];f=+g[p+364+52>>2];fa=+g[p+364+56>>2];da=+g[n+52>>2]+(h*e+j*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Y+256>>2]=u*h+v*j+w*q;g[F>>2]=h*x+j*y+q*z;g[G>>2]=h*Z+j*$+q*ba;g[Y+256+12>>2]=0.0;g[H>>2]=u*r+v*s+w*t;g[I>>2]=x*r+y*s+z*t;g[J>>2]=Z*r+$*s+ba*t;g[Y+256+28>>2]=0.0;g[L>>2]=u*_+v*aa+w*ca;g[M>>2]=x*_+y*aa+z*ca;g[N>>2]=Z*_+$*aa+ba*ca;g[Y+256+44>>2]=0.0;g[O>>2]=da;g[P>>2]=ea;g[S>>2]=fa;g[Y+256+60>>2]=0.0}else{n=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[n>>2]|0)+56>>2]&7](n,Y+256|0,A);n=c[p+32>>2]|0;u=+g[p+364>>2];h=+g[n+4>>2];v=+g[p+364+16>>2];j=+g[n+8>>2];w=+g[p+364+32>>2];q=+g[n+12>>2];x=+g[p+364+4>>2];y=+g[p+364+20>>2];z=+g[p+364+36>>2];Z=+g[p+364+8>>2];$=+g[p+364+24>>2];ba=+g[p+364+40>>2];r=+g[n+20>>2];s=+g[n+24>>2];t=+g[n+28>>2];_=+g[n+36>>2];aa=+g[n+40>>2];ca=+g[n+44>>2];e=+g[p+364+48>>2];f=+g[p+364+52>>2];fa=+g[p+364+56>>2];da=+g[n+52>>2]+(h*e+j*f+q*fa);ea=r*e+s*f+t*fa+ +g[n+56>>2];fa=_*e+aa*f+ca*fa+ +g[n+60>>2];g[Y+256>>2]=u*h+v*j+w*q;g[F>>2]=h*x+j*y+q*z;g[G>>2]=h*Z+j*$+q*ba;g[Y+256+12>>2]=0.0;g[H>>2]=u*r+v*s+w*t;g[I>>2]=x*r+y*s+z*t;g[J>>2]=Z*r+$*s+ba*t;g[Y+256+28>>2]=0.0;g[L>>2]=u*_+v*aa+w*ca;g[M>>2]=x*_+y*aa+z*ca;g[N>>2]=Z*_+$*aa+ba*ca;g[Y+256+44>>2]=0.0;g[O>>2]=da;g[P>>2]=ea;g[S>>2]=fa;g[Y+256+60>>2]=0.0;n=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[n>>2]|0)+56>>2]&7](n,Y+256|0,A)}if(o&1|0){Ej(Y+240|0,p,6.0868353843688965,A);ba=+g[Y+240>>2];ca=+g[Y+240+4>>2];da=+g[Y+240+8>>2];ea=ba*+g[H>>2]+ca*+g[I>>2]+da*+g[J>>2]+ +g[P>>2];fa=ba*+g[L>>2]+ca*+g[M>>2]+da*+g[N>>2]+ +g[S>>2];g[Y+240>>2]=ba*+g[Y+256>>2]+ca*+g[F>>2]+da*+g[G>>2]+ +g[O>>2];g[Y+240+4>>2]=ea;g[Y+240+8>>2]=fa;g[Y+240+12>>2]=0.0;d=0;do{Ej(Y+224|0,p,+(d|0)*6.283185005187988*.03125,A);ba=+g[Y+224>>2];ca=+g[Y+224+4>>2];da=+g[Y+224+8>>2];ea=ba*+g[H>>2]+ca*+g[I>>2]+da*+g[J>>2]+ +g[P>>2];fa=ba*+g[L>>2]+ca*+g[M>>2]+da*+g[N>>2]+ +g[S>>2];g[Y+224>>2]=ba*+g[Y+256>>2]+ca*+g[F>>2]+da*+g[G>>2]+ +g[O>>2];g[Y+224+4>>2]=ea;g[Y+224+8>>2]=fa;g[Y+224+12>>2]=0.0;o=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;n=c[(c[o>>2]|0)+8>>2]|0;c[Y+192>>2]=0;c[Y+192+4>>2]=0;c[Y+192+8>>2]=0;c[Y+192+12>>2]=0;mc[n&127](o,Y+240|0,Y+224|0,Y+192|0);if(!(d&3)){o=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;n=c[(c[o>>2]|0)+8>>2]|0;c[Y+176>>2]=0;c[Y+176+4>>2]=0;c[Y+176+8>>2]=0;c[Y+176+12>>2]=0;mc[n&127](o,T,Y+224|0,Y+176|0)}c[Y+240>>2]=c[Y+224>>2];c[Y+240+4>>2]=c[Y+224+4>>2];c[Y+240+8>>2]=c[Y+224+8>>2];c[Y+240+12>>2]=c[Y+224+12>>2];d=d+1|0}while((d|0)!=32);y=+g[p+452>>2];z=+g[p+512>>2];d=c[p+32>>2]|0;if(+g[d+344>>2]>0.0){ba=+g[p+364>>2];ca=+g[d+4>>2];da=+g[p+364+16>>2];ea=+g[d+8>>2];fa=+g[p+364+32>>2];v=+g[d+12>>2];$=+g[p+364+4>>2];aa=+g[p+364+20>>2];u=+g[p+364+36>>2];Z=+g[p+364+8>>2];_=+g[p+364+24>>2];t=+g[p+364+40>>2];ha=+g[d+20>>2];ga=+g[d+24>>2];s=+g[d+28>>2];r=+g[d+36>>2];q=+g[d+40>>2];j=+g[d+44>>2];h=+g[p+364+48>>2];f=+g[p+364+52>>2];e=+g[p+364+56>>2];w=r*h+q*f+j*e+ +g[d+60>>2];x=ha*h+ga*f+s*e+ +g[d+56>>2];e=+g[d+52>>2]+(ca*h+ea*f+v*e);f=Z*r+_*q+t*j;h=$*r+aa*q+u*j;j=ba*r+da*q+fa*j;q=Z*ha+_*ga+t*s;r=$*ha+aa*ga+u*s;s=ba*ha+da*ga+fa*s;t=ca*Z+ea*_+v*t;u=ca*$+ea*aa+v*u;v=ba*ca+da*ea+fa*v}else{o=c[p+28>>2]|0;da=+g[p+300>>2];ea=+g[o+4>>2];fa=+g[p+300+16>>2];ga=+g[o+8>>2];ha=+g[p+300+32>>2];v=+g[o+12>>2];ba=+g[p+300+4>>2];ca=+g[p+300+20>>2];u=+g[p+300+36>>2];$=+g[p+300+8>>2];aa=+g[p+300+24>>2];t=+g[p+300+40>>2];Z=+g[o+20>>2];_=+g[o+24>>2];s=+g[o+28>>2];r=+g[o+36>>2];q=+g[o+40>>2];j=+g[o+44>>2];h=+g[p+300+48>>2];f=+g[p+300+52>>2];e=+g[p+300+56>>2];w=r*h+q*f+j*e+ +g[o+60>>2];x=Z*h+_*f+s*e+ +g[o+56>>2];e=+g[o+52>>2]+(ea*h+ga*f+v*e);f=$*r+aa*q+t*j;h=ba*r+ca*q+u*j;j=da*r+fa*q+ha*j;q=$*Z+aa*_+t*s;r=ba*Z+ca*_+u*s;s=da*Z+fa*_+ha*s;t=ea*$+ga*aa+v*t;u=ea*ba+ga*ca+v*u;v=da*ea+fa*ga+ha*v}g[Y+256>>2]=v;g[F>>2]=u;g[G>>2]=t;g[Y+256+12>>2]=0.0;g[H>>2]=s;g[I>>2]=r;g[J>>2]=q;g[Y+256+28>>2]=0.0;g[L>>2]=j;g[M>>2]=h;g[N>>2]=f;g[Y+256+44>>2]=0.0;g[O>>2]=e;g[P>>2]=x;g[S>>2]=w;g[Y+256+60>>2]=0.0;c[Y+224>>2]=c[T>>2];c[Y+224+4>>2]=c[T+4>>2];c[Y+224+8>>2]=c[T+8>>2];c[Y+224+12>>2]=c[T+12>>2];g[Y+160>>2]=v;g[Y+160+4>>2]=s;g[Y+160+8>>2]=j;g[Y+160+12>>2]=0.0;g[Y+144>>2]=u;g[Y+144+4>>2]=r;g[Y+144+8>>2]=h;g[Y+144+12>>2]=0.0;p=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;o=c[(c[p>>2]|0)+60>>2]|0;c[Y+128>>2]=0;c[Y+128+4>>2]=0;c[Y+128+8>>2]=0;c[Y+128+12>>2]=0;Lb[o&0](p,Y+224|0,Y+160|0,Y+144|0,A,A,-z-y,y-z,Y+128|0,1,10.0)}break b}case 6:case 9:{c[Y+256>>2]=c[p+1064>>2];c[Y+256+4>>2]=c[p+1064+4>>2];c[Y+256+8>>2]=c[p+1064+8>>2];c[Y+256+12>>2]=c[p+1064+12>>2];l=p+1064+16|0;c[U>>2]=c[l>>2];c[U+4>>2]=c[l+4>>2];c[U+8>>2]=c[l+8>>2];c[U+12>>2]=c[l+12>>2];m=p+1064+32|0;c[V>>2]=c[m>>2];c[V+4>>2]=c[m+4>>2];c[V+8>>2]=c[m+8>>2];c[V+12>>2]=c[m+12>>2];n=p+1064+48|0;c[W>>2]=c[n>>2];c[W+4>>2]=c[n+4>>2];c[W+8>>2]=c[n+8>>2];c[W+12>>2]=c[n+12>>2];if(!(d&1)){c[Y+256>>2]=c[p+1128>>2];c[Y+256+4>>2]=c[p+1128+4>>2];c[Y+256+8>>2]=c[p+1128+8>>2];c[Y+256+12>>2]=c[p+1128+12>>2];c[U>>2]=c[p+1128+16>>2];c[U+4>>2]=c[p+1128+16+4>>2];c[U+8>>2]=c[p+1128+16+8>>2];c[U+12>>2]=c[p+1128+16+12>>2];c[V>>2]=c[p+1128+32>>2];c[V+4>>2]=c[p+1128+32+4>>2];c[V+8>>2]=c[p+1128+32+8>>2];c[V+12>>2]=c[p+1128+32+12>>2];c[W>>2]=c[p+1128+48>>2];c[W+4>>2]=c[p+1128+48+4>>2];c[W+8>>2]=c[p+1128+48+8>>2];c[W+12>>2]=c[p+1128+48+12>>2]}else{d=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[d>>2]|0)+56>>2]&7](d,Y+256|0,A);c[Y+256>>2]=c[p+1128>>2];c[Y+256+4>>2]=c[p+1128+4>>2];c[Y+256+8>>2]=c[p+1128+8>>2];c[Y+256+12>>2]=c[p+1128+12>>2];c[U>>2]=c[p+1128+16>>2];c[U+4>>2]=c[p+1128+16+4>>2];c[U+8>>2]=c[p+1128+16+8>>2];c[U+12>>2]=c[p+1128+16+12>>2];c[V>>2]=c[p+1128+32>>2];c[V+4>>2]=c[p+1128+32+4>>2];c[V+8>>2]=c[p+1128+32+8>>2];c[V+12>>2]=c[p+1128+32+12>>2];c[W>>2]=c[p+1128+48>>2];c[W+4>>2]=c[p+1128+48+4>>2];c[W+8>>2]=c[p+1128+48+8>>2];c[W+12>>2]=c[p+1128+48+12>>2];d=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[d>>2]|0)+56>>2]&7](d,Y+256|0,A)}if(o&1|0){c[Y+256>>2]=c[p+1064>>2];c[Y+256+4>>2]=c[p+1064+4>>2];c[Y+256+8>>2]=c[p+1064+8>>2];c[Y+256+12>>2]=c[p+1064+12>>2];c[U>>2]=c[l>>2];c[U+4>>2]=c[l+4>>2];c[U+8>>2]=c[l+8>>2];c[U+12>>2]=c[l+12>>2];c[V>>2]=c[m>>2];c[V+4>>2]=c[m+4>>2];c[V+8>>2]=c[m+8>>2];c[V+12>>2]=c[m+12>>2];c[W>>2]=c[n>>2];c[W+4>>2]=c[n+4>>2];c[W+8>>2]=c[n+8>>2];c[W+12>>2]=c[n+12>>2];d=p+1128+48|0;c[Y+240>>2]=c[Y+256+8>>2];c[Y+240+4>>2]=c[Y+256+24>>2];c[Y+240+8>>2]=c[Y+256+40>>2];g[Y+240+12>>2]=0.0;c[Y+224>>2]=c[Y+256>>2];c[Y+224+4>>2]=c[Y+256+16>>2];c[Y+224+8>>2]=c[Y+256+32>>2];g[Y+224+12>>2]=0.0;da=+g[p+932>>2];e=+g[p+932+4>>2];ga=+g[p+996>>2];fa=+g[p+996+4>>2];ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ia=c[(c[ja>>2]|0)+64>>2]|0;c[Y+112>>2]=0;c[Y+112+4>>2]=0;c[Y+112+8>>2]=0;c[Y+112+12>>2]=0;dc[ia&0](ja,d,Y+240|0,Y+224|0,A*.8999999761581421,da,e,ga,fa,Y+112|0,10.0,1);ja=c[Y+256+4>>2]|0;ia=c[Y+256+20>>2]|0;o=c[Y+256+36>>2]|0;c[Y+224>>2]=ja;c[Y+224+4>>2]=ia;c[Y+224+8>>2]=o;g[Y+224+12>>2]=0.0;fa=+g[p+1196>>2];ga=+g[p+1200>>2];e=+Q(+fa);fa=+R(+fa);da=+Q(+ga);ga=+R(+ga);ea=(c[k>>2]=ja,+g[k>>2]);ha=(c[k>>2]=ia,+g[k>>2]);f=(c[k>>2]=o,+g[k>>2]);g[Y+160>>2]=e*da*ea+e*ga*ha-fa*f;g[Y+160+4>>2]=da*ha-ga*ea;g[Y+160+8>>2]=fa*da*ea+fa*ga*ha+e*f;c[Y+256>>2]=c[p+1128>>2];c[Y+256+4>>2]=c[p+1128+4>>2];c[Y+256+8>>2]=c[p+1128+8>>2];c[Y+256+12>>2]=c[p+1128+12>>2];c[U>>2]=c[p+1128+16>>2];c[U+4>>2]=c[p+1128+16+4>>2];c[U+8>>2]=c[p+1128+16+8>>2];c[U+12>>2]=c[p+1128+16+12>>2];c[V>>2]=c[p+1128+32>>2];c[V+4>>2]=c[p+1128+32+4>>2];c[V+8>>2]=c[p+1128+32+8>>2];c[V+12>>2]=c[p+1128+32+12>>2];c[W>>2]=c[d>>2];c[W+4>>2]=c[d+4>>2];c[W+8>>2]=c[d+8>>2];c[W+12>>2]=c[d+12>>2];f=-+g[Y+256+16>>2];e=-+g[Y+256+32>>2];g[Y+144>>2]=-+g[Y+256>>2];g[Y+144+4>>2]=f;g[Y+144+8>>2]=e;g[Y+144+12>>2]=0.0;e=+g[p+868>>2];f=+g[p+868+4>>2];if(!(e>f)){if(e<f){ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ia=c[(c[ja>>2]|0)+60>>2]|0;c[Y+80>>2]=0;c[Y+80+4>>2]=0;c[Y+80+8>>2]=0;c[Y+80+12>>2]=0;Lb[ia&0](ja,d,Y+144|0,Y+160|0,A,A,e,f,Y+80|0,1,10.0)}}else{ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ia=c[(c[ja>>2]|0)+60>>2]|0;c[Y+96>>2]=0;c[Y+96+4>>2]=0;c[Y+96+8>>2]=0;c[Y+96+12>>2]=0;Lb[ia&0](ja,d,Y+144|0,Y+160|0,A,A,-3.1415927410125732,3.1415927410125732,Y+96|0,0,10.0)}c[Y+256>>2]=c[p+1064>>2];c[Y+256+4>>2]=c[p+1064+4>>2];c[Y+256+8>>2]=c[p+1064+8>>2];c[Y+256+12>>2]=c[p+1064+12>>2];c[U>>2]=c[l>>2];c[U+4>>2]=c[l+4>>2];c[U+8>>2]=c[l+8>>2];c[U+12>>2]=c[l+12>>2];c[V>>2]=c[m>>2];c[V+4>>2]=c[m+4>>2];c[V+8>>2]=c[m+8>>2];c[V+12>>2]=c[m+12>>2];c[W>>2]=c[n>>2];c[W+4>>2]=c[n+4>>2];c[W+8>>2]=c[n+8>>2];c[W+12>>2]=c[n+12>>2];c[Y+64>>2]=c[p+680>>2];c[Y+64+4>>2]=c[p+680+4>>2];c[Y+64+8>>2]=c[p+680+8>>2];c[Y+64+12>>2]=c[p+680+12>>2];c[Y+48>>2]=c[p+680+16>>2];c[Y+48+4>>2]=c[p+680+16+4>>2];c[Y+48+8>>2]=c[p+680+16+8>>2];c[Y+48+12>>2]=c[p+680+16+12>>2];ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ia=c[(c[ja>>2]|0)+72>>2]|0;c[Y+32>>2]=0;c[Y+32+4>>2]=0;c[Y+32+8>>2]=0;c[Y+32+12>>2]=0;yb[ia&31](ja,Y+64|0,Y+48|0,Y+256|0,Y+32|0)}break b}case 7:{c[Y+256>>2]=c[p+824>>2];c[Y+256+4>>2]=c[p+824+4>>2];c[Y+256+8>>2]=c[p+824+8>>2];c[Y+256+12>>2]=c[p+824+12>>2];c[B>>2]=c[p+824+16>>2];c[B+4>>2]=c[p+824+16+4>>2];c[B+8>>2]=c[p+824+16+8>>2];c[B+12>>2]=c[p+824+16+12>>2];c[C>>2]=c[p+824+32>>2];c[C+4>>2]=c[p+824+32+4>>2];c[C+8>>2]=c[p+824+32+8>>2];c[C+12>>2]=c[p+824+32+12>>2];c[D>>2]=c[p+824+48>>2];c[D+4>>2]=c[p+824+48+4>>2];c[D+8>>2]=c[p+824+48+8>>2];c[D+12>>2]=c[p+824+48+12>>2];if(!(d&1)){c[Y+256>>2]=c[p+888>>2];c[Y+256+4>>2]=c[p+888+4>>2];c[Y+256+8>>2]=c[p+888+8>>2];c[Y+256+12>>2]=c[p+888+12>>2];c[B>>2]=c[p+888+16>>2];c[B+4>>2]=c[p+888+16+4>>2];c[B+8>>2]=c[p+888+16+8>>2];c[B+12>>2]=c[p+888+16+12>>2];c[C>>2]=c[p+888+32>>2];c[C+4>>2]=c[p+888+32+4>>2];c[C+8>>2]=c[p+888+32+8>>2];c[C+12>>2]=c[p+888+32+12>>2];c[D>>2]=c[p+888+48>>2];c[D+4>>2]=c[p+888+48+4>>2];c[D+8>>2]=c[p+888+48+8>>2];c[D+12>>2]=c[p+888+48+12>>2]}else{ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[ja>>2]|0)+56>>2]&7](ja,Y+256|0,A);c[Y+256>>2]=c[p+888>>2];c[Y+256+4>>2]=c[p+888+4>>2];c[Y+256+8>>2]=c[p+888+8>>2];c[Y+256+12>>2]=c[p+888+12>>2];c[B>>2]=c[p+888+16>>2];c[B+4>>2]=c[p+888+16+4>>2];c[B+8>>2]=c[p+888+16+8>>2];c[B+12>>2]=c[p+888+16+12>>2];c[C>>2]=c[p+888+32>>2];c[C+4>>2]=c[p+888+32+4>>2];c[C+8>>2]=c[p+888+32+8>>2];c[C+12>>2]=c[p+888+32+12>>2];c[D>>2]=c[p+888+48>>2];c[D+4>>2]=c[p+888+48+4>>2];c[D+8>>2]=c[p+888+48+8>>2];c[D+12>>2]=c[p+888+48+12>>2];ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;kc[c[(c[ja>>2]|0)+56>>2]&7](ja,Y+256|0,A)}if(o&1|0){d=a[p+180>>0]|0?p+824|0:p+888|0;l=c[d>>2]|0;o=c[d+4>>2]|0;m=c[d+16>>2]|0;ia=c[d+20>>2]|0;n=c[d+32>>2]|0;ja=c[d+36>>2]|0;y=+g[d+48>>2];$=+g[d+52>>2];da=+g[d+56>>2];ga=+g[p+184>>2];_=(c[k>>2]=l,+g[k>>2]);Z=(c[k>>2]=o,+g[k>>2])*0.0;z=+g[d+8>>2]*0.0;ca=(c[k>>2]=m,+g[k>>2]);ba=(c[k>>2]=ia,+g[k>>2])*0.0;aa=+g[d+24>>2]*0.0;ha=(c[k>>2]=n,+g[k>>2]);fa=(c[k>>2]=ja,+g[k>>2])*0.0;ea=+g[d+40>>2]*0.0;g[Y+240>>2]=y+(z+(Z+_*ga));g[Y+240+4>>2]=$+(aa+(ba+ca*ga));g[Y+240+8>>2]=da+(ea+(fa+ha*ga));g[Y+240+12>>2]=0.0;ga=+g[p+188>>2];g[Y+224>>2]=y+(z+(Z+_*ga));g[Y+224+4>>2]=$+(aa+(ba+ca*ga));g[Y+224+8>>2]=da+(ea+(fa+ha*ga));g[Y+224+12>>2]=0.0;d=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ka=c[(c[d>>2]|0)+8>>2]|0;c[Y+16>>2]=0;c[Y+16+4>>2]=0;c[Y+16+8>>2]=0;c[Y+16+12>>2]=0;mc[ka&127](d,Y+240|0,Y+224|0,Y+16|0);c[Y+160>>2]=l;c[Y+160+4>>2]=m;c[Y+160+8>>2]=n;g[Y+160+12>>2]=0.0;c[Y+144>>2]=o;c[Y+144+4>>2]=ia;c[Y+144+8>>2]=ja;g[Y+144+12>>2]=0.0;ga=+g[p+192>>2];ha=+g[p+196>>2];ja=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0;ia=c[(c[ja>>2]|0)+60>>2]|0;c[Y>>2]=0;c[Y+4>>2]=0;c[Y+8>>2]=0;c[Y+12>>2]=0;Lb[ia&0](ja,p+888+48|0,Y+160|0,Y+144|0,A,A,ga,ha,Y,1,10.0)}break b}default:break b}while(0);d=X}}while(0);if((((Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0?(ka=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0,(Eb[c[(c[ka>>2]|0)+48>>2]&127](ka)|0)&16387|0):0)?Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0:0)?(ka=Eb[c[(c[b>>2]|0)+20>>2]&127](b)|0,Eb[c[(c[ka>>2]|0)+48>>2]&127](ka)|0):0)?(c[b+280>>2]|0)>0:0){d=0;do{ka=c[(c[b+288>>2]|0)+(d<<2)>>2]|0;Cb[c[(c[ka>>2]|0)+12>>2]&127](ka,c[b+72>>2]|0);d=d+1|0}while((d|0)<(c[b+280>>2]|0))}d=c[2357]|0;ka=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=ka;if(ka|0){i=Y;return}do if(c[d+4>>2]|0){tb(Y+256|0,0)|0;ka=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[Y+256+4>>2]|0)-(c[ka+4>>2]|0)+(((c[Y+256>>2]|0)-(c[ka>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=Y;return}}while(0);c[2357]=c[d+20>>2];i=Y;return}function uc(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;z=i;i=i+80|0;mf(b,e,f)|0;a[z+16>>0]=1;c[z+12>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;a[z+36>>0]=1;c[z+32>>2]=0;c[z+24>>2]=0;c[z+28>>2]=0;a[z+56>>0]=1;c[z+52>>2]=0;c[z+44>>2]=0;c[z+48>>2]=0;a[z+76>>0]=1;c[z+72>>2]=0;c[z+64>>2]=0;c[z+68>>2]=0;x=c[b+872>>2]|0;c[e+292>>2]=x;if(x){x=Zb[c[(c[f>>2]|0)+28>>2]&31](f,b+868|0)|0;c[e+260>>2]=x;if(x|0){h=c[e+292>>2]|0;n=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,h)|0;if((h|0)>0){l=0;m=c[n+8>>2]|0;while(1){j=c[(c[b+880>>2]|0)+(l<<2)>>2]|0;if(!j){g=0;k=0}else{g=j;k=Zb[c[(c[f>>2]|0)+28>>2]&31](f,j)|0}c[m>>2]=k;if(!(Zb[c[(c[f>>2]|0)+24>>2]&31](f,g)|0)){x=Ob[c[(c[f>>2]|0)+16>>2]&63](f,16,1)|0;s=c[x+8>>2]|0;c[s+12>>2]=c[j+16>>2];c[s+4>>2]=c[j+8>>2];c[s>>2]=c[j+4>>2];c[s+8>>2]=c[j+12>>2];yb[c[(c[f>>2]|0)+20>>2]&31](f,x,10691,1414349395,g)}l=l+1|0;if((l|0)>=(h|0)){g=f;break}else m=m+4|0}}else g=f;yb[c[(c[g>>2]|0)+20>>2]&31](f,n,10691,1497453121,b+868|0)}}else c[e+260>>2]=0;x=c[b+712>>2]|0;c[e+296>>2]=x;if(x){x=Zb[c[(c[f>>2]|0)+28>>2]&31](f,b+708|0)|0;c[e+264>>2]=x;if(x|0){p=c[e+296>>2]|0;q=Ob[c[(c[f>>2]|0)+16>>2]&63](f,100,p)|0;if((p|0)>0){r=0;s=c[q+8>>2]|0;while(1){h=c[b+720>>2]|0;c[s+52>>2]=c[h+(r*104|0)+56>>2];c[s+56>>2]=c[h+(r*104|0)+60>>2];c[s+60>>2]=c[h+(r*104|0)+64>>2];c[s+64>>2]=c[h+(r*104|0)+68>>2];c[s+88>>2]=c[h+(r*104|0)+92>>2];c[s+92>>2]=(a[h+(r*104|0)+100>>0]<<7&255)<<24>>24>>7<<24>>24;c[s+84>>2]=c[h+(r*104|0)+88>>2];g=c[h+(r*104|0)+4>>2]|0;if(!g){j=0;g=h}else{j=Zb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;g=c[b+720>>2]|0}c[s>>2]=j;c[s+68>>2]=c[g+(r*104|0)+72>>2];c[s+72>>2]=c[g+(r*104|0)+76>>2];c[s+76>>2]=c[g+(r*104|0)+80>>2];c[s+80>>2]=c[g+(r*104|0)+84>>2];c[s+4>>2]=c[g+(r*104|0)+8>>2];c[s+8>>2]=c[g+(r*104|0)+12>>2];c[s+12>>2]=c[g+(r*104|0)+16>>2];c[s+16>>2]=c[g+(r*104|0)+20>>2];c[s+20>>2]=c[g+(r*104|0)+24>>2];c[s+24>>2]=c[g+(r*104|0)+28>>2];c[s+28>>2]=c[g+(r*104|0)+32>>2];c[s+32>>2]=c[g+(r*104|0)+36>>2];c[s+36>>2]=c[g+(r*104|0)+40>>2];c[s+40>>2]=c[g+(r*104|0)+44>>2];c[s+44>>2]=c[g+(r*104|0)+48>>2];c[s+48>>2]=c[g+(r*104|0)+52>>2];l=(c[b+720>>2]|0)+(r*104|0)|0;o=(l+~(l<<15)>>10^l+~(l<<15))*9|0;o=(o>>6^o)+~((o>>6^o)<<11)>>16^(o>>6^o)+~((o>>6^o)<<11);m=c[z+48>>2]|0;a:do if((o&m+-1)>>>0<(c[z+4>>2]|0)>>>0?(w=c[(c[z+12>>2]|0)+((o&m+-1)<<2)>>2]|0,(w|0)!=-1):0){h=c[z+72>>2]|0;j=c[z+32>>2]|0;g=w;while(1){if((l|0)==(c[h+(g<<3)>>2]|0))break;g=c[j+(g<<2)>>2]|0;if((g|0)==-1){y=27;break a}}c[(c[z+52>>2]|0)+(g<<2)>>2]=r}else y=27;while(0);if((y|0)==27){y=0;n=c[z+44>>2]|0;if((n|0)==(m|0)){g=m|0?m<<1:1;if((m|0)<(g|0)){if((g|0)!=0?(c[6435]=(c[6435]|0)+1,t=yc((g<<2|3)+16|0)|0,(t|0)!=0):0){c[(t+4+15&-16)+-4>>2]=t;k=t+4+15&-16}else k=0;j=c[z+52>>2]|0;if((m|0)<=0)if(!j)h=m;else y=35;else{h=0;do{c[k+(h<<2)>>2]=c[j+(h<<2)>>2];h=h+1|0}while((h|0)!=(m|0));y=35}if((y|0)==35){y=0;if(a[z+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}c[z+52>>2]=0;h=c[z+44>>2]|0}a[z+56>>0]=1;c[z+52>>2]=k;c[z+48>>2]=g}else{g=m;h=m}}else{g=m;h=n}c[(c[z+52>>2]|0)+(h<<2)>>2]=r;c[z+44>>2]=h+1;h=c[z+64>>2]|0;if((h|0)==(c[z+68>>2]|0)?(u=h|0?h<<1:1,(h|0)<(u|0)):0){if((u|0)!=0?(c[6435]=(c[6435]|0)+1,v=yc((u<<3|3)+16|0)|0,(v|0)!=0):0){c[(v+4+15&-16)+-4>>2]=v;j=v+4+15&-16}else j=0;if((h|0)>0){g=0;do{A=(c[z+72>>2]|0)+(g<<3)|0;k=c[A+4>>2]|0;x=j+(g<<3)|0;c[x>>2]=c[A>>2];c[x+4>>2]=k;g=g+1|0}while((g|0)!=(h|0))}g=c[z+72>>2]|0;if(g|0){if(a[z+76>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[g+-4>>2]|0)}c[z+72>>2]=0}a[z+76>>0]=1;c[z+72>>2]=j;c[z+68>>2]=u;h=c[z+64>>2]|0;g=c[z+48>>2]|0}c[(c[z+72>>2]|0)+(h<<3)>>2]=l;c[z+64>>2]=h+1;if((m|0)<(g|0)){m=c[z+4>>2]|0;do if((g|0)>(m|0)){if((g|0)>=(m|0)){b:do if((c[z+8>>2]|0)<(g|0)){do if(!g)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((g<<2|3)+16|0)|0;if(!h){h=0;break}c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}while(0);j=c[z+12>>2]|0;do if((m|0)>0){k=0;do{c[h+(k<<2)>>2]=c[j+(k<<2)>>2];k=k+1|0}while((k|0)!=(m|0))}else{if(j|0)break;a[z+16>>0]=1;c[z+12>>2]=h;c[z+8>>2]=g;break b}while(0);if(a[z+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[z+16>>0]=1;c[z+12>>2]=h;c[z+8>>2]=g}else h=c[z+12>>2]|0;while(0);Tn(h+(m<<2)|0,0,g-m<<2|0)|0}c[z+4>>2]=g;l=c[z+24>>2]|0;if((g|0)>(l|0)){c:do if((c[z+28>>2]|0)<(g|0)){do if(!g)h=0;else{c[6435]=(c[6435]|0)+1;h=yc((g<<2|3)+16|0)|0;if(!h){h=0;break}c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}while(0);j=c[z+32>>2]|0;do if((l|0)>0){k=0;do{c[h+(k<<2)>>2]=c[j+(k<<2)>>2];k=k+1|0}while((k|0)!=(l|0))}else{if(j|0)break;a[z+36>>0]=1;c[z+32>>2]=h;c[z+28>>2]=g;break c}while(0);if(a[z+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[j+-4>>2]|0)}a[z+36>>0]=1;c[z+32>>2]=h;c[z+28>>2]=g}else h=c[z+32>>2]|0;while(0);Tn(h+(l<<2)|0,0,g-l<<2|0)|0}c[z+24>>2]=g;if((g|0)>0){A=g<<2;Tn(c[z+12>>2]|0,-1,A|0)|0;Tn(c[z+32>>2]|0,-1,A|0)|0}if((m|0)<=0){g=c[z+48>>2]|0;break}h=c[z+72>>2]|0;j=c[z+12>>2]|0;k=c[z+32>>2]|0;g=c[z+48>>2]|0;l=0;do{A=c[h+(l<<3)>>2]|0;A=(A+~(A<<15)>>10^A+~(A<<15))*9|0;A=j+((((A>>6^A)+~((A>>6^A)<<11)>>16^(A>>6^A)+~((A>>6^A)<<11))&g+-1)<<2)|0;c[k+(l<<2)>>2]=c[A>>2];c[A>>2]=l;l=l+1|0}while((l|0)!=(m|0))}while(0);g=o&g+-1}else g=o&m+-1;A=(c[z+12>>2]|0)+(g<<2)|0;c[(c[z+32>>2]|0)+(n<<2)>>2]=c[A>>2];c[A>>2]=n}r=r+1|0;if((r|0)>=(p|0))break;else s=s+100|0}}yb[c[(c[f>>2]|0)+20>>2]&31](f,q,10712,1145979475,b+708|0)}}else c[e+264>>2]=0;A=c[b+732>>2]|0;c[e+300>>2]=A;if(A){A=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+740>>2]|0)|0;c[e+268>>2]=A;if(A|0){k=c[e+300>>2]|0;n=Ob[c[(c[f>>2]|0)+16>>2]&63](f,20,k)|0;if((k|0)>0){j=c[b+740>>2]|0;g=j;l=0;m=c[n+8>>2]|0;while(1){c[m+16>>2]=(a[j+(l*52|0)+20>>0]<<7&255)<<24>>24>>7<<24>>24;h=c[j+(l*52|0)+4>>2]|0;if(!h)h=0;else{h=Zb[c[(c[f>>2]|0)+28>>2]&31](f,h)|0;j=c[b+740>>2]|0;g=j}c[m>>2]=h;h=c[j+(l*52|0)+8>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[m+4>>2]=h;h=c[j+(l*52|0)+12>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[m+8>>2]=h;c[m+12>>2]=c[j+(l*52|0)+16>>2];l=l+1|0;if((l|0)>=(k|0))break;else m=m+20|0}}else g=c[b+740>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,n,10729,1497453121,g)}}else c[e+268>>2]=0;A=c[b+752>>2]|0;c[e+304>>2]=A;if(A){A=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+760>>2]|0)|0;c[e+272>>2]=A;if(A|0){j=c[e+304>>2]|0;m=Ob[c[(c[f>>2]|0)+16>>2]&63](f,36,j)|0;if((j|0)>0){g=c[b+760>>2]|0;k=0;l=c[m+8>>2]|0;while(1){h=c[g+(k*44|0)+4>>2]|0;if(!h)h=0;else{h=Zb[c[(c[f>>2]|0)+28>>2]&31](f,h)|0;g=c[b+760>>2]|0}c[l+16>>2]=h;c[l>>2]=c[g+(k*44|0)+20>>2];c[l+4>>2]=c[g+(k*44|0)+24>>2];c[l+8>>2]=c[g+(k*44|0)+28>>2];c[l+12>>2]=c[g+(k*44|0)+32>>2];g=c[b+760>>2]|0;h=c[g+(k*44|0)+8>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[l+20>>2]=h;h=c[g+(k*44|0)+12>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[l+24>>2]=h;h=c[g+(k*44|0)+16>>2]|0;if(!h)h=-1;else h=(h-(c[b+720>>2]|0)|0)/104|0;c[l+28>>2]=h;c[l+32>>2]=c[g+(k*44|0)+36>>2];k=k+1|0;if((k|0)>=(j|0))break;else l=l+36|0}}else g=c[b+760>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,m,10746,1497453121,g)}}else c[e+272>>2]=0;A=c[b+772>>2]|0;c[e+308>>2]=A;if(A){A=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+780>>2]|0)|0;c[e+276>>2]=A;if(A|0){j=c[e+308>>2]|0;m=Ob[c[(c[f>>2]|0)+16>>2]&63](f,100,j)|0;if((j|0)>0){k=0;l=c[m+8>>2]|0;while(1){h=c[b+780>>2]|0;c[l>>2]=c[h+(k*104|0)+32>>2];c[l+4>>2]=c[h+(k*104|0)+36>>2];c[l+8>>2]=c[h+(k*104|0)+40>>2];c[l+12>>2]=c[h+(k*104|0)+44>>2];g=c[h+8>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[l+68>>2]=g;c[l+16>>2]=c[h+(k*104|0)+48>>2];c[l+20>>2]=c[h+(k*104|0)+52>>2];c[l+24>>2]=c[h+(k*104|0)+56>>2];c[l+28>>2]=c[h+(k*104|0)+60>>2];g=c[h+116>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[l+72>>2]=g;c[l+32>>2]=c[h+(k*104|0)+64>>2];c[l+36>>2]=c[h+(k*104|0)+68>>2];c[l+40>>2]=c[h+(k*104|0)+72>>2];c[l+44>>2]=c[h+(k*104|0)+76>>2];g=c[h+224>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[l+76>>2]=g;c[l+48>>2]=c[h+(k*104|0)+80>>2];c[l+52>>2]=c[h+(k*104|0)+84>>2];c[l+56>>2]=c[h+(k*104|0)+88>>2];c[l+60>>2]=c[h+(k*104|0)+92>>2];g=c[h+332>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[l+80>>2]=g;c[l+88>>2]=c[h+(k*104|0)+96>>2];g=c[b+780>>2]|0;c[l+92>>2]=c[g+(k*104|0)+100>>2];g=c[g+(k*104|0)+4>>2]|0;if(!g)g=0;else g=Zb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;c[l+64>>2]=g;g=c[b+780>>2]|0;c[l+84>>2]=c[g+(k*104|0)+24>>2];k=k+1|0;if((k|0)>=(j|0))break;else l=l+100|0}}else g=c[b+780>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,m,10763,1497453121,g)}}else c[e+276>>2]=0;A=c[b+792>>2]|0;c[e+312>>2]=A;if(A){A=Zb[c[(c[f>>2]|0)+28>>2]&31](f,c[b+800>>2]|0)|0;c[e+280>>2]=A;if(!A)x=f;else{j=c[e+312>>2]|0;k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,92,j)|0;if((j|0)>0){l=0;m=c[k+8>>2]|0;while(1){h=c[b+800>>2]|0;c[m>>2]=c[h+(l*96|0)+28>>2];c[m+4>>2]=c[h+(l*96|0)+32>>2];c[m+8>>2]=c[h+(l*96|0)+36>>2];c[m+12>>2]=c[h+(l*96|0)+40>>2];c[m+16>>2]=c[h+(l*96|0)+44>>2];c[m+20>>2]=c[h+(l*96|0)+48>>2];c[m+24>>2]=c[h+(l*96|0)+52>>2];c[m+28>>2]=c[h+(l*96|0)+56>>2];c[m+32>>2]=c[h+(l*96|0)+60>>2];c[m+36>>2]=c[h+(l*96|0)+64>>2];c[m+40>>2]=c[h+(l*96|0)+68>>2];c[m+44>>2]=c[h+(l*96|0)+72>>2];c[m+48>>2]=c[h+(l*96|0)+76>>2];c[m+52>>2]=c[h+(l*96|0)+80>>2];c[m+56>>2]=c[h+(l*96|0)+84>>2];c[m+60>>2]=c[h+(l*96|0)+88>>2];c[m+88>>2]=c[h+(l*96|0)+92>>2];h=c[b+800>>2]|0;c[m+64>>2]=c[h+(l*96|0)+4>>2];c[m+68>>2]=c[h+(l*96|0)+8>>2];c[m+72>>2]=c[h+(l*96|0)+12>>2];c[m+76>>2]=c[h+(l*96|0)+16>>2];g=c[h+(l*96|0)>>2]|0;if(!g)g=-1;else g=(g-(c[b+720>>2]|0)|0)/104|0;c[m+84>>2]=g;g=c[h+(l*96|0)+20>>2]|0;if(!g)g=0;else g=Zb[c[(c[f>>2]|0)+28>>2]&31](f,g)|0;c[m+80>>2]=g;l=l+1|0;if((l|0)>=(j|0))break;else m=m+92|0}}yb[c[(c[f>>2]|0)+20>>2]&31](f,k,10781,1497453121,c[b+800>>2]|0);x=f}}else{c[e+280>>2]=0;x=f}c[e+352>>2]=c[b+316>>2];c[e+328>>2]=c[b+292>>2];c[e+344>>2]=c[b+308>>2];c[e+324>>2]=c[b+288>>2];c[e+340>>2]=c[b+304>>2];c[e+336>>2]=c[b+300>>2];c[e+412>>2]=c[b+376>>2];c[e+416>>2]=c[b+380>>2];c[e+420>>2]=c[b+384>>2];c[e+408>>2]=c[b+372>>2];n=c[b+364>>2]|0;c[e+332>>2]=c[b+296>>2];c[e+356>>2]=c[b+320>>2];c[e+424>>2]=c[b+388>>2];c[e+348>>2]=c[b+312>>2];c[e+360>>2]=c[b+324>>2];c[e+364>>2]=c[b+328>>2];c[e+368>>2]=c[b+332>>2];c[e+372>>2]=c[b+336>>2];c[e+404>>2]=c[b+368>>2];c[e+400>>2]=n;c[e+376>>2]=c[b+340>>2];c[e+380>>2]=c[b+344>>2];c[e+384>>2]=c[b+348>>2];c[e+388>>2]=c[b+352>>2];c[e+392>>2]=c[b+356>>2];c[e+396>>2]=c[b+360>>2];c[e+256>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,b+472|0)|0;n=Ob[c[(c[f>>2]|0)+16>>2]&63](f,192,1)|0;m=c[n+8>>2]|0;c[m+96>>2]=c[b+632>>2];c[m+100>>2]=c[b+636>>2];c[m+104>>2]=c[b+640>>2];c[m+108>>2]=c[b+644>>2];c[m+112>>2]=c[b+648>>2];c[m+116>>2]=c[b+652>>2];c[m+120>>2]=c[b+656>>2];c[m+124>>2]=c[b+660>>2];c[m+128>>2]=c[b+664>>2];c[m+132>>2]=c[b+668>>2];c[m+136>>2]=c[b+672>>2];c[m+140>>2]=c[b+676>>2];c[m+180>>2]=d[b+473>>0];c[m+176>>2]=d[b+472>>0];c[m+144>>2]=c[b+520>>2];c[m+148>>2]=c[b+524>>2];c[m+152>>2]=c[b+528>>2];c[m+156>>2]=c[b+532>>2];A=c[b+484>>2]|0;c[m+168>>2]=A;if(A){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[b+492>>2]|0)|0;h=c[m+168>>2]|0;c[m+160>>2]=A;if(h|0){l=Ob[c[(c[f>>2]|0)+16>>2]&63](f,16,h)|0;if((h|0)>0){g=c[b+492>>2]|0;j=0;k=c[l+8>>2]|0;while(1){c[k>>2]=c[g+(j<<4)>>2];c[k+4>>2]=c[g+(j<<4)+4>>2];c[k+8>>2]=c[g+(j<<4)+8>>2];c[k+12>>2]=c[g+(j<<4)+12>>2];j=j+1|0;if((j|0)==(h|0))break;else k=k+16|0}}else g=c[b+492>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,l,19308,1497453121,g)}}else c[m+160>>2]=0;c[m+184>>2]=c[b+476>>2];c[m>>2]=c[b+536>>2];c[m+4>>2]=c[b+540>>2];c[m+8>>2]=c[b+544>>2];c[m+12>>2]=c[b+548>>2];c[m+16>>2]=c[b+552>>2];c[m+20>>2]=c[b+556>>2];c[m+24>>2]=c[b+560>>2];c[m+28>>2]=c[b+564>>2];c[m+32>>2]=c[b+568>>2];c[m+36>>2]=c[b+572>>2];c[m+40>>2]=c[b+576>>2];c[m+44>>2]=c[b+580>>2];c[m+48>>2]=c[b+584>>2];c[m+52>>2]=c[b+588>>2];c[m+56>>2]=c[b+592>>2];c[m+60>>2]=c[b+596>>2];c[m+64>>2]=c[b+600>>2];c[m+68>>2]=c[b+604>>2];c[m+72>>2]=c[b+608>>2];c[m+76>>2]=c[b+612>>2];c[m+80>>2]=c[b+616>>2];c[m+84>>2]=c[b+620>>2];c[m+88>>2]=c[b+624>>2];c[m+92>>2]=c[b+628>>2];A=c[b+504>>2]|0;c[m+172>>2]=A;if(A){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[b+512>>2]|0)|0;k=c[m+172>>2]|0;c[m+164>>2]=A;if(!k)y=153;else{l=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,k)|0;if((k|0)>0){g=c[b+512>>2]|0;h=0;j=c[l+8>>2]|0;while(1){c[j>>2]=c[g+(h<<2)>>2];h=h+1|0;if((h|0)==(k|0))break;else j=j+4|0}}else g=c[b+512>>2]|0;yb[c[(c[f>>2]|0)+20>>2]&31](f,l,10801,1497453121,g);w=f}}else{c[m+164>>2]=0;y=153}if((y|0)==153)w=f;yb[c[(c[w>>2]|0)+20>>2]&31](f,n,10807,1497453121,b+472|0);A=c[b+1112>>2]|0;c[e+316>>2]=A;if(A){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[c[b+1120>>2]>>2]|0)|0;q=c[e+316>>2]|0;c[e+284>>2]=A;if(q|0){r=Ob[c[(c[f>>2]|0)+16>>2]&63](f,348,q)|0;if((q|0)>0){s=c[z+12>>2]|0;t=c[z+52>>2]|0;u=0;v=c[r+8>>2]|0;while(1){h=c[(c[b+1120>>2]|0)+(u<<2)>>2]|0;A=v+320|0;c[A>>2]=c[h+360>>2];c[v+256>>2]=c[h+332>>2];c[v+260>>2]=c[h+336>>2];c[v+264>>2]=c[h+340>>2];c[v+268>>2]=c[h+344>>2];c[v+344>>2]=c[h+380>>2];c[v+340>>2]=d[h+377>>0];c[v+160>>2]=c[h+228>>2];c[v+164>>2]=c[h+232>>2];c[v+168>>2]=c[h+236>>2];c[v+172>>2]=c[h+240>>2];c[v+336>>2]=d[h+376>>0];c[v+208>>2]=c[h+276>>2];c[v+212>>2]=c[h+280>>2];c[v+216>>2]=c[h+284>>2];c[v+220>>2]=c[h+288>>2];c[v+224>>2]=c[h+292>>2];c[v+228>>2]=c[h+296>>2];c[v+232>>2]=c[h+300>>2];c[v+236>>2]=c[h+304>>2];h=c[(c[b+1120>>2]|0)+(u<<2)>>2]|0;c[v>>2]=c[h+60>>2];c[v+4>>2]=c[h+64>>2];c[v+8>>2]=c[h+68>>2];c[v+12>>2]=c[h+72>>2];c[v+16>>2]=c[h+76>>2];c[v+20>>2]=c[h+80>>2];c[v+24>>2]=c[h+84>>2];c[v+28>>2]=c[h+88>>2];c[v+32>>2]=c[h+92>>2];c[v+36>>2]=c[h+96>>2];c[v+40>>2]=c[h+100>>2];c[v+44>>2]=c[h+104>>2];c[v+48>>2]=c[h+108>>2];c[v+52>>2]=c[h+112>>2];c[v+56>>2]=c[h+116>>2];c[v+60>>2]=c[h+120>>2];c[v+296>>2]=c[h+124>>2];h=c[(c[b+1120>>2]|0)+(u<<2)>>2]|0;c[v+300>>2]=c[h+128>>2];c[v+112>>2]=c[h+180>>2];c[v+116>>2]=c[h+184>>2];c[v+120>>2]=c[h+188>>2];c[v+124>>2]=c[h+192>>2];c[v+128>>2]=c[h+196>>2];c[v+132>>2]=c[h+200>>2];c[v+136>>2]=c[h+204>>2];c[v+140>>2]=c[h+208>>2];c[v+144>>2]=c[h+212>>2];c[v+148>>2]=c[h+216>>2];c[v+152>>2]=c[h+220>>2];c[v+156>>2]=c[h+224>>2];g=v+316|0;c[g>>2]=c[h+356>>2];c[v+64>>2]=c[h+132>>2];c[v+68>>2]=c[h+136>>2];c[v+72>>2]=c[h+140>>2];c[v+76>>2]=c[h+144>>2];c[v+80>>2]=c[h+148>>2];c[v+84>>2]=c[h+152>>2];c[v+88>>2]=c[h+156>>2];c[v+92>>2]=c[h+160>>2];c[v+96>>2]=c[h+164>>2];c[v+100>>2]=c[h+168>>2];c[v+104>>2]=c[h+172>>2];c[v+108>>2]=c[h+176>>2];h=c[(c[b+1120>>2]|0)+(u<<2)>>2]|0;c[v+240>>2]=c[h+316>>2];c[v+244>>2]=c[h+320>>2];c[v+248>>2]=c[h+324>>2];c[v+252>>2]=c[h+328>>2];c[v+324>>2]=c[h+364>>2];c[v+328>>2]=c[h+368>>2];c[v+312>>2]=c[h+352>>2];c[g>>2]=c[h+356>>2];c[A>>2]=c[h+360>>2];c[v+332>>2]=c[h+372>>2];A=c[h+44>>2]|0;g=v+284|0;c[g>>2]=A;m=v+292|0;c[m>>2]=c[h+4>>2];n=v+288|0;c[n>>2]=c[h+24>>2];c[v+304>>2]=c[h+308>>2];c[v+176>>2]=c[h+244>>2];c[v+180>>2]=c[h+248>>2];c[v+184>>2]=c[h+252>>2];c[v+188>>2]=c[h+256>>2];c[v+192>>2]=c[h+260>>2];c[v+196>>2]=c[h+264>>2];c[v+200>>2]=c[h+268>>2];c[v+204>>2]=c[h+272>>2];h=c[(c[b+1120>>2]|0)+(u<<2)>>2]|0;c[v+308>>2]=c[h+312>>2];if(A){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[h+52>>2]|0)|0;c[v+272>>2]=A;if(A|0){g=c[g>>2]|0;h=Ob[c[(c[f>>2]|0)+16>>2]&63](f,16,g)|0;if((g|0)>0){j=c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+52>>2]|0;k=0;l=c[h+8>>2]|0;while(1){c[l>>2]=c[j+(k<<4)>>2];c[l+4>>2]=c[j+(k<<4)+4>>2];c[l+8>>2]=c[j+(k<<4)+8>>2];c[l+12>>2]=c[j+(k<<4)+12>>2];k=k+1|0;if((k|0)==(g|0))break;else l=l+16|0}}yb[c[(c[w>>2]|0)+20>>2]&31](f,h,19308,1497453121,c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+52>>2]|0)}}else c[v+272>>2]=0;if(c[m>>2]|0){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+12>>2]|0)|0;c[v+280>>2]=A;if(A|0){g=c[m>>2]|0;h=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,g)|0;if((g|0)>0){j=c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+12>>2]|0;k=0;l=c[h+8>>2]|0;while(1){c[l>>2]=c[j+(k<<2)>>2];k=k+1|0;if((k|0)==(g|0))break;else l=l+4|0}}yb[c[(c[w>>2]|0)+20>>2]&31](f,h,10801,1497453121,c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+12>>2]|0)}}else c[v+280>>2]=0;if(c[n>>2]|0){A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+20|0)|0;c[v+276>>2]=A;if(A|0){k=c[m>>2]|0;l=Ob[c[(c[f>>2]|0)+16>>2]&63](f,4,k)|0;if((k|0)>0){m=c[(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+32>>2]|0;n=c[z+32>>2]|0;o=0;p=c[l+8>>2]|0;while(1){h=c[m+(o<<2)>>2]|0;g=(h+~(h<<15)>>10^h+~(h<<15))*9|0;j=c[z+72>>2]|0;g=c[s+((((g>>6^g)+~((g>>6^g)<<11)>>16^(g>>6^g)+~((g>>6^g)<<11))&(c[z+48>>2]|0)+-1)<<2)>>2]|0;if((h|0)!=(c[j+(g<<3)>>2]|0))do g=c[n+(g<<2)>>2]|0;while((h|0)!=(c[j+(g<<3)>>2]|0));c[p>>2]=c[t+(g<<2)>>2];o=o+1|0;if((o|0)==(k|0))break;else p=p+4|0}}yb[c[(c[w>>2]|0)+20>>2]&31](f,l,10844,1497453121,(c[(c[b+1120>>2]|0)+(u<<2)>>2]|0)+20|0)}}else c[v+276>>2]=0;u=u+1|0;if((u|0)>=(q|0))break;else v=v+348|0}}yb[c[(c[w>>2]|0)+20>>2]&31](f,r,10824,1497453121,c[c[b+1120>>2]>>2]|0)}}else c[e+284>>2]=0;A=c[b+852>>2]|0;c[e+320>>2]=A;if(!A){c[e+288>>2]=0;pj(z);i=z;return 10868}A=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[b+860>>2]|0)|0;c[e+288>>2]=A;if(!A){pj(z);i=z;return 10868}j=c[b+852>>2]|0;k=Ob[c[(c[f>>2]|0)+16>>2]&63](f,104,j)|0;if((j|0)>0){m=0;n=c[k+8>>2]|0;while(1){g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0;c[n+96>>2]=Eb[c[(c[g>>2]|0)+20>>2]&127](g)|0;g=(c[b+860>>2]|0)+(m<<2)|0;h=c[g>>2]|0;c[n+8>>2]=c[h+28>>2];c[n+12>>2]=c[h+32>>2];c[n+16>>2]=c[h+36>>2];c[n+20>>2]=c[h+40>>2];c[n+24>>2]=c[h+44>>2];c[n+28>>2]=c[h+48>>2];c[n+32>>2]=c[h+52>>2];c[n+36>>2]=c[h+56>>2];c[n+40>>2]=c[h+60>>2];c[n+44>>2]=c[h+64>>2];c[n+48>>2]=c[h+68>>2];c[n+52>>2]=d[h+152>>0];h=n+56|0;c[n>>2]=0;l=n+4|0;c[l>>2]=0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;c[h+28>>2]=0;g=c[g>>2]|0;h=c[g+4>>2]|0;if(h){c[n+88>>2]=1;c[n>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0}if(c[g+12>>2]|0){c[n+88>>2]=3;c[n>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,c[(c[(c[b+860>>2]|0)+(m<<2)>>2]|0)+12>>2]|0)|0}g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0;h=c[g+8>>2]|0;if(h){c[n+88>>2]=2;c[n>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0}h=c[g+16>>2]|0;if(h){c[n+92>>2]=1;c[l>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0}h=c[g+24>>2]|0;if(h){c[n+92>>2]=3;c[l>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,h)|0;g=c[(c[b+860>>2]|0)+(m<<2)>>2]|0}g=c[g+20>>2]|0;if(g|0){c[n+92>>2]=2;c[l>>2]=Zb[c[(c[x>>2]|0)+28>>2]&31](f,g)|0}m=m+1|0;if((m|0)>=(j|0))break;else n=n+104|0}}yb[c[(c[w>>2]|0)+20>>2]&31](f,k,10848,1497453121,c[b+860>>2]|0);pj(z);i=z;return 10868}function vc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;K=i;i=i+144|0;a:do switch(d-b|0){case 0:{c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;i=K;return}case 2:{f=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;k=c[f+88>>2]|0;l=c[f+200>>2]|0;j=c[f+92>>2]|0;g=c[f+204>>2]|0;if((k|0)==(l|0)){if((j|0)==(g|0))if((c[f+96>>2]|0)==(c[f+208>>2]|0))break a;else g=j;if((j|0)==(g|0)){I=(c[f+96>>2]|0)>(c[f+208>>2]|0);g=I?f+112|0:f;c[g>>2]=g;c[g+4>>2]=g;c[e>>2]=g;c[e+4>>2]=g;c[e+8>>2]=g;c[e+12>>2]=g;f=I?f:f+112|0}else{h=g;g=0;J=9}}else{h=g;g=(j|0)==(g|0);J=9}do if((J|0)==9){c[f>>2]=f+112;c[f+4>>2]=f+112;c[f+112>>2]=f;c[f+116>>2]=f;J=(j|0)<(h|0);c[e>>2]=(k|0)<(l|0)|(k|0)==(l|0)&J?f:f+112|0;c[e+4>>2]=(k|0)<(l|0)|(k|0)==(l|0)&J?f+112|0:f;if(J|(k|0)<(l|0)&g){c[e+8>>2]=f;c[e+12>>2]=f+112;g=f;f=f+112|0;break}else{c[e+8>>2]=f+112;c[e+12>>2]=f;g=f;f=f+112|0;break}}while(0);a=dg(a,g,f)|0;c[a>>2]=a;c[a+4>>2]=a;c[g+8>>2]=a;a=c[a+8>>2]|0;c[a>>2]=a;c[a+4>>2]=a;c[f+8>>2]=a;i=K;return}case 1:{f=c[(c[a+92>>2]|0)+(b<<2)>>2]|0;break}default:{n=((d-b|0)/2|0)+b|0;h=c[a+92>>2]|0;m=c[h+(n+-1<<2)>>2]|0;j=c[m+88>>2]|0;k=c[m+92>>2]|0;m=c[m+96>>2]|0;b:do if((n|0)<(d|0)){f=n;do{g=c[h+(f<<2)>>2]|0;if((c[g+88>>2]|0)!=(j|0))break b;if((c[g+92>>2]|0)!=(k|0))break b;if((c[g+96>>2]|0)!=(m|0))break b;f=f+1|0}while((f|0)<(d|0))}else f=n;while(0);vc(a,b,n,e);c[K+96>>2]=0;c[K+96+4>>2]=0;c[K+96+8>>2]=0;c[K+96+12>>2]=0;vc(a,f,d,K+96|0);m=c[K+96+4>>2]|0;c:do if(m|0){A=c[e+4>>2]|0;if(!A){c[e>>2]=c[K+96>>2];c[e+4>>2]=c[K+96+4>>2];c[e+8>>2]=c[K+96+8>>2];c[e+12>>2]=c[K+96+12>>2];break}c[a+100>>2]=(c[a+100>>2]|0)+-1;h=c[e+12>>2]|0;k=c[K+96+8>>2]|0;j=c[h+88>>2]|0;d:do if((j|0)==(c[k+88>>2]|0)?(l=c[h+92>>2]|0,(l|0)==(c[k+92>>2]|0)):0){n=c[k+4>>2]|0;if((n|0)==(k|0)){f=c[k+8>>2]|0;if(f){k=c[f+12>>2]|0;l=c[k+92>>2]|0;j=c[k+88>>2]|0}g=h;G=k;f=k;n=j+1|0;d=c[k+96>>2]|0;break}h=c[k>>2]|0;c[n>>2]=h;c[h+4>>2]=n;e:do if((k|0)==(c[K+96>>2]|0)){f=c[h+88>>2]|0;g=c[n+88>>2]|0;do if((f|0)>=(g|0)){if((f|0)==(g|0)?(c[h+92>>2]|0)<(c[n+92>>2]|0):0)break;c[K+96>>2]=n;break e}while(0);c[K+96>>2]=h}while(0);if((k|0)==(m|0)){f=c[h+88>>2]|0;g=c[n+88>>2]|0;do if((f|0)<=(g|0)){if((f|0)==(g|0)?(c[h+92>>2]|0)>(c[n+92>>2]|0):0)break;c[K+96+4>>2]=n;h=n;J=39;break d}while(0);c[K+96+4>>2]=h;J=39}else{h=m;J=39}}else{h=m;J=39}while(0);if((J|0)==39){w=c[e>>2]|0;x=c[K+96>>2]|0;y=0;z=1;b=A;g=0;f=h;j=0;while(1){k=c[f+88>>2]|0;d=c[b+88>>2]|0;l=_(k-d|0,z)|0;f:do if((l|0)<=0){if((l|0)<0){v=(y|0)!=0;n=c[b+92>>2]|0;u=c[f+92>>2]|0;m=l;l=b;while(1){r=c[(v?f+4|0:f)>>2]|0;s=(r|0)==(f|0);t=f+88|0;q=m;while(1){m=l+88|0;o=u-n|0;if(!s?(B=c[r+88>>2]|0,D=_(B-k|0,z)|0,E=c[r+92>>2]|0,F=E-u|0,(F|0)>-1):0){if(!D)break;if((D|0)<0?(_(F,q)|0)<=(_(D,o)|0):0)break}p=c[(v?l+4|0:l)>>2]|0;if((p|0)==(l|0))break f;G=c[p+88>>2]|0;d=_(G-(c[m>>2]|0)|0,z)|0;b=c[p+92>>2]|0;m=b-n|0;k=c[t>>2]|0;n=q;q=_(k-G|0,z)|0;if(!((m|0)>0&(q|0)<0))break f;if(!d){n=b;l=p;continue}if((d|0)>=0)break f;if((_(m,n)|0)>=(_(d,o)|0))break f;else{n=b;l=p}}k=B;u=E;m=_(B-(c[m>>2]|0)|0,z)|0;f=r}}k=c[b+92>>2]|0;n=(y|0)!=0;g:do if(n){m=b;while(1){l=c[m>>2]|0;if((l|0)==(b|0))break g;if((c[l+88>>2]|0)!=(d|0))break g;G=k;k=c[l+92>>2]|0;if((k|0)>(G|0))break;else m=l}}else{m=b;while(1){l=c[m+4>>2]|0;if((l|0)==(b|0))break g;if((c[l+88>>2]|0)!=(d|0))break g;G=k;k=c[l+92>>2]|0;if((k|0)>(G|0))break;else m=l}}while(0);l=c[f+92>>2]|0;if(n){n=f;while(1){k=c[n+4>>2]|0;if((k|0)==(f|0)){l=m;f=n;break f}if((c[k+88>>2]|0)!=(d|0)){l=m;f=n;break f}G=l;l=c[k+92>>2]|0;if((l|0)<(G|0)){l=m;f=n;break}else n=k}}else{n=f;while(1){k=c[n>>2]|0;if((k|0)==(f|0)){l=m;f=n;break f}if((c[k+88>>2]|0)!=(d|0)){l=m;f=n;break f}G=l;l=c[k+92>>2]|0;if((l|0)<(G|0)){l=m;f=n;break}else n=k}}}else{u=(y|0)!=0;s=d;t=c[f+92>>2]|0;r=l;while(1){q=f+88|0;m=c[b+92>>2]|0;k=t-m|0;l=c[(u?b:b+4|0)>>2]|0;h:do if((l|0)!=(b|0))if(u){p=s;o=m;d=r;while(1){m=p;p=c[l+88>>2]|0;m=_(p-m|0,z)|0;n=o;o=c[l+92>>2]|0;n=o-n|0;if((n|0)>=1){o=k;l=b;break h}if(m|0){if((m|0)>=0){o=k;l=b;break h}if((_(n,d)|0)>(_(m,k)|0)){o=k;l=b;break h}}n=_((c[q>>2]|0)-p|0,z)|0;k=t-o|0;m=c[l>>2]|0;if((m|0)==(l|0)){o=k;d=n;break}else{b=l;l=m;d=n}}}else{p=s;o=m;d=r;while(1){m=p;p=c[l+88>>2]|0;m=_(p-m|0,z)|0;n=o;o=c[l+92>>2]|0;n=o-n|0;if((n|0)>=1){o=k;l=b;break h}if(m|0){if((m|0)>=0){o=k;l=b;break h}if((_(n,d)|0)>(_(m,k)|0)){o=k;l=b;break h}}n=_((c[q>>2]|0)-p|0,z)|0;k=t-o|0;m=c[l+4>>2]|0;if((m|0)==(l|0)){o=k;d=n;break}else{b=l;l=m;d=n}}}else{o=k;d=r;l=b}while(0);n=c[(u?f:f+4|0)>>2]|0;if((n|0)==(f|0))break f;r=c[n+88>>2]|0;k=_(r-(c[q>>2]|0)|0,z)|0;m=t;t=c[n+92>>2]|0;m=t-m|0;s=c[l+88>>2]|0;r=_(r-s|0,z)|0;if(!((m|0)<0&(r|0)>0))break f;if(!k){b=l;f=n;continue}if((k|0)>=0)break f;if((_(m,d)|0)>=(_(k,o)|0))break;else{b=l;f=n}}}while(0);k=(y|0)==0;j=k?f:j;g=k?l:g;f=k?x:f;b=k?w:l;y=y+1|0;if((y|0)==2)break;else z=k?-1:z}c[b+4>>2]=f;c[f>>2]=b;c[g>>2]=j;c[j+4>>2]=g;if((c[x+88>>2]|0)<(c[w+88>>2]|0))c[e>>2]=x;if((c[h+88>>2]|0)>=(c[A+88>>2]|0))c[e+4>>2]=h;c[e+12>>2]=c[K+96+12>>2];h=g;F=j;s=c[j+88>>2]|0;d=c[g+88>>2]|0;t=c[j+92>>2]|0;u=c[g+92>>2]|0;v=c[j+96>>2]|0;b=c[g+96>>2]|0;w=((t-u|0)<0)<<31>>31;x=0-(s-d)|0;y=Ls(0,0,x|0,((x|0)<0)<<31>>31|0)|0;y=yr(v-b|0,((v-b|0)<0)<<31>>31|0,y|0,C|0)|0;z=C;A=yr(v-b|0,((v-b|0)<0)<<31>>31|0,t-u|0,w|0)|0;B=C;o=yr(s-d|0,((s-d|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;E=C;D=yr(t-u|0,w|0,t-u|0,w|0)|0;D=Ls(o|0,E|0,D|0,C|0)|0;E=C;o=c[g+8>>2]|0;c[K+120>>2]=0;if(!o)p=0;else{p=Ls(0,0,t-u|0,w|0)|0;q=C;f=0;r=o;while(1){m=c[r+12>>2]|0;k=c[m+88>>2]|0;l=c[m+92>>2]|0;m=c[m+96>>2]|0;n=yr(l-u|0,((l-u|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;G=C;e=yr(k-d|0,((k-d|0)<0)<<31>>31|0,p|0,q|0)|0;i:do if((n|0)==(e|0)&(G|0)==(C|0)?(e=yr(k-d|0,((k-d|0)<0)<<31>>31|0,y|0,z|0)|0,n=C,G=yr(l-u|0,((l-u|0)<0)<<31>>31|0,A|0,B|0)|0,n=Pt(G|0,C|0,e|0,n|0)|0,e=C,G=yr(m-b|0,((m-b|0)<0)<<31>>31|0,D|0,E|0)|0,G=Pt(n|0,e|0,G|0,C|0)|0,e=C,(e|0)>0|(e|0)==0&G>>>0>0):0){do if(f|0){n=(c[f+4>>2]|0)==(r|0);if((c[f>>2]|0)!=(r|0))if(n)break;else break i;if(!n)break i;e=c[f+12>>2]|0;L=c[(c[r+8>>2]|0)+12>>2]|0;G=c[L+88>>2]|0;n=c[L+92>>2]|0;L=c[L+96>>2]|0;M=(c[e+96>>2]|0)-L|0;n=(_(m-L|0,(c[e+92>>2]|0)-n|0)|0)-(_(M,l-n|0)|0)|0;G=(_(M,k-G|0)|0)-(_(m-L|0,(c[e+88>>2]|0)-G|0)|0)|0;n=yr(n|0,((n|0)<0)<<31>>31|0,t-u|0,w|0)|0;e=C;G=yr(G|0,((G|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;G=Pt(n|0,e|0,G|0,C|0)|0;e=C;if((e|0)>0|(e|0)==0&G>>>0>0)break i}while(0);c[K+120>>2]=r;f=r}while(0);r=c[r>>2]|0;if((r|0)==(o|0)){p=f;break}}}n=c[j+8>>2]|0;c[K+72>>2]=0;if(!n)f=0;else{d=Ls(0,0,t-u|0,w|0)|0;b=C;f=0;o=n;do{m=c[o+12>>2]|0;k=c[m+88>>2]|0;l=c[m+92>>2]|0;m=c[m+96>>2]|0;G=yr(l-t|0,((l-t|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0;M=C;L=yr(k-s|0,((k-s|0)<0)<<31>>31|0,d|0,b|0)|0;do if((G|0)==(L|0)&(M|0)==(C|0)?(L=yr(k-s|0,((k-s|0)<0)<<31>>31|0,y|0,z|0)|0,G=C,M=yr(l-t|0,((l-t|0)<0)<<31>>31|0,A|0,B|0)|0,G=Pt(M|0,C|0,L|0,G|0)|0,L=C,M=yr(m-v|0,((m-v|0)<0)<<31>>31|0,D|0,E|0)|0,M=Pt(G|0,L|0,M|0,C|0)|0,L=C,(L|0)>0|(L|0)==0&M>>>0>0):0){if(f|0){if((c[f>>2]|0)!=(o|0))break;if((c[f+4>>2]|0)==(o|0)?(L=c[f+12>>2]|0,e=c[(c[o+8>>2]|0)+12>>2]|0,M=c[e+88>>2]|0,G=c[e+92>>2]|0,e=c[e+96>>2]|0,r=(c[L+96>>2]|0)-e|0,G=(_(m-e|0,(c[L+92>>2]|0)-G|0)|0)-(_(r,l-G|0)|0)|0,M=(_(r,k-M|0)|0)-(_(m-e|0,(c[L+88>>2]|0)-M|0)|0)|0,G=yr(G|0,((G|0)<0)<<31>>31|0,t-u|0,w|0)|0,L=C,M=yr(M|0,((M|0)<0)<<31>>31|0,x|0,((x|0)<0)<<31>>31|0)|0,M=Pt(G|0,L|0,M|0,C|0)|0,L=C,!((L|0)>0|(L|0)==0&M>>>0>0)):0)break}c[K+72>>2]=o;f=o}while(0);o=c[o>>2]|0}while((o|0)!=(n|0))}if((p|0)!=0|(f|0)!=0){Ac(a,g,j,K+120|0,K+72|0);f=c[K+120>>2]|0;if(f){h=c[f+12>>2]|0;g=h}f=c[K+72>>2]|0;if(!f)f=F;else{f=c[f+12>>2]|0;j=f}}else f=F;G=j;n=c[j+88>>2]|0;d=(c[j+96>>2]|0)+1|0;l=c[j+92>>2]|0}w=G;x=g;j=0;D=0;e=1;k=0;m=0;y=0;A=0;B=n;o=d;F=0;n=0;while(1){z=x+88|0;u=(c[w+88>>2]|0)-(c[z>>2]|0)|0;M=x+92|0;E=(c[w+92>>2]|0)-(c[M>>2]|0)|0;t=x+96|0;r=(c[w+96>>2]|0)-(c[t>>2]|0)|0;c[K+120>>2]=u;c[K+120+4>>2]=E;c[K+120+8>>2]=r;c[K+120+12>>2]=-1;z=B-(c[z>>2]|0)|0;M=l-(c[M>>2]|0)|0;t=o-(c[t>>2]|0)|0;s=(_(r,M)|0)-(_(E,t)|0)|0;t=(_(u,t)|0)-(_(r,z)|0)|0;M=(_(E,z)|0)-(_(u,M)|0)|0;c[K+72>>2]=s;c[K+72+4>>2]=((s|0)<0)<<31>>31;c[K+72+8>>2]=t;c[K+72+8+4>>2]=((t|0)<0)<<31>>31;c[K+72+16>>2]=M;c[K+72+16+4>>2]=((M|0)<0)<<31>>31;z=yr(E|0,((E|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;L=C;v=yr(r|0,((r|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;v=Ls(z|0,L|0,v|0,C|0)|0;L=C;r=yr(s|0,((s|0)<0)<<31>>31|0,r|0,((r|0)<0)<<31>>31|0)|0;z=C;M=yr(u|0,((u|0)<0)<<31>>31|0,M|0,((M|0)<0)<<31>>31|0)|0;M=Ls(r|0,z|0,M|0,C|0)|0;z=C;t=yr(u|0,((u|0)<0)<<31>>31|0,t|0,((t|0)<0)<<31>>31|0)|0;u=C;E=yr(s|0,((s|0)<0)<<31>>31|0,E|0,((E|0)<0)<<31>>31|0)|0;E=Ls(t|0,u|0,E|0,C|0)|0;c[K+48>>2]=v;c[K+48+4>>2]=L;c[K+48+8>>2]=M;c[K+48+8+4>>2]=z;c[K+48+16>>2]=E;c[K+48+16+4>>2]=C;c[K+24>>2]=0;c[K+24+4>>2]=0;c[K+24+8>>2]=0;c[K+24+12>>2]=0;c[K+24+16>>2]=0;E=Id(a,0,x,K+120|0,K+72|0,K+48|0,K+24|0)|0;c[K>>2]=0;c[K+4>>2]=0;c[K+8>>2]=0;c[K+12>>2]=0;c[K+16>>2]=0;z=Id(a,1,w,K+120|0,K+72|0,K+48|0,K)|0;do if((E|0)!=0|(z|0)!=0){d=E|0?-1:1;do if((E|0)!=0&(z|0)!=0){v=c[K+24+16>>2]|0;d=c[K+16>>2]|0;if((v|0)!=(d|0)){u=v-d|0;break}if(!v)u=0;else{M=c[K+24>>2]|0;t=c[K+24+4>>2]|0;p=c[K+8>>2]|0;N=c[K+8+4>>2]|0;b=yr(p|0,0,M|0,0)|0;d=C;M=yr(N|0,0,M|0,0)|0;L=C;p=yr(p|0,0,t|0,0)|0;q=C;t=yr(N|0,0,t|0,0)|0;N=C;p=Pt(M|0,0,p|0,0)|0;M=C;N=Pt(L|0,0,t|0,N|0)|0;q=Pt(N|0,C|0,q|0,0)|0;M=Pt(q|0,C|0,M|0,0)|0;q=C;d=Pt(0,p|0,b|0,d|0)|0;b=C;p=Pt(M|0,q|0,(b>>>0<p>>>0|(b|0)==(p|0)&d>>>0<0)&1|0,0)|0;q=C;M=c[K+24+8>>2]|0;N=c[K+24+8+4>>2]|0;t=c[K>>2]|0;L=c[K+4>>2]|0;s=yr(t|0,0,M|0,0)|0;r=C;M=yr(L|0,0,M|0,0)|0;O=C;t=yr(t|0,0,N|0,0)|0;u=C;N=yr(L|0,0,N|0,0)|0;L=C;t=Pt(M|0,0,t|0,0)|0;M=C;L=Pt(O|0,0,N|0,L|0)|0;u=Pt(L|0,C|0,u|0,0)|0;M=Pt(u|0,C|0,M|0,0)|0;u=C;r=Pt(0,t|0,s|0,r|0)|0;s=C;t=Pt(M|0,u|0,(s>>>0<t>>>0|(s|0)==(t|0)&r>>>0<0)&1|0,0)|0;u=C;if(!(q>>>0<u>>>0|(q|0)==(u|0)&p>>>0<t>>>0))if(!(q>>>0>u>>>0|(q|0)==(u|0)&p>>>0>t>>>0))if(b>>>0<s>>>0|(b|0)==(s|0)&d>>>0<r>>>0)d=-1;else d=(b>>>0>s>>>0|(b|0)==(s|0)&d>>>0>r>>>0)&1;else d=1;else d=-1;u=_(d,v)|0}}else u=d;while(0);do if(!e)if((u|0)>-1)if((c[K+16>>2]|0)<0&((c[K+8>>2]|0)==0?(c[K+8+4>>2]|0)==0:0)){b=y;t=A;break}else{J=136;break}else if((c[K+24+16>>2]|0)<0&((c[K+24+8>>2]|0)==0?(c[K+24+8+4>>2]|0)==0:0)){b=y;t=A;break}else{J=136;break}else J=136;while(0);if((J|0)==136){J=0;b=dg(a,x,w)|0;if(!y)k=b;else c[y+4>>2]=b;c[b>>2]=y;d=c[b+8>>2]|0;if(!A)m=d;else c[A>>2]=d;c[d+4>>2]=A;t=d}c[K+116>>2]=E;c[K+112>>2]=z;if(!u){Ac(a,h,f,K+116|0,K+112|0);s=c[K+112>>2]|0}else s=z;if((u|0)>-1&(s|0)!=0){r=(n|0)!=0;if(r?(H=c[n>>2]|0,(H|0)!=(z|0)):0){p=H;do{q=p;p=c[p>>2]|0;o=c[q+8>>2]|0;d=c[o+12>>2]|0;if((p|0)==(q|0))l=0;else{c[p+4>>2]=c[q+4>>2];c[c[q+4>>2]>>2]=p;l=p}c[d+8>>2]=l;l=c[o>>2]|0;d=c[q+12>>2]|0;if((l|0)==(o|0))l=0;else{c[l+4>>2]=c[o+4>>2];c[c[o+4>>2]>>2]=l}c[d+8>>2]=l;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+16>>2]=0;c[q>>2]=c[a+56>>2];c[a+56>>2]=q;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o>>2]=c[a+56>>2];c[a+56>>2]=o;c[a+116>>2]=(c[a+116>>2]|0)+-1}while((p|0)!=(z|0))}if(!t){n=s;l=r?D:z}else{if(r){c[n>>2]=m;d=z+4|0;l=D}else{n=c[z+4>>2]|0;c[n>>2]=m;d=z+4|0;l=m}c[m+4>>2]=n;c[t>>2]=z;c[d>>2]=t;n=c[K+112>>2]|0;m=0}y=f;f=c[n+12>>2]|0;D=l;t=0;d=c[y+88>>2]|0;o=c[y+96>>2]|0;l=c[y+92>>2]|0;y=c[n+8>>2]|0}else{d=B;y=n}s=c[K+116>>2]|0;if((u|0)<1&(s|0)!=0){r=(F|0)!=0;if(r?(I=c[F+4>>2]|0,(I|0)!=(E|0)):0){p=I;do{n=p+4|0;q=p;p=c[n>>2]|0;l=c[q>>2]|0;o=c[q+8>>2]|0;d=c[o+12>>2]|0;if((l|0)==(q|0))l=0;else{c[l+4>>2]=p;c[c[n>>2]>>2]=l}c[d+8>>2]=l;l=c[o>>2]|0;n=c[q+12>>2]|0;if((l|0)==(o|0))l=0;else{c[l+4>>2]=c[o+4>>2];c[c[o+4>>2]>>2]=l}c[n+8>>2]=l;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+16>>2]=0;c[q>>2]=c[a+56>>2];c[a+56>>2]=q;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o>>2]=c[a+56>>2];c[a+56>>2]=o;c[a+116>>2]=(c[a+116>>2]|0)+-1}while((p|0)!=(E|0))}if(!b){n=s;j=r?j:E}else{if(r){c[F+4>>2]=k;n=E;l=F}else{l=c[E>>2]|0;c[l+4>>2]=k;n=E;j=k}c[k>>2]=l;c[n>>2]=b;c[b+4>>2]=E;n=c[K+116>>2]|0;k=0}l=h;h=c[n+12>>2]|0;u=0;w=c[l+88>>2]|0;x=c[l+96>>2]|0;l=c[l+92>>2]|0;v=c[n+8>>2]|0}else{u=b;w=d;x=o;v=F}if((h|0)==(g|0)&(f|0)==(G|0)){if(v){r=v+4|0;n=c[r>>2]|0;if((n|0)!=(j|0))do{b=n+4|0;q=n;n=c[b>>2]|0;d=c[q>>2]|0;p=c[q+8>>2]|0;o=c[p+12>>2]|0;if((d|0)==(q|0))d=0;else{c[d+4>>2]=n;c[c[b>>2]>>2]=d}c[o+8>>2]=d;d=c[p>>2]|0;b=c[q+12>>2]|0;if((d|0)==(p|0))d=0;else{c[d+4>>2]=c[p+4>>2];c[c[p+4>>2]>>2]=d}c[b+8>>2]=d;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[q+12>>2]=0;c[q+16>>2]=0;c[q>>2]=c[a+56>>2];c[a+56>>2]=q;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[p+16>>2]=0;c[p>>2]=c[a+56>>2];c[a+56>>2]=p;c[a+116>>2]=(c[a+116>>2]|0)+-1}while((n|0)!=(j|0));if(u|0){c[k>>2]=v;c[r>>2]=k;c[j>>2]=u;c[u+4>>2]=j}}else{c[k>>2]=u;c[u+4>>2]=k;c[h+8>>2]=u}if(!y){c[t>>2]=m;c[m+4>>2]=t;c[G+8>>2]=t;s=0;q=D;r=e;p=u;b=w;o=x;d=v;n=0;break}n=c[y>>2]|0;if((n|0)!=(D|0))do{p=n;n=c[n>>2]|0;o=c[p+8>>2]|0;b=c[o+12>>2]|0;if((n|0)==(p|0))d=0;else{c[n+4>>2]=c[p+4>>2];c[c[p+4>>2]>>2]=n;d=n}c[b+8>>2]=d;d=c[o>>2]|0;b=c[p+12>>2]|0;if((d|0)==(o|0))d=0;else{c[d+4>>2]=c[o+4>>2];c[c[o+4>>2]>>2]=d}c[b+8>>2]=d;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[p+12>>2]=0;c[p+16>>2]=0;c[p>>2]=c[a+56>>2];c[a+56>>2]=p;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o>>2]=c[a+56>>2];c[a+56>>2]=o;c[a+116>>2]=(c[a+116>>2]|0)+-1}while((n|0)!=(D|0));if(!t){s=0;q=D;r=e;p=u;t=0;b=w;o=x;d=v;n=y}else{c[y>>2]=m;c[m+4>>2]=y;c[t>>2]=D;c[D+4>>2]=t;s=0;q=D;r=e;p=u;b=w;o=x;d=v;n=y}}else{s=1;q=D;r=0;p=u;b=w;o=x;d=v;n=y}}else{s=dg(a,x,w)|0;c[s>>2]=s;c[s+4>>2]=s;c[x+8>>2]=s;s=c[s+8>>2]|0;c[s>>2]=s;c[s+4>>2]=s;c[f+8>>2]=s;s=0;q=D;r=e;p=y;t=A;b=B;d=F}while(0);if(!s)break c;w=f;x=h;D=q;e=r;y=p;A=t;B=b;F=d}}while(0);i=K;return}}while(0);c[f+8>>2]=0;c[f>>2]=f;c[f+4>>2]=f;c[e>>2]=f;c[e+4>>2]=f;c[e+8>>2]=f;c[e+12>>2]=f;i=K;return}function wc(b,d){b=b|0;d=+d;var e=0,f=0,h=0,j=0.0,l=0.0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0,Z=0,_=0.0,$=0.0,aa=0.0,ba=0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0,ha=0,ia=0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0;ga=i;i=i+368|0;e=c[b+24>>2]|0;if((e|0)<=0){i=ga;return}K=ga+56+76|0;V=ga+272+16|0;W=ga+272+32|0;J=0;do{I=c[(c[b+32>>2]|0)+(J<<2)>>2]|0;switch(c[I+216>>2]|0){case 2:case 5:break;default:{if(a[I+924>>0]|0){a[I+924>>0]=0;h=c[I+732>>2]|0;if((h|0)>0){e=c[I+740>>2]|0;f=0;do{G=c[e+(f*52|0)+8>>2]|0;H=c[e+(f*52|0)+12>>2]|0;D=+g[G+8>>2]-+g[H+8>>2];E=+g[G+12>>2]-+g[H+12>>2];F=+g[G+16>>2]-+g[H+16>>2];F=+O(+(D*D+E*E+F*F));g[e+(f*52|0)+16>>2]=F;g[e+(f*52|0)+28>>2]=F*F;f=f+1|0}while((f|0)!=(h|0));e=c[I+740>>2]|0;f=0;do{g[e+(f*52|0)+24>>2]=(+g[(c[e+(f*52|0)+8>>2]|0)+88>>2]+ +g[(c[e+(f*52|0)+12>>2]|0)+88>>2])/+g[(c[e+(f*52|0)+4>>2]|0)+4>>2];f=f+1|0}while((f|0)!=(h|0))}eg(I);e=c[I+988>>2]|0;if(e|0)An(I+988|0,e);e=c[I+992>>2]|0;if(e|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[I+992>>2]=0;c[I+996>>2]=-1;e=c[I+1020>>2]|0;if(e|0){if(a[I+1024>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[I+1020>>2]=0}a[I+1024>>0]=1;c[I+1020>>2]=0;c[I+1012>>2]=0;c[I+1016>>2]=0;c[I+1004>>2]=0;if(c[I+388>>2]&16|0)gg(I)}m=+g[I+368>>2]*d;g[I+452>>2]=m;g[I+456>>2]=1.0/m;g[I+460>>2]=m*3.0;e=c[I+192>>2]|0;m=+Sb[c[(c[e>>2]|0)+48>>2]&15](e);g[I+464>>2]=m;g[I+468>>2]=m*.25;e=c[I+684>>2]|0;m=+g[I+452>>2];j=+g[e+40>>2]*m;l=m*+g[e+44>>2];m=m*+g[e+48>>2];e=c[I+712>>2]|0;if((e|0)>0){f=c[I+720>>2]|0;h=0;do{if(+g[f+(h*104|0)+88>>2]>0.0){H=f+(h*104|0)+40|0;g[H>>2]=j+ +g[H>>2];H=f+(h*104|0)+44|0;g[H>>2]=l+ +g[H>>2];H=f+(h*104|0)+48|0;g[H>>2]=m+ +g[H>>2]}h=h+1|0}while((h|0)!=(e|0))}li(11033);E=+g[I+308>>2];F=+g[I+312>>2];n=+g[I+304>>2]>0.0?1:+g[I+300>>2]>0.0;y=c[I+712>>2]|0;if(E!=0.0|F>0.0){if((y|0)>0){e=c[I+720>>2]|0;l=+g[e+8>>2];m=+g[e+12>>2];o=+g[e+16>>2];e=c[I+752>>2]|0;if((e|0)>0){f=c[I+760>>2]|0;h=0;j=0.0;do{H=c[f+(h*44|0)+8>>2]|0;G=c[f+(h*44|0)+12>>2]|0;C=+g[G+8>>2]-l;x=+g[G+12>>2]-m;A=+g[G+16>>2]-o;G=c[f+(h*44|0)+16>>2]|0;B=+g[G+8>>2]-l;z=+g[G+12>>2]-m;D=+g[G+16>>2]-o;j=j+((+g[H+16>>2]-o)*(C*z-x*B)+((+g[H+8>>2]-l)*(x*D-A*z)+(+g[H+12>>2]-m)*(A*B-C*D)));h=h+1|0}while((h|0)!=(e|0))}else j=0.0;j=j/6.0}else j=0.0;D=E*(1.0/+N(+j));C=F*(+g[I+476>>2]-j)}else{C=0.0;D=0.0}a:do if((y|0)>0){if(!n){e=c[I+720>>2]|0;f=0;while(1){if(+g[e+(f*104|0)+88>>2]>0.0){if(E!=0.0){z=D*+g[e+(f*104|0)+92>>2];A=z*+g[e+(f*104|0)+76>>2];B=z*+g[e+(f*104|0)+80>>2];H=e+(f*104|0)+56|0;g[H>>2]=+g[e+(f*104|0)+72>>2]*z+ +g[H>>2];H=e+(f*104|0)+60|0;g[H>>2]=A+ +g[H>>2];H=e+(f*104|0)+64|0;g[H>>2]=B+ +g[H>>2]}if(F>0.0){z=C*+g[e+(f*104|0)+92>>2];A=z*+g[e+(f*104|0)+76>>2];B=z*+g[e+(f*104|0)+80>>2];H=e+(f*104|0)+56|0;g[H>>2]=+g[e+(f*104|0)+72>>2]*z+ +g[H>>2];H=e+(f*104|0)+60|0;g[H>>2]=A+ +g[H>>2];H=e+(f*104|0)+64|0;g[H>>2]=B+ +g[H>>2]}}f=f+1|0;if((f|0)==(y|0))break a}}f=c[I+720>>2]|0;h=0;do{x=+g[f+(h*104|0)+88>>2];if(x>0.0){z=+g[I+452>>2];q=+g[I+304>>2];o=+g[I+300>>2];b:do if((q>0.0|o>0.0?(L=c[c[I+684>>2]>>2]|0,(c[I+288>>2]|0)<4):0)?(M=+g[f+(h*104|0)+40>>2],P=M-+g[I+1212>>2],Q=+g[f+(h*104|0)+44>>2],R=Q-+g[I+1216>>2],S=+g[f+(h*104|0)+48>>2],T=S-+g[I+1220>>2],U=+O(+(P*P+R*R+T*T)),P*P+R*R+T*T>1.1920928955078125e-07):0){u=P*(1.0/U);A=R*(1.0/U);B=T*(1.0/U);s=+g[f+(h*104|0)+72>>2];t=+g[f+(h*104|0)+76>>2];v=+g[f+(h*104|0)+80>>2];switch(c[I+288>>2]|0){case 2:break;case 1:case 3:case 0:{j=P*s+R*t+T*v<0.0?-1.0:1.0;if(!(T*v*j+(P*s*j+R*t*j)>0.0))break b;w=-((c[k>>2]=L,+g[k>>2])*(P*P+R*R+T*T)*(T*v*j+(P*s*j+R*t*j))*+g[f+(h*104|0)+92>>2]*.5);m=u*o*w+(s*j*q*w+0.0);l=A*o*w+(t*j*q*w+0.0);j=B*o*w+(v*j*q*w+0.0);e=f+(h*104|0)+56|0;if(z*x*j*z*x*j+(z*x*m*z*x*m+z*x*l*z*x*l)>M*M+Q*Q+S*S){B=1.0/+O(+(j*j+(m*m+l*l)));g[e>>2]=+g[e>>2]-1.0/(z*x)*m*B*(S*j*B+(M*m*B+Q*l*B));H=f+(h*104|0)+60|0;g[H>>2]=+g[H>>2]-1.0/(z*x)*l*B*(S*j*B+(M*m*B+Q*l*B));H=f+(h*104|0)+64|0;g[H>>2]=+g[H>>2]-1.0/(z*x)*j*B*(S*j*B+(M*m*B+Q*l*B));break b}else{g[e>>2]=m+ +g[e>>2];H=f+(h*104|0)+60|0;g[H>>2]=l+ +g[H>>2];H=f+(h*104|0)+64|0;g[H>>2]=j+ +g[H>>2];break b}}default:break b}p=P*s+R*t+T*v<0.0?-1.0:1.0;j=B*v*p+(u*s*p+A*t*p);l=+g[f+(h*104|0)+92>>2]*.5;m=(c[k>>2]=L,+g[k>>2]);w=j*o*.5*m*(P*P+R*R+T*T)*l;if(j>0.0&j<.9847999811172485){o=q*.5*m*U*l*+O(+(1.0-j*j));q=(B*(u*v*p-B*s*p)-A*(A*s*p-u*t*p))*o;r=(u*(A*s*p-u*t*p)-B*(B*t*p-A*v*p))*o;o=(A*(B*t*p-A*v*p)-u*(u*v*p-B*s*p))*o}else{q=0.0;r=0.0;o=0.0}j=z*x*-(B*w)*z*x*-(B*w)+(x*-(u*w)*z*x*-(u*w)*z+z*x*-(A*w)*z*x*-(A*w));if(j>0.0?j>=M*M+Q*Q+S*S:0){j=+O(+(M*M+Q*Q+S*S))/+O(+j)*.800000011920929;m=j*-(u*w);l=j*-(B*w);j=j*-(A*w)}else{m=-(u*w);l=-(B*w);j=-(A*w)}n=f+(h*104|0)+56|0;G=f+(h*104|0)+60|0;A=j+ +g[G>>2];H=f+(h*104|0)+64|0;B=l+ +g[H>>2];g[n>>2]=q+(m+ +g[n>>2]);g[G>>2]=r+A;g[H>>2]=o+B}while(0);if(E!=0.0){z=D*+g[f+(h*104|0)+92>>2];A=z*+g[f+(h*104|0)+76>>2];B=z*+g[f+(h*104|0)+80>>2];H=f+(h*104|0)+56|0;g[H>>2]=+g[f+(h*104|0)+72>>2]*z+ +g[H>>2];H=f+(h*104|0)+60|0;g[H>>2]=A+ +g[H>>2];H=f+(h*104|0)+64|0;g[H>>2]=B+ +g[H>>2]}if(F>0.0){z=C*+g[f+(h*104|0)+92>>2];A=z*+g[f+(h*104|0)+76>>2];B=z*+g[f+(h*104|0)+80>>2];H=f+(h*104|0)+56|0;g[H>>2]=+g[f+(h*104|0)+72>>2]*z+ +g[H>>2];H=f+(h*104|0)+60|0;g[H>>2]=A+ +g[H>>2];H=f+(h*104|0)+64|0;g[H>>2]=B+ +g[H>>2]}}h=h+1|0}while((h|0)!=(y|0))}while(0);G=c[I+752>>2]|0;if((G|0)>0){H=0;do{w=+g[I+452>>2];q=+g[I+304>>2];p=+g[I+300>>2];c:do if((q>0.0|p>0.0?(X=c[I+288>>2]|0,(X|0)>3):0)?(Y=c[I+760>>2]|0,Z=c[Y+(H*44|0)+8>>2]|0,n=c[Y+(H*44|0)+12>>2]|0,_=+g[Z+40>>2],$=+g[Z+44>>2],aa=+g[Z+48>>2],y=c[Y+(H*44|0)+16>>2]|0,ba=c[c[I+684>>2]>>2]|0,ca=(_+ +g[n+40>>2]+ +g[y+40>>2])*.3333333432674408-+g[I+1212>>2],da=($+ +g[n+44>>2]+ +g[y+44>>2])*.3333333432674408-+g[I+1216>>2],ea=(aa+ +g[n+48>>2]+ +g[y+48>>2])*.3333333432674408-+g[I+1220>>2],fa=+O(+(ca*ca+da*da+ea*ea)),ca*ca+da*da+ea*ea>1.1920928955078125e-07):0){s=ca*(1.0/fa);u=da*(1.0/fa);x=ea*(1.0/fa);r=+g[Y+(H*44|0)+20>>2];t=+g[Y+(H*44|0)+24>>2];v=+g[Y+(H*44|0)+28>>2];switch(X|0){case 5:break;case 4:case 6:{j=ca*r+da*t+ea*v<0.0?-1.0:1.0;if(!(ea*v*j+(ca*r*j+da*t*j)>0.0))break c;l=-((c[k>>2]=ba,+g[k>>2])*(ca*ca+da*da+ea*ea)*(ea*v*j+(ca*r*j+da*t*j))*+g[Y+(H*44|0)+36>>2]);s=(s*p*l+(r*j*q*l+0.0))*.3333333432674408;r=(u*p*l+(t*j*q*l+0.0))*.3333333432674408;l=(x*p*l+(v*j*q*l+0.0))*.3333333432674408;h=Z;m=_;o=$;p=aa;e=0;while(1){j=w*+g[h+88>>2];f=h+56|0;if(l*j*l*j+(s*j*s*j+r*j*r*j)>m*m+o*o+p*p){E=1.0/+O(+(l*l+(s*s+r*r)));F=p*l*E+(m*s*E+o*r*E);g[f>>2]=+g[f>>2]-1.0/j*s*E*F;y=h+60|0;g[y>>2]=+g[y>>2]-1.0/j*r*E*F;y=h+64|0;g[y>>2]=+g[y>>2]-1.0/j*l*E*F}else{g[f>>2]=s+ +g[f>>2];y=h+60|0;g[y>>2]=r+ +g[y>>2];y=h+64|0;g[y>>2]=l+ +g[y>>2]}e=e+1|0;if((e|0)==3)break c;y=c[Y+(H*44|0)+8+(e<<2)>>2]|0;h=y;m=+g[y+40>>2];o=+g[y+44>>2];p=+g[y+48>>2]}}default:break c}o=ca*r+da*t+ea*v<0.0?-1.0:1.0;j=x*v*o+(s*r*o+u*t*o);l=+g[Y+(H*44|0)+36>>2]*.5;m=(c[k>>2]=ba,+g[k>>2]);p=j*(ca*ca+da*da+ea*ea)*p*.5*m*l;if(j>0.0&j<.9847999811172485){F=fa*q*.5*m*l*+O(+(1.0-j*j));w=(x*(s*v*o-x*r*o)-u*(u*r*o-s*t*o))*F*.3333333432674408;z=(u*(x*t*o-u*v*o)-s*(s*v*o-x*r*o))*F*.3333333432674408;t=(s*(u*r*o-s*t*o)-x*(x*t*o-u*v*o))*F*.3333333432674408}else{w=0.0;z=0.0;t=0.0}h=(g[k>>2]=s*p*-.3333333432674408,c[k>>2]|0);n=(g[k>>2]=u*p*-.3333333432674408,c[k>>2]|0);y=Z;e=(g[k>>2]=x*p*-.3333333432674408,c[k>>2]|0);f=0;while(1){j=+g[y+88>>2];if(j>0.0){p=(c[k>>2]=h,+g[k>>2]);q=(c[k>>2]=n,+g[k>>2]);r=(c[k>>2]=e,+g[k>>2]);l=+g[I+452>>2];j=r*j*l*r*j*l+(p*j*l*p*j*l+q*j*l*q*j*l);l=+g[y+40>>2];m=+g[y+44>>2];o=+g[y+48>>2];if(j>0.0?j>=l*l+m*m+o*o:0){F=+O(+(l*l+m*m+o*o))/+O(+j)*.800000011920929;h=(g[k>>2]=p*F,c[k>>2]|0);n=(g[k>>2]=q*F,c[k>>2]|0);e=(g[k>>2]=r*F,c[k>>2]|0)}ia=y+56|0;D=(c[k>>2]=h,+g[k>>2])+ +g[ia>>2];ha=y+60|0;E=(c[k>>2]=n,+g[k>>2])+ +g[ha>>2];y=y+64|0;F=(c[k>>2]=e,+g[k>>2])+ +g[y>>2];g[ia>>2]=w+D;g[ha>>2]=t+E;g[y>>2]=z+F}f=f+1|0;if((f|0)==3)break c;y=c[Y+(H*44|0)+8+(f<<2)>>2]|0}}while(0);H=H+1|0}while((H|0)!=(G|0))}e=c[2357]|0;ia=(c[e+16>>2]|0)+-1|0;c[e+16>>2]=ia;do if(!ia){if(c[e+4>>2]|0){tb(ga+320|0,0)|0;ia=c[6434]|0;g[e+8>>2]=+g[e+8>>2]+ +(((c[ga+320+4>>2]|0)-(c[ia+4>>2]|0)+(((c[ga+320>>2]|0)-(c[ia>>2]|0)|0)*1e6|0)-(c[e+12>>2]|0)|0)>>>0)/1.0e3;if(c[e+16>>2]|0)break;e=c[2357]|0}c[2357]=c[e+20>>2]}while(0);e=c[I+712>>2]|0;if((e|0)>0){f=0;do{ha=c[I+720>>2]|0;ia=ha+(f*104|0)+24|0;H=ha+(f*104|0)+8|0;c[ia>>2]=c[H>>2];c[ia+4>>2]=c[H+4>>2];c[ia+8>>2]=c[H+8>>2];c[ia+12>>2]=c[H+12>>2];ia=ha+(f*104|0)+56|0;E=+g[ha+(f*104|0)+88>>2];F=+g[I+452>>2];C=+g[ia>>2]*E*F;D=E*+g[ha+(f*104|0)+60>>2]*F;E=F*E*+g[ha+(f*104|0)+64>>2];F=+g[(c[I+684>>2]|0)+12>>2]/F;C=C>F?F:C;D=D>F?F:D;E=E>F?F:E;G=ha+(f*104|0)+40|0;C=(C<-F?-F:C)+ +g[G>>2];g[G>>2]=C;G=ha+(f*104|0)+44|0;D=(D<-F?-F:D)+ +g[G>>2];g[G>>2]=D;G=ha+(f*104|0)+48|0;E=(E<-F?-F:E)+ +g[G>>2];g[G>>2]=E;F=+g[I+452>>2];g[H>>2]=C*F+ +g[H>>2];H=ha+(f*104|0)+12|0;g[H>>2]=F*D+ +g[H>>2];ha=ha+(f*104|0)+16|0;g[ha>>2]=E*F+ +g[ha>>2];c[ia>>2]=0;c[ia+4>>2]=0;c[ia+8>>2]=0;c[ia+12>>2]=0;f=f+1|0}while((f|0)!=(e|0))}$c(I);e=c[I+928>>2]|0;if(e){ia=c[I+192>>2]|0;D=+Sb[c[(c[ia>>2]|0)+48>>2]&15](ia);F=+g[e+4>>2]-D;E=+g[e+8>>2]-D;g[I+892>>2]=+g[e>>2]-D;g[I+896>>2]=F;g[I+900>>2]=E;g[I+904>>2]=0.0;E=D+ +g[e+20>>2];F=D+ +g[e+24>>2];g[I+908>>2]=D+ +g[e+16>>2];g[I+912>>2]=E;g[I+916>>2]=F;g[I+920>>2]=0.0;e=c[I+188>>2]|0;if(e|0){ia=c[I+684>>2]|0;ha=c[ia+32>>2]|0;yb[c[(c[ha>>2]|0)+16>>2]&31](ha,e,I+892|0,I+908|0,c[ia+36>>2]|0)}}else{c[I+892>>2]=0;c[I+892+4>>2]=0;c[I+892+8>>2]=0;c[I+892+12>>2]=0;c[I+892+16>>2]=0;c[I+892+20>>2]=0;c[I+892+24>>2]=0;c[I+892+28>>2]=0}e=c[I+712>>2]|0;if((e|0)>0){f=0;do{ha=c[I+720>>2]|0;E=+g[I+464>>2];C=+g[ha+(f*104|0)+8>>2];F=+g[ha+(f*104|0)+12>>2];D=+g[ha+(f*104|0)+16>>2];g[ga+192>>2]=C-E;g[ga+192+4>>2]=F-E;g[ga+192+8>>2]=D-E;g[ga+192+12>>2]=0.0;g[ga+192+16>>2]=E+C;g[ga+192+20>>2]=E+F;g[ga+192+24>>2]=E+D;g[ga+192+28>>2]=0.0;ia=c[ha+(f*104|0)+96>>2]|0;D=+g[I+460>>2];E=D*+g[ha+(f*104|0)+44>>2];F=D*+g[ha+(f*104|0)+48>>2];g[ga+176>>2]=+g[ha+(f*104|0)+40>>2]*D;g[ga+176+4>>2]=E;g[ga+176+8>>2]=F;g[ga+176+12>>2]=0.0;jh(I+928|0,ia,ga+192|0,ga+176|0,+g[I+468>>2])|0;f=f+1|0}while((f|0)!=(e|0))}if(c[I+988>>2]|0?(c[I+752>>2]|0)>0:0){e=0;do{ia=c[I+760>>2]|0;G=c[ia+(e*44|0)+8>>2]|0;H=c[ia+(e*44|0)+12>>2]|0;ha=c[ia+(e*44|0)+16>>2]|0;C=(+g[G+40>>2]+ +g[H+40>>2]+ +g[ha+40>>2])*.3333333432674408;D=(+g[G+44>>2]+ +g[H+44>>2]+ +g[ha+44>>2])*.3333333432674408;E=(+g[G+48>>2]+ +g[H+48>>2]+ +g[ha+48>>2])*.3333333432674408;x=+g[I+464>>2];u=+g[G+8>>2];w=+g[G+12>>2];A=+g[G+16>>2];F=+g[G+20>>2];B=+g[H+8>>2];p=B<u?B:u;z=+g[H+12>>2];q=z<w?z:w;v=+g[H+16>>2];r=v<A?v:A;t=+g[H+20>>2];s=t<F?t:F;u=u<B?B:u;w=w<z?z:w;A=A<v?v:A;F=F<t?t:F;t=+g[ha+8>>2];v=+g[ha+12>>2];z=+g[ha+16>>2];B=+g[ha+20>>2];g[ga+192>>2]=(t<p?t:p)-x;g[ga+192+4>>2]=(v<q?v:q)-x;g[ga+192+8>>2]=(z<r?z:r)-x;g[ga+192+12>>2]=B<s?B:s;g[ga+192+16>>2]=x+(u<t?t:u);g[ga+192+20>>2]=x+(w<v?v:w);g[ga+192+24>>2]=x+(A<z?z:A);g[ga+192+28>>2]=F<B?B:F;ia=c[ia+(e*44|0)+40>>2]|0;F=+g[I+460>>2];g[ga+160>>2]=C*F;g[ga+160+4>>2]=D*F;g[ga+160+8>>2]=E*F;g[ga+160+12>>2]=0.0;jh(I+988|0,ia,ga+192|0,ga+160|0,+g[I+468>>2])|0;e=e+1|0}while((e|0)<(c[I+752>>2]|0))}do if(a[I+473>>0]|0){y=c[I+712>>2]|0;if((y|0)>0){e=c[I+720>>2]|0;f=c[I+512>>2]|0;j=0.0;l=0.0;m=0.0;h=0;do{F=+g[f+(h<<2)>>2];j=j+ +g[e+(h*104|0)+8>>2]*F;l=l+F*+g[e+(h*104|0)+12>>2];m=m+F*+g[e+(h*104|0)+16>>2];h=h+1|0}while((h|0)!=(y|0))}else{j=0.0;l=0.0;m=0.0}g[I+520>>2]=j;g[I+524>>2]=l;g[I+528>>2]=m;g[I+532>>2]=0.0;h=ga+320|0;n=h+48|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(n|0));g[ga+320>>2]=1.1920928955078125e-07;g[ga+320+20>>2]=2.384185791015625e-07;g[ga+320+40>>2]=3.5762786865234375e-07;if((y|0)>0){e=c[I+512>>2]|0;f=c[I+720>>2]|0;h=c[I+492>>2]|0;o=1.1920928955078125e-07;p=+g[ga+320+4>>2];q=+g[ga+320+8>>2];r=+g[ga+320+16>>2];s=2.384185791015625e-07;t=+g[ga+320+24>>2];u=0.0;v=0.0;w=3.5762786865234375e-07;n=0;do{E=+g[e+(n<<2)>>2];A=(+g[f+(n*104|0)+8>>2]-j)*E;B=(+g[f+(n*104|0)+12>>2]-l)*E;E=E*(+g[f+(n*104|0)+16>>2]-m);C=+g[h+(n<<4)>>2];D=+g[h+(n<<4)+4>>2];F=+g[h+(n<<4)+8>>2];o=A*C+o;p=A*D+p;q=A*F+q;r=B*C+r;s=B*D+s;t=B*F+t;u=E*C+u;v=E*D+v;w=E*F+w;n=n+1|0}while((n|0)!=(y|0));g[ga+320>>2]=o;g[ga+320+4>>2]=p;g[ga+320+8>>2]=q;g[ga+320+16>>2]=r;g[ga+320+20>>2]=s;g[ga+320+24>>2]=t;g[ga+320+32>>2]=u;g[ga+320+36>>2]=v;g[ga+320+40>>2]=w}if((a[22520]|0)==0?Wa(22520)|0:0){g[5787]=9.999999747378752e-05;c[5788]=16;_a(22520)}md(ga+320|0,ga+272|0,ga+224|0);c[I+536>>2]=c[ga+272>>2];c[I+536+4>>2]=c[ga+272+4>>2];c[I+536+8>>2]=c[ga+272+8>>2];c[I+536+12>>2]=c[ga+272+12>>2];c[I+552>>2]=c[V>>2];c[I+552+4>>2]=c[V+4>>2];c[I+552+8>>2]=c[V+8>>2];c[I+552+12>>2]=c[V+12>>2];c[I+568>>2]=c[W>>2];c[I+568+4>>2]=c[W+4>>2];c[I+568+8>>2]=c[W+8>>2];c[I+568+12>>2]=c[W+12>>2];la=+g[ga+272>>2];w=+g[V>>2];B=+g[W>>2];ka=+g[ga+272+4>>2];x=+g[ga+272+20>>2];D=+g[ga+272+36>>2];ja=+g[ga+272+8>>2];z=+g[ga+272+24>>2];F=+g[ga+272+40>>2];p=+g[I+632>>2];o=+g[I+636>>2];m=+g[I+640>>2];ra=+g[I+648>>2];qa=+g[I+652>>2];q=+g[I+656>>2];C=+g[I+664>>2];E=+g[I+668>>2];u=+g[I+672>>2];pa=+g[ga+320>>2];oa=+g[ga+320+16>>2];r=+g[ga+320+32>>2];j=(la*p+ka*o+ja*m)*pa+(w*p+x*o+z*m)*oa+(B*p+D*o+F*m)*r;na=+g[ga+320+4>>2];ma=+g[ga+320+20>>2];s=+g[ga+320+36>>2];l=(la*p+ka*o+ja*m)*na+(w*p+x*o+z*m)*ma+(B*p+D*o+F*m)*s;v=+g[ga+320+8>>2];A=+g[ga+320+24>>2];t=+g[ga+320+40>>2];m=(la*p+ka*o+ja*m)*v+(w*p+x*o+z*m)*A+(B*p+D*o+F*m)*t;o=(la*ra+ka*qa+ja*q)*pa+(w*ra+x*qa+z*q)*oa+(B*ra+D*qa+F*q)*r;p=(la*ra+ka*qa+ja*q)*na+(w*ra+x*qa+z*q)*ma+(B*ra+D*qa+F*q)*s;q=(la*ra+ka*qa+ja*q)*v+(w*ra+x*qa+z*q)*A+(B*ra+D*qa+F*q)*t;r=pa*(la*C+ka*E+ja*u)+oa*(w*C+x*E+z*u)+(B*C+D*E+F*u)*r;s=(la*C+ka*E+ja*u)*na+(w*C+x*E+z*u)*ma+(B*C+D*E+F*u)*s;t=(la*C+ka*E+ja*u)*v+(w*C+x*E+z*u)*A+(B*C+D*E+F*u)*t;g[I+584>>2]=j;g[I+588>>2]=l;g[I+592>>2]=m;g[I+596>>2]=0.0;g[I+600>>2]=o;g[I+604>>2]=p;g[I+608>>2]=q;g[I+612>>2]=0.0;g[I+616>>2]=r;g[I+620>>2]=s;g[I+624>>2]=t;g[I+628>>2]=0.0;u=+g[I+364>>2];if(u>1.0){ra=1.0/(m*(s*o-p*r)+(j*(p*t-q*s)+l*(q*r-t*o)))<1.0?1.0:u<1.0/(m*(s*o-p*r)+(j*(p*t-q*s)+l*(q*r-t*o)))?u:1.0/(m*(s*o-p*r)+(j*(p*t-q*s)+l*(q*r-t*o)));g[I+584>>2]=j*ra;g[I+588>>2]=l*ra;g[I+592>>2]=m*ra;g[I+596>>2]=0.0;g[I+600>>2]=o*ra;g[I+604>>2]=p*ra;g[I+608>>2]=q*ra;g[I+612>>2]=0.0;g[I+616>>2]=r*ra;g[I+620>>2]=s*ra;g[I+624>>2]=ra*t;g[I+628>>2]=0.0}if(a[I+473>>0]|0){if(!(+g[I+320>>2]>0.0))break;j=+g[I+536>>2];l=+g[I+540>>2];m=+g[I+544>>2];o=+g[I+552>>2];p=+g[I+556>>2];q=+g[I+560>>2];r=+g[I+568>>2];s=+g[I+572>>2];t=+g[I+576>>2];e=c[I+712>>2]|0;if((e|0)<=0)break;h=0;do{f=c[I+720>>2]|0;if(+g[f+(h*104|0)+88>>2]>0.0){H=c[I+492>>2]|0;ma=+g[H+(h<<4)>>2];na=+g[H+(h<<4)+4>>2];oa=+g[H+(h<<4)+8>>2];la=+g[I+320>>2];H=f+(h*104|0)+8|0;pa=+g[H>>2];ha=f+(h*104|0)+12|0;qa=+g[ha>>2];ia=f+(h*104|0)+16|0;ra=+g[ia>>2];qa=qa+la*(o*ma+p*na+q*oa+ +g[I+524>>2]-qa);ra=ra+la*(r*ma+s*na+t*oa+ +g[I+528>>2]-ra);g[H>>2]=pa+la*(+g[I+520>>2]+(j*ma+l*na+m*oa)-pa);g[ha>>2]=qa;g[ia>>2]=ra;g[f+(h*104|0)+20>>2]=0.0}h=h+1|0}while((h|0)!=(e|0))}}while(0);h=ga+56|0;n=h+104|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(n|0));e=c[I+812>>2]|0;if((e|0)<0){if((c[I+816>>2]|0)<0){f=c[I+820>>2]|0;if(f|0){if(a[I+824>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[I+820>>2]=0}a[I+824>>0]=1;c[I+820>>2]=0;c[I+816>>2]=0}do{ia=c[I+820>>2]|0;ha=ia+(e*104|0)|0;c[ha>>2]=c[ga+56>>2];c[ha+4>>2]=c[ga+56+4>>2];c[ha+8>>2]=c[ga+56+8>>2];c[ha+12>>2]=c[ga+56+12>>2];c[ha+16>>2]=c[ga+56+16>>2];c[ha+20>>2]=c[ga+56+20>>2];c[ha+24>>2]=c[ga+56+24>>2];ha=ia+(e*104|0)+28|0;c[ha>>2]=c[ga+56+28>>2];c[ha+4>>2]=c[ga+56+28+4>>2];c[ha+8>>2]=c[ga+56+28+8>>2];c[ha+12>>2]=c[ga+56+28+12>>2];ha=ia+(e*104|0)+44|0;c[ha>>2]=c[ga+56+44>>2];c[ha+4>>2]=c[ga+56+44+4>>2];c[ha+8>>2]=c[ga+56+44+8>>2];c[ha+12>>2]=c[ga+56+44+12>>2];ha=ia+(e*104|0)+60|0;c[ha>>2]=c[ga+56+60>>2];c[ha+4>>2]=c[ga+56+60+4>>2];c[ha+8>>2]=c[ga+56+60+8>>2];c[ha+12>>2]=c[ga+56+60+12>>2];ia=ia+(e*104|0)+76|0;c[ia>>2]=c[K>>2];c[ia+4>>2]=c[K+4>>2];c[ia+8>>2]=c[K+8>>2];c[ia+12>>2]=c[K+12>>2];c[ia+16>>2]=c[K+16>>2];c[ia+20>>2]=c[K+20>>2];c[ia+24>>2]=c[K+24>>2];e=e+1|0}while((e|0)!=0)}c[I+812>>2]=0;h=ga;n=h+56|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(n|0));e=c[I+832>>2]|0;if((e|0)<0){if((c[I+836>>2]|0)<0){f=c[I+840>>2]|0;if(f|0){if(a[I+844>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0)}c[I+840>>2]=0}a[I+844>>0]=1;c[I+840>>2]=0;c[I+836>>2]=0}do{h=(c[I+840>>2]|0)+(e*56|0)|0;f=ga;n=h+56|0;do{c[h>>2]=c[f>>2];h=h+4|0;f=f+4|0}while((h|0)<(n|0));e=e+1|0}while((e|0)!=0)}c[I+832>>2]=0;ig(I+928|0,1);ig(I+988|0,1);ig(I+1048|0,1);e=c[b+24>>2]|0}}J=J+1|0}while((J|0)<(e|0));i=ga;return}
	function Wj(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=3640;a[b+8>>0]=g&1;c[b+12>>2]=3668;c[b+60>>2]=d;c[b+64>>2]=0;a[b+88>>0]=1;c[b+84>>2]=0;c[b+76>>2]=0;c[b+80>>2]=0;a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;a[b+128>>0]=1;c[b+124>>2]=0;c[b+116>>2]=0;c[b+120>>2]=0;a[b+148>>0]=1;c[b+144>>2]=0;c[b+136>>2]=0;c[b+140>>2]=0;if(g){c[b+16>>2]=c[f+8>>2];d=e;d=d+8|0;d=c[d>>2]|0;g=b+20|0;c[g>>2]=d;cg(b+12|0);return}else{c[b+16>>2]=c[e+8>>2];d=f;d=d+8|0;d=c[d>>2]|0;g=b+20|0;c[g>>2]=d;cg(b+12|0);return}}function Xj(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+g[a+4>>2];h=+g[a+396>>2];m=+g[a+8>>2];e=+g[a+400>>2];l=+g[a+12>>2];c=+g[a+404>>2];k=+g[a+20>>2];j=+g[a+24>>2];i=+g[a+28>>2];f=+g[a+36>>2];d=+g[a+40>>2];b=+g[a+44>>2];g[a+264>>2]=n*h*n+m*e*m+l*c*l;g[a+268>>2]=n*h*k+m*e*j+l*c*i;g[a+272>>2]=n*h*f+m*e*d+l*c*b;g[a+276>>2]=0.0;g[a+280>>2]=h*k*n+e*j*m+c*i*l;g[a+284>>2]=h*k*k+e*j*j+c*i*i;g[a+288>>2]=h*k*f+e*j*d+c*i*b;g[a+292>>2]=0.0;g[a+296>>2]=h*f*n+e*d*m+c*b*l;g[a+300>>2]=h*f*k+e*d*j+c*b*i;g[a+304>>2]=h*f*f+e*d*d+c*b*b;g[a+308>>2]=0.0;return}function Yj(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0;if(a[b+738>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}c[d>>2]=5;c[d+4>>2]=1;e=+kj(b,(c[b+28>>2]|0)+4|0,(c[b+32>>2]|0)+4|0);g[b+728>>2]=e;g[b+708>>2]=0.0;g[b+712>>2]=0.0;a[b+716>>0]=0;f=+g[b+692>>2];do if(f>=0.0){e=+eh(e-+g[b+688>>2],6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465}else e=e+6.2831854820251465;if(e<-f){a[b+716>>0]=1;g[b+708>>2]=-(e+f);g[b+712>>2]=1.0;break}if(e>f){a[b+716>>0]=1;g[b+708>>2]=f-e;g[b+712>>2]=-1.0}else h=12}else h=12;while(0);if((h|0)==12?(a[b+737>>0]|0)==0:0)return;c[d>>2]=6;c[d+4>>2]=0;return}function Zj(b,d,e){b=b|0;d=d|0;e=+e;var f=0,h=0;c[6435]=(c[6435]|0)+1;f=yc(203)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}c[f>>2]=4872;h=f+60|0;a[f+144>>0]=1;c[f+140>>2]=0;c[f+132>>2]=0;c[f+136>>2]=0;c[f+176>>2]=1;g[f+56>>2]=.019999999552965164;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;a[f+170>>0]=1;c[f+8>>2]=b;g[f+52>>2]=e;g[f+48>>2]=0.0;c[f+12>>2]=d;a[f+171>>0]=1;g[f+172>>2]=0.0;g[f+16>>2]=0.0;g[f+20>>2]=0.0;g[f+44>>2]=29.399999618530273;g[f+24>>2]=55.0;g[f+28>>2]=10.0;a[f+168>>0]=0;a[f+169>>0]=0;a[f+180>>0]=1;g[f+36>>2]=.7853981852531433;g[f+40>>2]=.7071067690849304;g[f+108>>2]=0.0;a[f+181>>0]=0;a[f+182>>0]=0;return f|0}function _j(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=5632;e=c[b+8>>2]|0;d=c[b+16>>2]|0;if((e|0)>0){h=0;do{f=(c[d+(h<<2)>>2]|0)+188|0;g=c[f>>2]|0;if(g){e=c[b+68>>2]|0;e=Eb[c[(c[e>>2]|0)+36>>2]&127](e)|0;ic[c[(c[e>>2]|0)+40>>2]&127](e,g,c[b+24>>2]|0);e=c[b+68>>2]|0;ic[c[(c[e>>2]|0)+12>>2]&127](e,g,c[b+24>>2]|0);c[f>>2]=0;e=c[b+8>>2]|0;d=c[b+16>>2]|0}h=h+1|0}while((h|0)<(e|0))}if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function $j(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0,h=0,i=0.0,j=0.0;c[a+248>>2]=c[b>>2];c[a+248+4>>2]=c[b+4>>2];c[a+248+8>>2]=c[b+8>>2];c[a+248+12>>2]=c[b+12>>2];d=c[a+232>>2]|0;if((d|0)<=0)return;h=0;do{f=c[(c[a+240>>2]|0)+(h<<2)>>2]|0;switch(c[f+216>>2]|0){case 2:case 5:break;default:if(!(c[f+504>>2]&1)){e=+g[f+344>>2];if(e!=0.0){j=1.0/e*+g[b+4>>2];i=1.0/e*+g[b+8>>2];g[f+364>>2]=1.0/e*+g[b>>2];g[f+368>>2]=j;g[f+372>>2]=i;g[f+376>>2]=0.0}c[f+380>>2]=c[b>>2];c[f+380+4>>2]=c[b+4>>2];c[f+380+8>>2]=c[b+8>>2];c[f+380+12>>2]=c[b+12>>2];d=c[a+232>>2]|0}}h=h+1|0}while((h|0)<(d|0));return}function ak(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0;c[6435]=(c[6435]|0)+1;h=yc(379)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}c[h+4>>2]=3;c[h+8>>2]=-1;c[h+12>>2]=-1;g[h+16>>2]=3402823466385288598117041.0e14;a[h+20>>0]=1;a[h+21>>0]=0;c[h+24>>2]=-1;c[h+28>>2]=b;c[h+32>>2]=d;g[h+36>>2]=0.0;g[h+40>>2]=.30000001192092896;c[h+44>>2]=0;c[h>>2]=4544;d=h+300|0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];e=h+316|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];c[h+332>>2]=0;a[h+344>>0]=0;g[h+348>>2]=.30000001192092896;g[h+352>>2]=1.0;g[h+356>>2]=0.0;return h|0}function bk(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0;f=i;i=i+496|0;e=c[b+212>>2]|0;if((e|0)>-1){a=e;i=f;return a|0}h=(c[b+236>>2]&2|0)==0;e=h?0:b;do if(!h){if(!(+g[e+344>>2]!=0.0)?(c[e+204>>2]&2|0)==0:0)break;h=c[a+8>>2]|0;Tn(f+244|0,0,244)|0;Me(Ff(a+4|0,f+244|0)|0,b,d);c[b+212>>2]=h;i=f;return h|0}while(0);e=c[a+188>>2]|0;if((e|0)>=0){h=e;i=f;return h|0}c[a+188>>2]=c[a+8>>2];Tn(f|0,0,244)|0;Me(Ff(a+4|0,f)|0,0,d);h=c[a+188>>2]|0;i=f;return h|0}function ck(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0;e=c[a+204>>2]|0;if(b==0.0){c[a+204>>2]=e|1;h=0.0}else{c[a+204>>2]=e&-2;h=1.0/b}g[a+344>>2]=h;j=+g[a+384>>2]*b;i=+g[a+388>>2]*b;g[a+364>>2]=+g[a+380>>2]*b;g[a+368>>2]=j;g[a+372>>2]=i;g[a+376>>2]=0.0;b=+g[d>>2];f=b!=0.0?(g[k>>2]=1.0/b,c[k>>2]|0):0;b=+g[d+4>>2];e=b!=0.0?(g[k>>2]=1.0/b,c[k>>2]|0):0;b=+g[d+8>>2];d=b!=0.0?(g[k>>2]=1.0/b,c[k>>2]|0):0;c[a+396>>2]=f;c[a+400>>2]=e;c[a+404>>2]=d;g[a+408>>2]=0.0;i=h*+g[a+352>>2];j=h*+g[a+356>>2];g[a+560>>2]=+g[a+348>>2]*h;g[a+564>>2]=i;g[a+568>>2]=j;g[a+572>>2]=0.0;return}function dk(b,d,e,f,h){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var i=0;c[6435]=(c[6435]|0)+1;i=yc(1407)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}Le(i,b,d,e,f,h);c[i>>2]=4484;c[i+4>>2]=9;a[i+1309>>0]=0;g[i+1316>>2]=0.0;g[i+1340>>2]=0.0;g[i+1364>>2]=1.0;a[i+1310>>0]=0;g[i+1320>>2]=0.0;g[i+1344>>2]=0.0;g[i+1368>>2]=1.0;a[i+1311>>0]=0;g[i+1324>>2]=0.0;g[i+1348>>2]=0.0;g[i+1372>>2]=1.0;a[i+1312>>0]=0;g[i+1328>>2]=0.0;g[i+1352>>2]=0.0;g[i+1376>>2]=1.0;a[i+1313>>0]=0;g[i+1332>>2]=0.0;g[i+1356>>2]=0.0;g[i+1380>>2]=1.0;a[i+1314>>0]=0;g[i+1336>>2]=0.0;g[i+1360>>2]=0.0;g[i+1384>>2]=1.0;return i|0}function ek(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[b+280>>2]|0;if((e|0)==(c[b+284>>2]|0)?(h=e|0?e<<1:1,(e|0)<(h|0)):0){if(!h)g=0;else{c[6435]=(c[6435]|0)+1;e=yc((h<<2|3)+16|0)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}g=e;e=c[b+280>>2]|0}if((e|0)>0){f=0;do{c[g+(f<<2)>>2]=c[(c[b+288>>2]|0)+(f<<2)>>2];f=f+1|0}while((f|0)!=(e|0))}f=c[b+288>>2]|0;if(f){if(a[b+292>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[f+-4>>2]|0);e=c[b+280>>2]|0}c[b+288>>2]=0}a[b+292>>0]=1;c[b+288>>2]=g;c[b+284>>2]=h}c[(c[b+288>>2]|0)+(e<<2)>>2]=d;c[b+280>>2]=e+1;return}function fk(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0;e=i;i=i+96|0;c[e+32>>2]=1065353216;c[e+32+4>>2]=0;c[e+32+4+4>>2]=0;c[e+32+4+8>>2]=0;c[e+32+4+12>>2]=0;c[e+32+20>>2]=1065353216;c[e+32+24>>2]=0;c[e+32+24+4>>2]=0;c[e+32+24+8>>2]=0;c[e+32+24+12>>2]=0;c[e+32+40>>2]=1065353216;k=e+32+44|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;mc[c[(c[a>>2]|0)+8>>2]&127](a,e+32|0,e+16|0,e);h=(+g[e>>2]-+g[e+16>>2])*.5*2.0;f=(+g[e+4>>2]-+g[e+16+4>>2])*.5*2.0;j=(+g[e+8>>2]-+g[e+16+8>>2])*.5*2.0;g[d>>2]=b/12.0*(f*f+j*j);g[d+4>>2]=b/12.0*(h*h+j*j);g[d+8>>2]=b/12.0*(h*h+f*f);i=e;return}function gk(){var a=0,b=0,d=0,e=0;e=i;i=i+48|0;if(kb(26248,3)|0)ej(21924,e);a=hb(c[6563]|0)|0;if(a|0?(d=c[a>>2]|0,d|0):0){a=c[d+48>>2]|0;b=c[d+48+4>>2]|0;if(!((a&-256|0)==1126902528&(b|0)==1129074247)){c[e+32>>2]=22103;ej(22198,e+32|0)}if((a|0)==1126902529&(b|0)==1129074247)a=c[d+44>>2]|0;else a=d+80|0;c[e+44>>2]=a;d=c[d>>2]|0;a=c[d+4>>2]|0;if(Tl(2736,d,e+44|0)|0){d=c[e+44>>2]|0;d=Eb[c[(c[d>>2]|0)+8>>2]&127](d)|0;c[e+8>>2]=22103;c[e+8+4>>2]=a;c[e+8+8>>2]=d;ej(22112,e+8|0)}else{c[e+24>>2]=22103;c[e+24+4>>2]=a;ej(22157,e+24|0)}}ej(22236,e+40|0)}function hk(b){b=b|0;var d=0,e=0,f=0;while(1){f=yc(5260)|0;if(f|0)break;d=c[6564]|0;c[6564]=d+0;if(!d){e=5;break}jc[d&3]()}if((e|0)==5){f=Ya(4)|0;c[f>>2]=9640;pb(f|0,2800,251)}c[f>>2]=5132;c[f+4>>2]=2;a[f+24>>0]=1;c[f+20>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+28>>2]=5604;c[f+5256>>2]=b;c[f+60>>2]=79;c[f+64>>2]=Eb[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[f+68>>2]=Eb[c[(c[b>>2]|0)+8>>2]&127](b)|0;d=0;do{b=0;do{e=c[f+5256>>2]|0;c[f+72+(d*144|0)+(b<<2)>>2]=Ob[c[(c[e>>2]|0)+16>>2]&63](e,d,b)|0;b=b+1|0}while((b|0)<36);d=d+1|0}while((d|0)<36);return f|0}function ik(a,b,c){a=+a;b=+b;c=+c;var d=0.0,e=0.0,f=0;if(b>=c)return +a;if(a<b){d=+eh(b-a,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465}else d=d+6.2831854820251465;e=+N(+d);d=+eh(c-a,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465}else d=d+6.2831854820251465;f=e<+N(+d);a=f?a:a+6.2831854820251465;return +a}if(!(a>c))return +a;d=+eh(a-c,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465}else d=d+6.2831854820251465;e=+N(+d);d=+eh(a-b,6.2831854820251465);if(!(d<-3.1415927410125732)){if(d>3.1415927410125732)d=d+-6.2831854820251465}else d=d+6.2831854820251465;f=+N(+d)<e;a=f?a+-6.2831854820251465:a;return +a}function jk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;i=i+16|0;ic[c[(c[b>>2]|0)+68>>2]&127](e,b,d);c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];if(!(+Sb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0)){i=e;return}j=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];l=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:j;k=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:h;f=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:f;h=1.0/+O(+(f*f+(l*l+k*k)));j=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+j*h*l;g[a+4>>2]=j*h*k+ +g[a+4>>2];g[a+8>>2]=j*h*f+ +g[a+8>>2];i=e;return}function kk(a,b,d){a=a|0;b=+b;d=+d;var e=0.0,f=0.0,h=0.0;f=+g[a+692>>2];do if(f>0.0){h=+g[a+688>>2];e=+eh(b-h,6.2831854820251465);if(!(e<-3.1415927410125732)){if(e>3.1415927410125732)e=e+-6.2831854820251465}else e=e+6.2831854820251465;if(!(!(e<-f)&e<=f))if(e>0.0){b=+eh(f+h,6.2831854820251465);if(b<-3.1415927410125732){b=b+6.2831854820251465;break}if(!(b>3.1415927410125732))break;b=b+-6.2831854820251465;break}else{b=+eh(h-f,6.2831854820251465);if(b<-3.1415927410125732){b=b+6.2831854820251465;break}if(!(b>3.1415927410125732))break;b=b+-6.2831854820251465;break}}while(0);g[a+680>>2]=(b-+kj(a,(c[a+28>>2]|0)+4|0,(c[a+32>>2]|0)+4|0))/d;return}function lk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,h=0.0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0;k=c[b+96>>2]|0;if((k|0)<=0){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return}o=+g[b+12>>2];p=+g[d>>2]*o;l=+g[b+16>>2];m=+g[d+4>>2]*l;n=+g[b+20>>2];j=+g[d+8>>2]*n;d=c[b+104>>2]|0;f=0;h=-3402823466385288598117041.0e14;i=-1;while(1){e=p*+g[d+(f<<4)>>2]+m*+g[d+(f<<4)+4>>2]+j*+g[d+(f<<4)+8>>2];b=e>h;i=b?f:i;f=f+1|0;if((f|0)==(k|0))break;else h=b?e:h}m=+g[d+(i<<4)+4>>2]*l;p=+g[d+(i<<4)+8>>2]*n;g[a>>2]=+g[d+(i<<4)>>2]*o;g[a+4>>2]=m;g[a+8>>2]=p;g[a+12>>2]=0.0;return}function mk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(b|0){case 2:{if((c|0)<1){d=+g[a+232>>2];break a}if((c|0)<3){d=+g[a+264>>2];break a}if((c|0)==3){d=+g[a+248>>2];break a}if((c|0)<6)d=+g[a+280>>2];else d=3402823466385288598117041.0e14;break}case 3:{if((c|0)<1){d=+g[a+212>>2];break a}if((c|0)==3)d=+g[a+228>>2];else d=3402823466385288598117041.0e14;break}case 4:{if((c|0)<1){d=+g[a+244>>2];break a}if((c|0)<3){d=+g[a+276>>2];break a}if((c|0)==3){d=+g[a+260>>2];break a}if((c|0)<6)d=+g[a+292>>2];else d=3402823466385288598117041.0e14;break}default:d=3402823466385288598117041.0e14}while(0);return +d}function nk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if((b|0)==(c[d+8>>2]|0)){g=c[d+16>>2]|0;if(!g){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;break}if((g|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}if((c[d+24>>2]|0)==2)c[d+24>>2]=f}else{g=c[b+12>>2]|0;qo(b+16|0,d,e,f);if((g|0)>1){h=b+24|0;do{qo(h,d,e,f);if(a[d+54>>0]|0)break a;h=h+8|0}while(h>>>0<(b+16+(g<<3)|0)>>>0)}}while(0);return}function ok(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;c[6166]=(c[6166]|0)+1;e=(c[b+12>>2]|0)>(c[d+12>>2]|0);f=c[(e?d:b)+12>>2]|0;e=c[(e?b:d)+12>>2]|0;b=((e<<16|f)+~((e<<16|f)<<15)>>10^(e<<16|f)+~((e<<16|f)<<15))*9|0;b=((b>>6^b)+~((b>>6^b)<<11)>>16^(b>>6^b)+~((b>>6^b)<<11))&(c[a+12>>2]|0)+-1;if((b|0)>=(c[a+36>>2]|0)){g=0;return g|0}b=c[(c[a+44>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){g=0;return g|0}d=c[a+16>>2]|0;while(1){if((c[(c[d+(b<<4)>>2]|0)+12>>2]|0)==(f|0)?(c[(c[d+(b<<4)+4>>2]|0)+12>>2]|0)==(e|0):0)break;b=c[(c[a+64>>2]|0)+(b<<2)>>2]|0;if((b|0)==-1){b=0;g=8;break}}if((g|0)==8)return b|0;g=d+(b<<4)|0;return g|0}function pk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;c[6435]=(c[6435]|0)+1;f=yc(1407)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}qe(f,b,d,e);c[f>>2]=4484;c[f+4>>2]=9;a[f+1309>>0]=0;g[f+1316>>2]=0.0;g[f+1340>>2]=0.0;g[f+1364>>2]=1.0;a[f+1310>>0]=0;g[f+1320>>2]=0.0;g[f+1344>>2]=0.0;g[f+1368>>2]=1.0;a[f+1311>>0]=0;g[f+1324>>2]=0.0;g[f+1348>>2]=0.0;g[f+1372>>2]=1.0;a[f+1312>>0]=0;g[f+1328>>2]=0.0;g[f+1352>>2]=0.0;g[f+1376>>2]=1.0;a[f+1313>>0]=0;g[f+1332>>2]=0.0;g[f+1356>>2]=0.0;g[f+1380>>2]=1.0;a[f+1314>>0]=0;g[f+1336>>2]=0.0;g[f+1360>>2]=0.0;g[f+1384>>2]=1.0;return f|0}function qk(b){b=b|0;var d=0;c[b>>2]=3872;if(a[b+456>>0]|0?(d=c[b+452>>2]|0,Ab[c[c[d>>2]>>2]&255](d),d=c[b+452>>2]|0,d|0):0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}d=c[b+420>>2]|0;if(d|0){if(a[b+424>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+420>>2]=0}a[b+424>>0]=1;c[b+420>>2]=0;c[b+412>>2]=0;c[b+416>>2]=0;d=c[b+336>>2]|0;if(!d){a[b+340>>0]=1;c[b+336>>2]=0;c[b+328>>2]=0;d=b+332|0;c[d>>2]=0;Sg(b);return}if(a[b+340>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+336>>2]=0;a[b+340>>0]=1;c[b+336>>2]=0;c[b+328>>2]=0;d=b+332|0;c[d>>2]=0;Sg(b);return}function rk(a,b){a=a|0;b=+b;var d=0,e=0,f=0;e=i;i=i+16|0;li(12327);if((c[a+280>>2]|0)>0){d=0;do{f=c[(c[a+288>>2]|0)+(d<<2)>>2]|0;kc[c[(c[f>>2]|0)+8>>2]&7](f,a,b);d=d+1|0}while((d|0)<(c[a+280>>2]|0))}d=c[2357]|0;f=(c[d+16>>2]|0)+-1|0;c[d+16>>2]=f;if(f|0){i=e;return}do if(c[d+4>>2]|0){tb(e|0,0)|0;f=c[6434]|0;g[d+8>>2]=+g[d+8>>2]+ +(((c[e+4>>2]|0)-(c[f+4>>2]|0)+(((c[e>>2]|0)-(c[f>>2]|0)|0)*1e6|0)-(c[d+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[d+16>>2]|0)){d=c[2357]|0;break}else{i=e;return}}while(0);c[2357]=c[d+20>>2];i=e;return}function sk(a,b,d){a=a|0;b=b|0;d=d|0;do if(!((b|0)==8&(d|0)==8)){if((b|0)==8&(d|0)==1){b=a+76|0;break}if((b|0)==1&(d|0)==8){b=a+80|0;break}if(!(d|b)){b=a+72|0;break}if((b|0)<20&(d|0)==28){b=a+88|0;break}if((b|0)==28&(d|0)<20){b=a+84|0;break}if((b|0)<20){if((d|0)<20){b=a+32|0;break}if((d+-21|0)>>>0<9){b=a+36|0;break}}else{if((d|0)<20&(b+-21|0)>>>0<9){b=a+40|0;break}if((b|0)==31)if((d|0)==31){b=a+48|0;break}else{b=a+44|0;break}}if((d|0)==31){b=a+52|0;break}else{b=a+56|0;break}}else b=a+60|0;while(0);return c[b>>2]|0}function tk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0;f=+g[a+28>>2];h=+g[a+32>>2];e=+g[a+36>>2];switch(d|0){case 0:{c[b>>2]=1065353216;c[b+4>>2]=0;c[b+8>>2]=0;g[b+12>>2]=-f;return}case 1:{c[b>>2]=-1082130432;c[b+4>>2]=0;c[b+8>>2]=0;g[b+12>>2]=-f;return}case 2:{c[b>>2]=0;c[b+4>>2]=1065353216;c[b+8>>2]=0;g[b+12>>2]=-h;return}case 3:{c[b>>2]=0;c[b+4>>2]=-1082130432;c[b+8>>2]=0;g[b+12>>2]=-h;return}case 4:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=1065353216;g[b+12>>2]=-e;return}case 5:{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=-1082130432;g[b+12>>2]=-e;return}default:return}}function uk(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;h=i;i=i+48|0;c[h+32>>2]=e;c[h+32+4>>2]=f;n=+g[b>>2];m=+g[b+4>>2];j=+g[b+8>>2];l=+g[a+56>>2]*n+ +g[a+60>>2]*m+ +g[a+64>>2]*j;k=n*+g[a+72>>2]+m*+g[a+76>>2]+j*+g[a+80>>2];j=n*+g[a+88>>2]+m*+g[a+92>>2]+j*+g[a+96>>2];c[h>>2]=c[a+48>>2];c[h+4>>2]=h+32;g[h+8>>2]=l;g[h+12>>2]=k;g[h+16>>2]=j;g[h+20>>2]=0.0;g[h+24>>2]=d;f=c[a+44>>2]|0;d=+_b[c[(c[f>>2]|0)+12>>2]&15](f,h,1);i=h;return +d}function vk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,j=0.0,l=0.0,m=0,n=0;f=i;i=i+48|0;ic[c[(c[a>>2]|0)+124>>2]&127](a,f+32|0,e);n=c[f+32>>2]|0;m=c[f+32+4>>2]|0;e=c[f+32+8>>2]|0;c[b>>2]=n;c[b+4>>2]=m;c[b+8>>2]=e;g[b+12>>2]=0.0;b=c[(c[a>>2]|0)+64>>2]|0;l=-(c[k>>2]=n,+g[k>>2]);j=-(c[k>>2]=m,+g[k>>2]);h=-(c[k>>2]=e,+g[k>>2]);g[f>>2]=l;g[f+4>>2]=j;g[f+8>>2]=h;g[f+12>>2]=0.0;ic[b&127](f+16|0,a,f);c[d>>2]=c[f+16>>2];c[d+4>>2]=c[f+16+4>>2];c[d+8>>2]=c[f+16+8>>2];c[d+12>>2]=c[f+16+12>>2];i=f;return}function wk(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if(e>>>0<3)switch(b|0){case 2:{g[a+756+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|4<<e*3;return}case 4:{g[a+772+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|2<<e*3;return}case 3:{g[a+740+(e<<2)>>2]=d;c[a+1304>>2]=c[a+1304>>2]|1<<e*3;return}default:return}if((e+-3|0)>>>0>=3)return;switch(b|0){case 2:{g[a+868+(e+-3<<6)+32>>2]=d;c[a+1304>>2]=c[a+1304>>2]|4<<e*3;return}case 4:{g[a+868+(e+-3<<6)+36>>2]=d;c[a+1304>>2]=c[a+1304>>2]|2<<e*3;return}case 3:{g[a+868+(e+-3<<6)+28>>2]=d;c[a+1304>>2]=c[a+1304>>2]|1<<e*3;return}default:return}}function xk(b){b=b|0;var d=0;c[b>>2]=4356;d=c[b+80>>2]|0;if(d|0){if(a[b+84>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+80>>2]=0}a[b+84>>0]=1;c[b+80>>2]=0;c[b+72>>2]=0;c[b+76>>2]=0;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;d=c[b+40>>2]|0;if(!d){a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;b=b+36|0;c[b>>2]=0;return}if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+40>>2]=0;a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;b=b+36|0;c[b>>2]=0;return}function yk(b){b=b|0;var d=0;c[b>>2]=8724;d=c[b+64>>2]|0;if(d|0){if(a[b+68>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+64>>2]=0}a[b+68>>0]=1;c[b+64>>2]=0;c[b+56>>2]=0;c[b+60>>2]=0;d=c[b+44>>2]|0;if(d|0){if(a[b+48>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+44>>2]=0}a[b+48>>0]=1;c[b+44>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function zk(b){b=b|0;var d=0;c[b>>2]=5456;d=c[b+56>>2]|0;if(d|0){if(a[b+60>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+56>>2]=0}a[b+60>>0]=1;c[b+56>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;d=c[b+36>>2]|0;if(d|0){if(a[b+40>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+36>>2]=0}a[b+40>>0]=1;c[b+36>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;d=c[b+16>>2]|0;if(!d){d=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[d>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;d=b+12|0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[d>>2]=0;return}function Ak(b){b=b|0;var d=0;c[b>>2]=9324;d=c[b+60>>2]|0;if(d|0){if(a[b+64>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+60>>2]=0}a[b+64>>0]=1;c[b+60>>2]=0;c[b+52>>2]=0;c[b+56>>2]=0;d=c[b+40>>2]|0;if(d|0){if(a[b+44>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+40>>2]=0}a[b+44>>0]=1;c[b+40>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;d=c[b+16>>2]|0;if(!d){a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0;a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;b=b+12|0;c[b>>2]=0;return}function Bk(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0;j=i;i=i+64|0;c[j+48>>2]=f;c[j+48+4>>2]=h;f=c[a+212>>2]|0;if(!(+g[f+4>>2]>=e)){i=j;return +e}c[j>>2]=c[a+216>>2];c[j+4>>2]=j+48;c[j+8>>2]=c[b>>2];c[j+8+4>>2]=c[b+4>>2];c[j+8+8>>2]=c[b+8>>2];c[j+8+12>>2]=c[b+12>>2];c[j+24>>2]=c[d>>2];c[j+24+4>>2]=c[d+4>>2];c[j+24+8>>2]=c[d+8>>2];c[j+24+12>>2]=c[d+12>>2];g[j+40>>2]=e;e=+_b[c[(c[f>>2]|0)+12>>2]&15](f,j,0);i=j;return +e}function Ck(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=+e;f=f|0;h=h|0;var j=0;j=i;i=i+64|0;c[j+48>>2]=f;c[j+48+4>>2]=h;f=c[a+212>>2]|0;if(!(+g[f+4>>2]>=e)){i=j;return +e}c[j>>2]=c[a+216>>2];c[j+4>>2]=j+48;c[j+8>>2]=c[b>>2];c[j+8+4>>2]=c[b+4>>2];c[j+8+8>>2]=c[b+8>>2];c[j+8+12>>2]=c[b+12>>2];c[j+24>>2]=c[d>>2];c[j+24+4>>2]=c[d+4>>2];c[j+24+8>>2]=c[d+8>>2];c[j+24+12>>2]=c[d+12>>2];g[j+40>>2]=e;e=+_b[c[(c[f>>2]|0)+12>>2]&15](f,j,1);i=j;return +e}function Dk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0,l=0;h=+g[b+60>>2]*.5;l=c[b+68>>2]|0;e=+g[d>>2];f=+g[d+4>>2];j=+g[d+8>>2];j=+O(+(e*e+f*f+j*j));i=c[b+64>>2]|0;if(+g[d+(l<<2)>>2]>j*+g[b+52>>2]){g[a+(i<<2)>>2]=0.0;g[a+(l<<2)>>2]=h;g[a+(c[b+72>>2]<<2)>>2]=0.0;return}j=+g[d+(i<<2)>>2];k=c[b+72>>2]|0;e=+g[d+(k<<2)>>2];f=+O(+(j*j+e*e));if(f>1.1920928955078125e-07){f=+g[b+56>>2]/f;g[a+(i<<2)>>2]=j*f;g[a+(l<<2)>>2]=-h;g[a+(k<<2)>>2]=e*f;return}else{g[a+(i<<2)>>2]=0.0;g[a+(l<<2)>>2]=-h;g[a+(k<<2)>>2]=0.0;return}}function Ek(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[e+16>>2]|0;if(!f){if(!(Io(e)|0)){g=c[e+16>>2]|0;h=5}}else{g=f;h=5}a:do if((h|0)==5){f=c[e+20>>2]|0;if((g-f|0)>>>0<d>>>0){Ob[c[e+36>>2]&63](e,b,d)|0;break}b:do if((a[e+75>>0]|0)>-1){h=d;while(1){if(!h){g=d;break b}g=h+-1|0;if((a[b+g>>0]|0)==10)break;else h=g}if((Ob[c[e+36>>2]&63](e,b,h)|0)>>>0<h>>>0)break a;g=d-h|0;b=b+h|0;f=c[e+20>>2]|0}else g=d;while(0);bn(f|0,b|0,g|0)|0;c[e+20>>2]=(c[e+20>>2]|0)+g}while(0);return}function Fk(b){b=b|0;var d=0;d=c[b+52>>2]|0;if(d|0){if(a[b+56>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+52>>2]=0}a[b+56>>0]=1;c[b+52>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;d=c[b+12>>2]|0;if(!d){a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}if(a[b+16>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+12>>2]=0;a[b+16>>0]=1;c[b+12>>2]=0;c[b+4>>2]=0;b=b+8|0;c[b>>2]=0;return}function Gk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;i=i+16|0;ic[c[(c[b>>2]|0)+68>>2]&127](e,b,d);c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];c[a+12>>2]=c[e+12>>2];j=+g[d>>2];h=+g[d+4>>2];f=+g[d+8>>2];l=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:j;k=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:h;f=j*j+h*h+f*f<1.4210854715202004e-14?-1.0:f;h=1.0/+O(+(f*f+(l*l+k*k)));j=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+j*h*l;g[a+4>>2]=j*h*k+ +g[a+4>>2];g[a+8>>2]=j*h*f+ +g[a+8>>2];i=e;return}function Hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+188>>2]|0;if(d|0){g=c[a+68>>2]|0;g=Eb[c[(c[g>>2]|0)+36>>2]&127](g)|0;ic[c[(c[g>>2]|0)+40>>2]&127](g,d,c[a+24>>2]|0);g=c[a+68>>2]|0;ic[c[(c[g>>2]|0)+12>>2]&127](g,d,c[a+24>>2]|0);c[b+188>>2]=0}f=c[a+8>>2]|0;if((f|0)<=0)return;g=c[a+16>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=9;break}}if((h|0)==9)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+16>>2]|0)+(f+-1<<2)>>2]=b;c[a+8>>2]=f+-1;return}function Ik(b,d){b=b|0;d=d|0;var e=0,f=0,h=0;g[b+16>>2]=0.0;g[b+20>>2]=0.0;a[b+168>>0]=0;a[b+169>>0]=0;g[b+172>>2]=0.0;c[b+60>>2]=0;c[b+60+4>>2]=0;c[b+60+8>>2]=0;c[b+60+12>>2]=0;b=c[(c[b+8>>2]|0)+284>>2]|0;if((c[(Eb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+4>>2]|0)<=0)return;do{f=c[b>>2]|0;h=c[f+12>>2]|0;f=c[c[(Eb[c[f+28>>2]&127](b)|0)+12>>2]>>2]|0;e=c[(c[(Eb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+12>>2]|0)+4>>2]|0;Ib[h&31](b,f,e,c[d+24>>2]|0)|0}while((c[(Eb[c[(c[b>>2]|0)+28>>2]&127](b)|0)+4>>2]|0)>0);return}function Jk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[6138]=(c[6138]|0)+-1;Cb[c[(c[a>>2]|0)+20>>2]&127](a,b);e=c[b+768>>2]|0;d=(c[a+12>>2]|0)+-1|0;g=c[a+20>>2]|0;f=c[g+(e<<2)>>2]|0;c[g+(e<<2)>>2]=c[g+(d<<2)>>2];c[(c[a+20>>2]|0)+(d<<2)>>2]=f;c[(c[(c[a+20>>2]|0)+(e<<2)>>2]|0)+768>>2]=e;c[a+12>>2]=d;a=c[a+68>>2]|0;if(!b)return;g=c[a+16>>2]|0;if(g>>>0<=b>>>0?(g+(_(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;return}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function Kk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=c[b+8>>2]|0;if((k|0)<=0)return;i=c[b+16>>2]|0;j=0;b=0;do{h=c[i+(j<<2)>>2]|0;if(!(c[h+204>>2]&3)){g=c[a+16>>2]|0;e=g+(b<<3)|0;d=c[e>>2]|0;if((d|0)==(b|0))d=b;else{f=d;do{d=g+(f<<3)|0;c[e>>2]=c[d>>2];d=c[d>>2]|0;e=g+(d<<3)|0;f=c[e>>2]|0}while((d|0)!=(f|0))}c[h+208>>2]=d;c[g+(b<<3)+4>>2]=j;c[h+212>>2]=-1;b=b+1|0}else{c[h+208>>2]=-1;c[h+212>>2]=-2}j=j+1|0}while((j|0)!=(k|0));return}function Lk(a,b,d,f){a=a|0;b=b|0;d=d|0;f=f|0;var g=0,h=0,i=0;while(1){g=c[a+12>>2]|0;if(!(((e[f>>1]|0)>=(e[a>>1]|0)?(e[d>>1]|0)<=(e[a+6>>1]|0):0)&(e[d+4>>1]|0)<=(e[a+10>>1]|0)&(e[f+4>>1]|0)>=(e[a+4>>1]|0)&(e[d+2>>1]|0)<=(e[a+8>>1]|0)&(e[f+2>>1]|0)>=(e[a+2>>1]|0))){h=6;break}if((g|0)>-1)break;i=a+16|0;Lk(i,b,d,f);g=c[a+28>>2]|0;a=(g|0)>-1?a+32|0:i+(0-g<<4)|0}if((h|0)==6)return;ic[c[(c[b>>2]|0)+8>>2]&127](b,g>>21,g&2097151);return}function Mk(a,d){a=a|0;d=d|0;var e=0,f=0;while(1){e=yc(84)|0;if(e|0){f=6;break}e=c[6564]|0;c[6564]=e+0;if(!e){f=5;break}jc[e&3]()}if((f|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((f|0)==6){g[e+4>>2]=1.0;c[e+8>>2]=0;b[e+12>>1]=1;b[e+14>>1]=-1;c[e+16>>2]=0;c[e>>2]=2948;c[e+20>>2]=c[a>>2];c[e+20+4>>2]=c[a+4>>2];c[e+20+8>>2]=c[a+8>>2];c[e+20+12>>2]=c[a+12>>2];c[e+36>>2]=c[d>>2];c[e+36+4>>2]=c[d+4>>2];c[e+36+8>>2]=c[d+8>>2];c[e+36+12>>2]=c[d+12>>2];return e|0}return 0}function Nk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;if((e|0)<=0)return;f=0;do{n=+g[b+(f<<4)>>2];m=+g[b+(f<<4)+4>>2];j=+g[b+(f<<4)+8>>2];k=n*+g[a+56>>2]+m*+g[a+60>>2]+j*+g[a+64>>2];l=n*+g[a+72>>2]+m*+g[a+76>>2]+j*+g[a+80>>2];j=n*+g[a+88>>2]+m*+g[a+92>>2]+j*+g[a+96>>2];h=d+(f<<4)|0;i=a+56+((k<l?(l<j?2:1):k<j?2:0)<<4)|0;c[h>>2]=c[i>>2];c[h+4>>2]=c[i+4>>2];c[h+8>>2]=c[i+8>>2];c[h+12>>2]=c[i+12>>2];f=f+1|0}while((f|0)!=(e|0));return}function Ok(a,b){a=a|0;b=+b;var d=0,e=0;d=i;i=i+16|0;hf(a,b);li(11758);a=c[a+452>>2]|0;zb[c[(c[a>>2]|0)+24>>2]&31](a,b);a=c[2357]|0;e=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=e;if(e|0){i=d;return}do if(c[a+4>>2]|0){tb(d|0,0)|0;e=c[6434]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[d+4>>2]|0)-(c[e+4>>2]|0)+(((c[d>>2]|0)-(c[e>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2357]|0;break}else{i=d;return}}while(0);c[2357]=c[a+20>>2];i=d;return}function Pk(a,b,d){a=a|0;b=b|0;d=d|0;switch(b|0){case 0:{c[d>>2]=1065353216;c[d+4>>2]=0;c[d+8>>2]=0;g[d+12>>2]=0.0;return}case 1:{c[d>>2]=-1082130432;c[d+4>>2]=0;c[d+8>>2]=0;g[d+12>>2]=0.0;return}case 2:{c[d>>2]=0;c[d+4>>2]=1065353216;c[d+8>>2]=0;g[d+12>>2]=0.0;return}case 3:{c[d>>2]=0;c[d+4>>2]=-1082130432;c[d+8>>2]=0;g[d+12>>2]=0.0;return}case 4:{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=1065353216;g[d+12>>2]=0.0;return}case 5:{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=-1082130432;g[d+12>>2]=0.0;return}default:return}}function Qk(b,d){b=b|0;d=d|0;a[b+148>>0]=0;if((((ke(b,d)|0?(a[b+148>>0]=1,ke(b,d)|0):0)?(a[b+148>>0]=1,ke(b,d)|0):0)?(a[b+148>>0]=1,ke(b,d)|0):0)?(a[b+148>>0]=1,ke(b,d)|0):0)a[b+148>>0]=1;d=(c[b+8>>2]|0)+52|0;c[b+92>>2]=c[d>>2];c[b+92+4>>2]=c[d+4>>2];c[b+92+8>>2]=c[d+8>>2];c[b+92+12>>2]=c[d+12>>2];Ep(b+112|0,d|0,16)|0;return}function Rk(a,d){a=a|0;d=d|0;var e=0,f=0;while(1){e=yc(80)|0;if(e|0){f=6;break}e=c[6564]|0;c[6564]=e+0;if(!e){f=5;break}jc[e&3]()}if((f|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((f|0)==6){g[e+4>>2]=1.0;b[e+8>>1]=1;b[e+10>>1]=-1;c[e>>2]=2872;c[e+12>>2]=c[a>>2];c[e+12+4>>2]=c[a+4>>2];c[e+12+8>>2]=c[a+8>>2];c[e+12+12>>2]=c[a+12>>2];c[e+28>>2]=c[d>>2];c[e+28+4>>2]=c[d+4>>2];c[e+28+8>>2]=c[d+8>>2];c[e+28+12>>2]=c[d+12>>2];c[e+76>>2]=0;return e|0}return 0}function Sk(b){b=b|0;var d=0,e=0;while(1){d=yc(64)|0;if(d|0){e=6;break}d=c[6564]|0;c[6564]=d+0;if(!d){e=5;break}jc[d&3]()}if((e|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((e|0)==6){c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];c[d+24>>2]=c[b+24>>2];c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+28>>2]=c[b+28>>2];c[d+32>>2]=c[b+32>>2];c[d+36>>2]=c[b+36>>2];c[d+40>>2]=c[b+40>>2];c[d+56>>2]=c[b+56>>2];c[d+48>>2]=c[b+48>>2];a[d+44>>0]=a[b+44>>0]&1;return d|0}return 0}function Tk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;h=+g[a+56>>2];k=+g[a+72>>2]-h;j=+g[a+60>>2];i=+g[a+76>>2]-j;l=+g[a+64>>2];m=+g[a+80>>2]-l;h=+g[a+88>>2]-h;j=+g[a+92>>2]-j;l=+g[a+96>>2]-l;g[d+12>>2]=0.0;f=1.0/+O(+((k*j-i*h)*(k*j-i*h)+((i*l-m*j)*(i*l-m*j)+(m*h-k*l)*(m*h-k*l))));g[d>>2]=(i*l-m*j)*f;g[d+4>>2]=(m*h-k*l)*f;g[d+8>>2]=(k*j-i*h)*f;c[e>>2]=c[a+56>>2];c[e+4>>2]=c[a+56+4>>2];c[e+8>>2]=c[a+56+8>>2];c[e+12>>2]=c[a+56+12>>2];return}function Uk(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+64|0;dh(d,b,a+68|0);c[a+4>>2]=c[d>>2];c[a+4+4>>2]=c[d+4>>2];c[a+4+8>>2]=c[d+8>>2];c[a+4+12>>2]=c[d+12>>2];c[a+20>>2]=c[d+16>>2];c[a+20+4>>2]=c[d+16+4>>2];c[a+20+8>>2]=c[d+16+8>>2];c[a+20+12>>2]=c[d+16+12>>2];c[a+36>>2]=c[d+32>>2];c[a+36+4>>2]=c[d+32+4>>2];c[a+36+8>>2]=c[d+32+8>>2];c[a+36+12>>2]=c[d+32+12>>2];c[a+52>>2]=c[d+48>>2];c[a+52+4>>2]=c[d+48+4>>2];c[a+52+8>>2]=c[d+48+8>>2];c[a+52+12>>2]=c[d+48+12>>2];i=d;return}function Vk(b){b=b|0;var d=0;if(!b)return;d=c[b+156>>2]|0;if(d|0){if(!((a[b+160>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+156>>2]=0}a[b+160>>0]=1;c[b+156>>2]=0;c[b+148>>2]=0;c[b+152>>2]=0;d=c[b+136>>2]|0;if(d|0){if(!((a[b+140>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+136>>2]=0}a[b+140>>0]=1;c[b+136>>2]=0;c[b+128>>2]=0;c[b+132>>2]=0;d=c[b+116>>2]|0;if(d|0){if(!((a[b+120>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+116>>2]=0}a[b+120>>0]=1;hd(b);return}function Wk(){var b=0,d=0;while(1){b=yc(100)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((d|0)==6){g[b>>2]=1.2000000476837158;g[b+4>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=1.0e3;c[b+16>>2]=0;c[b+16+4>>2]=0;c[b+16+8>>2]=0;c[b+16+12>>2]=0;c[b+16+16>>2]=0;c[b+16+20>>2]=0;c[b+16+24>>2]=0;c[b+44>>2]=-1054867456;c[b+48>>2]=0;g[b+52>>2]=0.0;a[b+72>>0]=1;c[b+68>>2]=0;c[b+60>>2]=0;c[b+64>>2]=0;return b|0}return 0}function Xk(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=6164;d=c[b+12>>2]|0;if((d|0)>0){f=0;do{e=c[(c[b+20>>2]|0)+(f<<2)>>2]|0;if(e|0){Ab[c[c[e>>2]>>2]&255](e);e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+60>>2]&127](e,c[(c[b+20>>2]|0)+(f<<2)>>2]|0)}f=f+1|0}while((f|0)!=(d|0))}d=c[b+20>>2]|0;if(!d){a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;b=b+16|0;c[b>>2]=0;return}if(a[b+24>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+20>>2]=0;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;b=b+16|0;c[b>>2]=0;return}function Yk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;h=+g[a+56>>2];j=+g[a+72>>2]-h;i=+g[a+60>>2];k=+g[a+76>>2]-i;d=+g[a+64>>2];f=+g[a+80>>2]-d;h=+g[a+88>>2]-h;i=+g[a+92>>2]-i;d=+g[a+96>>2]-d;g[c+12>>2]=0.0;e=1.0/+O(+((j*i-k*h)*(j*i-k*h)+((k*d-f*i)*(k*d-f*i)+(f*h-j*d)*(f*h-j*d))));g[c>>2]=(k*d-f*i)*e;g[c+4>>2]=(f*h-j*d)*e;g[c+8>>2]=(j*i-k*h)*e;if(!b)return;g[c>>2]=-((k*d-f*i)*e);g[c+4>>2]=-((f*h-j*d)*e);g[c+8>>2]=-((j*i-k*h)*e);return}function Zk(b,d){b=b|0;d=d|0;var e=0;c[6435]=(c[6435]|0)+1;e=yc(115)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}c[e+8>>2]=0;c[e+12>>2]=1065353216;c[e+16>>2]=1065353216;c[e+20>>2]=1065353216;g[e+24>>2]=0.0;g[e+44>>2]=.03999999910593033;c[e+52>>2]=0;c[e+56>>2]=1065353216;c[e+60>>2]=1065353216;c[e+64>>2]=1065353216;g[e+68>>2]=0.0;c[e+72>>2]=-1082130432;c[e+76>>2]=-1082130432;c[e+80>>2]=-1082130432;g[e+84>>2]=0.0;a[e+88>>0]=0;c[e>>2]=7692;c[e+92>>2]=b;c[e+4>>2]=3;if(!d)return e|0;vj(e);return e|0}function _k(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=c[a+720>>2]|0;h=c[a+752>>2]|0;if((h|0)<=0){e=0;return e|0}a=c[a+760>>2]|0;f=0;while(1){i=c[a+(f*44|0)+8>>2]|0;if(((i|0)==(g+(e*104|0)|0)|((i|0)==(g+(b*104|0)|0)|(i|0)==(g+(d*104|0)|0))?(i=c[a+(f*44|0)+12>>2]|0,(i|0)==(g+(e*104|0)|0)|((i|0)==(g+(b*104|0)|0)|(i|0)==(g+(d*104|0)|0))):0)?(i=c[a+(f*44|0)+16>>2]|0,(i|0)==(g+(e*104|0)|0)|((i|0)==(g+(b*104|0)|0)|(i|0)==(g+(d*104|0)|0))):0){a=1;f=7;break}f=f+1|0;if((f|0)>=(h|0)){a=0;f=7;break}}if((f|0)==7)return a|0;return 0}function $k(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=+g[a+348>>2];f=+g[a+352>>2];h=+g[b+4>>2]*f;i=+g[a+356>>2];j=+g[b+8>>2]*i;g[a+412>>2]=+g[a+412>>2]+ +g[b>>2]*d;g[a+416>>2]=+g[a+416>>2]+h;g[a+420>>2]=+g[a+420>>2]+j;d=+g[b>>2]*d;f=+g[b+4>>2]*f;i=+g[b+8>>2]*i;j=+g[c+4>>2];h=+g[c+8>>2];k=+g[c>>2];e=(h*d-k*i)*+g[a+548>>2];d=(k*f-j*d)*+g[a+552>>2];g[a+428>>2]=+g[a+428>>2]+(j*i-h*f)*+g[a+544>>2];g[a+432>>2]=+g[a+432>>2]+e;g[a+436>>2]=+g[a+436>>2]+d;return}function al(a,b,c,d,e,f,h,i,j,k){a=+a;b=+b;c=+c;d=+d;e=+e;f=+f;h=+h;i=+i;j=+j;k=k|0;if(!(((h-d)*b-(i-e)*a)*f+(((i-e)*c-(j-f)*b)*d+((j-f)*a-(h-d)*c)*e)<0.0)){k=0;return k|0}if((h-d)*d+(i-e)*e+(j-f)*f>0.0){g[k>>2]=+O(+(d*d+e*e+f*f));k=1;return k|0}if((h-d)*h+(i-e)*i+(j-f)*j<0.0){g[k>>2]=+O(+(h*h+i*i+j*j));k=1;return k|0}else{c=((h*h+i*i+j*j)*(d*d+e*e+f*f)-(h*d+i*e+j*f)*(h*d+i*e+j*f))/((h-d)*(h-d)+(i-e)*(i-e)+(j-f)*(j-f));g[k>>2]=+O(+(c>0.0?c:0.0));k=1;return k|0}return 0}function bl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0;while(1){h=yc(44)|0;if(h|0){i=6;break}h=c[6564]|0;c[6564]=h+0;if(!h){i=5;break}jc[h&3]()}if((i|0)==5){e=Ya(4)|0;c[e>>2]=9640;pb(e|0,2800,251)}else if((i|0)==6){c[h>>2]=a;c[h+4>>2]=b;c[h+8>>2]=c[d>>2];c[h+8+4>>2]=c[d+4>>2];c[h+8+8>>2]=c[d+8>>2];c[h+8+12>>2]=c[d+12>>2];c[h+24>>2]=c[e>>2];c[h+24+4>>2]=c[e+4>>2];c[h+24+8>>2]=c[e+8>>2];c[h+24+12>>2]=c[e+12>>2];g[h+40>>2]=f;return h|0}return 0}function cl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0,j=0;i=c[a+96>>2]|0;j=c[a+104>>2]|0;f=+g[j+(((b|0)%(i|0)|0)<<4)+4>>2]*+g[a+16>>2];h=+g[j+(((b|0)%(i|0)|0)<<4)+8>>2]*+g[a+20>>2];g[d>>2]=+g[j+(((b|0)%(i|0)|0)<<4)>>2]*+g[a+12>>2];g[d+4>>2]=f;g[d+8>>2]=h;g[d+12>>2]=0.0;d=c[a+104>>2]|0;h=+g[d+(((b+1|0)%(i|0)|0)<<4)+4>>2]*+g[a+16>>2];f=+g[d+(((b+1|0)%(i|0)|0)<<4)+8>>2]*+g[a+20>>2];g[e>>2]=+g[d+(((b+1|0)%(i|0)|0)<<4)>>2]*+g[a+12>>2];g[e+4>>2]=h;g[e+8>>2]=f;g[e+12>>2]=0.0;return}function dl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0,j=0;e=i;i=i+32|0;d=c[a+184>>2]|0;if(+g[d+4>>2]==0.0){a=0;i=e;return a|0}b=c[b>>2]|0;if(!(Zb[c[(c[d>>2]|0)+8>>2]&31](d,c[b+188>>2]|0)|0)){a=1;i=e;return a|0}h=c[a+192>>2]|0;j=c[b+192>>2]|0;d=c[a+184>>2]|0;f=+g[a+188>>2];c[e>>2]=0;c[e+4>>2]=j;c[e+8>>2]=b;c[e+12>>2]=b+4;c[e+16>>2]=-1;c[e+20>>2]=-1;Ic(h,a+36|0,a+100|0,e,d,f);a=1;i=e;return a|0}function el(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];a=c[a+8>>2]|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+4>>2]=1065353216;c[a+8>>2]=0;c[a+8+4>>2]=0;c[a+8+8>>2]=0;c[a+8+12>>2]=0;c[a+24>>2]=1065353216;c[a+28>>2]=0;c[a+28+4>>2]=0;c[a+28+8>>2]=0;c[a+28+12>>2]=0;c[a+44>>2]=1065353216;c[a+48>>2]=0;c[a+52>>2]=c[d>>2];c[a+52+4>>2]=c[d+4>>2];c[a+52+8>>2]=c[d+8>>2];c[a+52+12>>2]=c[d+12>>2];i=d;return}function fl(b){b=b|0;var d=0,e=0;if((a[22480]|0)==0?Wa(22480)|0:0){g[5730]=.6000000238418579;g[5731]=1.0;g[5732]=.30000001192092896;g[5733]=.01666666753590107;g[5734]=0.0;g[5736]=20.0;c[5735]=10;g[5738]=.20000000298023224;g[5739]=.800000011920929;g[5740]=0.0;g[5737]=1.0;c[5741]=1;g[5742]=-.03999999910593033;g[5743]=.10000000149011612;g[5744]=0.0;g[5745]=.8500000238418579;c[5746]=260;c[5747]=2;c[5748]=128;g[5749]=100.0;g[5750]=1000000015047466219876688.0e6;_a(22480)}e=22920;b=b+92|0;d=e+84|0;do{c[e>>2]=c[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));return 22920}function gl(b){b=b|0;var d=0,e=0;if((a[22440]|0)==0?Wa(22440)|0:0){g[5673]=.6000000238418579;g[5674]=1.0;g[5675]=.30000001192092896;g[5676]=.01666666753590107;g[5677]=0.0;g[5679]=20.0;c[5678]=10;g[5681]=.20000000298023224;g[5682]=.800000011920929;g[5683]=0.0;g[5680]=1.0;c[5684]=1;g[5685]=-.03999999910593033;g[5686]=.10000000149011612;g[5687]=0.0;g[5688]=.8500000238418579;c[5689]=260;c[5690]=2;c[5691]=128;g[5692]=100.0;g[5693]=1000000015047466219876688.0e6;_a(22440)}e=22692;b=b+92|0;d=e+84|0;do{c[e>>2]=c[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));return 22692}function hl(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;li(14499);d=c[a+68>>2]|0;Cb[c[(c[d>>2]|0)+32>>2]&127](d,c[a+24>>2]|0);a=c[2357]|0;d=(c[a+16>>2]|0)+-1|0;c[a+16>>2]=d;if(d|0){i=b;return}do if(c[a+4>>2]|0){tb(b|0,0)|0;d=c[6434]|0;g[a+8>>2]=+g[a+8>>2]+ +(((c[b+4>>2]|0)-(c[d+4>>2]|0)+(((c[b>>2]|0)-(c[d>>2]|0)|0)*1e6|0)-(c[a+12>>2]|0)|0)>>>0)/1.0e3;if(!(c[a+16>>2]|0)){a=c[2357]|0;break}else{i=b;return}}while(0);c[2357]=c[a+20>>2];i=b;return}function il(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;do switch(b|0){case 0:{f=0;b=1;break}case 1:{f=0;b=2;break}case 2:{f=1;b=3;break}case 3:{f=2;break}case 4:{f=0;break}case 5:{f=1;break}case 6:{f=2;break}case 7:{f=3;break}case 8:{f=4;b=5;break}case 9:{f=4;b=6;break}case 10:{f=5;b=7;break}case 11:{f=6;b=7;break}default:{f=0;b=0}}while(0);ic[c[(c[a>>2]|0)+108>>2]&127](a,f,d);ic[c[(c[a>>2]|0)+108>>2]&127](a,b,e);return}function jl(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;k=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);d=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);m=(k+ +g[a+28>>2])/+g[a+12>>2];j=(h+ +g[a+32>>2])/+g[a+16>>2];f=(d+ +g[a+36>>2])/+g[a+20>>2];l=+N(+(+g[b>>2]));i=+N(+(+g[b+4>>2]));e=+N(+(+g[b+8>>2]));g[a+12>>2]=l;g[a+16>>2]=i;g[a+20>>2]=e;g[a+24>>2]=0.0;g[a+28>>2]=m*l-k;g[a+32>>2]=j*i-h;g[a+36>>2]=f*e-d;g[a+40>>2]=0.0;return}function kl(b){b=b|0;var d=0,e=0;if((a[22424]|0)==0?Wa(22424)|0:0){g[5648]=.6000000238418579;g[5649]=1.0;g[5650]=.30000001192092896;g[5651]=.01666666753590107;g[5652]=0.0;g[5654]=20.0;c[5653]=10;g[5656]=.20000000298023224;g[5657]=.800000011920929;g[5658]=0.0;g[5655]=1.0;c[5659]=1;g[5660]=-.03999999910593033;g[5661]=.10000000149011612;g[5662]=0.0;g[5663]=.8500000238418579;c[5664]=260;c[5665]=2;c[5666]=128;g[5667]=100.0;g[5668]=1000000015047466219876688.0e6;_a(22424)}e=22592;b=b+92|0;d=e+84|0;do{c[e>>2]=c[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));return 22592}function ll(b,d){b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0,j=0;if(a[b+527>>0]|0){c[d>>2]=0;c[d+4>>2]=0;return}c[d>>2]=3;c[d+4>>2]=3;j=c[b+28>>2]|0;i=c[b+32>>2]|0;Fc(b,j+4|0,i+4|0,j+264|0,i+264|0);if((a[b+526>>0]|0?(e=c[d>>2]|0,c[d>>2]=e+1,f=c[d+4>>2]|0,c[d+4>>2]=f+-1,h=+g[b+456>>2],+g[b+444>>2]<h):0)?+g[b+448>>2]<h:0){c[d>>2]=e+2;c[d+4>>2]=f+-2}if(!(a[b+525>>0]|0))return;c[d>>2]=(c[d>>2]|0)+1;c[d+4>>2]=(c[d+4>>2]|0)+-1;return}function ml(b){b=b|0;var d=0;c[6435]=(c[6435]|0)+1;d=yc(115)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+52>>2]=0;c[d+56>>2]=1065353216;c[d+60>>2]=1065353216;c[d+64>>2]=1065353216;g[d+68>>2]=0.0;c[d+72>>2]=-1082130432;c[d+76>>2]=-1082130432;c[d+80>>2]=-1082130432;g[d+84>>2]=0.0;a[d+88>>0]=0;c[d>>2]=7692;c[d+92>>2]=b;c[d+4>>2]=3;vj(d);return d|0}function nl(){if(a[22456]|0)return;if(!(Wa(22456)|0))return;if((a[22464]|0)==0?Wa(22464)|0:0){c[5698]=1065353216;c[5699]=0;c[5700]=0;c[5701]=0;c[5702]=0;c[5703]=1065353216;c[5704]=0;c[5705]=0;c[5706]=0;c[5707]=0;c[5708]=1065353216;g[5709]=0.0;_a(22464)}c[5710]=c[5698];c[5711]=c[5699];c[5712]=c[5700];c[5713]=c[5701];c[5714]=c[5702];c[5715]=c[5703];c[5716]=c[5704];c[5717]=c[5705];c[5718]=c[5706];c[5719]=c[5707];c[5720]=c[5708];c[5721]=c[5709];c[5722]=0;c[5723]=0;c[5724]=0;c[5725]=0;_a(22456);return}function ol(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0,h=0,i=0;b=c[b+36>>2]|0;i=c[b+8>>2]|0;h=c[b+12>>2]|0;f=c[b+16>>2]|0;e=+g[a+52>>2];d=+Mh(a+4|0,+g[a+36>>2],+g[a+40>>2],+g[a+44>>2],+g[i+8>>2],+g[i+12>>2],+g[i+16>>2],+g[h+8>>2],+g[h+12>>2],+g[h+16>>2],+g[f+8>>2],+g[f+12>>2],+g[f+16>>2],e);if(!(d>0.0&d<e)){i=a+60|0;h=c[i>>2]|0;h=h+1|0;c[i>>2]=h;return}g[a+52>>2]=d;c[a+56>>2]=b;i=a+60|0;h=c[i>>2]|0;h=h+1|0;c[i>>2]=h;return}function pl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do if(c>>>0>=3)if((c+-3|0)>>>0<3)switch(b|0){case 2:{d=+g[a+868+(c+-3<<6)+32>>2];break a}case 4:{d=+g[a+868+(c+-3<<6)+36>>2];break a}case 3:{d=+g[a+868+(c+-3<<6)+28>>2];break a}default:{d=0.0;break a}}else d=0.0;else switch(b|0){case 2:{d=+g[a+756+(c<<2)>>2];break a}case 4:{d=+g[a+772+(c<<2)>>2];break a}case 3:{d=+g[a+740+(c<<2)>>2];break a}default:{d=0.0;break a}}while(0);return +d}function ql(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2];c[a+20>>2]=c[b+16>>2];c[a+20+4>>2]=c[b+16+4>>2];c[a+20+8>>2]=c[b+16+8>>2];c[a+20+12>>2]=c[b+16+12>>2];c[a+36>>2]=c[b+32>>2];c[a+36+4>>2]=c[b+32+4>>2];c[a+36+8>>2]=c[b+32+8>>2];c[a+36+12>>2]=c[b+32+12>>2];c[a+52>>2]=c[b+48>>2];c[a+52+4>>2]=c[b+48+4>>2];c[a+52+8>>2]=c[b+48+8>>2];c[a+52+12>>2]=c[b+48+12>>2];return}function rl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;ic[c[(c[b>>2]|0)+68>>2]&127](a,b,d);if(!(+Sb[c[(c[b>>2]|0)+48>>2]&15](b)!=0.0))return;h=+g[d>>2];f=+g[d+4>>2];e=+g[d+8>>2];j=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:h;i=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:f;e=h*h+f*f+e*e<1.4210854715202004e-14?-1.0:e;f=1.0/+O(+(e*e+(j*j+i*i)));h=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);g[a>>2]=+g[a>>2]+h*f*j;g[a+4>>2]=h*f*i+ +g[a+4>>2];g[a+8>>2]=h*f*e+ +g[a+8>>2];return}function sl(b,d,e){b=b|0;d=d|0;e=+e;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;a[b+171>>0]=0;c[b+60>>2]=c[d>>2];c[b+60+4>>2]=c[d+4>>2];c[b+60+8>>2]=c[d+8>>2];c[b+60+12>>2]=c[d+12>>2];f=+g[b+60>>2];h=+g[b+64>>2];j=+g[b+68>>2];i=1.0/+O(+(f*f+h*h+j*j));if(+O(+(j*i*j*i+(f*i*f*i+h*i*h*i)))<1.1920928955078125e-07){k=0.0;h=0.0;f=0.0;d=0}else{k=f*i;h=h*i;f=j*i;d=c[b+72>>2]|0}g[b+76>>2]=k;g[b+80>>2]=h;g[b+84>>2]=f;c[b+88>>2]=d;g[b+172>>2]=+g[b+172>>2]+e;return}function tl(){var b=0,d=0;while(1){b=yc(64)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((d|0)==6){g[b+60>>2]=0.0;g[b+8>>2]=0.0;g[b+12>>2]=.10000000149011612;g[b+16>>2]=300.0;g[b>>2]=1.0;g[b+4>>2]=-1.0;g[b+28>>2]=0.0;g[b+32>>2]=.20000000298023224;g[b+36>>2]=0.0;g[b+40>>2]=0.0;g[b+20>>2]=1.0;g[b+24>>2]=.5;c[b+56>>2]=0;g[b+48>>2]=0.0;a[b+44>>0]=0;return b|0}return 0}function ul(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;f=+g[b>>2];d=+g[b+4>>2];j=+g[b+8>>2];h=+g[b+12>>2];e=f*(2.0/(f*f+d*d+j*j+h*h));c=d*(2.0/(f*f+d*d+j*j+h*h));i=j*(2.0/(f*f+d*d+j*j+h*h));g[a>>2]=1.0-(d*c+j*i);g[a+4>>2]=f*c-h*i;g[a+8>>2]=f*i+h*c;g[a+12>>2]=0.0;g[a+16>>2]=f*c+h*i;g[a+20>>2]=1.0-(f*e+j*i);g[a+24>>2]=d*i-h*e;g[a+28>>2]=0.0;g[a+32>>2]=f*i-h*c;g[a+36>>2]=d*i+h*e;g[a+40>>2]=1.0-(f*e+d*c);g[a+44>>2]=0.0;return}function vl(a,b){a=a|0;b=+b;var d=0,e=0,f=0.0,h=0.0,i=0.0,j=0.0;c[6435]=(c[6435]|0)+1;d=yc(103)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}e=d+4|0;c[e>>2]=35;c[d+8>>2]=0;g[d+12>>2]=0.0;c[d>>2]=7048;j=+g[a>>2];i=+g[a+4>>2];h=+g[a+8>>2];a=c[a+12>>2]|0;f=1.0/+O(+(j*j+i*i+h*h));g[d+48>>2]=j*f;g[d+52>>2]=i*f;g[d+56>>2]=h*f;c[d+60>>2]=a;g[d+64>>2]=b;a=d+68|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[e>>2]=28;return d|0}function wl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+52>>2];return 17871}function xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+52>>2];return 17417}function yl(b,d){b=b|0;d=d|0;do if(!b)b=0;else{if(d>>>0<128){a[b>>0]=d;b=1;break}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;break}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;break}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;break}if(true)b=25748;else b=c[(ib()|0)+64>>2]|0;c[b>>2]=84;b=-1}while(0);return b|0}function zl(a,b){a=a|0;b=b|0;c[a+92>>2]=c[b>>2];c[a+92+4>>2]=c[b+4>>2];c[a+92+8>>2]=c[b+8>>2];c[a+92+12>>2]=c[b+12>>2];c[a+108>>2]=c[b+16>>2];c[a+108+4>>2]=c[b+16+4>>2];c[a+108+8>>2]=c[b+16+8>>2];c[a+108+12>>2]=c[b+16+12>>2];c[a+124>>2]=c[b+32>>2];c[a+124+4>>2]=c[b+32+4>>2];c[a+124+8>>2]=c[b+32+8>>2];c[a+124+12>>2]=c[b+32+12>>2];c[a+140>>2]=c[b+48>>2];c[a+140+4>>2]=c[b+48+4>>2];c[a+140+8>>2]=c[b+48+8>>2];c[a+140+12>>2]=c[b+48+12>>2];return}function Al(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];c[b+52>>2]=c[a+68>>2];return 16426}function Bl(a,b){a=a|0;b=b|0;c[a+4>>2]=c[b>>2];c[a+4+4>>2]=c[b+4>>2];c[a+4+8>>2]=c[b+8>>2];c[a+4+12>>2]=c[b+12>>2];c[a+20>>2]=c[b+16>>2];c[a+20+4>>2]=c[b+16+4>>2];c[a+20+8>>2]=c[b+16+8>>2];c[a+20+12>>2]=c[b+16+12>>2];c[a+36>>2]=c[b+32>>2];c[a+36+4>>2]=c[b+32+4>>2];c[a+36+8>>2]=c[b+32+8>>2];c[a+36+12>>2]=c[b+32+12>>2];c[a+52>>2]=c[b+48>>2];c[a+52+4>>2]=c[b+48+4>>2];c[a+52+8>>2]=c[b+48+8>>2];c[a+52+12>>2]=c[b+48+12>>2];return}function Cl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;a[b+53>>0]=1;do if((c[b+4>>2]|0)==(e|0)){a[b+52>>0]=1;e=c[b+16>>2]|0;if(!e){c[b+16>>2]=d;c[b+24>>2]=f;c[b+36>>2]=1;if(!((f|0)==1?(c[b+48>>2]|0)==1:0))break;a[b+54>>0]=1;break}if((e|0)!=(d|0)){c[b+36>>2]=(c[b+36>>2]|0)+1;a[b+54>>0]=1;break}e=c[b+24>>2]|0;if((e|0)==2){c[b+24>>2]=f;e=f}if((e|0)==1?(c[b+48>>2]|0)==1:0)a[b+54>>0]=1}while(0);return}function Dl(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0.0,h=0.0,j=0.0,k=0,l=0;e=i;i=i+16|0;k=c[a+52>>2]|0;l=c[a+28+(((k+2|0)%3|0)<<2)>>2]|0;c[e>>2]=l;c[e+4>>2]=l;c[e+8>>2]=l;g[e+12>>2]=0.0;g[e+(k<<2)>>2]=+g[a+28+(k<<2)>>2]+ +g[e+(k<<2)>>2];h=(+g[e>>2]+.03999999910593033)*2.0;f=(+g[e+4>>2]+.03999999910593033)*2.0;j=(+g[e+8>>2]+.03999999910593033)*2.0;g[d>>2]=b*.0833333283662796*(f*f+j*j);g[d+4>>2]=b*.0833333283662796*(h*h+j*j);g[d+8>>2]=b*.0833333283662796*(h*h+f*f);i=e;return}function El(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+32>>2];h=+g[a+28>>2];i=b+(m<<4)|0;l=+g[b+(m<<4)+4>>2];f=+g[b+(m<<4)+8>>2];k=+O(+(l*l+f*f));if(k!=0.0){j=f*(e/k);f=+g[i>>2]<0.0?-h:h;e=l*(e/k)}else{j=0.0;f=+g[i>>2]<0.0?-h:h}g[c+(m<<4)>>2]=f;g[c+(m<<4)+4>>2]=e;g[c+(m<<4)+8>>2]=j;m=m+1|0}while((m|0)!=(d|0));return}function Fl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;j=c[b>>2]|0;if(!e)e=c[a+188>>2]|0;h=c[a+268>>2]|0;if((h|0)<=0)return;i=c[a+276>>2]|0;f=0;while(1){g=i+(f<<2)|0;if((c[g>>2]|0)==(j|0))break;f=f+1|0;if((f|0)>=(h|0)){k=9;break}}if((k|0)==9)return;if((f|0)>=(h|0))return;c[g>>2]=c[i+(h+-1<<2)>>2];c[a+268>>2]=h+-1;k=c[a+284>>2]|0;Ib[c[(c[k>>2]|0)+12>>2]&31](k,e,b,d)|0;return}function Gl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=i;i=i+32|0;d=c[a+216>>2]|0;if(+g[d+4>>2]==0.0){a=0;i=e;return a|0}b=c[b>>2]|0;if(!(Zb[c[(c[d>>2]|0)+8>>2]&31](d,c[b+188>>2]|0)|0)){a=1;i=e;return a|0}f=c[b+192>>2]|0;d=c[a+216>>2]|0;c[e>>2]=0;c[e+4>>2]=f;c[e+8>>2]=b;c[e+12>>2]=b+4;c[e+16>>2]=-1;c[e+20>>2]=-1;bd(a+68|0,a+132|0,e,d);a=1;i=e;return a|0}function Hl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+28>>2]=c[a+28>>2];c[b+32>>2]=c[a+32>>2];c[b+36>>2]=c[a+36>>2];c[b+40>>2]=c[a+40>>2];c[b+12>>2]=c[a+12>>2];c[b+16>>2]=c[a+16>>2];c[b+20>>2]=c[a+20>>2];c[b+24>>2]=c[a+24>>2];c[b+44>>2]=c[a+44>>2];return 11212}function Il(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(c[d+28>>2]|0)!=1:0)c[d+28>>2]=f}else if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(c[d+20>>2]|0)!=(e|0):0){c[d+32>>2]=f;c[d+20>>2]=e;c[d+40>>2]=(c[d+40>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Jl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=i;i=i+256|0;do if((d|0)>(e|0)&(f&73728|0)==0){Tn(h|0,b|0,((d-e|0)>>>0>256?256:d-e|0)|0)|0;f=c[a>>2]|0;if((d-e|0)>>>0>255){g=d-e|0;b=f;f=(f&32|0)==0;do{if(f){Ek(h,256,a);b=c[a>>2]|0}g=g+-256|0;f=(b&32|0)==0}while(g>>>0>255);if(f)b=d-e&255;else break}else if(!(f&32))b=d-e|0;else break;Ek(h,b,a)}while(0);i=h;return}function Kl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];c[b+12>>2]=c[a+68>>2];c[b+16>>2]=c[a+72>>2];c[b+20>>2]=c[a+76>>2];c[b+24>>2]=c[a+80>>2];c[b+28>>2]=c[a+48>>2];c[b+32>>2]=c[a+52>>2];c[b+36>>2]=c[a+56>>2];c[b+40>>2]=c[a+60>>2];c[b+44>>2]=c[a+64>>2];return 17117}function Ll(){var b=0,d=0.0,e=0.0;b=i;i=i+16|0;if((a[22544]|0)==0?Wa(22544)|0:0){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;og(23268,0.0,0,0,b);_a(22544)}c[5868]=c[5868]|1;g[5903]=0.0;d=+g[5913]*0.0;e=+g[5914]*0.0;g[5908]=+g[5912]*0.0;g[5909]=d;g[5910]=e;g[5911]=0.0;c[5916]=0;c[5917]=0;c[5918]=0;c[5919]=0;e=+g[5905]*0.0;d=+g[5906]*0.0;g[5957]=+g[5904]*0.0;g[5958]=e;g[5959]=d;g[5960]=0.0;i=b;return}function Ml(b,d){b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;a[b+171>>0]=1;c[b+60>>2]=c[d>>2];c[b+60+4>>2]=c[d+4>>2];c[b+60+8>>2]=c[d+8>>2];c[b+60+12>>2]=c[d+12>>2];e=+g[b+60>>2];f=+g[b+64>>2];i=+g[b+68>>2];h=1.0/+O(+(e*e+f*f+i*i));if(+O(+(i*h*i*h+(e*h*e*h+f*h*f*h)))<1.1920928955078125e-07){j=0.0;f=0.0;e=0.0;d=0}else{j=e*h;f=f*h;e=i*h;d=c[b+72>>2]|0}g[b+76>>2]=j;g[b+80>>2]=f;g[b+84>>2]=e;c[b+88>>2]=d;return}function Nl(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0;j=c[a+68>>2]|0;i=c[a+64>>2]|0;h=c[a+72>>2]|0;e=+g[a+60>>2]*(+g[b+(j<<2)>>2]/+g[a+12+(j<<2)>>2]);g[a+60>>2]=e;f=+g[a+56>>2]*(+g[b+(i<<2)>>2]/+g[a+12+(i<<2)>>2]+ +g[b+(h<<2)>>2]/+g[a+12+(h<<2)>>2])*.5;g[a+56>>2]=f;g[a+52>>2]=f/+O(+(e*e+f*f));f=+N(+(+g[b>>2]));e=+N(+(+g[b+4>>2]));d=+N(+(+g[b+8>>2]));g[a+12>>2]=f;g[a+16>>2]=e;g[a+20>>2]=d;g[a+24>>2]=0.0;return}function Ol(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+28>>2];i=+g[a+36>>2];l=+g[b+(m<<4)>>2];f=+g[b+(m<<4)+4>>2];k=+O(+(l*l+f*f));h=+g[b+(m<<4)+8>>2];if(k!=0.0){j=f*(e/k);f=h<0.0?-i:i;e=l*(e/k)}else{j=0.0;f=h<0.0?-i:i}g[c+(m<<4)>>2]=e;g[c+(m<<4)+4>>2]=j;g[c+(m<<4)+8>>2]=f;m=m+1|0}while((m|0)!=(d|0));return}function Pl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if((d|0)<=0)return;m=0;do{e=+g[a+28>>2];i=+g[a+32>>2];l=+g[b+(m<<4)>>2];f=+g[b+(m<<4)+8>>2];k=+O(+(l*l+f*f));h=+g[b+(m<<4)+4>>2];if(k!=0.0){j=f*(e/k);f=h<0.0?-i:i;e=l*(e/k)}else{j=0.0;f=h<0.0?-i:i}g[c+(m<<4)>>2]=e;g[c+(m<<4)+4>>2]=f;g[c+(m<<4)+8>>2]=j;m=m+1|0}while((m|0)!=(d|0));return}function Ql(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+48|0;c[f+32>>2]=8976;c[f+32+4>>2]=e;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[f+16>>2]=c[d>>2];c[f+16+4>>2]=c[d+4>>2];c[f+16+8>>2]=c[d+8>>2];c[f+16+12>>2]=c[d+12>>2];bg(c[a+4>>2]|0,f,f+32|0);bg(c[a+64>>2]|0,f,f+32|0);i=f;return}function Rl(a,d,f,g,h,i){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;j=c[a+108>>2]|0;if(j|0){Qb[c[(c[j>>2]|0)+24>>2]&7](j,d,f,g,h,i);return}j=b[a+56>>1]|0;if((j&65535)<<1>>>0<=1)return;d=1;h=1;do{i=c[a+68>>2]|0;if(b[i+(d<<2)>>1]&1){Zb[c[(c[g>>2]|0)+8>>2]&31](g,(c[a+60>>2]|0)+((e[i+(d<<2)+2>>1]|0)<<6)|0)|0;j=b[a+56>>1]|0}h=h+1<<16>>16;d=h&65535}while(d>>>0<((j&65535)<<1|1)>>>0);return}function Sl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Zb[c[(c[b>>2]|0)+56>>2]&31](b,80)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5508;a[b+8>>0]=1;c[b+12>>2]=5536;c[b+60>>2]=d;c[b+64>>2]=0;c[b+16>>2]=f;c[b+20>>2]=e;d=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[f+8>>2]|0,c[e+8>>2]|0)|0;c[b+76>>2]=d;f=c[b+60>>2]|0;Cb[c[(c[f>>2]|0)+20>>2]&127](f,d);return b|0}function Tl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;g=i;i=i+64|0;if((a|0)!=(b|0))if((b|0)!=0?(f=wj(b,2744)|0,(f|0)!=0):0){b=g;e=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(e|0));c[g>>2]=f;c[g+8>>2]=a;c[g+12>>2]=-1;c[g+48>>2]=1;mc[c[(c[f>>2]|0)+28>>2]&127](f,g,c[d>>2]|0,1);if((c[g+24>>2]|0)==1){c[d>>2]=c[g+16>>2];b=1}else b=0}else b=0;else b=1;i=g;return b|0}function Ul(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Zb[c[(c[b>>2]|0)+56>>2]&31](b,80)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5508;a[b+8>>0]=0;c[b+12>>2]=5536;c[b+60>>2]=d;c[b+64>>2]=0;c[b+16>>2]=e;c[b+20>>2]=f;d=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;c[b+76>>2]=d;f=c[b+60>>2]|0;Cb[c[(c[f>>2]|0)+20>>2]&127](f,d);return b|0}function Vl(){var a=0,b=0,d=0;d=i;i=i+32|0;while(1){a=yc(112)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((b|0)==6){c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=4096;c[d+12>>2]=4096;c[d+16>>2]=0;c[d+20>>2]=1;qg(a,d);i=d;return a|0}return 0}function Wl(b){b=b|0;var d=0;c[b>>2]=5088;d=c[b+284>>2]|0;Ab[c[c[d>>2]>>2]&255](d);d=c[b+284>>2]|0;if(d|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b>>2]=5044;d=c[b+276>>2]|0;if(!d){a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;d=b+272|0;c[d>>2]=0;c[b>>2]=5008;return}if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+276>>2]=0;a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;d=b+272|0;c[d>>2]=0;c[b>>2]=5008;return}function Xl(a){a=a|0;var b=0,d=0,e=0,f=0.0,h=0.0;e=c[a+232>>2]|0;if((e|0)<=0)return;a=c[a+240>>2]|0;d=0;do{b=c[a+(d<<2)>>2]|0;switch(c[b+216>>2]|0){case 2:case 5:break;default:if(!(c[b+204>>2]&3)){h=+g[b+368>>2]*+g[b+352>>2];f=+g[b+372>>2]*+g[b+356>>2];g[b+412>>2]=+g[b+364>>2]*+g[b+348>>2]+ +g[b+412>>2];g[b+416>>2]=h+ +g[b+416>>2];g[b+420>>2]=f+ +g[b+420>>2]}}d=d+1|0}while((d|0)!=(e|0));return}function Yl(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;b=a[b+16>>0]|0;h=c[(b<<24>>24==0?d:e)+8>>2]|0;b=b<<24>>24?d:e;d=c[b+8>>2]|0;e=c[h+268>>2]|0;a:do if((e|0)>0){g=c[h+276>>2]|0;f=0;while(1){if((c[g+(f<<2)>>2]|0)==(d|0))break;f=f+1|0;if((f|0)>=(e|0))break a}if((f|0)!=(e|0))return}while(0);e=c[h+284>>2]|0;ic[c[(c[e>>2]|0)+36>>2]&127](e,h,b);return}function Zl(a,b){a=a|0;b=+b;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0;h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=h+ +g[a+28>>2];e=e+ +g[a+32>>2];i=i+ +g[a+36>>2];g[a+44>>2]=b;f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);d=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);b=i-+Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[a+28>>2]=h-f;g[a+32>>2]=e-d;g[a+36>>2]=b;g[a+40>>2]=0.0;return}function _l(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((c[a+8>>2]|0)<=0)return;g=0;a:while(1){while(1){e=c[a+16>>2]|0;f=e+(g<<4)|0;if(!(Zb[c[(c[b>>2]|0)+8>>2]&31](b,f)|0))break;Ib[c[(c[a>>2]|0)+12>>2]&31](a,c[f>>2]|0,c[e+(g<<4)+4>>2]|0,d)|0;c[6163]=(c[6163]|0)+-1;if((g|0)>=(c[a+8>>2]|0)){e=7;break a}}g=g+1|0;if((g|0)>=(c[a+8>>2]|0)){e=7;break}}if((e|0)==7)return}function $l(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;g[d+52>>2]=a/+O(+(a*a+b*b));c[d>>2]=6472;c[d+64>>2]=0;c[d+68>>2]=2;c[d+72>>2]=1;g[d+28>>2]=a;g[d+36>>2]=b;g[d+32>>2]=a;return d|0}function am(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;g[d+52>>2]=a/+O(+(a*a+b*b));c[d>>2]=6572;c[d+64>>2]=1;c[d+68>>2]=0;c[d+72>>2]=2;g[d+32>>2]=a;g[d+28>>2]=b;g[d+36>>2]=a;return d|0}function bm(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d>>2]=6372;g[d+56>>2]=a;g[d+60>>2]=b;c[d+4>>2]=11;c[d+64>>2]=0;c[d+68>>2]=1;c[d+72>>2]=2;g[d+28>>2]=a;g[d+32>>2]=b;g[d+36>>2]=a;g[d+52>>2]=a/+O(+(a*a+b*b));return d|0}function cm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Zb[c[(c[b>>2]|0)+56>>2]&31](b,16)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=5576;a[b+8>>0]=0;c[b+12>>2]=0;if(!(Ob[c[(c[d>>2]|0)+24>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0))return b|0;d=c[b+4>>2]|0;c[b+12>>2]=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[b+8>>0]=1;return b|0}function dm(){var a=0,b=0,d=0;d=i;i=i+32|0;while(1){a=yc(92)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((b|0)==6){c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=4096;c[d+12>>2]=4096;c[d+16>>2]=0;c[d+20>>2]=1;Zd(a,d);i=d;return a|0}return 0}function em(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);k=+g[b+52>>2]-h;j=+g[b+56>>2]-f;g[d>>2]=+g[b+48>>2]-i;g[d+4>>2]=k;g[d+8>>2]=j;g[d+12>>2]=0.0;h=h+ +g[b+52>>2];f=f+ +g[b+56>>2];g[e>>2]=i+ +g[b+48>>2];g[e+4>>2]=h;g[e+8>>2]=f;g[e+12>>2]=0.0;return}function fm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;g=c[a+720>>2]|0;h=c[a+732>>2]|0;if((h|0)<=0){d=0;return d|0}e=c[a+740>>2]|0;f=0;while(1){a=c[e+(f*52|0)+8>>2]|0;if((a|0)==(g+(b*104|0)|0)?(c[e+(f*52|0)+12>>2]|0)==(g+(d*104|0)|0):0){a=1;e=8;break}if((a|0)==(g+(d*104|0)|0)?(c[e+(f*52|0)+12>>2]|0)==(g+(b*104|0)|0):0){a=1;e=8;break}f=f+1|0;if((f|0)>=(h|0)){a=0;e=8;break}}if((e|0)==8)return a|0;return 0}function gm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;j=+g[d>>2];i=+g[d+4>>2];e=+g[d+8>>2];f=j*+g[b+56>>2]+i*+g[b+60>>2]+e*+g[b+64>>2];h=j*+g[b+72>>2]+i*+g[b+76>>2]+e*+g[b+80>>2];e=j*+g[b+88>>2]+i*+g[b+92>>2]+e*+g[b+96>>2];b=b+56+((f<h?(h<e?2:1):f<e?2:0)<<4)|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];return}function hm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=c[d>>2]|0;g=Zb[c[(c[g>>2]|0)+56>>2]&31](g,20)|0;h=c[d+4>>2]|0;b=a[b+4>>0]|0;d=c[d>>2]|0;c[g+4>>2]=d;c[g>>2]=6004;a[g+8>>0]=0;c[g+12>>2]=h;a[g+16>>0]=b;if(h|0)return g|0;c[g+12>>2]=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[g+8>>0]=1;return g|0}function im(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;do if((b|0)==(c[d+8>>2]|0)){b=c[d+16>>2]|0;if(!b){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;break}if((b|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}if((c[d+24>>2]|0)==2)c[d+24>>2]=f}else{b=c[b+8>>2]|0;mc[c[(c[b>>2]|0)+28>>2]&127](b,d,e,f)}while(0);return}function jm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+48|0;c[f>>2]=7008;c[f+4>>2]=b;c[f+8>>2]=c[d>>2];c[f+8+4>>2]=c[d+4>>2];c[f+8+8>>2]=c[d+8>>2];c[f+8+12>>2]=c[d+12>>2];c[f+24>>2]=c[e>>2];c[f+24+4>>2]=c[e+4>>2];c[f+24+8>>2]=c[e+8>>2];c[f+24+12>>2]=c[e+12>>2];a=c[a+48>>2]|0;mc[c[(c[a>>2]|0)+8>>2]&127](a,f,d,e);i=f;return}function km(a,b,d){a=a|0;b=+b;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;i=+g[a+28>>2];f=+g[a+32>>2];j=+g[a+36>>2];h=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);e=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);j=(j+ +Sb[c[(c[a>>2]|0)+48>>2]&15](a))*2.0;g[d>>2]=b/12.0*((f+e)*2.0*(f+e)*2.0+j*j);g[d+4>>2]=b/12.0*((i+h)*2.0*(i+h)*2.0+j*j);g[d+8>>2]=b/12.0*((i+h)*2.0*(i+h)*2.0+(f+e)*2.0*(f+e)*2.0);g[d+12>>2]=0.0;return}function lm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;f=c[d>>2]|0;f=Zb[c[(c[f>>2]|0)+56>>2]&31](f,36)|0;g=c[d+4>>2]|0;i=c[b+12>>2]|0;h=c[b+8>>2]|0;e=c[b+16>>2]|0;b=c[b+20>>2]|0;c[f+4>>2]=c[d>>2];c[f>>2]=6052;c[f+8>>2]=i;c[f+12>>2]=h;a[f+16>>0]=0;c[f+20>>2]=g;a[f+24>>0]=0;c[f+28>>2]=e;c[f+32>>2]=b;return f|0}function mm(a,b){a=a|0;b=b|0;var d=0;d=i;i=i+64|0;c[d>>2]=1065353216;c[d+4>>2]=0;c[d+4+4>>2]=0;c[d+4+8>>2]=0;c[d+4+12>>2]=0;c[d+20>>2]=1065353216;c[d+24>>2]=0;c[d+24+4>>2]=0;c[d+24+8>>2]=0;c[d+24+12>>2]=0;c[d+40>>2]=1065353216;c[d+44>>2]=0;c[d+48>>2]=c[b>>2];c[d+48+4>>2]=c[b+4>>2];c[d+48+8>>2]=c[b+8>>2];c[d+48+12>>2]=c[b+12>>2];Pd(a,d);i=d;return}function nm(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0;h=+g[b>>2];f=+g[b+4>>2];e=+g[b+8>>2];d=(+g[a+280>>2]*h+ +g[a+284>>2]*f+ +g[a+288>>2]*e)*+g[a+548>>2];c=(+g[a+296>>2]*h+ +g[a+300>>2]*f+ +g[a+304>>2]*e)*+g[a+552>>2];g[a+328>>2]=+g[a+328>>2]+(+g[a+264>>2]*h+ +g[a+268>>2]*f+ +g[a+272>>2]*e)*+g[a+544>>2];g[a+332>>2]=+g[a+332>>2]+d;g[a+336>>2]=+g[a+336>>2]+c;return}function om(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0?1:(c[d+236>>2]&2|0)==0){d=1;return d|0}g=c[b+488>>2]|0;if((g|0)<=0){d=1;return d|0}b=c[b+496>>2]|0;f=0;while(1){e=c[b+(f<<2)>>2]|0;if(a[e+20>>0]|0){if((c[e+28>>2]|0)==(d|0)){b=0;e=8;break}if((c[e+32>>2]|0)==(d|0)){b=0;e=8;break}}f=f+1|0;if((f|0)>=(g|0)){b=1;e=8;break}}if((e|0)==8)return b|0;return 0}function pm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;j=+g[a+28>>2];h=+g[a+32>>2];e=+g[a+36>>2];i=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);f=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);e=e+ +Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=+(b&1^1|0)*(j+i)-+(b&1|0)*(j+i);g[d+4>>2]=+(b>>>1&1^1|0)*(h+f)-+(b>>>1&1|0)*(h+f);g[d+8>>2]=+(b>>>2&1^1|0)*e-+(b>>>2&1|0)*e;g[d+12>>2]=0.0;return}function qm(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0;h=+g[b>>2];f=+g[b+4>>2];e=+g[b+8>>2];d=(+g[a+20>>2]*h+ +g[a+24>>2]*f+ +g[a+28>>2]*e)*+g[a+352>>2];c=(+g[a+36>>2]*h+ +g[a+40>>2]*f+ +g[a+44>>2]*e)*+g[a+356>>2];g[a+412>>2]=+g[a+412>>2]+(+g[a+4>>2]*h+ +g[a+8>>2]*f+ +g[a+12>>2]*e)*+g[a+348>>2];g[a+416>>2]=+g[a+416>>2]+d;g[a+420>>2]=+g[a+420>>2]+c;return}function rm(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;h=i;i=i+16|0;a[h>>0]=e;f=c[b+16>>2]|0;if(!f)if(!(Io(b)|0)){f=c[b+16>>2]|0;g=4}else f=-1;else g=4;do if((g|0)==4){g=c[b+20>>2]|0;if(g>>>0<f>>>0?(e&255|0)!=(a[b+75>>0]|0):0){c[b+20>>2]=g+1;a[g>>0]=e;f=e&255;break}if((Ob[c[b+36>>2]&63](b,h,1)|0)==1)f=d[h>>0]|0;else f=-1}while(0);i=h;return f|0}function sm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;h=b>>31|((b|0)<0?-1:0)<<1;g=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;j=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=Ls(h^a|0,g^b|0,h|0,g|0)|0;b=C;$e(a,b,Ls(k^d|0,j^e|0,k|0,j|0)|0,C,f|0)|0;e=Ls(c[f>>2]^h|0,c[f+4>>2]^g|0,h|0,g|0)|0;d=C;i=f;return (C=d,e)|0}function tm(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0;h=+g[b>>2];f=+g[b+4>>2];e=+g[b+8>>2];d=(+g[a+20>>2]*h+ +g[a+24>>2]*f+ +g[a+28>>2]*e)*+g[a+548>>2];c=(+g[a+36>>2]*h+ +g[a+40>>2]*f+ +g[a+44>>2]*e)*+g[a+552>>2];g[a+428>>2]=+g[a+428>>2]+(+g[a+4>>2]*h+ +g[a+8>>2]*f+ +g[a+12>>2]*e)*+g[a+544>>2];g[a+432>>2]=+g[a+432>>2]+d;g[a+436>>2]=+g[a+436>>2]+c;return}function um(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+16>>2];c[a+8>>2]=c[b+32>>2];g[a+12>>2]=0.0;c[a+16>>2]=c[b+4>>2];c[a+20>>2]=c[b+20>>2];c[a+24>>2]=c[b+36>>2];g[a+28>>2]=0.0;c[a+32>>2]=c[b+8>>2];c[a+36>>2]=c[b+24>>2];c[a+40>>2]=c[b+40>>2];g[a+44>>2]=0.0;c[a+48>>2]=c[b+48>>2];c[a+52>>2]=c[b+52>>2];c[a+56>>2]=c[b+56>>2];g[a+60>>2]=0.0;return}function vm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;i=+g[b+28>>2];j=+g[b+32>>2];e=+g[b+36>>2];h=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);f=+Sb[c[(c[b>>2]|0)+48>>2]&15](b);e=e+ +Sb[c[(c[b>>2]|0)+48>>2]&15](b);f=+g[d+4>>2]>=0.0?j+f:-(j+f);e=+g[d+8>>2]>=0.0?e:-e;g[a>>2]=+g[d>>2]>=0.0?i+h:-(i+h);g[a+4>>2]=f;g[a+8>>2]=e;g[a+12>>2]=0.0;return}function wm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,h=0.0,i=0.0;if((d|0)<=0)return;e=0;do{i=+g[a+28>>2];h=+g[a+32>>2];h=+g[b+(e<<4)+4>>2]>=0.0?h:-h;f=+g[a+36>>2];f=+g[b+(e<<4)+8>>2]>=0.0?f:-f;g[c+(e<<4)>>2]=+g[b+(e<<4)>>2]>=0.0?i:-i;g[c+(e<<4)+4>>2]=h;g[c+(e<<4)+8>>2]=f;g[c+(e<<4)+12>>2]=0.0;e=e+1|0}while((e|0)!=(d|0));return}function xm(a,b){a=a|0;b=b|0;var d=0,e=0;while(1){d=yc(64)|0;if(d|0){e=6;break}d=c[6564]|0;c[6564]=d+0;if(!d){e=5;break}jc[d&3]()}if((e|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((e|0)==6){ul(d,a);c[d+48>>2]=c[b>>2];c[d+48+4>>2]=c[b+4>>2];c[d+48+8>>2]=c[b+8>>2];c[d+48+12>>2]=c[b+12>>2];return d|0}return 0}function ym(b){b=b|0;var d=0,e=0;c[b>>2]=6292;d=c[b+64>>2]|0;if(d|0?(pi(d),e=c[b+64>>2]|0,e|0):0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}d=c[b+24>>2]|0;if(!d){a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;b=b+20|0;c[b>>2]=0;return}if(a[b+28>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+24>>2]=0;a[b+28>>0]=1;c[b+24>>2]=0;c[b+16>>2]=0;b=b+20|0;c[b>>2]=0;return}function zm(a,b,d,e,f,g,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;a=c[a+32>>2]|0;c[d>>2]=c[a+(k<<5)+12>>2];c[b>>2]=c[a+(k<<5)+16>>2];c[e>>2]=c[a+(k<<5)+28>>2];c[f>>2]=c[a+(k<<5)+20>>2];c[i>>2]=c[a+(k<<5)>>2];c[g>>2]=c[a+(k<<5)+4>>2];c[h>>2]=c[a+(k<<5)+8>>2];c[j>>2]=c[a+(k<<5)+24>>2];return}function Am(a,e,f){a=a|0;e=e|0;f=f|0;var h=0.0;switch(c[a+96>>2]|0){case 0:{f=(_(c[a+64>>2]|0,f)|0)+e|0;h=+g[(c[a+92>>2]|0)+(f<<2)>>2];return +h}case 5:{h=+(d[(_(c[a+64>>2]|0,f)|0)+e+(c[a+92>>2]|0)>>0]|0)*+g[a+88>>2];return +h}case 3:{f=(_(c[a+64>>2]|0,f)|0)+e|0;h=+(b[(c[a+92>>2]|0)+(f<<1)>>1]|0)*+g[a+88>>2];return +h}default:{h=0.0;return +h}}return 0.0}function Bm(b){b=b|0;var d=0,e=0;c[b>>2]=7256;d=c[b+104>>2]|0;if(d|0){if(a[b+108>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+104>>2]=0}a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b>>2]=7124;d=c[b+52>>2]|0;if(d|0?(Ab[c[c[d>>2]>>2]&255](d),e=c[b+52>>2]|0,e|0):0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function Cm(){var b=0,d=0;while(1){b=yc(40)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((d|0)==6){g[b+12>>2]=1.0;c[b+8>>2]=0;c[b+4>>2]=5;c[b>>2]=2996;a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;a[b+16>>0]=1;return b|0}return 0}function Dm(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0.0,f=0.0,h=0.0;e=+Q(+b);f=+Q(+c);h=+Q(+d);b=+R(+b);c=+R(+c);d=+R(+d);g[a>>2]=f*h;g[a+4>>2]=c*b*h-e*d;g[a+8>>2]=c*e*h+b*d;g[a+12>>2]=0.0;g[a+16>>2]=f*d;g[a+20>>2]=c*b*d+e*h;g[a+24>>2]=c*e*d-b*h;g[a+28>>2]=0.0;g[a+32>>2]=-c;g[a+36>>2]=f*b;g[a+40>>2]=f*e;g[a+44>>2]=0.0;return}function Em(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;c[b+4>>2]=c[d>>2];c[b+4+4>>2]=c[d+4>>2];c[b+4+8>>2]=c[d+8>>2];c[b+4+12>>2]=c[d+12>>2];c[b+20>>2]=c[e>>2];c[b+20+4>>2]=c[e+4>>2];c[b+20+8>>2]=c[e+8>>2];c[b+20+12>>2]=c[e+12>>2];g[b+36>>2]=f;a[b+40>>0]=1;return}function Fm(){var a=0,b=0;while(1){a=yc(8)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){c[6434]=a;tb(a|0,0)|0;c[6424]=19390;c[6425]=0;c[6426]=0;c[6427]=0;c[6428]=0;c[6429]=0;c[6430]=0;c[6431]=0;c[6432]=0;Yq(25696);return}}function Gm(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(75)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+4>>2]=10;c[d>>2]=7592;c[d+52>>2]=2;g[d+28>>2]=a;g[d+32>>2]=a;g[d+36>>2]=b*.5;g[d+40>>2]=0.0;return d|0}function Hm(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(75)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d+4>>2]=10;c[d>>2]=7492;c[d+52>>2]=0;g[d+28>>2]=b*.5;g[d+32>>2]=a;g[d+36>>2]=a;g[d+40>>2]=0.0;return d|0}function Im(a,b){a=+a;b=+b;var d=0;c[6435]=(c[6435]|0)+1;d=yc(75)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}c[d+8>>2]=0;c[d+12>>2]=1065353216;c[d+16>>2]=1065353216;c[d+20>>2]=1065353216;g[d+24>>2]=0.0;g[d+44>>2]=.03999999910593033;c[d>>2]=7392;c[d+4>>2]=10;c[d+52>>2]=1;g[d+28>>2]=a;g[d+32>>2]=b*.5;g[d+36>>2]=a;g[d+40>>2]=0.0;return d|0}function Jm(a,b){a=+a;b=b|0;var d=0,e=0,f=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=xs(d|0,e|0,52)|0;switch(f&2047|0){case 0:{if(a!=0.0){a=+Jm(a*18446744073709551616.0,b);d=(c[b>>2]|0)+-64|0}else d=0;c[b>>2]=d;break}case 2047:break;default:{c[b>>2]=(f&2047)+-1022;c[k>>2]=d;c[k+4>>2]=e&-2146435073|1071644672;a=+h[k>>3]}}return +a}function Km(){var a=0,b=0;while(1){a=yc(24)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){g[a>>2]=5.880000114440918;g[a+4>>2]=.8299999833106995;g[a+8>>2]=.8799999952316284;g[a+12>>2]=500.0;g[a+16>>2]=10.5;g[a+20>>2]=6.0e3;return a|0}return 0}function Lm(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;d=i;i=i+16|0;c[d>>2]=8940;c[d+4>>2]=e;Be(a+4|0,c[a+4>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);Be(a+64|0,c[a+64>>2]|0,b,e+4|0,e+20|0,+g[e+32>>2],f,h,d);i=d;return}function Mm(b){b=b|0;var d=0;c[b>>2]=7256;d=c[b+104>>2]|0;if(d|0){if(a[b+108>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+104>>2]=0}a[b+108>>0]=1;c[b+104>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b>>2]=7124;d=c[b+52>>2]|0;if(!d)return;Ab[c[c[d>>2]>>2]&255](d);d=c[b+52>>2]|0;if(!d)return;c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);return}function Nm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;f=i;i=i+32|0;c[f>>2]=c[a+60>>2];c[f+4>>2]=0;c[f+8>>2]=b;c[f+12>>2]=f+20;c[f+16>>2]=d;b=ub(140,f|0)|0;if(b>>>0<=4294963200)if((b|0)<0)e=7;else a=c[f+20>>2]|0;else{if(true)a=25748;else a=c[(ib()|0)+64>>2]|0;c[a>>2]=0-b;e=7}if((e|0)==7){c[f+20>>2]=-1;a=-1}i=f;return a|0}function Om(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0;e=i;i=i+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+16>>2];if(!(c[b+4>>2]|0))c[b+4>>2]=e;g=c[a+12>>2]|0;f=+_b[c[(c[g>>2]|0)+12>>2]&15](g,b,d);c[a+4>>2]=c[(c[a+12>>2]|0)+4>>2];i=e;return +f}function Pm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=c[a+268>>2]|0;if((g|0)<=0)return;b=c[b>>2]|0;f=c[a+276>>2]|0;d=0;while(1){e=f+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(g|0)){h=7;break}}if((h|0)==7)return;if((d|0)>=(g|0))return;c[e>>2]=c[f+(g+-1<<2)>>2];c[a+268>>2]=g+-1;return}function Qm(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;c[b+4>>2]=c[d>>2];c[b>>2]=6164;a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;a[b+28>>0]=g&1;c[b+32>>2]=c[d+4>>2];a[b+36>>0]=0;c[b+40>>2]=c[(c[(g?f:e)+4>>2]|0)+68>>2];lh(b,e,f);return}function Rm(){var a=0,b=0;while(1){a=yc(24)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=4096;c[a+12>>2]=4096;c[a+16>>2]=0;c[a+20>>2]=1;return a|0}return 0}function Sm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;f=c[a+280>>2]|0;if((f|0)<=0)return;g=c[a+288>>2]|0;d=0;while(1){e=g+(d<<2)|0;if((c[e>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0)){h=7;break}}if((h|0)==7)return;if((d|0)>=(f|0))return;c[e>>2]=c[g+(f+-1<<2)>>2];c[(c[a+288>>2]|0)+(f+-1<<2)>>2]=b;c[a+280>>2]=f+-1;return}function Tm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0;e=i;i=i+16|0;c[e>>2]=-1;c[e+4>>2]=c[a+24>>2];if(!(c[b+4>>2]|0))c[b+4>>2]=e;g=c[a+20>>2]|0;f=+_b[c[(c[g>>2]|0)+12>>2]&15](g,b,d);c[a+4>>2]=c[(c[a+20>>2]|0)+4>>2];i=e;return +f}function Um(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;do if((b|0)==(c[d+8>>2]|0)){b=c[d+16>>2]|0;if(!b){c[d+16>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;break}if((b|0)!=(e|0)){c[d+36>>2]=(c[d+36>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}if((c[d+24>>2]|0)==2)c[d+24>>2]=f}while(0);return}function Vm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(b|0){case 2:case 1:{if(c>>>0<3){d=+g[a+600>>2];break a}if((c+-3|0)>>>0<3)d=+g[a+432>>2];else d=0.0;break}case 4:case 3:{if(c>>>0<3){d=+g[a+596>>2];break a}if((c+-3|0)>>>0<3)d=+g[a+604>>2];else d=0.0;break}default:d=0.0}while(0);return +d}function Wm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=c[d>>2]|0;b=Zb[c[(c[b>>2]|0)+56>>2]&31](b,16)|0;d=c[d>>2]|0;c[b+4>>2]=d;c[b>>2]=9256;a[b+8>>0]=0;c[b+12>>2]=0;c[b+12>>2]=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,c[f+8>>2]|0)|0;a[b+8>>0]=1;return b|0}function Xm(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+56>>2]|0;if(!d)return;e=Eb[c[(c[d>>2]|0)+8>>2]&127](d)|0;e=Ob[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=c[a+56>>2]|0;d=Ob[c[(c[d>>2]|0)+12>>2]&63](d,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1346456916,c[a+56>>2]|0);return}function Ym(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295)while(1){e=or(b|0,c|0,10,0)|0;d=d+-1|0;a[d>>0]=e|48;e=b;b=dw(b|0,c|0,10,0)|0;if(!(c>>>0>9|(c|0)==9&e>>>0>4294967295))break;else c=C}if(b)while(1){d=d+-1|0;a[d>>0]=(b>>>0)%10|0|48;if(b>>>0<10)break;else b=(b>>>0)/10|0}return d|0}function Zm(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(b|0){case 2:case 1:if(e>>>0<3){g[a+600>>2]=d;c[a+592>>2]=c[a+592>>2]|2;return}else{g[a+432>>2]=d;return}case 4:case 3:if(e>>>0<3){g[a+596>>2]=d;c[a+592>>2]=c[a+592>>2]|1;return}else{g[a+604>>2]=d;c[a+592>>2]=c[a+592>>2]|4;return}default:return}}function _m(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;d=c[a+56>>2]|0;if((d&65535)<<16>>16)return;b[a+64>>1]=1;g=c[a+60>>2]|0;if((d>>>16&65535)>1){e=1;d=1;while(1){b[g+(e<<6)+48>>1]=e+1;f=d+1<<16>>16;d=b[a+58>>1]|0;if((f&65535)<(d&65535)){e=f&65535;d=f}else break}}else d=d>>>16&65535;b[g+((d&65535)+-1<<6)+48>>1]=0;return}function $m(a){a=a|0;var b=0,d=0;while(1){b=yc(112)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){a=Ya(4)|0;c[a>>2]=9640;pb(a|0,2800,251)}else if((d|0)==6){qg(b,a);return b|0}return 0}function an(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0;while(1){f=yc(16)|0;if(f|0){h=6;break}f=c[6564]|0;c[6564]=f+0;if(!f){h=5;break}jc[f&3]()}if((h|0)==5){h=Ya(4)|0;c[h>>2]=9640;pb(h|0,2800,251)}else if((h|0)==6){g[f>>2]=a;g[f+4>>2]=b;g[f+8>>2]=d;g[f+12>>2]=e;return f|0}return 0}function bn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return db(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function cn(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+52>>2]|0;if(!d)return;e=Eb[c[(c[d>>2]|0)+12>>2]&127](d)|0;e=Ob[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=c[a+52>>2]|0;d=Ob[c[(c[d>>2]|0)+16>>2]&63](d,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1213612625,c[a+52>>2]|0);return}function dn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=b>>31|((b|0)<0?-1:0)<<1;e=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;h=d>>31|((d|0)<0?-1:0)<<1;f=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=Ls(g^a|0,e^b|0,g|0,e|0)|0;b=C;return Ls(($e(a,b,Ls(h^c|0,f^d|0,h|0,f|0)|0,C,0)|0)^(h^g)|0,C^(f^e)|0,h^g|0,f^e|0)|0}function en(a){a=a|0;var b=0,d=0;d=i;i=i+32|0;cb(a|0)|0;if(kb(26248,3)|0)ej(21924,d);a=hb(c[6563]|0)|0;if((a|0?(b=c[a>>2]|0,b|0):0)?((c[b+48>>2]&-256|0)==1126902528?(c[b+48+4>>2]|0)==1129074247:0):0){jc[c[b+12>>2]&3]();ej(22248,d+8|0)}b=c[2387]|0;c[2387]=b+0;jc[b&3]();ej(22248,d+16|0)}function fn(){var a=0,d=0;while(1){a=yc(8)|0;if(a|0){d=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){d=5;break}jc[a&3]()}if((d|0)==5){d=Ya(4)|0;c[d>>2]=9640;pb(d|0,2800,251)}else if((d|0)==6){c[a>>2]=0;c[a+4>>2]=0;b[a+4>>1]=1;b[a+6>>1]=-1;c[a>>2]=2972;return a|0}return 0}function gn(a){a=a|0;var b=0.0,d=0.0,e=0.0,f=0.0;b=+g[(c[a+28>>2]|0)+344>>2];d=+g[(c[a+32>>2]|0)+344>>2];if(d==0.0)b=1.0;else b=b/(b+d);f=1.0-b;e=b*+g[a+1116>>2]+f*+g[a+1180>>2];d=b*+g[a+1120>>2]+f*+g[a+1184>>2];g[a+1284>>2]=b*+g[a+1112>>2]+f*+g[a+1176>>2];g[a+1288>>2]=e;g[a+1292>>2]=d;g[a+1296>>2]=0.0;return}function hn(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0,f=0.0,h=0.0;e=+g[a+28>>2];f=+g[a+32>>2];h=+g[a+36>>2];d=+g[b>>2];if(!(d<=e+c)){b=0;return b|0}if(!(d>=-e-c)){b=0;return b|0}d=+g[b+4>>2];if(!(d<=f+c)){b=0;return b|0}if(!(d>=-f-c)){b=0;return b|0}d=+g[b+8>>2];if(!(d<=h+c)){b=0;return b|0}b=d>=-h-c;return b|0}function jn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=+f;if(!(+g[b+36>>2]>f))return;a[b+40>>0]=1;c[b+4>>2]=c[d>>2];c[b+4+4>>2]=c[d+4>>2];c[b+4+8>>2]=c[d+8>>2];c[b+4+12>>2]=c[d+12>>2];c[b+20>>2]=c[e>>2];c[b+20+4>>2]=c[e+4>>2];c[b+20+8>>2]=c[e+8>>2];c[b+20+12>>2]=c[e+12>>2];g[b+36>>2]=f;return}function kn(a,d){a=a|0;d=d|0;var e=0,f=0;e=c[d>>2]|0;f=c[a+80>>2]|0;if((e|0)==(f|0)){a=0;return a|0}d=c[d+4>>2]|0;if(!((b[a+10>>1]&(d&65535))<<16>>16)){a=0;return a|0}if(!((b[a+8>>1]&(d>>>16&65535))<<16>>16)){a=0;return a|0}a=c[a+92>>2]|0;a=Ob[c[(c[a>>2]|0)+28>>2]&63](a,f,e)|0;return a|0}function ln(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;d=+g[b+32>>2];f=+g[b+28>>2];j=+g[c+4>>2];e=+g[c+8>>2];i=+O(+(j*j+e*e));if(i!=0.0){h=e*(d/i);e=+g[c>>2]<0.0?-f:f;d=j*(d/i)}else{h=0.0;e=+g[c>>2]<0.0?-f:f}g[a+4>>2]=d;g[a>>2]=e;g[a+8>>2]=h;return}function mn(a,b){a=a|0;b=+b;var c=0,d=0.0;c=i;i=i+16|0;if(!(+g[a+68>>2]>0.0)){i=c;return}d=-+g[a+92>>2];b=-+g[a+96>>2];g[c>>2]=-+g[a+88>>2];g[c+4>>2]=d;g[c+8>>2]=b;g[c+12>>2]=0.0;jj(a+4|0,c,a+164|0);jj(a+16|0,a+88|0,a+180|0);i=c;return}function nn(a){a=a|0;var b=0,d=0;while(1){b=yc(92)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){a=Ya(4)|0;c[a>>2]=9640;pb(a|0,2800,251)}else if((d|0)==6){Zd(b,a);return b|0}return 0}function on(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0;if((d|0)>-1|(d|0)==-1&c>>>0>4294967295){e=(+(c>>>0)+4294967296.0*+(d>>>0))*18446744073709551616.0+(+(a>>>0)+4294967296.0*+(b>>>0));return +e}else{g=Ls(0,0,a|0,b|0)|0;f=C;d=Pt((a|0)==0&(b|0)==0&1|0,0,~c|0,~d|0)|0;e=-+on(g,f,d,C);return +e}return 0.0}function pn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;d=+g[b+28>>2];h=+g[b+36>>2];j=+g[c>>2];f=+g[c+4>>2];i=+O(+(j*j+f*f));e=+g[c+8>>2];if(i!=0.0){f=f*(d/i);e=e<0.0?-h:h;d=j*(d/i)}else{f=0.0;e=e<0.0?-h:h}g[a>>2]=d;g[a+8>>2]=e;g[a+4>>2]=f;return}function qn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;d=+g[b+28>>2];h=+g[b+32>>2];j=+g[c>>2];f=+g[c+8>>2];i=+O(+(j*j+f*f));e=+g[c+4>>2];if(i!=0.0){f=f*(d/i);e=e<0.0?-h:h;d=j*(d/i)}else{f=0.0;e=e<0.0?-h:h}g[a>>2]=d;g[a+4>>2]=e;g[a+8>>2]=f;return}function rn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;f=c[a+8>>2]|0;a=c[f+8>>2]|0;if((a|0)<=0)return;e=0;do{d=c[(c[f+16>>2]|0)+(e*12|0)+8>>2]|0;if(d){Cb[c[(c[d>>2]|0)+16>>2]&127](d,b);a=c[f+8>>2]|0}e=e+1|0}while((e|0)<(a|0));return}function sn(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;switch(e|0){case 5:case -1:break;default:return}switch(b|0){case 2:{g[a+760>>2]=d;c[a+748>>2]=c[a+748>>2]|2;return}case 4:{g[a+756>>2]=d;c[a+748>>2]=c[a+748>>2]|1;return}case 3:{g[a+752>>2]=d;c[a+748>>2]=c[a+748>>2]|4;return}default:return}}function tn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+48|0;f=c[b+192>>2]|0;mc[c[(c[f>>2]|0)+8>>2]&127](f,b+4|0,e+32|0,e+16|0);c[e>>2]=5956;c[e+4>>2]=b;c[e+8>>2]=a;c[e+12>>2]=d;a=c[a+68>>2]|0;mc[c[(c[a>>2]|0)+28>>2]&127](a,e+32|0,e+16|0,e);i=e;return}function un(a,b,d){a=a|0;b=b|0;d=d|0;a:do switch(c[b+216>>2]|0){case 2:case 5:{switch(c[d+216>>2]|0){case 2:case 5:{b=0;break}default:break a}return b|0}default:{}}while(0);if(c[b+256>>2]|0?!(Zb[c[c[b>>2]>>2]&31](b,d)|0):0){a=0;return a|0}a=1;return a|0}function vn(){var a=0,b=0;while(1){a=yc(12)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){g[a>>2]=.30000001192092896;g[a+4>>2]=1.0;g[a+8>>2]=0.0;return a|0}return 0}function wn(a,b,d){a=a|0;b=b|0;d=d|0;si(a,b,d)|0;c[b+52>>2]=c[a+300>>2];c[b+56>>2]=c[a+304>>2];c[b+60>>2]=c[a+308>>2];c[b+64>>2]=c[a+312>>2];c[b+68>>2]=c[a+316>>2];c[b+72>>2]=c[a+320>>2];c[b+76>>2]=c[a+324>>2];c[b+80>>2]=c[a+328>>2];return 12599}function xn(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0;c[a+348>>2]=c[b>>2];c[a+348+4>>2]=c[b+4>>2];c[a+348+8>>2]=c[b+8>>2];c[a+348+12>>2]=c[b+12>>2];f=+g[a+344>>2];e=+g[a+352>>2]*f;d=+g[a+356>>2]*f;g[a+560>>2]=+g[a+348>>2]*f;g[a+564>>2]=e;g[a+568>>2]=d;g[a+572>>2]=0.0;return}function yn(a){a=a|0;c[a>>2]=1065353216;c[a+4>>2]=0;c[a+4+4>>2]=0;c[a+4+8>>2]=0;c[a+4+12>>2]=0;c[a+20>>2]=1065353216;c[a+24>>2]=0;c[a+24+4>>2]=0;c[a+24+8>>2]=0;c[a+24+12>>2]=0;c[a+40>>2]=1065353216;c[a+44>>2]=0;c[a+44+4>>2]=0;c[a+44+8>>2]=0;c[a+44+12>>2]=0;c[a+44+16>>2]=0;return}function zn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[b>>2]|0;a=c[d>>2]|0;a=(c[a+236>>2]|0)==4?a:0;if(!((f|0)==0?1:(c[f+236>>2]|0)!=4))mc[c[(c[f>>2]|0)+32>>2]&127](f,d,e,b);if(!a)return 0;mc[c[(c[a>>2]|0)+32>>2]&127](a,b,e,d);return 0}function An(a,b){a=a|0;b=b|0;var d=0;if(c[b+40>>2]|0){An(a,c[b+36>>2]|0);An(a,c[b+40>>2]|0)}if((c[a>>2]|0)==(b|0))c[a>>2]=0;d=c[a+4>>2]|0;if(!d){c[a+4>>2]=b;return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);c[a+4>>2]=b;return}function Bn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=c[a+32>>2]|0;c[g>>2]=(c[g>>2]|0)+1;Hg(a,Sd(a,b,f)|0);Hg(a,Sd(a,d,f)|0);Hg(a,Sd(a,e,f)|0);return}function Cn(a){a=a|0;var b=0,d=0;while(1){b=yc(8)|0;if(b|0){d=6;break}b=c[6564]|0;c[6564]=b+0;if(!b){d=5;break}jc[b&3]()}if((d|0)==5){a=Ya(4)|0;c[a>>2]=9640;pb(a|0,2800,251)}else if((d|0)==6){c[b>>2]=4852;c[b+4>>2]=a;return b|0}return 0}function Dn(a,b){a=a|0;b=b|0;var d=0,e=0;c[a+68>>2]=(c[a+68>>2]|0)+1;d=c[a+16>>2]|0;if((d|0)>0)do{e=d;d=d+-1|0;if((c[(c[a+24>>2]|0)+(d*80|0)+64>>2]|0)==(b|0))xe(a,d)}while((e|0)>1);Ab[c[(c[a>>2]|0)+68>>2]&255](a);return}function En(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do switch(c|0){case 5:case -1:switch(b|0){case 2:{d=+g[a+760>>2];break a}case 4:{d=+g[a+756>>2];break a}case 3:{d=+g[a+752>>2];break a}default:{d=0.0;break a}}default:d=0.0}while(0);return +d}function Fn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;c[f>>2]=a;c[f+4>>2]=e;a=c[a+72+((c[(c[b+4>>2]|0)+4>>2]|0)*144|0)+(c[(c[d+4>>2]|0)+4>>2]<<2)>>2]|0;a=Ib[c[(c[a>>2]|0)+8>>2]&31](a,f,b,d)|0;i=f;return a|0}function Gn(a,b){a=a|0;b=b|0;var d=0;a=c[a+64>>2]|0;if(!b)return;d=c[a+16>>2]|0;if(d>>>0<=b>>>0?(d+(_(c[a>>2]|0,c[a+4>>2]|0)|0)|0)>>>0>b>>>0:0){c[b>>2]=c[a+12>>2];c[a+12>>2]=b;c[a+8>>2]=(c[a+8>>2]|0)+1;return}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function Hn(a){a=a|0;var b=0,d=0;if((c[a+232>>2]|0)<=0)return;b=0;do{d=(c[(c[a+240>>2]|0)+(b<<2)>>2]|0)+412|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[d+28>>2]=0;b=b+1|0}while((b|0)<(c[a+232>>2]|0));return}function In(a){a=+a;var b=0;c[6435]=(c[6435]|0)+1;b=yc(71)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}c[b+8>>2]=0;c[b+12>>2]=1065353216;c[b+16>>2]=1065353216;c[b+20>>2]=1065353216;g[b+24>>2]=0.0;c[b>>2]=6672;c[b+4>>2]=8;g[b+28>>2]=a;g[b+44>>2]=a;return b|0}function Jn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+12>>2]|0;if((d|0)<=0)return;f=0;do{e=c[(c[a+20>>2]|0)+(f<<2)>>2]|0;if(e){Cb[c[(c[e>>2]|0)+16>>2]&127](e,b);d=c[a+12>>2]|0}f=f+1|0}while((f|0)<(d|0));return}function Kn(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0.0,f=0.0,h=0.0;e=+Q(+(b*.5));b=+R(+(b*.5));f=+Q(+(c*.5));c=+R(+(c*.5));h=+Q(+(d*.5));d=+R(+(d*.5));g[a>>2]=d*f*e-h*c*b;g[a+4>>2]=h*c*e+d*f*b;g[a+8>>2]=h*f*b-d*c*e;g[a+12>>2]=h*f*e+d*c*b;return}function Ln(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=c[a+32>>2]|0;c[f>>2]=(c[f>>2]|0)+1;Hg(a,Sd(a,b,0)|0);Hg(a,Sd(a,d,0)|0);Hg(a,Sd(a,e,0)|0);return}function Mn(a,b,d){a=a|0;b=b|0;d=d|0;c[a+52>>2]=c[b>>2];c[a+52+4>>2]=c[b+4>>2];c[a+52+8>>2]=c[b+8>>2];c[a+52+12>>2]=c[b+12>>2];c[a+68>>2]=c[d>>2];c[a+68+4>>2]=c[d+4>>2];c[a+68+8>>2]=c[d+8>>2];c[a+68+12>>2]=c[d+12>>2];c[a+48>>2]=1;return}function Nn(a,b,d){a=a|0;b=+b;d=+d;var e=0;e=i;i=i+32|0;g[e+20>>2]=b;g[e+16>>2]=d;g[e+12>>2]=0.0;g[e+8>>2]=1.0;c[a+444>>2]=c[(b<0.0?e+12|0:b>1.0?e+8|0:e+20|0)>>2];g[e+4>>2]=0.0;g[e>>2]=1.0;c[a+448>>2]=c[(d<0.0?e+4|0:d>1.0?e:e+16|0)>>2];i=e;return}function On(){var a=0,b=0;while(1){a=yc(196)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){Zh(a,0);return a|0}return 0}function Pn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[d>>2]=c[b+16>>2];c[d+4>>2]=c[b+16+4>>2];c[d+8>>2]=c[b+16+8>>2];c[d+12>>2]=c[b+16+12>>2];c[e>>2]=c[b+32>>2];c[e+4>>2]=c[b+32+4>>2];c[e+8>>2]=c[b+32+8>>2];c[e+12>>2]=c[b+32+12>>2];return}function Qn(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;g[a+692>>2]=(c-b)*.5;b=+eh((c-b)*.5+b,6.2831854820251465);if(!(b<-3.1415927410125732)){if(b>3.1415927410125732)b=b+-6.2831854820251465}else b=b+6.2831854820251465;g[a+688>>2]=b;g[a+696>>2]=d;g[a+700>>2]=e;g[a+704>>2]=f;return}function Rn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=c[a+4>>2]|0;if(!(h&1))i=h>>8;else i=c[(c[e>>2]|0)+(h>>8)>>2]|0;a=c[a>>2]|0;Qb[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e+i|0,h&2|0?f:2,g);return}function Sn(a,b){a=a|0;b=b|0;var d=0;a=c[a+64>>2]|0;d=c[a+8>>2]|0;if(d|0){b=c[a+12>>2]|0;c[a+12>>2]=c[b>>2];c[a+8>>2]=d+-1;return b|0}c[6435]=(c[6435]|0)+1;a=yc(b+19|0)|0;if(!a){b=0;return b|0}c[(a+4+15&-16)+-4>>2]=a;b=a+4+15&-16;return b|0}function Tn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(f&~3|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function Un(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[b>>2]|0;a=c[d>>2]|0;a=(c[a+236>>2]|0)==4?a:0;if(!((e|0)==0?1:(c[e+236>>2]|0)!=4))ic[c[(c[e>>2]|0)+28>>2]&127](e,d,b);if(!a)return 0;ic[c[(c[a>>2]|0)+28>>2]&127](a,b,d);return 0}function Vn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((a|0)==(c[b+8>>2]|0))Cl(b,d,e,f);else{a=c[a+8>>2]|0;Qb[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e,f,g)}return}function Wn(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[(c[b>>2]|0)+16>>2]|0;e=Eb[c[(c[a>>2]|0)+16>>2]&127](a)|0;e=Ob[d&63](b,e,1)|0;d=Ob[c[(c[a>>2]|0)+20>>2]&63](a,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1497645650,a);return}function Xn(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;g[a+692>>2]=(c-b)*.5;b=+eh((c-b)*.5+b,6.2831854820251465);if(!(b<-3.1415927410125732)){if(b>3.1415927410125732)b=b+-6.2831854820251465}else b=b+6.2831854820251465;g[a+688>>2]=b;g[a+696>>2]=d;g[a+700>>2]=e;g[a+704>>2]=1.0;return}function Yn(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+52>>2];c[b+4>>2]=c[a+52+4>>2];c[b+8>>2]=c[a+52+8>>2];c[b+12>>2]=c[a+52+12>>2];c[d>>2]=c[a+68>>2];c[d+4>>2]=c[a+68+4>>2];c[d+8>>2]=c[a+68+8>>2];c[d+12>>2]=c[a+68+12>>2];return}function Zn(a){a=a|0;var b=0,d=0,e=0;b=c[a+24>>2]|0;if((b|0)<=0)return;e=0;do{d=c[(c[a+32>>2]|0)+(e<<2)>>2]|0;switch(c[d+216>>2]|0){case 2:case 5:break;default:{Bg(d);b=c[a+24>>2]|0}}e=e+1|0}while((e|0)<(b|0));return}function _n(a,b){a=a|0;b=b|0;var d=0,e=0;e=Eb[c[(c[a>>2]|0)+16>>2]&127](a)|0;e=Ob[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=Ob[c[(c[a>>2]|0)+20>>2]&63](a,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1245859651,a);return}function $n(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+8>>2];c[b+4>>2]=c[a+8+4>>2];c[b+8>>2]=c[a+8+8>>2];c[b+12>>2]=c[a+8+12>>2];c[d>>2]=c[a+24>>2];c[d+4>>2]=c[a+24+4>>2];c[d+8>>2]=c[a+24+8>>2];c[d+12>>2]=c[a+24+12>>2];return}function ao(a,b){a=a|0;b=b|0;var d=0,e=0;e=Eb[c[(c[a>>2]|0)+52>>2]&127](a)|0;e=Ob[c[(c[b>>2]|0)+16>>2]&63](b,e,1)|0;d=Ob[c[(c[a>>2]|0)+56>>2]&63](a,c[e+8>>2]|0,b)|0;yb[c[(c[b>>2]|0)+20>>2]&31](b,e,d,1346455635,a);return}function bo(){var a=0,b=0;while(1){a=yc(4)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6){c[a>>2]=2920;return a|0}return 0}function co(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=c[a+4>>2]|0;if(!(g&1))h=g>>8;else h=c[(c[d>>2]|0)+(g>>8)>>2]|0;a=c[a>>2]|0;yb[c[(c[a>>2]|0)+24>>2]&31](a,b,d+h|0,g&2|0?e:2,f);return}function eo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,156)|0;Wj(a,b,d,e,1);return a|0}function fo(b){b=b|0;var d=0;c[b>>2]=5044;d=c[b+276>>2]|0;if(d|0){if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+276>>2]=0}a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b>>2]=5008;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function go(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;e=+g[a+344>>2];d=+g[b+4>>2]*+g[a+352>>2]*e;c=+g[b+8>>2]*+g[a+356>>2]*e;g[a+312>>2]=+g[a+312>>2]+ +g[b>>2]*+g[a+348>>2]*e;g[a+316>>2]=+g[a+316>>2]+d;g[a+320>>2]=+g[a+320>>2]+c;return}function ho(b){b=b|0;var d=0;c[b>>2]=4108;d=c[b+496>>2]|0;if(d|0){if(a[b+500>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+496>>2]=0}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;c[b>>2]=5008;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function io(a,b,d){a=a|0;b=b|0;d=d|0;c[b>>2]=c[a+892>>2];c[b+4>>2]=c[a+892+4>>2];c[b+8>>2]=c[a+892+8>>2];c[b+12>>2]=c[a+892+12>>2];c[d>>2]=c[a+908>>2];c[d+4>>2]=c[a+908+4>>2];c[d+8>>2]=c[a+908+8>>2];c[d+12>>2]=c[a+908+12>>2];return}function jo(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;c[6435]=(c[6435]|0)+1;i=yc(783)|0;if(!i)i=0;else{c[(i+4+15&-16)+-4>>2]=i;i=i+4+15&-16}ne(i,a,b,d,e,f,g,h);return i|0}function ko(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=0;while(1){if((d|0)==3)break;c=+eh(+g[b+(d<<2)>>2],6.2831854820251465);if(!(c<-3.1415927410125732)){if(c>3.1415927410125732)c=c+-6.2831854820251465}else c=c+6.2831854820251465;g[a+868+(d<<6)+4>>2]=c;d=d+1|0}return}function lo(b){b=b|0;var d=0;d=i;i=i+16|0;if((a[22472]|0)==0?Wa(22472)|0:0)_a(22472);Cb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[5726]=c[d>>2];c[5727]=c[d+4>>2];c[5728]=c[d+8>>2];c[5729]=c[d+12>>2];i=d;return 22904}function mo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;a:do if((c|0)==-1)switch(b|0){case 2:case 1:{d=+g[a+336>>2];break a}case 4:case 3:{d=+g[a+340>>2];break a}default:{d=3402823466385288598117041.0e14;break a}}else d=3402823466385288598117041.0e14;while(0);return +d}function no(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,156)|0;Wj(a,b,d,e,0);return a|0}function oo(b){b=b|0;var d=0;d=i;i=i+16|0;if((a[22432]|0)==0?Wa(22432)|0:0)_a(22432);Cb[c[(c[b>>2]|0)+76>>2]&127](d,b);c[5669]=c[d>>2];c[5670]=c[d+4>>2];c[5671]=c[d+8>>2];c[5672]=c[d+12>>2];i=d;return 22676}function po(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;f=+g[b+28>>2];e=+g[b+32>>2];e=+g[c+4>>2]>=0.0?e:-e;d=+g[b+36>>2];d=+g[c+8>>2]>=0.0?d:-d;g[a>>2]=+g[c>>2]>=0.0?f:-f;g[a+4>>2]=e;g[a+8>>2]=d;g[a+12>>2]=0.0;return}function qo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[a+4>>2]|0;if(!(f&1))g=f>>8;else g=c[(c[d>>2]|0)+(f>>8)>>2]|0;a=c[a>>2]|0;mc[c[(c[a>>2]|0)+28>>2]&127](a,b,d+g|0,f&2|0?e:2);return}function ro(b){b=b|0;var d=0;c[b>>2]=4872;d=c[b+140>>2]|0;if(d|0){if(a[b+144>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+140>>2]=0}a[b+144>>0]=1;c[b+140>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function so(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=0;while(1){if((d|0)==3)break;c=+eh(+g[b+(d<<2)>>2],6.2831854820251465);if(!(c<-3.1415927410125732)){if(c>3.1415927410125732)c=c+-6.2831854820251465}else c=c+6.2831854820251465;g[a+868+(d<<6)>>2]=c;d=d+1|0}return}function to(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,44)|0;Qm(a,b,d,e,1);return a|0}function uo(a,b){a=a|0;b=b|0;var d=0;d=c[a+4>>2]|0;if((c[b>>2]|0)!=(d|0)?(c[b+4>>2]|0)!=(d|0):0)return 0;d=c[a+8>>2]|0;ic[c[(c[d>>2]|0)+32>>2]&127](d,b,c[a+12>>2]|0);return 0}function vo(b){b=b|0;var d=0;c[b>>2]=9368;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function wo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[6435]=(c[6435]|0)+1;e=yc(343)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}je(e,a,b,d);return e|0}function xo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,44)|0;Qm(a,b,d,e,0);return a|0}function yo(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;c[6435]=(c[6435]|0)+1;h=yc(783)|0;if(!h)h=0;else{c[(h+4+15&-16)+-4>>2]=h;h=h+4+15&-16}ne(h,a,b,d,e,f,g,0);return h|0}function zo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Zb[c[(c[d>>2]|0)+40>>2]&31](d,a)|0;f=Zb[c[(c[d>>2]|0)+28>>2]&31](d,e)|0;c[b>>2]=f;if(f|0)Cb[c[(c[d>>2]|0)+48>>2]&127](d,e);c[b+4>>2]=c[a+4>>2];return 17222}function Ao(){var a=0,b=0;while(1){a=yc(1)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6)return a|0;return 0}function Bo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0;h=c[a+104>>2]|0;f=+g[h+(b<<4)+4>>2]*+g[a+16>>2];e=+g[h+(b<<4)+8>>2]*+g[a+20>>2];g[d>>2]=+g[h+(b<<4)>>2]*+g[a+12>>2];g[d+4>>2]=f;g[d+8>>2]=e;g[d+12>>2]=0.0;return}function Co(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;f=c[d>>2]|0;f=Zb[c[(c[f>>2]|0)+56>>2]&31](f,20)|0;b=a[b+4>>0]|0;c[f+4>>2]=c[d>>2];c[f>>2]=3612;a[f+16>>0]=b;return f|0}function Do(a,b,d){a=a|0;b=b|0;d=d|0;c[a+164>>2]=c[b>>2];c[a+164+4>>2]=c[b+4>>2];c[a+164+8>>2]=c[b+8>>2];c[a+164+12>>2]=c[b+12>>2];if((!(+g[b>>2]!=1.0)?!(+g[b+4>>2]!=1.0):0)?!(+g[b+8>>2]!=1.0):0)d=0;c[a+180>>2]=d;return}function Eo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;c[6435]=(c[6435]|0)+1;g=yc(1331)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16}Le(g,a,b,d,e,f);return g|0}function Fo(b){b=b|0;var d=0;d=i;i=i+16|0;if((a[22488]|0)==0?Wa(22488)|0:0)_a(22488);Wg(b,d);c[5751]=c[d>>2];c[5752]=c[d+4>>2];c[5753]=c[d+8>>2];c[5754]=c[d+12>>2];i=d;return 23004}function Go(){var a=0,b=0;while(1){a=yc(64)|0;if(a|0){b=6;break}a=c[6564]|0;c[6564]=a+0;if(!a){b=5;break}jc[a&3]()}if((b|0)==5){b=Ya(4)|0;c[b>>2]=9640;pb(b|0,2800,251)}else if((b|0)==6)return a|0;return 0}function Ho(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Io(b){b=b|0;var d=0;d=a[b+74>>0]|0;a[b+74>>0]=d+255|d;d=c[b>>2]|0;if(!(d&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);d=0}else{c[b>>2]=d|32;d=-1}return d|0}function Jo(a,b,d,e){a=a|0;b=b|0;d=+d;e=e|0;if((e|0)!=-1)return;switch(b|0){case 2:case 1:{g[a+336>>2]=d;c[a+332>>2]=c[a+332>>2]|1;return}case 4:case 3:{g[a+340>>2]=d;c[a+332>>2]=c[a+332>>2]|2;return}default:return}}function Ko(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;c[6435]=(c[6435]|0)+1;g=yc(135)|0;if(!g)g=0;else{c[(g+4+15&-16)+-4>>2]=g;g=g+4+15&-16}pe(g,a,b,d&65535,e,f);return g|0}function Lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((b|0)==(d|0))return;e=c[(c[a+4>>2]|0)+136>>2]|0;Ob[c[(c[e>>2]|0)+8>>2]&63](e,c[b+36>>2]|0,c[d+36>>2]|0)|0;a=(c[a+4>>2]|0)+160|0;c[a>>2]=(c[a>>2]|0)+1;return}function Mo(a){a=a|0;var b=0,d=0.0,e=0.0,f=0.0;b=i;i=i+32|0;ic[c[(c[a>>2]|0)+12>>2]&127](a,b+8|0,b);f=+g[b+8>>2];e=+g[b+8+4>>2];d=+g[b+8+8>>2];d=+O(+(f*f+e*e+d*d));i=b;return +(d+ +g[b>>2])}function No(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+g[b+4>>2]*+g[a+352>>2];c=+g[b+8>>2]*+g[a+356>>2];g[a+412>>2]=+g[a+412>>2]+ +g[b>>2]*+g[a+348>>2];g[a+416>>2]=+g[a+416>>2]+d;g[a+420>>2]=+g[a+420>>2]+c;return}function Oo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((e|0)>0)a=0;else return;do{b=d+(a<<4)|0;a=a+1|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0}while((a|0)!=(e|0));return}function Po(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;c[f>>2]=5204;c[f+4>>2]=d;c[f+8>>2]=a;ic[c[(c[b>>2]|0)+48>>2]&127](b,f,e);i=f;return}function Qo(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+g[b+4>>2]*+g[a+548>>2];c=+g[b+8>>2]*+g[a+552>>2];g[a+428>>2]=+g[a+428>>2]+ +g[b>>2]*+g[a+544>>2];g[a+432>>2]=+g[a+432>>2]+d;g[a+436>>2]=+g[a+436>>2]+c;return}function Ro(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0;f=+g[a>>2];e=+g[a+4>>2];d=+g[a+8>>2];c=+g[a+12>>2];b=1.0/+O(+(f*f+e*e+d*d+c*c));g[a>>2]=f*b;g[a+4>>2]=e*b;g[a+8>>2]=d*b;g[a+12>>2]=c*b;return}function So(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;c[6435]=(c[6435]|0)+1;f=yc(135)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}pe(f,a,b,d&65535,e,0);return f|0}function To(a,b,d){a=a|0;b=b|0;d=d|0;a=c[b+8>>2]|0;if(!((d|0)!=0&(a|0)!=0))return;Ab[c[c[a>>2]>>2]&255](a);Cb[c[(c[d>>2]|0)+60>>2]&127](d,c[b+8>>2]|0);c[b+8>>2]=0;return}function Uo(b){b=b|0;var d=0;c[b>>2]=5044;d=c[b+276>>2]|0;if(d|0){if(a[b+280>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+276>>2]=0}a[b+280>>0]=1;c[b+276>>2]=0;c[b+268>>2]=0;c[b+272>>2]=0;c[b>>2]=5008;return}function Vo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;i=i+16|0;c[e>>2]=8820;c[e+4>>2]=b;c[e+8>>2]=a;c[e+12>>2]=d;ic[c[(c[a>>2]|0)+48>>2]&127](a,e,d);i=e;return}function Wo(b){b=b|0;var d=0;c[b>>2]=6772;if(a[b+61>>0]|0?(d=c[b+52>>2]|0,Ab[c[c[d>>2]>>2]&255](d),d=c[b+52>>2]|0,d|0):0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function Xo(b){b=b|0;var d=0;c[b>>2]=4108;d=c[b+496>>2]|0;if(d|0){if(a[b+500>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+496>>2]=0}a[b+500>>0]=1;c[b+496>>2]=0;c[b+488>>2]=0;c[b+492>>2]=0;c[b>>2]=5008;return}function Yo(a){a=a|0;var b=0.0,d=0,e=0,f=0.0;e=c[a+712>>2]|0;if((e|0)<=0){b=0.0;return +b}a=c[a+720>>2]|0;d=0;b=0.0;do{f=+g[a+(d*104|0)+88>>2];b=b+(f>0.0?1.0/f:0.0);d=d+1|0}while((d|0)!=(e|0));return +b}function Zo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[6435]=(c[6435]|0)+1;e=yc(1331)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}qe(e,a,b,d);return e|0}function _o(b){b=b|0;var d=0;c[b>>2]=4872;d=c[b+140>>2]|0;if(d|0){if(a[b+144>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+140>>2]=0}a[b+144>>0]=1;c[b+140>>2]=0;c[b+132>>2]=0;c[b+136>>2]=0;return}function $o(a){a=a|0;var b=0;c[a>>2]=5508;c[a+12>>2]=5536;b=c[a+60>>2]|0;Cb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+76>>2]|0);b=c[a+60>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+76>>2]|0);hd(a);return}function ap(a,b,d){a=a|0;b=+b;d=d|0;b=b*.4000000059604645*+Sb[c[(c[a>>2]|0)+48>>2]&15](a);b=b*+Sb[c[(c[a>>2]|0)+48>>2]&15](a);g[d>>2]=b;g[d+4>>2]=b;g[d+8>>2]=b;g[d+12>>2]=0.0;return}function bp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,24)|0;c[a+4>>2]=c[b>>2];c[a>>2]=4080;return a|0}function cp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[6435]=(c[6435]|0)+1;e=yc(95)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}Ze(e,a,b,d);return e|0}function dp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[6435]=(c[6435]|0)+1;e=yc(135)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}pe(e,a,b,d&65535,0,0);return e|0}function ep(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[d>>2]=-581039253;c[d+4>>2]=-581039253;c[d+8>>2]=-581039253;g[d+12>>2]=0.0;c[e>>2]=1566444395;c[e+4>>2]=1566444395;c[e+8>>2]=1566444395;g[e+12>>2]=0.0;return}function fp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;c[6435]=(c[6435]|0)+1;f=yc(1271)|0;if(!f)f=0;else{c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16}Kc(f,a,b,d,e);return f|0}function gp(b){b=b|0;var d=0;c[b>>2]=8840;if(a[b+192>>0]|0?(d=c[b+136>>2]|0,Ab[c[c[d>>2]>>2]&255](d),d=c[b+136>>2]|0,d|0):0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}pi(b+64|0);pi(b+4|0);return}function hp(b){b=b|0;var d=0;c[b>>2]=9368;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function ip(a){a=a|0;var b=0;c[a>>2]=5508;c[a+12>>2]=5536;b=c[a+60>>2]|0;Cb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+76>>2]|0);b=c[a+60>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+76>>2]|0);return}function jp(b){b=b|0;var d=0;c[b>>2]=2996;d=c[b+32>>2]|0;if(d|0){if(a[b+36>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+32>>2]=0}a[b+36>>0]=1;c[b+32>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;return}function kp(a){a=a|0;var b=0,d=0;c[a>>2]=7124;b=c[a+52>>2]|0;if(b|0?(Ab[c[c[b>>2]>>2]&255](b),d=c[a+52>>2]|0,d|0):0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function lp(a,b){a=a|0;b=b|0;var d=0;d=(c[a+92>>2]|0)+4|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];vj(a);return}function mp(b,d){b=b|0;d=d|0;var e=0;if(a[b+273>>0]|0?(e=c[b+200>>2]|0,e|0):0){c[6436]=(c[6436]|0)+1;hd(c[e+-4>>2]|0)}a[b+273>>0]=0;c[b+200>>2]=d;c[(c[b+196>>2]|0)+8>>2]=d;return}function np(b){b=b|0;var d=0;c[b>>2]=5132;d=c[b+20>>2]|0;if(d|0){if(a[b+24>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+20>>2]=0}a[b+24>>0]=1;c[b+20>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;return}function op(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;a=c[b>>2]|0;a=Zb[c[(c[a>>2]|0)+56>>2]&31](a,8)|0;c[a+4>>2]=c[b>>2];c[a>>2]=9228;return a|0}function pp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[6435]=(c[6435]|0)+1;e=yc(783)|0;if(!e)e=0;else{c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16}Jf(e,a,b,d);return e|0}function qp(b){b=b|0;var d=0;c[b>>2]=8584;d=c[b+16>>2]|0;if(d|0){if(a[b+20>>0]|0){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+16>>2]=0}a[b+20>>0]=1;c[b+16>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;return}function rp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;a=c[b+8>>2]|0;b=c[a+284>>2]|0;ic[c[(c[b>>2]|0)+40>>2]&127](b,a,c[d+8>>2]|0);return}function sp(a,b){a=a|0;b=b|0;var d=0;c[6435]=(c[6435]|0)+1;d=yc(95)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Ze(d,a,b,1);return d|0}function tp(b,d){b=b|0;d=d|0;if((a[22448]|0)==0?Wa(22448)|0:0)_a(22448);c[5694]=c[b+(d<<4)>>2];c[5695]=c[b+(d<<4)+4>>2];c[5696]=c[b+(d<<4)+8>>2];c[5697]=c[b+(d<<4)+12>>2];return 22776}function up(b){b=b|0;var d=0;if(!b)return;d=c[b+68>>2]|0;if(d|0){if(!((a[b+72>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+68>>2]=0}a[b+72>>0]=1;hd(b);return}function vp(b){b=b|0;var d=0;c[b>>2]=6772;if(!(a[b+61>>0]|0))return;d=c[b+52>>2]|0;Ab[c[c[d>>2]>>2]&255](d);b=c[b+52>>2]|0;if(!b)return;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function wp(a,b,d){a=a|0;b=b|0;d=d|0;a=c[b+204>>2]|0;if(a&4|0){d=0;return d|0}b=c[d+204>>2]|0;if(b&4|0){d=0;return d|0}if(!(a&3)){d=1;return d|0}d=(b&3|0)==0;return d|0}function xp(a,b){a=a|0;b=b|0;var d=0;c[6435]=(c[6435]|0)+1;d=yc(135)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}pe(d,a,b,16384,0,0);return d|0}function yp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;i=i+16|0;c[e>>2]=8800;c[e+4>>2]=b;ic[c[(c[a>>2]|0)+48>>2]&127](a,e,d);i=e;return}function zp(b){b=b|0;var d=0,e=0;c[b>>2]=6004;if(!(a[b+8>>0]|0)){hd(b);return}d=c[b+12>>2]|0;if(!d){hd(b);return}e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+16>>2]&127](e,d);hd(b);return}function Ap(a){a=a|0;var b=0;c[6435]=(c[6435]|0)+1;b=yc(75)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}hi(b,a);c[b>>2]=8348;c[b+52>>2]=2;return b|0}function Bp(a){a=a|0;var b=0;c[6435]=(c[6435]|0)+1;b=yc(75)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}hi(b,a);c[b>>2]=8244;c[b+52>>2]=0;return b|0}function Cp(a){a=a|0;var b=0,d=0;d=i;i=i+16|0;c[d>>2]=c[a+60>>2];a=qb(6,d|0)|0;if(a>>>0>4294963200){if(true)b=25748;else b=c[(ib()|0)+64>>2]|0;c[b>>2]=0-a;a=-1}i=d;return a|0}function Dp(b){b=b|0;var d=0,e=0;c[b>>2]=9256;if(!(a[b+8>>0]|0)){hd(b);return}d=c[b+12>>2]|0;if(!d){hd(b);return}e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+16>>2]&127](e,d);hd(b);return}function Ep(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else bn(b,c,d)|0;return b|0}function Fp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=_(b&65535,a&65535)|0;e=(c>>>16)+(_(b&65535,a>>>16)|0)|0;d=_(b>>>16,a&65535)|0;return (C=(e>>>16)+(_(b>>>16,a>>>16)|0)+(((e&65535)+d|0)>>>16)|0,e+d<<16|c&65535|0)|0}function Gp(b){b=b|0;var d=0,e=0;c[b>>2]=5480;if(!(a[b+8>>0]|0)){hd(b);return}d=c[b+12>>2]|0;if(!d){hd(b);return}e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+16>>2]&127](e,d);hd(b);return}function Hp(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((a|0)==(c[b+8>>2]|0))Cl(b,d,e,f);return}function Ip(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0;e=+N(+(+g[b>>2]));d=+N(+(+g[b+4>>2]));c=+N(+(+g[b+8>>2]));g[a+12>>2]=e;g[a+16>>2]=d;g[a+20>>2]=c;g[a+24>>2]=0.0;return}function Jp(a,b){a=a|0;b=b|0;var d=0;c[6435]=(c[6435]|0)+1;d=yc(783)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Jf(d,a,b,0);return d|0}function Kp(a,b){a=a|0;b=b|0;Vf(a,c[b+36>>2]|0);return}function Lp(b){b=b|0;var d=0;if(!b)return;d=c[b+12>>2]|0;if(d|0){if(!((a[b+16>>0]&1)==0|(d|0)==0)){c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0)}c[b+12>>2]=0}a[b+16>>0]=1;hd(b);return}function Mp(b){b=b|0;var d=0,e=0;c[b>>2]=5576;if(!(a[b+8>>0]|0)){hd(b);return}d=c[b+12>>2]|0;if(!d){hd(b);return}e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+16>>2]&127](e,d);hd(b);return}function Np(a){a=a|0;var b=0;c[a>>2]=5536;b=c[a+48>>2]|0;Cb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+64>>2]|0);b=c[a+48>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+64>>2]|0);hd(a);return}function Op(a,b,c,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=+j;k=k|0;l=+l;m=m|0;dc[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,+j,k|0,+l,m|0)}function Pp(b){b=b|0;var d=0,e=0;c[b>>2]=6052;if(!(a[b+16>>0]|0)){hd(b);return}d=c[b+20>>2]|0;if(!d){hd(b);return}e=c[b+4>>2]|0;Cb[c[(c[e>>2]|0)+16>>2]&127](e,d);hd(b);return}function Qp(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0;c[6435]=(c[6435]|0)+1;f=yc(35)|0;c[(f+4+15&-16)+-4>>2]=f;f=f+4+15&-16;g[f>>2]=a;g[f+4>>2]=b;g[f+8>>2]=d;g[f+12>>2]=e;return f|0}function Rp(a){a=a|0;var b=0;c[a>>2]=7124;b=c[a+52>>2]|0;if(!b)return;Ab[c[c[b>>2]>>2]&255](b);b=c[a+52>>2]|0;if(!b)return;c[6436]=(c[6436]|0)+1;hd(c[b+-4>>2]|0);return}function Sp(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return +(+nb(0,a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0))}function Tp(a,b){a=a|0;b=b|0;if((b|0)==0?1:(c[b+236>>2]&2|0)==0){Hk(a,b);return}else{Cb[c[(c[a>>2]|0)+92>>2]&127](a,b);return}}function Up(a){a=a|0;var b=0;c[a>>2]=5536;b=c[a+48>>2]|0;Cb[c[(c[b>>2]|0)+20>>2]&127](b,c[a+64>>2]|0);b=c[a+48>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,c[a+64>>2]|0);return}function Vp(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function Wp(a,b,d){a=+a;b=+b;d=+d;var e=0;c[6435]=(c[6435]|0)+1;e=yc(35)|0;c[(e+4+15&-16)+-4>>2]=e;e=e+4+15&-16;g[e>>2]=a;g[e+4>>2]=b;g[e+8>>2]=d;g[e+12>>2]=0.0;return e|0}function Xp(a,b){a=a|0;b=b|0;c[a+12>>2]=c[b>>2];c[a+12+4>>2]=c[b+4>>2];c[a+12+8>>2]=c[b+8>>2];c[a+12+12>>2]=c[b+12>>2];vj(a);return}function Yp(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return Db[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function Zp(a,b){a=a|0;b=b|0;a=c[a+12>>2]|0;return Zb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0}function _p(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return +$b[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function $p(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+328>>2]=c[b>>2];c[a+328+4>>2]=c[b+4>>2];c[a+328+8>>2]=c[b+8>>2];c[a+328+12>>2]=c[b+12>>2];return}function aq(a,b,d){a=a|0;b=b|0;d=d|0;c[d>>2]=c[a+56+(b<<4)>>2];c[d+4>>2]=c[a+56+(b<<4)+4>>2];c[d+8>>2]=c[a+56+(b<<4)+8>>2];c[d+12>>2]=c[a+56+(b<<4)+12>>2];return}function bq(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+312>>2]=c[b>>2];c[a+312+4>>2]=c[b+4>>2];c[a+312+8>>2]=c[b+8>>2];c[a+312+12>>2]=c[b+12>>2];return}function cq(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;j=j|0;k=k|0;l=+l;Lb[a&0](b|0,c|0,d|0,e|0,+f,+g,+h,+i,j|0,k|0,+l)}function dq(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+544>>2]=c[b>>2];c[a+544+4>>2]=c[b+4>>2];c[a+544+8>>2]=c[b+8>>2];c[a+544+12>>2]=c[b+12>>2];return}function eq(a){a=a|0;var b=0.0,d=0.0;d=+g[a+32>>2];+Sb[c[(c[a>>2]|0)+48>>2]&15](a);b=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);+Sb[c[(c[a>>2]|0)+48>>2]&15](a);return +(d+b)}function fq(a){a=a|0;var b=0.0,d=0.0;d=+g[a+28>>2];b=+Sb[c[(c[a>>2]|0)+48>>2]&15](a);+Sb[c[(c[a>>2]|0)+48>>2]&15](a);+Sb[c[(c[a>>2]|0)+48>>2]&15](a);return +(d+b)}function gq(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;Yb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function hq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;i=i+16|0;c[e>>2]=c[d>>2];a=Ob[c[(c[a>>2]|0)+16>>2]&63](a,b,e)|0;if(a)c[d>>2]=c[e>>2];i=e;return a&1|0}function iq(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0;e=+g[a>>2];d=+g[a+4>>2];c=+g[a+8>>2];b=1.0/+O(+(e*e+d*d+c*c));g[a>>2]=e*b;g[a+4>>2]=d*b;g[a+8>>2]=c*b;return}function jq(a,b){a=a|0;b=b|0;var d=0;c[6435]=(c[6435]|0)+1;d=yc(191)|0;if(!d)d=0;else{c[(d+4+15&-16)+-4>>2]=d;d=d+4+15&-16}Yf(d,a,b);return d|0}function kq(b){b=b|0;var d=0;c[b>>2]=6004;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function lq(b){b=b|0;var d=0;c[b>>2]=9256;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function mq(a,b,c){a=a|0;b=b|0;c=+c;switch(b|0){case 3:{g[a+452>>2]=c;return}case 4:{g[a+448>>2]=c;return}case 5:{g[a+444>>2]=c;return}default:return}}function nq(b){b=b|0;var d=0;c[b>>2]=5480;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function oq(b){b=b|0;var d=0;c[b>>2]=2996;d=c[b+32>>2]|0;if(!d){hd(b);return}if(!(a[b+36>>0]|0)){hd(b);return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);hd(b);return}function pq(a,b){a=a|0;b=b|0;a=c[a+4>>2]|0;return ((c[b>>2]|0)==(a|0)?1:(c[b+4>>2]|0)==(a|0))|0}function qq(b){b=b|0;if(a[22512]|0)return 23132;if(!(Wa(22512)|0))return 23132;c[5783]=1065353216;c[5784]=1065353216;c[5785]=1065353216;g[5786]=0.0;_a(22512);return 23132}function rq(a,b){a=a|0;b=b|0;a=c[a+20>>2]|0;return Zb[c[(c[a>>2]|0)+8>>2]&31](a,b)|0}function sq(b){b=b|0;var d=0;c[b>>2]=5132;d=c[b+20>>2]|0;if(!d){hd(b);return}if(!(a[b+24>>0]|0)){hd(b);return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);hd(b);return}function tq(b){b=b|0;var d=0;c[b>>2]=5576;if(!(a[b+8>>0]|0))return;d=c[b+12>>2]|0;if(!d)return;b=c[b+4>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function uq(a){a=a|0;var b=0;c[6435]=(c[6435]|0)+1;b=yc(75)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}hi(b,a);return b|0}function vq(a,d){a=a|0;d=d|0;d=c[d+4>>2]|0;if(!((d&65535&b[a+6>>1])<<16>>16)){a=0;return a|0}a=(b[a+4>>1]&(d>>>16&65535))<<16>>16!=0;return a|0}function wq(a,d){a=a|0;d=d|0;d=c[d+4>>2]|0;if(!((d&65535&b[a+10>>1])<<16>>16)){a=0;return a|0}a=(b[a+8>>1]&(d>>>16&65535))<<16>>16!=0;return a|0}function xq(b){b=b|0;var d=0;c[b>>2]=6052;if(!(a[b+16>>0]|0))return;d=c[b+20>>2]|0;if(!d)return;b=c[b+4>>2]|0;Cb[c[(c[b>>2]|0)+16>>2]&127](b,d);return}function yq(a,b){a=a|0;b=+b;b=+eh(b,6.2831854820251465);if(!(b<-3.1415927410125732)){if(b>3.1415927410125732)b=b+-6.2831854820251465}else b=b+6.2831854820251465;g[a+196>>2]=b;return}function zq(a,b){a=a|0;b=+b;b=+eh(b,6.2831854820251465);if(!(b<-3.1415927410125732)){if(b>3.1415927410125732)b=b+-6.2831854820251465}else b=b+6.2831854820251465;g[a+192>>2]=b;return}function Aq(a,d){a=a|0;d=d|0;d=c[d+4>>2]|0;if(!((d&65535&b[a+14>>1])<<16>>16)){a=0;return a|0}a=(b[a+12>>1]&(d>>>16&65535))<<16>>16!=0;return a|0}function Bq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return gc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function Cq(b){b=b|0;var d=0;c[b>>2]=8584;d=c[b+16>>2]|0;if(!d){hd(b);return}if(!(a[b+20>>0]|0)){hd(b);return}c[6436]=(c[6436]|0)+1;hd(c[d+-4>>2]|0);hd(b);return}function Dq(a,b){a=a|0;b=b|0;b=c[b+36>>2]|0;Te(a,c[(c[(c[(c[a+4>>2]|0)+4>>2]|0)+24>>2]|0)+(b*80|0)+64>>2]|0,b);return}function Eq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return +bc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Fq(a){a=a|0;var b=0;c[6435]=(c[6435]|0)+1;b=yc(191)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}Yf(b,a,1);return b|0}function Gq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return +(+Kb[c[(c[a>>2]|0)+12>>2]&1](a,b,d,e,f,g,h,i))}function Hq(){var a=0;c[6435]=(c[6435]|0)+1;a=yc(131)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}kg(a,0,0,16);return a|0}function Iq(a){a=a|0;var b=0;c[6435]=(c[6435]|0)+1;b=yc(111)|0;if(!b)b=0;else{c[(b+4+15&-16)+-4>>2]=b;b=b+4+15&-16}Sj(b,a);return b|0}function Jq(a,b){a=a|0;b=b|0;Ab[c[(c[b>>2]|0)+32>>2]&255](b);td(a,b);Ab[c[(c[b>>2]|0)+36>>2]&255](b);return}function Kq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Xb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Lq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;ic[c[(c[a>>2]|0)+108>>2]&127](a,b,d);ic[c[(c[a>>2]|0)+108>>2]&127](a,(b+1|0)%3|0,e);return}function Mq(a,b){a=a|0;b=b|0;c[a+12>>2]=c[b>>2];c[a+12+4>>2]=c[b+4>>2];c[a+12+8>>2]=c[b+8>>2];c[a+12+12>>2]=c[b+12>>2];return}function Nq(a,b){a=a|0;b=b|0;c[a+44>>2]=c[b>>2];c[a+44+4>>2]=c[b+4>>2];c[a+44+8>>2]=c[b+8>>2];c[a+44+12>>2]=c[b+12>>2];return}function Oq(a,b){a=a|0;b=b|0;c[a+696>>2]=c[b>>2];c[a+696+4>>2]=c[b+4>>2];c[a+696+8>>2]=c[b+8>>2];c[a+696+12>>2]=c[b+12>>2];return}function Pq(a,b){a=a|0;b=b|0;c[a+680>>2]=c[b>>2];c[a+680+4>>2]=c[b+4>>2];c[a+680+8>>2]=c[b+8>>2];c[a+680+12>>2]=c[b+12>>2];return}function Qq(a,b){a=a|0;b=b|0;c[a+60>>2]=c[b>>2];c[a+60+4>>2]=c[b+4>>2];c[a+60+8>>2]=c[b+8>>2];c[a+60+12>>2]=c[b+12>>2];return}function Rq(a,b){a=a|0;b=b|0;c[a+28>>2]=c[b>>2];c[a+28+4>>2]=c[b+4>>2];c[a+28+8>>2]=c[b+8>>2];c[a+28+12>>2]=c[b+12>>2];return}function Sq(a,b){a=a|0;b=b|0;c[a+156>>2]=c[b>>2];c[a+156+4>>2]=c[b+4>>2];c[a+156+8>>2]=c[b+8>>2];c[a+156+12>>2]=c[b+12>>2];return}function Tq(b,c,d){b=b|0;c=c|0;d=d|0;a[b+1309+c>>0]=d&1;if((c|0)<3){a[b+788+c>>0]=d&1;return}else{a[b+868+(c+-3<<6)+44>>0]=d&1;return}}function Uq(a,b){a=a|0;b=b|0;c[a+108>>2]=c[b>>2];c[a+108+4>>2]=c[b+4>>2];c[a+108+8>>2]=c[b+8>>2];c[a+108+12>>2]=c[b+12>>2];return}function Vq(){var a=0;c[6435]=(c[6435]|0)+1;a=yc(191)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}Yf(a,1,1);return a|0}function Wq(){var a=0;c[6435]=(c[6435]|0)+1;a=yc(111)|0;if(!a)a=0;else{c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16}Sj(a,1);return a|0}function Xq(a,b){a=a|0;b=b|0;c[a+20>>2]=c[b>>2];c[a+20+4>>2]=c[b+4>>2];c[a+20+8>>2]=c[b+8>>2];c[a+20+12>>2]=c[b+12>>2];return}function Yq(a){a=a|0;var b=0;do{c[a+4>>2]=0;g[a+8>>2]=0.0;b=c[a+24>>2]|0;if(b|0)Yq(b);a=c[a+28>>2]|0}while((a|0)!=0);return}function Zq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;Kd(a,b,c,d,e,f);return}function _q(a,b){a=a|0;b=b|0;c[a+32>>2]=c[b>>2];c[a+32+4>>2]=c[b+4>>2];c[a+32+8>>2]=c[b+8>>2];c[a+32+12>>2]=c[b+12>>2];return}function $q(a,b){a=a|0;b=b|0;c[a+316>>2]=c[b>>2];c[a+316+4>>2]=c[b+4>>2];c[a+316+8>>2]=c[b+8>>2];c[a+316+12>>2]=c[b+12>>2];return}function ar(a,b){a=a|0;b=b|0;c[a+300>>2]=c[b>>2];c[a+300+4>>2]=c[b+4>>2];c[a+300+8>>2]=c[b+8>>2];c[a+300+12>>2]=c[b+12>>2];return}function br(a,b){a=a|0;b=b|0;c[a+24>>2]=c[b>>2];c[a+24+4>>2]=c[b+4>>2];c[a+24+8>>2]=c[b+8>>2];c[a+24+12>>2]=c[b+12>>2];return}function cr(a,b){a=a|0;b=b|0;c[a+64>>2]=c[b>>2];c[a+64+4>>2]=c[b+4>>2];c[a+64+8>>2]=c[b+8>>2];c[a+64+12>>2]=c[b+12>>2];return}function dr(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]-+g[b>>2];g[a+4>>2]=+g[a+4>>2]-+g[b+4>>2];g[a+8>>2]=+g[a+8>>2]-+g[b+8>>2];return a|0}function er(a,b){a=a|0;b=b|0;g[a>>2]=+g[a>>2]+ +g[b>>2];g[a+4>>2]=+g[a+4>>2]+ +g[b+4>>2];g[a+8>>2]=+g[a+8>>2]+ +g[b+8>>2];return a|0}function fr(a,b){a=a|0;b=b|0;c[a+52>>2]=c[b>>2];c[a+52+4>>2]=c[b+4>>2];c[a+52+8>>2]=c[b+8>>2];c[a+52+12>>2]=c[b+12>>2];return}function gr(a,b){a=a|0;b=b|0;c[a+40>>2]=c[b>>2];c[a+40+4>>2]=c[b+4>>2];c[a+40+8>>2]=c[b+8>>2];c[a+40+12>>2]=c[b+12>>2];return}function hr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return +Kb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function ir(a,b){a=a|0;b=b|0;c[a+16>>2]=c[b>>2];c[a+16+4>>2]=c[b+4>>2];c[a+16+8>>2]=c[b+8>>2];c[a+16+12>>2]=c[b+12>>2];return}function jr(a,b,d){a=a|0;b=b|0;d=+d;Cb[c[(c[a>>2]|0)+32>>2]&127](a,b);kc[c[(c[a>>2]|0)+36>>2]&7](a,b,d);return}function kr(a,b){a=a|0;b=b|0;c[a+68>>2]=c[b>>2];c[a+68+4>>2]=c[b+4>>2];c[a+68+8>>2]=c[b+8>>2];c[a+68+12>>2]=c[b+12>>2];return}function lr(a,b){a=a|0;b=b|0;c[a+36>>2]=c[b>>2];c[a+36+4>>2]=c[b+4>>2];c[a+36+8>>2]=c[b+8>>2];c[a+36+12>>2]=c[b+12>>2];return}function mr(a,b){a=a|0;b=b|0;c[a>>2]=c[b+248>>2];c[a+4>>2]=c[b+248+4>>2];c[a+8>>2]=c[b+248+8>>2];c[a+12>>2]=c[b+248+12>>2];return}function nr(a,b){a=a|0;b=b|0;c[a+48>>2]=c[b>>2];c[a+48+4>>2]=c[b+4>>2];c[a+48+8>>2]=c[b+8>>2];c[a+48+12>>2]=c[b+12>>2];return}function or(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;i=i+16|0;$e(a,b,d,e,f|0)|0;i=f;return (C=c[f+4>>2]|0,c[f>>2]|0)|0}function pr(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];return}function qr(a,b){a=a|0;b=b|0;c[a+72>>2]=c[b>>2];c[a+72+4>>2]=c[b+4>>2];c[a+72+8>>2]=c[b+8>>2];c[a+72+12>>2]=c[b+12>>2];return}function rr(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;g[a+(c[b+52>>2]<<2)>>2]=1.0;return}function sr(a){a=a|0;var b=0;b=i;i=i+16|0;hd(a);if(!(ob(c[6563]|0,0)|0)){i=b;return}else ej(21821,b)}function tr(a,b){a=a|0;b=b|0;c[a+8>>2]=c[b>>2];c[a+8+4>>2]=c[b+4>>2];c[a+8+8>>2]=c[b+8>>2];c[a+8+12>>2]=c[b+12>>2];return}function ur(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return rc(b,c,d,e)|0}function vr(){var a=0;c[6435]=(c[6435]|0)+1;a=yc(35)|0;if(!a){a=0;return a|0}c[(a+4+15&-16)+-4>>2]=a;a=a+4+15&-16;return a|0}function wr(a,b){a=a|0;b=b|0;if(!b?c[a+204>>2]&3|0:0)return;if((c[a+216>>2]&-2|0)!=4)c[a+216>>2]=1;g[a+220>>2]=0.0;return}function xr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a+-4>>2]|0)+8>>2]&127](a+-4|0,b,d,e);return}function yr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Fp(a,c)|0;f=C;return (C=(_(b,c)|0)+(_(d,a)|0)+f|f&0,e|0|0)|0}function zr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Wb[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Ar(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function Br(a){a=a|0;c[a>>2]=3640;c[a+12>>2]=3668;cg(a+12|0);pj(a+72|0);hd(a);return}function Cr(a,b){a=a|0;b=b|0;c[a+348>>2]=c[b>>2];c[a+348+4>>2]=c[b+4>>2];c[a+348+8>>2]=c[b+8>>2];return}function Dr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Qj(a,b,c,d);return}function Er(a,b){a=a|0;b=b|0;c[a>>2]=1065353216;c[a+4>>2]=1065353216;c[a+8>>2]=1065353216;g[a+12>>2]=0.0;return}function Fr(b){b=b|0;if(!(Eb[c[(c[b>>2]|0)+40>>2]&127](b)|0))return;c[b+16>>2]=c[b+28>>2];a[b+169>>0]=1;return}function Gr(a,b){a=a|0;b=b|0;var d=0;d=c[a+8>>2]|0;ic[c[d+60>>2]&127](b,d,c[a+4>>2]|0);return 0}function Hr(a,b){a=a|0;b=b|0;var d=0;d=a+92|0;do{c[a>>2]=c[b>>2];a=a+4|0;b=b+4|0}while((a|0)<(d|0));return}function Ir(a,b){a=a|0;b=b|0;c[a+480>>2]=b;if(!b)return;Cb[c[(c[b>>2]|0)+8>>2]&127](b,a+4|0);return}function Jr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Pg(a,b,c,d);return}function Kr(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return}function Lr(a){a=a|0;c[a>>2]=3640;c[a+12>>2]=3668;cg(a+12|0);pj(a+72|0);return}function Mr(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function Nr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Tb[a&3](b|0,c|0,d|0,e|0,f|0,g|0)|0}function Or(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=e;return}function Pr(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=(b|0)<0?-1:0;return b>>c-32|0}function Qr(a){a=a|0;lg(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Rr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+8>>2]&127](a,b,d,e);return}function Sr(a,b){a=a|0;b=+b;g[a>>2]=+g[a>>2]*b;g[a+4>>2]=+g[a+4>>2]*b;g[a+8>>2]=+g[a+8>>2]*b;return a|0}function Tr(a,b,d){a=a|0;b=b|0;d=d|0;Ae(c[a+116>>2]|0,c[a+144>>2]|0,b,d);return}function Ur(a,b,d){a=a|0;b=b|0;d=d|0;ic[c[(c[b>>2]|0)+64>>2]&127](a,b,d);return}function Vr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0.0}function Wr(a,b,d){a=a|0;b=+b;d=d|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;return}function Xr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+80>>2]&127](a,b,d,e);return}function Yr(){var a=0;a=i;i=i+16|0;if(!(mb(26252,255)|0)){i=a;return}else ej(21874,a)}function Zr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;return +Ub[a&3](b|0,c|0,d|0,+e,f|0,g|0)}function _r(a){a=a|0;if(c[a+204>>2]&3|0)return;if((c[a+216>>2]&-2|0)!=4)c[a+216>>2]=1;g[a+220>>2]=0.0;return}function $r(a,b){a=a|0;b=b|0;a=c[a+4>>2]|0;Zb[c[(c[a>>2]|0)+8>>2]&31](a,c[b+36>>2]|0)|0;return}function as(a){a=a|0;var b=0.0,c=0.0,d=0.0;d=+g[a>>2];c=+g[a+4>>2];b=+g[a+8>>2];return +(+O(+(d*d+c*c+b*b)))}function bs(a,b){a=a|0;b=b|0;c[a+260>>2]=(c[a+260>>2]|0)+1;c[a+192>>2]=b;c[a+200>>2]=b;return}function cs(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Qb[a&7](b|0,c|0,d|0,e|0,f|0,g|0)}function ds(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=+i;j=j|0;k=+k;l=l|0;ba(33)}function es(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+24>>2]&127](a,b,d,e);return}function fs(b,c,d,e){b=b|0;c=c|0;d=+d;e=+e;a[b+737>>0]=c&1;g[b+680>>2]=d;g[b+684>>2]=e;return}function gs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+88>>2]&127](a,b,d,e);return}function hs(a,b,d){a=a|0;b=b|0;d=d|0;ic[c[(c[b>>2]|0)+68>>2]&127](a,b,d);return}function is(b,d){b=b|0;d=d|0;b=(a[b+344>>0]|0)==0?3:0;c[d>>2]=b;c[d+4>>2]=b;return}function js(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+36>>2]&127](a,b,d,e);return}function ks(a,b,d){a=a|0;b=+b;d=d|0;return lc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,.01666666753590107)|0}function ls(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}C=a<<c-32;return 0}function ms(a,b,d){a=a|0;b=+b;d=d|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;return}function ns(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=0.0;return}function os(a,b,d,e){a=a|0;b=+b;d=d|0;e=+e;return lc[c[(c[a>>2]|0)+52>>2]&1](a,b,d,e)|0}function ps(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1065353216;g[a+12>>2]=0.0;return}function qs(a,b){a=a|0;b=b|0;c[a>>2]=1065353216;c[a+4>>2]=0;c[a+8>>2]=0;g[a+12>>2]=0.0;return}function rs(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=1065353216;c[a+8>>2]=0;g[a+12>>2]=0.0;return}function ss(a,b){a=a|0;b=b|0;ic[c[(c[a>>2]|0)+8>>2]&127](a,b,c[(c[a+8>>2]|0)+48>>2]|0);return}function ts(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Pb[a&0](b|0,c|0,d|0,e|0,f|0,+g)}function us(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;Bb[a&0](b|0,c|0,d|0,+e,f|0,g|0)}function vs(b,d,e){b=b|0;d=d|0;e=+e;g[(c[b+720>>2]|0)+(d*104|0)+88>>2]=e>0.0?1.0/e:0.0;a[b+924>>0]=1;return}function ws(a,b,d){a=a|0;b=b|0;d=+d;kc[c[(c[a>>2]|0)+20>>2]&7](a,b,d);return}function xs(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){C=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}C=0;return b>>>c-32|0}function ys(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+124>>2]&127](a,e,b,d);return}function zs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a+120>>2]=b;c[a+124>>2]=d;c[a+128>>2]=e;return}function As(a,b){a=a|0;b=b|0;return +(+g[a>>2]*+g[b>>2]+ +g[a+4>>2]*+g[b+4>>2]+ +g[a+8>>2]*+g[b+8>>2])}function Bs(a){a=a|0;qk(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Cs(a){a=a|0;Wl(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Ds(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;Gb[a&0](b|0,+c,+d,e|0,f|0,g|0)}function Es(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(29);return 0.0}function Fs(a,b,d){a=a|0;b=b|0;d=d|0;mc[c[(c[a>>2]|0)+36>>2]&127](a,b,d,-3);return}function Gs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 1.0}function Hs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function Is(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;mc[c[(c[a>>2]|0)+32>>2]&127](a,b,d,e);return}function Js(a){a=a|0;Sg(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Ks(){}function Ls(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (C=d,a-c>>>0|0)|0}function Ms(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Rf(a,b,c,d,e);return}function Ns(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Zf(a,b,c,d,e);return}function Os(b){b=b|0;if((c[b+56>>2]|0)==0?(a[b+44>>0]&1)==0:0){b=0;return b|0}b=1;return b|0}function Ps(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(5);return 0}function Qs(a,b){a=a|0;b=b|0;Yd(a,b);return}function Rs(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;i=i|0;j=j|0;k=+k;ba(13)}function Ss(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return +Mb[a&15](b|0,c|0,d|0,e|0,f|0)}function Ts(a,b,d){a=a|0;b=b|0;d=d|0;mc[c[(c[a>>2]|0)+36>>2]&127](a,b,d,-1);return}function Us(a,b){a=a|0;b=+b;return lc[c[(c[a>>2]|0)+52>>2]&1](a,b,1,.01666666753590107)|0}function Vs(a,b,d){a=a|0;b=b|0;d=d|0;ic[c[(c[a>>2]|0)+56>>2]&127](a,b,d);return}function Ws(a){a=a|0;c[a>>2]=3668;cg(a);pj(a+60|0);hd(a);return}function Xs(a,b,d){a=a|0;b=b|0;d=+d;kc[c[(c[a>>2]|0)+36>>2]&7](a,b,d);return}function Ys(a){a=a|0;wi(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Zs(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ba(26)}function _s(a){a=a|0;Cj(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function $s(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return +ec[a&3](b|0,c|0,+d,e|0,f|0)}function at(a){a=a|0;c[a>>2]=8060;if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function bt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;yb[a&31](b|0,c|0,d|0,e|0,f|0)}function ct(a){a=a|0;if(!(c[a+12>>2]|0)){a=0;return a|0}a=c[a+20>>2]|0;return a|0}function dt(a){a=a|0;ym(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function et(a,b,d){a=a|0;b=b|0;d=+d;zb[c[(c[a>>2]|0)+16>>2]&31](a,d);return}function ft(a,b){a=a|0;b=b|0;mc[c[(c[a>>2]|0)+36>>2]&127](a,b,2,-3);return}function gt(a,b,d){a=a|0;b=+b;d=d|0;Jb[c[(c[a>>2]|0)+32>>2]&15](a,b,d);return}function ht(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function it(a){a=a|0;xi(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function jt(a){a=a|0;Ai(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function kt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(31);return 0.0}function lt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ac[a&1](b|0,c|0,d|0,e|0,+f)}function mt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;Vb[a&0](b|0,c|0,+d,e|0,f|0)}function nt(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(36);return 0}function ot(a){a=a|0;if(!(+g[a+16>>2]==0.0)){a=0;return a|0}a=+g[a+20>>2]==0.0;return a|0}function pt(a){a=a|0;c[a>>2]=3668;cg(a);pj(a+60|0);return}function qt(a){a=a|0;c[a>>2]=4432;if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function rt(a){a=a|0;c[a>>2]=5008;if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function st(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+16>>2]&127](a,b);return}function tt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+40>>2]&127](a,b);return}function ut(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Zc(a,b,c,d)|0;return 1}function vt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+68>>2]&127](a,b);return}function wt(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+232>>2]=b;return}function xt(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+252>>2]=b;return}function yt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function zt(a,b){a=a|0;b=b|0;mc[c[(c[a>>2]|0)+36>>2]&127](a,b,1,-1);return}function At(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+64>>2]&127](a,b);return}function Bt(a,b,c){a=a|0;b=b|0;c=c|0;bi(b,c);return}function Ct(a){a=a|0;Bd(a);if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Dt(a,b){a=a|0;b=b|0;if((c[a+216>>2]&-2|0)==4)return;c[a+216>>2]=b;return}function Et(a,b){a=a|0;b=b|0;ic[c[(c[a>>2]|0)+56>>2]&127](a,b,0);return}function Ft(a,b){a=a|0;b=b|0;return Zb[c[(c[a>>2]|0)+40>>2]&31](a,b)|0}function Gt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+60>>2]&127](a,b);return}function Ht(a,b,d){a=a|0;b=b|0;d=+d;Cb[c[(c[a>>2]|0)+12>>2]&127](a,b);return}function It(a){a=a|0;a=c[a+68>>2]|0;return Eb[c[(c[a>>2]|0)+36>>2]&127](a)|0}function Jt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+92>>2]&127](a,b);return}function Kt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ib[a&31](b|0,c|0,d|0,e|0)|0}function Lt(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+232>>2]=b;return}function Mt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+32>>2]&127](a,b);return}function Nt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+128>>2]&127](a,b);return}function Ot(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ba(25)}function Pt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (C=b+d+(a+c>>>0>>>0<a>>>0|0)>>>0,a+c>>>0|0)|0}function Qt(a,b,d){a=a|0;b=+b;d=d|0;g[(c[a+144>>2]|0)+(d*284|0)+256>>2]=b;return}function Rt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+84>>2]&127](a,b);return}function St(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+28>>2]&127](a,b);return}function Tt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+124>>2]&127](a,b);return}function Ut(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return +fc[a&1](b|0,c|0,d|0,e|0)}function Vt(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+228>>2]=b;return}function Wt(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+72>>2]&127](a,b);return}function Xt(a){a=a|0;if(!a)return;Ab[c[(c[a>>2]|0)+8>>2]&255](a);return}function Yt(a,b){a=a|0;b=+b;g[a+36>>2]=b;g[a+40>>2]=+Q(+b);return}function Zt(a){a=a|0;if(!a)return;Ab[c[(c[a>>2]|0)+4>>2]&255](a);return}function _t(a,b){a=a|0;b=+b;return +(+Sb[c[(c[a>>2]|0)+16>>2]&15](a)*b)}function $t(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ba(12);return 0.0}function au(a,b){a=a|0;b=+b;c[a+260>>2]=(c[a+260>>2]|0)+1;g[a+224>>2]=b;return}function bu(a,b){a=a|0;b=b|0;c[a+176>>2]=(b|0)<0?0:(b|0)>2?2:b;return}function cu(a,b){a=a|0;b=b|0;Se(a,b);return}function du(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+8>>2]&127](a,b);return}function eu(a,b,c){a=a|0;b=+b;c=+c;g[a+472>>2]=b;g[a+476>>2]=c;return}function fu(a,b,c){a=a|0;b=b|0;c=c|0;Ii(a,b,c);return}function gu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;mc[a&127](b|0,c|0,d|0,e|0)}function hu(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+12>>2]&127](a,b);return}function iu(a,b,c){a=a|0;b=b|0;c=c|0;gj(a,b,c);return}function ju(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+68>>2]&127](a,b);return}function ku(b,c){b=b|0;c=+c;g[b+572>>2]=c;a[b+553>>0]=1;return}function lu(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+24>>2]&127](a,b);return}function mu(a,b,d){a=a|0;b=b|0;d=d|0;c[a+20>>2]=b;c[a+28>>2]=d;return}function nu(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=b;c[a+24>>2]=d;return}function ou(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function pu(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=+e;return lc[a&1](b|0,+c,d|0,+e)|0}function qu(a,b){a=a|0;b=b|0;Cb[c[(c[a>>2]|0)+64>>2]&127](a,b);return}function ru(a,b,c){a=a|0;b=b|0;c=+c;g[a+1340+(b<<2)>>2]=c;return}function su(a,b,c){a=a|0;b=b|0;c=c|0;return sc(a,b,c)|0}function tu(a,b,c){a=a|0;b=b|0;c=+c;g[a+1364+(b<<2)>>2]=c;return}function uu(a,b){a=a|0;b=b|0;xe(a,b);return}function vu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;hc[a&15](b|0,c|0,d|0,+e)}function wu(a,b){a=a|0;b=+b;g[a+132>>2]=b;return}function xu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;Fb[a&7](b|0,c|0,+d,e|0)}function yu(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;Hb[a&0](b|0,+c,d|0,e|0)}function zu(a,b){a=a|0;b=+b;g[a+128>>2]=b;return}function Au(a,b){a=a|0;b=b|0;c[a+24>>2]=b;return}function Bu(a,b){a=a|0;b=b|0;g[a+48>>2]=+(b|0);return}function Cu(b,c){b=b|0;c=+c;g[b+572>>2]=c;a[b+553>>0]=0;return}function Du(a,b){a=a|0;b=b|0;return c[(c[a+24>>2]|0)+(b*80|0)+64>>2]|0}function Eu(a,b){a=a|0;b=b|0;return c[(c[a+20>>2]|0)+(b<<2)>>2]|0}function Fu(a){a=a|0;return Eb[c[(c[a>>2]|0)+40>>2]&127](a)|0}function Gu(a){a=a|0;if(!a)return;c[6436]=(c[6436]|0)+1;hd(c[a+-4>>2]|0);return}function Hu(a,b){a=a|0;b=+b;zb[c[(c[a>>2]|0)+44>>2]&31](a,b);return}function Iu(a,b){a=a|0;b=+b;g[a+136>>2]=b;return}function Ju(a,b){a=a|0;b=b|0;return c[(c[a+276>>2]|0)+(b<<2)>>2]|0}function Ku(a,b){a=a|0;b=b|0;return (c[a+144>>2]|0)+(b*284|0)+92|0}function Lu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function Mu(a){a=a|0;Ab[c[(c[a>>2]|0)+44>>2]&255](a);return}function Nu(b,c){b=b|0;c=c|0;a[b+32>>0]=c&1;return}function Ou(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ob[a&63](b|0,c|0,d|0)|0}function Pu(a,b){a=a|0;b=b|0;Ii(a,b,1);return}function Qu(a){a=a|0;if(!a)a=0;else a=(wj(a,2832)|0)!=0;return a&1|0}function Ru(a,b){a=a|0;b=+b;g[a+116>>2]=b;return}function Su(a,b){a=a|0;b=+b;g[a+112>>2]=b;return}function Tu(a,b){a=a|0;b=+b;g[a+124>>2]=b;return}function Uu(a){a=a|0;Tj(a);hd(a);return}function Vu(a,b){a=a|0;b=b|0;return c[(c[a+220>>2]|0)+(b<<2)>>2]|0}function Wu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return +_b[a&15](b|0,c|0,d|0)}function Xu(a,b){a=a|0;b=b|0;return sc(a,b,8192)|0}function Yu(b,c){b=b|0;c=c|0;a[b+120>>0]=c&1;return}function Zu(b,c){b=b|0;c=c|0;a[b+170>>0]=c&1;return}function _u(a){a=a|0;return Eb[c[(c[a>>2]|0)+36>>2]&127](a)|0}function $u(a){a=a|0;return Eb[c[(c[a>>2]|0)+48>>2]&127](a)|0}function av(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return}function bv(a,b){a=a|0;b=b|0;ul(a,b);return}function cv(a,b){a=a|0;b=b|0;Wg(a,b);return}function dv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;return Rb[a&7](b|0,c|0,+d)|0}function ev(a){a=a|0;return +(+g[a+132>>2])}function fv(a){a=a|0;return +(+g[a+128>>2])}function gv(a,b){a=a|0;b=b|0;return (c[a+144>>2]|0)+(b*284|0)|0}function hv(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ba(24)}function iv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ic[a&127](b|0,c|0,d|0)}function jv(a,b){a=a|0;b=+b;g[a+104>>2]=b;return}function kv(a,b){a=a|0;b=b|0;c[b+748>>2]=0;return}function lv(a,b){a=a|0;b=+b;g[a+96>>2]=b;return}function mv(a){a=a|0;return +(+Sb[c[(c[a>>2]|0)+48>>2]&15](a))}function nv(a,c){a=a|0;c=c|0;b[a+10>>1]=c;return}function ov(a,c){a=a|0;c=c|0;b[a+8>>1]=c;return}function pv(a){a=a|0;Lj(a);hd(a);return}function qv(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function rv(a,b){a=a|0;b=b|0;return c[(c[a+12>>2]|0)+(b<<2)>>2]|0}function sv(a,b){a=a|0;b=b|0;Pd(a,b);return}function tv(a,b){a=a|0;b=+b;g[a+92>>2]=b;return}function uv(a){a=a|0;return +(+g[a+136>>2])}function vv(b){b=b|0;return (a[b+32>>0]&1)!=0|0}function wv(a,b){a=a|0;b=+b;g[a+108>>2]=b;return}function xv(a,b){a=a|0;b=b|0;return a+868+(b<<6)|0}function yv(a,c){a=a|0;c=c|0;b[a+12>>1]=c;return}function zv(b,c){b=b|0;c=c|0;a[b+44>>0]=c&1;return}function Av(a,c){a=a|0;c=c|0;b[a+14>>1]=c;return}function Bv(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(21);return 0}function Cv(a,b){a=a|0;b=b|0;return ((c[b+236>>2]&2|0)==0?0:b)|0}function Dv(a,b){a=a|0;b=b|0;c[a+44>>2]=b&1;return}function Ev(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;Jb[a&15](b|0,+c,d|0)}function Fv(a,b){a=a|0;b=+b;g[a+220>>2]=b;return}function Gv(a,b){a=a|0;b=+b;g[a+100>>2]=b;return}function Hv(b){b=b|0;return (a[b+120>>0]&1)!=0|0}function Iv(b,c){b=b|0;c=c|0;a[b+24>>0]=c&1;return}function Jv(a){a=a|0;return ~~+g[a+48>>2]|0}function Kv(b,c){b=b|0;c=c|0;a[b+180>>0]=c&1;return}function Lv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;kc[a&7](b|0,c|0,+d)}function Mv(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ba(22);return 0.0}function Nv(a,b){a=a|0;b=+b;g[a+224>>2]=b;return}function Ov(a){a=a|0;a=c[a+216>>2]|0;return (a|0)!=5&(a|0)!=2|0}function Pv(b,c){b=b|0;c=c|0;a[b+524>>0]=c&1;return}function Qv(a){a=a|0;return +(+g[a+116>>2])}function Rv(b,c){b=b|0;c=c|0;a[b+16>>0]=c&1;return}function Sv(a,b){a=a|0;b=+b;g[a+276>>2]=b;return}function Tv(a,b){a=a|0;b=+b;g[a+204>>2]=b;return}function Uv(a,b){a=a|0;b=+b;g[a+208>>2]=b;return}function Vv(a){a=a|0;return +(+g[a+124>>2])}function Wv(a,b,c){a=a|0;b=+b;c=c|0;return}function Xv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function Yv(a,b){a=a|0;b=b|0;return ((c[b+236>>2]|0)==8?b:0)|0}function Zv(b,c){b=b|0;c=c|0;a[b+552>>0]=c&1;return}function _v(a,b){a=a|0;b=+b;g[a+216>>2]=b;return}function $v(a,b){a=a|0;b=b|0;c[a+36>>2]=b;return}function aw(a,b){a=a|0;b=b|0;c[a+32>>2]=b;return}function bw(a,b){a=a|0;b=b|0;return a+4+(b*184|0)|0}function cw(b,c){b=b|0;c=c|0;a[b+736>>0]=c&1;return}function dw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return $e(a,b,c,d,0)|0}function ew(a){a=a|0;kf(a);hd(a);return}function fw(b,c){b=b|0;c=c|0;a[b+260>>0]=c&1;return}function gw(b,c){b=b|0;c=c|0;a[b+21>>0]=c&1;return}function hw(a){a=a|0;return !(+g[a>>2]>+g[a+4>>2])|0}function iw(a,b){a=a|0;b=+b;g[a+684>>2]=b;return}function jw(b,c){b=b|0;c=c|0;a[b+25>>0]=c&1;return}function kw(a,b,c){a=a|0;b=+b;c=c|0;return}function lw(a,b){a=a|0;b=b|0;c[a+72>>2]=b;return}function mw(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;Nb[a&7](b|0,+c,+d)}function nw(a,b){a=a|0;b=+b;g[a+188>>2]=b;return}function ow(a,b){a=a|0;b=+b;g[a+184>>2]=b;return}function pw(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function qw(a,b){a=a|0;b=b|0;return (c[a+12>>2]|0)+(b*104|0)|0}function rw(a,b){a=a|0;b=+b;g[a+248>>2]=b;return}function sw(b,c){b=b|0;c=c|0;a[b+737>>0]=c&1;return}function tw(a,b){a=a|0;b=b|0;c[a+216>>2]=b;return}function uw(b,c){b=b|0;c=c|0;a[b+26>>0]=c&1;return}function vw(b,c){b=b|0;c=c|0;a[b+84>>0]=c&1;return}function ww(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(18)}function xw(a){a=a|0;return (a&255)<<24|(a>>8&255)<<16|(a>>16&255)<<8|a>>>24|0}function yw(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function zw(a,b){a=a|0;b=+b;g[a+440>>2]=b;return}function Aw(a,b,c){a=a|0;b=b|0;c=c|0;return Zb[a&31](b|0,c|0)|0}function Bw(a,b){a=a|0;b=+b;g[a+244>>2]=b;return}function Cw(a){a=a|0;return +(+g[a+104>>2])}function Dw(a){a=a|0;yk(a);hd(a);return}function Ew(a){a=a|0;Xk(a);hd(a);return}function Fw(a,b){a=a|0;b=+b;g[a+212>>2]=b;return}function Gw(a,b){a=a|0;b=+b;g[a+228>>2]=b;return}function Hw(a,b){a=a|0;b=b|0;c[a+204>>2]=b;return}function Iw(b){b=b|0;return (a[b+44>>0]&1)!=0|0}function Jw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ba(17)}function Kw(a,b){a=a|0;b=+b;g[a+252>>2]=b;return}function Lw(a){a=a|0;return +(+g[a+96>>2])}function Mw(a){a=a|0;return (c[a+44>>2]|0)!=0|0}function Nw(a){a=a|0;xk(a);hd(a);return}function Ow(a){a=a|0;return +(+g[a+92>>2])}function Pw(b){b=b|0;return (a[b+24>>0]&1)!=0|0}function Qw(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function Rw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;ba(3)}function Sw(a){a=a|0;return +(+g[a+108>>2])}function Tw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(14);return 0.0}function Uw(a,b){a=a|0;b=+b;g[a+232>>2]=b;return}function Vw(b){b=b|0;return (a[b+16>>0]&1)!=0|0}function Ww(a,b){a=a|0;b=b|0;c[a>>2]=b;return}function Xw(a){a=a|0;return b[a+10>>1]|0}function Yw(a){a=a|0;return b[a+8>>1]|0}function Zw(a,b){a=a|0;b=b|0;c[a+240>>2]=b;return}function _w(a){a=a|0;zk(a);hd(a);return}function $w(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=d|0;e=e|0;f=f|0;ba(8)}function ax(a){a=a|0;return +(+g[a+220>>2])}function bx(a){a=a|0;return (c[a+204>>2]&2|0)!=0|0}function cx(a){a=a|0;return +(+g[a+100>>2])}function dx(a){a=a|0;return b[a+12>>1]|0}function ex(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ba(34);return 0.0}function fx(a){a=a|0;return +(+g[a+224>>2])}function gx(a){a=a|0;return ph(a)|0}function hx(a){a=a|0;return b[a+14>>1]|0}function ix(a,b){a=a|0;b=b|0;c[a+84>>2]=b;return}function jx(a,b){a=a|0;b=b|0;c[a+88>>2]=b;return}function kx(a,b){a=a|0;b=b|0;c[a+92>>2]=b;return}function lx(a,b){a=a|0;b=b|0;c[a+100>>2]=b;return}function mx(a,b){a=a|0;b=b|0;c[a+96>>2]=b;return}function nx(a){a=a|0;return (c[a+48>>2]|0)==1|0}function ox(a,b){a=a|0;b=b|0;if(!n){n=a;o=b}}function px(b){b=b|0;return (a[b+260>>0]&1)!=0|0}function qx(b){b=b|0;return (a[b+25>>0]&1)!=0|0}function rx(a){a=a|0;return (c[a+92>>2]|0)+4|0}function sx(a,b,c){a=a|0;b=b|0;c=c|0;Cb[a&127](b|0,c|0)}function tx(a,b,c){a=a|0;b=b|0;c=+c;return +cc[a&1](b|0,+c)}function ux(a){a=a|0;return +(+g[a+276>>2])}function vx(a){a=a|0;return +(+g[a+204>>2])}function wx(a){a=a|0;return +(+g[a+208>>2])}function xx(a,b){a=a|0;b=b|0;c[a+16>>2]=b;return}function yx(a,b){a=a|0;b=+b;g[a+64>>2]=b;return}function zx(a,b){a=a|0;b=+b;g[a+68>>2]=b;return}function Ax(a){a=a|0;Ak(a);hd(a);return}function Bx(a){a=a|0;return +(+g[a+112>>2])}function Cx(a){a=a|0;return +(+g[a+216>>2])}function Dx(a){a=a|0;return c[a+268>>2]|0}function Ex(b){b=b|0;return (a[b+26>>0]&1)!=0|0}function Fx(b){b=b|0;return (a[b+84>>0]&1)!=0|0}function Gx(a,b){a=a|0;b=+b;g[a+80>>2]=b;return}function Hx(a,b){a=a|0;b=+b;g[a+76>>2]=b;return}function Ix(a){a=a|0;return +(+g[a+28>>2]*+g[a+12>>2])}function Jx(a,b,c){a=a|0;b=b|0;c=c|0;return}function Kx(a){a=a|0;return +(+g[a+248>>2])}function Lx(a){a=a|0;if(!a)return;hd(a);return}function Mx(a,b){a=a|0;b=+b;g[a+60>>2]=b;return}function Nx(a,b){a=a|0;b=+b;g[a+52>>2]=b;return}function Ox(a,b){a=a|0;b=+b;g[a+56>>2]=b;return}function Px(a,b,c){a=a|0;b=b|0;c=+c;return 0}function Qx(a,b){a=a|0;b=b|0;return}function Rx(a){a=a|0;return c[a+36>>2]|0}function Sx(a){a=a|0;return c[a+32>>2]|0}function Tx(a){a=a|0;return c[a+748>>2]|0}function Ux(a){a=a|0;return (c[a+48>>2]|0)+4|0}function Vx(a){a=a|0;return +(+g[a+120>>2])}function Wx(a){a=a|0;return a+44|0}function Xx(a,b,c){a=a|0;b=b|0;c=+c;zb[a&31](b|0,+c)}function Yx(a){a=a|0;return c[a+8>>2]|0}function Zx(a){a=a|0;return (c[a+8>>2]|0)!=0|0}function _x(a,b){a=a|0;b=+b;g[a+40>>2]=b;return}function $x(a,b){a=a|0;b=+b;g[a+36>>2]=b;return}function ay(a,b){a=a|0;b=+b;g[a+48>>2]=b;return}function by(a){a=a|0;return a+60|0}function cy(a){a=a|0;return c[a+200>>2]|0}function dy(a){a=a|0;return +(+g[a+244>>2])}function ey(a){a=a|0;return +g[a+4>>2]<1.0|0}function fy(a,b){a=a|0;b=+b;g[a+24>>2]=b;return}function gy(a,b){a=a|0;b=+b;g[a+20>>2]=b;return}function hy(a,b){a=a|0;b=+b;g[a+32>>2]=b;return}function iy(a,b){a=a|0;b=+b;g[a+16>>2]=b;return}function jy(a,b){a=a|0;b=+b;g[a+28>>2]=b;return}function ky(a){a=a|0;return c[a+212>>2]|0}function ly(a){a=a|0;c[a+192>>2]=0;return}function my(a,b,c){a=a|0;b=b|0;c=c|0;return}function ny(a,b){a=a|0;b=+b;g[a+72>>2]=b;return}function oy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(0)}function py(a){a=a|0;return +(+g[a+212>>2])}function qy(a){a=a|0;return +(+g[a+228>>2])}function ry(a,b){a=a|0;b=+b;g[a+8>>2]=b;return}function sy(a,b){a=a|0;b=+b;g[a+4>>2]=b;return}function ty(a,b){a=a|0;b=+b;g[a+12>>2]=b;return}function uy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;ba(30)}function vy(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;ba(23)}function wy(a){a=a|0;return +(+g[a+252>>2])}function xy(a,b){a=a|0;b=+b;g[a+44>>2]=b;return}function yy(a){a=a|0;return a+156|0}function zy(a){a=a|0;return c[a+116>>2]|0}function Ay(a){a=a|0;return c[a+136>>2]|0}function By(a){a=a|0;return c[a+744>>2]|0}function Cy(a){a=a|0;return c[a+740>>2]|0}function Dy(a){a=a|0;return a+20|0}function Ey(a){a=a|0;return a+324|0}function Fy(a){a=a|0;return c[a+192>>2]|0}function Gy(a){a=a|0;return c[a+204>>2]|0}function Hy(a){a=a|0;return c[a+24>>2]|0}function Iy(a){a=a|0;return c[a+68>>2]|0}function Jy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(35);return 0.0}function Ky(a){a=a|0;return +(+g[a+232>>2])}function Ly(a,b){a=a|0;b=+b;g[a>>2]=b;return}function My(a){a=a|0;return 348}function Ny(a){a=a|0;return c[a+12>>2]|0}function Oy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(10);return 0}function Py(a){a=a|0;return c[a+480>>2]|0}function Qy(a){a=a|0;Ci(a);hd(a);return}function Ry(a){a=a|0;gp(a);hd(a);return}function Sy(a){a=a|0;_j(a);hd(a);return}function Ty(a){a=a|0;return a+352|0}function Uy(a){a=a|0;return a+348|0}function Vy(a){a=a|0;return c[a>>2]|0}function Wy(a,b){a=a|0;b=b|0;return Eb[a&127](b|0)|0}function Xy(a){a=a|0;return c[a+240>>2]|0}function Yy(a){a=a|0;return a+24|0}function Zy(a){a=a|0;return a+316|0}function _y(a){a=a|0;return a+300|0}function $y(a){a=a|0;return a+64|0}function az(a){a=a|0;return +(+g[a+64>>2])}function bz(a){a=a|0;return +(+g[a+68>>2])}function cz(a){a=a|0;return a+32|0}function dz(a){a=a|0;return c[a+84>>2]|0}function ez(a){a=a|0;return c[a+88>>2]|0}function fz(a){a=a|0;return c[a+92>>2]|0}function gz(a){a=a|0;return c[a+100>>2]|0}function hz(a){a=a|0;return 252}function iz(a,b,c,d){a=a|0;b=+b;c=c|0;d=+d;ba(41);return 0}function jz(a){a=a|0;return a+52|0}function kz(a){a=a|0;return +(+g[a+80>>2])}function lz(a){a=a|0;return +(+g[a+76>>2])}function mz(a){a=a|0;return 28}function nz(a){a=a|0;return c[a+72>>2]|0}function oz(a,b){a=a|0;b=b|0;return +Sb[a&15](b|0)}function pz(a){a=a|0;return a+40|0}function qz(a){a=a|0;return c[a+16>>2]|0}function rz(a){a=a|0;return +(+g[a+60>>2])}function sz(a){a=a|0;return +(+g[a+52>>2])}function tz(a){a=a|0;return +(+g[a+56>>2])}function uz(a){a=a|0;return a+108|0}function vz(a){a=a|0;return 212}function wz(a){a=a|0;return c[a+96>>2]|0}function xz(a){a=a|0;return a+92|0}function yz(a){a=a|0;return a+16|0}function zz(a,b){a=a|0;b=b|0;return 1}function Az(a){a=a|0;return a+328|0}function Bz(a){a=a|0;return a+28|0}function Cz(a,b){a=a|0;b=b|0;i=a;j=b}function Dz(a){a=a|0;return a+312|0}function Ez(a){a=a|0;return 204}function Fz(a,b){a=a|0;b=b|0;return}function Gz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(42)}function Hz(a){a=a|0;return a+36|0}function Iz(a){a=a|0;return +(+g[a+44>>2])}function Jz(a){a=a|0;return +(+g[a+40>>2])}function Kz(a){a=a|0;return +(+g[a+36>>2])}function Lz(a){a=a|0;return +(+g[a+48>>2])}function Mz(a){a=a|0;return 220}function Nz(a){a=a|0;return 256}function Oz(a){a=a|0;return +(+g[a+72>>2])}function Pz(a){a=a|0;c[a>>2]=8060;return}function Qz(a){a=a|0;return +(+g[a+24>>2])}function Rz(a){a=a|0;return +(+g[a+20>>2])}function Sz(a){a=a|0;return +(+g[a+32>>2])}function Tz(a){a=a|0;return +(+g[a+16>>2])}function Uz(a){a=a|0;return +(+g[a+28>>2])}function Vz(a){a=a|0;return a+12|0}function Wz(a){a=a|0;return 52}function Xz(a){a=a|0;return 68}function Yz(a){a=a|0;return 84}function Zz(a){a=a|0;return c[a+4>>2]|0}function _z(a){a=a|0;return a+868|0}function $z(a){a=a|0;return a+4|0}function aA(a,b){a=a|0;b=b|0;Ab[a&255](b|0)}function bA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ba(37)}function cA(a){a=a|0;return 24}function dA(a,b){a=a|0;b=+b;return}function eA(a){a=a|0;return +(+g[a+12>>2])}function fA(a){a=a|0;return a+68|0}function gA(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;ba(9)}function hA(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;ba(7)}function iA(a){a=a|0;return +(+g[a+8>>2])}function jA(a){a=a|0;return +(+g[a+4>>2])}function kA(a){a=a|0;Ai(a);return}function lA(a,b,c){a=a|0;b=b|0;c=c|0;ba(28);return 0.0}function mA(a){a=a|0;return a+708|0}function nA(a){a=a|0;return 488}function oA(a,b,c){a=a|0;b=b|0;c=c|0;ba(16);return 0}function pA(a){a=a|0;hd(a+-4|0);return}function qA(a){a=a|0;return 32}function rA(a){a=a|0;return a+76|0}function sA(a){a=a|0;return 60}function tA(a){a=a|0;return 428}function uA(a){a=a|0;return a+48|0}function vA(a){a=a|0;return a+288|0}function wA(a){a=a|0;c[a>>2]=4432;return}function xA(a){a=a|0;c[a>>2]=5008;return}function yA(a){a=a|0;return +(+g[a>>2])}function zA(a,b,c){a=a|0;b=b|0;c=+c;ba(19);return 0}function AA(a){a=a|0;return 11200}function BA(a){a=a|0;return 4}function CA(a){a=a|0;return 17831}function DA(a){a=a|0;return 17518}function EA(a){a=a|0;return 11009}function FA(a){a=a|0;return a|0}function GA(a){a=a|0;return 16532}function HA(a){a=a|0;return a+72|0}function IA(a,b,c){a=a|0;b=b|0;c=c|0;ba(38)}function JA(a){a=a|0;return a+8|0}function KA(a){a=a|0;return 16945}function LA(a){a=a|0;return 0}function MA(a){a=a|0;return 17105}function NA(a){a=a|0;return 17303}function OA(a){a=a|0;return 1}function PA(a,b,c){a=a|0;b=b|0;c=+c;ba(40)}function QA(a,b,c){a=a|0;b=+b;c=c|0;ba(11)}function RA(a){a=a|0;return 17939}function SA(a){a=a|0;return 17910}function TA(a){a=a|0;return 3}function UA(a){a=a|0;return 11635}function VA(a){a=a|0;return 17861}function WA(a){a=a|0;return 16353}function XA(a){a=a|0;return 17481}function YA(a){a=a|0;return 17454}function ZA(a){a=a|0;return 17404}function _A(a){a=a|0;return 8}function $A(a,b,c){a=a|0;b=+b;c=+c;ba(15)}function aB(a){a=a|0;return 16500}function bB(a,b){a=a|0;b=b|0;ba(27);return 0}function cB(a){a=a|0;return 16457}function dB(a){a=a|0;return 16478}function eB(a){a=a|0;return 6}function fB(a){a=a|0;return 12}function gB(){return 4}function hB(a){a=a|0;return 16421}function iB(a,b){a=a|0;b=+b;ba(32);return 0.0}function jB(a){a=a|0;return 2}function kB(a){a=a|0;return 17591}function lB(a){a=a|0;hd(a);return}function mB(a){a=a|0;return 22301}function nB(a){a=a|0;jc[a&3]()}function oB(){return 2}function pB(){return 1}function qB(){return 5}function rB(){return 3}function sB(){return 0}function tB(){vb()}function uB(a,b){a=a|0;b=b|0;ba(4)}function vB(a){a=a|0;i=a}function wB(a,b){a=a|0;b=+b;ba(1)}function xB(a){a=a|0;C=a}function yB(a){a=a|0;ba(20);return 0.0}function zB(a){a=a|0;ba(6);return 0}function AB(a){a=a|0;return}function BB(){return C|0}function CB(){return i|0}function DB(a){a=a|0;ba(2)}function EB(){ba(39)}
	
	// EMSCRIPTEN_END_FUNCS
	var yb=[oy,ah,Yl,jg,rp,_c,df,ag,Xf,oc,ld,Oc,de,le,Vc,Hs,Fg,xc,$d,Il,Bi,sf,oy,oy,oy,oy,oy,oy,oy,oy,oy,oy];var zb=[wB,wc,fd,mn,ty,xy,dA,xy,Ok,gd,_f,Fe,ug,rk,hf,ad,rd,Qc,ny,xy,Zl,Zl,Zl,qj,wB,wB,wB,wB,wB,wB,wB,wB];var Ab=[DB,AB,lB,AB,Gu,AB,lB,AB,lB,AB,lB,jp,oq,Zn,Tj,Uu,AB,lB,lB,lB,lB,Bd,Ct,AB,lB,AB,lB,AB,Gu,lB,lB,AB,Gu,lB,lB,AB,lB,Lr,Br,pt,Ws,AB,lB,AB,lB,Rp,kp,qk,Bs,Ge,hl,pc,Yh,hg,Hn,bf,Xl,AB,lB,AB,lB,Xo,ho,Sg,Js,tc,AB,lB,xk,Nw,wA,qt,Td,gn,qt,AB,qt,qt,Pe,qt,qt,ve,qt,Xc,lg,Qr,ly,Ci,Qy,AB,lB,_o,ro,Fr,lB,AB,lB,xA,rt,Uo,fo,Wl,Cs,np,sq,AB,lB,kf,ew,lB,lB,lB,lB,lB,lB,lB,lB,lB,lB,zk,_w,nq,Gp,ip,$o,Up,Np,lB,tq,Mp,AB,lB,_j,Sy,ae,AB,lB,AB,pA,lB,lB,lB,lB,AB,lB,lB,lB,lB,lB,lB,lB,kq,zp,AB,lB,xq,Pp,lB,lB,lB,Xk,Ew,lB,Lj,pv,lB,ym,dt,nj,Gu,Gu,Gu,Gu,vp,Wo,AB,lB,lB,lB,AB,Gu,AB,lB,lB,AB,Gu,kp,Mm,Bm,Gu,Gu,Gu,kp,lB,kp,kA,jt,lB,lB,Pz,at,Gu,Gu,Gu,xi,it,Cj,_s,AB,qp,Cq,_s,yk,Dw,lB,lB,gp,Ry,AB,lB,lB,lB,Ai,jt,lB,AB,lB,lB,lB,lB,lB,lB,AB,lB,AB,lB,lq,Dp,lB,lB,Ak,Ax,wi,Ys,hp,vo,AB,lB,AB,AB,lB,AB,lB,lB,AB,sr];var Bb=[Rw];var Cb=[uB,Df,Uk,Fz,yw,pw,Fz,_n,ol,Fz,Er,ao,Rc,me,Ip,Fz,Fz,Fz,Qx,lw,wg,tg,Gh,ek,Sm,$j,mr,Ah,Vi,mp,At,vt,qu,ju,Tc,Fz,rj,bs,Wn,Tp,ei,Og,fg,Ih,is,qf,Eh,Gc,ll,vd,Yj,Hc,bj,Fz,Ml,Ik,el,Qk,Kv,Jk,kv,Gn,Kk,rj,Dj,rj,Hk,Jq,Kp,rj,tj,Jn,Dq,rn,oe,Dn,Nl,rs,ps,qs,Hh,cn,Xm,Xg,kr,Xp,jl,rr,lp,jl,Ad,xd,Uq,jl,rr,Fz,Fz,Oh,Rh,Ag,_m,Fz,Fz,Fz,Au,lw,Bf,ud,fi,ss,$r,$r,Fz,rj,Fz,Fz,uB,uB,uB,uB,uB,uB,uB,uB,uB,uB,uB,uB];var Db=[Ps,Yc,xh,Ps];var Eb=[zB,LA,OA,Zz,Yx,Yx,qz,Hy,tA,jB,qq,EA,fB,Vz,AA,Wz,LA,qA,UA,jB,TA,TA,OA,nz,cy,ky,BA,nA,jB,hz,Wz,My,Yz,Ez,vz,Mz,OA,$u,ot,Nz,Ny,ct,Iy,Iy,rA,WA,cA,hB,sA,cB,dB,aB,Ux,GA,sA,KA,fA,MA,Wz,NA,Xz,wz,wz,LA,ZA,sA,YA,XA,rx,DA,LA,LA,LA,kB,eB,_A,fB,eB,Yz,uz,CA,VA,sA,SA,RA,Hy,nx,mz,fz,fz,qz,qz,$z,LA,OA,qz,qz,$z,Yx,LA,Ay,Ay,qz,Cp,mB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB,zB];var Fb=[hA,wk,Jo,dj,Zm,sn,hA,hA];var Gb=[$w];var Hb=[gA];var Ib=[Oy,zn,bp,Co,no,eo,ci,Fn,Ul,Sl,xo,sg,to,op,Wm,hm,cm,_i,lm,Zc,ut,ou,zf,Oy,Oy,Oy,Oy,Oy,Oy,Oy,Oy,Oy];var Jb=[QA,_g,kw,Wv,ms,fk,fj,ap,ms,ms,oj,Dl,km,Wr,Rj,QA];var Kb=[$t,Sp];var Lb=[Rs];var Mb=[Tw,Gs,re,Gs,Gs,se,Gs,Gs,Uf,Af,Vr,Gs,Gs,Tw,Tw,Tw];var Nb=[$A,ee,yg,Gj,Cf,yf,$A,$A];var Ob=[oA,Un,Si,uc,zo,Hl,ng,kh,si,zj,wn,ai,Sh,Ef,mf,wf,un,wp,sk,Lf,Al,Jg,Kl,ki,xl,Ne,wl,Md,Qw,Qw,uf,ok,vg,Kg,vh,Nm,Tl,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA,oA];var Pb=[Jw];var Qb=[ww,ge,Rl,Lm,Hp,Vn,cj,ww];var Rb=[zA,Th,Px,Px,hn,zA,zA,zA];var Sb=[yB,Mo,eA,mv,Iz,Oz,Ix,fq,eq,fq,yB,yB,yB,yB,yB,yB];var Tb=[Bv,od,Ed,Xd];var Ub=[Mv,Ck,Bk,Mv];var Vb=[vy];var Wb=[hv,Yg];var Xb=[Ot,Qh];var Yb=[Zs,zm,zm,Zs];var Zb=[bB,wq,Aq,vq,zz,zz,zz,nc,Vu,Vu,Qd,om,kn,Eu,Sn,Gr,Gl,rq,Zp,dl,Mi,pq,uo,bB,bB,bB,bB,bB,bB,bB,bB,bB];var _b=[lA,$i,Ij,Gi,pl,mo,mk,Vm,En,_h,Tm,Om,Am,lA,lA,lA];var $b=[Es,hj,cd,Es];var ac=[uy,ht];var bc=[kt,Cc,Ti,kt];var cc=[iB,_t];var dc=[ds];var ec=[ex,uk,uk,ex];var fc=[Jy,dd];var gc=[nt,Cd,Tf,nt];var hc=[bA,av,zc,fe,Ye,Ar,Kj,De,Em,jn,bA,bA,bA,bA,bA,bA];var ic=[IA,my,Oi,He,Bt,ui,io,my,Hj,Vj,Ur,my,Rd,zd,my,rl,gm,Yk,aq,ij,vf,mi,my,my,Ui,qi,rf,nu,mu,Jx,Jx,Jx,Jx,Fd,ji,Dk,Gk,Kr,Jh,hs,of,Ie,Ie,yh,rl,lk,Bo,Kh,rl,ii,my,vm,po,Pk,pm,tk,jk,qn,ln,pn,Mn,Yn,jf,$n,my,my,my,my,yp,To,Vo,_l,Pj,ni,Lo,Jx,Jx,Jx,Jx,Ni,Gd,gi,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA,IA];var jc=[EB,tB,gk,Yr];var kc=[PA,Ht,et,jr,sl,Jc,PA,PA];var lc=[iz,Cg];var mc=[Gz,af,Xv,Lu,yt,Wf,Sc,Sf,Xr,Nk,Lq,ys,Tk,Mc,gf,Jr,Bh,Mf,qc,zs,Pm,Fl,Po,cf,Sf,Pg,Ke,Rr,xr,$f,Eg,Dh,Xr,vi,em,Oo,Ch,ie,jm,Jj,xj,ep,mg,Vg,Vh,Li,cl,Xv,Wh,Qg,Hi,Xv,Xv,uj,Aj,wm,il,vk,Hd,Ce,Di,Nc,Aj,Pl,El,Ol,nd,Pn,Fj,Pn,Ql,Um,im,nk,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz,Gz];return{_emscripten_bind_btCylinderShape___destroy___0:Zt,_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1:gw,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3:js,_emscripten_bind_btHeightfieldTerrainShape_getMargin_0:mv,_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1:Rv,_emscripten_bind_btCollisionObject_isActive_0:Ov,_emscripten_bind_btRotationalLimitMotor___destroy___0:Lx,_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1:sy,_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1:iy,_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0:Os,_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4:wo,_emscripten_bind_btCapsuleShapeX_getMargin_0:mv,_emscripten_bind_Node_set_m_n_1:qr,_emscripten_bind_btCompoundShape_getMargin_0:mv,_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1:fr,_emscripten_bind_btContactSolverInfo___destroy___0:Lx,_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1:Sv,_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0:fA,_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0:Gy,_emscripten_bind_btQuaternion_setX_1:Ly,_emscripten_bind_btCylinderShapeZ_getMargin_0:mv,_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0:eA,_emscripten_bind_btQuaternion_setZ_1:ry,_emscripten_bind_btCollisionObject_getUserIndex_0:Xy,_emscripten_bind_btCapsuleShapeZ_getMargin_0:mv,_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1:sy,_emscripten_bind_btKinematicCharacterController_setMaxSlope_1:Yt,_emscripten_bind_btQuadWord_z_0:iA,_emscripten_bind_btSoftBody_setCcdMotionThreshold_1:Kw,_emscripten_bind_Material___destroy___0:Lx,_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0:eA,_emscripten_bind_btSoftBody_rotate_1:Mj,_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0:vx,_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0:Cx,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1:wu,_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0:Zt,_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1:Gt,_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0:fA,_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0:Lw,_emscripten_bind_btCollisionDispatcher___destroy___0:Zt,_emscripten_bind_btRigidBody_applyCentralImpulse_1:go,_emscripten_bind_btConvexHullShape_getMargin_0:mv,_emscripten_bind_btDefaultMotionState_getWorldTransform_1:du,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1:Us,_emscripten_bind_btRaycastVehicle_getNumWheels_0:Ay,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3:os,_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2:ks,_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1:qu,_emscripten_bind_btDynamicsWorld_rayTest_3:Is,_emscripten_bind_Config_set_kSR_SPLT_CL_1:yx,_emscripten_bind_btQuadWord_x_0:yA,_emscripten_bind_Config_get_diterations_0:fz,_emscripten_bind_btCollisionObject_isKinematicObject_0:bx,_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1:Wi,_emscripten_bind_ConvexResultCallback___destroy___0:Zt,_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1:Oq,_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1:Nq,_emscripten_bind_btSoftBody_isKinematicObject_0:bx,_emscripten_bind_btRigidBody_getCenterOfMassTransform_0:$z,_emscripten_bind_btGhostObject_isKinematicObject_0:bx,_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5:dk,_emscripten_bind_btCapsuleShape___destroy___0:Zt,_emscripten_bind_btCollisionObject_activate_1:wr,_emscripten_bind_btCollisionObject_activate_0:_r,_emscripten_bind_btKinematicCharacterController_setUpAxis_1:bu,_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1:Et,_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1:ty,_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1:hk,_emscripten_bind_btVector3_setX_1:Ly,_emscripten_bind_btCollisionConfiguration___destroy___0:Zt,_emscripten_bind_btCapsuleShapeZ_setMargin_1:Hu,_emscripten_bind_btHingeConstraint_enableFeedback_1:gw,_emscripten_bind_btSphereShape___destroy___0:Zt,_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1:lu,_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1:so,_emscripten_bind_btManifoldPoint_set_m_localPointB_1:ir,_emscripten_bind_btVector3_setZ_1:ry,_emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0:yA,_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1:Zu,_emscripten_bind_btTypedConstraint_enableFeedback_1:gw,_emscripten_bind_btQuaternion_setValue_4:Or,_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1:pw,_emscripten_bind_btSoftBody_transform_1:sv,_emscripten_bind_LocalShapeInfo___destroy___0:Lx,_emscripten_bind_btSoftBody_appendAnchor_4:_d,_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0:yA,_emscripten_bind_btPoint2PointConstraint_get_m_setting_0:Uy,_emscripten_bind_btQuadWord_setY_1:sy,_emscripten_bind_btRigidBody_setUserPointer_1:Zw,_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1:wv,_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0:$z,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3:gs,_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0:Ph,_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0:gl,_emscripten_bind_btCylinderShape_setMargin_1:Hu,_emscripten_bind_btCollisionWorld___destroy___0:Zt,_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0:Sx,_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0:Yy,_emscripten_bind_btBoxShape_btBoxShape_1:Fh,_emscripten_bind_btPersistentManifold_getBody1_0:By,_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1:pw,_emscripten_bind_RaycastInfo_set_m_isInContact_1:vw,_emscripten_bind_btKinematicCharacterController_setGravity_1:xy,_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5:Eo,_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3:Zo,_emscripten_bind_btQuaternion_setY_1:sy,_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1:ju,_emscripten_bind_btWheelInfo_get_m_rollInfluence_0:dy,_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1:lu,_emscripten_bind_tNodeArray_size_0:Zz,_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_btRigidBody_getUserIndex_0:Xy,_emscripten_bind_btDynamicsWorld_getDispatchInfo_0:Bz,_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1:uu,_emscripten_bind_btSoftBody_appendFace_4:Ns,_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2:Zk,_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1:ml,_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1:Qq,_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1:Av,_emscripten_bind_btBoxShape_getMargin_0:mv,_emscripten_bind_btPairCachingGhostObject___destroy___0:Xt,_emscripten_bind_btPairCachingGhostObject_setUserPointer_1:Zw,_emscripten_bind_btPairCachingGhostObject_activate_0:_r,_emscripten_bind_btPairCachingGhostObject_activate_1:wr,_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0:Jv,_emscripten_bind_btSoftBody_setUserPointer_1:Zw,_emscripten_bind_btDynamicsWorld_getDispatcher_0:Hy,_emscripten_bind_btSoftBody_setMass_2:vs,_emscripten_bind_btConeShape_btConeShape_2:bm,_emscripten_bind_btDynamicsWorld___destroy___0:Zt,_emscripten_bind_Config_get_kCHR_0:Kz,_emscripten_bind_btPairCachingGhostObject_forceActivationState_1:tw,_emscripten_bind_btDefaultMotionState___destroy___0:Zt,_emscripten_bind_btDispatcherInfo_get_m_stepCount_0:Zz,_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1:lv,_emscripten_bind_btQuadWord_setW_1:ty,_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0:cx,_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2:Hm,_emscripten_bind_LocalShapeInfo_set_m_shapePart_1:Ww,_emscripten_bind_btRigidBody_setLinearFactor_1:xn,_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1:Nu,_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1:Wt,_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0:Bx,_emscripten_bind_btWheelInfo_get_m_engineForce_0:wy,_emscripten_bind_Config_get_kSR_SPLT_CL_0:az,_emscripten_bind_btRaycastVehicle_setSteeringValue_2:wt,_emscripten_bind_btPoint2PointConstraint___destroy___0:Zt,_emscripten_bind_btSoftBody_getUserPointer_0:Xy,_emscripten_bind_btCollisionShape_setMargin_1:Hu,_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1:ko,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2:Vs,_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1:Et,_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1:Ru,_emscripten_bind_Config_get_kVCF_0:jA,_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1:jy,_malloc:yc,_emscripten_bind_btDispatcherInfo_get_m_useEpa_0:Ex,_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1:xv,_emscripten_bind_btTransform_btTransform_2:xm,_emscripten_bind_btTransform_btTransform_0:Go,_emscripten_bind_btPairCachingGhostObject_getUserIndex_0:Xy,_emscripten_bind_Config_set_kVC_1:fy,_emscripten_bind_btVector3_op_sub_1:dr,_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1:Fw,_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1:jw,_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1:Fv,_emscripten_bind_btSoftBody_appendNode_2:id,_emscripten_bind_btCollisionObject_setActivationState_1:Dt,_emscripten_bind_btPersistentManifold___destroy___0:Gu,_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0:iA,_emscripten_bind_btCylinderShapeZ___destroy___0:Zt,_emscripten_bind_btMatrix3x3___destroy___0:Lx,_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1:Tt,_emscripten_bind_ConvexResultCallback_hasHit_0:ey,_emscripten_bind_btCollisionShape_calculateLocalInertia_2:gt,_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_Config_set_kPR_1:gy,_emscripten_bind_btCollisionWorld_convexSweepTest_5:Zq,_emscripten_bind_btVector3_length_0:as,_emscripten_bind_btSoftBody_set_m_materials_1:Xi,_emscripten_enum_PHY_ScalarType_PHY_UCHAR:qB,_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1:kr,_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2:gt,_emscripten_bind_btConstraintSetting_set_m_damping_1:sy,_emscripten_bind_btVehicleRaycaster___destroy___0:Zt,_emscripten_bind_btSoftBody_set_m_cfg_1:di,_emscripten_bind_btRigidBody_setCcdMotionThreshold_1:Kw,_emscripten_bind_btConvexHullShape_setMargin_1:Hu,_emscripten_bind_btRigidBody_applyForce_2:$k,_emscripten_bind_btConeShapeZ_calculateLocalInertia_2:gt,_emscripten_bind_btConstraintSetting_set_m_tau_1:Ly,_emscripten_bind_btConvexHullShape_calculateLocalInertia_2:gt,_emscripten_bind_RaycastInfo_get_m_contactPointWS_0:yz,_emscripten_bind_btSoftBody_setCollisionFlags_1:Hw,_emscripten_bind_btSphereShape_calculateLocalInertia_2:gt,_emscripten_bind_btSoftBody_appendMaterial_0:gx,_emscripten_bind_btVector4_normalize_0:iq,_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0:fl,_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1:Ft,_emscripten_bind_btSoftBody_setTotalMass_2:oh,_emscripten_bind_LocalConvexResult_LocalConvexResult_5:bl,_emscripten_bind_btGhostObject_setFriction_1:au,_emscripten_bind_btCollisionWorld_rayTest_3:Is,_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1:rw,_emscripten_bind_btCylinderShapeZ_setMargin_1:Hu,_emscripten_bind_btRigidBody_setFriction_1:au,_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1:br,_emscripten_bind_btGhostObject_setWorldTransform_1:ql,_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1:Tt,_emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0:iA,_emscripten_bind_btManifoldPoint_getAppliedImpulse_0:Vx,_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1:Jt,_emscripten_bind_btConvexHullShape___destroy___0:Zt,_emscripten_bind_RaycastInfo_set_m_suspensionLength_1:hy,_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0:Iy,_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0:yy,_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0:Rx,_emscripten_bind_btKinematicCharacterController_jump_0:Mu,_emscripten_bind_btCollisionObject_getUserPointer_0:Xy,_emscripten_bind_btWheelInfo_set_m_raycastInfo_1:Hr,_emscripten_bind_btSoftBody_generateClusters_1:Xu,_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1:ku,_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1:lu,_emscripten_bind_btRigidBody_upcast_1:Cv,_emscripten_bind_btCollisionObject_getWorldTransform_0:$z,_emscripten_bind_btVector4_setZ_1:ry,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1:_q,___cxa_can_catch:hq,_emscripten_bind_btTransform_getBasis_0:FA,_emscripten_bind_btPairCachingGhostObject_setFriction_1:au,_emscripten_bind_Config_set_kSRHR_CL_1:Nx,_emscripten_bind_btCollisionDispatcher_getNumManifolds_0:_u,_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1:fw,_emscripten_bind_ClosestRayResultCallback___destroy___0:Zt,_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2:ru,_emscripten_bind_btCylinderShapeX_setMargin_1:Hu,_emscripten_bind_btQuadWord_w_0:eA,_emscripten_bind_Node___destroy___0:Lx,_emscripten_bind_btDynamicsWorld_contactTest_2:tn,_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2:tn,_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2:gt,_emscripten_bind_btTransform_setOrigin_1:nr,_emscripten_bind_btCompoundShape_getNumChildShapes_0:qz,_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1:aw,_emscripten_bind_btGhostObject_btGhostObject_0:Ki,_emscripten_bind_tNodeArray___destroy___0:Lp,_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2:Rk,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1:Iu,_emscripten_bind_btManifoldPoint_set_m_localPointA_1:pr,_emscripten_bind_LocalConvexResult___destroy___0:Lx,_emscripten_bind_btVector3_dot_1:As,_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0:eA,_emscripten_bind_btVector4_op_add_1:er,_emscripten_bind_btWheelInfo___destroy___0:Lx,_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0:Ey,_emscripten_bind_btTransform_setRotation_1:bv,_emscripten_bind_Config_set_kSHR_1:xy,_emscripten_bind_btPoint2PointConstraint_enableFeedback_1:gw,_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1:yv,_emscripten_bind_btAxisSweep3_btAxisSweep3_2:xp,_emscripten_bind_btAxisSweep3_btAxisSweep3_3:dp,_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1:ry,_emscripten_bind_btVector3_setY_1:sy,_emscripten_bind_btAxisSweep3_btAxisSweep3_4:So,_emscripten_bind_btAxisSweep3_btAxisSweep3_5:Ko,_emscripten_bind_btQuadWord_setX_1:Ly,_emscripten_bind_tMaterialArray___destroy___0:Lp,_emscripten_bind_btSoftBodyHelpers_CreateRope_5:qh,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0:fv,_emscripten_bind_Config_set_piterations_1:jx,_emscripten_bind_btOverlappingPairCache___destroy___0:Zt,_emscripten_bind_btRigidBody_setUserIndex_1:Zw,_emscripten_bind_Material_get_m_kAST_0:iA,_emscripten_bind_btConstraintSetting___destroy___0:Lx,_emscripten_bind_RayResultCallback___destroy___0:Zt,_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0:FA,_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0:jA,_emscripten_bind_btPersistentManifold_getBody0_0:Cy,_emscripten_bind_btConeShapeX_btConeShapeX_2:am,_emscripten_bind_btQuaternion_z_0:iA,_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1:rw,_emscripten_bind_btConeTwistConstraint_enableFeedback_1:gw,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0:Vl,_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1:lu,_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0:jA,_emscripten_bind_btSoftBody_translate_1:mm,_emscripten_bind_btSliderConstraint_setUpperLinLimit_1:nw,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2:pg,_emscripten_bind_btVector3_op_mul_1:Sr,_emscripten_bind_btConcaveShape___destroy___0:Zt,_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4:rg,_emscripten_bind_btQuaternion_x_0:yA,_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5:pf,_emscripten_bind_Config_set_timescale_1:Gx,_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1:tr,_emscripten_bind_btConcaveShape_setLocalScaling_1:lu,_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0:Bz,_emscripten_bind_btConeShapeX_setLocalScaling_1:lu,_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1:gy,_emscripten_bind_btSoftBody_appendLink_4:Ms,_emscripten_bind_btCylinderShapeZ_setLocalScaling_1:lu,_emscripten_bind_btConvexHullShape_btConvexHullShape_0:Hq,_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1:ty,_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1:Av,_emscripten_bind_btSoftBody_getTotalMass_0:Yo,_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1:tt,_emscripten_bind_Config_get_kLF_0:Tz,_emscripten_bind_btGhostObject___destroy___0:Xt,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2:Fs,_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1:ft,_emscripten_bind_btGhostObject_setContactProcessingThreshold_1:ow,_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4:ur,_emscripten_bind_btCollisionWorld_getBroadphase_0:Iy,_emscripten_bind_btRaycastVehicle_updateWheelTransform_2:Tr,_emscripten_bind_btQuaternion___destroy___0:Lx,_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2:gt,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2:Gg,_emscripten_bind_Material_set_m_flags_1:xx,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0:mh,_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1:Lg,_emscripten_bind_Config_get_viterations_0:dz,_emscripten_bind_btKinematicCharacterController_canJump_0:Fu,_emscripten_bind_btSoftBodyArray_at_1:rv,_emscripten_bind_btVector4_length_0:as,_emscripten_bind_btPairCachingGhostObject_setUserIndex_1:Zw,_emscripten_bind_btRigidBody_isActive_0:Ov,_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3:Nj,_emscripten_bind_btMotionState_setWorldTransform_1:hu,_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0:Hy,_emscripten_bind_btCylinderShape_setLocalScaling_1:lu,_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0:$z,_emscripten_bind_btCompoundShape_calculateLocalInertia_2:gt,_emscripten_bind_btCollisionWorld_getDispatchInfo_0:Bz,_emscripten_enum_PHY_ScalarType_PHY_DOUBLE:pB,_emscripten_bind_btRigidBody_setCollisionShape_1:hu,_emscripten_bind_btSoftBody_appendTetra_5:Qf,_emscripten_bind_btConeShapeX___destroy___0:Zt,_emscripten_bind_btCollisionObject_getCollisionFlags_0:Gy,_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1:Iv,_emscripten_bind_btConeTwistConstraint_enableMotor_1:Zv,_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1:Sq,_emscripten_bind_btSoftBody_checkLink_2:fm,_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3:es,_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4:Uj,_emscripten_bind_btVector3_normalize_0:iq,_emscripten_bind_btPairCachingGhostObject_setRestitution_1:Vt,_emscripten_bind_Config_set_kAHR_1:ay,_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1:xv,_emscripten_bind_btBroadphaseInterface___destroy___0:Zt,_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3:Is,_emscripten_bind_Config_get_kSRHR_CL_0:sz,_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1:Tu,_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1:ow,_emscripten_bind_btCompoundShape___destroy___0:Zt,_emscripten_bind_btHingeConstraint_setMotorTarget_2:kk,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0:uv,_emscripten_bind_btCapsuleShapeX_setMargin_1:Hu,_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0:Zt,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1:zu,_emscripten_bind_btRigidBody_getCollisionFlags_0:Gy,_emscripten_bind_btCollisionShape_setLocalScaling_1:lu,_emscripten_bind_Config_get_piterations_0:ez,_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0:Vy,_emscripten_bind_btMatrix3x3_setEulerZYX_3:Dm,_emscripten_bind_btRigidBody_setRollingFriction_1:Lt,_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0:Kz,_emscripten_bind_btRigidBody_getUserPointer_0:Xy,_emscripten_bind_Config_get_kSHR_0:Iz,_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2:gt,_emscripten_bind_btRigidBody_setMotionState_1:Ir,_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0:hx,_emscripten_bind_btCollisionWorld_getDispatcher_0:Hy,_emscripten_bind_btVector4_dot_1:As,_emscripten_bind_btCollisionObject_setRollingFriction_1:Lt,_emscripten_bind_Config_set_kSK_SPLT_CL_1:zx,_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1:yv,_emscripten_bind_btTriangleMesh_btTriangleMesh_1:Fq,_i64Subtract:Ls,_emscripten_bind_btCylinderShapeX_getMargin_0:mv,_emscripten_bind_btRigidBody_setDamping_2:Nn,_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0:dx,_emscripten_bind_btGhostObject_setCollisionFlags_1:Hw,_emscripten_bind_btMatrix3x3_getRotation_1:cv,_emscripten_bind_btWheelInfo_set_m_engineForce_1:Kw,_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1:Cu,_emscripten_bind_btPersistentManifold_getNumContacts_0:Tx,_emscripten_bind_btCylinderShapeX_setLocalScaling_1:lu,_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0:On,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0:Hv,_emscripten_bind_btCompoundShape_setLocalScaling_1:lu,_emscripten_bind_btOverlappingPairCallback___destroy___0:Zt,_emscripten_bind_btDynamicsWorld_convexSweepTest_5:Zq,_emscripten_bind_btCylinderShape_calculateLocalInertia_2:gt,_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1:rw,_emscripten_bind_btRigidBody_getCollisionShape_0:Fy,_emscripten_bind_btRigidBody_setContactProcessingThreshold_1:ow,_emscripten_bind_btRigidBody_getLinearVelocity_0:Dz,_emscripten_bind_btRigidBody_applyImpulse_2:iu,_emscripten_bind_btConcaveShape_calculateLocalInertia_2:gt,_emscripten_bind_RaycastInfo_get_m_groundObject_0:ez,_emscripten_bind_btRigidBody_setWorldTransform_1:ql,_emscripten_bind_btRigidBody_setAngularVelocity_1:$p,_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3:pk,_emscripten_bind_Config_get_kDP_0:iA,_emscripten_bind_btConvexShape_setLocalScaling_1:lu,_emscripten_bind_Config_get_collisions_0:gz,_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2:gt,_emscripten_bind_btVector4_setX_1:Ly,_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0:tl,_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1:Sk,_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1:ow,_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1:Oq,_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0:hx,_emscripten_bind_RayResultCallback_hasHit_0:Zx,_emscripten_bind_btSoftBody_isActive_0:Ov,_emscripten_bind_btRigidBody_applyLocalTorque_1:tm,_bitshift64Shl:ls,_emscripten_bind_Config___destroy___0:Vk,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0:ev,_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0:iA,_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1:Ku,_emscripten_bind_btQuaternion_normalize_0:Ro,_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0:Bz,_emscripten_bind_btQuadWord_setZ_1:ry,_emscripten_bind_btConeShapeZ_setLocalScaling_1:lu,_emscripten_bind_Config_get_kPR_0:Rz,_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0:Zt,_emscripten_bind_btConvexTriangleMeshShape___destroy___0:Zt,_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1:ty,_emscripten_bind_Material_set_m_kAST_1:ry,_emscripten_bind_btGhostObject_setRollingFriction_1:Lt,_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1:Ap,_emscripten_bind_btRigidBody_getAngularVelocity_0:Az,_emscripten_bind_btCompoundShape_btCompoundShape_0:Wq,_emscripten_bind_btCompoundShape_btCompoundShape_1:Iq,_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1:Gt,_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2:vl,_emscripten_bind_btSphereShape_getMargin_0:mv,_emscripten_bind_btCollisionObject_setAnisotropicFriction_2:Do,_emscripten_bind_btHingeConstraint_setAngularOnly_1:cw,_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2:tn,_emscripten_bind_Config_get_kDG_0:eA,_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2:Do,_emscripten_bind_Node_get_m_x_0:JA,_emscripten_bind_btSoftBodyArray_size_0:Zz,_emscripten_bind_ClosestRayResultCallback_hasHit_0:Zx,_emscripten_bind_btCompoundShape_addChildShape_2:Ud,_emscripten_bind_btDispatcher___destroy___0:Zt,_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0:jA,_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1:Ly,_emscripten_bind_btDiscreteDynamicsWorld___destroy___0:Zt,_emscripten_bind_btConvexShape___destroy___0:Zt,_memmove:Ep,_emscripten_bind_btWheelInfo_set_m_worldTransform_1:zl,_emscripten_bind_btCapsuleShapeX_setLocalScaling_1:lu,_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1:Hw,_emscripten_bind_btSoftBody_getCollisionFlags_0:Gy,_emscripten_enum_PHY_ScalarType_PHY_INTEGER:oB,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1:$m,_emscripten_bind_btCollisionObject_setRestitution_1:Vt,_emscripten_bind_btRigidBody_applyCentralForce_1:No,_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1:gr,_emscripten_bind_LocalConvexResult_get_m_hitFraction_0:Jz,_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0:qx,_emscripten_bind_btQuaternion_w_0:eA,_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0:Yw,_emscripten_bind_btTransform_getRotation_0:Fo,_emscripten_bind_Config_set_kSKHR_CL_1:Ox,_emscripten_bind_btHingeConstraint_btHingeConstraint_6:yo,_emscripten_bind_btHingeConstraint_btHingeConstraint_7:jo,_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0:JA,_emscripten_bind_btHingeConstraint_btHingeConstraint_5:xg,_emscripten_bind_btHingeConstraint_btHingeConstraint_2:Jp,_emscripten_bind_btHingeConstraint_btHingeConstraint_3:pp,_emscripten_bind_RaycastInfo___destroy___0:Lx,_emscripten_bind_btSoftBody_setWorldTransform_1:ql,_emscripten_bind_btBoxShape_setMargin_1:Hu,_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0:Wx,_emscripten_bind_btVector4_y_0:jA,_emscripten_bind_Config_get_kSK_SPLT_CL_0:bz,_emscripten_bind_btTypedConstraint___destroy___0:Zt,_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1:Bp,_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1:ko,_emscripten_bind_btConeTwistConstraint_setDamping_1:zw,_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1:Rt,_emscripten_bind_Config_set_collisions_1:lx,_bitshift64Ashr:Pr,_emscripten_bind_btQuaternion_btQuaternion_4:an,_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0:Iy,_emscripten_bind_btSoftBody_getCollisionShape_0:Fy,_emscripten_bind_btSphereShape_btSphereShape_1:In,_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0:ux,_emscripten_bind_btQuaternion_y_0:jA,_emscripten_bind_btCollisionWorld_addCollisionObject_1:zt,_emscripten_bind_btCollisionWorld_addCollisionObject_2:Ts,_emscripten_bind_btCollisionWorld_addCollisionObject_3:js,_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1:ov,_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4:fh,_emscripten_bind_RaycastInfo_get_m_isInContact_0:Fx,_emscripten_bind_Config_set_kKHR_1:_x,_emscripten_bind_btHeightfieldTerrainShape_setMargin_1:Hu,_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0:Yw,_emscripten_bind_btCapsuleShape_setMargin_1:Hu,_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1:Cn,_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7:Gq,_emscripten_bind_btCollisionObject_setUserPointer_1:Zw,_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0:Oj,_emscripten_bind_btActionInterface___destroy___0:Zt,_emscripten_bind_btSoftBody_generateClusters_2:su,_emscripten_bind_btDefaultMotionState_setWorldTransform_1:hu,_emscripten_bind_btCollisionWorld_contactTest_2:tn,_emscripten_bind_RayResultCallback_get_m_collisionObject_0:Yx,_emscripten_bind_btPoint2PointConstraint_getPivotInA_0:_y,_emscripten_bind_Config_get_kAHR_0:Lz,_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0:Vz,_emscripten_bind_btVector4_setY_1:sy,_emscripten_bind_btCompoundShape_setMargin_1:Hu,_emscripten_bind_btGhostObject_setRestitution_1:Vt,_emscripten_bind_btDynamicsWorld_addCollisionObject_1:zt,_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0:Xw,_emscripten_bind_btDynamicsWorld_addCollisionObject_3:js,_emscripten_bind_btDynamicsWorld_addCollisionObject_2:Ts,_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0:lo,_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0:Hy,_emscripten_bind_btSoftBody_scale_1:Xe,_emscripten_bind_btHeightfieldTerrainShape___destroy___0:Zt,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0:cz,_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0:wx,_emscripten_bind_Config_get_kVC_0:Qz,_emscripten_bind_btVector4_op_mul_1:Sr,_emscripten_bind_btCylinderShape_btCylinderShape_1:uq,_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1:_v,_emscripten_bind_Material_get_m_kVST_0:eA,_emscripten_bind_Config_set_kVCF_1:sy,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3:os,_emscripten_bind_btGhostObject_getUserIndex_0:Xy,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1:Us,_emscripten_bind_btSoftBody_setRestitution_1:Vt,_emscripten_bind_btVector3___destroy___0:Gu,_bitshift64Lshr:xs,_emscripten_bind_btRigidBody_setAngularFactor_1:dq,_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2:gt,_emscripten_bind_btWheelInfo_set_m_steering_1:Uw,_emscripten_bind_btMotionState_getWorldTransform_1:du,_emscripten_bind_btDynamicsWorld_getSolverInfo_0:kl,_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0:Iw,_emscripten_bind_Config_get_kMT_0:Sz,_emscripten_bind_btDynamicsWorld_getBroadphase_0:Iy,_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1:$x,_emscripten_bind_Config_get_timescale_0:kz,_emscripten_bind_btVector3_x_0:yA,___cxa_is_pointer_type:Qu,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3:Fi,_emscripten_bind_btCollisionObject_getCollisionShape_0:Fy,_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4:ti,_emscripten_bind_btManifoldPoint___destroy___0:Lx,_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1:jv,_emscripten_bind_btVector3_z_0:iA,_emscripten_bind_btGhostObject_setUserIndex_1:Zw,_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1:Bl,_emscripten_bind_ClosestConvexResultCallback___destroy___0:Zt,_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0:Lx,_emscripten_bind_btCollisionObject_setFriction_1:au,_emscripten_bind_btQuadWord_y_0:jA,_emscripten_bind_btDefaultCollisionConfiguration___destroy___0:Zt,_emscripten_bind_btRigidBody_setMassProps_2:ck,_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1:zv,_emscripten_bind_btVector3_setValue_3:ns,_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1:Kw,_emscripten_bind_RaycastInfo_get_m_suspensionLength_0:Sz,_emscripten_bind_btGhostObject_getCollisionFlags_0:Gy,_emscripten_bind_btCapsuleShapeX___destroy___0:Zt,_emscripten_bind_Config_set_kDG_1:ty,_emscripten_bind_btRigidBody_setActivationState_1:Dt,_emscripten_bind_btRigidBody_updateInertiaTensor_0:Xj,_emscripten_bind_btHingeConstraint_setLimit_4:Xn,_emscripten_bind_btHingeConstraint_setLimit_5:Qn,_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0:Wk,_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0:fx,_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1:Uv,_emscripten_bind_btConeShape_setLocalScaling_1:lu,_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_Config_get_citerations_0:wz,_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btGhostObject_getCollisionShape_0:Fy,_emscripten_bind_Config_get_kSSHR_CL_0:rz,_emscripten_bind_btBoxShape___destroy___0:Zt,_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0:px,_emscripten_bind_btPersistentManifold_getContactPoint_1:bw,_emscripten_bind_btVector3_btVector3_0:vr,_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btConeShapeX_calculateLocalInertia_2:gt,_emscripten_bind_RaycastInfo_set_m_groundObject_1:jx,_emscripten_bind_btGhostObject_activate_1:wr,_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2:Tq,_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0:cz,_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0:uA,_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0:Cm,_emscripten_bind_btSphereShape_setMargin_1:Hu,_emscripten_bind_btSoftBody_get_m_cfg_0:vA,_emscripten_bind_btCollisionObject_setUserIndex_1:Zw,_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1:Bu,_emscripten_bind_btSliderConstraint_setUpperAngLimit_1:yq,_emscripten_bind_btDynamicsWorld_contactPairTest_3:Dr,_emscripten_bind_btCollisionWorld_getPairCache_0:It,_emscripten_bind_btConeTwistConstraint_setMotorTarget_1:oi,_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1:Mq,_emscripten_bind_btWheelInfo_set_m_rollInfluence_1:Bw,_emscripten_bind_btRigidBody_getWorldTransform_0:$z,_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0:Rm,_emscripten_bind_btGhostObject_forceActivationState_1:tw,_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5:ye,_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0:fn,_emscripten_bind_VoidPtr___destroy___0:Lx,_emscripten_bind_btSliderConstraint_setLowerAngLimit_1:zq,_emscripten_bind_btSoftBody_get_m_materials_0:_z,_emscripten_bind_btRotationalLimitMotor_isLimited_0:hw,_emscripten_bind_RaycastInfo_set_m_contactPointWS_1:ir,_emscripten_bind_RayResultCallback_set_m_collisionObject_1:pw,_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0:Dy,_emscripten_bind_btSoftBody_setContactProcessingThreshold_1:ow,_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0:Dx,_emscripten_bind_Config_get_kDF_0:Uz,_emscripten_bind_btWheelInfo_get_m_steering_0:Ky,_emscripten_bind_btConstraintSetting_get_m_tau_0:yA,_emscripten_bind_btSliderConstraint___destroy___0:Zt,_emscripten_bind_btCollisionObject_setCollisionShape_1:hu,_emscripten_bind_btCollisionShape___destroy___0:Zt,_emscripten_bind_btMatrix3x3_getRow_1:tp,_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0:jA,_emscripten_bind_btTriangleMesh_addTriangle_4:Bn,_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0:Yx,_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0:Cw,_emscripten_bind_btSoftBody_getUserIndex_0:Xy,_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1:hu,_emscripten_bind_btKinematicCharacterController_warp_1:St,_emscripten_bind_btAxisSweep3___destroy___0:Zt,_emscripten_bind_btSoftBody_getWorldTransform_0:$z,_emscripten_bind_btTriangleMesh___destroy___0:Zt,_emscripten_bind_btKinematicCharacterController_preStep_1:Mt,_emscripten_bind_btRaycastVehicle_applyEngineForce_2:xt,_emscripten_bind_btRaycastVehicle_setBrake_2:Qt,_emscripten_bind_ConcreteContactResultCallback___destroy___0:Zt,_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1:kr,_emscripten_bind_btCollisionObject___destroy___0:Xt,_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1:ry,_emscripten_bind_btRigidBody_applyTorqueImpulse_1:nm,_emscripten_bind_btTriangleMeshShape_setLocalScaling_1:lu,_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1:Su,_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1:Qs,_emscripten_bind_btDispatcherInfo_set_m_timeStep_1:Ly,_emscripten_bind_btVector3_btVector3_3:Wp,_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1:pr,_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1:Gv,_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0:oo,_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0:by,_emscripten_bind_btCollisionShape_getMargin_0:mv,_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1:ry,_emscripten_bind_btRigidBody_isKinematicObject_0:bx,_emscripten_bind_RaycastInfo_get_m_hardPointWS_0:Hz,_emscripten_bind_btConeTwistConstraint___destroy___0:Zt,_emscripten_bind_btQuadWord___destroy___0:Lx,_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3:Dr,_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1:Xq,_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2:tu,_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0:jz,_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0:jz,_emscripten_bind_btSoftBody_setUserIndex_1:Zw,_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_btSoftBody_setCollisionShape_1:hu,_emscripten_bind_btGhostObject_setAnisotropicFriction_2:Do,_emscripten_bind_btConstraintSolver___destroy___0:Zt,_emscripten_bind_btDbvtBroadphase___destroy___0:Zt,_emscripten_bind_btCapsuleShape_btCapsuleShape_2:Im,_emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0:eA,_emscripten_bind_btSoftBody_setRollingFriction_1:Lt,_emscripten_bind_btGhostObject_activate_0:_r,_emscripten_bind_btCapsuleShape_setLocalScaling_1:lu,_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0:Vv,_emscripten_bind_btRigidBody_setAnisotropicFriction_2:Do,_emscripten_bind_btSoftBody_btSoftBody_4:fp,_emscripten_bind_btSoftBody_activate_0:_r,_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1:Ly,_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1:sy,_emscripten_bind_btVector3_op_add_1:er,_emscripten_bind_btPersistentManifold_btPersistentManifold_0:aj,_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0:Xw,_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2:Mk,_emscripten_bind_btVector4___destroy___0:Gu,_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0:bx,_emscripten_bind_btConstraintSetting_get_m_damping_0:jA,_emscripten_bind_tNodeArray_at_1:qw,_i64Add:Pt,_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1:Dv,_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10:be,_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1:Kw,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0:dm,_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1:nn,_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3:Zj,_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0:Qv,_emscripten_bind_btPoint2PointConstraint_getPivotInB_0:Zy,_emscripten_bind_btKinematicCharacterController_playerStep_2:Xs,_emscripten_bind_btDispatcherInfo___destroy___0:Lx,_emscripten_bind_btCapsuleShape_getMargin_0:mv,_emscripten_bind_btCylinderShape_getMargin_0:mv,_emscripten_bind_btStaticPlaneShape_setLocalScaling_1:lu,_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2:gt,_emscripten_bind_btVector4_setValue_4:Or,_emscripten_bind_ContactResultCallback_addSingleResult_7:Gq,_emscripten_bind_btGhostObject_getWorldTransform_0:$z,_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0:It,_emscripten_bind_LocalConvexResult_set_m_hitFraction_1:_x,_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2:gt,_emscripten_bind_btDispatcherInfo_get_m_timeStep_0:yA,_emscripten_bind_btConvexTriangleMeshShape_setMargin_1:Hu,_emscripten_bind_btWheelInfo_get_m_frictionSlip_0:qy,_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1:sy,_emscripten_bind_btBoxShape_calculateLocalInertia_2:gt,_emscripten_bind_btMotionState___destroy___0:Zt,_emscripten_bind_btCollisionObject_setCollisionFlags_1:Hw,_emscripten_bind_btPairCachingGhostObject_setActivationState_1:Dt,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1:ft,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2:Fs,_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3:js,_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1:gw,_emscripten_bind_Config_set_kSSHR_CL_1:Mx,_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1:Ft,_emscripten_bind_btSoftBodyWorldInfo___destroy___0:up,_emscripten_bind_btConvexTriangleMeshShape_getMargin_0:mv,_emscripten_bind_btSoftBodySolver___destroy___0:Zt,_emscripten_bind_Node_get_m_n_0:HA,_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1:yw,_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1:ql,_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btConeTwistConstraint_setAngularOnly_1:Pv,_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1:rw,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4:ak,_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2:Ei,_emscripten_bind_btGhostObject_getNumOverlappingObjects_0:Dx,_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0:Zt,_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1:ov,_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88:gB,_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1:Ju,_emscripten_bind_btRigidBodyConstructionInfo___destroy___0:Lx,_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1:iy,_emscripten_bind_btPoint2PointConstraint_setPivotA_1:ar,_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1:Rq,_memcpy:bn,_emscripten_bind_Config_get_maxvolume_0:lz,_emscripten_bind_btCapsuleShape_calculateLocalInertia_2:gt,_emscripten_bind_btRigidBody___destroy___0:Xt,_emscripten_bind_btVector3_y_0:jA,_emscripten_bind_btDispatcherInfo_set_m_useEpa_1:uw,_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0:Rz,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2:sp,_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3:cp,_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0:Zz,_emscripten_bind_Config_set_kDF_1:jy,_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9:Ng,_emscripten_bind_btSoftBody_activate_1:wr,_emscripten_bind_btConeShapeZ_btConeShapeZ_2:$l,_emscripten_bind_btGhostObject_setCollisionShape_1:hu,_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1:jy,_emscripten_bind_btQuaternion_setW_1:ty,_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1:Lt,_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1:Wt,_emscripten_bind_btGhostObject_isActive_0:Ov,_emscripten_bind_btVector4_z_0:iA,_emscripten_bind_btCollisionObject_forceActivationState_1:tw,_emscripten_bind_btKinematicCharacterController_onGround_0:$u,_emscripten_bind_btRaycastVehicle_getWheelInfo_1:gv,_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btConeTwistConstraint_setLimit_2:mq,_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1:nv,_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0:yz,_emscripten_bind_Node_set_m_x_1:tr,_emscripten_bind_btSoftBody_setFriction_1:au,_emscripten_bind_btRigidBody_setSleepingThresholds_2:eu,_emscripten_bind_btSoftBody_upcast_1:Yv,_emscripten_bind_btCollisionObject_setWorldTransform_1:ql,_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0:Zz,_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1:$v,_emscripten_bind_btStridingMeshInterface___destroy___0:Zt,_emscripten_bind_btSoftBody_setActivationState_1:Dt,_emscripten_bind_btManifoldPoint_get_m_localPointA_0:FA,_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0:Ow,_emscripten_bind_btSoftBodyHelpers_CreatePatch_9:Ee,_emscripten_bind_btDispatcher_getNumManifolds_0:_u,_emscripten_bind_btConvexShape_setMargin_1:Hu,_emscripten_bind_btSoftBody_get_m_nodes_0:mA,_emscripten_bind_btSoftBody___destroy___0:Xt,_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0:Bx,_emscripten_bind_btRigidBody_activate_1:wr,_emscripten_bind_btRigidBody_activate_0:_r,_emscripten_bind_btRaycastVehicle___destroy___0:Zt,_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0:pz,_emscripten_bind_btGhostObject_setActivationState_1:Dt,_emscripten_bind_btSoftBodyArray___destroy___0:Lp,_emscripten_bind_Material_set_m_kLST_1:sy,_emscripten_bind_tMaterialArray_size_0:Zz,_emscripten_bind_btCollisionWorld_contactPairTest_3:Dr,_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0:Vw,_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1:iw,_emscripten_bind_Config_get_kSS_SPLT_CL_0:Oz,_emscripten_bind_btCylinderShapeX___destroy___0:Zt,_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0:Ty,_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0:uA,_emscripten_bind_ContactResultCallback___destroy___0:Zt,_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0:vv,_emscripten_bind_btSoftBody_setAnisotropicFriction_2:Do,_emscripten_bind_btConstraintSetting_btConstraintSetting_0:vn,_emscripten_bind_btRigidBody_getMotionState_0:Py,_emscripten_bind_btKinematicCharacterController_getGhostObject_0:Yx,_emscripten_bind_btRigidBody_btRigidBody_1:zi,_emscripten_bind_btTriangleMeshShape___destroy___0:Zt,_emscripten_bind_btKinematicCharacterController_setWalkDirection_1:st,_emscripten_bind_btDynamicsWorld_removeAction_1:ju,_emscripten_bind_btRigidBody_applyTorque_1:Qo,_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0:Sw,_emscripten_bind_btTransform_setIdentity_0:yn,_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0:yA,_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1:cr,_emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0:jA,_emscripten_bind_btGhostObject_setUserPointer_1:Zw,_emscripten_bind_btKinematicCharacterController_getGravity_0:Iz,_emscripten_enum_PHY_ScalarType_PHY_SHORT:rB,_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_btDiscreteDynamicsWorld_addAction_1:qu,_emscripten_bind_btHingeConstraint_btHingeConstraint_4:Dg,_emscripten_bind_LocalShapeInfo_get_m_shapePart_0:Vy,_emscripten_bind_btConeShape_calculateLocalInertia_2:gt,_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2:gt,_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1:nv,_llvm_bswap_i32:xw,_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1:Jt,_emscripten_bind_btSphereShape_setLocalScaling_1:lu,_emscripten_bind_btRigidBody_applyCentralLocalForce_1:qm,_emscripten_bind_btVector4_w_0:eA,_emscripten_bind_btWheelInfo_get_m_worldTransform_0:xz,_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0:$y,_emscripten_bind_btBvhTriangleMeshShape___destroy___0:Zt,_emscripten_bind_Config_set_citerations_1:mx,_emscripten_bind_btSoftBody_checkFace_3:_k,_emscripten_bind_Config_get_kSKHR_CL_0:tz,_free:hd,_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0:Hz,_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1:sy,_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1:Gt,_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0:Ao,_emscripten_bind_Config_set_diterations_1:kx,_emscripten_bind_btGeneric6DofConstraint___destroy___0:Zt,_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1:Rt,_emscripten_bind_btVector4_btVector4_4:Qp,_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3:gs,_emscripten_bind_btVector4_x_0:yA,_emscripten_bind_Config_set_kDP_1:ry,_emscripten_bind_btGhostObject_getUserPointer_0:Xy,_emscripten_bind_btConvexHullShape_addPoint_1:Pu,_emscripten_bind_btConvexHullShape_addPoint_2:fu,_emscripten_bind_btVector4_op_sub_1:dr,_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0:Tz,_emscripten_bind_Config_set_kMT_1:hy,_emscripten_bind_btTransform_getOrigin_0:uA,_emscripten_bind_Config_get_kKHR_0:Jz,_emscripten_bind_Material_get_m_kLST_0:jA,_emscripten_bind_btHingeConstraint___destroy___0:Zt,_emscripten_bind_btPairCachingGhostObject_getUserPointer_0:Xy,_emscripten_bind_btSoftBody_set_m_nodes_1:sh,_emscripten_bind_Config_set_viterations_1:ix,_emscripten_bind_btConvexShape_calculateLocalInertia_2:gt,_memset:Tn,_emscripten_bind_btKinematicCharacterController___destroy___0:Zt,_emscripten_bind_btConvexHullShape_setLocalScaling_1:lu,_emscripten_bind_btTriangleMesh_btTriangleMesh_0:Vq,_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0:Fy,_emscripten_bind_btTriangleMesh_btTriangleMesh_2:jq,_emscripten_bind_btTransform___destroy___0:Lx,_emscripten_bind_btWheelInfo_set_m_frictionSlip_1:Gw,_emscripten_bind_btSoftBodyHelpers___destroy___0:Lx,_emscripten_bind_btHingeConstraint_enableAngularMotor_3:fs,_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1:nr,_emscripten_bind_btRigidBody_setCenterOfMassTransform_1:cu,_emscripten_bind_btManifoldPoint_get_m_localPointB_0:yz,_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3:Dr,_emscripten_bind_btSliderConstraint_setLowerLinLimit_1:ow,_emscripten_bind_btPoint2PointConstraint_set_m_setting_1:Cr,_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1:Ly,_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1:rw,_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0:py,_emscripten_bind_btRigidBody_setLinearVelocity_1:bq,_emscripten_bind_btVehicleTuning_btVehicleTuning_0:Km,_emscripten_bind_Config_set_maxvolume_1:Hx,_emscripten_bind_btDefaultSoftBodySolver___destroy___0:Zt,_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1:lr,_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0:dx,_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1:Nv,_emscripten_bind_btDynamicsWorld_addAction_1:qu,_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1:ju,_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1:ty,_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2:ks,_emscripten_bind_btDefaultVehicleRaycaster___destroy___0:Zt,_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1:tv,_emscripten_bind_btQuaternion_setEulerZYX_3:Kn,_emscripten_bind_Config_set_kLF_1:iy,_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1:Nt,_emscripten_enum_PHY_ScalarType_PHY_FLOAT:sB,_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1:Yu,_emscripten_bind_Config_set_kSS_SPLT_CL_1:ny,_emscripten_bind_btSoftBody_forceActivationState_1:tw,_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1:Nt,_emscripten_bind_btKinematicCharacterController_setFallSpeed_1:fy,_emscripten_bind_Material_get_m_flags_0:qz,_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0:ax,_emscripten_bind_ClosestConvexResultCallback_hasHit_0:ey,_emscripten_bind_btCapsuleShapeZ___destroy___0:Zt,_emscripten_bind_btRaycastVehicle_getRigidBody_0:zy,_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0:Kx,_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0:Yx,_emscripten_bind_btTriangleMesh_addTriangle_3:Ln,_emscripten_bind_btGhostObject_getOverlappingObject_1:Ju,_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0:It,_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0:Bz,_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1:ir,_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2:Vs,_emscripten_bind_btCompoundShape_getChildShape_1:Du,_emscripten_bind_btRigidBody_setCollisionFlags_1:Hw,_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1:Tv,_emscripten_bind_Config_set_kCHR_1:$x,_emscripten_bind_btConeShape___destroy___0:Zt,_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2:Gm,_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3:sj,_emscripten_bind_btSliderConstraint_btSliderConstraint_5:tf,_emscripten_bind_btSliderConstraint_btSliderConstraint_3:Je,_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0:Uz,_emscripten_bind_RaycastInfo_set_m_hardPointWS_1:lr,_emscripten_bind_btRigidBody_forceActivationState_1:tw,_emscripten_bind_btPoint2PointConstraint_setPivotB_1:$q,_emscripten_bind_btManifoldPoint_getDistance_0:kz,_emscripten_bind_btGhostPairCallback___destroy___0:Zt,_emscripten_bind_btTransform_setFromOpenGLMatrix_1:um,_emscripten_bind_btKinematicCharacterController_getMaxSlope_0:Kz,_emscripten_bind_btSliderConstraint_enableFeedback_1:gw,_emscripten_bind_btRaycastVehicle_addWheel_7:ce,_emscripten_bind_btPairCachingGhostObject_isActive_0:Ov,_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1:yw,_emscripten_bind_btStaticPlaneShape___destroy___0:Zt,_emscripten_bind_btHingeConstraint_enableMotor_1:sw,_emscripten_bind_btDispatcherInfo_set_m_stepCount_1:yw,_emscripten_bind_btBoxShape_setLocalScaling_1:lu,_emscripten_bind_btConeShapeZ___destroy___0:Zt,_emscripten_bind_btDynamicsWorld_getPairCache_0:It,_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5:Zq,_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1:ry,_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5:Zq,_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2:ws,_emscripten_bind_btRigidBody_setRestitution_1:Vt,_emscripten_bind_btVector4_btVector4_0:vr,_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0:Pw,_emscripten_bind_btGhostObject_setCcdMotionThreshold_1:Kw,_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1:rw,_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1:Pq,_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1:Pq,_emscripten_bind_tMaterialArray_at_1:rv,_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1:Ww,_emscripten_bind_Material_set_m_kVST_1:ty,_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1:so,_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0:iA,_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3:Is,_emscripten_bind_btWheelInfo_get_m_raycastInfo_0:FA,_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0:Mw,_emscripten_bind_btConvexShape_getMargin_0:mv,_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0:bo,_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1:hy,_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1:fr,_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0:Tz,__GLOBAL__sub_I_btQuickprof_cpp:Fm,runPostSets:Ks,stackAlloc:qv,stackSave:CB,stackRestore:vB,establishStackSpace:Cz,setThrew:ox,setTempRet0:xB,getTempRet0:BB,dynCall_viiiii:bt,dynCall_vid:Xx,dynCall_vi:aA,dynCall_viiidii:us,dynCall_vii:sx,dynCall_iiiiiiiiiii:Yp,dynCall_ii:Wy,dynCall_viidi:xu,dynCall_viddiii:Ds,dynCall_vidii:yu,dynCall_iiiii:Kt,dynCall_vidi:Ev,dynCall_diiiiiiii:hr,dynCall_viiiiddddiid:cq,dynCall_diiiii:Ss,dynCall_vidd:mw,dynCall_iiii:Ou,dynCall_viiiiid:ts,dynCall_viiiiii:cs,dynCall_iiid:dv,dynCall_di:oz,dynCall_iiiiiii:Nr,dynCall_diiidii:Zr,dynCall_viidii:mt,dynCall_viiiiiii:zr,dynCall_viiiiiiiii:Kq,dynCall_viiiiiiiiii:gq,dynCall_iii:Aw,dynCall_diii:Wu,dynCall_diiiiiiiiii:_p,dynCall_viiiid:lt,dynCall_diiiiiiiii:Eq,dynCall_did:tx,dynCall_viiiidddddidi:Op,dynCall_diidii:$s,dynCall_diiii:Ut,dynCall_iiiiiiiiii:Bq,dynCall_viiid:vu,dynCall_viii:iv,dynCall_v:nB,dynCall_viid:Lv,dynCall_iidid:pu,dynCall_viiii:gu}})
	
	
	// EMSCRIPTEN_END_ASM
	(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _emscripten_bind_btCylinderShape___destroy___0=Module["_emscripten_bind_btCylinderShape___destroy___0"]=asm["_emscripten_bind_btCylinderShape___destroy___0"];var _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=Module["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"];var _emscripten_bind_btGhostObject___destroy___0=Module["_emscripten_bind_btGhostObject___destroy___0"]=asm["_emscripten_bind_btGhostObject___destroy___0"];var _emscripten_bind_btPoint2PointConstraint_set_m_setting_1=Module["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"]=asm["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"];var _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"];var _emscripten_bind_btCollisionObject_isActive_0=Module["_emscripten_bind_btCollisionObject_isActive_0"]=asm["_emscripten_bind_btCollisionObject_isActive_0"];var _emscripten_bind_btRotationalLimitMotor___destroy___0=Module["_emscripten_bind_btRotationalLimitMotor___destroy___0"]=asm["_emscripten_bind_btRotationalLimitMotor___destroy___0"];var _emscripten_bind_btDynamicsWorld_removeAction_1=Module["_emscripten_bind_btDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btDynamicsWorld_removeAction_1"];var _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=Module["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"];var _emscripten_bind_btQuaternion_w_0=Module["_emscripten_bind_btQuaternion_w_0"]=asm["_emscripten_bind_btQuaternion_w_0"];var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];var _emscripten_bind_btCapsuleShapeX_getMargin_0=Module["_emscripten_bind_btCapsuleShapeX_getMargin_0"]=asm["_emscripten_bind_btCapsuleShapeX_getMargin_0"];var _emscripten_bind_Node_set_m_n_1=Module["_emscripten_bind_Node_set_m_n_1"]=asm["_emscripten_bind_Node_set_m_n_1"];var _emscripten_bind_btCompoundShape_getMargin_0=Module["_emscripten_bind_btCompoundShape_getMargin_0"]=asm["_emscripten_bind_btCompoundShape_getMargin_0"];var _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=Module["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"];var _emscripten_bind_btRigidBody_setUserPointer_1=Module["_emscripten_bind_btRigidBody_setUserPointer_1"]=asm["_emscripten_bind_btRigidBody_setUserPointer_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"];var _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btQuaternion_setX_1=Module["_emscripten_bind_btQuaternion_setX_1"]=asm["_emscripten_bind_btQuaternion_setX_1"];var _emscripten_bind_btCylinderShapeZ_getMargin_0=Module["_emscripten_bind_btCylinderShapeZ_getMargin_0"]=asm["_emscripten_bind_btCylinderShapeZ_getMargin_0"];var _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=Module["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"];var _emscripten_bind_btQuaternion_setZ_1=Module["_emscripten_bind_btQuaternion_setZ_1"]=asm["_emscripten_bind_btQuaternion_setZ_1"];var _emscripten_bind_btCollisionObject_getUserIndex_0=Module["_emscripten_bind_btCollisionObject_getUserIndex_0"]=asm["_emscripten_bind_btCollisionObject_getUserIndex_0"];var _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=Module["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"];var _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"];var _emscripten_bind_btKinematicCharacterController_setMaxSlope_1=Module["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"]=asm["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"];var _emscripten_bind_btQuadWord_z_0=Module["_emscripten_bind_btQuadWord_z_0"]=asm["_emscripten_bind_btQuadWord_z_0"];var _emscripten_bind_btSoftBody_setCcdMotionThreshold_1=Module["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"];var _emscripten_bind_Material___destroy___0=Module["_emscripten_bind_Material___destroy___0"]=asm["_emscripten_bind_Material___destroy___0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_2=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"];var _emscripten_bind_btSoftBody_rotate_1=Module["_emscripten_bind_btSoftBody_rotate_1"]=asm["_emscripten_bind_btSoftBody_rotate_1"];var _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=Module["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"]=asm["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"];var _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=Module["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"]=asm["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"];var _emscripten_bind_btVector4_setY_1=Module["_emscripten_bind_btVector4_setY_1"]=asm["_emscripten_bind_btVector4_setY_1"];var _emscripten_enum_PHY_ScalarType_PHY_UCHAR=Module["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"]=asm["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"];var _emscripten_bind_btQuaternion_setW_1=Module["_emscripten_bind_btQuaternion_setW_1"]=asm["_emscripten_bind_btQuaternion_setW_1"];var _emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=Module["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"];var _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=Module["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"];var _emscripten_bind_btCollisionDispatcher___destroy___0=Module["_emscripten_bind_btCollisionDispatcher___destroy___0"]=asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];var _emscripten_bind_btRigidBody_applyCentralImpulse_1=Module["_emscripten_bind_btRigidBody_applyCentralImpulse_1"]=asm["_emscripten_bind_btRigidBody_applyCentralImpulse_1"];var _emscripten_bind_btConvexHullShape_getMargin_0=Module["_emscripten_bind_btConvexHullShape_getMargin_0"]=asm["_emscripten_bind_btConvexHullShape_getMargin_0"];var _emscripten_bind_btDefaultMotionState_getWorldTransform_1=Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"]=asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"];var _emscripten_bind_btDynamicsWorld_rayTest_3=Module["_emscripten_bind_btDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btDynamicsWorld_rayTest_3"];var _emscripten_bind_Config_set_kSR_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSR_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSR_SPLT_CL_1"];var _emscripten_bind_btQuadWord_x_0=Module["_emscripten_bind_btQuadWord_x_0"]=asm["_emscripten_bind_btQuadWord_x_0"];var _emscripten_bind_Config_get_diterations_0=Module["_emscripten_bind_Config_get_diterations_0"]=asm["_emscripten_bind_Config_get_diterations_0"];var _emscripten_bind_btCollisionObject_isKinematicObject_0=Module["_emscripten_bind_btCollisionObject_isKinematicObject_0"]=asm["_emscripten_bind_btCollisionObject_isKinematicObject_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"];var _emscripten_bind_btSphereShape___destroy___0=Module["_emscripten_bind_btSphereShape___destroy___0"]=asm["_emscripten_bind_btSphereShape___destroy___0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"];var _emscripten_bind_btSoftBody_isKinematicObject_0=Module["_emscripten_bind_btSoftBody_isKinematicObject_0"]=asm["_emscripten_bind_btSoftBody_isKinematicObject_0"];var _emscripten_bind_btRigidBody_getCenterOfMassTransform_0=Module["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"]=asm["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"];var _emscripten_bind_btTransform_setIdentity_0=Module["_emscripten_bind_btTransform_setIdentity_0"]=asm["_emscripten_bind_btTransform_setIdentity_0"];var _emscripten_bind_btGhostObject_isKinematicObject_0=Module["_emscripten_bind_btGhostObject_isKinematicObject_0"]=asm["_emscripten_bind_btGhostObject_isKinematicObject_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"];var _emscripten_bind_btCapsuleShape___destroy___0=Module["_emscripten_bind_btCapsuleShape___destroy___0"]=asm["_emscripten_bind_btCapsuleShape___destroy___0"];var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"]=asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];var _emscripten_bind_btCollisionObject_activate_1=Module["_emscripten_bind_btCollisionObject_activate_1"]=asm["_emscripten_bind_btCollisionObject_activate_1"];var _emscripten_bind_btCollisionObject_activate_0=Module["_emscripten_bind_btCollisionObject_activate_0"]=asm["_emscripten_bind_btCollisionObject_activate_0"];var _emscripten_bind_btKinematicCharacterController_setUpAxis_1=Module["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"]=asm["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"];var _emscripten_bind_Config_set_kSSHR_CL_1=Module["_emscripten_bind_Config_set_kSSHR_CL_1"]=asm["_emscripten_bind_Config_set_kSSHR_CL_1"];var _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=Module["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"];var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"]=asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];var _emscripten_bind_btVector3_setX_1=Module["_emscripten_bind_btVector3_setX_1"]=asm["_emscripten_bind_btVector3_setX_1"];var _emscripten_bind_btCollisionConfiguration___destroy___0=Module["_emscripten_bind_btCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];var _emscripten_bind_btCapsuleShapeZ_setMargin_1=Module["_emscripten_bind_btCapsuleShapeZ_setMargin_1"]=asm["_emscripten_bind_btCapsuleShapeZ_setMargin_1"];var _emscripten_bind_btHingeConstraint_enableFeedback_1=Module["_emscripten_bind_btHingeConstraint_enableFeedback_1"]=asm["_emscripten_bind_btHingeConstraint_enableFeedback_1"];var _emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=Module["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"]=asm["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"];var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"];var _emscripten_bind_Config_set_kMT_1=Module["_emscripten_bind_Config_set_kMT_1"]=asm["_emscripten_bind_Config_set_kMT_1"];var _emscripten_bind_btManifoldPoint_set_m_localPointB_1=Module["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"];var _emscripten_bind_btVector3_setZ_1=Module["_emscripten_bind_btVector3_setZ_1"]=asm["_emscripten_bind_btVector3_setZ_1"];var _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=Module["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"]=asm["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"];var _emscripten_bind_btQuaternion_setValue_4=Module["_emscripten_bind_btQuaternion_setValue_4"]=asm["_emscripten_bind_btQuaternion_setValue_4"];var _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=Module["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"];var _emscripten_bind_btSoftBody_transform_1=Module["_emscripten_bind_btSoftBody_transform_1"]=asm["_emscripten_bind_btSoftBody_transform_1"];var _emscripten_bind_LocalShapeInfo___destroy___0=Module["_emscripten_bind_LocalShapeInfo___destroy___0"]=asm["_emscripten_bind_LocalShapeInfo___destroy___0"];var _emscripten_bind_btSoftBody_appendAnchor_4=Module["_emscripten_bind_btSoftBody_appendAnchor_4"]=asm["_emscripten_bind_btSoftBody_appendAnchor_4"];var _emscripten_bind_btPoint2PointConstraint_get_m_setting_0=Module["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"]=asm["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"];var _emscripten_bind_btQuadWord_setY_1=Module["_emscripten_bind_btQuadWord_setY_1"]=asm["_emscripten_bind_btQuadWord_setY_1"];var _emscripten_bind_btRigidBody_isKinematicObject_0=Module["_emscripten_bind_btRigidBody_isKinematicObject_0"]=asm["_emscripten_bind_btRigidBody_isKinematicObject_0"];var _emscripten_bind_ContactResultCallback_addSingleResult_7=Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"]=asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"];var _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=Module["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"]=asm["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"];var _emscripten_bind_btSliderConstraint_btSliderConstraint_5=Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"]=asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"];var _emscripten_bind_btConeTwistConstraint_setDamping_1=Module["_emscripten_bind_btConeTwistConstraint_setDamping_1"]=asm["_emscripten_bind_btConeTwistConstraint_setDamping_1"];var _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=Module["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"]=asm["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"];var _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btCylinderShape_setMargin_1=Module["_emscripten_bind_btCylinderShape_setMargin_1"]=asm["_emscripten_bind_btCylinderShape_setMargin_1"];var _emscripten_bind_btCollisionWorld___destroy___0=Module["_emscripten_bind_btCollisionWorld___destroy___0"]=asm["_emscripten_bind_btCollisionWorld___destroy___0"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"];var _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"];var _emscripten_bind_btBoxShape_btBoxShape_1=Module["_emscripten_bind_btBoxShape_btBoxShape_1"]=asm["_emscripten_bind_btBoxShape_btBoxShape_1"];var _emscripten_bind_btPersistentManifold_getBody1_0=Module["_emscripten_bind_btPersistentManifold_getBody1_0"]=asm["_emscripten_bind_btPersistentManifold_getBody1_0"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];var _emscripten_bind_RaycastInfo_set_m_isInContact_1=Module["_emscripten_bind_RaycastInfo_set_m_isInContact_1"]=asm["_emscripten_bind_RaycastInfo_set_m_isInContact_1"];var _emscripten_bind_btKinematicCharacterController_setGravity_1=Module["_emscripten_bind_btKinematicCharacterController_setGravity_1"]=asm["_emscripten_bind_btKinematicCharacterController_setGravity_1"];var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"]=asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"];var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"]=asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"];var _emscripten_bind_LocalShapeInfo_get_m_shapePart_0=Module["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"]=asm["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"];var _emscripten_bind_btWheelInfo_get_m_rollInfluence_0=Module["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"]=asm["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"];var _emscripten_bind_btVector4_setValue_4=Module["_emscripten_bind_btVector4_setValue_4"]=asm["_emscripten_bind_btVector4_setValue_4"];var _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_tNodeArray_size_0=Module["_emscripten_bind_tNodeArray_size_0"]=asm["_emscripten_bind_tNodeArray_size_0"];var _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=Module["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"]=asm["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"];var _emscripten_bind_btVector3_length_0=Module["_emscripten_bind_btVector3_length_0"]=asm["_emscripten_bind_btVector3_length_0"];var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"]=asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"];var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"];var _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_btBoxShape_getMargin_0=Module["_emscripten_bind_btBoxShape_getMargin_0"]=asm["_emscripten_bind_btBoxShape_getMargin_0"];var _emscripten_bind_btPairCachingGhostObject___destroy___0=Module["_emscripten_bind_btPairCachingGhostObject___destroy___0"]=asm["_emscripten_bind_btPairCachingGhostObject___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_setUserPointer_1=Module["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btPairCachingGhostObject_activate_0=Module["_emscripten_bind_btPairCachingGhostObject_activate_0"]=asm["_emscripten_bind_btPairCachingGhostObject_activate_0"];var _emscripten_bind_btPairCachingGhostObject_activate_1=Module["_emscripten_bind_btPairCachingGhostObject_activate_1"]=asm["_emscripten_bind_btPairCachingGhostObject_activate_1"];var _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"]=asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"];var _emscripten_bind_btSoftBody_setUserPointer_1=Module["_emscripten_bind_btSoftBody_setUserPointer_1"]=asm["_emscripten_bind_btSoftBody_setUserPointer_1"];var _emscripten_bind_btSoftBody_setMass_2=Module["_emscripten_bind_btSoftBody_setMass_2"]=asm["_emscripten_bind_btSoftBody_setMass_2"];var _emscripten_bind_Config_get_kCHR_0=Module["_emscripten_bind_Config_get_kCHR_0"]=asm["_emscripten_bind_Config_get_kCHR_0"];var _emscripten_bind_btPairCachingGhostObject_forceActivationState_1=Module["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"]=asm["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"];var _emscripten_bind_btDefaultMotionState___destroy___0=Module["_emscripten_bind_btDefaultMotionState___destroy___0"]=asm["_emscripten_bind_btDefaultMotionState___destroy___0"];var _emscripten_bind_btDispatcherInfo_get_m_stepCount_0=Module["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"];var _emscripten_bind_btQuadWord_setW_1=Module["_emscripten_bind_btQuadWord_setW_1"]=asm["_emscripten_bind_btQuadWord_setW_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"];var _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=Module["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"]=asm["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"];var _emscripten_bind_LocalShapeInfo_set_m_shapePart_1=Module["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"]=asm["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"];var _emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0=Module["_emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0"]=asm["_emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0"];var _emscripten_bind_btRigidBody_setLinearFactor_1=Module["_emscripten_bind_btRigidBody_setLinearFactor_1"]=asm["_emscripten_bind_btRigidBody_setLinearFactor_1"];var _emscripten_bind_btCompoundShape_getChildShape_1=Module["_emscripten_bind_btCompoundShape_getChildShape_1"]=asm["_emscripten_bind_btCompoundShape_getChildShape_1"];var _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"];var _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=Module["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"]=asm["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"];var _emscripten_bind_btWheelInfo_get_m_engineForce_0=Module["_emscripten_bind_btWheelInfo_get_m_engineForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_engineForce_0"];var _emscripten_bind_Config_get_kSR_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSR_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSR_SPLT_CL_0"];var _emscripten_bind_btRaycastVehicle_setSteeringValue_2=Module["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"]=asm["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"];var _emscripten_bind_btPoint2PointConstraint___destroy___0=Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"]=asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];var _emscripten_bind_btSoftBody_getUserPointer_0=Module["_emscripten_bind_btSoftBody_getUserPointer_0"]=asm["_emscripten_bind_btSoftBody_getUserPointer_0"];var _emscripten_bind_btCollisionShape_setMargin_1=Module["_emscripten_bind_btCollisionShape_setMargin_1"]=asm["_emscripten_bind_btCollisionShape_setMargin_1"];var _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"];var _emscripten_bind_Config_get_kVCF_0=Module["_emscripten_bind_Config_get_kVCF_0"]=asm["_emscripten_bind_Config_get_kVCF_0"];var _malloc=Module["_malloc"]=asm["_malloc"];var _emscripten_bind_btDispatcherInfo_get_m_useEpa_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1"];var _emscripten_bind_btTransform_btTransform_2=Module["_emscripten_bind_btTransform_btTransform_2"]=asm["_emscripten_bind_btTransform_btTransform_2"];var _emscripten_bind_btTransform_btTransform_0=Module["_emscripten_bind_btTransform_btTransform_0"]=asm["_emscripten_bind_btTransform_btTransform_0"];var _emscripten_bind_btPairCachingGhostObject_getUserIndex_0=Module["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"];var _emscripten_bind_Config_set_kVC_1=Module["_emscripten_bind_Config_set_kVC_1"]=asm["_emscripten_bind_Config_set_kVC_1"];var _emscripten_bind_btVector3_op_sub_1=Module["_emscripten_bind_btVector3_op_sub_1"]=asm["_emscripten_bind_btVector3_op_sub_1"];var _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"];var _emscripten_bind_RaycastInfo_set_m_hardPointWS_1=Module["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"];var _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=Module["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"];var _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=Module["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"]=asm["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"];var _emscripten_bind_btSoftBody_appendNode_2=Module["_emscripten_bind_btSoftBody_appendNode_2"]=asm["_emscripten_bind_btSoftBody_appendNode_2"];var _emscripten_bind_btCollisionObject_setActivationState_1=Module["_emscripten_bind_btCollisionObject_setActivationState_1"]=asm["_emscripten_bind_btCollisionObject_setActivationState_1"];var _emscripten_bind_btPersistentManifold___destroy___0=Module["_emscripten_bind_btPersistentManifold___destroy___0"]=asm["_emscripten_bind_btPersistentManifold___destroy___0"];var _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=Module["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"];var _emscripten_bind_btCylinderShapeZ___destroy___0=Module["_emscripten_bind_btCylinderShapeZ___destroy___0"]=asm["_emscripten_bind_btCylinderShapeZ___destroy___0"];var _emscripten_bind_btMatrix3x3___destroy___0=Module["_emscripten_bind_btMatrix3x3___destroy___0"]=asm["_emscripten_bind_btMatrix3x3___destroy___0"];var _emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1"];var _emscripten_bind_ConvexResultCallback_hasHit_0=Module["_emscripten_bind_ConvexResultCallback_hasHit_0"]=asm["_emscripten_bind_ConvexResultCallback_hasHit_0"];var _emscripten_bind_btCollisionShape_calculateLocalInertia_2=Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];var _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_Config_set_kPR_1=Module["_emscripten_bind_Config_set_kPR_1"]=asm["_emscripten_bind_Config_set_kPR_1"];var _emscripten_bind_btCollisionWorld_convexSweepTest_5=Module["_emscripten_bind_btCollisionWorld_convexSweepTest_5"]=asm["_emscripten_bind_btCollisionWorld_convexSweepTest_5"];var _emscripten_bind_btSoftBody_set_m_materials_1=Module["_emscripten_bind_btSoftBody_set_m_materials_1"]=asm["_emscripten_bind_btSoftBody_set_m_materials_1"];var _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"];var _emscripten_bind_btRigidBody_upcast_1=Module["_emscripten_bind_btRigidBody_upcast_1"]=asm["_emscripten_bind_btRigidBody_upcast_1"];var _emscripten_bind_btConstraintSetting_set_m_damping_1=Module["_emscripten_bind_btConstraintSetting_set_m_damping_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_damping_1"];var _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=Module["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"]=asm["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"];var _emscripten_bind_btRigidBody_setCcdMotionThreshold_1=Module["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"];var _emscripten_bind_btConvexHullShape_setMargin_1=Module["_emscripten_bind_btConvexHullShape_setMargin_1"]=asm["_emscripten_bind_btConvexHullShape_setMargin_1"];var _emscripten_bind_btRigidBody_applyForce_2=Module["_emscripten_bind_btRigidBody_applyForce_2"]=asm["_emscripten_bind_btRigidBody_applyForce_2"];var _emscripten_bind_btConeShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btConstraintSetting_set_m_tau_1=Module["_emscripten_bind_btConstraintSetting_set_m_tau_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_tau_1"];var _emscripten_bind_btConvexHullShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"];var _emscripten_bind_RaycastInfo_get_m_contactPointWS_0=Module["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"];var _emscripten_bind_btSoftBody_setCollisionFlags_1=Module["_emscripten_bind_btSoftBody_setCollisionFlags_1"]=asm["_emscripten_bind_btSoftBody_setCollisionFlags_1"];var _emscripten_bind_btSphereShape_calculateLocalInertia_2=Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];var _emscripten_bind_Config_set_maxvolume_1=Module["_emscripten_bind_Config_set_maxvolume_1"]=asm["_emscripten_bind_Config_set_maxvolume_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=Module["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"]=asm["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"];var _emscripten_bind_btSoftBody_setTotalMass_2=Module["_emscripten_bind_btSoftBody_setTotalMass_2"]=asm["_emscripten_bind_btSoftBody_setTotalMass_2"];var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];var _emscripten_bind_btGhostObject_setFriction_1=Module["_emscripten_bind_btGhostObject_setFriction_1"]=asm["_emscripten_bind_btGhostObject_setFriction_1"];var _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=Module["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"];var _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"];var _emscripten_bind_btCylinderShapeZ_setMargin_1=Module["_emscripten_bind_btCylinderShapeZ_setMargin_1"]=asm["_emscripten_bind_btCylinderShapeZ_setMargin_1"];var _emscripten_bind_btRigidBody_setFriction_1=Module["_emscripten_bind_btRigidBody_setFriction_1"]=asm["_emscripten_bind_btRigidBody_setFriction_1"];var _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"];var _emscripten_bind_btGhostObject_setWorldTransform_1=Module["_emscripten_bind_btGhostObject_setWorldTransform_1"]=asm["_emscripten_bind_btGhostObject_setWorldTransform_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1"];var _emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0=Module["_emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0"]=asm["_emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0"];var _emscripten_bind_btManifoldPoint_getAppliedImpulse_0=Module["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"]=asm["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"];var _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"];var _emscripten_bind_btConvexHullShape___destroy___0=Module["_emscripten_bind_btConvexHullShape___destroy___0"]=asm["_emscripten_bind_btConvexHullShape___destroy___0"];var _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btDiscreteDynamicsWorld_addAction_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"];var _emscripten_bind_btVector4_setX_1=Module["_emscripten_bind_btVector4_setX_1"]=asm["_emscripten_bind_btVector4_setX_1"];var _emscripten_bind_btKinematicCharacterController_jump_0=Module["_emscripten_bind_btKinematicCharacterController_jump_0"]=asm["_emscripten_bind_btKinematicCharacterController_jump_0"];var _emscripten_bind_btCollisionObject_getUserPointer_0=Module["_emscripten_bind_btCollisionObject_getUserPointer_0"]=asm["_emscripten_bind_btCollisionObject_getUserPointer_0"];var _emscripten_bind_btWheelInfo_set_m_raycastInfo_1=Module["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"]=asm["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"];var _emscripten_bind_btCollisionWorld_contactTest_2=Module["_emscripten_bind_btCollisionWorld_contactTest_2"]=asm["_emscripten_bind_btCollisionWorld_contactTest_2"];var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"];var _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"];var _emscripten_bind_btTransform_setOrigin_1=Module["_emscripten_bind_btTransform_setOrigin_1"]=asm["_emscripten_bind_btTransform_setOrigin_1"];var _emscripten_bind_btVector4_setZ_1=Module["_emscripten_bind_btVector4_setZ_1"]=asm["_emscripten_bind_btVector4_setZ_1"];var _emscripten_bind_btQuadWord_y_0=Module["_emscripten_bind_btQuadWord_y_0"]=asm["_emscripten_bind_btQuadWord_y_0"];var _emscripten_bind_btTransform_getBasis_0=Module["_emscripten_bind_btTransform_getBasis_0"]=asm["_emscripten_bind_btTransform_getBasis_0"];var _emscripten_bind_btPairCachingGhostObject_setFriction_1=Module["_emscripten_bind_btPairCachingGhostObject_setFriction_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setFriction_1"];var _emscripten_bind_Config_set_kSRHR_CL_1=Module["_emscripten_bind_Config_set_kSRHR_CL_1"]=asm["_emscripten_bind_Config_set_kSRHR_CL_1"];var _emscripten_bind_btCollisionDispatcher_getNumManifolds_0=Module["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"]=asm["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"];var _emscripten_bind_btVehicleRaycaster___destroy___0=Module["_emscripten_bind_btVehicleRaycaster___destroy___0"]=asm["_emscripten_bind_btVehicleRaycaster___destroy___0"];var _emscripten_bind_ClosestRayResultCallback___destroy___0=Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"]=asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];var _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"];var _emscripten_bind_btCylinderShapeX_setMargin_1=Module["_emscripten_bind_btCylinderShapeX_setMargin_1"]=asm["_emscripten_bind_btCylinderShapeX_setMargin_1"];var _emscripten_bind_btQuadWord_w_0=Module["_emscripten_bind_btQuadWord_w_0"]=asm["_emscripten_bind_btQuadWord_w_0"];var _emscripten_bind_Node___destroy___0=Module["_emscripten_bind_Node___destroy___0"]=asm["_emscripten_bind_Node___destroy___0"];var _emscripten_bind_btAxisSweep3___destroy___0=Module["_emscripten_bind_btAxisSweep3___destroy___0"]=asm["_emscripten_bind_btAxisSweep3___destroy___0"];var _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"];var _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"];var _emscripten_bind_btCompoundShape_getNumChildShapes_0=Module["_emscripten_bind_btCompoundShape_getNumChildShapes_0"]=asm["_emscripten_bind_btCompoundShape_getNumChildShapes_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"];var _emscripten_bind_btGhostObject_btGhostObject_0=Module["_emscripten_bind_btGhostObject_btGhostObject_0"]=asm["_emscripten_bind_btGhostObject_btGhostObject_0"];var _emscripten_bind_btConeShape_btConeShape_2=Module["_emscripten_bind_btConeShape_btConeShape_2"]=asm["_emscripten_bind_btConeShape_btConeShape_2"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"];var _emscripten_bind_btManifoldPoint_set_m_localPointA_1=Module["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"];var _emscripten_bind_btCapsuleShapeX_setMargin_1=Module["_emscripten_bind_btCapsuleShapeX_setMargin_1"]=asm["_emscripten_bind_btCapsuleShapeX_setMargin_1"];var _emscripten_bind_btVector3_dot_1=Module["_emscripten_bind_btVector3_dot_1"]=asm["_emscripten_bind_btVector3_dot_1"];var _emscripten_bind_btGhostObject_getUserPointer_0=Module["_emscripten_bind_btGhostObject_getUserPointer_0"]=asm["_emscripten_bind_btGhostObject_getUserPointer_0"];var _emscripten_bind_btVector4_op_add_1=Module["_emscripten_bind_btVector4_op_add_1"]=asm["_emscripten_bind_btVector4_op_add_1"];var _emscripten_bind_btWheelInfo___destroy___0=Module["_emscripten_bind_btWheelInfo___destroy___0"]=asm["_emscripten_bind_btWheelInfo___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_4=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"];var _emscripten_bind_btTransform_setRotation_1=Module["_emscripten_bind_btTransform_setRotation_1"]=asm["_emscripten_bind_btTransform_setRotation_1"];var _emscripten_bind_Config_set_kSHR_1=Module["_emscripten_bind_Config_set_kSHR_1"]=asm["_emscripten_bind_Config_set_kSHR_1"];var _emscripten_bind_btPoint2PointConstraint_enableFeedback_1=Module["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"]=asm["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_2=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_3=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];var _emscripten_bind_btDynamicsWorld___destroy___0=Module["_emscripten_bind_btDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btDynamicsWorld___destroy___0"];var _emscripten_bind_btVector3_setY_1=Module["_emscripten_bind_btVector3_setY_1"]=asm["_emscripten_bind_btVector3_setY_1"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_4=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];var _emscripten_bind_btAxisSweep3_btAxisSweep3_5=Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"]=asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];var _emscripten_bind_btQuadWord_setX_1=Module["_emscripten_bind_btQuadWord_setX_1"]=asm["_emscripten_bind_btQuadWord_setX_1"];var _emscripten_bind_tMaterialArray___destroy___0=Module["_emscripten_bind_tMaterialArray___destroy___0"]=asm["_emscripten_bind_tMaterialArray___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"];var _emscripten_bind_Config_set_piterations_1=Module["_emscripten_bind_Config_set_piterations_1"]=asm["_emscripten_bind_Config_set_piterations_1"];var _emscripten_bind_btOverlappingPairCache___destroy___0=Module["_emscripten_bind_btOverlappingPairCache___destroy___0"]=asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];var _emscripten_bind_btRigidBody_setUserIndex_1=Module["_emscripten_bind_btRigidBody_setUserIndex_1"]=asm["_emscripten_bind_btRigidBody_setUserIndex_1"];var _emscripten_bind_Material_get_m_kAST_0=Module["_emscripten_bind_Material_get_m_kAST_0"]=asm["_emscripten_bind_Material_get_m_kAST_0"];var _emscripten_bind_btConstraintSetting___destroy___0=Module["_emscripten_bind_btConstraintSetting___destroy___0"]=asm["_emscripten_bind_btConstraintSetting___destroy___0"];var _emscripten_bind_RayResultCallback___destroy___0=Module["_emscripten_bind_RayResultCallback___destroy___0"]=asm["_emscripten_bind_RayResultCallback___destroy___0"];var _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=Module["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"];var _emscripten_bind_btPersistentManifold_getBody0_0=Module["_emscripten_bind_btPersistentManifold_getBody0_0"]=asm["_emscripten_bind_btPersistentManifold_getBody0_0"];var _emscripten_bind_btConeShapeX_btConeShapeX_2=Module["_emscripten_bind_btConeShapeX_btConeShapeX_2"]=asm["_emscripten_bind_btConeShapeX_btConeShapeX_2"];var _emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"];var _emscripten_bind_btConeTwistConstraint_enableFeedback_1=Module["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"]=asm["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"];var _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"];var _emscripten_bind_Config_get_piterations_0=Module["_emscripten_bind_Config_get_piterations_0"]=asm["_emscripten_bind_Config_get_piterations_0"];var _emscripten_bind_btSoftBody_translate_1=Module["_emscripten_bind_btSoftBody_translate_1"]=asm["_emscripten_bind_btSoftBody_translate_1"];var _emscripten_bind_btSliderConstraint_setUpperLinLimit_1=Module["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"];var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"]=asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];var _emscripten_bind_btVector3_op_mul_1=Module["_emscripten_bind_btVector3_op_mul_1"]=asm["_emscripten_bind_btVector3_op_mul_1"];var _emscripten_bind_btConcaveShape___destroy___0=Module["_emscripten_bind_btConcaveShape___destroy___0"]=asm["_emscripten_bind_btConcaveShape___destroy___0"];var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"]=asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];var _emscripten_bind_btQuaternion_x_0=Module["_emscripten_bind_btQuaternion_x_0"]=asm["_emscripten_bind_btQuaternion_x_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=Module["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"];var _emscripten_bind_Config_set_timescale_1=Module["_emscripten_bind_Config_set_timescale_1"]=asm["_emscripten_bind_Config_set_timescale_1"];var _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"];var _emscripten_bind_btConcaveShape_setLocalScaling_1=Module["_emscripten_bind_btConcaveShape_setLocalScaling_1"]=asm["_emscripten_bind_btConcaveShape_setLocalScaling_1"];var _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btConeShapeX_setLocalScaling_1=Module["_emscripten_bind_btConeShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btConeShapeX_setLocalScaling_1"];var _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=Module["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"];var _emscripten_bind_btSoftBody_appendLink_4=Module["_emscripten_bind_btSoftBody_appendLink_4"]=asm["_emscripten_bind_btSoftBody_appendLink_4"];var _emscripten_bind_btQuaternion_z_0=Module["_emscripten_bind_btQuaternion_z_0"]=asm["_emscripten_bind_btQuaternion_z_0"];var _emscripten_bind_btConvexHullShape_btConvexHullShape_0=Module["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"]=asm["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"];var _emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1=Module["_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1"]=asm["_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1"];var _emscripten_bind_btConstraintSetting_get_m_damping_0=Module["_emscripten_bind_btConstraintSetting_get_m_damping_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_damping_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"];var _emscripten_bind_Config_get_kLF_0=Module["_emscripten_bind_Config_get_kLF_0"]=asm["_emscripten_bind_Config_get_kLF_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_btGhostObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"];var _emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=Module["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"];var _emscripten_bind_btCollisionWorld_getBroadphase_0=Module["_emscripten_bind_btCollisionWorld_getBroadphase_0"]=asm["_emscripten_bind_btCollisionWorld_getBroadphase_0"];var _emscripten_bind_btRaycastVehicle_updateWheelTransform_2=Module["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"]=asm["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"];var _emscripten_bind_btDispatcherInfo_set_m_stepCount_1=Module["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"];var _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"]=asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];var _emscripten_bind_Material_set_m_flags_1=Module["_emscripten_bind_Material_set_m_flags_1"]=asm["_emscripten_bind_Material_set_m_flags_1"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"]=asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];var _emscripten_bind_Config_get_viterations_0=Module["_emscripten_bind_Config_get_viterations_0"]=asm["_emscripten_bind_Config_get_viterations_0"];var _emscripten_bind_btKinematicCharacterController_canJump_0=Module["_emscripten_bind_btKinematicCharacterController_canJump_0"]=asm["_emscripten_bind_btKinematicCharacterController_canJump_0"];var _emscripten_bind_btSoftBodyArray_at_1=Module["_emscripten_bind_btSoftBodyArray_at_1"]=asm["_emscripten_bind_btSoftBodyArray_at_1"];var _emscripten_bind_btPairCachingGhostObject_setUserIndex_1=Module["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"];var _emscripten_bind_btRigidBody_isActive_0=Module["_emscripten_bind_btRigidBody_isActive_0"]=asm["_emscripten_bind_btRigidBody_isActive_0"];var _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=Module["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"]=asm["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"];var _emscripten_bind_btMotionState_setWorldTransform_1=Module["_emscripten_bind_btMotionState_setWorldTransform_1"]=asm["_emscripten_bind_btMotionState_setWorldTransform_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btCylinderShape_setLocalScaling_1=Module["_emscripten_bind_btCylinderShape_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShape_setLocalScaling_1"];var _emscripten_bind_btCollisionWorld_rayTest_3=Module["_emscripten_bind_btCollisionWorld_rayTest_3"]=asm["_emscripten_bind_btCollisionWorld_rayTest_3"];var _emscripten_bind_btCompoundShape_calculateLocalInertia_2=Module["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"];var _emscripten_bind_btCollisionWorld_getDispatchInfo_0=Module["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"];var _emscripten_bind_btRigidBody_setCollisionShape_1=Module["_emscripten_bind_btRigidBody_setCollisionShape_1"]=asm["_emscripten_bind_btRigidBody_setCollisionShape_1"];var _emscripten_bind_btSoftBody_appendTetra_5=Module["_emscripten_bind_btSoftBody_appendTetra_5"]=asm["_emscripten_bind_btSoftBody_appendTetra_5"];var _emscripten_bind_btConeShapeX___destroy___0=Module["_emscripten_bind_btConeShapeX___destroy___0"]=asm["_emscripten_bind_btConeShapeX___destroy___0"];var _emscripten_bind_btCollisionObject_getCollisionFlags_0=Module["_emscripten_bind_btCollisionObject_getCollisionFlags_0"]=asm["_emscripten_bind_btCollisionObject_getCollisionFlags_0"];var _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=Module["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"];var _emscripten_bind_btConeTwistConstraint_enableMotor_1=Module["_emscripten_bind_btConeTwistConstraint_enableMotor_1"]=asm["_emscripten_bind_btConeTwistConstraint_enableMotor_1"];var _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=Module["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"]=asm["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"];var _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"];var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"]=asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];var _emscripten_bind_btPairCachingGhostObject_setRestitution_1=Module["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"];var _emscripten_bind_Config_set_kAHR_1=Module["_emscripten_bind_Config_set_kAHR_1"]=asm["_emscripten_bind_Config_set_kAHR_1"];var _emscripten_bind_btHeightfieldTerrainShape_getMargin_0=Module["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"]=asm["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"];var _emscripten_bind_ConvexResultCallback___destroy___0=Module["_emscripten_bind_ConvexResultCallback___destroy___0"]=asm["_emscripten_bind_ConvexResultCallback___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"];var _emscripten_bind_Config_get_kSRHR_CL_0=Module["_emscripten_bind_Config_get_kSRHR_CL_0"]=asm["_emscripten_bind_Config_get_kSRHR_CL_0"];var _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"];var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"]=asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"];var _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"];var _emscripten_bind_btCompoundShape___destroy___0=Module["_emscripten_bind_btCompoundShape___destroy___0"]=asm["_emscripten_bind_btCompoundShape___destroy___0"];var _emscripten_bind_btHingeConstraint_setMotorTarget_2=Module["_emscripten_bind_btHingeConstraint_setMotorTarget_2"]=asm["_emscripten_bind_btHingeConstraint_setMotorTarget_2"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"];var _emscripten_bind_LocalConvexResult___destroy___0=Module["_emscripten_bind_LocalConvexResult___destroy___0"]=asm["_emscripten_bind_LocalConvexResult___destroy___0"];var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"]=asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];var _emscripten_bind_btSoftBodyHelpers_CreateRope_5=Module["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"];var _emscripten_bind_btRigidBody_getCollisionFlags_0=Module["_emscripten_bind_btRigidBody_getCollisionFlags_0"]=asm["_emscripten_bind_btRigidBody_getCollisionFlags_0"];var _emscripten_bind_btCollisionShape_setLocalScaling_1=Module["_emscripten_bind_btCollisionShape_setLocalScaling_1"]=asm["_emscripten_bind_btCollisionShape_setLocalScaling_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"];var _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"];var _emscripten_bind_btMatrix3x3_setEulerZYX_3=Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"]=asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];var _emscripten_bind_btSoftBody_getTotalMass_0=Module["_emscripten_bind_btSoftBody_getTotalMass_0"]=asm["_emscripten_bind_btSoftBody_getTotalMass_0"];var _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=Module["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"];var _emscripten_bind_btRigidBody_getUserPointer_0=Module["_emscripten_bind_btRigidBody_getUserPointer_0"]=asm["_emscripten_bind_btRigidBody_getUserPointer_0"];var _emscripten_bind_Config_get_kSHR_0=Module["_emscripten_bind_Config_get_kSHR_0"]=asm["_emscripten_bind_Config_get_kSHR_0"];var _emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=Module["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"];var _emscripten_bind_btRigidBody_setMotionState_1=Module["_emscripten_bind_btRigidBody_setMotionState_1"]=asm["_emscripten_bind_btRigidBody_setMotionState_1"];var _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_btCollisionWorld_getDispatcher_0=Module["_emscripten_bind_btCollisionWorld_getDispatcher_0"]=asm["_emscripten_bind_btCollisionWorld_getDispatcher_0"];var _emscripten_bind_btVector4_dot_1=Module["_emscripten_bind_btVector4_dot_1"]=asm["_emscripten_bind_btVector4_dot_1"];var _emscripten_bind_btSoftBody_forceActivationState_1=Module["_emscripten_bind_btSoftBody_forceActivationState_1"]=asm["_emscripten_bind_btSoftBody_forceActivationState_1"];var _emscripten_bind_btCollisionObject_setRollingFriction_1=Module["_emscripten_bind_btCollisionObject_setRollingFriction_1"]=asm["_emscripten_bind_btCollisionObject_setRollingFriction_1"];var _emscripten_bind_Config_set_kSK_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSK_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSK_SPLT_CL_1"];var _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=Module["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _emscripten_bind_btCylinderShapeX_getMargin_0=Module["_emscripten_bind_btCylinderShapeX_getMargin_0"]=asm["_emscripten_bind_btCylinderShapeX_getMargin_0"];var _emscripten_bind_btRigidBody_setDamping_2=Module["_emscripten_bind_btRigidBody_setDamping_2"]=asm["_emscripten_bind_btRigidBody_setDamping_2"];var _emscripten_bind_btDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btGhostObject_setCollisionFlags_1=Module["_emscripten_bind_btGhostObject_setCollisionFlags_1"]=asm["_emscripten_bind_btGhostObject_setCollisionFlags_1"];var _emscripten_bind_btMatrix3x3_getRotation_1=Module["_emscripten_bind_btMatrix3x3_getRotation_1"]=asm["_emscripten_bind_btMatrix3x3_getRotation_1"];var _emscripten_bind_btWheelInfo_set_m_engineForce_1=Module["_emscripten_bind_btWheelInfo_set_m_engineForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_engineForce_1"];var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"];var _emscripten_bind_btPersistentManifold_getNumContacts_0=Module["_emscripten_bind_btPersistentManifold_getNumContacts_0"]=asm["_emscripten_bind_btPersistentManifold_getNumContacts_0"];var _emscripten_bind_btCylinderShapeX_setLocalScaling_1=Module["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"];var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"]=asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];var _emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=Module["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"]=asm["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"];var _emscripten_bind_btCompoundShape_setLocalScaling_1=Module["_emscripten_bind_btCompoundShape_setLocalScaling_1"]=asm["_emscripten_bind_btCompoundShape_setLocalScaling_1"];var _emscripten_bind_btOverlappingPairCallback___destroy___0=Module["_emscripten_bind_btOverlappingPairCallback___destroy___0"]=asm["_emscripten_bind_btOverlappingPairCallback___destroy___0"];var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"];var _emscripten_bind_tNodeArray___destroy___0=Module["_emscripten_bind_tNodeArray___destroy___0"]=asm["_emscripten_bind_tNodeArray___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btHingeConstraint_enableAngularMotor_3=Module["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"]=asm["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"];var _emscripten_bind_btRigidBody_setContactProcessingThreshold_1=Module["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"];var _emscripten_bind_btRigidBody_getLinearVelocity_0=Module["_emscripten_bind_btRigidBody_getLinearVelocity_0"]=asm["_emscripten_bind_btRigidBody_getLinearVelocity_0"];var _emscripten_bind_btRigidBody_applyImpulse_2=Module["_emscripten_bind_btRigidBody_applyImpulse_2"]=asm["_emscripten_bind_btRigidBody_applyImpulse_2"];var _emscripten_bind_btConcaveShape_calculateLocalInertia_2=Module["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"];var _emscripten_bind_RaycastInfo_get_m_groundObject_0=Module["_emscripten_bind_RaycastInfo_get_m_groundObject_0"]=asm["_emscripten_bind_RaycastInfo_get_m_groundObject_0"];var _emscripten_bind_btRigidBody_setWorldTransform_1=Module["_emscripten_bind_btRigidBody_setWorldTransform_1"]=asm["_emscripten_bind_btRigidBody_setWorldTransform_1"];var _emscripten_bind_btRigidBody_setAngularVelocity_1=Module["_emscripten_bind_btRigidBody_setAngularVelocity_1"]=asm["_emscripten_bind_btRigidBody_setAngularVelocity_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"];var _emscripten_bind_Config_get_kDP_0=Module["_emscripten_bind_Config_get_kDP_0"]=asm["_emscripten_bind_Config_get_kDP_0"];var _emscripten_bind_btConvexShape_setLocalScaling_1=Module["_emscripten_bind_btConvexShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexShape_setLocalScaling_1"];var _emscripten_bind_Config_get_collisions_0=Module["_emscripten_bind_Config_get_collisions_0"]=asm["_emscripten_bind_Config_get_collisions_0"];var _emscripten_bind_Node_get_m_n_0=Module["_emscripten_bind_Node_get_m_n_0"]=asm["_emscripten_bind_Node_get_m_n_0"];var _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"];var _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0=Module["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0"]=asm["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0"];var _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1=Module["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1"]=asm["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1"];var _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=Module["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"];var _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_RayResultCallback_hasHit_0=Module["_emscripten_bind_RayResultCallback_hasHit_0"]=asm["_emscripten_bind_RayResultCallback_hasHit_0"];var _emscripten_bind_btRigidBody_applyLocalTorque_1=Module["_emscripten_bind_btRigidBody_applyLocalTorque_1"]=asm["_emscripten_bind_btRigidBody_applyLocalTorque_1"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _emscripten_bind_Config___destroy___0=Module["_emscripten_bind_Config___destroy___0"]=asm["_emscripten_bind_Config___destroy___0"];var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"];var _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=Module["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"]=asm["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"];var _emscripten_bind_btQuaternion_normalize_0=Module["_emscripten_bind_btQuaternion_normalize_0"]=asm["_emscripten_bind_btQuaternion_normalize_0"];var _emscripten_bind_btQuaternion___destroy___0=Module["_emscripten_bind_btQuaternion___destroy___0"]=asm["_emscripten_bind_btQuaternion___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_frictionSlip_0=Module["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"]=asm["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"];var _emscripten_bind_btConeShapeZ_setLocalScaling_1=Module["_emscripten_bind_btConeShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btConeShapeZ_setLocalScaling_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"];var _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=Module["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"];var _emscripten_bind_btRaycastVehicle_getNumWheels_0=Module["_emscripten_bind_btRaycastVehicle_getNumWheels_0"]=asm["_emscripten_bind_btRaycastVehicle_getNumWheels_0"];var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"];var _emscripten_bind_Material_set_m_kAST_1=Module["_emscripten_bind_Material_set_m_kAST_1"]=asm["_emscripten_bind_Material_set_m_kAST_1"];var _emscripten_bind_btGhostObject_setRollingFriction_1=Module["_emscripten_bind_btGhostObject_setRollingFriction_1"]=asm["_emscripten_bind_btGhostObject_setRollingFriction_1"];var _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=Module["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"]=asm["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"];var _emscripten_bind_btSoftBodyArray___destroy___0=Module["_emscripten_bind_btSoftBodyArray___destroy___0"]=asm["_emscripten_bind_btSoftBodyArray___destroy___0"];var _emscripten_bind_btCompoundShape_btCompoundShape_0=Module["_emscripten_bind_btCompoundShape_btCompoundShape_0"]=asm["_emscripten_bind_btCompoundShape_btCompoundShape_0"];var _emscripten_bind_btCompoundShape_btCompoundShape_1=Module["_emscripten_bind_btCompoundShape_btCompoundShape_1"]=asm["_emscripten_bind_btCompoundShape_btCompoundShape_1"];var _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=Module["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"]=asm["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"];var _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=Module["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"]=asm["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"];var __GLOBAL__sub_I_btQuickprof_cpp=Module["__GLOBAL__sub_I_btQuickprof_cpp"]=asm["__GLOBAL__sub_I_btQuickprof_cpp"];var _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=Module["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"];var _emscripten_bind_btSoftBody_checkLink_2=Module["_emscripten_bind_btSoftBody_checkLink_2"]=asm["_emscripten_bind_btSoftBody_checkLink_2"];var _emscripten_bind_btSoftBody_getCollisionShape_0=Module["_emscripten_bind_btSoftBody_getCollisionShape_0"]=asm["_emscripten_bind_btSoftBody_getCollisionShape_0"];var _emscripten_bind_Config_get_kDG_0=Module["_emscripten_bind_Config_get_kDG_0"]=asm["_emscripten_bind_Config_get_kDG_0"];var _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=Module["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"];var _emscripten_bind_Node_get_m_x_0=Module["_emscripten_bind_Node_get_m_x_0"]=asm["_emscripten_bind_Node_get_m_x_0"];var _emscripten_bind_btCollisionObject_getWorldTransform_0=Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"]=asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];var _emscripten_bind_ClosestRayResultCallback_hasHit_0=Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"]=asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];var _emscripten_bind_btCompoundShape_addChildShape_2=Module["_emscripten_bind_btCompoundShape_addChildShape_2"]=asm["_emscripten_bind_btCompoundShape_addChildShape_2"];var _emscripten_bind_btDispatcher___destroy___0=Module["_emscripten_bind_btDispatcher___destroy___0"]=asm["_emscripten_bind_btDispatcher___destroy___0"];var _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"];var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0=Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];var _emscripten_bind_btConvexShape___destroy___0=Module["_emscripten_bind_btConvexShape___destroy___0"]=asm["_emscripten_bind_btConvexShape___destroy___0"];var _memmove=Module["_memmove"]=asm["_memmove"];var _emscripten_bind_btWheelInfo_set_m_worldTransform_1=Module["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"]=asm["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"];var _emscripten_bind_btCapsuleShapeX_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"];var _emscripten_bind_btSoftBody_getCollisionFlags_0=Module["_emscripten_bind_btSoftBody_getCollisionFlags_0"]=asm["_emscripten_bind_btSoftBody_getCollisionFlags_0"];var _emscripten_bind_btCollisionObject_setRestitution_1=Module["_emscripten_bind_btCollisionObject_setRestitution_1"]=asm["_emscripten_bind_btCollisionObject_setRestitution_1"];var _emscripten_bind_btRigidBody_applyCentralForce_1=Module["_emscripten_bind_btRigidBody_applyCentralForce_1"]=asm["_emscripten_bind_btRigidBody_applyCentralForce_1"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"];var _emscripten_bind_LocalConvexResult_get_m_hitFraction_0=Module["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"];var _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=Module["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"];var _emscripten_bind_btRotationalLimitMotor_needApplyTorques_0=Module["_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0"]=asm["_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0"];var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btTransform_getRotation_0=Module["_emscripten_bind_btTransform_getRotation_0"]=asm["_emscripten_bind_btTransform_getRotation_0"];var _emscripten_bind_Config_set_kSKHR_CL_1=Module["_emscripten_bind_Config_set_kSKHR_CL_1"]=asm["_emscripten_bind_Config_set_kSKHR_CL_1"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_6=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_7=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"];var _emscripten_bind_btCapsuleShapeZ_getMargin_0=Module["_emscripten_bind_btCapsuleShapeZ_getMargin_0"]=asm["_emscripten_bind_btCapsuleShapeZ_getMargin_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_5=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"];var _emscripten_bind_btHingeConstraint_btHingeConstraint_3=Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"]=asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"];var _emscripten_bind_btSoftBody_setWorldTransform_1=Module["_emscripten_bind_btSoftBody_setWorldTransform_1"]=asm["_emscripten_bind_btSoftBody_setWorldTransform_1"];var _emscripten_bind_btBoxShape_setMargin_1=Module["_emscripten_bind_btBoxShape_setMargin_1"]=asm["_emscripten_bind_btBoxShape_setMargin_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"];var _emscripten_bind_Config_get_kSK_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSK_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSK_SPLT_CL_0"];var _emscripten_bind_btTypedConstraint___destroy___0=Module["_emscripten_bind_btTypedConstraint___destroy___0"]=asm["_emscripten_bind_btTypedConstraint___destroy___0"];var _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=Module["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"]=asm["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];var _emscripten_bind_Config_set_collisions_1=Module["_emscripten_bind_Config_set_collisions_1"]=asm["_emscripten_bind_Config_set_collisions_1"];var _bitshift64Ashr=Module["_bitshift64Ashr"]=asm["_bitshift64Ashr"];var _emscripten_bind_btQuaternion_btQuaternion_4=Module["_emscripten_bind_btQuaternion_btQuaternion_4"]=asm["_emscripten_bind_btQuaternion_btQuaternion_4"];var _emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"];var _emscripten_bind_btSphereShape_btSphereShape_1=Module["_emscripten_bind_btSphereShape_btSphereShape_1"]=asm["_emscripten_bind_btSphereShape_btSphereShape_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"];var _emscripten_bind_btQuaternion_y_0=Module["_emscripten_bind_btQuaternion_y_0"]=asm["_emscripten_bind_btQuaternion_y_0"];var _emscripten_bind_btCollisionWorld_addCollisionObject_1=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_1"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_1"];var _emscripten_bind_btCollisionWorld_addCollisionObject_2=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_2"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_2"];var _emscripten_bind_btCollisionWorld_addCollisionObject_3=Module["_emscripten_bind_btCollisionWorld_addCollisionObject_3"]=asm["_emscripten_bind_btCollisionWorld_addCollisionObject_3"];var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=Module["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"];var _emscripten_bind_RaycastInfo_get_m_isInContact_0=Module["_emscripten_bind_RaycastInfo_get_m_isInContact_0"]=asm["_emscripten_bind_RaycastInfo_get_m_isInContact_0"];var _emscripten_bind_Config_set_kKHR_1=Module["_emscripten_bind_Config_set_kKHR_1"]=asm["_emscripten_bind_Config_set_kKHR_1"];var _emscripten_bind_btHeightfieldTerrainShape_setMargin_1=Module["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"]=asm["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btCapsuleShape_setMargin_1=Module["_emscripten_bind_btCapsuleShape_setMargin_1"]=asm["_emscripten_bind_btCapsuleShape_setMargin_1"];var _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=Module["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"]=asm["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"];var _emscripten_bind_btDynamicsWorld_contactTest_2=Module["_emscripten_bind_btDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btDynamicsWorld_contactTest_2"];var _emscripten_bind_btCollisionObject_setUserPointer_1=Module["_emscripten_bind_btCollisionObject_setUserPointer_1"]=asm["_emscripten_bind_btCollisionObject_setUserPointer_1"];var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"]=asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];var _emscripten_bind_btActionInterface___destroy___0=Module["_emscripten_bind_btActionInterface___destroy___0"]=asm["_emscripten_bind_btActionInterface___destroy___0"];var _emscripten_bind_btSoftBody_generateClusters_2=Module["_emscripten_bind_btSoftBody_generateClusters_2"]=asm["_emscripten_bind_btSoftBody_generateClusters_2"];var _emscripten_bind_btDefaultMotionState_setWorldTransform_1=Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"]=asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];var _emscripten_bind_btSoftBody_generateClusters_1=Module["_emscripten_bind_btSoftBody_generateClusters_1"]=asm["_emscripten_bind_btSoftBody_generateClusters_1"];var _emscripten_bind_RayResultCallback_get_m_collisionObject_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];var _emscripten_bind_btPoint2PointConstraint_getPivotInA_0=Module["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"];var _emscripten_bind_Config_get_kAHR_0=Module["_emscripten_bind_Config_get_kAHR_0"]=asm["_emscripten_bind_Config_get_kAHR_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"];var _emscripten_bind_btCylinderShape_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"];var _emscripten_bind_btCompoundShape_setMargin_1=Module["_emscripten_bind_btCompoundShape_setMargin_1"]=asm["_emscripten_bind_btCompoundShape_setMargin_1"];var _emscripten_bind_ClosestConvexResultCallback___destroy___0=Module["_emscripten_bind_ClosestConvexResultCallback___destroy___0"]=asm["_emscripten_bind_ClosestConvexResultCallback___destroy___0"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"];var ___cxa_can_catch=Module["___cxa_can_catch"]=asm["___cxa_can_catch"];var _emscripten_bind_btDynamicsWorld_addCollisionObject_2=Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"]=asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"];var _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"];var _emscripten_bind_btHeightfieldTerrainShape___destroy___0=Module["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"]=asm["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"]=asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"];var _emscripten_bind_Config_get_kVC_0=Module["_emscripten_bind_Config_get_kVC_0"]=asm["_emscripten_bind_Config_get_kVC_0"];var _emscripten_bind_btVector4_op_mul_1=Module["_emscripten_bind_btVector4_op_mul_1"]=asm["_emscripten_bind_btVector4_op_mul_1"];var _emscripten_bind_btCylinderShape_btCylinderShape_1=Module["_emscripten_bind_btCylinderShape_btCylinderShape_1"]=asm["_emscripten_bind_btCylinderShape_btCylinderShape_1"];var _emscripten_bind_btPairCachingGhostObject_setActivationState_1=Module["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"];var _emscripten_bind_Material_get_m_kVST_0=Module["_emscripten_bind_Material_get_m_kVST_0"]=asm["_emscripten_bind_Material_get_m_kVST_0"];var _emscripten_bind_Config_set_kVCF_1=Module["_emscripten_bind_Config_set_kVCF_1"]=asm["_emscripten_bind_Config_set_kVCF_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"];var _emscripten_bind_btGhostObject_getUserIndex_0=Module["_emscripten_bind_btGhostObject_getUserIndex_0"]=asm["_emscripten_bind_btGhostObject_getUserIndex_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"];var _emscripten_bind_btVector3___destroy___0=Module["_emscripten_bind_btVector3___destroy___0"]=asm["_emscripten_bind_btVector3___destroy___0"];var _emscripten_bind_RaycastInfo___destroy___0=Module["_emscripten_bind_RaycastInfo___destroy___0"]=asm["_emscripten_bind_RaycastInfo___destroy___0"];var _emscripten_bind_btRigidBody_setAngularFactor_1=Module["_emscripten_bind_btRigidBody_setAngularFactor_1"]=asm["_emscripten_bind_btRigidBody_setAngularFactor_1"];var _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btConeShapeZ_btConeShapeZ_2=Module["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"]=asm["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"];var _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=Module["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"]=asm["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"];var _emscripten_bind_btMotionState_getWorldTransform_1=Module["_emscripten_bind_btMotionState_getWorldTransform_1"]=asm["_emscripten_bind_btMotionState_getWorldTransform_1"];var _emscripten_bind_btDynamicsWorld_getSolverInfo_0=Module["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"]=asm["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"];var _emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0=Module["_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0"]=asm["_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0"];var _emscripten_bind_Config_get_kMT_0=Module["_emscripten_bind_Config_get_kMT_0"]=asm["_emscripten_bind_Config_get_kMT_0"];var _emscripten_bind_btDynamicsWorld_getBroadphase_0=Module["_emscripten_bind_btDynamicsWorld_getBroadphase_0"]=asm["_emscripten_bind_btDynamicsWorld_getBroadphase_0"];var _emscripten_bind_btSphereShape_getMargin_0=Module["_emscripten_bind_btSphereShape_getMargin_0"]=asm["_emscripten_bind_btSphereShape_getMargin_0"];var _emscripten_bind_Config_get_timescale_0=Module["_emscripten_bind_Config_get_timescale_0"]=asm["_emscripten_bind_Config_get_timescale_0"];var _emscripten_bind_btVector3_x_0=Module["_emscripten_bind_btVector3_x_0"]=asm["_emscripten_bind_btVector3_x_0"];var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=asm["___cxa_is_pointer_type"];var _emscripten_bind_btConvexTriangleMeshShape___destroy___0=Module["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"];var _emscripten_bind_btCollisionObject_getCollisionShape_0=Module["_emscripten_bind_btCollisionObject_getCollisionShape_0"]=asm["_emscripten_bind_btCollisionObject_getCollisionShape_0"];var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];var _emscripten_bind_btManifoldPoint___destroy___0=Module["_emscripten_bind_btManifoldPoint___destroy___0"]=asm["_emscripten_bind_btManifoldPoint___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"];var _emscripten_bind_btVector4_length_0=Module["_emscripten_bind_btVector4_length_0"]=asm["_emscripten_bind_btVector4_length_0"];var _emscripten_bind_btGhostObject_setUserIndex_1=Module["_emscripten_bind_btGhostObject_setUserIndex_1"]=asm["_emscripten_bind_btGhostObject_setUserIndex_1"];var _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=Module["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"]=asm["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"];var _emscripten_bind_btGhostObject_setRestitution_1=Module["_emscripten_bind_btGhostObject_setRestitution_1"]=asm["_emscripten_bind_btGhostObject_setRestitution_1"];var _emscripten_bind_btConeTwistConstraint_setAngularOnly_1=Module["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"]=asm["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"];var _emscripten_bind_btCollisionObject_setFriction_1=Module["_emscripten_bind_btCollisionObject_setFriction_1"]=asm["_emscripten_bind_btCollisionObject_setFriction_1"];var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0=Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];var _emscripten_bind_btRigidBody_setMassProps_2=Module["_emscripten_bind_btRigidBody_setMassProps_2"]=asm["_emscripten_bind_btRigidBody_setMassProps_2"];var _emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1=Module["_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1"]=asm["_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1"];var _emscripten_bind_btVector3_setValue_3=Module["_emscripten_bind_btVector3_setValue_3"]=asm["_emscripten_bind_btVector3_setValue_3"];var _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"];var _emscripten_bind_RaycastInfo_get_m_suspensionLength_0=Module["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"]=asm["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"];var _emscripten_bind_btGhostObject_getCollisionFlags_0=Module["_emscripten_bind_btGhostObject_getCollisionFlags_0"]=asm["_emscripten_bind_btGhostObject_getCollisionFlags_0"];var _emscripten_bind_btCapsuleShapeX___destroy___0=Module["_emscripten_bind_btCapsuleShapeX___destroy___0"]=asm["_emscripten_bind_btCapsuleShapeX___destroy___0"];var _emscripten_bind_Config_set_kDG_1=Module["_emscripten_bind_Config_set_kDG_1"]=asm["_emscripten_bind_Config_set_kDG_1"];var _emscripten_bind_Material_get_m_flags_0=Module["_emscripten_bind_Material_get_m_flags_0"]=asm["_emscripten_bind_Material_get_m_flags_0"];var _emscripten_bind_btHingeConstraint_setLimit_4=Module["_emscripten_bind_btHingeConstraint_setLimit_4"]=asm["_emscripten_bind_btHingeConstraint_setLimit_4"];var _emscripten_bind_btHingeConstraint_setLimit_5=Module["_emscripten_bind_btHingeConstraint_setLimit_5"]=asm["_emscripten_bind_btHingeConstraint_setLimit_5"];var _emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=Module["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"];var _emscripten_bind_btDefaultVehicleRaycaster___destroy___0=Module["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"]=asm["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"];var _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"]=asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"];var _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"];var _emscripten_bind_btSoftBody_scale_1=Module["_emscripten_bind_btSoftBody_scale_1"]=asm["_emscripten_bind_btSoftBody_scale_1"];var _emscripten_bind_Config_get_citerations_0=Module["_emscripten_bind_Config_get_citerations_0"]=asm["_emscripten_bind_Config_get_citerations_0"];var _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btGhostObject_getCollisionShape_0=Module["_emscripten_bind_btGhostObject_getCollisionShape_0"]=asm["_emscripten_bind_btGhostObject_getCollisionShape_0"];var _emscripten_bind_btCollisionObject_setAnisotropicFriction_2=Module["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"];var _emscripten_bind_btBoxShape___destroy___0=Module["_emscripten_bind_btBoxShape___destroy___0"]=asm["_emscripten_bind_btBoxShape___destroy___0"];var _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=Module["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"]=asm["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"];var _emscripten_bind_btPersistentManifold_getContactPoint_1=Module["_emscripten_bind_btPersistentManifold_getContactPoint_1"]=asm["_emscripten_bind_btPersistentManifold_getContactPoint_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"];var _emscripten_bind_RaycastInfo_set_m_groundObject_1=Module["_emscripten_bind_RaycastInfo_set_m_groundObject_1"]=asm["_emscripten_bind_RaycastInfo_set_m_groundObject_1"];var _emscripten_bind_btGhostObject_activate_1=Module["_emscripten_bind_btGhostObject_activate_1"]=asm["_emscripten_bind_btGhostObject_activate_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"];var _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"];var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"];var _emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=Module["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"]=asm["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"];var _emscripten_bind_btSphereShape_setMargin_1=Module["_emscripten_bind_btSphereShape_setMargin_1"]=asm["_emscripten_bind_btSphereShape_setMargin_1"];var _emscripten_bind_btSoftBody_get_m_cfg_0=Module["_emscripten_bind_btSoftBody_get_m_cfg_0"]=asm["_emscripten_bind_btSoftBody_get_m_cfg_0"];var _emscripten_bind_btCollisionObject_setUserIndex_1=Module["_emscripten_bind_btCollisionObject_setUserIndex_1"]=asm["_emscripten_bind_btCollisionObject_setUserIndex_1"];var _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"]=asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"];var _emscripten_bind_btSliderConstraint_setUpperAngLimit_1=Module["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"];var _emscripten_bind_btDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btCollisionWorld_getPairCache_0=Module["_emscripten_bind_btCollisionWorld_getPairCache_0"]=asm["_emscripten_bind_btCollisionWorld_getPairCache_0"];var _emscripten_bind_btConeTwistConstraint_setMotorTarget_1=Module["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"]=asm["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"];var _emscripten_bind_btWheelInfo_set_m_rollInfluence_1=Module["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"]=asm["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"];var _emscripten_bind_btGhostObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"];var _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"];var _emscripten_enum_PHY_ScalarType_PHY_INTEGER=Module["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"]=asm["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"];var _emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=Module["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"]=asm["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"];var _emscripten_bind_btGhostObject_forceActivationState_1=Module["_emscripten_bind_btGhostObject_forceActivationState_1"]=asm["_emscripten_bind_btGhostObject_forceActivationState_1"];var _emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=Module["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"]=asm["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"];var _emscripten_bind_btVector4_y_0=Module["_emscripten_bind_btVector4_y_0"]=asm["_emscripten_bind_btVector4_y_0"];var _emscripten_bind_VoidPtr___destroy___0=Module["_emscripten_bind_VoidPtr___destroy___0"]=asm["_emscripten_bind_VoidPtr___destroy___0"];var _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=Module["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"];var _emscripten_bind_btSliderConstraint_setLowerAngLimit_1=Module["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];var _emscripten_bind_btVector4_op_sub_1=Module["_emscripten_bind_btVector4_op_sub_1"]=asm["_emscripten_bind_btVector4_op_sub_1"];var _emscripten_bind_RaycastInfo_set_m_contactPointWS_1=Module["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"];var _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=Module["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"]=asm["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"];var _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"];var _emscripten_bind_btSoftBody_setContactProcessingThreshold_1=Module["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"]=asm["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"];var _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=Module["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"];var _emscripten_bind_btSliderConstraint_enableFeedback_1=Module["_emscripten_bind_btSliderConstraint_enableFeedback_1"]=asm["_emscripten_bind_btSliderConstraint_enableFeedback_1"];var _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_enum_PHY_ScalarType_PHY_DOUBLE=Module["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"]=asm["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"];var _emscripten_bind_btConstraintSetting_get_m_tau_0=Module["_emscripten_bind_btConstraintSetting_get_m_tau_0"]=asm["_emscripten_bind_btConstraintSetting_get_m_tau_0"];var _emscripten_bind_btConeShape_setLocalScaling_1=Module["_emscripten_bind_btConeShape_setLocalScaling_1"]=asm["_emscripten_bind_btConeShape_setLocalScaling_1"];var _emscripten_bind_btCollisionObject_setCollisionShape_1=Module["_emscripten_bind_btCollisionObject_setCollisionShape_1"]=asm["_emscripten_bind_btCollisionObject_setCollisionShape_1"];var _emscripten_bind_btCollisionShape___destroy___0=Module["_emscripten_bind_btCollisionShape___destroy___0"]=asm["_emscripten_bind_btCollisionShape___destroy___0"];var _emscripten_bind_btMatrix3x3_getRow_1=Module["_emscripten_bind_btMatrix3x3_getRow_1"]=asm["_emscripten_bind_btMatrix3x3_getRow_1"];var _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=Module["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"];var _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=Module["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"];var _emscripten_bind_btSoftBody_getUserIndex_0=Module["_emscripten_bind_btSoftBody_getUserIndex_0"]=asm["_emscripten_bind_btSoftBody_getUserIndex_0"];var _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=Module["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"];var _emscripten_bind_btKinematicCharacterController_warp_1=Module["_emscripten_bind_btKinematicCharacterController_warp_1"]=asm["_emscripten_bind_btKinematicCharacterController_warp_1"];var _emscripten_bind_btContactSolverInfo___destroy___0=Module["_emscripten_bind_btContactSolverInfo___destroy___0"]=asm["_emscripten_bind_btContactSolverInfo___destroy___0"];var _emscripten_bind_btSoftBody_getWorldTransform_0=Module["_emscripten_bind_btSoftBody_getWorldTransform_0"]=asm["_emscripten_bind_btSoftBody_getWorldTransform_0"];var _emscripten_bind_btTriangleMesh___destroy___0=Module["_emscripten_bind_btTriangleMesh___destroy___0"]=asm["_emscripten_bind_btTriangleMesh___destroy___0"];var _emscripten_bind_btKinematicCharacterController_preStep_1=Module["_emscripten_bind_btKinematicCharacterController_preStep_1"]=asm["_emscripten_bind_btKinematicCharacterController_preStep_1"];var _emscripten_bind_btRaycastVehicle_applyEngineForce_2=Module["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"]=asm["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"];var _emscripten_bind_btBoxShape_calculateLocalInertia_2=Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];var _emscripten_bind_btRaycastVehicle_setBrake_2=Module["_emscripten_bind_btRaycastVehicle_setBrake_2"]=asm["_emscripten_bind_btRaycastVehicle_setBrake_2"];var _emscripten_bind_ConcreteContactResultCallback___destroy___0=Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"]=asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];var _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=Module["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"]=asm["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"];var _emscripten_bind_btCollisionObject___destroy___0=Module["_emscripten_bind_btCollisionObject___destroy___0"]=asm["_emscripten_bind_btCollisionObject___destroy___0"];var _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"];var _emscripten_bind_btConvexTriangleMeshShape_setMargin_1=Module["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"]=asm["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"];var _emscripten_bind_Config_get_kSSHR_CL_0=Module["_emscripten_bind_Config_get_kSSHR_CL_0"]=asm["_emscripten_bind_Config_get_kSSHR_CL_0"];var _emscripten_bind_btRotationalLimitMotor_isLimited_0=Module["_emscripten_bind_btRotationalLimitMotor_isLimited_0"]=asm["_emscripten_bind_btRotationalLimitMotor_isLimited_0"];var _emscripten_bind_btDispatcherInfo_set_m_timeStep_1=Module["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"];var _emscripten_bind_btVector3_btVector3_3=Module["_emscripten_bind_btVector3_btVector3_3"]=asm["_emscripten_bind_btVector3_btVector3_3"];var _emscripten_bind_btVector3_btVector3_0=Module["_emscripten_bind_btVector3_btVector3_0"]=asm["_emscripten_bind_btVector3_btVector3_0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];var _emscripten_bind_btVector3_z_0=Module["_emscripten_bind_btVector3_z_0"]=asm["_emscripten_bind_btVector3_z_0"];var _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"];var _emscripten_bind_btCollisionShape_getMargin_0=Module["_emscripten_bind_btCollisionShape_getMargin_0"]=asm["_emscripten_bind_btCollisionShape_getMargin_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"];var _emscripten_bind_btBroadphaseInterface___destroy___0=Module["_emscripten_bind_btBroadphaseInterface___destroy___0"]=asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];var _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"];var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"]=asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];var _emscripten_bind_RaycastInfo_get_m_hardPointWS_0=Module["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"];var _emscripten_bind_btConeTwistConstraint___destroy___0=Module["_emscripten_bind_btConeTwistConstraint___destroy___0"]=asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];var _emscripten_bind_btQuadWord___destroy___0=Module["_emscripten_bind_btQuadWord___destroy___0"]=asm["_emscripten_bind_btQuadWord___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btQuaternion_setEulerZYX_3=Module["_emscripten_bind_btQuaternion_setEulerZYX_3"]=asm["_emscripten_bind_btQuaternion_setEulerZYX_3"];var _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"];var _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"];var _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=Module["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"]=asm["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"];var _emscripten_bind_btRigidBody_setCenterOfMassTransform_1=Module["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"]=asm["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"];var _emscripten_bind_btSoftBody_setUserIndex_1=Module["_emscripten_bind_btSoftBody_setUserIndex_1"]=asm["_emscripten_bind_btSoftBody_setUserIndex_1"];var _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=Module["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"]=asm["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"];var _emscripten_bind_btSoftBody_setCollisionShape_1=Module["_emscripten_bind_btSoftBody_setCollisionShape_1"]=asm["_emscripten_bind_btSoftBody_setCollisionShape_1"];var _emscripten_bind_btGhostObject_setAnisotropicFriction_2=Module["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"]=asm["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"];var _emscripten_bind_btConstraintSolver___destroy___0=Module["_emscripten_bind_btConstraintSolver___destroy___0"]=asm["_emscripten_bind_btConstraintSolver___destroy___0"];var _emscripten_bind_btSoftBody_isActive_0=Module["_emscripten_bind_btSoftBody_isActive_0"]=asm["_emscripten_bind_btSoftBody_isActive_0"];var _emscripten_bind_btCapsuleShape_btCapsuleShape_2=Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"]=asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];var _emscripten_bind_btTypedConstraint_enableFeedback_1=Module["_emscripten_bind_btTypedConstraint_enableFeedback_1"]=asm["_emscripten_bind_btTypedConstraint_enableFeedback_1"];var _emscripten_bind_btSoftBody_setRollingFriction_1=Module["_emscripten_bind_btSoftBody_setRollingFriction_1"]=asm["_emscripten_bind_btSoftBody_setRollingFriction_1"];var _emscripten_bind_btGhostObject_activate_0=Module["_emscripten_bind_btGhostObject_activate_0"]=asm["_emscripten_bind_btGhostObject_activate_0"];var _emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1=Module["_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1"];var _emscripten_bind_btCapsuleShape_setLocalScaling_1=Module["_emscripten_bind_btCapsuleShape_setLocalScaling_1"]=asm["_emscripten_bind_btCapsuleShape_setLocalScaling_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"];var _emscripten_bind_btRigidBody_setAnisotropicFriction_2=Module["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"]=asm["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"];var _emscripten_bind_btSoftBody_btSoftBody_4=Module["_emscripten_bind_btSoftBody_btSoftBody_4"]=asm["_emscripten_bind_btSoftBody_btSoftBody_4"];var _emscripten_bind_btTriangleMeshShape_setLocalScaling_1=Module["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"]=asm["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"];var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];var _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=Module["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"];var _emscripten_bind_btVector3_op_add_1=Module["_emscripten_bind_btVector3_op_add_1"]=asm["_emscripten_bind_btVector3_op_add_1"];var _emscripten_bind_btPersistentManifold_btPersistentManifold_0=Module["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"]=asm["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"];var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"]=asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"];var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"]=asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];var _emscripten_bind_btVector4___destroy___0=Module["_emscripten_bind_btVector4___destroy___0"]=asm["_emscripten_bind_btVector4___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=Module["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"]=asm["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"];var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_tNodeArray_at_1=Module["_emscripten_bind_tNodeArray_at_1"]=asm["_emscripten_bind_tNodeArray_at_1"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=Module["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"];var _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=Module["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"]=asm["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"];var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"]=asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"];var _emscripten_bind_btSoftBody_set_m_cfg_1=Module["_emscripten_bind_btSoftBody_set_m_cfg_1"]=asm["_emscripten_bind_btSoftBody_set_m_cfg_1"];var _emscripten_bind_btQuadWord_setZ_1=Module["_emscripten_bind_btQuadWord_setZ_1"]=asm["_emscripten_bind_btQuadWord_setZ_1"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"];var _emscripten_bind_btPoint2PointConstraint_getPivotInB_0=Module["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"];var _emscripten_bind_btKinematicCharacterController_playerStep_2=Module["_emscripten_bind_btKinematicCharacterController_playerStep_2"]=asm["_emscripten_bind_btKinematicCharacterController_playerStep_2"];var _emscripten_bind_btDispatcherInfo___destroy___0=Module["_emscripten_bind_btDispatcherInfo___destroy___0"]=asm["_emscripten_bind_btDispatcherInfo___destroy___0"];var _emscripten_bind_btCapsuleShape_getMargin_0=Module["_emscripten_bind_btCapsuleShape_getMargin_0"]=asm["_emscripten_bind_btCapsuleShape_getMargin_0"];var _emscripten_bind_btCylinderShape_getMargin_0=Module["_emscripten_bind_btCylinderShape_getMargin_0"]=asm["_emscripten_bind_btCylinderShape_getMargin_0"];var _emscripten_bind_btSoftBodyArray_size_0=Module["_emscripten_bind_btSoftBodyArray_size_0"]=asm["_emscripten_bind_btSoftBodyArray_size_0"];var _emscripten_bind_btStaticPlaneShape_setLocalScaling_1=Module["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"]=asm["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"];var _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"];var _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"];var _emscripten_bind_btGhostObject_getWorldTransform_0=Module["_emscripten_bind_btGhostObject_getWorldTransform_0"]=asm["_emscripten_bind_btGhostObject_getWorldTransform_0"];var _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"];var _emscripten_bind_LocalConvexResult_set_m_hitFraction_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"];var _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"];var _emscripten_bind_btDispatcherInfo_get_m_timeStep_0=Module["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"];var _emscripten_bind_btHingeConstraint_setAngularOnly_1=Module["_emscripten_bind_btHingeConstraint_setAngularOnly_1"]=asm["_emscripten_bind_btHingeConstraint_setAngularOnly_1"];var _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"];var _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=Module["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"]=asm["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"];var _emscripten_bind_btMotionState___destroy___0=Module["_emscripten_bind_btMotionState___destroy___0"]=asm["_emscripten_bind_btMotionState___destroy___0"];var _emscripten_bind_btCollisionObject_setCollisionFlags_1=Module["_emscripten_bind_btCollisionObject_setCollisionFlags_1"]=asm["_emscripten_bind_btCollisionObject_setCollisionFlags_1"];var _emscripten_bind_Config_get_kPR_0=Module["_emscripten_bind_Config_get_kPR_0"]=asm["_emscripten_bind_Config_get_kPR_0"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"];var _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"];var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"];var _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=Module["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"]=asm["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"];var _emscripten_bind_RaycastInfo_set_m_suspensionLength_1=Module["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"]=asm["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"];var _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=Module["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"]=asm["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"];var _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=Module["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"]=asm["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"];var _emscripten_bind_btSoftBodyWorldInfo___destroy___0=Module["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"]=asm["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"];var _emscripten_bind_btConvexTriangleMeshShape_getMargin_0=Module["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"]=asm["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"];var _emscripten_bind_btSoftBodySolver___destroy___0=Module["_emscripten_bind_btSoftBodySolver___destroy___0"]=asm["_emscripten_bind_btSoftBodySolver___destroy___0"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _emscripten_bind_btWheelInfo_set_m_steering_1=Module["_emscripten_bind_btWheelInfo_set_m_steering_1"]=asm["_emscripten_bind_btWheelInfo_set_m_steering_1"];var _emscripten_bind_Node_set_m_x_1=Module["_emscripten_bind_Node_set_m_x_1"]=asm["_emscripten_bind_Node_set_m_x_1"];var _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=Module["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"];var _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"]=asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];var _emscripten_bind_btConeShape___destroy___0=Module["_emscripten_bind_btConeShape___destroy___0"]=asm["_emscripten_bind_btConeShape___destroy___0"];var _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"]=asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];var _emscripten_bind_btConeTwistConstraint_setLimit_2=Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"]=asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"]=asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];var _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=Module["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"]=asm["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"];var _emscripten_bind_btConeShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"];var _emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=Module["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"]=asm["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"];var _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=Module["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"]=asm["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"];var _emscripten_bind_btGhostObject_getNumOverlappingObjects_0=Module["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"]=asm["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"];var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0=Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];var _emscripten_bind_btRigidBody_getWorldTransform_0=Module["_emscripten_bind_btRigidBody_getWorldTransform_0"]=asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];var _emscripten_bind_btPoint2PointConstraint_setPivotA_1=Module["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"];var _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _emscripten_bind_Config_get_maxvolume_0=Module["_emscripten_bind_Config_get_maxvolume_0"]=asm["_emscripten_bind_Config_get_maxvolume_0"];var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2=Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"];var _emscripten_bind_btVector3_y_0=Module["_emscripten_bind_btVector3_y_0"]=asm["_emscripten_bind_btVector3_y_0"];var _emscripten_bind_btDispatcherInfo_set_m_useEpa_1=Module["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"];var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"];var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"]=asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"];var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"]=asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"];var _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=Module["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"]=asm["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"];var _emscripten_bind_Config_set_kDF_1=Module["_emscripten_bind_Config_set_kDF_1"]=asm["_emscripten_bind_Config_set_kDF_1"];var _emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=Module["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"]=asm["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"];var _emscripten_bind_btSoftBody_activate_1=Module["_emscripten_bind_btSoftBody_activate_1"]=asm["_emscripten_bind_btSoftBody_activate_1"];var _emscripten_bind_btSoftBody_activate_0=Module["_emscripten_bind_btSoftBody_activate_0"]=asm["_emscripten_bind_btSoftBody_activate_0"];var _emscripten_bind_btGhostObject_setCollisionShape_1=Module["_emscripten_bind_btGhostObject_setCollisionShape_1"]=asm["_emscripten_bind_btGhostObject_setCollisionShape_1"];var _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=Module["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"]=asm["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"];var _emscripten_bind_btRigidBody_setRollingFriction_1=Module["_emscripten_bind_btRigidBody_setRollingFriction_1"]=asm["_emscripten_bind_btRigidBody_setRollingFriction_1"];var _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=Module["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];var _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=Module["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"]=asm["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"];var _emscripten_bind_btVector4_z_0=Module["_emscripten_bind_btVector4_z_0"]=asm["_emscripten_bind_btVector4_z_0"];var _emscripten_bind_btCollisionObject_forceActivationState_1=Module["_emscripten_bind_btCollisionObject_forceActivationState_1"]=asm["_emscripten_bind_btCollisionObject_forceActivationState_1"];var _emscripten_bind_btKinematicCharacterController_onGround_0=Module["_emscripten_bind_btKinematicCharacterController_onGround_0"]=asm["_emscripten_bind_btKinematicCharacterController_onGround_0"];var _emscripten_bind_btRaycastVehicle_getWheelInfo_1=Module["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"]=asm["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"];var _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btSoftBody_appendFace_4=Module["_emscripten_bind_btSoftBody_appendFace_4"]=asm["_emscripten_bind_btSoftBody_appendFace_4"];var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"];var _emscripten_bind_btVector3_normalize_0=Module["_emscripten_bind_btVector3_normalize_0"]=asm["_emscripten_bind_btVector3_normalize_0"];var _emscripten_bind_btSoftBody_setFriction_1=Module["_emscripten_bind_btSoftBody_setFriction_1"]=asm["_emscripten_bind_btSoftBody_setFriction_1"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var _emscripten_bind_btRigidBody_setSleepingThresholds_2=Module["_emscripten_bind_btRigidBody_setSleepingThresholds_2"]=asm["_emscripten_bind_btRigidBody_setSleepingThresholds_2"];var _emscripten_bind_btSoftBody_upcast_1=Module["_emscripten_bind_btSoftBody_upcast_1"]=asm["_emscripten_bind_btSoftBody_upcast_1"];var _emscripten_bind_btCollisionObject_setWorldTransform_1=Module["_emscripten_bind_btCollisionObject_setWorldTransform_1"]=asm["_emscripten_bind_btCollisionObject_setWorldTransform_1"];var _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=Module["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"]=asm["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"];var _emscripten_bind_btConvexHullShape_setLocalScaling_1=Module["_emscripten_bind_btConvexHullShape_setLocalScaling_1"]=asm["_emscripten_bind_btConvexHullShape_setLocalScaling_1"];var _emscripten_bind_btStridingMeshInterface___destroy___0=Module["_emscripten_bind_btStridingMeshInterface___destroy___0"]=asm["_emscripten_bind_btStridingMeshInterface___destroy___0"];var _emscripten_bind_btSoftBody_setActivationState_1=Module["_emscripten_bind_btSoftBody_setActivationState_1"]=asm["_emscripten_bind_btSoftBody_setActivationState_1"];var _emscripten_bind_btRigidBody_getUserIndex_0=Module["_emscripten_bind_btRigidBody_getUserIndex_0"]=asm["_emscripten_bind_btRigidBody_getUserIndex_0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"];var _emscripten_bind_btSoftBodyHelpers_CreatePatch_9=Module["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"]=asm["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"];var _emscripten_bind_btDispatcher_getNumManifolds_0=Module["_emscripten_bind_btDispatcher_getNumManifolds_0"]=asm["_emscripten_bind_btDispatcher_getNumManifolds_0"];var _emscripten_bind_btConvexShape_setMargin_1=Module["_emscripten_bind_btConvexShape_setMargin_1"]=asm["_emscripten_bind_btConvexShape_setMargin_1"];var _emscripten_bind_btSoftBody_get_m_nodes_0=Module["_emscripten_bind_btSoftBody_get_m_nodes_0"]=asm["_emscripten_bind_btSoftBody_get_m_nodes_0"];var _emscripten_bind_btSoftBody___destroy___0=Module["_emscripten_bind_btSoftBody___destroy___0"]=asm["_emscripten_bind_btSoftBody___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"];var _emscripten_bind_btRigidBody_activate_1=Module["_emscripten_bind_btRigidBody_activate_1"]=asm["_emscripten_bind_btRigidBody_activate_1"];var _emscripten_bind_btRigidBody_activate_0=Module["_emscripten_bind_btRigidBody_activate_0"]=asm["_emscripten_bind_btRigidBody_activate_0"];var _emscripten_bind_btRaycastVehicle___destroy___0=Module["_emscripten_bind_btRaycastVehicle___destroy___0"]=asm["_emscripten_bind_btRaycastVehicle___destroy___0"];var _emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"];var _emscripten_bind_Material_set_m_kVST_1=Module["_emscripten_bind_Material_set_m_kVST_1"]=asm["_emscripten_bind_Material_set_m_kVST_1"];var _emscripten_bind_btGhostObject_setActivationState_1=Module["_emscripten_bind_btGhostObject_setActivationState_1"]=asm["_emscripten_bind_btGhostObject_setActivationState_1"];var _emscripten_bind_Material_set_m_kLST_1=Module["_emscripten_bind_Material_set_m_kLST_1"]=asm["_emscripten_bind_Material_set_m_kLST_1"];var _emscripten_bind_tMaterialArray_size_0=Module["_emscripten_bind_tMaterialArray_size_0"]=asm["_emscripten_bind_tMaterialArray_size_0"];var _emscripten_bind_btCollisionWorld_contactPairTest_3=Module["_emscripten_bind_btCollisionWorld_contactPairTest_3"]=asm["_emscripten_bind_btCollisionWorld_contactPairTest_3"];var _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"];var _emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=Module["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"]=asm["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"];var _emscripten_bind_Config_get_kSS_SPLT_CL_0=Module["_emscripten_bind_Config_get_kSS_SPLT_CL_0"]=asm["_emscripten_bind_Config_get_kSS_SPLT_CL_0"];var _emscripten_bind_btCylinderShapeX___destroy___0=Module["_emscripten_bind_btCylinderShapeX___destroy___0"]=asm["_emscripten_bind_btCylinderShapeX___destroy___0"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"];var _emscripten_bind_btRigidBody_updateInertiaTensor_0=Module["_emscripten_bind_btRigidBody_updateInertiaTensor_0"]=asm["_emscripten_bind_btRigidBody_updateInertiaTensor_0"];var _emscripten_bind_ContactResultCallback___destroy___0=Module["_emscripten_bind_ContactResultCallback___destroy___0"]=asm["_emscripten_bind_ContactResultCallback___destroy___0"];var _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=Module["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"];var _emscripten_bind_btSoftBody_setAnisotropicFriction_2=Module["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"]=asm["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"];var _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=Module["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"]=asm["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"];var _emscripten_bind_btRigidBody_getMotionState_0=Module["_emscripten_bind_btRigidBody_getMotionState_0"]=asm["_emscripten_bind_btRigidBody_getMotionState_0"];var _emscripten_bind_btKinematicCharacterController_getGhostObject_0=Module["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"]=asm["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"];var _emscripten_bind_btRigidBody_btRigidBody_1=Module["_emscripten_bind_btRigidBody_btRigidBody_1"]=asm["_emscripten_bind_btRigidBody_btRigidBody_1"];var _emscripten_bind_btTriangleMeshShape___destroy___0=Module["_emscripten_bind_btTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btTriangleMeshShape___destroy___0"];var _emscripten_bind_btKinematicCharacterController_setWalkDirection_1=Module["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"]=asm["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"];var _emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1=Module["_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1"]=asm["_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1"];var _emscripten_bind_btRigidBody_applyTorque_1=Module["_emscripten_bind_btRigidBody_applyTorque_1"]=asm["_emscripten_bind_btRigidBody_applyTorque_1"];var _emscripten_bind_btManifoldPoint_get_m_localPointA_0=Module["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"];var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"]=asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];var _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=Module["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"];var _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=Module["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"];var _emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0=Module["_emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0"]=asm["_emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0"];var _emscripten_bind_btGhostObject_setUserPointer_1=Module["_emscripten_bind_btGhostObject_setUserPointer_1"]=asm["_emscripten_bind_btGhostObject_setUserPointer_1"];var _emscripten_bind_btKinematicCharacterController_getGravity_0=Module["_emscripten_bind_btKinematicCharacterController_getGravity_0"]=asm["_emscripten_bind_btKinematicCharacterController_getGravity_0"];var _emscripten_enum_PHY_ScalarType_PHY_SHORT=Module["_emscripten_enum_PHY_ScalarType_PHY_SHORT"]=asm["_emscripten_enum_PHY_ScalarType_PHY_SHORT"];var _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0=Module["_emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0"]=asm["_emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0"];var _emscripten_bind_btVector4_normalize_0=Module["_emscripten_bind_btVector4_normalize_0"]=asm["_emscripten_bind_btVector4_normalize_0"];var _emscripten_bind_btQuaternion_setY_1=Module["_emscripten_bind_btQuaternion_setY_1"]=asm["_emscripten_bind_btQuaternion_setY_1"];var _emscripten_bind_btConeShape_calculateLocalInertia_2=Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];var _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=Module["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"]=asm["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"];var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"]=asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"];var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=asm["_llvm_bswap_i32"];var _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=Module["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"]=asm["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"];var _emscripten_bind_btSphereShape_setLocalScaling_1=Module["_emscripten_bind_btSphereShape_setLocalScaling_1"]=asm["_emscripten_bind_btSphereShape_setLocalScaling_1"];var _emscripten_bind_btRigidBody_applyCentralLocalForce_1=Module["_emscripten_bind_btRigidBody_applyCentralLocalForce_1"]=asm["_emscripten_bind_btRigidBody_applyCentralLocalForce_1"];var _emscripten_bind_btVector4_w_0=Module["_emscripten_bind_btVector4_w_0"]=asm["_emscripten_bind_btVector4_w_0"];var _emscripten_bind_btWheelInfo_get_m_worldTransform_0=Module["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"]=asm["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"];var _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=Module["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"];var _emscripten_bind_btBvhTriangleMeshShape___destroy___0=Module["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"]=asm["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"];var _emscripten_bind_Config_set_citerations_1=Module["_emscripten_bind_Config_set_citerations_1"]=asm["_emscripten_bind_Config_set_citerations_1"];var _emscripten_bind_btSoftBody_checkFace_3=Module["_emscripten_bind_btSoftBody_checkFace_3"]=asm["_emscripten_bind_btSoftBody_checkFace_3"];var _emscripten_bind_Config_get_kSKHR_CL_0=Module["_emscripten_bind_Config_get_kSKHR_CL_0"]=asm["_emscripten_bind_Config_get_kSKHR_CL_0"];var _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=Module["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"]=asm["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"];var _free=Module["_free"]=asm["_free"];var _emscripten_bind_LocalConvexResult_LocalConvexResult_5=Module["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"]=asm["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"];var _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=Module["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"]=asm["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"];var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"]=asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];var _emscripten_bind_Config_set_diterations_1=Module["_emscripten_bind_Config_set_diterations_1"]=asm["_emscripten_bind_Config_set_diterations_1"];var _emscripten_bind_btGeneric6DofConstraint___destroy___0=Module["_emscripten_bind_btGeneric6DofConstraint___destroy___0"]=asm["_emscripten_bind_btGeneric6DofConstraint___destroy___0"];var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"];var _emscripten_bind_Config_set_kDP_1=Module["_emscripten_bind_Config_set_kDP_1"]=asm["_emscripten_bind_Config_set_kDP_1"];var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"];var _emscripten_bind_btConvexHullShape_addPoint_1=Module["_emscripten_bind_btConvexHullShape_addPoint_1"]=asm["_emscripten_bind_btConvexHullShape_addPoint_1"];var _emscripten_bind_btConvexHullShape_addPoint_2=Module["_emscripten_bind_btConvexHullShape_addPoint_2"]=asm["_emscripten_bind_btConvexHullShape_addPoint_2"];var _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=Module["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"]=asm["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"];var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"]=asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"];var _emscripten_bind_btTransform_getOrigin_0=Module["_emscripten_bind_btTransform_getOrigin_0"]=asm["_emscripten_bind_btTransform_getOrigin_0"];var _emscripten_bind_Config_get_kKHR_0=Module["_emscripten_bind_Config_get_kKHR_0"]=asm["_emscripten_bind_Config_get_kKHR_0"];var _emscripten_bind_Material_get_m_kLST_0=Module["_emscripten_bind_Material_get_m_kLST_0"]=asm["_emscripten_bind_Material_get_m_kLST_0"];var _emscripten_bind_btHingeConstraint___destroy___0=Module["_emscripten_bind_btHingeConstraint___destroy___0"]=asm["_emscripten_bind_btHingeConstraint___destroy___0"];var _emscripten_bind_btPairCachingGhostObject_getUserPointer_0=Module["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"];var _emscripten_bind_btSoftBody_set_m_nodes_1=Module["_emscripten_bind_btSoftBody_set_m_nodes_1"]=asm["_emscripten_bind_btSoftBody_set_m_nodes_1"];var _emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"];var _emscripten_bind_btDbvtBroadphase___destroy___0=Module["_emscripten_bind_btDbvtBroadphase___destroy___0"]=asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];var _emscripten_bind_Config_set_viterations_1=Module["_emscripten_bind_Config_set_viterations_1"]=asm["_emscripten_bind_Config_set_viterations_1"];var _emscripten_bind_btConvexShape_calculateLocalInertia_2=Module["_emscripten_bind_btConvexShape_calculateLocalInertia_2"]=asm["_emscripten_bind_btConvexShape_calculateLocalInertia_2"];var _memset=Module["_memset"]=asm["_memset"];var _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=Module["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_0=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_1=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"];var _emscripten_bind_btTriangleMesh_btTriangleMesh_2=Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"]=asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"];var _emscripten_bind_btWheelInfo_set_m_frictionSlip_1=Module["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"]=asm["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"];var _emscripten_bind_btSoftBodyHelpers___destroy___0=Module["_emscripten_bind_btSoftBodyHelpers___destroy___0"]=asm["_emscripten_bind_btSoftBodyHelpers___destroy___0"];var _emscripten_bind_btRigidBody_getCollisionShape_0=Module["_emscripten_bind_btRigidBody_getCollisionShape_0"]=asm["_emscripten_bind_btRigidBody_getCollisionShape_0"];var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"]=asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"];var _emscripten_bind_btManifoldPoint_get_m_localPointB_0=Module["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"]=asm["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"];var _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"];var _emscripten_bind_btSliderConstraint_setLowerLinLimit_1=Module["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"]=asm["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"];var _emscripten_bind_btRigidBody_getAngularVelocity_0=Module["_emscripten_bind_btRigidBody_getAngularVelocity_0"]=asm["_emscripten_bind_btRigidBody_getAngularVelocity_0"];var _emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1=Module["_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1"]=asm["_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1"];var _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=Module["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"]=asm["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"];var _emscripten_bind_btRigidBody_setLinearVelocity_1=Module["_emscripten_bind_btRigidBody_setLinearVelocity_1"]=asm["_emscripten_bind_btRigidBody_setLinearVelocity_1"];var _emscripten_bind_btVehicleTuning_btVehicleTuning_0=Module["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"]=asm["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"];var _emscripten_bind_RayResultCallback_set_m_collisionObject_1=Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"]=asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];var _emscripten_bind_btDefaultSoftBodySolver___destroy___0=Module["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"]=asm["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"];var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"]=asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"];var _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"]=asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"];var _emscripten_bind_btDynamicsWorld_addAction_1=Module["_emscripten_bind_btDynamicsWorld_addAction_1"]=asm["_emscripten_bind_btDynamicsWorld_addAction_1"];var _emscripten_bind_btSoftBody_appendMaterial_0=Module["_emscripten_bind_btSoftBody_appendMaterial_0"]=asm["_emscripten_bind_btSoftBody_appendMaterial_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"];var _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=Module["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"]=asm["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"];var _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"];var _emscripten_bind_btSoftBody_setRestitution_1=Module["_emscripten_bind_btSoftBody_setRestitution_1"]=asm["_emscripten_bind_btSoftBody_setRestitution_1"];var _emscripten_bind_Config_set_kLF_1=Module["_emscripten_bind_Config_set_kLF_1"]=asm["_emscripten_bind_Config_set_kLF_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1"];var _emscripten_enum_PHY_ScalarType_PHY_FLOAT=Module["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"]=asm["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"];var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"]=asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"];var _emscripten_bind_Config_set_kSS_SPLT_CL_1=Module["_emscripten_bind_Config_set_kSS_SPLT_CL_1"]=asm["_emscripten_bind_Config_set_kSS_SPLT_CL_1"];var _emscripten_bind_btGhostObject_isActive_0=Module["_emscripten_bind_btGhostObject_isActive_0"]=asm["_emscripten_bind_btGhostObject_isActive_0"];var _emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1=Module["_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1"];var _emscripten_bind_btKinematicCharacterController_setFallSpeed_1=Module["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"]=asm["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"];var _emscripten_bind_btRigidBody_setActivationState_1=Module["_emscripten_bind_btRigidBody_setActivationState_1"]=asm["_emscripten_bind_btRigidBody_setActivationState_1"];var _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"]=asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"];var _emscripten_bind_ClosestConvexResultCallback_hasHit_0=Module["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"]=asm["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"];var _emscripten_bind_btCapsuleShapeZ___destroy___0=Module["_emscripten_bind_btCapsuleShapeZ___destroy___0"]=asm["_emscripten_bind_btCapsuleShapeZ___destroy___0"];var _emscripten_bind_btRaycastVehicle_getRigidBody_0=Module["_emscripten_bind_btRaycastVehicle_getRigidBody_0"]=asm["_emscripten_bind_btRaycastVehicle_getRigidBody_0"];var _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"]=asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"];var _emscripten_bind_btSoftBody_get_m_materials_0=Module["_emscripten_bind_btSoftBody_get_m_materials_0"]=asm["_emscripten_bind_btSoftBody_get_m_materials_0"];var _emscripten_bind_btTriangleMesh_addTriangle_3=Module["_emscripten_bind_btTriangleMesh_addTriangle_3"]=asm["_emscripten_bind_btTriangleMesh_addTriangle_3"];var _emscripten_bind_btGhostObject_getOverlappingObject_1=Module["_emscripten_bind_btGhostObject_getOverlappingObject_1"]=asm["_emscripten_bind_btGhostObject_getOverlappingObject_1"];var _emscripten_bind_btTriangleMesh_addTriangle_4=Module["_emscripten_bind_btTriangleMesh_addTriangle_4"]=asm["_emscripten_bind_btTriangleMesh_addTriangle_4"];var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"];var _emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"]=asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"];var _emscripten_bind_Config_get_kDF_0=Module["_emscripten_bind_Config_get_kDF_0"]=asm["_emscripten_bind_Config_get_kDF_0"];var _emscripten_bind_btRigidBody_applyTorqueImpulse_1=Module["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"]=asm["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"];var _emscripten_bind_btRigidBody_setCollisionFlags_1=Module["_emscripten_bind_btRigidBody_setCollisionFlags_1"]=asm["_emscripten_bind_btRigidBody_setCollisionFlags_1"];var _emscripten_bind_btWheelInfo_get_m_steering_0=Module["_emscripten_bind_btWheelInfo_get_m_steering_0"]=asm["_emscripten_bind_btWheelInfo_get_m_steering_0"];var _emscripten_bind_btRigidBody___destroy___0=Module["_emscripten_bind_btRigidBody___destroy___0"]=asm["_emscripten_bind_btRigidBody___destroy___0"];var _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=Module["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"]=asm["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"];var _emscripten_bind_Config_set_kCHR_1=Module["_emscripten_bind_Config_set_kCHR_1"]=asm["_emscripten_bind_Config_set_kCHR_1"];var _emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"];var _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=Module["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"]=asm["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"];var _emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=Module["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"];var _emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=Module["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"];var _emscripten_bind_btSliderConstraint_btSliderConstraint_3=Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"]=asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"];var _emscripten_bind_btTransform___destroy___0=Module["_emscripten_bind_btTransform___destroy___0"]=asm["_emscripten_bind_btTransform___destroy___0"];var _emscripten_bind_btDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_btSliderConstraint___destroy___0=Module["_emscripten_bind_btSliderConstraint___destroy___0"]=asm["_emscripten_bind_btSliderConstraint___destroy___0"];var _emscripten_bind_btRigidBody_forceActivationState_1=Module["_emscripten_bind_btRigidBody_forceActivationState_1"]=asm["_emscripten_bind_btRigidBody_forceActivationState_1"];var _emscripten_bind_btPoint2PointConstraint_setPivotB_1=Module["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"]=asm["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"];var _emscripten_bind_btManifoldPoint_getDistance_0=Module["_emscripten_bind_btManifoldPoint_getDistance_0"]=asm["_emscripten_bind_btManifoldPoint_getDistance_0"];var _emscripten_bind_btGhostPairCallback___destroy___0=Module["_emscripten_bind_btGhostPairCallback___destroy___0"]=asm["_emscripten_bind_btGhostPairCallback___destroy___0"];var _emscripten_bind_btTransform_setFromOpenGLMatrix_1=Module["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"]=asm["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"];var _emscripten_bind_btKinematicCharacterController_getMaxSlope_0=Module["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"]=asm["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"];var _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"]=asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"];var _emscripten_bind_btRaycastVehicle_addWheel_7=Module["_emscripten_bind_btRaycastVehicle_addWheel_7"]=asm["_emscripten_bind_btRaycastVehicle_addWheel_7"];var _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"]=asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"];var _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=Module["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"];var _emscripten_bind_btStaticPlaneShape___destroy___0=Module["_emscripten_bind_btStaticPlaneShape___destroy___0"]=asm["_emscripten_bind_btStaticPlaneShape___destroy___0"];var _emscripten_bind_btHingeConstraint_enableMotor_1=Module["_emscripten_bind_btHingeConstraint_enableMotor_1"]=asm["_emscripten_bind_btHingeConstraint_enableMotor_1"];var _emscripten_bind_btCylinderShapeZ_setLocalScaling_1=Module["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"]=asm["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"];var _emscripten_bind_btBoxShape_setLocalScaling_1=Module["_emscripten_bind_btBoxShape_setLocalScaling_1"]=asm["_emscripten_bind_btBoxShape_setLocalScaling_1"];var _emscripten_bind_btConeShapeZ___destroy___0=Module["_emscripten_bind_btConeShapeZ___destroy___0"]=asm["_emscripten_bind_btConeShapeZ___destroy___0"];var _emscripten_bind_btDynamicsWorld_getPairCache_0=Module["_emscripten_bind_btDynamicsWorld_getPairCache_0"]=asm["_emscripten_bind_btDynamicsWorld_getPairCache_0"];var _emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1=Module["_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1"]=asm["_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1"];var _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=Module["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"];var _emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"]=asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"];var _emscripten_bind_btRigidBody_setRestitution_1=Module["_emscripten_bind_btRigidBody_setRestitution_1"]=asm["_emscripten_bind_btRigidBody_setRestitution_1"];var _emscripten_bind_btVector4_btVector4_0=Module["_emscripten_bind_btVector4_btVector4_0"]=asm["_emscripten_bind_btVector4_btVector4_0"];var _emscripten_bind_btVector4_x_0=Module["_emscripten_bind_btVector4_x_0"]=asm["_emscripten_bind_btVector4_x_0"];var _emscripten_bind_btVector4_btVector4_4=Module["_emscripten_bind_btVector4_btVector4_4"]=asm["_emscripten_bind_btVector4_btVector4_4"];var _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"]=asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"];var _emscripten_bind_btKinematicCharacterController___destroy___0=Module["_emscripten_bind_btKinematicCharacterController___destroy___0"]=asm["_emscripten_bind_btKinematicCharacterController___destroy___0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"];var _emscripten_bind_tMaterialArray_at_1=Module["_emscripten_bind_tMaterialArray_at_1"]=asm["_emscripten_bind_tMaterialArray_at_1"];var _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=Module["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"]=asm["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"];var _emscripten_bind_btConstraintSetting_btConstraintSetting_0=Module["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"]=asm["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"];var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"]=asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"];var _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"]=asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"];var _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=Module["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"]=asm["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"];var _emscripten_bind_btWheelInfo_get_m_raycastInfo_0=Module["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"]=asm["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"];var _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"]=asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"];var _emscripten_bind_btConvexShape_getMargin_0=Module["_emscripten_bind_btConvexShape_getMargin_0"]=asm["_emscripten_bind_btConvexShape_getMargin_0"];var _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=Module["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"]=asm["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"];var _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=Module["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"]=asm["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"];var _emscripten_bind_btPairCachingGhostObject_isActive_0=Module["_emscripten_bind_btPairCachingGhostObject_isActive_0"]=asm["_emscripten_bind_btPairCachingGhostObject_isActive_0"];var _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=Module["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"]=asm["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_vid=Module["dynCall_vid"]=asm["dynCall_vid"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_viiidii=Module["dynCall_viiidii"]=asm["dynCall_viiidii"];var dynCall_vii=Module["dynCall_vii"]=asm["dynCall_vii"];var dynCall_iiiiiiiiiii=Module["dynCall_iiiiiiiiiii"]=asm["dynCall_iiiiiiiiiii"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_viidi=Module["dynCall_viidi"]=asm["dynCall_viidi"];var dynCall_viddiii=Module["dynCall_viddiii"]=asm["dynCall_viddiii"];var dynCall_vidii=Module["dynCall_vidii"]=asm["dynCall_vidii"];var dynCall_iiiii=Module["dynCall_iiiii"]=asm["dynCall_iiiii"];var dynCall_vidi=Module["dynCall_vidi"]=asm["dynCall_vidi"];var dynCall_diiiiiiii=Module["dynCall_diiiiiiii"]=asm["dynCall_diiiiiiii"];var dynCall_viiiiddddiid=Module["dynCall_viiiiddddiid"]=asm["dynCall_viiiiddddiid"];var dynCall_diiiii=Module["dynCall_diiiii"]=asm["dynCall_diiiii"];var dynCall_vidd=Module["dynCall_vidd"]=asm["dynCall_vidd"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_viiiiid=Module["dynCall_viiiiid"]=asm["dynCall_viiiiid"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];var dynCall_iiid=Module["dynCall_iiid"]=asm["dynCall_iiid"];var dynCall_di=Module["dynCall_di"]=asm["dynCall_di"];var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=asm["dynCall_iiiiiii"];var dynCall_diiidii=Module["dynCall_diiidii"]=asm["dynCall_diiidii"];var dynCall_viidii=Module["dynCall_viidii"]=asm["dynCall_viidii"];var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=asm["dynCall_viiiiiii"];var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=asm["dynCall_viiiiiiiii"];var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=asm["dynCall_viiiiiiiiii"];var dynCall_iii=Module["dynCall_iii"]=asm["dynCall_iii"];var dynCall_diii=Module["dynCall_diii"]=asm["dynCall_diii"];var dynCall_diiiiiiiiii=Module["dynCall_diiiiiiiiii"]=asm["dynCall_diiiiiiiiii"];var dynCall_viiiid=Module["dynCall_viiiid"]=asm["dynCall_viiiid"];var dynCall_diiiiiiiii=Module["dynCall_diiiiiiiii"]=asm["dynCall_diiiiiiiii"];var dynCall_did=Module["dynCall_did"]=asm["dynCall_did"];var dynCall_viiiidddddidi=Module["dynCall_viiiidddddidi"]=asm["dynCall_viiiidddddidi"];var dynCall_diidii=Module["dynCall_diidii"]=asm["dynCall_diidii"];var dynCall_diiii=Module["dynCall_diiii"]=asm["dynCall_diiii"];var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=asm["dynCall_iiiiiiiiii"];var dynCall_viiid=Module["dynCall_viiid"]=asm["dynCall_viiid"];var dynCall_viii=Module["dynCall_viii"]=asm["dynCall_viii"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_viid=Module["dynCall_viid"]=asm["dynCall_viid"];var dynCall_iidid=Module["dynCall_iidid"]=asm["dynCall_iidid"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.establishStackSpace=asm["establishStackSpace"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}Module["noExitRuntime"]=true;run();function WrapperObject(){}WrapperObject.prototype=Object.create(WrapperObject.prototype);WrapperObject.prototype.constructor=WrapperObject;WrapperObject.prototype.__class__=WrapperObject;WrapperObject.__cache__={};Module["WrapperObject"]=WrapperObject;function getCache(__class__){return(__class__||WrapperObject).__cache__}Module["getCache"]=getCache;function wrapPointer(ptr,__class__){var cache=getCache(__class__);var ret=cache[ptr];if(ret)return ret;ret=Object.create((__class__||WrapperObject).prototype);ret.ptr=ptr;return cache[ptr]=ret}Module["wrapPointer"]=wrapPointer;function castObject(obj,__class__){return wrapPointer(obj.ptr,__class__)}Module["castObject"]=castObject;Module["NULL"]=wrapPointer(0);function destroy(obj){if(!obj["__destroy__"])throw"Error: Cannot destroy object. (Did you create it yourself?)";obj["__destroy__"]();delete getCache(obj.__class__)[obj.ptr]}Module["destroy"]=destroy;function compare(obj1,obj2){return obj1.ptr===obj2.ptr}Module["compare"]=compare;function getPointer(obj){return obj.ptr}Module["getPointer"]=getPointer;function getClass(obj){return obj.__class__}Module["getClass"]=getClass;var ensureCache={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:(function(){if(this.needed){for(var i=0;i<this.temps.length;i++){Module["_free"](this.temps[i])}this.temps.length=0;Module["_free"](this.buffer);this.buffer=0;this.size+=this.needed;this.needed=0}if(!this.buffer){this.size+=128;this.buffer=Module["_malloc"](this.size);assert(this.buffer)}this.pos=0}),alloc:(function(array,view){assert(this.buffer);var bytes=view.BYTES_PER_ELEMENT;var len=array.length*bytes;len=len+7&-8;var ret;if(this.pos+len>=this.size){assert(len>0);this.needed+=len;ret=Module["_malloc"](len);this.temps.push(ret)}else{ret=this.buffer+this.pos;this.pos+=len}var retShifted=ret;switch(bytes){case 2:retShifted>>=1;break;case 4:retShifted>>=2;break;case 8:retShifted>>=3;break}for(var i=0;i<array.length;i++){view[retShifted+i]=array[i]}return ret})};function ensureInt32(value){if(typeof value==="object")return ensureCache.alloc(value,HEAP32);return value}function ensureFloat32(value){if(typeof value==="object")return ensureCache.alloc(value,HEAPF32);return value}function btCollisionWorld(){throw"cannot construct a btCollisionWorld, no constructor in IDL"}btCollisionWorld.prototype=Object.create(WrapperObject.prototype);btCollisionWorld.prototype.constructor=btCollisionWorld;btCollisionWorld.prototype.__class__=btCollisionWorld;btCollisionWorld.__cache__={};Module["btCollisionWorld"]=btCollisionWorld;btCollisionWorld.prototype["getDispatcher"]=btCollisionWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatcher_0(self),btDispatcher)});btCollisionWorld.prototype["rayTest"]=btCollisionWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btCollisionWorld_rayTest_3(self,arg0,arg1,arg2)});btCollisionWorld.prototype["getPairCache"]=btCollisionWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getPairCache_0(self),btOverlappingPairCache)});btCollisionWorld.prototype["getDispatchInfo"]=btCollisionWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatchInfo_0(self),btDispatcherInfo)});btCollisionWorld.prototype["addCollisionObject"]=btCollisionWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btCollisionWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btCollisionWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btCollisionWorld_addCollisionObject_3(self,arg0,arg1,arg2)});btCollisionWorld.prototype["getBroadphase"]=btCollisionWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionWorld_getBroadphase_0(self),btBroadphaseInterface)});btCollisionWorld.prototype["convexSweepTest"]=btCollisionWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btCollisionWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4)});btCollisionWorld.prototype["contactPairTest"]=btCollisionWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btCollisionWorld_contactPairTest_3(self,arg0,arg1,arg2)});btCollisionWorld.prototype["contactTest"]=btCollisionWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionWorld_contactTest_2(self,arg0,arg1)});btCollisionWorld.prototype["__destroy__"]=btCollisionWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionWorld___destroy___0(self)});function btCollisionShape(){throw"cannot construct a btCollisionShape, no constructor in IDL"}btCollisionShape.prototype=Object.create(WrapperObject.prototype);btCollisionShape.prototype.constructor=btCollisionShape;btCollisionShape.prototype.__class__=btCollisionShape;btCollisionShape.__cache__={};Module["btCollisionShape"]=btCollisionShape;btCollisionShape.prototype["setLocalScaling"]=btCollisionShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionShape_setLocalScaling_1(self,arg0)});btCollisionShape.prototype["calculateLocalInertia"]=btCollisionShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionShape_calculateLocalInertia_2(self,arg0,arg1)});btCollisionShape.prototype["setMargin"]=btCollisionShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionShape_setMargin_1(self,arg0)});btCollisionShape.prototype["getMargin"]=btCollisionShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCollisionShape_getMargin_0(self)});btCollisionShape.prototype["__destroy__"]=btCollisionShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionShape___destroy___0(self)});function btCollisionObject(){throw"cannot construct a btCollisionObject, no constructor in IDL"}btCollisionObject.prototype=Object.create(WrapperObject.prototype);btCollisionObject.prototype.constructor=btCollisionObject;btCollisionObject.prototype.__class__=btCollisionObject;btCollisionObject.__cache__={};Module["btCollisionObject"]=btCollisionObject;btCollisionObject.prototype["setAnisotropicFriction"]=btCollisionObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCollisionObject_setAnisotropicFriction_2(self,arg0,arg1)});btCollisionObject.prototype["getCollisionShape"]=btCollisionObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getCollisionShape_0(self),btCollisionShape)});btCollisionObject.prototype["setContactProcessingThreshold"]=btCollisionObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1(self,arg0)});btCollisionObject.prototype["setActivationState"]=btCollisionObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setActivationState_1(self,arg0)});btCollisionObject.prototype["forceActivationState"]=btCollisionObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_forceActivationState_1(self,arg0)});btCollisionObject.prototype["activate"]=btCollisionObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btCollisionObject_activate_0(self);return}_emscripten_bind_btCollisionObject_activate_1(self,arg0)});btCollisionObject.prototype["isActive"]=btCollisionObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btCollisionObject_isActive_0(self)});btCollisionObject.prototype["isKinematicObject"]=btCollisionObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btCollisionObject_isKinematicObject_0(self)});btCollisionObject.prototype["setRestitution"]=btCollisionObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setRestitution_1(self,arg0)});btCollisionObject.prototype["setFriction"]=btCollisionObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setFriction_1(self,arg0)});btCollisionObject.prototype["setRollingFriction"]=btCollisionObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setRollingFriction_1(self,arg0)});btCollisionObject.prototype["getWorldTransform"]=btCollisionObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self),btTransform)});btCollisionObject.prototype["getCollisionFlags"]=btCollisionObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btCollisionObject_getCollisionFlags_0(self)});btCollisionObject.prototype["setCollisionFlags"]=btCollisionObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCollisionFlags_1(self,arg0)});btCollisionObject.prototype["setWorldTransform"]=btCollisionObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setWorldTransform_1(self,arg0)});btCollisionObject.prototype["setCollisionShape"]=btCollisionObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCollisionShape_1(self,arg0)});btCollisionObject.prototype["setCcdMotionThreshold"]=btCollisionObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1(self,arg0)});btCollisionObject.prototype["setCcdSweptSphereRadius"]=btCollisionObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1(self,arg0)});btCollisionObject.prototype["getUserIndex"]=btCollisionObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btCollisionObject_getUserIndex_0(self)});btCollisionObject.prototype["setUserIndex"]=btCollisionObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setUserIndex_1(self,arg0)});btCollisionObject.prototype["getUserPointer"]=btCollisionObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btCollisionObject_getUserPointer_0(self),VoidPtr)});btCollisionObject.prototype["setUserPointer"]=btCollisionObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCollisionObject_setUserPointer_1(self,arg0)});btCollisionObject.prototype["__destroy__"]=btCollisionObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionObject___destroy___0(self)});function btDynamicsWorld(){throw"cannot construct a btDynamicsWorld, no constructor in IDL"}btDynamicsWorld.prototype=Object.create(btCollisionWorld.prototype);btDynamicsWorld.prototype.constructor=btDynamicsWorld;btDynamicsWorld.prototype.__class__=btDynamicsWorld;btDynamicsWorld.__cache__={};Module["btDynamicsWorld"]=btDynamicsWorld;btDynamicsWorld.prototype["addAction"]=btDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDynamicsWorld_addAction_1(self,arg0)});btDynamicsWorld.prototype["removeAction"]=btDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDynamicsWorld_removeAction_1(self,arg0)});btDynamicsWorld.prototype["getSolverInfo"]=btDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btDynamicsWorld.prototype["getDispatcher"]=btDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatcher_0(self),btDispatcher)});btDynamicsWorld.prototype["rayTest"]=btDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDynamicsWorld_rayTest_3(self,arg0,arg1,arg2)});btDynamicsWorld.prototype["getPairCache"]=btDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btDynamicsWorld.prototype["getDispatchInfo"]=btDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btDynamicsWorld.prototype["addCollisionObject"]=btDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2)});btDynamicsWorld.prototype["getBroadphase"]=btDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btDynamicsWorld.prototype["convexSweepTest"]=btDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4)});btDynamicsWorld.prototype["contactPairTest"]=btDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2)});btDynamicsWorld.prototype["contactTest"]=btDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btDynamicsWorld_contactTest_2(self,arg0,arg1)});btDynamicsWorld.prototype["__destroy__"]=btDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDynamicsWorld___destroy___0(self)});function btTypedConstraint(){throw"cannot construct a btTypedConstraint, no constructor in IDL"}btTypedConstraint.prototype=Object.create(WrapperObject.prototype);btTypedConstraint.prototype.constructor=btTypedConstraint;btTypedConstraint.prototype.__class__=btTypedConstraint;btTypedConstraint.__cache__={};Module["btTypedConstraint"]=btTypedConstraint;btTypedConstraint.prototype["enableFeedback"]=btTypedConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTypedConstraint_enableFeedback_1(self,arg0)});btTypedConstraint.prototype["getBreakingImpulseThreshold"]=btTypedConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0(self)});btTypedConstraint.prototype["setBreakingImpulseThreshold"]=btTypedConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1(self,arg0)});btTypedConstraint.prototype["__destroy__"]=btTypedConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTypedConstraint___destroy___0(self)});function btConcaveShape(){throw"cannot construct a btConcaveShape, no constructor in IDL"}btConcaveShape.prototype=Object.create(btCollisionShape.prototype);btConcaveShape.prototype.constructor=btConcaveShape;btConcaveShape.prototype.__class__=btConcaveShape;btConcaveShape.__cache__={};Module["btConcaveShape"]=btConcaveShape;btConcaveShape.prototype["setLocalScaling"]=btConcaveShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConcaveShape_setLocalScaling_1(self,arg0)});btConcaveShape.prototype["calculateLocalInertia"]=btConcaveShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConcaveShape_calculateLocalInertia_2(self,arg0,arg1)});btConcaveShape.prototype["__destroy__"]=btConcaveShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConcaveShape___destroy___0(self)});function btCapsuleShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0,arg1);getCache(btCapsuleShape)[this.ptr]=this}btCapsuleShape.prototype=Object.create(btCollisionShape.prototype);btCapsuleShape.prototype.constructor=btCapsuleShape;btCapsuleShape.prototype.__class__=btCapsuleShape;btCapsuleShape.__cache__={};Module["btCapsuleShape"]=btCapsuleShape;btCapsuleShape.prototype["setMargin"]=btCapsuleShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShape_setMargin_1(self,arg0)});btCapsuleShape.prototype["getMargin"]=btCapsuleShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShape_getMargin_0(self)});btCapsuleShape.prototype["setLocalScaling"]=btCapsuleShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShape_setLocalScaling_1(self,arg0)});btCapsuleShape.prototype["calculateLocalInertia"]=btCapsuleShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self,arg0,arg1)});btCapsuleShape.prototype["__destroy__"]=btCapsuleShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShape___destroy___0(self)});function btDefaultCollisionConfiguration(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0();getCache(btDefaultCollisionConfiguration)[this.ptr]=this;return}this.ptr=_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);getCache(btDefaultCollisionConfiguration)[this.ptr]=this}btDefaultCollisionConfiguration.prototype=Object.create(WrapperObject.prototype);btDefaultCollisionConfiguration.prototype.constructor=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.prototype.__class__=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.__cache__={};Module["btDefaultCollisionConfiguration"]=btDefaultCollisionConfiguration;btDefaultCollisionConfiguration.prototype["__destroy__"]=btDefaultCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self)});function ConvexResultCallback(){throw"cannot construct a ConvexResultCallback, no constructor in IDL"}ConvexResultCallback.prototype=Object.create(WrapperObject.prototype);ConvexResultCallback.prototype.constructor=ConvexResultCallback;ConvexResultCallback.prototype.__class__=ConvexResultCallback;ConvexResultCallback.__cache__={};Module["ConvexResultCallback"]=ConvexResultCallback;ConvexResultCallback.prototype["hasHit"]=ConvexResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ConvexResultCallback_hasHit_0(self)});ConvexResultCallback.prototype["get_m_collisionFilterGroup"]=ConvexResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0(self)});ConvexResultCallback.prototype["set_m_collisionFilterGroup"]=ConvexResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1(self,arg0)});ConvexResultCallback.prototype["get_m_collisionFilterMask"]=ConvexResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0(self)});ConvexResultCallback.prototype["set_m_collisionFilterMask"]=ConvexResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1(self,arg0)});ConvexResultCallback.prototype["get_m_closestHitFraction"]=ConvexResultCallback.prototype.get_m_closestHitFraction=(function(){var self=this.ptr;return _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0(self)});ConvexResultCallback.prototype["set_m_closestHitFraction"]=ConvexResultCallback.prototype.set_m_closestHitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1(self,arg0)});ConvexResultCallback.prototype["__destroy__"]=ConvexResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ConvexResultCallback___destroy___0(self)});function btTriangleMeshShape(){throw"cannot construct a btTriangleMeshShape, no constructor in IDL"}btTriangleMeshShape.prototype=Object.create(btConcaveShape.prototype);btTriangleMeshShape.prototype.constructor=btTriangleMeshShape;btTriangleMeshShape.prototype.__class__=btTriangleMeshShape;btTriangleMeshShape.__cache__={};Module["btTriangleMeshShape"]=btTriangleMeshShape;btTriangleMeshShape.prototype["setLocalScaling"]=btTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTriangleMeshShape_setLocalScaling_1(self,arg0)});btTriangleMeshShape.prototype["calculateLocalInertia"]=btTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1)});btTriangleMeshShape.prototype["__destroy__"]=btTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTriangleMeshShape___destroy___0(self)});function btGhostObject(){this.ptr=_emscripten_bind_btGhostObject_btGhostObject_0();getCache(btGhostObject)[this.ptr]=this}btGhostObject.prototype=Object.create(btCollisionObject.prototype);btGhostObject.prototype.constructor=btGhostObject;btGhostObject.prototype.__class__=btGhostObject;btGhostObject.__cache__={};Module["btGhostObject"]=btGhostObject;btGhostObject.prototype["getNumOverlappingObjects"]=btGhostObject.prototype.getNumOverlappingObjects=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getNumOverlappingObjects_0(self)});btGhostObject.prototype["getOverlappingObject"]=btGhostObject.prototype.getOverlappingObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getOverlappingObject_1(self,arg0),btCollisionObject)});btGhostObject.prototype["setAnisotropicFriction"]=btGhostObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGhostObject_setAnisotropicFriction_2(self,arg0,arg1)});btGhostObject.prototype["getCollisionShape"]=btGhostObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getCollisionShape_0(self),btCollisionShape)});btGhostObject.prototype["setContactProcessingThreshold"]=btGhostObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setContactProcessingThreshold_1(self,arg0)});btGhostObject.prototype["setActivationState"]=btGhostObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setActivationState_1(self,arg0)});btGhostObject.prototype["forceActivationState"]=btGhostObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_forceActivationState_1(self,arg0)});btGhostObject.prototype["activate"]=btGhostObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btGhostObject_activate_0(self);return}_emscripten_bind_btGhostObject_activate_1(self,arg0)});btGhostObject.prototype["isActive"]=btGhostObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btGhostObject_isActive_0(self)});btGhostObject.prototype["isKinematicObject"]=btGhostObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btGhostObject_isKinematicObject_0(self)});btGhostObject.prototype["setRestitution"]=btGhostObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setRestitution_1(self,arg0)});btGhostObject.prototype["setFriction"]=btGhostObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setFriction_1(self,arg0)});btGhostObject.prototype["setRollingFriction"]=btGhostObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setRollingFriction_1(self,arg0)});btGhostObject.prototype["getWorldTransform"]=btGhostObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getWorldTransform_0(self),btTransform)});btGhostObject.prototype["getCollisionFlags"]=btGhostObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getCollisionFlags_0(self)});btGhostObject.prototype["setCollisionFlags"]=btGhostObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCollisionFlags_1(self,arg0)});btGhostObject.prototype["setWorldTransform"]=btGhostObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setWorldTransform_1(self,arg0)});btGhostObject.prototype["setCollisionShape"]=btGhostObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCollisionShape_1(self,arg0)});btGhostObject.prototype["setCcdMotionThreshold"]=btGhostObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCcdMotionThreshold_1(self,arg0)});btGhostObject.prototype["setCcdSweptSphereRadius"]=btGhostObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1(self,arg0)});btGhostObject.prototype["getUserIndex"]=btGhostObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btGhostObject_getUserIndex_0(self)});btGhostObject.prototype["setUserIndex"]=btGhostObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setUserIndex_1(self,arg0)});btGhostObject.prototype["getUserPointer"]=btGhostObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btGhostObject_getUserPointer_0(self),VoidPtr)});btGhostObject.prototype["setUserPointer"]=btGhostObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGhostObject_setUserPointer_1(self,arg0)});btGhostObject.prototype["__destroy__"]=btGhostObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGhostObject___destroy___0(self)});function btConeShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShape_btConeShape_2(arg0,arg1);getCache(btConeShape)[this.ptr]=this}btConeShape.prototype=Object.create(btCollisionShape.prototype);btConeShape.prototype.constructor=btConeShape;btConeShape.prototype.__class__=btConeShape;btConeShape.__cache__={};Module["btConeShape"]=btConeShape;btConeShape.prototype["setLocalScaling"]=btConeShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShape_setLocalScaling_1(self,arg0)});btConeShape.prototype["calculateLocalInertia"]=btConeShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShape_calculateLocalInertia_2(self,arg0,arg1)});btConeShape.prototype["__destroy__"]=btConeShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShape___destroy___0(self)});function btActionInterface(){throw"cannot construct a btActionInterface, no constructor in IDL"}btActionInterface.prototype=Object.create(WrapperObject.prototype);btActionInterface.prototype.constructor=btActionInterface;btActionInterface.prototype.__class__=btActionInterface;btActionInterface.__cache__={};Module["btActionInterface"]=btActionInterface;btActionInterface.prototype["__destroy__"]=btActionInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btActionInterface___destroy___0(self)});function btVector3(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_0();getCache(btVector3)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_1(arg0);getCache(btVector3)[this.ptr]=this;return}if(arg2===undefined){this.ptr=_emscripten_bind_btVector3_btVector3_2(arg0,arg1);getCache(btVector3)[this.ptr]=this;return}this.ptr=_emscripten_bind_btVector3_btVector3_3(arg0,arg1,arg2);getCache(btVector3)[this.ptr]=this}btVector3.prototype=Object.create(WrapperObject.prototype);btVector3.prototype.constructor=btVector3;btVector3.prototype.__class__=btVector3;btVector3.__cache__={};Module["btVector3"]=btVector3;btVector3.prototype["length"]=btVector3.prototype.length=(function(){var self=this.ptr;return _emscripten_bind_btVector3_length_0(self)});btVector3.prototype["x"]=btVector3.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btVector3_x_0(self)});btVector3.prototype["y"]=btVector3.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btVector3_y_0(self)});btVector3.prototype["z"]=btVector3.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btVector3_z_0(self)});btVector3.prototype["setX"]=btVector3.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setX_1(self,arg0)});btVector3.prototype["setY"]=btVector3.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setY_1(self,arg0)});btVector3.prototype["setZ"]=btVector3.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector3_setZ_1(self,arg0)});btVector3.prototype["setValue"]=btVector3.prototype.setValue=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btVector3_setValue_3(self,arg0,arg1,arg2)});btVector3.prototype["normalize"]=btVector3.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btVector3_normalize_0(self)});btVector3.prototype["dot"]=btVector3.prototype.dot=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btVector3_dot_1(self,arg0)});btVector3.prototype["op_mul"]=btVector3.prototype.op_mul=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self,arg0),btVector3)});btVector3.prototype["op_add"]=btVector3.prototype.op_add=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_add_1(self,arg0),btVector3)});btVector3.prototype["op_sub"]=btVector3.prototype.op_sub=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector3_op_sub_1(self,arg0),btVector3)});btVector3.prototype["__destroy__"]=btVector3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVector3___destroy___0(self)});function btVehicleRaycaster(){throw"cannot construct a btVehicleRaycaster, no constructor in IDL"}btVehicleRaycaster.prototype=Object.create(WrapperObject.prototype);btVehicleRaycaster.prototype.constructor=btVehicleRaycaster;btVehicleRaycaster.prototype.__class__=btVehicleRaycaster;btVehicleRaycaster.__cache__={};Module["btVehicleRaycaster"]=btVehicleRaycaster;btVehicleRaycaster.prototype["__destroy__"]=btVehicleRaycaster.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVehicleRaycaster___destroy___0(self)});function btQuadWord(){throw"cannot construct a btQuadWord, no constructor in IDL"}btQuadWord.prototype=Object.create(WrapperObject.prototype);btQuadWord.prototype.constructor=btQuadWord;btQuadWord.prototype.__class__=btQuadWord;btQuadWord.__cache__={};Module["btQuadWord"]=btQuadWord;btQuadWord.prototype["x"]=btQuadWord.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_x_0(self)});btQuadWord.prototype["y"]=btQuadWord.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_y_0(self)});btQuadWord.prototype["z"]=btQuadWord.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_z_0(self)});btQuadWord.prototype["w"]=btQuadWord.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btQuadWord_w_0(self)});btQuadWord.prototype["setX"]=btQuadWord.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setX_1(self,arg0)});btQuadWord.prototype["setY"]=btQuadWord.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setY_1(self,arg0)});btQuadWord.prototype["setZ"]=btQuadWord.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setZ_1(self,arg0)});btQuadWord.prototype["setW"]=btQuadWord.prototype.setW=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuadWord_setW_1(self,arg0)});btQuadWord.prototype["__destroy__"]=btQuadWord.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btQuadWord___destroy___0(self)});function btCylinderShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShape_btCylinderShape_1(arg0);getCache(btCylinderShape)[this.ptr]=this}btCylinderShape.prototype=Object.create(btCollisionShape.prototype);btCylinderShape.prototype.constructor=btCylinderShape;btCylinderShape.prototype.__class__=btCylinderShape;btCylinderShape.__cache__={};Module["btCylinderShape"]=btCylinderShape;btCylinderShape.prototype["setMargin"]=btCylinderShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShape_setMargin_1(self,arg0)});btCylinderShape.prototype["getMargin"]=btCylinderShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShape_getMargin_0(self)});btCylinderShape.prototype["setLocalScaling"]=btCylinderShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShape_setLocalScaling_1(self,arg0)});btCylinderShape.prototype["calculateLocalInertia"]=btCylinderShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShape_calculateLocalInertia_2(self,arg0,arg1)});btCylinderShape.prototype["__destroy__"]=btCylinderShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShape___destroy___0(self)});function btDiscreteDynamicsWorld(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;this.ptr=_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0,arg1,arg2,arg3);getCache(btDiscreteDynamicsWorld)[this.ptr]=this}btDiscreteDynamicsWorld.prototype=Object.create(btDynamicsWorld.prototype);btDiscreteDynamicsWorld.prototype.constructor=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.prototype.__class__=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.__cache__={};Module["btDiscreteDynamicsWorld"]=btDiscreteDynamicsWorld;btDiscreteDynamicsWorld.prototype["setGravity"]=btDiscreteDynamicsWorld.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self,arg0)});btDiscreteDynamicsWorld.prototype["getGravity"]=btDiscreteDynamicsWorld.prototype.getGravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self),btVector3)});btDiscreteDynamicsWorld.prototype["addRigidBody"]=btDiscreteDynamicsWorld.prototype.addRigidBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self,arg0,arg1);return}_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["removeRigidBody"]=btDiscreteDynamicsWorld.prototype.removeRigidBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1(self,arg0)});btDiscreteDynamicsWorld.prototype["addVehicle"]=btDiscreteDynamicsWorld.prototype.addVehicle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1(self,arg0)});btDiscreteDynamicsWorld.prototype["removeVehicle"]=btDiscreteDynamicsWorld.prototype.removeVehicle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1(self,arg0)});btDiscreteDynamicsWorld.prototype["addConstraint"]=btDiscreteDynamicsWorld.prototype.addConstraint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self,arg0);return}_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self,arg0,arg1)});btDiscreteDynamicsWorld.prototype["removeConstraint"]=btDiscreteDynamicsWorld.prototype.removeConstraint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self,arg0)});btDiscreteDynamicsWorld.prototype["stepSimulation"]=btDiscreteDynamicsWorld.prototype.stepSimulation=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self,arg0)}if(arg2===undefined){return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self,arg0,arg1)}return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["getDispatcher"]=btDiscreteDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0(self),btDispatcher)});btDiscreteDynamicsWorld.prototype["rayTest"]=btDiscreteDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["getPairCache"]=btDiscreteDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btDiscreteDynamicsWorld.prototype["getDispatchInfo"]=btDiscreteDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btDiscreteDynamicsWorld.prototype["addCollisionObject"]=btDiscreteDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["getBroadphase"]=btDiscreteDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btDiscreteDynamicsWorld.prototype["convexSweepTest"]=btDiscreteDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4)});btDiscreteDynamicsWorld.prototype["contactPairTest"]=btDiscreteDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2)});btDiscreteDynamicsWorld.prototype["contactTest"]=btDiscreteDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2(self,arg0,arg1)});btDiscreteDynamicsWorld.prototype["addAction"]=btDiscreteDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_addAction_1(self,arg0)});btDiscreteDynamicsWorld.prototype["removeAction"]=btDiscreteDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1(self,arg0)});btDiscreteDynamicsWorld.prototype["getSolverInfo"]=btDiscreteDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btDiscreteDynamicsWorld.prototype["__destroy__"]=btDiscreteDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self)});function btConvexShape(){throw"cannot construct a btConvexShape, no constructor in IDL"}btConvexShape.prototype=Object.create(btCollisionShape.prototype);btConvexShape.prototype.constructor=btConvexShape;btConvexShape.prototype.__class__=btConvexShape;btConvexShape.__cache__={};Module["btConvexShape"]=btConvexShape;btConvexShape.prototype["setLocalScaling"]=btConvexShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexShape_setLocalScaling_1(self,arg0)});btConvexShape.prototype["calculateLocalInertia"]=btConvexShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexShape_calculateLocalInertia_2(self,arg0,arg1)});btConvexShape.prototype["setMargin"]=btConvexShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexShape_setMargin_1(self,arg0)});btConvexShape.prototype["getMargin"]=btConvexShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexShape_getMargin_0(self)});btConvexShape.prototype["__destroy__"]=btConvexShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexShape___destroy___0(self)});function btDispatcher(){throw"cannot construct a btDispatcher, no constructor in IDL"}btDispatcher.prototype=Object.create(WrapperObject.prototype);btDispatcher.prototype.constructor=btDispatcher;btDispatcher.prototype.__class__=btDispatcher;btDispatcher.__cache__={};Module["btDispatcher"]=btDispatcher;btDispatcher.prototype["getNumManifolds"]=btDispatcher.prototype.getNumManifolds=(function(){var self=this.ptr;return _emscripten_bind_btDispatcher_getNumManifolds_0(self)});btDispatcher.prototype["getManifoldByIndexInternal"]=btDispatcher.prototype.getManifoldByIndexInternal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1(self,arg0),btPersistentManifold)});btDispatcher.prototype["__destroy__"]=btDispatcher.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDispatcher___destroy___0(self)});function btGeneric6DofConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3(arg0,arg1,arg2);getCache(btGeneric6DofConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(arg0,arg1,arg2,arg3);getCache(btGeneric6DofConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btGeneric6DofConstraint)[this.ptr]=this}btGeneric6DofConstraint.prototype=Object.create(btTypedConstraint.prototype);btGeneric6DofConstraint.prototype.constructor=btGeneric6DofConstraint;btGeneric6DofConstraint.prototype.__class__=btGeneric6DofConstraint;btGeneric6DofConstraint.__cache__={};Module["btGeneric6DofConstraint"]=btGeneric6DofConstraint;btGeneric6DofConstraint.prototype["setLinearLowerLimit"]=btGeneric6DofConstraint.prototype.setLinearLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1(self,arg0)});btGeneric6DofConstraint.prototype["setLinearUpperLimit"]=btGeneric6DofConstraint.prototype.setLinearUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1(self,arg0)});btGeneric6DofConstraint.prototype["setAngularLowerLimit"]=btGeneric6DofConstraint.prototype.setAngularLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1(self,arg0)});btGeneric6DofConstraint.prototype["setAngularUpperLimit"]=btGeneric6DofConstraint.prototype.setAngularUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1(self,arg0)});btGeneric6DofConstraint.prototype["getRotationalLimitMotor"]=btGeneric6DofConstraint.prototype.getRotationalLimitMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1(self,arg0),btRotationalLimitMotor)});btGeneric6DofConstraint.prototype["enableFeedback"]=btGeneric6DofConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1(self,arg0)});btGeneric6DofConstraint.prototype["getBreakingImpulseThreshold"]=btGeneric6DofConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0(self)});btGeneric6DofConstraint.prototype["setBreakingImpulseThreshold"]=btGeneric6DofConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1(self,arg0)});btGeneric6DofConstraint.prototype["__destroy__"]=btGeneric6DofConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGeneric6DofConstraint___destroy___0(self)});function btStridingMeshInterface(){throw"cannot construct a btStridingMeshInterface, no constructor in IDL"}btStridingMeshInterface.prototype=Object.create(WrapperObject.prototype);btStridingMeshInterface.prototype.constructor=btStridingMeshInterface;btStridingMeshInterface.prototype.__class__=btStridingMeshInterface;btStridingMeshInterface.__cache__={};Module["btStridingMeshInterface"]=btStridingMeshInterface;btStridingMeshInterface.prototype["__destroy__"]=btStridingMeshInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btStridingMeshInterface___destroy___0(self)});function btMotionState(){throw"cannot construct a btMotionState, no constructor in IDL"}btMotionState.prototype=Object.create(WrapperObject.prototype);btMotionState.prototype.constructor=btMotionState;btMotionState.prototype.__class__=btMotionState;btMotionState.__cache__={};Module["btMotionState"]=btMotionState;btMotionState.prototype["getWorldTransform"]=btMotionState.prototype.getWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMotionState_getWorldTransform_1(self,arg0)});btMotionState.prototype["setWorldTransform"]=btMotionState.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMotionState_setWorldTransform_1(self,arg0)});btMotionState.prototype["__destroy__"]=btMotionState.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btMotionState___destroy___0(self)});function ContactResultCallback(){throw"cannot construct a ContactResultCallback, no constructor in IDL"}ContactResultCallback.prototype=Object.create(WrapperObject.prototype);ContactResultCallback.prototype.constructor=ContactResultCallback;ContactResultCallback.prototype.__class__=ContactResultCallback;ContactResultCallback.__cache__={};Module["ContactResultCallback"]=ContactResultCallback;ContactResultCallback.prototype["addSingleResult"]=ContactResultCallback.prototype.addSingleResult=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return _emscripten_bind_ContactResultCallback_addSingleResult_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6)});ContactResultCallback.prototype["__destroy__"]=ContactResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ContactResultCallback___destroy___0(self)});function btSoftBodySolver(){throw"cannot construct a btSoftBodySolver, no constructor in IDL"}btSoftBodySolver.prototype=Object.create(WrapperObject.prototype);btSoftBodySolver.prototype.constructor=btSoftBodySolver;btSoftBodySolver.prototype.__class__=btSoftBodySolver;btSoftBodySolver.__cache__={};Module["btSoftBodySolver"]=btSoftBodySolver;btSoftBodySolver.prototype["__destroy__"]=btSoftBodySolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodySolver___destroy___0(self)});function RayResultCallback(){throw"cannot construct a RayResultCallback, no constructor in IDL"}RayResultCallback.prototype=Object.create(WrapperObject.prototype);RayResultCallback.prototype.constructor=RayResultCallback;RayResultCallback.prototype.__class__=RayResultCallback;RayResultCallback.__cache__={};Module["RayResultCallback"]=RayResultCallback;RayResultCallback.prototype["hasHit"]=RayResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_RayResultCallback_hasHit_0(self)});RayResultCallback.prototype["get_m_collisionFilterGroup"]=RayResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0(self)});RayResultCallback.prototype["set_m_collisionFilterGroup"]=RayResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1(self,arg0)});RayResultCallback.prototype["get_m_collisionFilterMask"]=RayResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0(self)});RayResultCallback.prototype["set_m_collisionFilterMask"]=RayResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1(self,arg0)});RayResultCallback.prototype["get_m_collisionObject"]=RayResultCallback.prototype.get_m_collisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self),btCollisionObject)});RayResultCallback.prototype["set_m_collisionObject"]=RayResultCallback.prototype.set_m_collisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RayResultCallback_set_m_collisionObject_1(self,arg0)});RayResultCallback.prototype["__destroy__"]=RayResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_RayResultCallback___destroy___0(self)});function btMatrix3x3(){throw"cannot construct a btMatrix3x3, no constructor in IDL"}btMatrix3x3.prototype=Object.create(WrapperObject.prototype);btMatrix3x3.prototype.constructor=btMatrix3x3;btMatrix3x3.prototype.__class__=btMatrix3x3;btMatrix3x3.__cache__={};Module["btMatrix3x3"]=btMatrix3x3;btMatrix3x3.prototype["setEulerZYX"]=btMatrix3x3.prototype.setEulerZYX=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btMatrix3x3_setEulerZYX_3(self,arg0,arg1,arg2)});btMatrix3x3.prototype["getRotation"]=btMatrix3x3.prototype.getRotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btMatrix3x3_getRotation_1(self,arg0)});btMatrix3x3.prototype["getRow"]=btMatrix3x3.prototype.getRow=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btMatrix3x3_getRow_1(self,arg0),btVector3)});btMatrix3x3.prototype["__destroy__"]=btMatrix3x3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btMatrix3x3___destroy___0(self)});function btDispatcherInfo(){throw"cannot construct a btDispatcherInfo, no constructor in IDL"}btDispatcherInfo.prototype=Object.create(WrapperObject.prototype);btDispatcherInfo.prototype.constructor=btDispatcherInfo;btDispatcherInfo.prototype.__class__=btDispatcherInfo;btDispatcherInfo.__cache__={};Module["btDispatcherInfo"]=btDispatcherInfo;btDispatcherInfo.prototype["get_m_timeStep"]=btDispatcherInfo.prototype.get_m_timeStep=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_timeStep_0(self)});btDispatcherInfo.prototype["set_m_timeStep"]=btDispatcherInfo.prototype.set_m_timeStep=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_timeStep_1(self,arg0)});btDispatcherInfo.prototype["get_m_stepCount"]=btDispatcherInfo.prototype.get_m_stepCount=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_stepCount_0(self)});btDispatcherInfo.prototype["set_m_stepCount"]=btDispatcherInfo.prototype.set_m_stepCount=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_stepCount_1(self,arg0)});btDispatcherInfo.prototype["get_m_dispatchFunc"]=btDispatcherInfo.prototype.get_m_dispatchFunc=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0(self)});btDispatcherInfo.prototype["set_m_dispatchFunc"]=btDispatcherInfo.prototype.set_m_dispatchFunc=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1(self,arg0)});btDispatcherInfo.prototype["get_m_timeOfImpact"]=btDispatcherInfo.prototype.get_m_timeOfImpact=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0(self)});btDispatcherInfo.prototype["set_m_timeOfImpact"]=btDispatcherInfo.prototype.set_m_timeOfImpact=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1(self,arg0)});btDispatcherInfo.prototype["get_m_useContinuous"]=btDispatcherInfo.prototype.get_m_useContinuous=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0(self)});btDispatcherInfo.prototype["set_m_useContinuous"]=btDispatcherInfo.prototype.set_m_useContinuous=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1(self,arg0)});btDispatcherInfo.prototype["get_m_enableSatConvex"]=btDispatcherInfo.prototype.get_m_enableSatConvex=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0(self)});btDispatcherInfo.prototype["set_m_enableSatConvex"]=btDispatcherInfo.prototype.set_m_enableSatConvex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1(self,arg0)});btDispatcherInfo.prototype["get_m_enableSPU"]=btDispatcherInfo.prototype.get_m_enableSPU=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0(self)});btDispatcherInfo.prototype["set_m_enableSPU"]=btDispatcherInfo.prototype.set_m_enableSPU=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1(self,arg0)});btDispatcherInfo.prototype["get_m_useEpa"]=btDispatcherInfo.prototype.get_m_useEpa=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useEpa_0(self)});btDispatcherInfo.prototype["set_m_useEpa"]=btDispatcherInfo.prototype.set_m_useEpa=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useEpa_1(self,arg0)});btDispatcherInfo.prototype["get_m_allowedCcdPenetration"]=btDispatcherInfo.prototype.get_m_allowedCcdPenetration=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0(self)});btDispatcherInfo.prototype["set_m_allowedCcdPenetration"]=btDispatcherInfo.prototype.set_m_allowedCcdPenetration=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1(self,arg0)});btDispatcherInfo.prototype["get_m_useConvexConservativeDistanceUtil"]=btDispatcherInfo.prototype.get_m_useConvexConservativeDistanceUtil=(function(){var self=this.ptr;return!!_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0(self)});btDispatcherInfo.prototype["set_m_useConvexConservativeDistanceUtil"]=btDispatcherInfo.prototype.set_m_useConvexConservativeDistanceUtil=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1(self,arg0)});btDispatcherInfo.prototype["get_m_convexConservativeDistanceThreshold"]=btDispatcherInfo.prototype.get_m_convexConservativeDistanceThreshold=(function(){var self=this.ptr;return _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0(self)});btDispatcherInfo.prototype["set_m_convexConservativeDistanceThreshold"]=btDispatcherInfo.prototype.set_m_convexConservativeDistanceThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1(self,arg0)});btDispatcherInfo.prototype["__destroy__"]=btDispatcherInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDispatcherInfo___destroy___0(self)});function Material(){throw"cannot construct a Material, no constructor in IDL"}Material.prototype=Object.create(WrapperObject.prototype);Material.prototype.constructor=Material;Material.prototype.__class__=Material;Material.__cache__={};Module["Material"]=Material;Material.prototype["get_m_kLST"]=Material.prototype.get_m_kLST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kLST_0(self)});Material.prototype["set_m_kLST"]=Material.prototype.set_m_kLST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kLST_1(self,arg0)});Material.prototype["get_m_kAST"]=Material.prototype.get_m_kAST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kAST_0(self)});Material.prototype["set_m_kAST"]=Material.prototype.set_m_kAST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kAST_1(self,arg0)});Material.prototype["get_m_kVST"]=Material.prototype.get_m_kVST=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_kVST_0(self)});Material.prototype["set_m_kVST"]=Material.prototype.set_m_kVST=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_kVST_1(self,arg0)});Material.prototype["get_m_flags"]=Material.prototype.get_m_flags=(function(){var self=this.ptr;return _emscripten_bind_Material_get_m_flags_0(self)});Material.prototype["set_m_flags"]=Material.prototype.set_m_flags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Material_set_m_flags_1(self,arg0)});Material.prototype["__destroy__"]=Material.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Material___destroy___0(self)});function btConvexTriangleMeshShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){this.ptr=_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1(arg0);getCache(btConvexTriangleMeshShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2(arg0,arg1);getCache(btConvexTriangleMeshShape)[this.ptr]=this}btConvexTriangleMeshShape.prototype=Object.create(btConvexShape.prototype);btConvexTriangleMeshShape.prototype.constructor=btConvexTriangleMeshShape;btConvexTriangleMeshShape.prototype.__class__=btConvexTriangleMeshShape;btConvexTriangleMeshShape.__cache__={};Module["btConvexTriangleMeshShape"]=btConvexTriangleMeshShape;btConvexTriangleMeshShape.prototype["setLocalScaling"]=btConvexTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1(self,arg0)});btConvexTriangleMeshShape.prototype["calculateLocalInertia"]=btConvexTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1)});btConvexTriangleMeshShape.prototype["setMargin"]=btConvexTriangleMeshShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexTriangleMeshShape_setMargin_1(self,arg0)});btConvexTriangleMeshShape.prototype["getMargin"]=btConvexTriangleMeshShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexTriangleMeshShape_getMargin_0(self)});btConvexTriangleMeshShape.prototype["__destroy__"]=btConvexTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexTriangleMeshShape___destroy___0(self)});function btBroadphaseInterface(){throw"cannot construct a btBroadphaseInterface, no constructor in IDL"}btBroadphaseInterface.prototype=Object.create(WrapperObject.prototype);btBroadphaseInterface.prototype.constructor=btBroadphaseInterface;btBroadphaseInterface.prototype.__class__=btBroadphaseInterface;btBroadphaseInterface.__cache__={};Module["btBroadphaseInterface"]=btBroadphaseInterface;btBroadphaseInterface.prototype["__destroy__"]=btBroadphaseInterface.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBroadphaseInterface___destroy___0(self)});function btRigidBodyConstructionInfo(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0,arg1,arg2);getCache(btRigidBodyConstructionInfo)[this.ptr]=this;return}this.ptr=_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0,arg1,arg2,arg3);getCache(btRigidBodyConstructionInfo)[this.ptr]=this}btRigidBodyConstructionInfo.prototype=Object.create(WrapperObject.prototype);btRigidBodyConstructionInfo.prototype.constructor=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.prototype.__class__=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.__cache__={};Module["btRigidBodyConstructionInfo"]=btRigidBodyConstructionInfo;btRigidBodyConstructionInfo.prototype["get_m_linearDamping"]=btRigidBodyConstructionInfo.prototype.get_m_linearDamping=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_linearDamping"]=btRigidBodyConstructionInfo.prototype.set_m_linearDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_angularDamping"]=btRigidBodyConstructionInfo.prototype.get_m_angularDamping=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_angularDamping"]=btRigidBodyConstructionInfo.prototype.set_m_angularDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_friction"]=btRigidBodyConstructionInfo.prototype.get_m_friction=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0(self)});btRigidBodyConstructionInfo.prototype["set_m_friction"]=btRigidBodyConstructionInfo.prototype.set_m_friction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_rollingFriction"]=btRigidBodyConstructionInfo.prototype.get_m_rollingFriction=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0(self)});btRigidBodyConstructionInfo.prototype["set_m_rollingFriction"]=btRigidBodyConstructionInfo.prototype.set_m_rollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_restitution"]=btRigidBodyConstructionInfo.prototype.get_m_restitution=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0(self)});btRigidBodyConstructionInfo.prototype["set_m_restitution"]=btRigidBodyConstructionInfo.prototype.set_m_restitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_linearSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.get_m_linearSleepingThreshold=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0(self)});btRigidBodyConstructionInfo.prototype["set_m_linearSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.set_m_linearSleepingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_angularSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.get_m_angularSleepingThreshold=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0(self)});btRigidBodyConstructionInfo.prototype["set_m_angularSleepingThreshold"]=btRigidBodyConstructionInfo.prototype.set_m_angularSleepingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_additionalDamping"]=btRigidBodyConstructionInfo.prototype.get_m_additionalDamping=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalDamping"]=btRigidBodyConstructionInfo.prototype.set_m_additionalDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_additionalDampingFactor"]=btRigidBodyConstructionInfo.prototype.get_m_additionalDampingFactor=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalDampingFactor"]=btRigidBodyConstructionInfo.prototype.set_m_additionalDampingFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_additionalLinearDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.get_m_additionalLinearDampingThresholdSqr=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalLinearDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.set_m_additionalLinearDampingThresholdSqr=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingThresholdSqr=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingThresholdSqr"]=btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingThresholdSqr=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1(self,arg0)});btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingFactor"]=btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingFactor=(function(){var self=this.ptr;return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0(self)});btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingFactor"]=btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1(self,arg0)});btRigidBodyConstructionInfo.prototype["__destroy__"]=btRigidBodyConstructionInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self)});function btCollisionConfiguration(){throw"cannot construct a btCollisionConfiguration, no constructor in IDL"}btCollisionConfiguration.prototype=Object.create(WrapperObject.prototype);btCollisionConfiguration.prototype.constructor=btCollisionConfiguration;btCollisionConfiguration.prototype.__class__=btCollisionConfiguration;btCollisionConfiguration.__cache__={};Module["btCollisionConfiguration"]=btCollisionConfiguration;btCollisionConfiguration.prototype["__destroy__"]=btCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionConfiguration___destroy___0(self)});function btPersistentManifold(){this.ptr=_emscripten_bind_btPersistentManifold_btPersistentManifold_0();getCache(btPersistentManifold)[this.ptr]=this}btPersistentManifold.prototype=Object.create(WrapperObject.prototype);btPersistentManifold.prototype.constructor=btPersistentManifold;btPersistentManifold.prototype.__class__=btPersistentManifold;btPersistentManifold.__cache__={};Module["btPersistentManifold"]=btPersistentManifold;btPersistentManifold.prototype["getBody0"]=btPersistentManifold.prototype.getBody0=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getBody0_0(self),btCollisionObject)});btPersistentManifold.prototype["getBody1"]=btPersistentManifold.prototype.getBody1=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getBody1_0(self),btCollisionObject)});btPersistentManifold.prototype["getNumContacts"]=btPersistentManifold.prototype.getNumContacts=(function(){var self=this.ptr;return _emscripten_bind_btPersistentManifold_getNumContacts_0(self)});btPersistentManifold.prototype["getContactPoint"]=btPersistentManifold.prototype.getContactPoint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btPersistentManifold_getContactPoint_1(self,arg0),btManifoldPoint)});btPersistentManifold.prototype["__destroy__"]=btPersistentManifold.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPersistentManifold___destroy___0(self)});function btCompoundShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btCompoundShape_btCompoundShape_0();getCache(btCompoundShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btCompoundShape_btCompoundShape_1(arg0);getCache(btCompoundShape)[this.ptr]=this}btCompoundShape.prototype=Object.create(btCollisionShape.prototype);btCompoundShape.prototype.constructor=btCompoundShape;btCompoundShape.prototype.__class__=btCompoundShape;btCompoundShape.__cache__={};Module["btCompoundShape"]=btCompoundShape;btCompoundShape.prototype["addChildShape"]=btCompoundShape.prototype.addChildShape=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCompoundShape_addChildShape_2(self,arg0,arg1)});btCompoundShape.prototype["removeChildShapeByIndex"]=btCompoundShape.prototype.removeChildShapeByIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1(self,arg0)});btCompoundShape.prototype["getNumChildShapes"]=btCompoundShape.prototype.getNumChildShapes=(function(){var self=this.ptr;return _emscripten_bind_btCompoundShape_getNumChildShapes_0(self)});btCompoundShape.prototype["getChildShape"]=btCompoundShape.prototype.getChildShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btCompoundShape_getChildShape_1(self,arg0),btCollisionShape)});btCompoundShape.prototype["setMargin"]=btCompoundShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_setMargin_1(self,arg0)});btCompoundShape.prototype["getMargin"]=btCompoundShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCompoundShape_getMargin_0(self)});btCompoundShape.prototype["setLocalScaling"]=btCompoundShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCompoundShape_setLocalScaling_1(self,arg0)});btCompoundShape.prototype["calculateLocalInertia"]=btCompoundShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCompoundShape_calculateLocalInertia_2(self,arg0,arg1)});btCompoundShape.prototype["__destroy__"]=btCompoundShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCompoundShape___destroy___0(self)});function ClosestConvexResultCallback(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2(arg0,arg1);getCache(ClosestConvexResultCallback)[this.ptr]=this}ClosestConvexResultCallback.prototype=Object.create(ConvexResultCallback.prototype);ClosestConvexResultCallback.prototype.constructor=ClosestConvexResultCallback;ClosestConvexResultCallback.prototype.__class__=ClosestConvexResultCallback;ClosestConvexResultCallback.__cache__={};Module["ClosestConvexResultCallback"]=ClosestConvexResultCallback;ClosestConvexResultCallback.prototype["hasHit"]=ClosestConvexResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ClosestConvexResultCallback_hasHit_0(self)});ClosestConvexResultCallback.prototype["get_m_convexFromWorld"]=ClosestConvexResultCallback.prototype.get_m_convexFromWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_convexFromWorld"]=ClosestConvexResultCallback.prototype.set_m_convexFromWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_convexToWorld"]=ClosestConvexResultCallback.prototype.get_m_convexToWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_convexToWorld"]=ClosestConvexResultCallback.prototype.set_m_convexToWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_hitNormalWorld"]=ClosestConvexResultCallback.prototype.get_m_hitNormalWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_hitNormalWorld"]=ClosestConvexResultCallback.prototype.set_m_hitNormalWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_hitPointWorld"]=ClosestConvexResultCallback.prototype.get_m_hitPointWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0(self),btVector3)});ClosestConvexResultCallback.prototype["set_m_hitPointWorld"]=ClosestConvexResultCallback.prototype.set_m_hitPointWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_collisionFilterGroup"]=ClosestConvexResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0(self)});ClosestConvexResultCallback.prototype["set_m_collisionFilterGroup"]=ClosestConvexResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_collisionFilterMask"]=ClosestConvexResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0(self)});ClosestConvexResultCallback.prototype["set_m_collisionFilterMask"]=ClosestConvexResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1(self,arg0)});ClosestConvexResultCallback.prototype["get_m_closestHitFraction"]=ClosestConvexResultCallback.prototype.get_m_closestHitFraction=(function(){var self=this.ptr;return _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0(self)});ClosestConvexResultCallback.prototype["set_m_closestHitFraction"]=ClosestConvexResultCallback.prototype.set_m_closestHitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1(self,arg0)});ClosestConvexResultCallback.prototype["__destroy__"]=ClosestConvexResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ClosestConvexResultCallback___destroy___0(self)});function tMaterialArray(){throw"cannot construct a tMaterialArray, no constructor in IDL"}tMaterialArray.prototype=Object.create(WrapperObject.prototype);tMaterialArray.prototype.constructor=tMaterialArray;tMaterialArray.prototype.__class__=tMaterialArray;tMaterialArray.__cache__={};Module["tMaterialArray"]=tMaterialArray;tMaterialArray.prototype["size"]=tMaterialArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_tMaterialArray_size_0(self)});tMaterialArray.prototype["at"]=tMaterialArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_tMaterialArray_at_1(self,arg0),Material)});tMaterialArray.prototype["__destroy__"]=tMaterialArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_tMaterialArray___destroy___0(self)});function btDefaultVehicleRaycaster(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1(arg0);getCache(btDefaultVehicleRaycaster)[this.ptr]=this}btDefaultVehicleRaycaster.prototype=Object.create(btVehicleRaycaster.prototype);btDefaultVehicleRaycaster.prototype.constructor=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.prototype.__class__=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.__cache__={};Module["btDefaultVehicleRaycaster"]=btDefaultVehicleRaycaster;btDefaultVehicleRaycaster.prototype["__destroy__"]=btDefaultVehicleRaycaster.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultVehicleRaycaster___destroy___0(self)});function btConstraintSetting(){this.ptr=_emscripten_bind_btConstraintSetting_btConstraintSetting_0();getCache(btConstraintSetting)[this.ptr]=this}btConstraintSetting.prototype=Object.create(WrapperObject.prototype);btConstraintSetting.prototype.constructor=btConstraintSetting;btConstraintSetting.prototype.__class__=btConstraintSetting;btConstraintSetting.__cache__={};Module["btConstraintSetting"]=btConstraintSetting;btConstraintSetting.prototype["get_m_tau"]=btConstraintSetting.prototype.get_m_tau=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_tau_0(self)});btConstraintSetting.prototype["set_m_tau"]=btConstraintSetting.prototype.set_m_tau=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_tau_1(self,arg0)});btConstraintSetting.prototype["get_m_damping"]=btConstraintSetting.prototype.get_m_damping=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_damping_0(self)});btConstraintSetting.prototype["set_m_damping"]=btConstraintSetting.prototype.set_m_damping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_damping_1(self,arg0)});btConstraintSetting.prototype["get_m_impulseClamp"]=btConstraintSetting.prototype.get_m_impulseClamp=(function(){var self=this.ptr;return _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0(self)});btConstraintSetting.prototype["set_m_impulseClamp"]=btConstraintSetting.prototype.set_m_impulseClamp=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1(self,arg0)});btConstraintSetting.prototype["__destroy__"]=btConstraintSetting.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConstraintSetting___destroy___0(self)});function LocalShapeInfo(){throw"cannot construct a LocalShapeInfo, no constructor in IDL"}LocalShapeInfo.prototype=Object.create(WrapperObject.prototype);LocalShapeInfo.prototype.constructor=LocalShapeInfo;LocalShapeInfo.prototype.__class__=LocalShapeInfo;LocalShapeInfo.__cache__={};Module["LocalShapeInfo"]=LocalShapeInfo;LocalShapeInfo.prototype["get_m_shapePart"]=LocalShapeInfo.prototype.get_m_shapePart=(function(){var self=this.ptr;return _emscripten_bind_LocalShapeInfo_get_m_shapePart_0(self)});LocalShapeInfo.prototype["set_m_shapePart"]=LocalShapeInfo.prototype.set_m_shapePart=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalShapeInfo_set_m_shapePart_1(self,arg0)});LocalShapeInfo.prototype["get_m_triangleIndex"]=LocalShapeInfo.prototype.get_m_triangleIndex=(function(){var self=this.ptr;return _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0(self)});LocalShapeInfo.prototype["set_m_triangleIndex"]=LocalShapeInfo.prototype.set_m_triangleIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1(self,arg0)});LocalShapeInfo.prototype["__destroy__"]=LocalShapeInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_LocalShapeInfo___destroy___0(self)});function btRigidBody(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btRigidBody_btRigidBody_1(arg0);getCache(btRigidBody)[this.ptr]=this}btRigidBody.prototype=Object.create(btCollisionObject.prototype);btRigidBody.prototype.constructor=btRigidBody;btRigidBody.prototype.__class__=btRigidBody;btRigidBody.__cache__={};Module["btRigidBody"]=btRigidBody;btRigidBody.prototype["getCenterOfMassTransform"]=btRigidBody.prototype.getCenterOfMassTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getCenterOfMassTransform_0(self),btTransform)});btRigidBody.prototype["setCenterOfMassTransform"]=btRigidBody.prototype.setCenterOfMassTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCenterOfMassTransform_1(self,arg0)});btRigidBody.prototype["setSleepingThresholds"]=btRigidBody.prototype.setSleepingThresholds=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setSleepingThresholds_2(self,arg0,arg1)});btRigidBody.prototype["setDamping"]=btRigidBody.prototype.setDamping=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setDamping_2(self,arg0,arg1)});btRigidBody.prototype["setMassProps"]=btRigidBody.prototype.setMassProps=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setMassProps_2(self,arg0,arg1)});btRigidBody.prototype["setLinearFactor"]=btRigidBody.prototype.setLinearFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setLinearFactor_1(self,arg0)});btRigidBody.prototype["applyTorque"]=btRigidBody.prototype.applyTorque=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyTorque_1(self,arg0)});btRigidBody.prototype["applyLocalTorque"]=btRigidBody.prototype.applyLocalTorque=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyLocalTorque_1(self,arg0)});btRigidBody.prototype["applyForce"]=btRigidBody.prototype.applyForce=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_applyForce_2(self,arg0,arg1)});btRigidBody.prototype["applyCentralForce"]=btRigidBody.prototype.applyCentralForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralForce_1(self,arg0)});btRigidBody.prototype["applyCentralLocalForce"]=btRigidBody.prototype.applyCentralLocalForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralLocalForce_1(self,arg0)});btRigidBody.prototype["applyTorqueImpulse"]=btRigidBody.prototype.applyTorqueImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyTorqueImpulse_1(self,arg0)});btRigidBody.prototype["applyImpulse"]=btRigidBody.prototype.applyImpulse=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_applyImpulse_2(self,arg0,arg1)});btRigidBody.prototype["applyCentralImpulse"]=btRigidBody.prototype.applyCentralImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_applyCentralImpulse_1(self,arg0)});btRigidBody.prototype["updateInertiaTensor"]=btRigidBody.prototype.updateInertiaTensor=(function(){var self=this.ptr;_emscripten_bind_btRigidBody_updateInertiaTensor_0(self)});btRigidBody.prototype["getLinearVelocity"]=btRigidBody.prototype.getLinearVelocity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getLinearVelocity_0(self),btVector3)});btRigidBody.prototype["getAngularVelocity"]=btRigidBody.prototype.getAngularVelocity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getAngularVelocity_0(self),btVector3)});btRigidBody.prototype["setLinearVelocity"]=btRigidBody.prototype.setLinearVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setLinearVelocity_1(self,arg0)});btRigidBody.prototype["setAngularVelocity"]=btRigidBody.prototype.setAngularVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setAngularVelocity_1(self,arg0)});btRigidBody.prototype["getMotionState"]=btRigidBody.prototype.getMotionState=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self),btMotionState)});btRigidBody.prototype["setMotionState"]=btRigidBody.prototype.setMotionState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setMotionState_1(self,arg0)});btRigidBody.prototype["setAngularFactor"]=btRigidBody.prototype.setAngularFactor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setAngularFactor_1(self,arg0)});btRigidBody.prototype["upcast"]=btRigidBody.prototype.upcast=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRigidBody_upcast_1(self,arg0),btRigidBody)});btRigidBody.prototype["setAnisotropicFriction"]=btRigidBody.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRigidBody_setAnisotropicFriction_2(self,arg0,arg1)});btRigidBody.prototype["getCollisionShape"]=btRigidBody.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getCollisionShape_0(self),btCollisionShape)});btRigidBody.prototype["setContactProcessingThreshold"]=btRigidBody.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setContactProcessingThreshold_1(self,arg0)});btRigidBody.prototype["setActivationState"]=btRigidBody.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setActivationState_1(self,arg0)});btRigidBody.prototype["forceActivationState"]=btRigidBody.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_forceActivationState_1(self,arg0)});btRigidBody.prototype["activate"]=btRigidBody.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btRigidBody_activate_0(self);return}_emscripten_bind_btRigidBody_activate_1(self,arg0)});btRigidBody.prototype["isActive"]=btRigidBody.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBody_isActive_0(self)});btRigidBody.prototype["isKinematicObject"]=btRigidBody.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btRigidBody_isKinematicObject_0(self)});btRigidBody.prototype["setRestitution"]=btRigidBody.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setRestitution_1(self,arg0)});btRigidBody.prototype["setFriction"]=btRigidBody.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setFriction_1(self,arg0)});btRigidBody.prototype["setRollingFriction"]=btRigidBody.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setRollingFriction_1(self,arg0)});btRigidBody.prototype["getWorldTransform"]=btRigidBody.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self),btTransform)});btRigidBody.prototype["getCollisionFlags"]=btRigidBody.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btRigidBody_getCollisionFlags_0(self)});btRigidBody.prototype["setCollisionFlags"]=btRigidBody.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCollisionFlags_1(self,arg0)});btRigidBody.prototype["setWorldTransform"]=btRigidBody.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setWorldTransform_1(self,arg0)});btRigidBody.prototype["setCollisionShape"]=btRigidBody.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCollisionShape_1(self,arg0)});btRigidBody.prototype["setCcdMotionThreshold"]=btRigidBody.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCcdMotionThreshold_1(self,arg0)});btRigidBody.prototype["setCcdSweptSphereRadius"]=btRigidBody.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1(self,arg0)});btRigidBody.prototype["getUserIndex"]=btRigidBody.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btRigidBody_getUserIndex_0(self)});btRigidBody.prototype["setUserIndex"]=btRigidBody.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setUserIndex_1(self,arg0)});btRigidBody.prototype["getUserPointer"]=btRigidBody.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRigidBody_getUserPointer_0(self),VoidPtr)});btRigidBody.prototype["setUserPointer"]=btRigidBody.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRigidBody_setUserPointer_1(self,arg0)});btRigidBody.prototype["__destroy__"]=btRigidBody.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRigidBody___destroy___0(self)});function btDbvtBroadphase(){this.ptr=_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();getCache(btDbvtBroadphase)[this.ptr]=this}btDbvtBroadphase.prototype=Object.create(WrapperObject.prototype);btDbvtBroadphase.prototype.constructor=btDbvtBroadphase;btDbvtBroadphase.prototype.__class__=btDbvtBroadphase;btDbvtBroadphase.__cache__={};Module["btDbvtBroadphase"]=btDbvtBroadphase;btDbvtBroadphase.prototype["__destroy__"]=btDbvtBroadphase.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDbvtBroadphase___destroy___0(self)});function btDefaultSoftBodySolver(){this.ptr=_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0();getCache(btDefaultSoftBodySolver)[this.ptr]=this}btDefaultSoftBodySolver.prototype=Object.create(btSoftBodySolver.prototype);btDefaultSoftBodySolver.prototype.constructor=btDefaultSoftBodySolver;btDefaultSoftBodySolver.prototype.__class__=btDefaultSoftBodySolver;btDefaultSoftBodySolver.__cache__={};Module["btDefaultSoftBodySolver"]=btDefaultSoftBodySolver;btDefaultSoftBodySolver.prototype["__destroy__"]=btDefaultSoftBodySolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultSoftBodySolver___destroy___0(self)});function btKinematicCharacterController(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3(arg0,arg1,arg2);getCache(btKinematicCharacterController)[this.ptr]=this;return}this.ptr=_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4(arg0,arg1,arg2,arg3);getCache(btKinematicCharacterController)[this.ptr]=this}btKinematicCharacterController.prototype=Object.create(btActionInterface.prototype);btKinematicCharacterController.prototype.constructor=btKinematicCharacterController;btKinematicCharacterController.prototype.__class__=btKinematicCharacterController;btKinematicCharacterController.__cache__={};Module["btKinematicCharacterController"]=btKinematicCharacterController;btKinematicCharacterController.prototype["setUpAxis"]=btKinematicCharacterController.prototype.setUpAxis=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setUpAxis_1(self,arg0)});btKinematicCharacterController.prototype["setWalkDirection"]=btKinematicCharacterController.prototype.setWalkDirection=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setWalkDirection_1(self,arg0)});btKinematicCharacterController.prototype["setVelocityForTimeInterval"]=btKinematicCharacterController.prototype.setVelocityForTimeInterval=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2(self,arg0,arg1)});btKinematicCharacterController.prototype["warp"]=btKinematicCharacterController.prototype.warp=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_warp_1(self,arg0)});btKinematicCharacterController.prototype["preStep"]=btKinematicCharacterController.prototype.preStep=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_preStep_1(self,arg0)});btKinematicCharacterController.prototype["playerStep"]=btKinematicCharacterController.prototype.playerStep=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btKinematicCharacterController_playerStep_2(self,arg0,arg1)});btKinematicCharacterController.prototype["setFallSpeed"]=btKinematicCharacterController.prototype.setFallSpeed=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setFallSpeed_1(self,arg0)});btKinematicCharacterController.prototype["setJumpSpeed"]=btKinematicCharacterController.prototype.setJumpSpeed=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1(self,arg0)});btKinematicCharacterController.prototype["setMaxJumpHeight"]=btKinematicCharacterController.prototype.setMaxJumpHeight=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1(self,arg0)});btKinematicCharacterController.prototype["canJump"]=btKinematicCharacterController.prototype.canJump=(function(){var self=this.ptr;return!!_emscripten_bind_btKinematicCharacterController_canJump_0(self)});btKinematicCharacterController.prototype["jump"]=btKinematicCharacterController.prototype.jump=(function(){var self=this.ptr;_emscripten_bind_btKinematicCharacterController_jump_0(self)});btKinematicCharacterController.prototype["setGravity"]=btKinematicCharacterController.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setGravity_1(self,arg0)});btKinematicCharacterController.prototype["getGravity"]=btKinematicCharacterController.prototype.getGravity=(function(){var self=this.ptr;return _emscripten_bind_btKinematicCharacterController_getGravity_0(self)});btKinematicCharacterController.prototype["setMaxSlope"]=btKinematicCharacterController.prototype.setMaxSlope=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setMaxSlope_1(self,arg0)});btKinematicCharacterController.prototype["getMaxSlope"]=btKinematicCharacterController.prototype.getMaxSlope=(function(){var self=this.ptr;return _emscripten_bind_btKinematicCharacterController_getMaxSlope_0(self)});btKinematicCharacterController.prototype["getGhostObject"]=btKinematicCharacterController.prototype.getGhostObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btKinematicCharacterController_getGhostObject_0(self),btPairCachingGhostObject)});btKinematicCharacterController.prototype["setUseGhostSweepTest"]=btKinematicCharacterController.prototype.setUseGhostSweepTest=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1(self,arg0)});btKinematicCharacterController.prototype["onGround"]=btKinematicCharacterController.prototype.onGround=(function(){var self=this.ptr;return!!_emscripten_bind_btKinematicCharacterController_onGround_0(self)});btKinematicCharacterController.prototype["__destroy__"]=btKinematicCharacterController.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btKinematicCharacterController___destroy___0(self)});function btAxisSweep3(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0,arg1);getCache(btAxisSweep3)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0,arg1,arg2);getCache(btAxisSweep3)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0,arg1,arg2,arg3);getCache(btAxisSweep3)[this.ptr]=this;return}this.ptr=_emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0,arg1,arg2,arg3,arg4);getCache(btAxisSweep3)[this.ptr]=this}btAxisSweep3.prototype=Object.create(WrapperObject.prototype);btAxisSweep3.prototype.constructor=btAxisSweep3;btAxisSweep3.prototype.__class__=btAxisSweep3;btAxisSweep3.__cache__={};Module["btAxisSweep3"]=btAxisSweep3;btAxisSweep3.prototype["__destroy__"]=btAxisSweep3.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btAxisSweep3___destroy___0(self)});function btSoftBodyWorldInfo(){this.ptr=_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0();getCache(btSoftBodyWorldInfo)[this.ptr]=this}btSoftBodyWorldInfo.prototype=Object.create(WrapperObject.prototype);btSoftBodyWorldInfo.prototype.constructor=btSoftBodyWorldInfo;btSoftBodyWorldInfo.prototype.__class__=btSoftBodyWorldInfo;btSoftBodyWorldInfo.__cache__={};Module["btSoftBodyWorldInfo"]=btSoftBodyWorldInfo;btSoftBodyWorldInfo.prototype["get_air_density"]=btSoftBodyWorldInfo.prototype.get_air_density=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0(self)});btSoftBodyWorldInfo.prototype["set_air_density"]=btSoftBodyWorldInfo.prototype.set_air_density=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_water_density"]=btSoftBodyWorldInfo.prototype.get_water_density=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0(self)});btSoftBodyWorldInfo.prototype["set_water_density"]=btSoftBodyWorldInfo.prototype.set_water_density=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_water_offset"]=btSoftBodyWorldInfo.prototype.get_water_offset=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0(self)});btSoftBodyWorldInfo.prototype["set_water_offset"]=btSoftBodyWorldInfo.prototype.set_water_offset=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_m_maxDisplacement"]=btSoftBodyWorldInfo.prototype.get_m_maxDisplacement=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0(self)});btSoftBodyWorldInfo.prototype["set_m_maxDisplacement"]=btSoftBodyWorldInfo.prototype.set_m_maxDisplacement=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_water_normal"]=btSoftBodyWorldInfo.prototype.get_water_normal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0(self),btVector3)});btSoftBodyWorldInfo.prototype["set_water_normal"]=btSoftBodyWorldInfo.prototype.set_water_normal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_m_broadphase"]=btSoftBodyWorldInfo.prototype.get_m_broadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0(self),btBroadphaseInterface)});btSoftBodyWorldInfo.prototype["set_m_broadphase"]=btSoftBodyWorldInfo.prototype.set_m_broadphase=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_m_dispatcher"]=btSoftBodyWorldInfo.prototype.get_m_dispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0(self),btDispatcher)});btSoftBodyWorldInfo.prototype["set_m_dispatcher"]=btSoftBodyWorldInfo.prototype.set_m_dispatcher=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1(self,arg0)});btSoftBodyWorldInfo.prototype["get_m_gravity"]=btSoftBodyWorldInfo.prototype.get_m_gravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0(self),btVector3)});btSoftBodyWorldInfo.prototype["set_m_gravity"]=btSoftBodyWorldInfo.prototype.set_m_gravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1(self,arg0)});btSoftBodyWorldInfo.prototype["__destroy__"]=btSoftBodyWorldInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyWorldInfo___destroy___0(self)});function btConeTwistConstraint(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0,arg1);getCache(btConeTwistConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0,arg1,arg2);getCache(btConeTwistConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0,arg1,arg2,arg3);getCache(btConeTwistConstraint)[this.ptr]=this}btConeTwistConstraint.prototype=Object.create(btTypedConstraint.prototype);btConeTwistConstraint.prototype.constructor=btConeTwistConstraint;btConeTwistConstraint.prototype.__class__=btConeTwistConstraint;btConeTwistConstraint.__cache__={};Module["btConeTwistConstraint"]=btConeTwistConstraint;btConeTwistConstraint.prototype["setLimit"]=btConeTwistConstraint.prototype.setLimit=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeTwistConstraint_setLimit_2(self,arg0,arg1)});btConeTwistConstraint.prototype["setAngularOnly"]=btConeTwistConstraint.prototype.setAngularOnly=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setAngularOnly_1(self,arg0)});btConeTwistConstraint.prototype["setDamping"]=btConeTwistConstraint.prototype.setDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setDamping_1(self,arg0)});btConeTwistConstraint.prototype["enableMotor"]=btConeTwistConstraint.prototype.enableMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_enableMotor_1(self,arg0)});btConeTwistConstraint.prototype["setMaxMotorImpulse"]=btConeTwistConstraint.prototype.setMaxMotorImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1(self,arg0)});btConeTwistConstraint.prototype["setMaxMotorImpulseNormalized"]=btConeTwistConstraint.prototype.setMaxMotorImpulseNormalized=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1(self,arg0)});btConeTwistConstraint.prototype["setMotorTarget"]=btConeTwistConstraint.prototype.setMotorTarget=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMotorTarget_1(self,arg0)});btConeTwistConstraint.prototype["setMotorTargetInConstraintSpace"]=btConeTwistConstraint.prototype.setMotorTargetInConstraintSpace=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1(self,arg0)});btConeTwistConstraint.prototype["enableFeedback"]=btConeTwistConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_enableFeedback_1(self,arg0)});btConeTwistConstraint.prototype["getBreakingImpulseThreshold"]=btConeTwistConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0(self)});btConeTwistConstraint.prototype["setBreakingImpulseThreshold"]=btConeTwistConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1(self,arg0)});btConeTwistConstraint.prototype["__destroy__"]=btConeTwistConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeTwistConstraint___destroy___0(self)});function btHingeConstraint(arg0,arg1,arg2,arg3,arg4,arg5,arg6){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_2(arg0,arg1);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_3(arg0,arg1,arg2);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_4(arg0,arg1,arg2,arg3);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg5===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btHingeConstraint)[this.ptr]=this;return}if(arg6===undefined){this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_6(arg0,arg1,arg2,arg3,arg4,arg5);getCache(btHingeConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btHingeConstraint_btHingeConstraint_7(arg0,arg1,arg2,arg3,arg4,arg5,arg6);getCache(btHingeConstraint)[this.ptr]=this}btHingeConstraint.prototype=Object.create(btTypedConstraint.prototype);btHingeConstraint.prototype.constructor=btHingeConstraint;btHingeConstraint.prototype.__class__=btHingeConstraint;btHingeConstraint.__cache__={};Module["btHingeConstraint"]=btHingeConstraint;btHingeConstraint.prototype["setLimit"]=btHingeConstraint.prototype.setLimit=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg4===undefined){_emscripten_bind_btHingeConstraint_setLimit_4(self,arg0,arg1,arg2,arg3);return}_emscripten_bind_btHingeConstraint_setLimit_5(self,arg0,arg1,arg2,arg3,arg4)});btHingeConstraint.prototype["enableAngularMotor"]=btHingeConstraint.prototype.enableAngularMotor=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btHingeConstraint_enableAngularMotor_3(self,arg0,arg1,arg2)});btHingeConstraint.prototype["setAngularOnly"]=btHingeConstraint.prototype.setAngularOnly=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setAngularOnly_1(self,arg0)});btHingeConstraint.prototype["enableMotor"]=btHingeConstraint.prototype.enableMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_enableMotor_1(self,arg0)});btHingeConstraint.prototype["setMaxMotorImpulse"]=btHingeConstraint.prototype.setMaxMotorImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1(self,arg0)});btHingeConstraint.prototype["setMotorTarget"]=btHingeConstraint.prototype.setMotorTarget=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btHingeConstraint_setMotorTarget_2(self,arg0,arg1)});btHingeConstraint.prototype["enableFeedback"]=btHingeConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_enableFeedback_1(self,arg0)});btHingeConstraint.prototype["getBreakingImpulseThreshold"]=btHingeConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0(self)});btHingeConstraint.prototype["setBreakingImpulseThreshold"]=btHingeConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1(self,arg0)});btHingeConstraint.prototype["__destroy__"]=btHingeConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btHingeConstraint___destroy___0(self)});function btRotationalLimitMotor(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0();getCache(btRotationalLimitMotor)[this.ptr]=this;return}this.ptr=_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1(arg0);getCache(btRotationalLimitMotor)[this.ptr]=this}btRotationalLimitMotor.prototype=Object.create(WrapperObject.prototype);btRotationalLimitMotor.prototype.constructor=btRotationalLimitMotor;btRotationalLimitMotor.prototype.__class__=btRotationalLimitMotor;btRotationalLimitMotor.__cache__={};Module["btRotationalLimitMotor"]=btRotationalLimitMotor;btRotationalLimitMotor.prototype["isLimited"]=btRotationalLimitMotor.prototype.isLimited=(function(){var self=this.ptr;return!!_emscripten_bind_btRotationalLimitMotor_isLimited_0(self)});btRotationalLimitMotor.prototype["needApplyTorques"]=btRotationalLimitMotor.prototype.needApplyTorques=(function(){var self=this.ptr;return!!_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0(self)});btRotationalLimitMotor.prototype["get_m_loLimit"]=btRotationalLimitMotor.prototype.get_m_loLimit=(function(){var self=this.ptr;return _emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0(self)});btRotationalLimitMotor.prototype["set_m_loLimit"]=btRotationalLimitMotor.prototype.set_m_loLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1(self,arg0)});btRotationalLimitMotor.prototype["get_m_hiLimit"]=btRotationalLimitMotor.prototype.get_m_hiLimit=(function(){var self=this.ptr;return _emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0(self)});btRotationalLimitMotor.prototype["set_m_hiLimit"]=btRotationalLimitMotor.prototype.set_m_hiLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1(self,arg0)});btRotationalLimitMotor.prototype["get_m_targetVelocity"]=btRotationalLimitMotor.prototype.get_m_targetVelocity=(function(){var self=this.ptr;return _emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0(self)});btRotationalLimitMotor.prototype["set_m_targetVelocity"]=btRotationalLimitMotor.prototype.set_m_targetVelocity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1(self,arg0)});btRotationalLimitMotor.prototype["get_m_maxMotorForce"]=btRotationalLimitMotor.prototype.get_m_maxMotorForce=(function(){var self=this.ptr;return _emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0(self)});btRotationalLimitMotor.prototype["set_m_maxMotorForce"]=btRotationalLimitMotor.prototype.set_m_maxMotorForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1(self,arg0)});btRotationalLimitMotor.prototype["get_m_enableMotor"]=btRotationalLimitMotor.prototype.get_m_enableMotor=(function(){var self=this.ptr;return!!_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0(self)});btRotationalLimitMotor.prototype["set_m_enableMotor"]=btRotationalLimitMotor.prototype.set_m_enableMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1(self,arg0)});btRotationalLimitMotor.prototype["__destroy__"]=btRotationalLimitMotor.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRotationalLimitMotor___destroy___0(self)});function btConeShapeZ(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShapeZ_btConeShapeZ_2(arg0,arg1);getCache(btConeShapeZ)[this.ptr]=this}btConeShapeZ.prototype=Object.create(btConeShape.prototype);btConeShapeZ.prototype.constructor=btConeShapeZ;btConeShapeZ.prototype.__class__=btConeShapeZ;btConeShapeZ.__cache__={};Module["btConeShapeZ"]=btConeShapeZ;btConeShapeZ.prototype["setLocalScaling"]=btConeShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShapeZ_setLocalScaling_1(self,arg0)});btConeShapeZ.prototype["calculateLocalInertia"]=btConeShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShapeZ_calculateLocalInertia_2(self,arg0,arg1)});btConeShapeZ.prototype["__destroy__"]=btConeShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShapeZ___destroy___0(self)});function btConeShapeX(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btConeShapeX_btConeShapeX_2(arg0,arg1);getCache(btConeShapeX)[this.ptr]=this}btConeShapeX.prototype=Object.create(btConeShape.prototype);btConeShapeX.prototype.constructor=btConeShapeX;btConeShapeX.prototype.__class__=btConeShapeX;btConeShapeX.__cache__={};Module["btConeShapeX"]=btConeShapeX;btConeShapeX.prototype["setLocalScaling"]=btConeShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConeShapeX_setLocalScaling_1(self,arg0)});btConeShapeX.prototype["calculateLocalInertia"]=btConeShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConeShapeX_calculateLocalInertia_2(self,arg0,arg1)});btConeShapeX.prototype["__destroy__"]=btConeShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConeShapeX___destroy___0(self)});function btTriangleMesh(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_0();getCache(btTriangleMesh)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_1(arg0);getCache(btTriangleMesh)[this.ptr]=this;return}this.ptr=_emscripten_bind_btTriangleMesh_btTriangleMesh_2(arg0,arg1);getCache(btTriangleMesh)[this.ptr]=this}btTriangleMesh.prototype=Object.create(btStridingMeshInterface.prototype);btTriangleMesh.prototype.constructor=btTriangleMesh;btTriangleMesh.prototype.__class__=btTriangleMesh;btTriangleMesh.__cache__={};Module["btTriangleMesh"]=btTriangleMesh;btTriangleMesh.prototype["addTriangle"]=btTriangleMesh.prototype.addTriangle=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg3===undefined){_emscripten_bind_btTriangleMesh_addTriangle_3(self,arg0,arg1,arg2);return}_emscripten_bind_btTriangleMesh_addTriangle_4(self,arg0,arg1,arg2,arg3)});btTriangleMesh.prototype["__destroy__"]=btTriangleMesh.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTriangleMesh___destroy___0(self)});function btConvexHullShape(){this.ptr=_emscripten_bind_btConvexHullShape_btConvexHullShape_0();getCache(btConvexHullShape)[this.ptr]=this}btConvexHullShape.prototype=Object.create(btCollisionShape.prototype);btConvexHullShape.prototype.constructor=btConvexHullShape;btConvexHullShape.prototype.__class__=btConvexHullShape;btConvexHullShape.__cache__={};Module["btConvexHullShape"]=btConvexHullShape;btConvexHullShape.prototype["addPoint"]=btConvexHullShape.prototype.addPoint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btConvexHullShape_addPoint_1(self,arg0);return}_emscripten_bind_btConvexHullShape_addPoint_2(self,arg0,arg1)});btConvexHullShape.prototype["setMargin"]=btConvexHullShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexHullShape_setMargin_1(self,arg0)});btConvexHullShape.prototype["getMargin"]=btConvexHullShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btConvexHullShape_getMargin_0(self)});btConvexHullShape.prototype["setLocalScaling"]=btConvexHullShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btConvexHullShape_setLocalScaling_1(self,arg0)});btConvexHullShape.prototype["calculateLocalInertia"]=btConvexHullShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btConvexHullShape_calculateLocalInertia_2(self,arg0,arg1)});btConvexHullShape.prototype["__destroy__"]=btConvexHullShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConvexHullShape___destroy___0(self)});function btVehicleTuning(){this.ptr=_emscripten_bind_btVehicleTuning_btVehicleTuning_0();getCache(btVehicleTuning)[this.ptr]=this}btVehicleTuning.prototype=Object.create(WrapperObject.prototype);btVehicleTuning.prototype.constructor=btVehicleTuning;btVehicleTuning.prototype.__class__=btVehicleTuning;btVehicleTuning.__cache__={};Module["btVehicleTuning"]=btVehicleTuning;btVehicleTuning.prototype["get_m_suspensionStiffness"]=btVehicleTuning.prototype.get_m_suspensionStiffness=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0(self)});btVehicleTuning.prototype["set_m_suspensionStiffness"]=btVehicleTuning.prototype.set_m_suspensionStiffness=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1(self,arg0)});btVehicleTuning.prototype["get_m_suspensionCompression"]=btVehicleTuning.prototype.get_m_suspensionCompression=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0(self)});btVehicleTuning.prototype["set_m_suspensionCompression"]=btVehicleTuning.prototype.set_m_suspensionCompression=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1(self,arg0)});btVehicleTuning.prototype["get_m_suspensionDamping"]=btVehicleTuning.prototype.get_m_suspensionDamping=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0(self)});btVehicleTuning.prototype["set_m_suspensionDamping"]=btVehicleTuning.prototype.set_m_suspensionDamping=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1(self,arg0)});btVehicleTuning.prototype["get_m_maxSuspensionTravelCm"]=btVehicleTuning.prototype.get_m_maxSuspensionTravelCm=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0(self)});btVehicleTuning.prototype["set_m_maxSuspensionTravelCm"]=btVehicleTuning.prototype.set_m_maxSuspensionTravelCm=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1(self,arg0)});btVehicleTuning.prototype["get_m_frictionSlip"]=btVehicleTuning.prototype.get_m_frictionSlip=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0(self)});btVehicleTuning.prototype["set_m_frictionSlip"]=btVehicleTuning.prototype.set_m_frictionSlip=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1(self,arg0)});btVehicleTuning.prototype["get_m_maxSuspensionForce"]=btVehicleTuning.prototype.get_m_maxSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0(self)});btVehicleTuning.prototype["set_m_maxSuspensionForce"]=btVehicleTuning.prototype.set_m_maxSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1(self,arg0)});function btCollisionObjectWrapper(){throw"cannot construct a btCollisionObjectWrapper, no constructor in IDL"}btCollisionObjectWrapper.prototype=Object.create(WrapperObject.prototype);btCollisionObjectWrapper.prototype.constructor=btCollisionObjectWrapper;btCollisionObjectWrapper.prototype.__class__=btCollisionObjectWrapper;btCollisionObjectWrapper.__cache__={};Module["btCollisionObjectWrapper"]=btCollisionObjectWrapper;function btDefaultMotionState(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0();getCache(btDefaultMotionState)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0);getCache(btDefaultMotionState)[this.ptr]=this;return}this.ptr=_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0,arg1);getCache(btDefaultMotionState)[this.ptr]=this}btDefaultMotionState.prototype=Object.create(btMotionState.prototype);btDefaultMotionState.prototype.constructor=btDefaultMotionState;btDefaultMotionState.prototype.__class__=btDefaultMotionState;btDefaultMotionState.__cache__={};Module["btDefaultMotionState"]=btDefaultMotionState;btDefaultMotionState.prototype["getWorldTransform"]=btDefaultMotionState.prototype.getWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_getWorldTransform_1(self,arg0)});btDefaultMotionState.prototype["setWorldTransform"]=btDefaultMotionState.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_setWorldTransform_1(self,arg0)});btDefaultMotionState.prototype["get_m_graphicsWorldTrans"]=btDefaultMotionState.prototype.get_m_graphicsWorldTrans=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0(self),btTransform)});btDefaultMotionState.prototype["set_m_graphicsWorldTrans"]=btDefaultMotionState.prototype.set_m_graphicsWorldTrans=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1(self,arg0)});btDefaultMotionState.prototype["__destroy__"]=btDefaultMotionState.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultMotionState___destroy___0(self)});function btWheelInfo(){throw"cannot construct a btWheelInfo, no constructor in IDL"}btWheelInfo.prototype=Object.create(WrapperObject.prototype);btWheelInfo.prototype.constructor=btWheelInfo;btWheelInfo.prototype.__class__=btWheelInfo;btWheelInfo.__cache__={};Module["btWheelInfo"]=btWheelInfo;btWheelInfo.prototype["get_m_worldTransform"]=btWheelInfo.prototype.get_m_worldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_worldTransform_0(self),btTransform)});btWheelInfo.prototype["set_m_worldTransform"]=btWheelInfo.prototype.set_m_worldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_worldTransform_1(self,arg0)});btWheelInfo.prototype["get_m_suspensionStiffness"]=btWheelInfo.prototype.get_m_suspensionStiffness=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0(self)});btWheelInfo.prototype["set_m_suspensionStiffness"]=btWheelInfo.prototype.set_m_suspensionStiffness=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1(self,arg0)});btWheelInfo.prototype["get_m_frictionSlip"]=btWheelInfo.prototype.get_m_frictionSlip=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_frictionSlip_0(self)});btWheelInfo.prototype["set_m_frictionSlip"]=btWheelInfo.prototype.set_m_frictionSlip=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_frictionSlip_1(self,arg0)});btWheelInfo.prototype["get_m_engineForce"]=btWheelInfo.prototype.get_m_engineForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_engineForce_0(self)});btWheelInfo.prototype["set_m_engineForce"]=btWheelInfo.prototype.set_m_engineForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_engineForce_1(self,arg0)});btWheelInfo.prototype["get_m_rollInfluence"]=btWheelInfo.prototype.get_m_rollInfluence=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_rollInfluence_0(self)});btWheelInfo.prototype["set_m_rollInfluence"]=btWheelInfo.prototype.set_m_rollInfluence=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_rollInfluence_1(self,arg0)});btWheelInfo.prototype["get_m_suspensionRestLength1"]=btWheelInfo.prototype.get_m_suspensionRestLength1=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0(self)});btWheelInfo.prototype["set_m_suspensionRestLength1"]=btWheelInfo.prototype.set_m_suspensionRestLength1=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1(self,arg0)});btWheelInfo.prototype["get_m_wheelsRadius"]=btWheelInfo.prototype.get_m_wheelsRadius=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0(self)});btWheelInfo.prototype["set_m_wheelsRadius"]=btWheelInfo.prototype.set_m_wheelsRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1(self,arg0)});btWheelInfo.prototype["get_m_wheelsDampingCompression"]=btWheelInfo.prototype.get_m_wheelsDampingCompression=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0(self)});btWheelInfo.prototype["set_m_wheelsDampingCompression"]=btWheelInfo.prototype.set_m_wheelsDampingCompression=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1(self,arg0)});btWheelInfo.prototype["get_m_wheelsDampingRelaxation"]=btWheelInfo.prototype.get_m_wheelsDampingRelaxation=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0(self)});btWheelInfo.prototype["set_m_wheelsDampingRelaxation"]=btWheelInfo.prototype.set_m_wheelsDampingRelaxation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1(self,arg0)});btWheelInfo.prototype["get_m_steering"]=btWheelInfo.prototype.get_m_steering=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_steering_0(self)});btWheelInfo.prototype["set_m_steering"]=btWheelInfo.prototype.set_m_steering=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_steering_1(self,arg0)});btWheelInfo.prototype["get_m_maxSuspensionForce"]=btWheelInfo.prototype.get_m_maxSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0(self)});btWheelInfo.prototype["set_m_maxSuspensionForce"]=btWheelInfo.prototype.set_m_maxSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1(self,arg0)});btWheelInfo.prototype["get_m_maxSuspensionTravelCm"]=btWheelInfo.prototype.get_m_maxSuspensionTravelCm=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0(self)});btWheelInfo.prototype["set_m_maxSuspensionTravelCm"]=btWheelInfo.prototype.set_m_maxSuspensionTravelCm=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1(self,arg0)});btWheelInfo.prototype["get_m_wheelsSuspensionForce"]=btWheelInfo.prototype.get_m_wheelsSuspensionForce=(function(){var self=this.ptr;return _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0(self)});btWheelInfo.prototype["set_m_wheelsSuspensionForce"]=btWheelInfo.prototype.set_m_wheelsSuspensionForce=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1(self,arg0)});btWheelInfo.prototype["get_m_bIsFrontWheel"]=btWheelInfo.prototype.get_m_bIsFrontWheel=(function(){var self=this.ptr;return!!_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0(self)});btWheelInfo.prototype["set_m_bIsFrontWheel"]=btWheelInfo.prototype.set_m_bIsFrontWheel=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1(self,arg0)});btWheelInfo.prototype["get_m_raycastInfo"]=btWheelInfo.prototype.get_m_raycastInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_raycastInfo_0(self),RaycastInfo)});btWheelInfo.prototype["set_m_raycastInfo"]=btWheelInfo.prototype.set_m_raycastInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_raycastInfo_1(self,arg0)});btWheelInfo.prototype["get_m_chassisConnectionPointCS"]=btWheelInfo.prototype.get_m_chassisConnectionPointCS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0(self),btVector3)});btWheelInfo.prototype["set_m_chassisConnectionPointCS"]=btWheelInfo.prototype.set_m_chassisConnectionPointCS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1(self,arg0)});btWheelInfo.prototype["__destroy__"]=btWheelInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btWheelInfo___destroy___0(self)});function btVector4(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_0();getCache(btVector4)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_1(arg0);getCache(btVector4)[this.ptr]=this;return}if(arg2===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_2(arg0,arg1);getCache(btVector4)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btVector4_btVector4_3(arg0,arg1,arg2);getCache(btVector4)[this.ptr]=this;return}this.ptr=_emscripten_bind_btVector4_btVector4_4(arg0,arg1,arg2,arg3);getCache(btVector4)[this.ptr]=this}btVector4.prototype=Object.create(btVector3.prototype);btVector4.prototype.constructor=btVector4;btVector4.prototype.__class__=btVector4;btVector4.__cache__={};Module["btVector4"]=btVector4;btVector4.prototype["w"]=btVector4.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btVector4_w_0(self)});btVector4.prototype["setValue"]=btVector4.prototype.setValue=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btVector4_setValue_4(self,arg0,arg1,arg2,arg3)});btVector4.prototype["length"]=btVector4.prototype.length=(function(){var self=this.ptr;return _emscripten_bind_btVector4_length_0(self)});btVector4.prototype["x"]=btVector4.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btVector4_x_0(self)});btVector4.prototype["y"]=btVector4.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btVector4_y_0(self)});btVector4.prototype["z"]=btVector4.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btVector4_z_0(self)});btVector4.prototype["setX"]=btVector4.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setX_1(self,arg0)});btVector4.prototype["setY"]=btVector4.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setY_1(self,arg0)});btVector4.prototype["setZ"]=btVector4.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btVector4_setZ_1(self,arg0)});btVector4.prototype["normalize"]=btVector4.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btVector4_normalize_0(self)});btVector4.prototype["dot"]=btVector4.prototype.dot=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return _emscripten_bind_btVector4_dot_1(self,arg0)});btVector4.prototype["op_mul"]=btVector4.prototype.op_mul=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self,arg0),btVector3)});btVector4.prototype["op_add"]=btVector4.prototype.op_add=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_add_1(self,arg0),btVector3)});btVector4.prototype["op_sub"]=btVector4.prototype.op_sub=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btVector4_op_sub_1(self,arg0),btVector3)});btVector4.prototype["__destroy__"]=btVector4.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btVector4___destroy___0(self)});function btDefaultCollisionConstructionInfo(){this.ptr=_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();getCache(btDefaultCollisionConstructionInfo)[this.ptr]=this}btDefaultCollisionConstructionInfo.prototype=Object.create(WrapperObject.prototype);btDefaultCollisionConstructionInfo.prototype.constructor=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.prototype.__class__=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.__cache__={};Module["btDefaultCollisionConstructionInfo"]=btDefaultCollisionConstructionInfo;btDefaultCollisionConstructionInfo.prototype["__destroy__"]=btDefaultCollisionConstructionInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self)});function btConstraintSolver(){throw"cannot construct a btConstraintSolver, no constructor in IDL"}btConstraintSolver.prototype=Object.create(WrapperObject.prototype);btConstraintSolver.prototype.constructor=btConstraintSolver;btConstraintSolver.prototype.__class__=btConstraintSolver;btConstraintSolver.__cache__={};Module["btConstraintSolver"]=btConstraintSolver;btConstraintSolver.prototype["__destroy__"]=btConstraintSolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btConstraintSolver___destroy___0(self)});function btRaycastVehicle(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;this.ptr=_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3(arg0,arg1,arg2);getCache(btRaycastVehicle)[this.ptr]=this}btRaycastVehicle.prototype=Object.create(btActionInterface.prototype);btRaycastVehicle.prototype.constructor=btRaycastVehicle;btRaycastVehicle.prototype.__class__=btRaycastVehicle;btRaycastVehicle.__cache__={};Module["btRaycastVehicle"]=btRaycastVehicle;btRaycastVehicle.prototype["applyEngineForce"]=btRaycastVehicle.prototype.applyEngineForce=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_applyEngineForce_2(self,arg0,arg1)});btRaycastVehicle.prototype["setSteeringValue"]=btRaycastVehicle.prototype.setSteeringValue=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_setSteeringValue_2(self,arg0,arg1)});btRaycastVehicle.prototype["getWheelTransformWS"]=btRaycastVehicle.prototype.getWheelTransformWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1(self,arg0),btTransform)});btRaycastVehicle.prototype["updateWheelTransform"]=btRaycastVehicle.prototype.updateWheelTransform=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_updateWheelTransform_2(self,arg0,arg1)});btRaycastVehicle.prototype["addWheel"]=btRaycastVehicle.prototype.addWheel=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_addWheel_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6),btWheelInfo)});btRaycastVehicle.prototype["getNumWheels"]=btRaycastVehicle.prototype.getNumWheels=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getNumWheels_0(self)});btRaycastVehicle.prototype["getRigidBody"]=btRaycastVehicle.prototype.getRigidBody=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getRigidBody_0(self),btRigidBody)});btRaycastVehicle.prototype["getWheelInfo"]=btRaycastVehicle.prototype.getWheelInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelInfo_1(self,arg0),btWheelInfo)});btRaycastVehicle.prototype["setBrake"]=btRaycastVehicle.prototype.setBrake=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btRaycastVehicle_setBrake_2(self,arg0,arg1)});btRaycastVehicle.prototype["setCoordinateSystem"]=btRaycastVehicle.prototype.setCoordinateSystem=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3(self,arg0,arg1,arg2)});btRaycastVehicle.prototype["getCurrentSpeedKmHour"]=btRaycastVehicle.prototype.getCurrentSpeedKmHour=(function(){var self=this.ptr;return _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0(self)});btRaycastVehicle.prototype["__destroy__"]=btRaycastVehicle.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btRaycastVehicle___destroy___0(self)});function btCylinderShapeX(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1(arg0);getCache(btCylinderShapeX)[this.ptr]=this}btCylinderShapeX.prototype=Object.create(btCylinderShape.prototype);btCylinderShapeX.prototype.constructor=btCylinderShapeX;btCylinderShapeX.prototype.__class__=btCylinderShapeX;btCylinderShapeX.__cache__={};Module["btCylinderShapeX"]=btCylinderShapeX;btCylinderShapeX.prototype["setMargin"]=btCylinderShapeX.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeX_setMargin_1(self,arg0)});btCylinderShapeX.prototype["getMargin"]=btCylinderShapeX.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShapeX_getMargin_0(self)});btCylinderShapeX.prototype["setLocalScaling"]=btCylinderShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeX_setLocalScaling_1(self,arg0)});btCylinderShapeX.prototype["calculateLocalInertia"]=btCylinderShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2(self,arg0,arg1)});btCylinderShapeX.prototype["__destroy__"]=btCylinderShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShapeX___destroy___0(self)});function btCylinderShapeZ(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1(arg0);getCache(btCylinderShapeZ)[this.ptr]=this}btCylinderShapeZ.prototype=Object.create(btCylinderShape.prototype);btCylinderShapeZ.prototype.constructor=btCylinderShapeZ;btCylinderShapeZ.prototype.__class__=btCylinderShapeZ;btCylinderShapeZ.__cache__={};Module["btCylinderShapeZ"]=btCylinderShapeZ;btCylinderShapeZ.prototype["setMargin"]=btCylinderShapeZ.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeZ_setMargin_1(self,arg0)});btCylinderShapeZ.prototype["getMargin"]=btCylinderShapeZ.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCylinderShapeZ_getMargin_0(self)});btCylinderShapeZ.prototype["setLocalScaling"]=btCylinderShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCylinderShapeZ_setLocalScaling_1(self,arg0)});btCylinderShapeZ.prototype["calculateLocalInertia"]=btCylinderShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2(self,arg0,arg1)});btCylinderShapeZ.prototype["__destroy__"]=btCylinderShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCylinderShapeZ___destroy___0(self)});function btSequentialImpulseConstraintSolver(){this.ptr=_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();getCache(btSequentialImpulseConstraintSolver)[this.ptr]=this}btSequentialImpulseConstraintSolver.prototype=Object.create(WrapperObject.prototype);btSequentialImpulseConstraintSolver.prototype.constructor=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.prototype.__class__=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.__cache__={};Module["btSequentialImpulseConstraintSolver"]=btSequentialImpulseConstraintSolver;btSequentialImpulseConstraintSolver.prototype["__destroy__"]=btSequentialImpulseConstraintSolver.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self)});function RaycastInfo(){throw"cannot construct a RaycastInfo, no constructor in IDL"}RaycastInfo.prototype=Object.create(WrapperObject.prototype);RaycastInfo.prototype.constructor=RaycastInfo;RaycastInfo.prototype.__class__=RaycastInfo;RaycastInfo.__cache__={};Module["RaycastInfo"]=RaycastInfo;RaycastInfo.prototype["get_m_contactNormalWS"]=RaycastInfo.prototype.get_m_contactNormalWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0(self),btVector3)});RaycastInfo.prototype["set_m_contactNormalWS"]=RaycastInfo.prototype.set_m_contactNormalWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1(self,arg0)});RaycastInfo.prototype["get_m_contactPointWS"]=RaycastInfo.prototype.get_m_contactPointWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactPointWS_0(self),btVector3)});RaycastInfo.prototype["set_m_contactPointWS"]=RaycastInfo.prototype.set_m_contactPointWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_contactPointWS_1(self,arg0)});RaycastInfo.prototype["get_m_suspensionLength"]=RaycastInfo.prototype.get_m_suspensionLength=(function(){var self=this.ptr;return _emscripten_bind_RaycastInfo_get_m_suspensionLength_0(self)});RaycastInfo.prototype["set_m_suspensionLength"]=RaycastInfo.prototype.set_m_suspensionLength=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_suspensionLength_1(self,arg0)});RaycastInfo.prototype["get_m_hardPointWS"]=RaycastInfo.prototype.get_m_hardPointWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_hardPointWS_0(self),btVector3)});RaycastInfo.prototype["set_m_hardPointWS"]=RaycastInfo.prototype.set_m_hardPointWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_hardPointWS_1(self,arg0)});RaycastInfo.prototype["get_m_wheelDirectionWS"]=RaycastInfo.prototype.get_m_wheelDirectionWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0(self),btVector3)});RaycastInfo.prototype["set_m_wheelDirectionWS"]=RaycastInfo.prototype.set_m_wheelDirectionWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1(self,arg0)});RaycastInfo.prototype["get_m_wheelAxleWS"]=RaycastInfo.prototype.get_m_wheelAxleWS=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0(self),btVector3)});RaycastInfo.prototype["set_m_wheelAxleWS"]=RaycastInfo.prototype.set_m_wheelAxleWS=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1(self,arg0)});RaycastInfo.prototype["get_m_isInContact"]=RaycastInfo.prototype.get_m_isInContact=(function(){var self=this.ptr;return!!_emscripten_bind_RaycastInfo_get_m_isInContact_0(self)});RaycastInfo.prototype["set_m_isInContact"]=RaycastInfo.prototype.set_m_isInContact=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_isInContact_1(self,arg0)});RaycastInfo.prototype["get_m_groundObject"]=RaycastInfo.prototype.get_m_groundObject=(function(){var self=this.ptr;return _emscripten_bind_RaycastInfo_get_m_groundObject_0(self)});RaycastInfo.prototype["set_m_groundObject"]=RaycastInfo.prototype.set_m_groundObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_RaycastInfo_set_m_groundObject_1(self,arg0)});RaycastInfo.prototype["__destroy__"]=RaycastInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_RaycastInfo___destroy___0(self)});function tNodeArray(){throw"cannot construct a tNodeArray, no constructor in IDL"}tNodeArray.prototype=Object.create(WrapperObject.prototype);tNodeArray.prototype.constructor=tNodeArray;tNodeArray.prototype.__class__=tNodeArray;tNodeArray.__cache__={};Module["tNodeArray"]=tNodeArray;tNodeArray.prototype["size"]=tNodeArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_tNodeArray_size_0(self)});tNodeArray.prototype["at"]=tNodeArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_tNodeArray_at_1(self,arg0),Node)});tNodeArray.prototype["__destroy__"]=tNodeArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_tNodeArray___destroy___0(self)});function btSoftBody(arg0,arg1,arg2,arg3){ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(typeof arg3=="object"){arg3=ensureFloat32(arg3)}this.ptr=_emscripten_bind_btSoftBody_btSoftBody_4(arg0,arg1,arg2,arg3);getCache(btSoftBody)[this.ptr]=this}btSoftBody.prototype=Object.create(btCollisionObject.prototype);btSoftBody.prototype.constructor=btSoftBody;btSoftBody.prototype.__class__=btSoftBody;btSoftBody.__cache__={};Module["btSoftBody"]=btSoftBody;btSoftBody.prototype["checkLink"]=btSoftBody.prototype.checkLink=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;return!!_emscripten_bind_btSoftBody_checkLink_2(self,arg0,arg1)});btSoftBody.prototype["checkFace"]=btSoftBody.prototype.checkFace=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;return!!_emscripten_bind_btSoftBody_checkFace_3(self,arg0,arg1,arg2)});btSoftBody.prototype["appendMaterial"]=btSoftBody.prototype.appendMaterial=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_appendMaterial_0(self),Material)});btSoftBody.prototype["appendNode"]=btSoftBody.prototype.appendNode=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_appendNode_2(self,arg0,arg1)});btSoftBody.prototype["appendLink"]=btSoftBody.prototype.appendLink=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendLink_4(self,arg0,arg1,arg2,arg3)});btSoftBody.prototype["appendFace"]=btSoftBody.prototype.appendFace=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendFace_4(self,arg0,arg1,arg2,arg3)});btSoftBody.prototype["appendTetra"]=btSoftBody.prototype.appendTetra=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btSoftBody_appendTetra_5(self,arg0,arg1,arg2,arg3,arg4)});btSoftBody.prototype["appendAnchor"]=btSoftBody.prototype.appendAnchor=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btSoftBody_appendAnchor_4(self,arg0,arg1,arg2,arg3)});btSoftBody.prototype["getTotalMass"]=btSoftBody.prototype.getTotalMass=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getTotalMass_0(self)});btSoftBody.prototype["setTotalMass"]=btSoftBody.prototype.setTotalMass=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setTotalMass_2(self,arg0,arg1)});btSoftBody.prototype["setMass"]=btSoftBody.prototype.setMass=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setMass_2(self,arg0,arg1)});btSoftBody.prototype["transform"]=btSoftBody.prototype.transform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_transform_1(self,arg0)});btSoftBody.prototype["translate"]=btSoftBody.prototype.translate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_translate_1(self,arg0)});btSoftBody.prototype["rotate"]=btSoftBody.prototype.rotate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_rotate_1(self,arg0)});btSoftBody.prototype["scale"]=btSoftBody.prototype.scale=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_scale_1(self,arg0)});btSoftBody.prototype["generateClusters"]=btSoftBody.prototype.generateClusters=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){return _emscripten_bind_btSoftBody_generateClusters_1(self,arg0)}return _emscripten_bind_btSoftBody_generateClusters_2(self,arg0,arg1)});btSoftBody.prototype["upcast"]=btSoftBody.prototype.upcast=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btSoftBody_upcast_1(self,arg0),btSoftBody)});btSoftBody.prototype["setAnisotropicFriction"]=btSoftBody.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftBody_setAnisotropicFriction_2(self,arg0,arg1)});btSoftBody.prototype["getCollisionShape"]=btSoftBody.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getCollisionShape_0(self),btCollisionShape)});btSoftBody.prototype["setContactProcessingThreshold"]=btSoftBody.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setContactProcessingThreshold_1(self,arg0)});btSoftBody.prototype["setActivationState"]=btSoftBody.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setActivationState_1(self,arg0)});btSoftBody.prototype["forceActivationState"]=btSoftBody.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_forceActivationState_1(self,arg0)});btSoftBody.prototype["activate"]=btSoftBody.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btSoftBody_activate_0(self);return}_emscripten_bind_btSoftBody_activate_1(self,arg0)});btSoftBody.prototype["isActive"]=btSoftBody.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btSoftBody_isActive_0(self)});btSoftBody.prototype["isKinematicObject"]=btSoftBody.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btSoftBody_isKinematicObject_0(self)});btSoftBody.prototype["setRestitution"]=btSoftBody.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setRestitution_1(self,arg0)});btSoftBody.prototype["setFriction"]=btSoftBody.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setFriction_1(self,arg0)});btSoftBody.prototype["setRollingFriction"]=btSoftBody.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setRollingFriction_1(self,arg0)});btSoftBody.prototype["getWorldTransform"]=btSoftBody.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getWorldTransform_0(self),btTransform)});btSoftBody.prototype["getCollisionFlags"]=btSoftBody.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getCollisionFlags_0(self)});btSoftBody.prototype["setCollisionFlags"]=btSoftBody.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCollisionFlags_1(self,arg0)});btSoftBody.prototype["setWorldTransform"]=btSoftBody.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setWorldTransform_1(self,arg0)});btSoftBody.prototype["setCollisionShape"]=btSoftBody.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCollisionShape_1(self,arg0)});btSoftBody.prototype["setCcdMotionThreshold"]=btSoftBody.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCcdMotionThreshold_1(self,arg0)});btSoftBody.prototype["setCcdSweptSphereRadius"]=btSoftBody.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1(self,arg0)});btSoftBody.prototype["getUserIndex"]=btSoftBody.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btSoftBody_getUserIndex_0(self)});btSoftBody.prototype["setUserIndex"]=btSoftBody.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setUserIndex_1(self,arg0)});btSoftBody.prototype["getUserPointer"]=btSoftBody.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_getUserPointer_0(self),VoidPtr)});btSoftBody.prototype["setUserPointer"]=btSoftBody.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_setUserPointer_1(self,arg0)});btSoftBody.prototype["get_m_cfg"]=btSoftBody.prototype.get_m_cfg=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_cfg_0(self),Config)});btSoftBody.prototype["set_m_cfg"]=btSoftBody.prototype.set_m_cfg=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_cfg_1(self,arg0)});btSoftBody.prototype["get_m_nodes"]=btSoftBody.prototype.get_m_nodes=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_nodes_0(self),tNodeArray)});btSoftBody.prototype["set_m_nodes"]=btSoftBody.prototype.set_m_nodes=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_nodes_1(self,arg0)});btSoftBody.prototype["get_m_materials"]=btSoftBody.prototype.get_m_materials=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftBody_get_m_materials_0(self),tMaterialArray)});btSoftBody.prototype["set_m_materials"]=btSoftBody.prototype.set_m_materials=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftBody_set_m_materials_1(self,arg0)});btSoftBody.prototype["__destroy__"]=btSoftBody.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBody___destroy___0(self)});function btHeightfieldTerrainShape(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;this.ptr=_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);getCache(btHeightfieldTerrainShape)[this.ptr]=this}btHeightfieldTerrainShape.prototype=Object.create(btConcaveShape.prototype);btHeightfieldTerrainShape.prototype.constructor=btHeightfieldTerrainShape;btHeightfieldTerrainShape.prototype.__class__=btHeightfieldTerrainShape;btHeightfieldTerrainShape.__cache__={};Module["btHeightfieldTerrainShape"]=btHeightfieldTerrainShape;btHeightfieldTerrainShape.prototype["setMargin"]=btHeightfieldTerrainShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHeightfieldTerrainShape_setMargin_1(self,arg0)});btHeightfieldTerrainShape.prototype["getMargin"]=btHeightfieldTerrainShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btHeightfieldTerrainShape_getMargin_0(self)});btHeightfieldTerrainShape.prototype["setLocalScaling"]=btHeightfieldTerrainShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1(self,arg0)});btHeightfieldTerrainShape.prototype["calculateLocalInertia"]=btHeightfieldTerrainShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2(self,arg0,arg1)});btHeightfieldTerrainShape.prototype["__destroy__"]=btHeightfieldTerrainShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btHeightfieldTerrainShape___destroy___0(self)});function Config(){throw"cannot construct a Config, no constructor in IDL"}Config.prototype=Object.create(WrapperObject.prototype);Config.prototype.constructor=Config;Config.prototype.__class__=Config;Config.__cache__={};Module["Config"]=Config;Config.prototype["get_kVCF"]=Config.prototype.get_kVCF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kVCF_0(self)});Config.prototype["set_kVCF"]=Config.prototype.set_kVCF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kVCF_1(self,arg0)});Config.prototype["get_kDP"]=Config.prototype.get_kDP=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDP_0(self)});Config.prototype["set_kDP"]=Config.prototype.set_kDP=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDP_1(self,arg0)});Config.prototype["get_kDG"]=Config.prototype.get_kDG=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDG_0(self)});Config.prototype["set_kDG"]=Config.prototype.set_kDG=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDG_1(self,arg0)});Config.prototype["get_kLF"]=Config.prototype.get_kLF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kLF_0(self)});Config.prototype["set_kLF"]=Config.prototype.set_kLF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kLF_1(self,arg0)});Config.prototype["get_kPR"]=Config.prototype.get_kPR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kPR_0(self)});Config.prototype["set_kPR"]=Config.prototype.set_kPR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kPR_1(self,arg0)});Config.prototype["get_kVC"]=Config.prototype.get_kVC=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kVC_0(self)});Config.prototype["set_kVC"]=Config.prototype.set_kVC=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kVC_1(self,arg0)});Config.prototype["get_kDF"]=Config.prototype.get_kDF=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kDF_0(self)});Config.prototype["set_kDF"]=Config.prototype.set_kDF=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kDF_1(self,arg0)});Config.prototype["get_kMT"]=Config.prototype.get_kMT=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kMT_0(self)});Config.prototype["set_kMT"]=Config.prototype.set_kMT=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kMT_1(self,arg0)});Config.prototype["get_kCHR"]=Config.prototype.get_kCHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kCHR_0(self)});Config.prototype["set_kCHR"]=Config.prototype.set_kCHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kCHR_1(self,arg0)});Config.prototype["get_kKHR"]=Config.prototype.get_kKHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kKHR_0(self)});Config.prototype["set_kKHR"]=Config.prototype.set_kKHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kKHR_1(self,arg0)});Config.prototype["get_kSHR"]=Config.prototype.get_kSHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSHR_0(self)});Config.prototype["set_kSHR"]=Config.prototype.set_kSHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSHR_1(self,arg0)});Config.prototype["get_kAHR"]=Config.prototype.get_kAHR=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kAHR_0(self)});Config.prototype["set_kAHR"]=Config.prototype.set_kAHR=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kAHR_1(self,arg0)});Config.prototype["get_kSRHR_CL"]=Config.prototype.get_kSRHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSRHR_CL_0(self)});Config.prototype["set_kSRHR_CL"]=Config.prototype.set_kSRHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSRHR_CL_1(self,arg0)});Config.prototype["get_kSKHR_CL"]=Config.prototype.get_kSKHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSKHR_CL_0(self)});Config.prototype["set_kSKHR_CL"]=Config.prototype.set_kSKHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSKHR_CL_1(self,arg0)});Config.prototype["get_kSSHR_CL"]=Config.prototype.get_kSSHR_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSSHR_CL_0(self)});Config.prototype["set_kSSHR_CL"]=Config.prototype.set_kSSHR_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSSHR_CL_1(self,arg0)});Config.prototype["get_kSR_SPLT_CL"]=Config.prototype.get_kSR_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSR_SPLT_CL_0(self)});Config.prototype["set_kSR_SPLT_CL"]=Config.prototype.set_kSR_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSR_SPLT_CL_1(self,arg0)});Config.prototype["get_kSK_SPLT_CL"]=Config.prototype.get_kSK_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSK_SPLT_CL_0(self)});Config.prototype["set_kSK_SPLT_CL"]=Config.prototype.set_kSK_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSK_SPLT_CL_1(self,arg0)});Config.prototype["get_kSS_SPLT_CL"]=Config.prototype.get_kSS_SPLT_CL=(function(){var self=this.ptr;return _emscripten_bind_Config_get_kSS_SPLT_CL_0(self)});Config.prototype["set_kSS_SPLT_CL"]=Config.prototype.set_kSS_SPLT_CL=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_kSS_SPLT_CL_1(self,arg0)});Config.prototype["get_maxvolume"]=Config.prototype.get_maxvolume=(function(){var self=this.ptr;return _emscripten_bind_Config_get_maxvolume_0(self)});Config.prototype["set_maxvolume"]=Config.prototype.set_maxvolume=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_maxvolume_1(self,arg0)});Config.prototype["get_timescale"]=Config.prototype.get_timescale=(function(){var self=this.ptr;return _emscripten_bind_Config_get_timescale_0(self)});Config.prototype["set_timescale"]=Config.prototype.set_timescale=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_timescale_1(self,arg0)});Config.prototype["get_viterations"]=Config.prototype.get_viterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_viterations_0(self)});Config.prototype["set_viterations"]=Config.prototype.set_viterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_viterations_1(self,arg0)});Config.prototype["get_piterations"]=Config.prototype.get_piterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_piterations_0(self)});Config.prototype["set_piterations"]=Config.prototype.set_piterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_piterations_1(self,arg0)});Config.prototype["get_diterations"]=Config.prototype.get_diterations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_diterations_0(self)});Config.prototype["set_diterations"]=Config.prototype.set_diterations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_diterations_1(self,arg0)});Config.prototype["get_citerations"]=Config.prototype.get_citerations=(function(){var self=this.ptr;return _emscripten_bind_Config_get_citerations_0(self)});Config.prototype["set_citerations"]=Config.prototype.set_citerations=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_citerations_1(self,arg0)});Config.prototype["get_collisions"]=Config.prototype.get_collisions=(function(){var self=this.ptr;return _emscripten_bind_Config_get_collisions_0(self)});Config.prototype["set_collisions"]=Config.prototype.set_collisions=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Config_set_collisions_1(self,arg0)});Config.prototype["__destroy__"]=Config.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Config___destroy___0(self)});function Node(){throw"cannot construct a Node, no constructor in IDL"}Node.prototype=Object.create(WrapperObject.prototype);Node.prototype.constructor=Node;Node.prototype.__class__=Node;Node.__cache__={};Module["Node"]=Node;Node.prototype["get_m_x"]=Node.prototype.get_m_x=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_Node_get_m_x_0(self),btVector3)});Node.prototype["set_m_x"]=Node.prototype.set_m_x=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Node_set_m_x_1(self,arg0)});Node.prototype["get_m_n"]=Node.prototype.get_m_n=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_Node_get_m_n_0(self),btVector3)});Node.prototype["set_m_n"]=Node.prototype.set_m_n=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_Node_set_m_n_1(self,arg0)});Node.prototype["__destroy__"]=Node.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_Node___destroy___0(self)});function btGhostPairCallback(){this.ptr=_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0();getCache(btGhostPairCallback)[this.ptr]=this}btGhostPairCallback.prototype=Object.create(WrapperObject.prototype);btGhostPairCallback.prototype.constructor=btGhostPairCallback;btGhostPairCallback.prototype.__class__=btGhostPairCallback;btGhostPairCallback.__cache__={};Module["btGhostPairCallback"]=btGhostPairCallback;btGhostPairCallback.prototype["__destroy__"]=btGhostPairCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGhostPairCallback___destroy___0(self)});function btOverlappingPairCallback(){throw"cannot construct a btOverlappingPairCallback, no constructor in IDL"}btOverlappingPairCallback.prototype=Object.create(WrapperObject.prototype);btOverlappingPairCallback.prototype.constructor=btOverlappingPairCallback;btOverlappingPairCallback.prototype.__class__=btOverlappingPairCallback;btOverlappingPairCallback.__cache__={};Module["btOverlappingPairCallback"]=btOverlappingPairCallback;btOverlappingPairCallback.prototype["__destroy__"]=btOverlappingPairCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btOverlappingPairCallback___destroy___0(self)});function btCollisionDispatcher(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);getCache(btCollisionDispatcher)[this.ptr]=this}btCollisionDispatcher.prototype=Object.create(btDispatcher.prototype);btCollisionDispatcher.prototype.constructor=btCollisionDispatcher;btCollisionDispatcher.prototype.__class__=btCollisionDispatcher;btCollisionDispatcher.__cache__={};Module["btCollisionDispatcher"]=btCollisionDispatcher;btCollisionDispatcher.prototype["getNumManifolds"]=btCollisionDispatcher.prototype.getNumManifolds=(function(){var self=this.ptr;return _emscripten_bind_btCollisionDispatcher_getNumManifolds_0(self)});btCollisionDispatcher.prototype["getManifoldByIndexInternal"]=btCollisionDispatcher.prototype.getManifoldByIndexInternal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1(self,arg0),btPersistentManifold)});btCollisionDispatcher.prototype["__destroy__"]=btCollisionDispatcher.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCollisionDispatcher___destroy___0(self)});function btSoftBodyArray(){throw"cannot construct a btSoftBodyArray, no constructor in IDL"}btSoftBodyArray.prototype=Object.create(WrapperObject.prototype);btSoftBodyArray.prototype.constructor=btSoftBodyArray;btSoftBodyArray.prototype.__class__=btSoftBodyArray;btSoftBodyArray.__cache__={};Module["btSoftBodyArray"]=btSoftBodyArray;btSoftBodyArray.prototype["size"]=btSoftBodyArray.prototype.size=(function(){var self=this.ptr;return _emscripten_bind_btSoftBodyArray_size_0(self)});btSoftBodyArray.prototype["at"]=btSoftBodyArray.prototype.at=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btSoftBodyArray_at_1(self,arg0),btSoftBody)});btSoftBodyArray.prototype["__destroy__"]=btSoftBodyArray.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyArray___destroy___0(self)});function btStaticPlaneShape(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2(arg0,arg1);getCache(btStaticPlaneShape)[this.ptr]=this}btStaticPlaneShape.prototype=Object.create(btConcaveShape.prototype);btStaticPlaneShape.prototype.constructor=btStaticPlaneShape;btStaticPlaneShape.prototype.__class__=btStaticPlaneShape;btStaticPlaneShape.__cache__={};Module["btStaticPlaneShape"]=btStaticPlaneShape;btStaticPlaneShape.prototype["setLocalScaling"]=btStaticPlaneShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btStaticPlaneShape_setLocalScaling_1(self,arg0)});btStaticPlaneShape.prototype["calculateLocalInertia"]=btStaticPlaneShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2(self,arg0,arg1)});btStaticPlaneShape.prototype["__destroy__"]=btStaticPlaneShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btStaticPlaneShape___destroy___0(self)});function btOverlappingPairCache(){throw"cannot construct a btOverlappingPairCache, no constructor in IDL"}btOverlappingPairCache.prototype=Object.create(WrapperObject.prototype);btOverlappingPairCache.prototype.constructor=btOverlappingPairCache;btOverlappingPairCache.prototype.__class__=btOverlappingPairCache;btOverlappingPairCache.__cache__={};Module["btOverlappingPairCache"]=btOverlappingPairCache;btOverlappingPairCache.prototype["setInternalGhostPairCallback"]=btOverlappingPairCache.prototype.setInternalGhostPairCallback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1(self,arg0)});btOverlappingPairCache.prototype["__destroy__"]=btOverlappingPairCache.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btOverlappingPairCache___destroy___0(self)});function btSoftRigidDynamicsWorld(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;this.ptr=_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5(arg0,arg1,arg2,arg3,arg4);getCache(btSoftRigidDynamicsWorld)[this.ptr]=this}btSoftRigidDynamicsWorld.prototype=Object.create(btDiscreteDynamicsWorld.prototype);btSoftRigidDynamicsWorld.prototype.constructor=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.prototype.__class__=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.__cache__={};Module["btSoftRigidDynamicsWorld"]=btSoftRigidDynamicsWorld;btSoftRigidDynamicsWorld.prototype["addSoftBody"]=btSoftRigidDynamicsWorld.prototype.addSoftBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["removeSoftBody"]=btSoftRigidDynamicsWorld.prototype.removeSoftBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["removeCollisionObject"]=btSoftRigidDynamicsWorld.prototype.removeCollisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["getWorldInfo"]=btSoftRigidDynamicsWorld.prototype.getWorldInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0(self),btSoftBodyWorldInfo)});btSoftRigidDynamicsWorld.prototype["getSoftBodyArray"]=btSoftRigidDynamicsWorld.prototype.getSoftBodyArray=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0(self),btSoftBodyArray)});btSoftRigidDynamicsWorld.prototype["getDispatcher"]=btSoftRigidDynamicsWorld.prototype.getDispatcher=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0(self),btDispatcher)});btSoftRigidDynamicsWorld.prototype["rayTest"]=btSoftRigidDynamicsWorld.prototype.rayTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["getPairCache"]=btSoftRigidDynamicsWorld.prototype.getPairCache=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0(self),btOverlappingPairCache)});btSoftRigidDynamicsWorld.prototype["getDispatchInfo"]=btSoftRigidDynamicsWorld.prototype.getDispatchInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0(self),btDispatcherInfo)});btSoftRigidDynamicsWorld.prototype["addCollisionObject"]=btSoftRigidDynamicsWorld.prototype.addCollisionObject=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2(self,arg0,arg1);return}_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["getBroadphase"]=btSoftRigidDynamicsWorld.prototype.getBroadphase=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0(self),btBroadphaseInterface)});btSoftRigidDynamicsWorld.prototype["convexSweepTest"]=btSoftRigidDynamicsWorld.prototype.convexSweepTest=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5(self,arg0,arg1,arg2,arg3,arg4)});btSoftRigidDynamicsWorld.prototype["contactPairTest"]=btSoftRigidDynamicsWorld.prototype.contactPairTest=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["contactTest"]=btSoftRigidDynamicsWorld.prototype.contactTest=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2(self,arg0,arg1)});btSoftRigidDynamicsWorld.prototype["setGravity"]=btSoftRigidDynamicsWorld.prototype.setGravity=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["getGravity"]=btSoftRigidDynamicsWorld.prototype.getGravity=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0(self),btVector3)});btSoftRigidDynamicsWorld.prototype["addRigidBody"]=btSoftRigidDynamicsWorld.prototype.addRigidBody=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1(self,arg0);return}if(arg2===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_2(self,arg0,arg1);return}_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["removeRigidBody"]=btSoftRigidDynamicsWorld.prototype.removeRigidBody=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["addVehicle"]=btSoftRigidDynamicsWorld.prototype.addVehicle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["removeVehicle"]=btSoftRigidDynamicsWorld.prototype.removeVehicle=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["addConstraint"]=btSoftRigidDynamicsWorld.prototype.addConstraint=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg1===undefined){_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1(self,arg0);return}_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2(self,arg0,arg1)});btSoftRigidDynamicsWorld.prototype["removeConstraint"]=btSoftRigidDynamicsWorld.prototype.removeConstraint=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["stepSimulation"]=btSoftRigidDynamicsWorld.prototype.stepSimulation=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg1===undefined){return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1(self,arg0)}if(arg2===undefined){return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2(self,arg0,arg1)}return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3(self,arg0,arg1,arg2)});btSoftRigidDynamicsWorld.prototype["addAction"]=btSoftRigidDynamicsWorld.prototype.addAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["removeAction"]=btSoftRigidDynamicsWorld.prototype.removeAction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1(self,arg0)});btSoftRigidDynamicsWorld.prototype["getSolverInfo"]=btSoftRigidDynamicsWorld.prototype.getSolverInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0(self),btContactSolverInfo)});btSoftRigidDynamicsWorld.prototype["__destroy__"]=btSoftRigidDynamicsWorld.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0(self)});function btTransform(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btTransform_btTransform_0();getCache(btTransform)[this.ptr]=this;return}if(arg1===undefined){this.ptr=_emscripten_bind_btTransform_btTransform_1(arg0);getCache(btTransform)[this.ptr]=this;return}this.ptr=_emscripten_bind_btTransform_btTransform_2(arg0,arg1);getCache(btTransform)[this.ptr]=this}btTransform.prototype=Object.create(WrapperObject.prototype);btTransform.prototype.constructor=btTransform;btTransform.prototype.__class__=btTransform;btTransform.__cache__={};Module["btTransform"]=btTransform;btTransform.prototype["setIdentity"]=btTransform.prototype.setIdentity=(function(){var self=this.ptr;_emscripten_bind_btTransform_setIdentity_0(self)});btTransform.prototype["setOrigin"]=btTransform.prototype.setOrigin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTransform_setOrigin_1(self,arg0)});btTransform.prototype["setRotation"]=btTransform.prototype.setRotation=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btTransform_setRotation_1(self,arg0)});btTransform.prototype["getOrigin"]=btTransform.prototype.getOrigin=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self),btVector3)});btTransform.prototype["getRotation"]=btTransform.prototype.getRotation=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self),btQuaternion)});btTransform.prototype["getBasis"]=btTransform.prototype.getBasis=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self),btMatrix3x3)});btTransform.prototype["setFromOpenGLMatrix"]=btTransform.prototype.setFromOpenGLMatrix=(function(arg0){var self=this.ptr;ensureCache.prepare();if(typeof arg0=="object"){arg0=ensureFloat32(arg0)}_emscripten_bind_btTransform_setFromOpenGLMatrix_1(self,arg0)});btTransform.prototype["__destroy__"]=btTransform.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btTransform___destroy___0(self)});function ClosestRayResultCallback(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0,arg1);getCache(ClosestRayResultCallback)[this.ptr]=this}ClosestRayResultCallback.prototype=Object.create(RayResultCallback.prototype);ClosestRayResultCallback.prototype.constructor=ClosestRayResultCallback;ClosestRayResultCallback.prototype.__class__=ClosestRayResultCallback;ClosestRayResultCallback.__cache__={};Module["ClosestRayResultCallback"]=ClosestRayResultCallback;ClosestRayResultCallback.prototype["hasHit"]=ClosestRayResultCallback.prototype.hasHit=(function(){var self=this.ptr;return!!_emscripten_bind_ClosestRayResultCallback_hasHit_0(self)});ClosestRayResultCallback.prototype["get_m_rayFromWorld"]=ClosestRayResultCallback.prototype.get_m_rayFromWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_rayFromWorld"]=ClosestRayResultCallback.prototype.set_m_rayFromWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_rayToWorld"]=ClosestRayResultCallback.prototype.get_m_rayToWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_rayToWorld"]=ClosestRayResultCallback.prototype.set_m_rayToWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_hitNormalWorld"]=ClosestRayResultCallback.prototype.get_m_hitNormalWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_hitNormalWorld"]=ClosestRayResultCallback.prototype.set_m_hitNormalWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_hitPointWorld"]=ClosestRayResultCallback.prototype.get_m_hitPointWorld=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0(self),btVector3)});ClosestRayResultCallback.prototype["set_m_hitPointWorld"]=ClosestRayResultCallback.prototype.set_m_hitPointWorld=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_collisionFilterGroup"]=ClosestRayResultCallback.prototype.get_m_collisionFilterGroup=(function(){var self=this.ptr;return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0(self)});ClosestRayResultCallback.prototype["set_m_collisionFilterGroup"]=ClosestRayResultCallback.prototype.set_m_collisionFilterGroup=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_collisionFilterMask"]=ClosestRayResultCallback.prototype.get_m_collisionFilterMask=(function(){var self=this.ptr;return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0(self)});ClosestRayResultCallback.prototype["set_m_collisionFilterMask"]=ClosestRayResultCallback.prototype.set_m_collisionFilterMask=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1(self,arg0)});ClosestRayResultCallback.prototype["get_m_collisionObject"]=ClosestRayResultCallback.prototype.get_m_collisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self),btCollisionObject)});ClosestRayResultCallback.prototype["set_m_collisionObject"]=ClosestRayResultCallback.prototype.set_m_collisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self,arg0)});ClosestRayResultCallback.prototype["__destroy__"]=ClosestRayResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ClosestRayResultCallback___destroy___0(self)});function btSoftBodyRigidBodyCollisionConfiguration(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){this.ptr=_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0();getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr]=this;return}this.ptr=_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1(arg0);getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr]=this}btSoftBodyRigidBodyCollisionConfiguration.prototype=Object.create(btDefaultCollisionConfiguration.prototype);btSoftBodyRigidBodyCollisionConfiguration.prototype.constructor=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.prototype.__class__=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.__cache__={};Module["btSoftBodyRigidBodyCollisionConfiguration"]=btSoftBodyRigidBodyCollisionConfiguration;btSoftBodyRigidBodyCollisionConfiguration.prototype["__destroy__"]=btSoftBodyRigidBodyCollisionConfiguration.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0(self)});function ConcreteContactResultCallback(){this.ptr=_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();getCache(ConcreteContactResultCallback)[this.ptr]=this}ConcreteContactResultCallback.prototype=Object.create(ContactResultCallback.prototype);ConcreteContactResultCallback.prototype.constructor=ConcreteContactResultCallback;ConcreteContactResultCallback.prototype.__class__=ConcreteContactResultCallback;ConcreteContactResultCallback.__cache__={};Module["ConcreteContactResultCallback"]=ConcreteContactResultCallback;ConcreteContactResultCallback.prototype["addSingleResult"]=ConcreteContactResultCallback.prototype.addSingleResult=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6)});ConcreteContactResultCallback.prototype["__destroy__"]=ConcreteContactResultCallback.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_ConcreteContactResultCallback___destroy___0(self)});function btBvhTriangleMeshShape(arg0,arg1,arg2){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2(arg0,arg1);getCache(btBvhTriangleMeshShape)[this.ptr]=this;return}this.ptr=_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3(arg0,arg1,arg2);getCache(btBvhTriangleMeshShape)[this.ptr]=this}btBvhTriangleMeshShape.prototype=Object.create(btTriangleMeshShape.prototype);btBvhTriangleMeshShape.prototype.constructor=btBvhTriangleMeshShape;btBvhTriangleMeshShape.prototype.__class__=btBvhTriangleMeshShape;btBvhTriangleMeshShape.__cache__={};Module["btBvhTriangleMeshShape"]=btBvhTriangleMeshShape;btBvhTriangleMeshShape.prototype["setLocalScaling"]=btBvhTriangleMeshShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1(self,arg0)});btBvhTriangleMeshShape.prototype["calculateLocalInertia"]=btBvhTriangleMeshShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2(self,arg0,arg1)});btBvhTriangleMeshShape.prototype["__destroy__"]=btBvhTriangleMeshShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBvhTriangleMeshShape___destroy___0(self)});function btSliderConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_3(arg0,arg1,arg2);getCache(btSliderConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_4(arg0,arg1,arg2,arg3);getCache(btSliderConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btSliderConstraint_btSliderConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btSliderConstraint)[this.ptr]=this}btSliderConstraint.prototype=Object.create(btTypedConstraint.prototype);btSliderConstraint.prototype.constructor=btSliderConstraint;btSliderConstraint.prototype.__class__=btSliderConstraint;btSliderConstraint.__cache__={};Module["btSliderConstraint"]=btSliderConstraint;btSliderConstraint.prototype["setLowerLinLimit"]=btSliderConstraint.prototype.setLowerLinLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setLowerLinLimit_1(self,arg0)});btSliderConstraint.prototype["setUpperLinLimit"]=btSliderConstraint.prototype.setUpperLinLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setUpperLinLimit_1(self,arg0)});btSliderConstraint.prototype["setLowerAngLimit"]=btSliderConstraint.prototype.setLowerAngLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setLowerAngLimit_1(self,arg0)});btSliderConstraint.prototype["setUpperAngLimit"]=btSliderConstraint.prototype.setUpperAngLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setUpperAngLimit_1(self,arg0)});btSliderConstraint.prototype["enableFeedback"]=btSliderConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_enableFeedback_1(self,arg0)});btSliderConstraint.prototype["getBreakingImpulseThreshold"]=btSliderConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0(self)});btSliderConstraint.prototype["setBreakingImpulseThreshold"]=btSliderConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1(self,arg0)});btSliderConstraint.prototype["__destroy__"]=btSliderConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSliderConstraint___destroy___0(self)});function btPairCachingGhostObject(){this.ptr=_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0();getCache(btPairCachingGhostObject)[this.ptr]=this}btPairCachingGhostObject.prototype=Object.create(btGhostObject.prototype);btPairCachingGhostObject.prototype.constructor=btPairCachingGhostObject;btPairCachingGhostObject.prototype.__class__=btPairCachingGhostObject;btPairCachingGhostObject.__cache__={};Module["btPairCachingGhostObject"]=btPairCachingGhostObject;btPairCachingGhostObject.prototype["setAnisotropicFriction"]=btPairCachingGhostObject.prototype.setAnisotropicFriction=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2(self,arg0,arg1)});btPairCachingGhostObject.prototype["getCollisionShape"]=btPairCachingGhostObject.prototype.getCollisionShape=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0(self),btCollisionShape)});btPairCachingGhostObject.prototype["setContactProcessingThreshold"]=btPairCachingGhostObject.prototype.setContactProcessingThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1(self,arg0)});btPairCachingGhostObject.prototype["setActivationState"]=btPairCachingGhostObject.prototype.setActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setActivationState_1(self,arg0)});btPairCachingGhostObject.prototype["forceActivationState"]=btPairCachingGhostObject.prototype.forceActivationState=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_forceActivationState_1(self,arg0)});btPairCachingGhostObject.prototype["activate"]=btPairCachingGhostObject.prototype.activate=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg0===undefined){_emscripten_bind_btPairCachingGhostObject_activate_0(self);return}_emscripten_bind_btPairCachingGhostObject_activate_1(self,arg0)});btPairCachingGhostObject.prototype["isActive"]=btPairCachingGhostObject.prototype.isActive=(function(){var self=this.ptr;return!!_emscripten_bind_btPairCachingGhostObject_isActive_0(self)});btPairCachingGhostObject.prototype["isKinematicObject"]=btPairCachingGhostObject.prototype.isKinematicObject=(function(){var self=this.ptr;return!!_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0(self)});btPairCachingGhostObject.prototype["setRestitution"]=btPairCachingGhostObject.prototype.setRestitution=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setRestitution_1(self,arg0)});btPairCachingGhostObject.prototype["setFriction"]=btPairCachingGhostObject.prototype.setFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setFriction_1(self,arg0)});btPairCachingGhostObject.prototype["setRollingFriction"]=btPairCachingGhostObject.prototype.setRollingFriction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1(self,arg0)});btPairCachingGhostObject.prototype["getWorldTransform"]=btPairCachingGhostObject.prototype.getWorldTransform=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0(self),btTransform)});btPairCachingGhostObject.prototype["getCollisionFlags"]=btPairCachingGhostObject.prototype.getCollisionFlags=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0(self)});btPairCachingGhostObject.prototype["setCollisionFlags"]=btPairCachingGhostObject.prototype.setCollisionFlags=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1(self,arg0)});btPairCachingGhostObject.prototype["setWorldTransform"]=btPairCachingGhostObject.prototype.setWorldTransform=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1(self,arg0)});btPairCachingGhostObject.prototype["setCollisionShape"]=btPairCachingGhostObject.prototype.setCollisionShape=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1(self,arg0)});btPairCachingGhostObject.prototype["setCcdMotionThreshold"]=btPairCachingGhostObject.prototype.setCcdMotionThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1(self,arg0)});btPairCachingGhostObject.prototype["setCcdSweptSphereRadius"]=btPairCachingGhostObject.prototype.setCcdSweptSphereRadius=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1(self,arg0)});btPairCachingGhostObject.prototype["getUserIndex"]=btPairCachingGhostObject.prototype.getUserIndex=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getUserIndex_0(self)});btPairCachingGhostObject.prototype["setUserIndex"]=btPairCachingGhostObject.prototype.setUserIndex=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setUserIndex_1(self,arg0)});btPairCachingGhostObject.prototype["getUserPointer"]=btPairCachingGhostObject.prototype.getUserPointer=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getUserPointer_0(self),VoidPtr)});btPairCachingGhostObject.prototype["setUserPointer"]=btPairCachingGhostObject.prototype.setUserPointer=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPairCachingGhostObject_setUserPointer_1(self,arg0)});btPairCachingGhostObject.prototype["getNumOverlappingObjects"]=btPairCachingGhostObject.prototype.getNumOverlappingObjects=(function(){var self=this.ptr;return _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0(self)});btPairCachingGhostObject.prototype["getOverlappingObject"]=btPairCachingGhostObject.prototype.getOverlappingObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1(self,arg0),btCollisionObject)});btPairCachingGhostObject.prototype["__destroy__"]=btPairCachingGhostObject.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPairCachingGhostObject___destroy___0(self)});function btManifoldPoint(){throw"cannot construct a btManifoldPoint, no constructor in IDL"}btManifoldPoint.prototype=Object.create(WrapperObject.prototype);btManifoldPoint.prototype.constructor=btManifoldPoint;btManifoldPoint.prototype.__class__=btManifoldPoint;btManifoldPoint.__cache__={};Module["btManifoldPoint"]=btManifoldPoint;btManifoldPoint.prototype["getPositionWorldOnA"]=btManifoldPoint.prototype.getPositionWorldOnA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0(self),btVector3)});btManifoldPoint.prototype["getPositionWorldOnB"]=btManifoldPoint.prototype.getPositionWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["getAppliedImpulse"]=btManifoldPoint.prototype.getAppliedImpulse=(function(){var self=this.ptr;return _emscripten_bind_btManifoldPoint_getAppliedImpulse_0(self)});btManifoldPoint.prototype["getDistance"]=btManifoldPoint.prototype.getDistance=(function(){var self=this.ptr;return _emscripten_bind_btManifoldPoint_getDistance_0(self)});btManifoldPoint.prototype["get_m_localPointA"]=btManifoldPoint.prototype.get_m_localPointA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointA_0(self),btVector3)});btManifoldPoint.prototype["set_m_localPointA"]=btManifoldPoint.prototype.set_m_localPointA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_localPointA_1(self,arg0)});btManifoldPoint.prototype["get_m_localPointB"]=btManifoldPoint.prototype.get_m_localPointB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointB_0(self),btVector3)});btManifoldPoint.prototype["set_m_localPointB"]=btManifoldPoint.prototype.set_m_localPointB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_localPointB_1(self,arg0)});btManifoldPoint.prototype["get_m_positionWorldOnB"]=btManifoldPoint.prototype.get_m_positionWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["set_m_positionWorldOnB"]=btManifoldPoint.prototype.set_m_positionWorldOnB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1(self,arg0)});btManifoldPoint.prototype["get_m_positionWorldOnA"]=btManifoldPoint.prototype.get_m_positionWorldOnA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0(self),btVector3)});btManifoldPoint.prototype["set_m_positionWorldOnA"]=btManifoldPoint.prototype.set_m_positionWorldOnA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1(self,arg0)});btManifoldPoint.prototype["get_m_normalWorldOnB"]=btManifoldPoint.prototype.get_m_normalWorldOnB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0(self),btVector3)});btManifoldPoint.prototype["set_m_normalWorldOnB"]=btManifoldPoint.prototype.set_m_normalWorldOnB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1(self,arg0)});btManifoldPoint.prototype["__destroy__"]=btManifoldPoint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btManifoldPoint___destroy___0(self)});function btPoint2PointConstraint(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg2===undefined){this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0,arg1);getCache(btPoint2PointConstraint)[this.ptr]=this;return}if(arg3===undefined){this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0,arg1,arg2);getCache(btPoint2PointConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0,arg1,arg2,arg3);getCache(btPoint2PointConstraint)[this.ptr]=this}btPoint2PointConstraint.prototype=Object.create(btTypedConstraint.prototype);btPoint2PointConstraint.prototype.constructor=btPoint2PointConstraint;btPoint2PointConstraint.prototype.__class__=btPoint2PointConstraint;btPoint2PointConstraint.__cache__={};Module["btPoint2PointConstraint"]=btPoint2PointConstraint;btPoint2PointConstraint.prototype["setPivotA"]=btPoint2PointConstraint.prototype.setPivotA=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setPivotA_1(self,arg0)});btPoint2PointConstraint.prototype["setPivotB"]=btPoint2PointConstraint.prototype.setPivotB=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setPivotB_1(self,arg0)});btPoint2PointConstraint.prototype["getPivotInA"]=btPoint2PointConstraint.prototype.getPivotInA=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInA_0(self),btVector3)});btPoint2PointConstraint.prototype["getPivotInB"]=btPoint2PointConstraint.prototype.getPivotInB=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInB_0(self),btVector3)});btPoint2PointConstraint.prototype["enableFeedback"]=btPoint2PointConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_enableFeedback_1(self,arg0)});btPoint2PointConstraint.prototype["getBreakingImpulseThreshold"]=btPoint2PointConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0(self)});btPoint2PointConstraint.prototype["setBreakingImpulseThreshold"]=btPoint2PointConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1(self,arg0)});btPoint2PointConstraint.prototype["get_m_setting"]=btPoint2PointConstraint.prototype.get_m_setting=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_btPoint2PointConstraint_get_m_setting_0(self),btConstraintSetting)});btPoint2PointConstraint.prototype["set_m_setting"]=btPoint2PointConstraint.prototype.set_m_setting=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btPoint2PointConstraint_set_m_setting_1(self,arg0)});btPoint2PointConstraint.prototype["__destroy__"]=btPoint2PointConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btPoint2PointConstraint___destroy___0(self)});function btSoftBodyHelpers(){this.ptr=_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0();getCache(btSoftBodyHelpers)[this.ptr]=this}btSoftBodyHelpers.prototype=Object.create(WrapperObject.prototype);btSoftBodyHelpers.prototype.constructor=btSoftBodyHelpers;btSoftBodyHelpers.prototype.__class__=btSoftBodyHelpers;btSoftBodyHelpers.__cache__={};Module["btSoftBodyHelpers"]=btSoftBodyHelpers;btSoftBodyHelpers.prototype["CreateRope"]=btSoftBodyHelpers.prototype.CreateRope=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateRope_5(self,arg0,arg1,arg2,arg3,arg4),btSoftBody)});btSoftBodyHelpers.prototype["CreatePatch"]=btSoftBodyHelpers.prototype.CreatePatch=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatch_9(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8),btSoftBody)});btSoftBodyHelpers.prototype["CreatePatchUV"]=btSoftBodyHelpers.prototype.CreatePatchUV=(function(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg5&&typeof arg5==="object")arg5=arg5.ptr;if(arg6&&typeof arg6==="object")arg6=arg6.ptr;if(arg7&&typeof arg7==="object")arg7=arg7.ptr;if(arg8&&typeof arg8==="object")arg8=arg8.ptr;if(typeof arg9=="object"){arg9=ensureFloat32(arg9)}return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10(self,arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9),btSoftBody)});btSoftBodyHelpers.prototype["CreateEllipsoid"]=btSoftBodyHelpers.prototype.CreateEllipsoid=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4(self,arg0,arg1,arg2,arg3),btSoftBody)});btSoftBodyHelpers.prototype["CreateFromTriMesh"]=btSoftBodyHelpers.prototype.CreateFromTriMesh=(function(arg0,arg1,arg2,arg3,arg4){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(typeof arg1=="object"){arg1=ensureFloat32(arg1)}if(typeof arg2=="object"){arg2=ensureInt32(arg2)}if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5(self,arg0,arg1,arg2,arg3,arg4),btSoftBody)});btSoftBodyHelpers.prototype["CreateFromConvexHull"]=btSoftBodyHelpers.prototype.CreateFromConvexHull=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4(self,arg0,arg1,arg2,arg3),btSoftBody)});btSoftBodyHelpers.prototype["__destroy__"]=btSoftBodyHelpers.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSoftBodyHelpers___destroy___0(self)});function VoidPtr(){throw"cannot construct a VoidPtr, no constructor in IDL"}VoidPtr.prototype=Object.create(WrapperObject.prototype);VoidPtr.prototype.constructor=VoidPtr;VoidPtr.prototype.__class__=VoidPtr;VoidPtr.__cache__={};Module["VoidPtr"]=VoidPtr;VoidPtr.prototype["__destroy__"]=VoidPtr.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_VoidPtr___destroy___0(self)});function btBoxShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btBoxShape_btBoxShape_1(arg0);getCache(btBoxShape)[this.ptr]=this}btBoxShape.prototype=Object.create(btCollisionShape.prototype);btBoxShape.prototype.constructor=btBoxShape;btBoxShape.prototype.__class__=btBoxShape;btBoxShape.__cache__={};Module["btBoxShape"]=btBoxShape;btBoxShape.prototype["setMargin"]=btBoxShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBoxShape_setMargin_1(self,arg0)});btBoxShape.prototype["getMargin"]=btBoxShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btBoxShape_getMargin_0(self)});btBoxShape.prototype["setLocalScaling"]=btBoxShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btBoxShape_setLocalScaling_1(self,arg0)});btBoxShape.prototype["calculateLocalInertia"]=btBoxShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btBoxShape_calculateLocalInertia_2(self,arg0,arg1)});btBoxShape.prototype["__destroy__"]=btBoxShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btBoxShape___destroy___0(self)});function btCapsuleShapeX(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2(arg0,arg1);getCache(btCapsuleShapeX)[this.ptr]=this}btCapsuleShapeX.prototype=Object.create(btCapsuleShape.prototype);btCapsuleShapeX.prototype.constructor=btCapsuleShapeX;btCapsuleShapeX.prototype.__class__=btCapsuleShapeX;btCapsuleShapeX.__cache__={};Module["btCapsuleShapeX"]=btCapsuleShapeX;btCapsuleShapeX.prototype["setMargin"]=btCapsuleShapeX.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeX_setMargin_1(self,arg0)});btCapsuleShapeX.prototype["getMargin"]=btCapsuleShapeX.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShapeX_getMargin_0(self)});btCapsuleShapeX.prototype["setLocalScaling"]=btCapsuleShapeX.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeX_setLocalScaling_1(self,arg0)});btCapsuleShapeX.prototype["calculateLocalInertia"]=btCapsuleShapeX.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2(self,arg0,arg1)});btCapsuleShapeX.prototype["__destroy__"]=btCapsuleShapeX.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShapeX___destroy___0(self)});function btQuaternion(arg0,arg1,arg2,arg3){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;this.ptr=_emscripten_bind_btQuaternion_btQuaternion_4(arg0,arg1,arg2,arg3);getCache(btQuaternion)[this.ptr]=this}btQuaternion.prototype=Object.create(btQuadWord.prototype);btQuaternion.prototype.constructor=btQuaternion;btQuaternion.prototype.__class__=btQuaternion;btQuaternion.__cache__={};Module["btQuaternion"]=btQuaternion;btQuaternion.prototype["setValue"]=btQuaternion.prototype.setValue=(function(arg0,arg1,arg2,arg3){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;_emscripten_bind_btQuaternion_setValue_4(self,arg0,arg1,arg2,arg3)});btQuaternion.prototype["setEulerZYX"]=btQuaternion.prototype.setEulerZYX=(function(arg0,arg1,arg2){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;_emscripten_bind_btQuaternion_setEulerZYX_3(self,arg0,arg1,arg2)});btQuaternion.prototype["normalize"]=btQuaternion.prototype.normalize=(function(){var self=this.ptr;_emscripten_bind_btQuaternion_normalize_0(self)});btQuaternion.prototype["x"]=btQuaternion.prototype.x=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_x_0(self)});btQuaternion.prototype["y"]=btQuaternion.prototype.y=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_y_0(self)});btQuaternion.prototype["z"]=btQuaternion.prototype.z=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_z_0(self)});btQuaternion.prototype["w"]=btQuaternion.prototype.w=(function(){var self=this.ptr;return _emscripten_bind_btQuaternion_w_0(self)});btQuaternion.prototype["setX"]=btQuaternion.prototype.setX=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setX_1(self,arg0)});btQuaternion.prototype["setY"]=btQuaternion.prototype.setY=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setY_1(self,arg0)});btQuaternion.prototype["setZ"]=btQuaternion.prototype.setZ=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setZ_1(self,arg0)});btQuaternion.prototype["setW"]=btQuaternion.prototype.setW=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btQuaternion_setW_1(self,arg0)});btQuaternion.prototype["__destroy__"]=btQuaternion.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btQuaternion___destroy___0(self)});function btCapsuleShapeZ(arg0,arg1){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;this.ptr=_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2(arg0,arg1);getCache(btCapsuleShapeZ)[this.ptr]=this}btCapsuleShapeZ.prototype=Object.create(btCapsuleShape.prototype);btCapsuleShapeZ.prototype.constructor=btCapsuleShapeZ;btCapsuleShapeZ.prototype.__class__=btCapsuleShapeZ;btCapsuleShapeZ.__cache__={};Module["btCapsuleShapeZ"]=btCapsuleShapeZ;btCapsuleShapeZ.prototype["setMargin"]=btCapsuleShapeZ.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeZ_setMargin_1(self,arg0)});btCapsuleShapeZ.prototype["getMargin"]=btCapsuleShapeZ.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btCapsuleShapeZ_getMargin_0(self)});btCapsuleShapeZ.prototype["setLocalScaling"]=btCapsuleShapeZ.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1(self,arg0)});btCapsuleShapeZ.prototype["calculateLocalInertia"]=btCapsuleShapeZ.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2(self,arg0,arg1)});btCapsuleShapeZ.prototype["__destroy__"]=btCapsuleShapeZ.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btCapsuleShapeZ___destroy___0(self)});function btContactSolverInfo(){throw"cannot construct a btContactSolverInfo, no constructor in IDL"}btContactSolverInfo.prototype=Object.create(WrapperObject.prototype);btContactSolverInfo.prototype.constructor=btContactSolverInfo;btContactSolverInfo.prototype.__class__=btContactSolverInfo;btContactSolverInfo.__cache__={};Module["btContactSolverInfo"]=btContactSolverInfo;btContactSolverInfo.prototype["get_m_splitImpulse"]=btContactSolverInfo.prototype.get_m_splitImpulse=(function(){var self=this.ptr;return!!_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0(self)});btContactSolverInfo.prototype["set_m_splitImpulse"]=btContactSolverInfo.prototype.set_m_splitImpulse=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1(self,arg0)});btContactSolverInfo.prototype["get_m_splitImpulsePenetrationThreshold"]=btContactSolverInfo.prototype.get_m_splitImpulsePenetrationThreshold=(function(){var self=this.ptr;return _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0(self)});btContactSolverInfo.prototype["set_m_splitImpulsePenetrationThreshold"]=btContactSolverInfo.prototype.set_m_splitImpulsePenetrationThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1(self,arg0)});btContactSolverInfo.prototype["__destroy__"]=btContactSolverInfo.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btContactSolverInfo___destroy___0(self)});function btGeneric6DofSpringConstraint(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;if(arg3===undefined){this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3(arg0,arg1,arg2);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this;return}if(arg4===undefined){this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(arg0,arg1,arg2,arg3);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this;return}this.ptr=_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5(arg0,arg1,arg2,arg3,arg4);getCache(btGeneric6DofSpringConstraint)[this.ptr]=this}btGeneric6DofSpringConstraint.prototype=Object.create(btGeneric6DofConstraint.prototype);btGeneric6DofSpringConstraint.prototype.constructor=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.prototype.__class__=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.__cache__={};Module["btGeneric6DofSpringConstraint"]=btGeneric6DofSpringConstraint;btGeneric6DofSpringConstraint.prototype["enableSpring"]=btGeneric6DofSpringConstraint.prototype.enableSpring=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2(self,arg0,arg1)});btGeneric6DofSpringConstraint.prototype["setStiffness"]=btGeneric6DofSpringConstraint.prototype.setStiffness=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2(self,arg0,arg1)});btGeneric6DofSpringConstraint.prototype["setDamping"]=btGeneric6DofSpringConstraint.prototype.setDamping=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2(self,arg0,arg1)});btGeneric6DofSpringConstraint.prototype["setLinearLowerLimit"]=btGeneric6DofSpringConstraint.prototype.setLinearLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["setLinearUpperLimit"]=btGeneric6DofSpringConstraint.prototype.setLinearUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["setAngularLowerLimit"]=btGeneric6DofSpringConstraint.prototype.setAngularLowerLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["setAngularUpperLimit"]=btGeneric6DofSpringConstraint.prototype.setAngularUpperLimit=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["getRotationalLimitMotor"]=btGeneric6DofSpringConstraint.prototype.getRotationalLimitMotor=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;return wrapPointer(_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1(self,arg0),btRotationalLimitMotor)});btGeneric6DofSpringConstraint.prototype["enableFeedback"]=btGeneric6DofSpringConstraint.prototype.enableFeedback=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["getBreakingImpulseThreshold"]=btGeneric6DofSpringConstraint.prototype.getBreakingImpulseThreshold=(function(){var self=this.ptr;return _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0(self)});btGeneric6DofSpringConstraint.prototype["setBreakingImpulseThreshold"]=btGeneric6DofSpringConstraint.prototype.setBreakingImpulseThreshold=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1(self,arg0)});btGeneric6DofSpringConstraint.prototype["__destroy__"]=btGeneric6DofSpringConstraint.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0(self)});function btSphereShape(arg0){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;this.ptr=_emscripten_bind_btSphereShape_btSphereShape_1(arg0);getCache(btSphereShape)[this.ptr]=this}btSphereShape.prototype=Object.create(btCollisionShape.prototype);btSphereShape.prototype.constructor=btSphereShape;btSphereShape.prototype.__class__=btSphereShape;btSphereShape.__cache__={};Module["btSphereShape"]=btSphereShape;btSphereShape.prototype["setMargin"]=btSphereShape.prototype.setMargin=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSphereShape_setMargin_1(self,arg0)});btSphereShape.prototype["getMargin"]=btSphereShape.prototype.getMargin=(function(){var self=this.ptr;return _emscripten_bind_btSphereShape_getMargin_0(self)});btSphereShape.prototype["setLocalScaling"]=btSphereShape.prototype.setLocalScaling=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_btSphereShape_setLocalScaling_1(self,arg0)});btSphereShape.prototype["calculateLocalInertia"]=btSphereShape.prototype.calculateLocalInertia=(function(arg0,arg1){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;_emscripten_bind_btSphereShape_calculateLocalInertia_2(self,arg0,arg1)});btSphereShape.prototype["__destroy__"]=btSphereShape.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_btSphereShape___destroy___0(self)});function LocalConvexResult(arg0,arg1,arg2,arg3,arg4){if(arg0&&typeof arg0==="object")arg0=arg0.ptr;if(arg1&&typeof arg1==="object")arg1=arg1.ptr;if(arg2&&typeof arg2==="object")arg2=arg2.ptr;if(arg3&&typeof arg3==="object")arg3=arg3.ptr;if(arg4&&typeof arg4==="object")arg4=arg4.ptr;this.ptr=_emscripten_bind_LocalConvexResult_LocalConvexResult_5(arg0,arg1,arg2,arg3,arg4);getCache(LocalConvexResult)[this.ptr]=this}LocalConvexResult.prototype=Object.create(WrapperObject.prototype);LocalConvexResult.prototype.constructor=LocalConvexResult;LocalConvexResult.prototype.__class__=LocalConvexResult;LocalConvexResult.__cache__={};Module["LocalConvexResult"]=LocalConvexResult;LocalConvexResult.prototype["get_m_hitCollisionObject"]=LocalConvexResult.prototype.get_m_hitCollisionObject=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0(self),btCollisionObject)});LocalConvexResult.prototype["set_m_hitCollisionObject"]=LocalConvexResult.prototype.set_m_hitCollisionObject=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1(self,arg0)});LocalConvexResult.prototype["get_m_localShapeInfo"]=LocalConvexResult.prototype.get_m_localShapeInfo=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0(self),LocalShapeInfo)});LocalConvexResult.prototype["set_m_localShapeInfo"]=LocalConvexResult.prototype.set_m_localShapeInfo=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1(self,arg0)});LocalConvexResult.prototype["get_m_hitNormalLocal"]=LocalConvexResult.prototype.get_m_hitNormalLocal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0(self),btVector3)});LocalConvexResult.prototype["set_m_hitNormalLocal"]=LocalConvexResult.prototype.set_m_hitNormalLocal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1(self,arg0)});LocalConvexResult.prototype["get_m_hitPointLocal"]=LocalConvexResult.prototype.get_m_hitPointLocal=(function(){var self=this.ptr;return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0(self),btVector3)});LocalConvexResult.prototype["set_m_hitPointLocal"]=LocalConvexResult.prototype.set_m_hitPointLocal=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1(self,arg0)});LocalConvexResult.prototype["get_m_hitFraction"]=LocalConvexResult.prototype.get_m_hitFraction=(function(){var self=this.ptr;return _emscripten_bind_LocalConvexResult_get_m_hitFraction_0(self)});LocalConvexResult.prototype["set_m_hitFraction"]=LocalConvexResult.prototype.set_m_hitFraction=(function(arg0){var self=this.ptr;if(arg0&&typeof arg0==="object")arg0=arg0.ptr;_emscripten_bind_LocalConvexResult_set_m_hitFraction_1(self,arg0)});LocalConvexResult.prototype["__destroy__"]=LocalConvexResult.prototype.__destroy__=(function(){var self=this.ptr;_emscripten_bind_LocalConvexResult___destroy___0(self)});((function(){function setupEnums(){Module["PHY_FLOAT"]=_emscripten_enum_PHY_ScalarType_PHY_FLOAT();Module["PHY_DOUBLE"]=_emscripten_enum_PHY_ScalarType_PHY_DOUBLE();Module["PHY_INTEGER"]=_emscripten_enum_PHY_ScalarType_PHY_INTEGER();Module["PHY_SHORT"]=_emscripten_enum_PHY_ScalarType_PHY_SHORT();Module["PHY_FIXEDPOINT88"]=_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88();Module["PHY_UCHAR"]=_emscripten_enum_PHY_ScalarType_PHY_UCHAR()}if(Module["calledRun"])setupEnums();else addOnPreMain(setupEnums)}))();this["Ammo"]=Module
	
	
	
	
	
	  return Module;
	};
	
	Ammo = AmmoLib();
	
	module.exports = Ammo;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(294), "/", __webpack_require__(419)(module)))

/***/ },
/* 419 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 420 */
/***/ function(module, exports) {

	console.log("I'm `fs` modules");


/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	
	var isWindows = process.platform === 'win32';
	var util = __webpack_require__(422);
	
	
	// resolves . and .. elements in a path array with directory names there
	// must be no slashes or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  var res = [];
	  for (var i = 0; i < parts.length; i++) {
	    var p = parts[i];
	
	    // ignore empty parts
	    if (!p || p === '.')
	      continue;
	
	    if (p === '..') {
	      if (res.length && res[res.length - 1] !== '..') {
	        res.pop();
	      } else if (allowAboveRoot) {
	        res.push('..');
	      }
	    } else {
	      res.push(p);
	    }
	  }
	
	  return res;
	}
	
	// returns an array with empty elements removed from either end of the input
	// array or the original array if no elements need to be removed
	function trimArray(arr) {
	  var lastIndex = arr.length - 1;
	  var start = 0;
	  for (; start <= lastIndex; start++) {
	    if (arr[start])
	      break;
	  }
	
	  var end = lastIndex;
	  for (; end >= 0; end--) {
	    if (arr[end])
	      break;
	  }
	
	  if (start === 0 && end === lastIndex)
	    return arr;
	  if (start > end)
	    return [];
	  return arr.slice(start, end + 1);
	}
	
	// Regex to split a windows path into three parts: [*, device, slash,
	// tail] windows-only
	var splitDeviceRe =
	    /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;
	
	// Regex to split the tail part of the above into [*, dir, basename, ext]
	var splitTailRe =
	    /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;
	
	var win32 = {};
	
	// Function to split a filename into [root, dir, basename, ext]
	function win32SplitPath(filename) {
	  // Separate device+slash from tail
	  var result = splitDeviceRe.exec(filename),
	      device = (result[1] || '') + (result[2] || ''),
	      tail = result[3] || '';
	  // Split the tail into dir, basename and extension
	  var result2 = splitTailRe.exec(tail),
	      dir = result2[1],
	      basename = result2[2],
	      ext = result2[3];
	  return [device, dir, basename, ext];
	}
	
	function win32StatPath(path) {
	  var result = splitDeviceRe.exec(path),
	      device = result[1] || '',
	      isUnc = !!device && device[1] !== ':';
	  return {
	    device: device,
	    isUnc: isUnc,
	    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute
	    tail: result[3]
	  };
	}
	
	function normalizeUNCRoot(device) {
	  return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');
	}
	
	// path.resolve([from ...], to)
	win32.resolve = function() {
	  var resolvedDevice = '',
	      resolvedTail = '',
	      resolvedAbsolute = false;
	
	  for (var i = arguments.length - 1; i >= -1; i--) {
	    var path;
	    if (i >= 0) {
	      path = arguments[i];
	    } else if (!resolvedDevice) {
	      path = process.cwd();
	    } else {
	      // Windows has the concept of drive-specific current working
	      // directories. If we've resolved a drive letter but not yet an
	      // absolute path, get cwd for that drive. We're sure the device is not
	      // an unc path at this points, because unc paths are always absolute.
	      path = process.env['=' + resolvedDevice];
	      // Verify that a drive-local cwd was found and that it actually points
	      // to our drive. If not, default to the drive's root.
	      if (!path || path.substr(0, 3).toLowerCase() !==
	          resolvedDevice.toLowerCase() + '\\') {
	        path = resolvedDevice + '\\';
	      }
	    }
	
	    // Skip empty and invalid entries
	    if (!util.isString(path)) {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }
	
	    var result = win32StatPath(path),
	        device = result.device,
	        isUnc = result.isUnc,
	        isAbsolute = result.isAbsolute,
	        tail = result.tail;
	
	    if (device &&
	        resolvedDevice &&
	        device.toLowerCase() !== resolvedDevice.toLowerCase()) {
	      // This path points to another device so it is not applicable
	      continue;
	    }
	
	    if (!resolvedDevice) {
	      resolvedDevice = device;
	    }
	    if (!resolvedAbsolute) {
	      resolvedTail = tail + '\\' + resolvedTail;
	      resolvedAbsolute = isAbsolute;
	    }
	
	    if (resolvedDevice && resolvedAbsolute) {
	      break;
	    }
	  }
	
	  // Convert slashes to backslashes when `resolvedDevice` points to an UNC
	  // root. Also squash multiple slashes into a single one where appropriate.
	  if (isUnc) {
	    resolvedDevice = normalizeUNCRoot(resolvedDevice);
	  }
	
	  // At this point the path should be resolved to a full absolute path,
	  // but handle relative paths to be safe (might happen when process.cwd()
	  // fails)
	
	  // Normalize the tail path
	  resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/),
	                                !resolvedAbsolute).join('\\');
	
	  return (resolvedDevice + (resolvedAbsolute ? '\\' : '') + resolvedTail) ||
	         '.';
	};
	
	
	win32.normalize = function(path) {
	  var result = win32StatPath(path),
	      device = result.device,
	      isUnc = result.isUnc,
	      isAbsolute = result.isAbsolute,
	      tail = result.tail,
	      trailingSlash = /[\\\/]$/.test(tail);
	
	  // Normalize the tail path
	  tail = normalizeArray(tail.split(/[\\\/]+/), !isAbsolute).join('\\');
	
	  if (!tail && !isAbsolute) {
	    tail = '.';
	  }
	  if (tail && trailingSlash) {
	    tail += '\\';
	  }
	
	  // Convert slashes to backslashes when `device` points to an UNC root.
	  // Also squash multiple slashes into a single one where appropriate.
	  if (isUnc) {
	    device = normalizeUNCRoot(device);
	  }
	
	  return device + (isAbsolute ? '\\' : '') + tail;
	};
	
	
	win32.isAbsolute = function(path) {
	  return win32StatPath(path).isAbsolute;
	};
	
	win32.join = function() {
	  var paths = [];
	  for (var i = 0; i < arguments.length; i++) {
	    var arg = arguments[i];
	    if (!util.isString(arg)) {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    if (arg) {
	      paths.push(arg);
	    }
	  }
	
	  var joined = paths.join('\\');
	
	  // Make sure that the joined path doesn't start with two slashes, because
	  // normalize() will mistake it for an UNC path then.
	  //
	  // This step is skipped when it is very clear that the user actually
	  // intended to point at an UNC path. This is assumed when the first
	  // non-empty string arguments starts with exactly two slashes followed by
	  // at least one more non-slash character.
	  //
	  // Note that for normalize() to treat a path as an UNC path it needs to
	  // have at least 2 components, so we don't filter for that here.
	  // This means that the user can use join to construct UNC paths from
	  // a server name and a share name; for example:
	  //   path.join('//server', 'share') -> '\\\\server\\share\')
	  if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
	    joined = joined.replace(/^[\\\/]{2,}/, '\\');
	  }
	
	  return win32.normalize(joined);
	};
	
	
	// path.relative(from, to)
	// it will solve the relative path from 'from' to 'to', for instance:
	// from = 'C:\\orandea\\test\\aaa'
	// to = 'C:\\orandea\\impl\\bbb'
	// The output of the function should be: '..\\..\\impl\\bbb'
	win32.relative = function(from, to) {
	  from = win32.resolve(from);
	  to = win32.resolve(to);
	
	  // windows is not case sensitive
	  var lowerFrom = from.toLowerCase();
	  var lowerTo = to.toLowerCase();
	
	  var toParts = trimArray(to.split('\\'));
	
	  var lowerFromParts = trimArray(lowerFrom.split('\\'));
	  var lowerToParts = trimArray(lowerTo.split('\\'));
	
	  var length = Math.min(lowerFromParts.length, lowerToParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (lowerFromParts[i] !== lowerToParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }
	
	  if (samePartsLength == 0) {
	    return to;
	  }
	
	  var outputParts = [];
	  for (var i = samePartsLength; i < lowerFromParts.length; i++) {
	    outputParts.push('..');
	  }
	
	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	
	  return outputParts.join('\\');
	};
	
	
	win32._makeLong = function(path) {
	  // Note: this will *probably* throw somewhere.
	  if (!util.isString(path))
	    return path;
	
	  if (!path) {
	    return '';
	  }
	
	  var resolvedPath = win32.resolve(path);
	
	  if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
	    // path is local filesystem path, which needs to be converted
	    // to long UNC path.
	    return '\\\\?\\' + resolvedPath;
	  } else if (/^\\\\[^?.]/.test(resolvedPath)) {
	    // path is network UNC path, which needs to be converted
	    // to long UNC path.
	    return '\\\\?\\UNC\\' + resolvedPath.substring(2);
	  }
	
	  return path;
	};
	
	
	win32.dirname = function(path) {
	  var result = win32SplitPath(path),
	      root = result[0],
	      dir = result[1];
	
	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }
	
	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }
	
	  return root + dir;
	};
	
	
	win32.basename = function(path, ext) {
	  var f = win32SplitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};
	
	
	win32.extname = function(path) {
	  return win32SplitPath(path)[3];
	};
	
	
	win32.format = function(pathObject) {
	  if (!util.isObject(pathObject)) {
	    throw new TypeError(
	        "Parameter 'pathObject' must be an object, not " + typeof pathObject
	    );
	  }
	
	  var root = pathObject.root || '';
	
	  if (!util.isString(root)) {
	    throw new TypeError(
	        "'pathObject.root' must be a string or undefined, not " +
	        typeof pathObject.root
	    );
	  }
	
	  var dir = pathObject.dir;
	  var base = pathObject.base || '';
	  if (!dir) {
	    return base;
	  }
	  if (dir[dir.length - 1] === win32.sep) {
	    return dir + base;
	  }
	  return dir + win32.sep + base;
	};
	
	
	win32.parse = function(pathString) {
	  if (!util.isString(pathString)) {
	    throw new TypeError(
	        "Parameter 'pathString' must be a string, not " + typeof pathString
	    );
	  }
	  var allParts = win32SplitPath(pathString);
	  if (!allParts || allParts.length !== 4) {
	    throw new TypeError("Invalid path '" + pathString + "'");
	  }
	  return {
	    root: allParts[0],
	    dir: allParts[0] + allParts[1].slice(0, -1),
	    base: allParts[2],
	    ext: allParts[3],
	    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
	  };
	};
	
	
	win32.sep = '\\';
	win32.delimiter = ';';
	
	
	// Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.
	var splitPathRe =
	    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	var posix = {};
	
	
	function posixSplitPath(filename) {
	  return splitPathRe.exec(filename).slice(1);
	}
	
	
	// path.resolve([from ...], to)
	// posix version
	posix.resolve = function() {
	  var resolvedPath = '',
	      resolvedAbsolute = false;
	
	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = (i >= 0) ? arguments[i] : process.cwd();
	
	    // Skip empty and invalid entries
	    if (!util.isString(path)) {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }
	
	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path[0] === '/';
	  }
	
	  // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)
	
	  // Normalize the path
	  resolvedPath = normalizeArray(resolvedPath.split('/'),
	                                !resolvedAbsolute).join('/');
	
	  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
	};
	
	// path.normalize(path)
	// posix version
	posix.normalize = function(path) {
	  var isAbsolute = posix.isAbsolute(path),
	      trailingSlash = path && path[path.length - 1] === '/';
	
	  // Normalize the path
	  path = normalizeArray(path.split('/'), !isAbsolute).join('/');
	
	  if (!path && !isAbsolute) {
	    path = '.';
	  }
	  if (path && trailingSlash) {
	    path += '/';
	  }
	
	  return (isAbsolute ? '/' : '') + path;
	};
	
	// posix version
	posix.isAbsolute = function(path) {
	  return path.charAt(0) === '/';
	};
	
	// posix version
	posix.join = function() {
	  var path = '';
	  for (var i = 0; i < arguments.length; i++) {
	    var segment = arguments[i];
	    if (!util.isString(segment)) {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    if (segment) {
	      if (!path) {
	        path += segment;
	      } else {
	        path += '/' + segment;
	      }
	    }
	  }
	  return posix.normalize(path);
	};
	
	
	// path.relative(from, to)
	// posix version
	posix.relative = function(from, to) {
	  from = posix.resolve(from).substr(1);
	  to = posix.resolve(to).substr(1);
	
	  var fromParts = trimArray(from.split('/'));
	  var toParts = trimArray(to.split('/'));
	
	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }
	
	  var outputParts = [];
	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }
	
	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	
	  return outputParts.join('/');
	};
	
	
	posix._makeLong = function(path) {
	  return path;
	};
	
	
	posix.dirname = function(path) {
	  var result = posixSplitPath(path),
	      root = result[0],
	      dir = result[1];
	
	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }
	
	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }
	
	  return root + dir;
	};
	
	
	posix.basename = function(path, ext) {
	  var f = posixSplitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};
	
	
	posix.extname = function(path) {
	  return posixSplitPath(path)[3];
	};
	
	
	posix.format = function(pathObject) {
	  if (!util.isObject(pathObject)) {
	    throw new TypeError(
	        "Parameter 'pathObject' must be an object, not " + typeof pathObject
	    );
	  }
	
	  var root = pathObject.root || '';
	
	  if (!util.isString(root)) {
	    throw new TypeError(
	        "'pathObject.root' must be a string or undefined, not " +
	        typeof pathObject.root
	    );
	  }
	
	  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';
	  var base = pathObject.base || '';
	  return dir + base;
	};
	
	
	posix.parse = function(pathString) {
	  if (!util.isString(pathString)) {
	    throw new TypeError(
	        "Parameter 'pathString' must be a string, not " + typeof pathString
	    );
	  }
	  var allParts = posixSplitPath(pathString);
	  if (!allParts || allParts.length !== 4) {
	    throw new TypeError("Invalid path '" + pathString + "'");
	  }
	  allParts[1] = allParts[1] || '';
	  allParts[2] = allParts[2] || '';
	  allParts[3] = allParts[3] || '';
	
	  return {
	    root: allParts[0],
	    dir: allParts[0] + allParts[1].slice(0, -1),
	    base: allParts[2],
	    ext: allParts[3],
	    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
	  };
	};
	
	
	posix.sep = '/';
	posix.delimiter = ':';
	
	
	if (isWindows)
	  module.exports = win32;
	else /* posix */
	  module.exports = posix;
	
	module.exports.posix = posix;
	module.exports.win32 = win32;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(294)))

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(423);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(424);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(294)))

/***/ },
/* 423 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 424 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConeTwistConstraint = __webpack_require__(426);
	
	Object.keys(_ConeTwistConstraint).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _ConeTwistConstraint[key];
	    }
	  });
	});
	
	var _HingeConstraint = __webpack_require__(427);
	
	Object.keys(_HingeConstraint).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _HingeConstraint[key];
	    }
	  });
	});
	
	var _PointConstraint = __webpack_require__(428);
	
	Object.keys(_PointConstraint).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _PointConstraint[key];
	    }
	  });
	});
	
	var _SliderConstraint = __webpack_require__(429);
	
	Object.keys(_SliderConstraint).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _SliderConstraint[key];
	    }
	  });
	});
	
	var _DOFConstraint = __webpack_require__(430);
	
	Object.keys(_DOFConstraint).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _DOFConstraint[key];
	    }
	  });
	});

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ConeTwistConstraint = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ConeTwistConstraint = exports.ConeTwistConstraint = function () {
	  function ConeTwistConstraint(obja, objb, position) {
	    (0, _classCallCheck3.default)(this, ConeTwistConstraint);
	
	    var objecta = obja.getNative();
	    var objectb = obja.getNative();
	
	    if (position === undefined) console.error('Both objects must be defined in a ConeTwistConstraint.');
	    this.type = 'conetwist';
	    this.appliedImpulse = 0;
	    this.id = (0, _api.getObjectId)();
	    this.scene = objecta.parent;
	    this.objecta = objecta._physijs.id;
	    this.positiona = (0, _api.convertWorldPositionToObject)(position, objecta).clone();
	    this.objectb = objectb._physijs.id;
	    this.positionb = (0, _api.convertWorldPositionToObject)(position, objectb).clone();
	    this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };
	    this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };
	  }
	
	  (0, _createClass3.default)(ConeTwistConstraint, [{
	    key: 'getDefinition',
	    value: function getDefinition() {
	      return {
	        type: this.type,
	        id: this.id,
	        objecta: this.objecta,
	        objectb: this.objectb,
	        positiona: this.positiona,
	        positionb: this.positionb,
	        axisa: this.axisa,
	        axisb: this.axisb
	      };
	    }
	  }, {
	    key: 'setLimit',
	    value: function setLimit(x, y, z) {
	      this.scene.execute('conetwist_setLimit', { constraint: this.id, x: x, y: y, z: z });
	    }
	  }, {
	    key: 'enableMotor',
	    value: function enableMotor() {
	      this.scene.execute('conetwist_enableMotor', { constraint: this.id });
	    }
	  }, {
	    key: 'setMaxMotorImpulse',
	    value: function setMaxMotorImpulse(max_impulse) {
	      this.scene.execute('conetwist_setMaxMotorImpulse', { constraint: this.id, max_impulse: max_impulse });
	    }
	  }, {
	    key: 'setMotorTarget',
	    value: function setMotorTarget(target) {
	      if (target instanceof THREE.Vector3) target = new THREE.Quaternion().setFromEuler(new THREE.Euler(target.x, target.y, target.z));else if (target instanceof THREE.Euler) target = new THREE.Quaternion().setFromEuler(target);else if (target instanceof THREE.Matrix4) target = new THREE.Quaternion().setFromRotationMatrix(target);
	
	      this.scene.execute('conetwist_setMotorTarget', {
	        constraint: this.id,
	        x: target.x,
	        y: target.y,
	        z: target.z,
	        w: target.w
	      });
	    }
	  }]);
	  return ConeTwistConstraint;
	}();

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.HingeConstraint = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HingeConstraint = exports.HingeConstraint = function () {
	  function HingeConstraint(obja, objb, position, axis) {
	    (0, _classCallCheck3.default)(this, HingeConstraint);
	
	    var objecta = obja.getNative();
	    var objectb = obja.getNative();
	
	    if (axis === undefined) {
	      axis = position;
	      position = objectb;
	      objectb = undefined;
	    }
	
	    this.type = 'hinge';
	    this.appliedImpulse = 0;
	    this.id = (0, _api.getObjectId)();
	    this.scene = objecta.parent;
	    this.objecta = objecta._physijs.id;
	    this.positiona = (0, _api.convertWorldPositionToObject)(position, objecta).clone();
	    this.position = position.clone();
	    this.axis = axis;
	
	    if (objectb) {
	      this.objectb = objectb._physijs.id;
	      this.positionb = (0, _api.convertWorldPositionToObject)(position, objectb).clone();
	    }
	  }
	
	  (0, _createClass3.default)(HingeConstraint, [{
	    key: 'getDefinition',
	    value: function getDefinition() {
	      return {
	        type: this.type,
	        id: this.id,
	        objecta: this.objecta,
	        objectb: this.objectb,
	        positiona: this.positiona,
	        positionb: this.positionb,
	        axis: this.axis
	      };
	    }
	  }, {
	    key: 'setLimits',
	    value: function setLimits(low, high, bias_factor, relaxation_factor) {
	      this.scene.execute('hinge_setLimits', {
	        constraint: this.id,
	        low: low,
	        high: high,
	        bias_factor: bias_factor,
	        relaxation_factor: relaxation_factor
	      });
	    }
	  }, {
	    key: 'enableAngularMotor',
	    value: function enableAngularMotor(velocity, acceleration) {
	      this.scene.execute('hinge_enableAngularMotor', {
	        constraint: this.id,
	        velocity: velocity,
	        acceleration: acceleration
	      });
	    }
	  }, {
	    key: 'disableMotor',
	    value: function disableMotor() {
	      this.scene.execute('hinge_disableMotor', { constraint: this.id });
	    }
	  }]);
	  return HingeConstraint;
	}();

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PointConstraint = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PointConstraint = exports.PointConstraint = function () {
	  function PointConstraint(obja, objb, position) {
	    (0, _classCallCheck3.default)(this, PointConstraint);
	
	    var objecta = obja.getNative();
	    var objectb = obja.getNative();
	
	    if (position === undefined) {
	      position = objectb;
	      objectb = undefined;
	    }
	
	    this.type = 'point';
	    this.appliedImpulse = 0;
	    this.id = (0, _api.getObjectId)();
	    this.objecta = objecta._physijs.id;
	    this.positiona = (0, _api.convertWorldPositionToObject)(position, objecta).clone();
	
	    if (objectb) {
	      this.objectb = objectb._physijs.id;
	      this.positionb = (0, _api.convertWorldPositionToObject)(position, objectb).clone();
	    }
	  }
	
	  (0, _createClass3.default)(PointConstraint, [{
	    key: 'getDefinition',
	    value: function getDefinition() {
	      return {
	        type: this.type,
	        id: this.id,
	        objecta: this.objecta,
	        objectb: this.objectb,
	        positiona: this.positiona,
	        positionb: this.positionb
	      };
	    }
	  }]);
	  return PointConstraint;
	}();

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SliderConstraint = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SliderConstraint = exports.SliderConstraint = function () {
	  function SliderConstraint(obja, objb, position, axis) {
	    (0, _classCallCheck3.default)(this, SliderConstraint);
	
	    var objecta = obja.getNative();
	    var objectb = obja.getNative();
	
	    if (axis === undefined) {
	      axis = position;
	      position = objectb;
	      objectb = undefined;
	    }
	
	    this.type = 'slider';
	    this.appliedImpulse = 0;
	    this.id = (0, _api.getObjectId)();
	    this.scene = objecta.parent;
	    this.objecta = objecta._physijs.id;
	    this.positiona = (0, _api.convertWorldPositionToObject)(position, objecta).clone();
	    this.axis = axis;
	
	    if (objectb) {
	      this.objectb = objectb._physijs.id;
	      this.positionb = (0, _api.convertWorldPositionToObject)(position, objectb).clone();
	    }
	  }
	
	  (0, _createClass3.default)(SliderConstraint, [{
	    key: 'getDefinition',
	    value: function getDefinition() {
	      return {
	        type: this.type,
	        id: this.id,
	        objecta: this.objecta,
	        objectb: this.objectb,
	        positiona: this.positiona,
	        positionb: this.positionb,
	        axis: this.axis
	      };
	    }
	  }, {
	    key: 'setLimits',
	    value: function setLimits(lin_lower, lin_upper, ang_lower, ang_upper) {
	      this.scene.execute('slider_setLimits', {
	        constraint: this.id,
	        lin_lower: lin_lower,
	        lin_upper: lin_upper,
	        ang_lower: ang_lower,
	        ang_upper: ang_upper
	      });
	    }
	  }, {
	    key: 'setRestitution',
	    value: function setRestitution(linear, angular) {
	      this.scene.execute('slider_setRestitution', {
	        constraint: this.id,
	        linear: linear,
	        angular: angular
	      });
	    }
	  }, {
	    key: 'enableLinearMotor',
	    value: function enableLinearMotor(velocity, acceleration) {
	      this.scene.execute('slider_enableLinearMotor', {
	        constraint: this.id,
	        velocity: velocity,
	        acceleration: acceleration
	      });
	    }
	  }, {
	    key: 'disableLinearMotor',
	    value: function disableLinearMotor() {
	      this.scene.execute('slider_disableLinearMotor', { constraint: this.id });
	    }
	  }, {
	    key: 'enableAngularMotor',
	    value: function enableAngularMotor(velocity, acceleration) {
	      this.scene.execute('slider_enableAngularMotor', {
	        constraint: this.id,
	        velocity: velocity,
	        acceleration: acceleration
	      });
	    }
	  }, {
	    key: 'disableAngularMotor',
	    value: function disableAngularMotor() {
	      this.scene.execute('slider_disableAngularMotor', { constraint: this.id });
	    }
	  }]);
	  return SliderConstraint;
	}();

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DOFConstraint = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DOFConstraint = exports.DOFConstraint = function () {
	  function DOFConstraint(obja, objb, position) {
	    (0, _classCallCheck3.default)(this, DOFConstraint);
	
	    var objecta = obja.getNative();
	    var objectb = obja.getNative();
	
	    if (position === undefined) {
	      position = objectb;
	      objectb = undefined;
	    }
	
	    this.type = 'dof';
	    this.appliedImpulse = 0;
	    this.id = (0, _api.getObjectId)();
	    this.scene = objecta.parent;
	    this.objecta = objecta._physijs.id;
	    this.positiona = (0, _api.convertWorldPositionToObject)(position, objecta).clone();
	    this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };
	
	    if (objectb) {
	      this.objectb = objectb._physijs.id;
	      this.positionb = (0, _api.convertWorldPositionToObject)(position, objectb).clone();
	      this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };
	    }
	  }
	
	  (0, _createClass3.default)(DOFConstraint, [{
	    key: 'getDefinition',
	    value: function getDefinition() {
	      return {
	        type: this.type,
	        id: this.id,
	        objecta: this.objecta,
	        objectb: this.objectb,
	        positiona: this.positiona,
	        positionb: this.positionb,
	        axisa: this.axisa,
	        axisb: this.axisb
	      };
	    }
	  }, {
	    key: 'setLinearLowerLimit',
	    value: function setLinearLowerLimit(limit) {
	      this.scene.execute('dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z });
	    }
	  }, {
	    key: 'setLinearUpperLimit',
	    value: function setLinearUpperLimit(limit) {
	      this.scene.execute('dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z });
	    }
	  }, {
	    key: 'setAngularLowerLimit',
	    value: function setAngularLowerLimit(limit) {
	      this.scene.execute('dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z });
	    }
	  }, {
	    key: 'setAngularUpperLimit',
	    value: function setAngularUpperLimit(limit) {
	      this.scene.execute('dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z });
	    }
	  }, {
	    key: 'enableAngularMotor',
	    value: function enableAngularMotor(which) {
	      this.scene.execute('dof_enableAngularMotor', { constraint: this.id, which: which });
	    }
	  }, {
	    key: 'configureAngularMotor',
	    value: function configureAngularMotor(which, low_angle, high_angle, velocity, max_force) {
	      this.scene.execute('dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force });
	    }
	  }, {
	    key: 'disableAngularMotor',
	    value: function disableAngularMotor(which) {
	      this.scene.execute('dof_disableAngularMotor', { constraint: this.id, which: which });
	    }
	  }]);
	  return DOFConstraint;
	}();

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _boxMesh = __webpack_require__(432);
	
	Object.keys(_boxMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _boxMesh[key];
	    }
	  });
	});
	
	var _capsuleMesh = __webpack_require__(433);
	
	Object.keys(_capsuleMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _capsuleMesh[key];
	    }
	  });
	});
	
	var _concaveMesh = __webpack_require__(434);
	
	Object.keys(_concaveMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _concaveMesh[key];
	    }
	  });
	});
	
	var _coneMesh = __webpack_require__(435);
	
	Object.keys(_coneMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _coneMesh[key];
	    }
	  });
	});
	
	var _convexMesh = __webpack_require__(436);
	
	Object.keys(_convexMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _convexMesh[key];
	    }
	  });
	});
	
	var _cylinderMesh = __webpack_require__(437);
	
	Object.keys(_cylinderMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _cylinderMesh[key];
	    }
	  });
	});
	
	var _heightfieldMesh = __webpack_require__(438);
	
	Object.keys(_heightfieldMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _heightfieldMesh[key];
	    }
	  });
	});
	
	var _planeMesh = __webpack_require__(439);
	
	Object.keys(_planeMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _planeMesh[key];
	    }
	  });
	});
	
	var _sphereMesh = __webpack_require__(440);
	
	Object.keys(_sphereMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _sphereMesh[key];
	    }
	  });
	});
	
	var _softMesh = __webpack_require__(441);
	
	Object.keys(_softMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _softMesh[key];
	    }
	  });
	});
	
	var _clothMesh = __webpack_require__(442);
	
	Object.keys(_clothMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _clothMesh[key];
	    }
	  });
	});
	
	var _ropeMesh = __webpack_require__(443);
	
	Object.keys(_ropeMesh).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _ropeMesh[key];
	    }
	  });
	});

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.BoxMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var BoxMesh = exports.BoxMesh = function (_Mesh) {
	    (0, _inherits3.default)(BoxMesh, _Mesh);
	
	    function BoxMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, BoxMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (BoxMesh.__proto__ || Object.getPrototypeOf(BoxMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	        var depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;
	
	        _this._physijs.type = 'box';
	        _this._physijs.width = width;
	        _this._physijs.height = height;
	        _this._physijs.depth = depth;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return BoxMesh;
	}(_mesh.Mesh);

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CapsuleMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CapsuleMesh = exports.CapsuleMesh = function (_Mesh) {
	    (0, _inherits3.default)(CapsuleMesh, _Mesh);
	
	    function CapsuleMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, CapsuleMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (CapsuleMesh.__proto__ || Object.getPrototypeOf(CapsuleMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	        var depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;
	
	        _this._physijs.type = 'capsule';
	        _this._physijs.radius = Math.max(width / 2, depth / 2);
	        _this._physijs.height = height;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return CapsuleMesh;
	}(_mesh.Mesh);

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ConcaveMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ConcaveMesh = exports.ConcaveMesh = function (_Mesh) {
	    (0, _inherits3.default)(ConcaveMesh, _Mesh);
	
	    function ConcaveMesh(geom, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        var cGeometry = arguments[3];
	        (0, _classCallCheck3.default)(this, ConcaveMesh);
	
	        var geometry = cGeometry ? cGeometry : geom,
	            data = new Float32Array(geometry.faces.length * 9);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (ConcaveMesh.__proto__ || Object.getPrototypeOf(ConcaveMesh)).call(this, geom, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var cScale = params.scale || { x: 1, y: 1, z: 1 };
	        cScale.x = cScale.x || 1;
	        cScale.y = cScale.y || 1;
	        cScale.z = cScale.z || 1;
	
	        var vertices = geometry.vertices;
	
	        for (var i = 0; i < geometry.faces.length; i++) {
	            var face = geometry.faces[i];
	
	            data[i * 9] = vertices[face.a].x * cScale.x;
	            data[i * 9 + 1] = vertices[face.a].y * cScale.y;
	            data[i * 9 + 2] = vertices[face.a].z * cScale.z;
	
	            data[i * 9 + 3] = vertices[face.b].x * cScale.x;
	            data[i * 9 + 4] = vertices[face.b].y * cScale.y;
	            data[i * 9 + 5] = vertices[face.b].z * cScale.z;
	
	            data[i * 9 + 6] = vertices[face.c].x * cScale.x;
	            data[i * 9 + 7] = vertices[face.c].y * cScale.y;
	            data[i * 9 + 8] = vertices[face.c].z * cScale.z;
	        }
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	        var depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;
	
	        _this._physijs.type = 'concave';
	        _this._physijs.data = data;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return ConcaveMesh;
	}(_mesh.Mesh);

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ConeMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ConeMesh = exports.ConeMesh = function (_Mesh) {
	    (0, _inherits3.default)(ConeMesh, _Mesh);
	
	    function ConeMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, ConeMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (ConeMesh.__proto__ || Object.getPrototypeOf(ConeMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	
	        _this._physijs.type = 'cone';
	        _this._physijs.radius = width / 2;
	        _this._physijs.height = height;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return ConeMesh;
	}(_mesh.Mesh);

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ConvexMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ConvexMesh = exports.ConvexMesh = function (_Mesh) {
	    (0, _inherits3.default)(ConvexMesh, _Mesh);
	
	    function ConvexMesh(geom, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        var cGeometry = arguments[3];
	        (0, _classCallCheck3.default)(this, ConvexMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (ConvexMesh.__proto__ || Object.getPrototypeOf(ConvexMesh)).call(this, geom, material, mass));
	
	        if (!geom.boundingBox) geom.computeBoundingBox();
	
	        var geometry = cGeometry ? cGeometry : geom,
	            data = new Float32Array(geometry.vertices.length * 3);
	
	        var cScale = params.scale || { x: 1, y: 1, z: 1 };
	        cScale.x = cScale.x || 1;
	        cScale.y = cScale.y || 1;
	        cScale.z = cScale.z || 1;
	
	        for (var i = 0; i < geometry.vertices.length; i++) {
	            data[i * 3] = geometry.vertices[i].x * cScale.x;
	            data[i * 3 + 1] = geometry.vertices[i].y * cScale.y;
	            data[i * 3 + 2] = geometry.vertices[i].z * cScale.z;
	        }
	
	        var width = geom.boundingBox.max.x - geom.boundingBox.min.x;
	        var height = geom.boundingBox.max.y - geom.boundingBox.min.y;
	        var depth = geom.boundingBox.max.z - geom.boundingBox.min.z;
	
	        _this._physijs.type = 'convex';
	        _this._physijs.data = data;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return ConvexMesh;
	}(_mesh.Mesh);

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CylinderMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CylinderMesh = exports.CylinderMesh = function (_Mesh) {
	    (0, _inherits3.default)(CylinderMesh, _Mesh);
	
	    function CylinderMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, CylinderMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (CylinderMesh.__proto__ || Object.getPrototypeOf(CylinderMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	        var depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;
	
	        _this._physijs.type = 'cylinder';
	        _this._physijs.width = width;
	        _this._physijs.height = height;
	        _this._physijs.depth = depth;
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return CylinderMesh;
	}(_mesh.Mesh);

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.HeightfieldMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HeightfieldMesh = exports.HeightfieldMesh = function (_Mesh) {
	    (0, _inherits3.default)(HeightfieldMesh, _Mesh);
	
	    function HeightfieldMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        var xdiv = arguments[3];
	        var ydiv = arguments[4];
	        (0, _classCallCheck3.default)(this, HeightfieldMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (HeightfieldMesh.__proto__ || Object.getPrototypeOf(HeightfieldMesh)).call(this, geometry, material, mass));
	
	        geometry.computeBoundingBox();
	
	        var isBuffer = geometry instanceof THREE.BufferGeometry;
	        var verts = isBuffer ? geometry.attributes.position.array : geometry.vertices;
	
	        var size = isBuffer ? verts.length / 3 : verts.length;
	
	        _this._physijs.type = 'heightfield';
	        _this._physijs.xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        _this._physijs.ysize = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	        _this._physijs.xpts = typeof xdiv === 'undefined' ? Math.sqrt(size) : xdiv + 1;
	        _this._physijs.ypts = typeof ydiv === 'undefined' ? Math.sqrt(size) : ydiv + 1;
	
	        // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv
	        _this._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z, Math.abs(geometry.boundingBox.min.z));
	
	        var points = new Float32Array(size),
	            xpts = _this._physijs.xpts,
	            ypts = _this._physijs.ypts;
	
	        while (size--) {
	            var vNum = size % xpts + (ypts - Math.round(size / xpts - size % xpts / xpts) - 1) * ypts;
	
	            if (isBuffer) points[size] = verts[vNum * 3 + 2];else points[size] = verts[vNum].z;
	        }
	
	        _this._physijs.points = points;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	
	        _this._physijs.mass = mass;
	        return _this;
	    }
	
	    return HeightfieldMesh;
	}(_mesh.Mesh);

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PlaneMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PlaneMesh = exports.PlaneMesh = function (_Mesh) {
	    (0, _inherits3.default)(PlaneMesh, _Mesh);
	
	    function PlaneMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, PlaneMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (PlaneMesh.__proto__ || Object.getPrototypeOf(PlaneMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingBox) geometry.computeBoundingBox();
	
	        var width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
	        var height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
	
	        _this._physijs.type = 'plane';
	        _this._physijs.normal = geometry.faces[0].normal.clone();
	
	        _this._physijs.mass = mass;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	        return _this;
	    }
	
	    return PlaneMesh;
	}(_mesh.Mesh);

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SphereMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SphereMesh = exports.SphereMesh = function (_Mesh) {
	    (0, _inherits3.default)(SphereMesh, _Mesh);
	
	    function SphereMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, SphereMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (SphereMesh.__proto__ || Object.getPrototypeOf(SphereMesh)).call(this, geometry, material, mass));
	
	        if (!geometry.boundingSphere) geometry.computeBoundingSphere();
	        _this._physijs.type = 'sphere';
	        _this._physijs.radius = geometry.boundingSphere.radius;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            restitution: physParams.restitution,
	            damping: physParams.damping,
	            margin: physParams.margin
	        };
	
	        _this._physijs.mass = mass;
	        return _this;
	    }
	
	    return SphereMesh;
	}(_mesh.Mesh);

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SoftMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SoftMesh = exports.SoftMesh = function (_Mesh) {
	    (0, _inherits3.default)(SoftMesh, _Mesh);
	
	    function SoftMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, SoftMesh);
	
	        var physParams = params.physics;
	        var mass = physParams.mass || params.mass;
	        var tempGeometry = geometry.clone();
	
	        if (!(geometry instanceof THREE.BufferGeometry)) // Converts to BufferGeometry.
	            geometry = new THREE.BufferGeometry().fromGeometry(geometry);
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (SoftMesh.__proto__ || Object.getPrototypeOf(SoftMesh)).call(this, geometry, material, mass));
	
	        tempGeometry.mergeVertices();
	        var idxGeometry = _this.createIndexedBufferGeometryFromGeometry(tempGeometry);
	        _this.tempGeometry = tempGeometry;
	
	        var aVertices = idxGeometry.attributes.position.array;
	        var aIndices = idxGeometry.index.array;
	        var aIdxAssoc = [];
	        var vertices = geometry.attributes.position.array;
	
	        var numIdxVertices = aVertices.length / 3;
	        var numVertices = vertices.length / 3;
	
	        for (var i = 0; i < numIdxVertices; i++) {
	            var association = [];
	            aIdxAssoc.push(association);
	
	            var i3 = i * 3;
	
	            for (var j = 0; j < numVertices; j++) {
	                var j3 = j * 3;
	
	                if (_this.isEqual(aVertices[i3], aVertices[i3 + 1], aVertices[i3 + 2], vertices[j3], vertices[j3 + 1], vertices[j3 + 2])) association.push(j3);
	            }
	        }
	
	        _this._physijs.type = 'softTrimesh';
	        _this._physijs.aVertices = aVertices;
	        _this._physijs.aIndices = aIndices;
	        _this._physijs.aIdxAssoc = aIdxAssoc;
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            damping: physParams.damping,
	            pressure: physParams.pressure,
	            margin: physParams.margin,
	            klst: physParams.klst,
	            kast: physParams.kast,
	            kvst: physParams.kvst,
	            drag: physParams.drag,
	            lift: physParams.lift,
	            piterations: physParams.piterations,
	            viterations: physParams.viterations,
	            diterations: physParams.diterations,
	            citerations: physParams.citerations,
	            anchorHardness: physParams.anchorHardness,
	            rigidHardness: physParams.rigidHardness
	        };
	
	        _this._physijs.mass = mass;
	        return _this;
	    }
	
	    (0, _createClass3.default)(SoftMesh, [{
	        key: 'createIndexedBufferGeometryFromGeometry',
	        value: function createIndexedBufferGeometryFromGeometry(geometry) {
	            var numVertices = geometry.vertices.length;
	            var numFaces = geometry.faces.length;
	            var bufferGeom = new THREE.BufferGeometry();
	            var vertices = new Float32Array(numVertices * 3);
	            var indices = new (numFaces * 3 > 65535 ? Uint32Array : Uint16Array)(numFaces * 3);
	
	            for (var i = 0; i < numVertices; i++) {
	                var p = geometry.vertices[i];
	                var i3 = i * 3;
	
	                vertices[i3] = p.x;
	                vertices[i3 + 1] = p.y;
	                vertices[i3 + 2] = p.z;
	            }
	
	            for (var _i = 0; _i < numFaces; _i++) {
	                var f = geometry.faces[_i];
	                var _i2 = _i * 3;
	
	                indices[_i2] = f.a;
	                indices[_i2 + 1] = f.b;
	                indices[_i2 + 2] = f.c;
	            }
	
	            bufferGeom.setIndex(new THREE.BufferAttribute(indices, 1));
	            bufferGeom.addAttribute('position', new THREE.BufferAttribute(vertices, 3));
	
	            return bufferGeom;
	        }
	    }, {
	        key: 'isEqual',
	        value: function isEqual(x1, y1, z1, x2, y2, z2) {
	            var delta = 0.000001;
	
	            return Math.abs(x2 - x1) < delta && Math.abs(y2 - y1) < delta && Math.abs(z2 - z1) < delta;
	        }
	    }, {
	        key: 'appendAnchor',
	        value: function appendAnchor(world, object, node, influence) {
	            var collisionBetweenLinkedBodies = arguments.length <= 4 || arguments[4] === undefined ? true : arguments[4];
	
	            var o1 = this._physijs.id;
	            var o2 = object._physijs.id;
	
	            world.execute('appendAnchor', {
	                obj: o1,
	                obj2: o2,
	                node: node,
	                influence: influence,
	                collisionBetweenLinkedBodies: collisionBetweenLinkedBodies
	            });
	        }
	    }]);
	    return SoftMesh;
	}(_mesh.Mesh);

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ClothMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _mesh = __webpack_require__(412);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ClothMesh = exports.ClothMesh = function (_Mesh) {
	    (0, _inherits3.default)(ClothMesh, _Mesh);
	
	    function ClothMesh(geometry, material) {
	        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	        (0, _classCallCheck3.default)(this, ClothMesh);
	
	        var physParams = params.physics,
	            geomParams = geometry.parameters;
	
	        var mass = physParams.mass || params.mass;
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (ClothMesh.__proto__ || Object.getPrototypeOf(ClothMesh)).call(this, geometry, material, mass));
	
	        _this._physijs.type = 'softClothMesh';
	
	        var verts = geometry.attributes.position.array;
	
	        if (!geomParams.widthSegments) geomParams.widthSegments = 1;
	        if (!geomParams.heightSegments) geomParams.heightSegments = 1;
	
	        var idx00 = 0;
	        var idx01 = geomParams.widthSegments;
	        var idx10 = (geomParams.heightSegments + 1) * (geomParams.widthSegments + 1) - (geomParams.widthSegments + 1);
	        var idx11 = verts.length / 3 - 1;
	
	        _this._physijs.corners = [verts[idx01 * 3], verts[idx01 * 3 + 1], verts[idx01 * 3 + 2], //   ╗
	        verts[idx00 * 3], verts[idx00 * 3 + 1], verts[idx00 * 3 + 2], // ╔
	        verts[idx11 * 3], verts[idx11 * 3 + 1], verts[idx11 * 3 + 2], //       ╝ 
	        verts[idx10 * 3], verts[idx10 * 3 + 1], verts[idx10 * 3 + 2]];
	
	        _this._physijs.segments = [geomParams.widthSegments + 1, geomParams.heightSegments + 1];
	
	        _this._physijs.params = {
	            friction: physParams.friction,
	            damping: physParams.damping,
	            margin: physParams.margin,
	            klst: physParams.klst,
	            kast: physParams.kast,
	            kvst: physParams.kvst,
	            drag: physParams.drag,
	            lift: physParams.lift,
	            piterations: physParams.piterations,
	            viterations: physParams.viterations,
	            diterations: physParams.diterations,
	            citerations: physParams.citerations,
	            anchorHardness: physParams.anchorHardness,
	            rigidHardness: physParams.rigidHardness
	        };
	
	        _this._physijs.mass = mass;
	        return _this;
	    }
	
	    (0, _createClass3.default)(ClothMesh, [{
	        key: 'appendAnchor',
	        value: function appendAnchor(world, object, node, influence) {
	            var collisionBetweenLinkedBodies = arguments.length <= 4 || arguments[4] === undefined ? true : arguments[4];
	
	            var o1 = this._physijs.id;
	            var o2 = object._physijs.id;
	
	            world.execute('appendAnchor', {
	                obj: o1,
	                obj2: o2,
	                node: node,
	                influence: influence,
	                collisionBetweenLinkedBodies: collisionBetweenLinkedBodies
	            });
	        }
	    }]);
	    return ClothMesh;
	}(_mesh.Mesh);

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.RopeMesh = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _line = __webpack_require__(444);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RopeMesh = exports.RopeMesh = function (_Line) {
	  (0, _inherits3.default)(RopeMesh, _Line);
	
	  function RopeMesh(geometry, material) {
	    var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	    (0, _classCallCheck3.default)(this, RopeMesh);
	
	    var physParams = params.physics;
	
	    var mass = physParams.mass || params.mass;
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (RopeMesh.__proto__ || Object.getPrototypeOf(RopeMesh)).call(this, geometry, material, mass));
	
	    _this._physijs.type = 'softRopeMesh';
	
	    var v1 = params.geometry.curve.getPoint(0);
	    var v2 = params.geometry.curve.getPoint(1);
	
	    _this._physijs.data = [v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, params.geometry.points];
	
	    _this._physijs.params = {
	      friction: physParams.friction,
	      damping: physParams.damping,
	      margin: physParams.margin,
	      klst: physParams.klst,
	      kast: physParams.kast,
	      kvst: physParams.kvst,
	      drag: physParams.drag,
	      lift: physParams.lift,
	      piterations: physParams.piterations,
	      viterations: physParams.viterations,
	      diterations: physParams.diterations,
	      citerations: physParams.citerations,
	      anchorHardness: physParams.anchorHardness,
	      rigidHardness: physParams.rigidHardness
	    };
	
	    _this._physijs.mass = mass;
	    return _this;
	  }
	
	  (0, _createClass3.default)(RopeMesh, [{
	    key: 'appendAnchor',
	    value: function appendAnchor(world, object, node, influence) {
	      var collisionBetweenLinkedBodies = arguments.length <= 4 || arguments[4] === undefined ? true : arguments[4];
	
	      var o1 = this._physijs.id;
	      var o2 = object._physijs.id;
	
	      world.execute('appendAnchor', {
	        obj: o1,
	        obj2: o2,
	        node: node,
	        influence: influence,
	        collisionBetweenLinkedBodies: collisionBetweenLinkedBodies
	      });
	    }
	  }]);
	  return RopeMesh;
	}(_line.Line);

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Line = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _eventable = __webpack_require__(410);
	
	var _api = __webpack_require__(409);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Line = exports.Line = function (_THREE$Line) {
	  (0, _inherits3.default)(Line, _THREE$Line);
	
	  function Line(geometry, material, mass) {
	    (0, _classCallCheck3.default)(this, Line);
	
	    if (!geometry) return (0, _possibleConstructorReturn3.default)(_this);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, geometry, material));
	
	    Object.assign(_this, new _eventable.Eventable());
	    _eventable.Eventable.make(Line);
	
	    _this._physijs = {
	      type: null,
	      id: (0, _api.getObjectId)(),
	      mass: mass || 0,
	      touches: [],
	      linearVelocity: new THREE.Vector3(),
	      angularVelocity: new THREE.Vector3()
	    };
	    return _this;
	  }
	
	  (0, _createClass3.default)(Line, [{
	    key: 'applyCentralImpulse',
	    value: function applyCentralImpulse(force) {
	      if (this.world) this.world.execute('applyCentralImpulse', { id: this._physijs.id, x: force.x, y: force.y, z: force.z });
	    }
	  }, {
	    key: 'applyImpulse',
	    value: function applyImpulse(force, offset) {
	      if (this.world) {
	        this.world.execute('applyImpulse', {
	          id: this._physijs.id,
	          impulse_x: force.x,
	          impulse_y: force.y,
	          impulse_z: force.z,
	          x: offset.x,
	          y: offset.y,
	          z: offset.z
	        });
	      }
	    }
	  }, {
	    key: 'applyTorque',
	    value: function applyTorque(force) {
	      if (this.world) {
	        this.world.execute('applyTorque', {
	          id: this._physijs.id,
	          torque_x: force.x,
	          torque_y: force.y,
	          torque_z: force.z
	        });
	      }
	    }
	  }, {
	    key: 'applyCentralForce',
	    value: function applyCentralForce(force) {
	      if (this.world) this.world.execute('applyCentralForce', { id: this._physijs.id, x: force.x, y: force.y, z: force.z });
	    }
	  }, {
	    key: 'applyForce',
	    value: function applyForce(force, offset) {
	      if (this.world) {
	        this.world.execute('applyForce', {
	          id: this._physijs.id,
	          force_x: force.x,
	          force_y: force.y,
	          force_z: force.z,
	          x: offset.x,
	          y: offset.y,
	          z: offset.z
	        });
	      }
	    }
	  }, {
	    key: 'getAngularVelocity',
	    value: function getAngularVelocity() {
	      return this._physijs.angularVelocity;
	    }
	  }, {
	    key: 'setAngularVelocity',
	    value: function setAngularVelocity(velocity) {
	      if (this.world) this.world.execute('setAngularVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z });
	    }
	  }, {
	    key: 'getLinearVelocity',
	    value: function getLinearVelocity() {
	      return this._physijs.linearVelocity;
	    }
	  }, {
	    key: 'setLinearVelocity',
	    value: function setLinearVelocity(velocity) {
	      if (this.world) this.world.execute('setLinearVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z });
	    }
	  }, {
	    key: 'setAngularFactor',
	    value: function setAngularFactor(factor) {
	      if (this.world) this.world.execute('setAngularFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z });
	    }
	  }, {
	    key: 'setLinearFactor',
	    value: function setLinearFactor(factor) {
	      if (this.world) this.world.execute('setLinearFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z });
	    }
	  }, {
	    key: 'setDamping',
	    value: function setDamping(linear, angular) {
	      if (this.world) this.world.execute('setDamping', { id: this._physijs.id, linear: linear, angular: angular });
	    }
	  }, {
	    key: 'setCcdMotionThreshold',
	    value: function setCcdMotionThreshold(threshold) {
	      if (this.world) this.world.execute('setCcdMotionThreshold', { id: this._physijs.id, threshold: threshold });
	    }
	  }, {
	    key: 'setCcdSweptSphereRadius',
	    value: function setCcdSweptSphereRadius(radius) {
	      if (this.world) this.world.execute('setCcdSweptSphereRadius', { id: this._physijs.id, radius: radius });
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new this.constructor(this.geometry, this.material, params).copy(this);
	    }
	  }, {
	    key: 'mass',
	    get: function get() {
	      return this._physijs.mass;
	    },
	    set: function set(mass) {
	      this._physijs.mass = mass;
	      if (this.world) this.world.execute('updateMass', { id: this._physijs.id, mass: mass });
	    }
	  }]);
	  return Line;
	}(THREE.Line);

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _tunning = __webpack_require__(416);
	
	Object.keys(_tunning).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _tunning[key];
	    }
	  });
	});
	
	var _vehicle = __webpack_require__(415);
	
	Object.keys(_vehicle).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _vehicle[key];
	    }
	  });
	});

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Shape = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _defineProperty2 = __webpack_require__(447);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _dec, _desc, _value, _class, _class2, _temp;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var Physijs = _interopRequireWildcard(_index);
	
	var _index2 = __webpack_require__(393);
	
	var _Loop = __webpack_require__(399);
	
	var _World = __webpack_require__(406);
	
	var _CoreObject2 = __webpack_require__(400);
	
	var _decorators = __webpack_require__(394);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var _set = function _set(x, y, z) {
	  undefined.x = x;
	  undefined.y = y;
	  undefined.z = z;
	};
	
	var physicsDefaults = Physijs.default !== false ? (0, _defineProperty3.default)({
	  restitution: 0.3,
	  friction: 0.8,
	  damping: 0,
	  pressure: 100,
	  margin: 0,
	  klst: 0.9,
	  kvst: 0.9
	}, 'klst', 0.9) : false;
	
	var Shape = (_dec = (0, _decorators.deprecate)('0.0.11'), (_class = (_temp = _class2 = function (_CoreObject) {
	  (0, _inherits3.default)(Shape, _CoreObject);
	
	  function Shape() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var type = arguments.length <= 1 || arguments[1] === undefined ? 'mesh' : arguments[1];
	    (0, _classCallCheck3.default)(this, Shape);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).call(this));
	
	    _this.__c_rot = false;
	    _this._wait = [];
	    _this.helpers = {
	      box: null,
	      boundingBox: null,
	      edges: null,
	      faceNormals: null
	    };
	
	
	    if (params instanceof THREE.Object3D) {
	      _this.params = (0, _index2.extend)({
	        pos: { x: params.position.x, y: params.position.y, z: params.position.z },
	        rot: { x: params.rotation.x, y: params.rotation.y, z: params.rotation.z },
	        scale: { x: params.scale.x, y: params.scale.y, z: params.scale.z },
	        mass: params.mass,
	        physics: Boolean(params._physijs)
	      }, Shape.defaults);
	    } else _this.params = (0, _index2.extend)(params, Shape.defaults);
	
	    if (params instanceof THREE.Object3D) _this.native = params;
	
	    _this.type = type;
	    _this.physics = Physijs.default !== false;
	    return _this;
	  }
	
	  (0, _createClass3.default)(Shape, [{
	    key: 'wait',
	    value: function wait(promise) {
	      this._wait.push(promise);
	    }
	  }, {
	    key: 'wrap',
	    value: function wrap() {
	      var _this2 = this;
	
	      for (var _len = arguments.length, tags = Array(_len), _key = 0; _key < _len; _key++) {
	        tags[_key] = arguments[_key];
	      }
	
	      if (this._wait.length) {
	        return new Promise(function (resolve, reject) {
	          Promise.all(_this2._wait).then(function () {
	            var _native = _this2.native,
	                _params = _this2.params,
	                _params_helpers = _params.helpers;
	
	            if (!_native) reject();
	
	            if (tags.indexOf('no-shadows') < 0) {
	              _native.castShadow = _params.shadow.cast;
	              _native.receiveShadow = _params.shadow.receive;
	            }
	
	            if (tags.indexOf('no-transforms') < 0) {
	              if (!_params.softbody) {
	                var _params_pos = _params.pos,
	                    _params_rot = _params.rot,
	                    _params_scale = _params.scale;
	
	                _this2.position.set(_params_pos.x, _params_pos.y, _params_pos.z);
	
	                _this2.rotation.set(_params_rot.x, _params_rot.y, _params_rot.z);
	
	                _this2.scale.set(_params_scale.x, _params_scale.y, _params_scale.z);
	              }
	            }
	
	            // Box helper.
	            if (_params_helpers.box) {
	              _this2.helpers.box = new THREE.BoxHelper(_native);
	            }
	
	            // Bounding box helper.
	            if (_params_helpers.boundingBox) {
	              (0, _index2.extend)(_params_helpers.boundingBox, {
	                color: 0xffffff
	              });
	
	              _this2.helpers.boundingBox = new THREE.BoundingBoxHelper(_native, _params_helpers.boundingBox.color ? _params_helpers.boundingBox.color : 0xffffff);
	            }
	
	            // Edges helper.
	            if (_params_helpers.edges) {
	              (0, _index2.extend)(_params_helpers.edges, {
	                color: 0xffffff
	              });
	
	              _this2.helpers.edges = new THREE.EdgesHelper(_native, _params_helpers.edges.color);
	            }
	
	            // faceNormals helper.
	            if (_params_helpers.faceNormals) {
	              var _params_helpers_faceNormals = _params_helpers.faceNormals;
	
	              (0, _index2.extend)(_params_helpers_faceNormals, {
	                size: 2,
	                color: 0xffffff,
	                linewidth: 1
	              });
	
	              _this2.helpers.faceNormals = new THREE.FaceNormalsHelper(_native, _params_helpers_faceNormals.size, _params_helpers_faceNormals.color, _params_helpers_faceNormals.linewidth);
	            }
	
	            // vertexNormals helper.
	            if (_params_helpers.vertexNormals) {
	              var _params_helpers_vertexNormals = _params_helpers.vertexNormals;
	
	              (0, _index2.extend)(_params_helpers_vertexNormals, {
	                size: 2,
	                color: 0xffffff,
	                linewidth: 1
	              });
	
	              _this2.helpers.vertexNormals = new THREE.VertexNormalsHelper(_native, _params_helpers_vertexNormals.size, _params_helpers_vertexNormals.color, _params_helpers_vertexNormals.linewidth);
	            }
	
	            resolve(_this2);
	          });
	        });
	      } else {
	        return new Promise(function (resolve, reject) {
	          var _native = _this2.native,
	              _params = _this2.params,
	              _params_helpers = _params.helpers;
	
	          if (!_native) reject();
	
	          if (tags.indexOf('no-shadows') < 0) {
	            _native.castShadow = _params.shadow.cast;
	            _native.receiveShadow = _params.shadow.receive;
	          }
	
	          if (tags.indexOf('no-transforms') < 0) {
	            if (!_params.softbody) {
	              var _params_pos = _params.pos,
	                  _params_rot = _params.rot,
	                  _params_scale = _params.scale;
	
	              _this2.position.set(_params_pos.x, _params_pos.y, _params_pos.z);
	
	              _this2.rotation.set(_params_rot.x, _params_rot.y, _params_rot.z);
	
	              _this2.scale.set(_params_scale.x, _params_scale.y, _params_scale.z);
	            }
	          }
	
	          // Box helper.
	          if (_params_helpers.box) {
	            _this2.helpers.box = new THREE.BoxHelper(_native);
	          }
	
	          // Bounding box helper.
	          if (_params_helpers.boundingBox) {
	            (0, _index2.extend)(_params_helpers.boundingBox, {
	              color: 0xffffff
	            });
	
	            _this2.helpers.boundingBox = new THREE.BoundingBoxHelper(_native, _params_helpers.boundingBox.color ? _params_helpers.boundingBox.color : 0xffffff);
	          }
	
	          // Edges helper.
	          if (_params_helpers.edges) {
	            (0, _index2.extend)(_params_helpers.edges, {
	              color: 0xffffff
	            });
	
	            _this2.helpers.edges = new THREE.EdgesHelper(_native, _params_helpers.edges.color);
	          }
	
	          // faceNormals helper.
	          if (_params_helpers.faceNormals) {
	            var _params_helpers_faceNormals = _params_helpers.faceNormals;
	
	            (0, _index2.extend)(_params_helpers_faceNormals, {
	              size: 2,
	              color: 0xffffff,
	              linewidth: 1
	            });
	
	            _this2.helpers.faceNormals = new THREE.FaceNormalsHelper(_native, _params_helpers_faceNormals.size, _params_helpers_faceNormals.color, _params_helpers_faceNormals.linewidth);
	          }
	
	          // vertexNormals helper.
	          if (_params_helpers.vertexNormals) {
	            var _params_helpers_vertexNormals = _params_helpers.vertexNormals;
	
	            (0, _index2.extend)(_params_helpers_vertexNormals, {
	              size: 2,
	              color: 0xffffff,
	              linewidth: 1
	            });
	
	            _this2.helpers.vertexNormals = new THREE.VertexNormalsHelper(_native, _params_helpers_vertexNormals.size, _params_helpers_vertexNormals.color, _params_helpers_vertexNormals.linewidth);
	          }
	
	          resolve(_this2);
	        });
	      }
	    }
	  }, {
	    key: 'addTo',
	    value: function addTo(parent) {
	      var _this3 = this;
	
	      var _helpers = this.helpers;
	      this.parent = parent;
	
	      if (this._wait.length) {
	        return new Promise(function (resolve, reject) {
	          Promise.all(_this3._wait).then(function () {
	            var _native = _this3.native,
	                _params = _this3.params,
	                _params_helpers = _params.helpers,
	                _parent = _this3.parent;
	
	            if (!_native) reject();
	
	            var parentNative = _parent instanceof _World.World ? _parent.scene : _parent.native;
	
	            parentNative.add(_native);
	            _this3.parent.children.push(_this3);
	
	            if (_params.softbody) {
	              _native.position.set(0, 0, 0);
	              _native.rotation.set(0, 0, 0);
	            }
	
	            if (_params_helpers.box) parentNative.add(_helpers.box);
	            if (_params_helpers.boundingBox) parentNative.add(_helpers.boundingBox);
	            if (_params_helpers.edges) parentNative.add(_helpers.edges);
	            if (_params_helpers.faceNormals) parentNative.add(_helpers.faceNormals);
	            if (_params_helpers.vertexNormals) parentNative.add(_helpers.vertexNormals);
	
	            resolve(_this3);
	
	            _native.addEventListener('collision', function () {
	              _this3.emit('collide');
	            });
	          });
	        });
	      } else {
	        return new Promise(function (resolve, reject) {
	          var _native = _this3.native,
	              _params = _this3.params,
	              _params_helpers = _params.helpers,
	              _parent = _this3.parent;
	
	          if (!_native) reject();
	
	          var parentNative = _parent instanceof _World.World ? _parent.scene : _parent.native;
	
	          parentNative.add(_native);
	          _this3.parent.children.push(_this3);
	
	          if (_params.softbody) {
	            _native.position.set(0, 0, 0);
	            _native.rotation.set(0, 0, 0);
	          }
	
	          if (_params_helpers.box) parentNative.add(_helpers.box);
	          if (_params_helpers.boundingBox) parentNative.add(_helpers.boundingBox);
	          if (_params_helpers.edges) parentNative.add(_helpers.edges);
	          if (_params_helpers.faceNormals) parentNative.add(_helpers.faceNormals);
	          if (_params_helpers.vertexNormals) parentNative.add(_helpers.vertexNormals);
	
	          resolve(_this3);
	
	          _native.addEventListener('collision', function () {
	            _this3.emit('collide');
	          });
	        });
	      }
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Shape(this.params, this.type).copy(this);
	    }
	  }, {
	    key: 'copy',
	    value: function copy(source) {
	      var sourceNative = source.native;
	
	      if (sourceNative) {
	        if (source.params.softbody) this.native = new sourceNative.constructor(sourceNative.tempGeometry.clone(), sourceNative.material, source.params);else this.native = sourceNative.clone(source.params);
	
	        this.native.mass = sourceNative.mass;
	
	        this.params = source.params;
	
	        this.wrap();
	
	        this.position.copy(source.position);
	        this.rotation.copy(source.rotation);
	        this.quaternion.copy(source.quaternion);
	      } else this.params = source.params;
	
	      return this;
	    }
	  }, {
	    key: 'getParent',
	    value: function getParent() {
	      return this.parent;
	    }
	  }, {
	    key: 'getWorld',
	    value: function getWorld() {
	      var p = this.parent;
	
	      while (!(p instanceof _World.World)) {
	        if (p) p = p.parent;else return false;
	      }
	
	      return p;
	    }
	  }, {
	    key: 'G_',
	    value: function G_() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      if (this.buildGeometry) {
	        this.native.geometry = this.buildGeometry(this.updateParams({ geometry: params }));
	      }
	    }
	  }, {
	    key: 'M_',
	    value: function M_() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      if (this.params.material.kind !== params.kind) this.native.material = (0, _index2.loadMaterial)(this.updateParams({ material: params }).material);else {
	        this.updateParams({ material: params });
	
	        for (key in params) {
	          this.native.material[key] = params[key];
	        }
	      }
	    }
	  }, {
	    key: 'proccessSoftbodyGeometry',
	    value: function proccessSoftbodyGeometry(geometry) {
	      var _params = this.params;
	
	      geometry.rotateX(_params.rot.x);
	      geometry.rotateY(_params.rot.y);
	      geometry.rotateZ(_params.rot.z);
	
	      geometry.scale(_params.scale.x, _params.scale.y, _params.scale.z);
	
	      geometry.translate(_params.pos.x, _params.pos.y, _params.pos.z);
	    }
	
	    /* Access private data */
	
	  }, {
	    key: 'setAngularVelocity',
	
	
	    /* Physics */
	
	    value: function setAngularVelocity() {
	      var _native2;
	
	      return (_native2 = this.native).setAngularVelocity.apply(_native2, arguments);
	    }
	  }, {
	    key: 'setLinearVelocity',
	    value: function setLinearVelocity() {
	      var _native3;
	
	      return (_native3 = this.native).setLinearVelocity.apply(_native3, arguments);
	    }
	  }, {
	    key: 'applyCentralImpulse',
	    value: function applyCentralImpulse() {
	      var _native4;
	
	      return (_native4 = this.native).applyCentralImpulse.apply(_native4, arguments);
	    }
	  }, {
	    key: 'applyImpulse',
	    value: function applyImpulse() {
	      var _native5;
	
	      return (_native5 = this.native).applyImpulse.apply(_native5, arguments);
	    }
	  }, {
	    key: 'applyTorque',
	    value: function applyTorque() {
	      var _native6;
	
	      return (_native6 = this.native).applyTorque.apply(_native6, arguments);
	    }
	  }, {
	    key: 'applyCentralForce',
	    value: function applyCentralForce() {
	      var _native7;
	
	      return (_native7 = this.native).applyCentralForce.apply(_native7, arguments);
	    }
	  }, {
	    key: 'applyForce',
	    value: function applyForce() {
	      var _native8;
	
	      return (_native8 = this.native).applyForce.apply(_native8, arguments);
	    }
	  }, {
	    key: 'getAngularVelocity',
	    value: function getAngularVelocity() {
	      var _native9;
	
	      return (_native9 = this.native).getAngularVelocity.apply(_native9, arguments);
	    }
	  }, {
	    key: 'getLinearVelocity',
	    value: function getLinearVelocity() {
	      var _native10;
	
	      return (_native10 = this.native).getLinearVelocity.apply(_native10, arguments);
	    }
	  }, {
	    key: 'setAngularFactor',
	    value: function setAngularFactor() {
	      var _native11;
	
	      return (_native11 = this.native).setAngularFactor.apply(_native11, arguments);
	    }
	  }, {
	    key: 'setLinearFactor',
	    value: function setLinearFactor() {
	      var _native12;
	
	      return (_native12 = this.native).setLinearFactor.apply(_native12, arguments);
	    }
	  }, {
	    key: 'setDamping',
	    value: function setDamping() {
	      var _native13;
	
	      return (_native13 = this.native).setDamping.apply(_native13, arguments);
	    }
	  }, {
	    key: 'setCcdMotionThreshold',
	    value: function setCcdMotionThreshold() {
	      var _native14;
	
	      return (_native14 = this.native).setCcdMotionThreshold.apply(_native14, arguments);
	    }
	  }, {
	    key: 'setCcdSweptSphereRadius',
	    value: function setCcdSweptSphereRadius() {
	      var _native15;
	
	      return (_native15 = this.native).setCcdSweptSphereRadius.apply(_native15, arguments);
	    }
	  }, {
	    key: 'appendAnchor',
	    value: function appendAnchor(world, object, node, influence) {
	      var collisionBetweenLinkedBodies = arguments.length <= 4 || arguments[4] === undefined ? true : arguments[4];
	
	      return this.native.appendAnchor(world.scene, object.native, node, influence, collisionBetweenLinkedBodies);
	    }
	
	    /* Three.js */
	
	  }, {
	    key: 'raycast',
	    value: function raycast() {
	      var _native16;
	
	      return (_native16 = this.native).lookAt.apply(_native16, arguments);
	    }
	
	    /* API */
	
	  }, {
	    key: 'follow',
	    value: function follow(curve) {
	      var _this4 = this;
	
	      var time = arguments.length <= 1 || arguments[1] === undefined ? 1000 : arguments[1];
	      var loop = arguments[2];
	
	      var gEnd = time;
	
	      var animation = new _Loop.Loop(function (clock) {
	        var u = clock.getElapsedTime() * 1000 / gEnd,
	            vec1 = curve.getPoint(u % 1),
	            vec2 = curve.getPoint((u + 0.01) % 1);
	
	        _this4.position.set(vec1.x, vec1.y, vec1.z);
	        _this4.native.lookAt(vec2);
	      });
	
	      this.getWorld().addLoop(animation);
	
	      animation.start();
	
	      if (loop) {
	        setInterval(function () {
	          animation.stop();
	
	          animation = new _Loop.Loop(function (clock) {
	            var u = clock.getElapsedTime() * 1000 / gEnd,
	                vec1 = curve.getPoint(u % 1),
	                vec2 = curve.getPoint((u + 0.01) % 1);
	
	            _this4.position.set(vec1.x, vec1.y, vec1.z);
	            _this4.native.lookAt(vec2);
	          });
	
	          _this4.getWorld().addLoop(animation);
	
	          animation.start();
	        }, time);
	      } else {
	        setTimeout(function () {
	          animation.stop();
	          _this4.getWorld().removeLoop(animation);
	        }, time);
	      }
	    }
	
	    /* VISIBILITY */
	
	  }, {
	    key: 'show',
	    value: function show() {
	      this.native.visible = true;
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.native.visible = false;
	    }
	  }, {
	    key: 'position',
	    get: function get() {
	      return this.native.position;
	    },
	    set: function set(vector3) {
	      var pos = this._native.position,
	          native = this._native;
	
	      Object.defineProperties(pos, {
	        x: {
	          get: function get() {
	            return this._x;
	          },
	          set: function set(x) {
	            native.__dirtyPosition = true;
	            this._x = x;
	          }
	        },
	        y: {
	          get: function get() {
	            return this._y;
	          },
	          set: function set(y) {
	            native.__dirtyPosition = true;
	            this._y = y;
	          }
	        },
	        z: {
	          get: function get() {
	            return this._z;
	          },
	          set: function set(z) {
	            native.__dirtyPosition = true;
	            this._z = z;
	          }
	        }
	      });
	
	      native.__dirtyPosition = true;
	
	      pos.copy(vector3);
	    }
	  }, {
	    key: 'quaternion',
	    get: function get() {
	      this.__c_rot = true;
	      return this.native.quaternion;
	    },
	    set: function set(quaternion) {
	      var _this5 = this;
	
	      var quat = this._native.quaternion,
	          native = this._native;
	
	      quat.copy(quaternion);
	
	      quat.onChange(function () {
	        if (_this5.__c_rot) {
	          if (native.__dirtyRotation === true) {
	            _this5.__c_rot = false;
	            native.__dirtyRotation = false;
	          }
	          native.__dirtyRotation = true;
	        }
	      });
	    }
	  }, {
	    key: 'rotation',
	    get: function get() {
	      this.__c_rot = true;
	      return this._native.rotation;
	    },
	    set: function set(euler) {
	      var _this6 = this;
	
	      var rot = this._native.rotation,
	          native = this._native;
	
	      rot.copy(euler);
	
	      rot.onChange(function () {
	        if (_this6.__c_rot) {
	          _this6.quaternion.copy(new THREE.Quaternion().setFromEuler(rot));
	          native.__dirtyRotation = true;
	        }
	      });
	    }
	  }, {
	    key: 'scale',
	    get: function get() {
	      return this.native.scale;
	    },
	    set: function set(vector3) {
	      this.native.scale.copy(vector3);
	      return this.native.scale;
	    }
	  }, {
	    key: 'M_color',
	    set: function set(val) {
	      this.updateParams({ material: { color: val } });
	      this.native.material.color = new THREE.Color(val);
	    },
	    get: function get() {
	      return this.native.material.color;
	    }
	  }, {
	    key: 'material',
	    get: function get() {
	      return this.native.material;
	    },
	    set: function set(material) {
	      this.native.material = material;
	    }
	  }, {
	    key: 'geometry',
	    get: function get() {
	      return this.native.geometry;
	    },
	    set: function set(geometry) {
	      this.native.geometry = geometry;
	    }
	  }, {
	    key: 'native',
	    get: function get() {
	      return this._native;
	    },
	    set: function set(mesh) {
	      this._native = mesh;
	
	      if (mesh instanceof THREE.Object3D) {
	        this.position = mesh.position.clone();
	        this.quaternion = mesh.quaternion.clone();
	        this.rotation = mesh.rotation.clone();
	      }
	    }
	  }]);
	  return Shape;
	}(_CoreObject2.CoreObject), _class2.defaults = {
	  mass: 10,
	  build: true,
	  softbody: false,
	  geometry: {},
	
	  shadow: {
	    cast: true,
	    receive: true
	  },
	
	  material: {
	    kind: 'basic'
	  },
	
	  helpers: {
	    box: false,
	    boundingBox: false,
	    edges: false,
	    faceNormals: false
	  },
	
	  pos: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  rot: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  scale: {
	    x: 1,
	    y: 1,
	    z: 1,
	    set: _set
	  },
	
	  target: {
	    x: 0,
	    y: 0,
	    z: 0,
	    set: _set
	  },
	
	  physics: physicsDefaults
	}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'follow', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'follow'), _class.prototype)), _class));
	exports.Shape = Shape;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(303);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _firstPersonControls = __webpack_require__(449);
	
	Object.keys(_firstPersonControls).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _firstPersonControls[key];
	    }
	  });
	});
	
	var _orbitControls = __webpack_require__(450);
	
	Object.keys(_orbitControls).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _orbitControls[key];
	    }
	  });
	});
	
	var _index = __webpack_require__(452);
	
	Object.keys(_index).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index[key];
	    }
	  });
	});
	
	var _Group = __webpack_require__(464);
	
	Object.keys(_Group).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Group[key];
	    }
	  });
	});
	
	var _Loop = __webpack_require__(399);
	
	Object.keys(_Loop).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Loop[key];
	    }
	  });
	});
	
	var _List = __webpack_require__(466);
	
	Object.keys(_List).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _List[key];
	    }
	  });
	});

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.firstPersonControls = firstPersonControls;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var PI_2 = Math.PI / 2;
	
	function firstPersonControls(object) {
	  var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	  return function (world) {
	    var target = (0, _index.extend)(params, {
	      block: document.getElementById('blocker'),
	      speed: 1,
	      ypos: 1
	    });
	
	    var controls = new function (camera, mesh, params) {
	      var velocityFactor = 1;
	      var runVelocity = 0.25;
	
	      mesh.setAngularFactor({ x: 0, y: 0, z: 0 });
	
	      /* Init */
	      var scope = this;
	      var player = mesh,
	          pitchObject = new THREE.Object3D();
	
	      pitchObject.add(camera.native);
	
	      var yawObject = new THREE.Object3D();
	
	      yawObject.position.y = params.ypos; // eyes are 2 meters above the ground
	      yawObject.add(pitchObject);
	
	      var quat = new THREE.Quaternion();
	
	      var canJump = false,
	
	      // Moves.
	      moveForward = false,
	          moveBackward = false,
	          moveLeft = false,
	          moveRight = false;
	
	      player.addEventListener('collision', function (otherObject, v, r, contactNormal) {
	        if (contactNormal.y < 0.5) // Use a "good" threshold value between 0 and 1 here!
	          canJump = true;
	      });
	
	      function onMouseMove(event) {
	        if (scope.enabled === false) return;
	
	        var movementX = typeof event.movementX === 'number' ? event.movementX : typeof event.mozMovementX === 'number' ? event.mozMovementX : typeof event.getMovementX === 'function' ? event.getMovementX() : 0;
	        var movementY = typeof event.movementY === 'number' ? event.movementY : typeof event.mozMovementY === 'number' ? event.mozMovementY : typeof event.getMovementY === 'function' ? event.getMovementY() : 0;
	
	        yawObject.rotation.y -= movementX * 0.002;
	        pitchObject.rotation.x -= movementY * 0.002;
	
	        pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));
	      }
	
	      function onKeyDown(event) {
	        switch (event.keyCode) {
	          case 38: // up
	          case 87:
	            // w
	            moveForward = true;
	            break;
	
	          case 37: // left
	          case 65:
	            // a
	            moveLeft = true;
	            break;
	
	          case 40: // down
	          case 83:
	            // s
	            moveBackward = true;
	            break;
	
	          case 39: // right
	          case 68:
	            // d
	            moveRight = true;
	            break;
	
	          case 32:
	            // space
	            if (canJump === true) {
	              player.applyCentralImpulse({ x: 0, y: 300, z: 0 });
	            }
	            canJump = false;
	            break;
	
	          case 16:
	            // shift
	            runVelocity = 0.5;
	            break;
	
	          default:
	        }
	      }
	
	      function onKeyUp(event) {
	        switch (event.keyCode) {
	          case 38: // up
	          case 87:
	            // w
	            moveForward = false;
	            break;
	
	          case 37: // left
	          case 65:
	            // a
	            moveLeft = false;
	            break;
	
	          case 40: // down
	          case 83:
	            // a
	            moveBackward = false;
	            break;
	
	          case 39: // right
	          case 68:
	            // d
	            moveRight = false;
	            break;
	
	          case 16:
	            // shift
	            runVelocity = 0.25;
	            break;
	
	          default:
	        }
	      }
	
	      document.body.addEventListener('mousemove', onMouseMove, false);
	      document.body.addEventListener('keydown', onKeyDown, false);
	      document.body.addEventListener('keyup', onKeyUp, false);
	
	      this.enabled = false;
	
	      this.getObject = function () {
	        return yawObject;
	      };
	
	      this.getDirection = function (targetVec) {
	        targetVec.set(0, 0, -1);
	        quat.multiplyVector3(targetVec);
	      };
	
	      // Moves the camera to the Cannon.js object position
	      // and adds velocity to the object if the run key is down.
	      var inputVelocity = new THREE.Vector3(),
	          euler = new THREE.Euler();
	
	      this.update = function (delta) {
	        if (scope.enabled === false) return;
	
	        delta = delta || 0.5;
	        delta = Math.min(delta, 0.5);
	
	        inputVelocity.set(0, 0, 0);
	
	        var speed = velocityFactor * delta * params.speed * runVelocity;
	
	        if (moveForward) inputVelocity.z = -speed;
	        if (moveBackward) inputVelocity.z = speed;
	        if (moveLeft) inputVelocity.x = -speed;
	        if (moveRight) inputVelocity.x = speed;
	
	        // Convert velocity to world coordinates
	        euler.x = pitchObject.rotation.x;
	        euler.y = yawObject.rotation.y;
	        euler.order = 'XYZ';
	
	        quat.setFromEuler(euler);
	
	        inputVelocity.applyQuaternion(quat);
	
	        player.applyCentralImpulse({ x: inputVelocity.x * 10, y: 0, z: inputVelocity.z * 10 });
	        player.setAngularVelocity({ x: inputVelocity.z * 10, y: 0, z: -inputVelocity.x * 10 });
	        player.setAngularFactor({ x: 0, y: 0, z: 0 });
	
	        yawObject.position.copy(player.position);
	      };
	    }(world.camera, object.native, target);
	
	    if ('pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document) {
	      (function () {
	        var element = document.body;
	
	        world.pointerlockchange = function () {
	          if (document.pointerLockElement === element || document.mozPointerLockElement === element || document.webkitPointerLockElement === element) {
	            controls.enabled = true;
	            target.block.style.display = 'none';
	          } else {
	            controls.enabled = false;
	            target.block.style.display = 'block';
	          }
	        };
	
	        document.addEventListener('pointerlockchange', world.pointerlockchange, false);
	        document.addEventListener('mozpointerlockchange', world.pointerlockchange, false);
	        document.addEventListener('webkitpointerlockchange', world.pointerlockchange, false);
	
	        world.pointerlockerror = function () {
	          console.warn('Pointer lock error.');
	        };
	
	        document.addEventListener('pointerlockerror', world.pointerlockerror, false);
	        document.addEventListener('mozpointerlockerror', world.pointerlockerror, false);
	        document.addEventListener('webkitpointerlockerror', world.pointerlockerror, false);
	
	        target.block.addEventListener('click', function () {
	          element.requestPointerLock = element.requestPointerLock || element.mozRequestPointerLock || element.webkitRequestPointerLock;
	
	          element.requestFullscreen = element.requestFullscreen || element.mozRequestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;
	
	          if (/Firefox/i.test(navigator.userAgent)) {
	            (function () {
	              var fullscreenchange = function fullscreenchange() {
	                if (document.fullscreenElement === element || document.mozFullscreenElement === element || document.mozFullScreenElement === element) {
	                  document.removeEventListener('fullscreenchange', fullscreenchange);
	                  document.removeEventListener('mozfullscreenchange', fullscreenchange);
	
	                  element.requestPointerLock();
	                }
	              };
	
	              document.addEventListener('fullscreenchange', fullscreenchange, false);
	              document.addEventListener('mozfullscreenchange', fullscreenchange, false);
	
	              element.requestFullscreen();
	            })();
	          } else element.requestPointerLock();
	        });
	      })();
	    } else console.warn('Your browser does not support the PointerLock WHS.API.');
	
	    function callback(world) {
	      world.scene.add(world.controls.getObject());
	    }
	
	    return [controls, callback];
	  };
	}

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.orbitControls = orbitControls;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _threeOrbitControls = __webpack_require__(451);
	
	var _threeOrbitControls2 = _interopRequireDefault(_threeOrbitControls);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var ThreeOrbitControls = (0, _threeOrbitControls2.default)(THREE);
	
	function orbitControls(object) {
	  return function (world) {
	    var controls = new ThreeOrbitControls(world.camera.native, world.renderer.domElement);
	
	    if (object && object.__whsobject) {
	      var target = object ? object.mesh.position : new THREE.Vector3(0, 0, 0);
	
	      controls.target = target;
	    } else if (object instanceof THREE.Vector3) controls.target.copy(object);
	
	    return controls;
	  };
	}

/***/ },
/* 451 */
/***/ function(module, exports) {

	module.exports = function(THREE) {
		var MOUSE = THREE.MOUSE
		if (!MOUSE)
			MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };
	
		/**
		 * @author qiao / https://github.com/qiao
		 * @author mrdoob / http://mrdoob.com
		 * @author alteredq / http://alteredqualia.com/
		 * @author WestLangley / http://github.com/WestLangley
		 * @author erich666 / http://erichaines.com
		 */
		/*global THREE, console */
	
		function OrbitConstraint ( object ) {
	
			this.object = object;
	
			// "target" sets the location of focus, where the object orbits around
			// and where it pans with respect to.
			this.target = new THREE.Vector3();
	
			// Limits to how far you can dolly in and out ( PerspectiveCamera only )
			this.minDistance = 0;
			this.maxDistance = Infinity;
	
			// Limits to how far you can zoom in and out ( OrthographicCamera only )
			this.minZoom = 0;
			this.maxZoom = Infinity;
	
			// How far you can orbit vertically, upper and lower limits.
			// Range is 0 to Math.PI radians.
			this.minPolarAngle = 0; // radians
			this.maxPolarAngle = Math.PI; // radians
	
			// How far you can orbit horizontally, upper and lower limits.
			// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].
			this.minAzimuthAngle = - Infinity; // radians
			this.maxAzimuthAngle = Infinity; // radians
	
			// Set to true to enable damping (inertia)
			// If damping is enabled, you must call controls.update() in your animation loop
			this.enableDamping = false;
			this.dampingFactor = 0.25;
	
			////////////
			// internals
	
			var scope = this;
	
			var EPS = 0.000001;
	
			// Current position in spherical coordinate system.
			var theta;
			var phi;
	
			// Pending changes
			var phiDelta = 0;
			var thetaDelta = 0;
			var scale = 1;
			var panOffset = new THREE.Vector3();
			var zoomChanged = false;
	
			// API
	
			this.getPolarAngle = function () {
	
				return phi;
	
			};
	
			this.getAzimuthalAngle = function () {
	
				return theta;
	
			};
	
			this.rotateLeft = function ( angle ) {
	
				thetaDelta -= angle;
	
			};
	
			this.rotateUp = function ( angle ) {
	
				phiDelta -= angle;
	
			};
	
			// pass in distance in world space to move left
			this.panLeft = function() {
	
				var v = new THREE.Vector3();
	
				return function panLeft ( distance ) {
	
					var te = this.object.matrix.elements;
	
					// get X column of matrix
					v.set( te[ 0 ], te[ 1 ], te[ 2 ] );
					v.multiplyScalar( - distance );
	
					panOffset.add( v );
	
				};
	
			}();
	
			// pass in distance in world space to move up
			this.panUp = function() {
	
				var v = new THREE.Vector3();
	
				return function panUp ( distance ) {
	
					var te = this.object.matrix.elements;
	
					// get Y column of matrix
					v.set( te[ 4 ], te[ 5 ], te[ 6 ] );
					v.multiplyScalar( distance );
	
					panOffset.add( v );
	
				};
	
			}();
	
			// pass in x,y of change desired in pixel space,
			// right and down are positive
			this.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {
	
				if ( scope.object instanceof THREE.PerspectiveCamera ) {
	
					// perspective
					var position = scope.object.position;
					var offset = position.clone().sub( scope.target );
					var targetDistance = offset.length();
	
					// half of the fov is center to top of screen
					targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );
	
					// we actually don't use screenWidth, since perspective camera is fixed to screen height
					scope.panLeft( 2 * deltaX * targetDistance / screenHeight );
					scope.panUp( 2 * deltaY * targetDistance / screenHeight );
	
				} else if ( scope.object instanceof THREE.OrthographicCamera ) {
	
					// orthographic
					scope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );
					scope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );
	
				} else {
	
					// camera neither orthographic or perspective
					console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );
	
				}
	
			};
	
			this.dollyIn = function ( dollyScale ) {
	
				if ( scope.object instanceof THREE.PerspectiveCamera ) {
	
					scale /= dollyScale;
	
				} else if ( scope.object instanceof THREE.OrthographicCamera ) {
	
					scope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );
					scope.object.updateProjectionMatrix();
					zoomChanged = true;
	
				} else {
	
					console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
	
				}
	
			};
	
			this.dollyOut = function ( dollyScale ) {
	
				if ( scope.object instanceof THREE.PerspectiveCamera ) {
	
					scale *= dollyScale;
	
				} else if ( scope.object instanceof THREE.OrthographicCamera ) {
	
					scope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );
					scope.object.updateProjectionMatrix();
					zoomChanged = true;
	
				} else {
	
					console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
	
				}
	
			};
	
			this.update = function() {
	
				var offset = new THREE.Vector3();
	
				// so camera.up is the orbit axis
				var quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );
				var quatInverse = quat.clone().inverse();
	
				var lastPosition = new THREE.Vector3();
				var lastQuaternion = new THREE.Quaternion();
	
				return function () {
	
					var position = this.object.position;
	
					offset.copy( position ).sub( this.target );
	
					// rotate offset to "y-axis-is-up" space
					offset.applyQuaternion( quat );
	
					// angle from z-axis around y-axis
	
					theta = Math.atan2( offset.x, offset.z );
	
					// angle from y-axis
	
					phi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );
	
					theta += thetaDelta;
					phi += phiDelta;
	
					// restrict theta to be between desired limits
					theta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );
	
					// restrict phi to be between desired limits
					phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );
	
					// restrict phi to be betwee EPS and PI-EPS
					phi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );
	
					var radius = offset.length() * scale;
	
					// restrict radius to be between desired limits
					radius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );
	
					// move target to panned location
					this.target.add( panOffset );
	
					offset.x = radius * Math.sin( phi ) * Math.sin( theta );
					offset.y = radius * Math.cos( phi );
					offset.z = radius * Math.sin( phi ) * Math.cos( theta );
	
					// rotate offset back to "camera-up-vector-is-up" space
					offset.applyQuaternion( quatInverse );
	
					position.copy( this.target ).add( offset );
	
					this.object.lookAt( this.target );
	
					if ( this.enableDamping === true ) {
	
						thetaDelta *= ( 1 - this.dampingFactor );
						phiDelta *= ( 1 - this.dampingFactor );
	
					} else {
	
						thetaDelta = 0;
						phiDelta = 0;
	
					}
	
					scale = 1;
					panOffset.set( 0, 0, 0 );
	
					// update condition is:
					// min(camera displacement, camera rotation in radians)^2 > EPS
					// using small-angle approximation cos(x/2) = 1 - x^2 / 8
	
					if ( zoomChanged ||
						 lastPosition.distanceToSquared( this.object.position ) > EPS ||
						8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {
	
						lastPosition.copy( this.object.position );
						lastQuaternion.copy( this.object.quaternion );
						zoomChanged = false;
	
						return true;
	
					}
	
					return false;
	
				};
	
			}();
	
		};
	
	
		// This set of controls performs orbiting, dollying (zooming), and panning. It maintains
		// the "up" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is
		// supported.
		//
		//    Orbit - left mouse / touch: one finger move
		//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish
		//    Pan - right mouse, or arrow keys / touch: three finter swipe
	
		function OrbitControls ( object, domElement ) {
	
			var constraint = new OrbitConstraint( object );
	
			this.domElement = ( domElement !== undefined ) ? domElement : document;
	
			// API
	
			Object.defineProperty( this, 'constraint', {
	
				get: function() {
	
					return constraint;
	
				}
	
			} );
	
			this.getPolarAngle = function () {
	
				return constraint.getPolarAngle();
	
			};
	
			this.getAzimuthalAngle = function () {
	
				return constraint.getAzimuthalAngle();
	
			};
	
			// Set to false to disable this control
			this.enabled = true;
	
			// center is old, deprecated; use "target" instead
			this.center = this.target;
	
			// This option actually enables dollying in and out; left as "zoom" for
			// backwards compatibility.
			// Set to false to disable zooming
			this.enableZoom = true;
			this.zoomSpeed = 1.0;
	
			// Set to false to disable rotating
			this.enableRotate = true;
			this.rotateSpeed = 1.0;
	
			// Set to false to disable panning
			this.enablePan = true;
			this.keyPanSpeed = 7.0;	// pixels moved per arrow key push
	
			// Set to true to automatically rotate around the target
			// If auto-rotate is enabled, you must call controls.update() in your animation loop
			this.autoRotate = false;
			this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60
	
			// Set to false to disable use of the keys
			this.enableKeys = true;
	
			// The four arrow keys
			this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };
	
			// Mouse buttons
			this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };
	
			////////////
			// internals
	
			var scope = this;
	
			var rotateStart = new THREE.Vector2();
			var rotateEnd = new THREE.Vector2();
			var rotateDelta = new THREE.Vector2();
	
			var panStart = new THREE.Vector2();
			var panEnd = new THREE.Vector2();
			var panDelta = new THREE.Vector2();
	
			var dollyStart = new THREE.Vector2();
			var dollyEnd = new THREE.Vector2();
			var dollyDelta = new THREE.Vector2();
	
			var STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };
	
			var state = STATE.NONE;
	
			// for reset
	
			this.target0 = this.target.clone();
			this.position0 = this.object.position.clone();
			this.zoom0 = this.object.zoom;
	
			// events
	
			var changeEvent = { type: 'change' };
			var startEvent = { type: 'start' };
			var endEvent = { type: 'end' };
	
			// pass in x,y of change desired in pixel space,
			// right and down are positive
			function pan( deltaX, deltaY ) {
	
				var element = scope.domElement === document ? scope.domElement.body : scope.domElement;
	
				constraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );
	
			}
	
			this.update = function () {
	
				if ( this.autoRotate && state === STATE.NONE ) {
	
					constraint.rotateLeft( getAutoRotationAngle() );
	
				}
	
				if ( constraint.update() === true ) {
	
					this.dispatchEvent( changeEvent );
	
				}
	
			};
	
			this.reset = function () {
	
				state = STATE.NONE;
	
				this.target.copy( this.target0 );
				this.object.position.copy( this.position0 );
				this.object.zoom = this.zoom0;
	
				this.object.updateProjectionMatrix();
				this.dispatchEvent( changeEvent );
	
				this.update();
	
			};
	
			function getAutoRotationAngle() {
	
				return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;
	
			}
	
			function getZoomScale() {
	
				return Math.pow( 0.95, scope.zoomSpeed );
	
			}
	
			function onMouseDown( event ) {
	
				if ( scope.enabled === false ) return;
	
				event.preventDefault();
	
				if ( event.button === scope.mouseButtons.ORBIT ) {
	
					if ( scope.enableRotate === false ) return;
	
					state = STATE.ROTATE;
	
					rotateStart.set( event.clientX, event.clientY );
	
				} else if ( event.button === scope.mouseButtons.ZOOM ) {
	
					if ( scope.enableZoom === false ) return;
	
					state = STATE.DOLLY;
	
					dollyStart.set( event.clientX, event.clientY );
	
				} else if ( event.button === scope.mouseButtons.PAN ) {
	
					if ( scope.enablePan === false ) return;
	
					state = STATE.PAN;
	
					panStart.set( event.clientX, event.clientY );
	
				}
	
				if ( state !== STATE.NONE ) {
	
					document.addEventListener( 'mousemove', onMouseMove, false );
					document.addEventListener( 'mouseup', onMouseUp, false );
					scope.dispatchEvent( startEvent );
	
				}
	
			}
	
			function onMouseMove( event ) {
	
				if ( scope.enabled === false ) return;
	
				event.preventDefault();
	
				var element = scope.domElement === document ? scope.domElement.body : scope.domElement;
	
				if ( state === STATE.ROTATE ) {
	
					if ( scope.enableRotate === false ) return;
	
					rotateEnd.set( event.clientX, event.clientY );
					rotateDelta.subVectors( rotateEnd, rotateStart );
	
					// rotating across whole screen goes 360 degrees around
					constraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );
	
					// rotating up and down along whole screen attempts to go 360, but limited to 180
					constraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );
	
					rotateStart.copy( rotateEnd );
	
				} else if ( state === STATE.DOLLY ) {
	
					if ( scope.enableZoom === false ) return;
	
					dollyEnd.set( event.clientX, event.clientY );
					dollyDelta.subVectors( dollyEnd, dollyStart );
	
					if ( dollyDelta.y > 0 ) {
	
						constraint.dollyIn( getZoomScale() );
	
					} else if ( dollyDelta.y < 0 ) {
	
						constraint.dollyOut( getZoomScale() );
	
					}
	
					dollyStart.copy( dollyEnd );
	
				} else if ( state === STATE.PAN ) {
	
					if ( scope.enablePan === false ) return;
	
					panEnd.set( event.clientX, event.clientY );
					panDelta.subVectors( panEnd, panStart );
	
					pan( panDelta.x, panDelta.y );
	
					panStart.copy( panEnd );
	
				}
	
				if ( state !== STATE.NONE ) scope.update();
	
			}
	
			function onMouseUp( /* event */ ) {
	
				if ( scope.enabled === false ) return;
	
				document.removeEventListener( 'mousemove', onMouseMove, false );
				document.removeEventListener( 'mouseup', onMouseUp, false );
				scope.dispatchEvent( endEvent );
				state = STATE.NONE;
	
			}
	
			function onMouseWheel( event ) {
	
				if ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;
	
				event.preventDefault();
				event.stopPropagation();
	
				var delta = 0;
	
				if ( event.wheelDelta !== undefined ) {
	
					// WebKit / Opera / Explorer 9
	
					delta = event.wheelDelta;
	
				} else if ( event.detail !== undefined ) {
	
					// Firefox
	
					delta = - event.detail;
	
				}
	
				if ( delta > 0 ) {
	
					constraint.dollyOut( getZoomScale() );
	
				} else if ( delta < 0 ) {
	
					constraint.dollyIn( getZoomScale() );
	
				}
	
				scope.update();
				scope.dispatchEvent( startEvent );
				scope.dispatchEvent( endEvent );
	
			}
	
			function onKeyDown( event ) {
	
				if ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;
	
				switch ( event.keyCode ) {
	
					case scope.keys.UP:
						pan( 0, scope.keyPanSpeed );
						scope.update();
						break;
	
					case scope.keys.BOTTOM:
						pan( 0, - scope.keyPanSpeed );
						scope.update();
						break;
	
					case scope.keys.LEFT:
						pan( scope.keyPanSpeed, 0 );
						scope.update();
						break;
	
					case scope.keys.RIGHT:
						pan( - scope.keyPanSpeed, 0 );
						scope.update();
						break;
	
				}
	
			}
	
			function touchstart( event ) {
	
				if ( scope.enabled === false ) return;
	
				switch ( event.touches.length ) {
	
					case 1:	// one-fingered touch: rotate
	
						if ( scope.enableRotate === false ) return;
	
						state = STATE.TOUCH_ROTATE;
	
						rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );
						break;
	
					case 2:	// two-fingered touch: dolly
	
						if ( scope.enableZoom === false ) return;
	
						state = STATE.TOUCH_DOLLY;
	
						var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;
						var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;
						var distance = Math.sqrt( dx * dx + dy * dy );
						dollyStart.set( 0, distance );
						break;
	
					case 3: // three-fingered touch: pan
	
						if ( scope.enablePan === false ) return;
	
						state = STATE.TOUCH_PAN;
	
						panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );
						break;
	
					default:
	
						state = STATE.NONE;
	
				}
	
				if ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );
	
			}
	
			function touchmove( event ) {
	
				if ( scope.enabled === false ) return;
	
				event.preventDefault();
				event.stopPropagation();
	
				var element = scope.domElement === document ? scope.domElement.body : scope.domElement;
	
				switch ( event.touches.length ) {
	
					case 1: // one-fingered touch: rotate
	
						if ( scope.enableRotate === false ) return;
						if ( state !== STATE.TOUCH_ROTATE ) return;
	
						rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );
						rotateDelta.subVectors( rotateEnd, rotateStart );
	
						// rotating across whole screen goes 360 degrees around
						constraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );
						// rotating up and down along whole screen attempts to go 360, but limited to 180
						constraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );
	
						rotateStart.copy( rotateEnd );
	
						scope.update();
						break;
	
					case 2: // two-fingered touch: dolly
	
						if ( scope.enableZoom === false ) return;
						if ( state !== STATE.TOUCH_DOLLY ) return;
	
						var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;
						var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;
						var distance = Math.sqrt( dx * dx + dy * dy );
	
						dollyEnd.set( 0, distance );
						dollyDelta.subVectors( dollyEnd, dollyStart );
	
						if ( dollyDelta.y > 0 ) {
	
							constraint.dollyOut( getZoomScale() );
	
						} else if ( dollyDelta.y < 0 ) {
	
							constraint.dollyIn( getZoomScale() );
	
						}
	
						dollyStart.copy( dollyEnd );
	
						scope.update();
						break;
	
					case 3: // three-fingered touch: pan
	
						if ( scope.enablePan === false ) return;
						if ( state !== STATE.TOUCH_PAN ) return;
	
						panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );
						panDelta.subVectors( panEnd, panStart );
	
						pan( panDelta.x, panDelta.y );
	
						panStart.copy( panEnd );
	
						scope.update();
						break;
	
					default:
	
						state = STATE.NONE;
	
				}
	
			}
	
			function touchend( /* event */ ) {
	
				if ( scope.enabled === false ) return;
	
				scope.dispatchEvent( endEvent );
				state = STATE.NONE;
	
			}
	
			function contextmenu( event ) {
	
				event.preventDefault();
	
			}
	
			this.dispose = function() {
	
				this.domElement.removeEventListener( 'contextmenu', contextmenu, false );
				this.domElement.removeEventListener( 'mousedown', onMouseDown, false );
				this.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );
				this.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox
	
				this.domElement.removeEventListener( 'touchstart', touchstart, false );
				this.domElement.removeEventListener( 'touchend', touchend, false );
				this.domElement.removeEventListener( 'touchmove', touchmove, false );
	
				document.removeEventListener( 'mousemove', onMouseMove, false );
				document.removeEventListener( 'mouseup', onMouseUp, false );
	
				window.removeEventListener( 'keydown', onKeyDown, false );
	
			}
	
			this.domElement.addEventListener( 'contextmenu', contextmenu, false );
	
			this.domElement.addEventListener( 'mousedown', onMouseDown, false );
			this.domElement.addEventListener( 'mousewheel', onMouseWheel, false );
			this.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox
	
			this.domElement.addEventListener( 'touchstart', touchstart, false );
			this.domElement.addEventListener( 'touchend', touchend, false );
			this.domElement.addEventListener( 'touchmove', touchmove, false );
	
			window.addEventListener( 'keydown', onKeyDown, false );
	
			// force an update at start
			this.update();
	
		};
	
		OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );
		OrbitControls.prototype.constructor = OrbitControls;
	
		Object.defineProperties( OrbitControls.prototype, {
	
			object: {
	
				get: function () {
	
					return this.constraint.object;
	
				}
	
			},
	
			target: {
	
				get: function () {
	
					return this.constraint.target;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );
					this.constraint.target.copy( value );
	
				}
	
			},
	
			minDistance : {
	
				get: function () {
	
					return this.constraint.minDistance;
	
				},
	
				set: function ( value ) {
	
					this.constraint.minDistance = value;
	
				}
	
			},
	
			maxDistance : {
	
				get: function () {
	
					return this.constraint.maxDistance;
	
				},
	
				set: function ( value ) {
	
					this.constraint.maxDistance = value;
	
				}
	
			},
	
			minZoom : {
	
				get: function () {
	
					return this.constraint.minZoom;
	
				},
	
				set: function ( value ) {
	
					this.constraint.minZoom = value;
	
				}
	
			},
	
			maxZoom : {
	
				get: function () {
	
					return this.constraint.maxZoom;
	
				},
	
				set: function ( value ) {
	
					this.constraint.maxZoom = value;
	
				}
	
			},
	
			minPolarAngle : {
	
				get: function () {
	
					return this.constraint.minPolarAngle;
	
				},
	
				set: function ( value ) {
	
					this.constraint.minPolarAngle = value;
	
				}
	
			},
	
			maxPolarAngle : {
	
				get: function () {
	
					return this.constraint.maxPolarAngle;
	
				},
	
				set: function ( value ) {
	
					this.constraint.maxPolarAngle = value;
	
				}
	
			},
	
			minAzimuthAngle : {
	
				get: function () {
	
					return this.constraint.minAzimuthAngle;
	
				},
	
				set: function ( value ) {
	
					this.constraint.minAzimuthAngle = value;
	
				}
	
			},
	
			maxAzimuthAngle : {
	
				get: function () {
	
					return this.constraint.maxAzimuthAngle;
	
				},
	
				set: function ( value ) {
	
					this.constraint.maxAzimuthAngle = value;
	
				}
	
			},
	
			enableDamping : {
	
				get: function () {
	
					return this.constraint.enableDamping;
	
				},
	
				set: function ( value ) {
	
					this.constraint.enableDamping = value;
	
				}
	
			},
	
			dampingFactor : {
	
				get: function () {
	
					return this.constraint.dampingFactor;
	
				},
	
				set: function ( value ) {
	
					this.constraint.dampingFactor = value;
	
				}
	
			},
	
			// backward compatibility
	
			noZoom: {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );
					return ! this.enableZoom;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );
					this.enableZoom = ! value;
	
				}
	
			},
	
			noRotate: {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );
					return ! this.enableRotate;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );
					this.enableRotate = ! value;
	
				}
	
			},
	
			noPan: {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );
					return ! this.enablePan;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );
					this.enablePan = ! value;
	
				}
	
			},
	
			noKeys: {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );
					return ! this.enableKeys;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );
					this.enableKeys = ! value;
	
				}
	
			},
	
			staticMoving : {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );
					return ! this.constraint.enableDamping;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );
					this.constraint.enableDamping = ! value;
	
				}
	
			},
	
			dynamicDampingFactor : {
	
				get: function () {
	
					console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );
					return this.constraint.dampingFactor;
	
				},
	
				set: function ( value ) {
	
					console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );
					this.constraint.dampingFactor = value;
	
				}
	
			}
	
		} );
	
		return OrbitControls;
	}


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _PostProcessor = __webpack_require__(453);
	
	Object.keys(_PostProcessor).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _PostProcessor[key];
	    }
	  });
	});
	
	var _EffectComposer = __webpack_require__(454);
	
	Object.keys(_EffectComposer).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _EffectComposer[key];
	    }
	  });
	});
	
	var _index = __webpack_require__(460);
	
	Object.keys(_index).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index[key];
	    }
	  });
	});
	
	var _index2 = __webpack_require__(463);
	
	Object.keys(_index2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _index2[key];
	    }
	  });
	});

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PostProcessor = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	var _CoreObject2 = __webpack_require__(400);
	
	var _EffectComposer = __webpack_require__(454);
	
	var _RenderPass = __webpack_require__(459);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PostProcessor = (_temp = _class = function (_CoreObject) {
	  (0, _inherits3.default)(PostProcessor, _CoreObject);
	
	  function PostProcessor() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var world = arguments[1];
	
	    var _ret;
	
	    var localWindow = arguments.length <= 2 || arguments[2] === undefined ? window : arguments[2];
	    (0, _classCallCheck3.default)(this, PostProcessor);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (PostProcessor.__proto__ || Object.getPrototypeOf(PostProcessor)).call(this));
	
	    PostProcessor.defaults.width = localWindow.innerWidth;
	    PostProcessor.defaults.height = localWindow.innerHeight;
	
	    _this.params = (0, _index.extend)(params, PostProcessor.defaults);
	    var _params = _this.params;
	
	    if (_params.autoresize === "window") {
	      window.addEventListener('resize', function () {
	        _this.setSize(Number(window.innerWidth * _params.rWidth).toFixed(), Number(window.innerHeight * _params.rHeight).toFixed());
	
	        _this.emit('resize');
	      });
	    } else if (_params.autoresize) {
	      window.addEventListener('resize', function () {
	        //FIXME: cf setContainerConfig()
	        //this.setSize(
	        // Number(_params.container.offsetWidth * _params.rWidth).toFixed(),
	        // Number(_params.container.offsetHeight * _params.rHeight).toFixed()
	        //);
	
	        _this.emit('resize');
	      });
	    }
	
	    _this._initTargetRenderer();
	
	    if (world) world.postProcessor = _this;
	
	    return _ret = _this, (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(PostProcessor, [{
	    key: '_initTargetRenderer',
	    value: function _initTargetRenderer() {
	      var params = this.params;
	      var width = Number(window.innerWidth * params.rWidth).toFixed();
	      var height = Number(window.innerHeight * params.rHeight).toFixed();
	      this.renderTarget = new THREE.WebGLRenderTarget(width, height, params.renderTarget);
	    }
	  }, {
	    key: '_initComposer',
	    value: function _initComposer() {
	      var _renderer = this.renderer;
	      var _renderTarget = this.renderTarget;
	
	      if (!_renderer || !_renderTarget) {
	        //FIXME: throw or something here
	        return;
	      }
	
	      if (!this.composer) {
	        this.composer = new _EffectComposer.EffectComposer(_renderer, _renderTarget);
	      }
	    }
	
	    /**
	     * Create and add a WHS.Pass to the post processing pipeline.
	     * @param  {Function} passCreator : A function that must return a WHS.Pass instance. It can be used to configurate the pass.
	     * @return {WHS.Pass} The created WHS.Pass
	     */
	
	  }, {
	    key: 'createPass',
	    value: function createPass(passCreator) {
	      if (typeof passCreator === 'function') {
	        return passCreator(this.composer);
	      }
	    }
	
	    /**
	     * [getPass description]
	     * @param  {String} name : The unique name of the pass.
	     * @return {WHS.Pass} The found WHS.Pass, otherwise undefined.
	     */
	
	  }, {
	    key: 'getPass',
	    value: function getPass(name) {
	      return this.composer ? this.composer.getPass(name) : undefined;
	    }
	
	    /**
	     * A helper to create a render pass (WHS.RenderPass) that will draw your geometry in the PostProcessor first pass.
	     * @param  {Boolean} renderToScreen : Should the renderpass be rendered directly to screen
	     */
	
	  }, {
	    key: 'createRenderPass',
	    value: function createRenderPass() {
	      var _this2 = this;
	
	      var renderToScreen = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];
	
	      if (this.scene && this.camera && this.composer) {
	        this.createPass(function (composer) {
	          var pass = new _RenderPass.RenderPass('renderscene', _this2.scene, _this2.camera.native);
	          pass.renderToScreen = renderToScreen;
	          composer.addPass(pass);
	        });
	      }
	    }
	
	    /**
	     * A helper to get the render pass of this PostProcessor.
	     * @return {WHS.RenderPass} The render pass found, otherwise undefined.
	     */
	
	  }, {
	    key: 'getRenderPass',
	    value: function getRenderPass() {
	      return this.getPass('renderscene');
	    }
	
	    /**
	     * Remove a pass from the PostProcessor
	     * @param  {String} name : The unique name of the pass
	     */
	
	  }, {
	    key: 'removePass',
	    value: function removePass(name) {
	      if (this.composer) this.composer.removePass(name);
	    }
	
	    /**
	     * Used by the WHS.World instance associated with this PostProcessor to set the container.
	     * @param {DOM} container : The Dom container element.
	     */
	
	  }, {
	    key: 'setContainerConfig',
	    value: function setContainerConfig(container) {
	      this.container = container;
	      //FIXME: handle autoresize container offset
	    }
	
	    /**
	     * Set the Scene and camera used by the renderTarget in this PostProcessor.
	     * @param {THREE.Scene} scene : The scenagraph containing the geometry.
	     * @param {THREE.Camera} camera : The camera used for the rendering point of view.
	     */
	
	  }, {
	    key: 'setRenderScene',
	    value: function setRenderScene(scene, camera) {
	      this.scene = scene;
	      this.camera = camera;
	    }
	
	    /**
	     * Rendering the PostProcessor and all its passes.
	     * @param  {Number} delta : The delta time between two frames.
	     */
	
	  }, {
	    key: 'render',
	    value: function render(delta) {
	      if (this.composer) this.composer.render(delta);
	    }
	
	    /**
	     * Set the renderer to use.
	     * @param {THREE.WebGLRenderer} renderer : The renderer instance.
	     */
	
	  }, {
	    key: 'renderer',
	    set: function set(renderer) {
	      this._renderer = renderer;
	      this._initComposer();
	    }
	
	    /**
	     * Get the renderer used by this PostProcessor to render.
	     * @return {THREE.WebGLRenderer} The WebGLRenderer.
	     */
	    ,
	    get: function get() {
	      return this._renderer;
	    }
	
	    /**
	     * Set renderTarget, this will rebuild the internal EffectComposer.
	     * @param  {THREE.WebGLRenderTarget} renderTarget : The WebGLRenderTarget to use.
	     */
	
	  }, {
	    key: 'renderTarget',
	    set: function set(renderTarget) {
	      this._renderTarget = renderTarget;
	      this._initComposer();
	    }
	
	    /**
	     * Get renderTarget used by this PostProcessor to render to.
	     * @return {THREE.WebGLRenderTarget} The WebGLRenderTarget.
	     */
	    ,
	    get: function get() {
	      return this._renderTarget;
	    }
	
	    /**
	     * Set composer, by default PostProcessor instanciate its own instance of EffectComposer.
	     * @param  {EffectComposer} composer : The composer instance to use.
	     */
	
	  }, {
	    key: 'composer',
	    set: function set(composer) {
	      this._composer = composer;
	    }
	
	    /**
	     * Get composer attribute
	     * @return {EffectCompost} The EffectComposer managed by this PostProcessor.
	     */
	    ,
	    get: function get() {
	      return this._composer;
	    }
	  }]);
	  return PostProcessor;
	}(_CoreObject2.CoreObject), _class.defaults = {
	  autoresize: true,
	
	  rWidth: 1, // Resolution(width).
	  rHeight: 1, // Resolution(height).
	
	  renderTarget: {
	    minFilter: THREE.LinearFilter,
	    magFilter: THREE.LinearFilter,
	    format: THREE.RGBAFormat,
	    stencilBuffer: false,
	    toScreen: true
	  }
	}, _temp);
	exports.PostProcessor = PostProcessor;

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EffectComposer = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _CopyShader = __webpack_require__(455);
	
	var _ShaderPass = __webpack_require__(456);
	
	var _MaskPass = __webpack_require__(458);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var EffectComposer = exports.EffectComposer = function () {
	  /**
	   * EffecComposer handle a set of Passes and render them in a RenderTarget through a Renderer
	   * @param  {THREE.WebGLRenderer} renderer : The renderer that will be used to render objects
	   * @param  {THREE.WebGLRenderTarget} renderTarget : The renderTarget used to draw buffers and compose them
	   */
	  function EffectComposer(renderer, renderTarget) {
	    (0, _classCallCheck3.default)(this, EffectComposer);
	
	    this.renderer = renderer;
	
	    if (renderTarget === undefined) {
	      var parameters = {
	        minFilter: THREE.LinearFilter,
	        magFilter: THREE.LinearFilter,
	        format: THREE.RGBAFormat,
	        stencilBuffer: false
	      };
	
	      var size = renderer.getSize();
	
	      renderTarget = new THREE.WebGLRenderTarget(size.width, size.height, parameters);
	    }
	
	    this.renderTarget1 = renderTarget;
	    this.renderTarget2 = renderTarget.clone();
	    this.writeBuffer = this.renderTarget1;
	    this.readBuffer = this.renderTarget2;
	    this.passes = [];
	
	    if (_CopyShader.CopyShader === undefined) console.error('EffectComposer relies on CopyShader"');
	
	    this.copyPass = new _ShaderPass.ShaderPass(_CopyShader.CopyShader);
	  }
	
	  /**
	   * Swap drawing buffers
	   */
	
	
	  (0, _createClass3.default)(EffectComposer, [{
	    key: 'swapBuffers',
	    value: function swapBuffers() {
	      var tmp = this.readBuffer;
	      this.readBuffer = this.writeBuffer;
	      this.writeBuffer = tmp;
	    }
	
	    /**
	     * Add a WHS.Pass to the composer, after all existing passes.
	     * @param {WHS.Pass} pass : The pass to be added
	     */
	
	  }, {
	    key: 'addPass',
	    value: function addPass(pass) {
	      if (!pass) return;
	      var size = this.renderer ? this.renderer.getSize() : { width: 0, height: 0 };
	      pass.setSize(size.width, size.height);
	      this.passes.push(pass);
	    }
	
	    /**
	     * Get the pass of the same unique name, otherwise undefined.
	     * @param  {String} name : the unique name of the pass to find.
	     * @return {WHS.Pass} The found Pass or undefined.
	     */
	
	  }, {
	    key: 'getPass',
	    value: function getPass(name) {
	      return this.passes.filter(function (v) {
	        return v.name === name;
	      })[0];
	    }
	
	    /**
	     * Get the pass index in the internal passes array.
	     * @param  {String|WHS.Pass} passIndicator : The pass name or the pass instance.
	     * @return {Number} The pass index or -1.
	     */
	
	  }, {
	    key: 'getPassIndex',
	    value: function getPassIndex(passIndicator) {
	      var passName = typeof passIndicator === 'string' ? passIndicator : passIndicator.name;
	      return this.passes.indexOf(this.getPass(passName));
	    }
	
	    /**
	     * Add a pass after another one. Add the pass in first position if previous is not found.
	     * @param {String|WHS.Pass} previousPassIndicator : The previous pass name or the previous pass instance.
	     */
	
	  }, {
	    key: 'addPassAfter',
	    value: function addPassAfter(previousPassIndicator, pass) {
	      if (!pass) return;
	      var index = this.getPassIndex(previousPassIndicator);
	      index = index < 0 ? 0 : index + 1;
	      this.insertPass(pass, index);
	    }
	
	    /**
	     * Add a pass at the specified index.
	     * @param  {WHS.Pass} pass : The pass instance to insert
	     * @param  {Number} index : The index.
	     */
	
	  }, {
	    key: 'insertPass',
	    value: function insertPass(pass, index) {
	      if (pass) {
	        this.passes.splice(index, 0, pass);
	      }
	    }
	
	    /**
	     * Remove a pass from this composer.
	     * @param  {String|WHS.Pass} passIndicator : The pass name or the pass instance.
	     */
	
	  }, {
	    key: 'removePass',
	    value: function removePass(passIndicator) {
	      var index = this.getPassIndex(passIndicator);
	      if (index > -1) {
	        this.passes.splice(index, 1);
	      }
	    }
	
	    /**
	     * Render the EffectComposer, and all its passes.
	     * @param  {Number} delta : The delta time since the last frame.
	     */
	
	  }, {
	    key: 'render',
	    value: function render(delta) {
	      var maskActive = false;
	      var pass = void 0,
	          i = void 0,
	          il = this.passes.length;
	
	      for (i = 0; i < il; i++) {
	        pass = this.passes[i];
	
	        if (pass.enabled === false) {
	          continue;
	        }
	
	        pass.render(this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive);
	
	        if (pass.needsSwap) {
	          if (maskActive) {
	            var context = this.renderer.context;
	            context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);
	            this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, delta);
	            context.stencilFunc(context.EQUAL, 1, 0xffffffff);
	          }
	          this.swapBuffers();
	        }
	
	        if (_MaskPass.MaskPass !== undefined) {
	          if (pass instanceof _MaskPass.MaskPass) {
	            maskActive = true;
	          } else if (pass instanceof _MaskPass.ClearMaskPass) {
	            maskActive = false;
	          }
	        }
	      }
	    }
	
	    /**
	     * Set another renderTarget.
	     * @param  {THREE.WebGLRenderTarget} renderTarget : The new renderTarget to use.
	     */
	
	  }, {
	    key: 'reset',
	    value: function reset(renderTarget) {
	      if (renderTarget === undefined) {
	        var size = this.renderer.getSize();
	
	        renderTarget = this.renderTarget1.clone();
	        renderTarget.setSize(size.width, size.height);
	      }
	
	      this.renderTarget1.dispose();
	      this.renderTarget2.dispose();
	      this.renderTarget1 = renderTarget;
	      this.renderTarget2 = renderTarget.clone();
	
	      this.writeBuffer = this.renderTarget1;
	      this.readBuffer = this.renderTarget2;
	    }
	
	    /**
	     * Resize the renderTarget and all the EffectComposer passes.
	     * @param {Number} width : The width in pixels
	     * @param {Number} height : The height in pixels
	     */
	
	  }, {
	    key: 'setSize',
	    value: function setSize(width, height) {
	      this.renderTarget1.setSize(width, height);
	      this.renderTarget2.setSize(width, height);
	
	      for (var i = 0; i < this.passes.length; i++) {
	        this.passes[i].setSize(width, height);
	      }
	    }
	  }]);
	  return EffectComposer;
	}();

/***/ },
/* 455 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
			value: true
	});
	/**
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * Full-screen textured quad shader
	 */
	
	var CopyShader = {
	
			uniforms: {
	
					"tDiffuse": { value: null },
					"opacity": { value: 1.0 }
	
			},
	
			vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
	
			fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "vec4 texel = texture2D( tDiffuse, vUv );", "gl_FragColor = opacity * texel;", "}"].join("\n")
	
	};
	
	exports.CopyShader = CopyShader;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ShaderPass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Pass2 = __webpack_require__(457);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author yannis torres / es6 migration
	 */
	
	var ShaderPass = exports.ShaderPass = function (_Pass) {
	  (0, _inherits3.default)(ShaderPass, _Pass);
	
	  function ShaderPass(name, shader, textureID) {
	    (0, _classCallCheck3.default)(this, ShaderPass);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (ShaderPass.__proto__ || Object.getPrototypeOf(ShaderPass)).call(this, name));
	
	    _this.textureID = textureID !== undefined ? textureID : "tDiffuse";
	
	    if (shader instanceof THREE.ShaderMaterial) {
	      _this.uniforms = shader.uniforms;
	      _this.material = shader;
	    } else if (shader) {
	      _this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);
	      _this.material = new THREE.ShaderMaterial({
	        defines: shader.defines || {},
	        uniforms: _this.uniforms,
	        vertexShader: shader.vertexShader,
	        fragmentShader: shader.fragmentShader
	      });
	    }
	
	    _this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);
	    _this.scene = new THREE.Scene();
	
	    _this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);
	    _this.scene.add(_this.quad);
	    return _this;
	  }
	
	  (0, _createClass3.default)(ShaderPass, [{
	    key: 'render',
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	      if (this.uniforms[this.textureID]) {
	        this.uniforms[this.textureID].value = readBuffer.texture;
	      }
	
	      this.quad.material = this.material;
	
	      if (this.renderToScreen) {
	        renderer.render(this.scene, this.camera);
	      } else {
	        renderer.render(this.scene, this.camera, writeBuffer, this.clear);
	      }
	    }
	  }]);
	  return ShaderPass;
	}(_Pass2.Pass);

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Pass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Pass = exports.Pass = function () {
	  function Pass(name) {
	    (0, _classCallCheck3.default)(this, Pass);
	
	    this.uniqName = name === undefined ? 'pass_' + ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1) : name;
	
	    // if set to true, the pass is processed by the composer
	    this.enabled = true;
	
	    // if set to true, the pass indicates to swap read and write buffer after rendering
	    this.needsSwap = true;
	
	    // if set to true, the pass clears its buffer before rendering
	    this.clear = false;
	
	    // if set to true, the result of the pass is rendered to screen
	    this.renderToScreen = false;
	  }
	
	  /**
	   * Resize a pass.
	   * @param {Number} width : in pixels.
	   * @param {Number} height : in pixels.
	   */
	
	
	  (0, _createClass3.default)(Pass, [{
	    key: "setSize",
	    value: function setSize(width, height) {}
	
	    /**
	     * Render a pass
	     * @param  {THREE.WebGLRenderer} renderer : The renderer used to render the pass objects.
	     * @param  {THREE.WebGLRenderTarget.Buffer} writeBuffer : The write buffer used to do buffer swapping.
	     * @param  {THREE.WebGLRenderTarget.Buffer} readBuffer  : The read buffer used to do buffer swapping.
	     * @param  {Number} delta : The delta time since the previous frame.
	     * @param  {Boolean} maskActive : Flag indicating the Composer that this pass use masking.
	     */
	
	  }, {
	    key: "render",
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	      console.error("Pass: .render() must be implemented in derived pass.");
	    }
	
	    /**
	     * Get the name of the pass
	     * @return {String} Unique name
	     */
	
	  }, {
	    key: "name",
	    get: function get() {
	      return this.uniqName;
	    }
	  }]);
	  return Pass;
	}();

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ClearMaskPass = exports.MaskPass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _Pass3 = __webpack_require__(457);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MaskPass = exports.MaskPass = function (_Pass) {
	  (0, _inherits3.default)(MaskPass, _Pass);
	
	  function MaskPass(name, scene, camera) {
	    (0, _classCallCheck3.default)(this, MaskPass);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (MaskPass.__proto__ || Object.getPrototypeOf(MaskPass)).call(this, name));
	
	    _this.scene = scene;
	    _this.camera = camera;
	
	    _this.clear = true;
	    _this.needsSwap = false;
	    _this.inverse = false;
	    return _this;
	  }
	
	  (0, _createClass3.default)(MaskPass, [{
	    key: 'render',
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	      var context = renderer.context;
	      var state = renderer.state;
	
	      // don't update color or depth
	      state.buffers.color.setMask(false);
	      state.buffers.depth.setMask(false);
	
	      // lock buffers
	      state.buffers.color.setLocked(true);
	      state.buffers.depth.setLocked(true);
	
	      // set up stencil
	      var writeValue = void 0,
	          clearValue = void 0;
	
	      if (this.inverse) {
	        writeValue = 0;
	        clearValue = 1;
	      } else {
	        writeValue = 1;
	        clearValue = 0;
	      }
	
	      state.buffers.stencil.setTest(true);
	      state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);
	      state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);
	      state.buffers.stencil.setClear(clearValue);
	
	      // draw into the stencil buffer
	      renderer.render(this.scene, this.camera, readBuffer, this.clear);
	      renderer.render(this.scene, this.camera, writeBuffer, this.clear);
	
	      // unlock color and depth buffer for subsequent rendering
	      state.buffers.color.setLocked(false);
	      state.buffers.depth.setLocked(false);
	
	      // only render where stencil is set to 1
	      state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1
	      state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);
	    }
	  }]);
	  return MaskPass;
	}(_Pass3.Pass); /**
	                 * @author alteredq / http://alteredqualia.com/
	                 * @author yannis torres / es6 migration
	                 */
	
	var ClearMaskPass = exports.ClearMaskPass = function (_Pass2) {
	  (0, _inherits3.default)(ClearMaskPass, _Pass2);
	
	  function ClearMaskPass(name) {
	    (0, _classCallCheck3.default)(this, ClearMaskPass);
	
	    var _this2 = (0, _possibleConstructorReturn3.default)(this, (ClearMaskPass.__proto__ || Object.getPrototypeOf(ClearMaskPass)).call(this, name));
	
	    _this2.needsSwap = false;
	    return _this2;
	  }
	
	  (0, _createClass3.default)(ClearMaskPass, [{
	    key: 'render',
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	      renderer.state.buffers.stencil.setTest(false);
	    }
	  }]);
	  return ClearMaskPass;
	}(_Pass3.Pass);

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RenderPass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _Pass2 = __webpack_require__(457);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RenderPass = exports.RenderPass = function (_Pass) {
	    (0, _inherits3.default)(RenderPass, _Pass);
	
	    function RenderPass(name, scene, camera, overrideMaterial, clearColor, clearAlpha) {
	        (0, _classCallCheck3.default)(this, RenderPass);
	
	        var _this = (0, _possibleConstructorReturn3.default)(this, (RenderPass.__proto__ || Object.getPrototypeOf(RenderPass)).call(this, name));
	
	        _this.scene = scene;
	        _this.camera = camera;
	
	        _this.overrideMaterial = overrideMaterial;
	
	        _this.clearColor = clearColor;
	        _this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;
	
	        _this.clear = true;
	        _this.needsSwap = false;
	        return _this;
	    }
	
	    (0, _createClass3.default)(RenderPass, [{
	        key: 'render',
	        value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	            var oldClearColor = void 0,
	                oldClearAlpha = void 0;
	            var oldAutoClear = renderer.autoClear;
	
	            renderer.autoClear = false;
	            this.scene.overrideMaterial = this.overrideMaterial;
	
	            if (this.clearColor) {
	                oldClearColor = renderer.getClearColor().getHex();
	                oldClearAlpha = renderer.getClearAlpha();
	                renderer.setClearColor(this.clearColor, this.clearAlpha);
	            }
	
	            renderer.render(this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear);
	
	            if (this.clearColor) {
	                renderer.setClearColor(oldClearColor, oldClearAlpha);
	            }
	
	            this.scene.overrideMaterial = null;
	            renderer.autoClear = oldAutoClear;
	        }
	    }]);
	    return RenderPass;
	}(_Pass2.Pass); /**
	                 * @author alteredq / http://alteredqualia.com/
	                 * @author yannis torres / es6 migration
	                 */

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ClearPass = __webpack_require__(461);
	
	Object.keys(_ClearPass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _ClearPass[key];
	    }
	  });
	});
	
	var _MaskPass = __webpack_require__(458);
	
	Object.keys(_MaskPass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _MaskPass[key];
	    }
	  });
	});
	
	var _Pass = __webpack_require__(457);
	
	Object.keys(_Pass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Pass[key];
	    }
	  });
	});
	
	var _RenderPass = __webpack_require__(459);
	
	Object.keys(_RenderPass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _RenderPass[key];
	    }
	  });
	});
	
	var _ShaderPass = __webpack_require__(456);
	
	Object.keys(_ShaderPass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _ShaderPass[key];
	    }
	  });
	});
	
	var _TexturePass = __webpack_require__(462);
	
	Object.keys(_TexturePass).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _TexturePass[key];
	    }
	  });
	});

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ClearPass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _Pass2 = __webpack_require__(457);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ClearPass = exports.ClearPass = function (_Pass) {
	  (0, _inherits3.default)(ClearPass, _Pass);
	
	  function ClearPass(name, clearColor, clearAlpha) {
	    (0, _classCallCheck3.default)(this, ClearPass);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (ClearPass.__proto__ || Object.getPrototypeOf(ClearPass)).call(this, name));
	
	    _this.needsSwap = false;
	    _this.clearColor = clearColor !== undefined ? clearColor : 0x000000;
	    _this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;
	    return _this;
	  }
	
	  (0, _createClass3.default)(ClearPass, [{
	    key: 'render',
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	
	      var oldClearColor = void 0,
	          oldClearAlpha = void 0;
	
	      if (this.clearColor) {
	        oldClearColor = renderer.getClearColor().getHex();
	        oldClearAlpha = renderer.getClearAlpha();
	        renderer.setClearColor(this.clearColor, this.clearAlpha);
	      }
	
	      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);
	      renderer.clear();
	
	      if (this.clearColor) {
	        renderer.setClearColor(oldClearColor, oldClearAlpha);
	      }
	    }
	  }]);
	  return ClearPass;
	}(_Pass2.Pass); /**
	                 * @author mrdoob / http://mrdoob.com/
	                 * @author yannis torres / es6 migration
	                 */

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TexturePass = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Pass2 = __webpack_require__(457);
	
	var _CopyShader = __webpack_require__(455);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TexturePass = exports.TexturePass = function (_Pass) {
	  (0, _inherits3.default)(TexturePass, _Pass);
	
	  function TexturePass(name, map, opacity) {
	    (0, _classCallCheck3.default)(this, TexturePass);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TexturePass.__proto__ || Object.getPrototypeOf(TexturePass)).call(this, name));
	
	    if (_CopyShader.CopyShader === undefined) {
	      console.error("TexturePass relies on CopyShader");
	    }
	
	    var shader = _CopyShader.CopyShader;
	
	    _this.map = map;
	    _this.opacity = opacity !== undefined ? opacity : 1.0;
	
	    _this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);
	
	    _this.material = new THREE.ShaderMaterial({
	      uniforms: _this.uniforms,
	      vertexShader: shader.vertexShader,
	      fragmentShader: shader.fragmentShader,
	      depthTest: false,
	      depthWrite: false
	    });
	
	    _this.needsSwap = false;
	
	    _this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);
	    _this.scene = new THREE.Scene();
	
	    _this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);
	    _this.scene.add(_this.quad);
	
	    return _this;
	  }
	
	  (0, _createClass3.default)(TexturePass, [{
	    key: 'render',
	    value: function render(renderer, writeBuffer, readBuffer, delta, maskActive) {
	
	      var oldAutoClear = renderer.autoClear;
	      renderer.autoClear = false;
	
	      this.quad.material = this.material;
	
	      this.uniforms["opacity"].value = this.opacity;
	      this.uniforms["tDiffuse"].value = this.map;
	      this.material.transparent = this.opacity < 1.0;
	
	      renderer.render(this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear);
	      renderer.autoClear = oldAutoClear;
	    }
	  }]);
	  return TexturePass;
	}(_Pass2.Pass); /**
	                 * @author alteredq / http://alteredqualia.com/
	                 * @author yannis torres / es6 migration
	                 */
	
	;

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _CopyShader = __webpack_require__(455);
	
	Object.keys(_CopyShader).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _CopyShader[key];
	    }
	  });
	});

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Group = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _set2 = __webpack_require__(465);
	
	var _set3 = _interopRequireDefault(_set2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Shape2 = __webpack_require__(446);
	
	var _CoreObject = __webpack_require__(400);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Group = function (_Shape) {
	  (0, _inherits3.default)(Group, _Shape);
	
	  function Group() {
	    (0, _classCallCheck3.default)(this, Group);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Group.__proto__ || Object.getPrototypeOf(Group)).call(this, {}, 'group'));
	
	    (0, _set3.default)(Group.prototype.__proto__ || Object.getPrototypeOf(Group.prototype), 'native', new THREE.Object3D(), _this);
	    (0, _get3.default)(Group.prototype.__proto__ || Object.getPrototypeOf(Group.prototype), 'wrap', _this).call(_this);
	
	    for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {
	      objects[_key] = arguments[_key];
	    }
	
	    for (var i = 0; i < objects.length; i++) {
	      var obj = objects[i];
	
	      if (obj instanceof _CoreObject.CoreObject) obj.addTo(_this);else if (obj instanceof THREE.Object3D) _this.native.add(obj);
	    }
	    return _this;
	  }
	
	  return Group;
	}(_Shape2.Shape);
	
	exports.Group = Group;

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _getPrototypeOf = __webpack_require__(384);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _getOwnPropertyDescriptor = __webpack_require__(388);
	
	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function set(object, property, value, receiver) {
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);
	
	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);
	
	    if (parent !== null) {
	      set(parent, property, value, receiver);
	    }
	  } else if ("value" in desc && desc.writable) {
	    desc.value = value;
	  } else {
	    var setter = desc.set;
	
	    if (setter !== undefined) {
	      setter.call(receiver, value);
	    }
	  }
	
	  return value;
	};

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.List = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var List = function () {
	  function List(queue) {
	    (0, _classCallCheck3.default)(this, List);
	
	    this._array = Array.isArray(queue) ? queue.slice() : [];
	  }
	
	  (0, _createClass3.default)(List, [{
	    key: "add",
	    value: function add(element) {
	      this._array.push(element);
	    }
	  }, {
	    key: "remove",
	    value: function remove(element) {
	      this._array = this._array.filter(function (item) {
	        return item !== element;
	      });
	    }
	  }, {
	    key: "get",
	    value: function get() {
	      return this._array;
	    }
	  }]);
	  return List;
	}();
	
	exports.List = List;

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _AmbientLight = __webpack_require__(468);
	
	Object.keys(_AmbientLight).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _AmbientLight[key];
	    }
	  });
	});
	
	var _DirectionalLight = __webpack_require__(469);
	
	Object.keys(_DirectionalLight).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _DirectionalLight[key];
	    }
	  });
	});
	
	var _HemisphereLight = __webpack_require__(470);
	
	Object.keys(_HemisphereLight).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _HemisphereLight[key];
	    }
	  });
	});
	
	var _PointLight = __webpack_require__(471);
	
	Object.keys(_PointLight).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _PointLight[key];
	    }
	  });
	});
	
	var _SpotLight = __webpack_require__(472);
	
	Object.keys(_SpotLight).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _SpotLight[key];
	    }
	  });
	});

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AmbientLight = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Light2 = __webpack_require__(405);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AmbientLight = function (_Light) {
	  (0, _inherits3.default)(AmbientLight, _Light);
	
	  function AmbientLight() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, AmbientLight);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (AmbientLight.__proto__ || Object.getPrototypeOf(AmbientLight)).call(this, params, 'ambientlight'));
	
	    _this.build(params);
	    (0, _get3.default)(AmbientLight.prototype.__proto__ || Object.getPrototypeOf(AmbientLight.prototype), 'wrap', _this).call(_this, 'no-shadows');
	    return _this;
	  }
	
	  (0, _createClass3.default)(AmbientLight, [{
	    key: 'build',
	    value: function build() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var _scope = this;
	
	      return new Promise(function (resolve) {
	        _scope.native = new THREE.AmbientLight(params.light.color, params.light.intensity);
	
	        resolve();
	      });
	    }
	  }]);
	  return AmbientLight;
	}(_Light2.Light);
	
	exports.AmbientLight = AmbientLight;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DirectionalLight = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Light2 = __webpack_require__(405);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DirectionalLight = function (_Light) {
	  (0, _inherits3.default)(DirectionalLight, _Light);
	
	  function DirectionalLight() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, DirectionalLight);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (DirectionalLight.__proto__ || Object.getPrototypeOf(DirectionalLight)).call(this, params, 'directionallight'));
	
	    _this.build(params);
	    (0, _get3.default)(DirectionalLight.prototype.__proto__ || Object.getPrototypeOf(DirectionalLight.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(DirectionalLight, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.DirectionalLight(params.light.color, params.light.intensity);
	
	        if (params.helper) {
	          _this2.helper = new THREE.DirectionalLightHelper(_this2.native, params.helper.size ? params.helper.size : 0);
	        }
	
	        resolve();
	      });
	    }
	  }]);
	  return DirectionalLight;
	}(_Light2.Light);
	
	exports.DirectionalLight = DirectionalLight;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.HemisphereLight = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Light2 = __webpack_require__(405);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var HemisphereLight = function (_Light) {
	  (0, _inherits3.default)(HemisphereLight, _Light);
	
	  function HemisphereLight() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, HemisphereLight);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (HemisphereLight.__proto__ || Object.getPrototypeOf(HemisphereLight)).call(this, params, 'hemispherelight'));
	
	    _this.build(params);
	
	    (0, _get3.default)(HemisphereLight.prototype.__proto__ || Object.getPrototypeOf(HemisphereLight.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(HemisphereLight, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.HemisphereLight(params.light.skyColor, params.light.groundColor, params.light.intensity);
	
	        if (params.helper) {
	          _this2.helper = new THREE.HemisphereLightHelper(_this2.native, params.helper.size ? params.helper.size : 0);
	        }
	
	        resolve();
	      });
	    }
	  }]);
	  return HemisphereLight;
	}(_Light2.Light);
	
	exports.HemisphereLight = HemisphereLight;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PointLight = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Light2 = __webpack_require__(405);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PointLight = function (_Light) {
	  (0, _inherits3.default)(PointLight, _Light);
	
	  function PointLight() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, PointLight);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (PointLight.__proto__ || Object.getPrototypeOf(PointLight)).call(this, params, 'pointlight'));
	
	    _this.build(params);
	    (0, _get3.default)(PointLight.prototype.__proto__ || Object.getPrototypeOf(PointLight.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(PointLight, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.PointLight(params.light.color, params.light.intensity, params.light.distance, params.light.decay);
	
	        if (params.helper) {
	          _this2.helper = new THREE.PointLightHelper(_this2.native, params.helper.size ? params.helper.size : 0);
	        }
	
	        resolve();
	      });
	    }
	  }]);
	  return PointLight;
	}(_Light2.Light);
	
	exports.PointLight = PointLight;

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SpotLight = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Light2 = __webpack_require__(405);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SpotLight = function (_Light) {
	  (0, _inherits3.default)(SpotLight, _Light);
	
	  function SpotLight() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, SpotLight);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (SpotLight.__proto__ || Object.getPrototypeOf(SpotLight)).call(this, params, 'spotlight'));
	
	    _this.build(params);
	    (0, _get3.default)(SpotLight.prototype.__proto__ || Object.getPrototypeOf(SpotLight.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  (0, _createClass3.default)(SpotLight, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.SpotLight(params.light.color, params.light.intensity, params.light.distance, params.light.angle, params.light.exponent, params.light.decay);
	
	        if (params.helper) _this2.helper = new THREE.SpotLightHelper(_this2.native);
	
	        resolve();
	      });
	    }
	  }]);
	  return SpotLight;
	}(_Light2.Light);
	
	exports.SpotLight = SpotLight;

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Box = __webpack_require__(474);
	
	Object.keys(_Box).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Box[key];
	    }
	  });
	});
	
	var _Cylinder = __webpack_require__(475);
	
	Object.keys(_Cylinder).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Cylinder[key];
	    }
	  });
	});
	
	var _Dodecahedron = __webpack_require__(476);
	
	Object.keys(_Dodecahedron).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Dodecahedron[key];
	    }
	  });
	});
	
	var _Extrude = __webpack_require__(477);
	
	Object.keys(_Extrude).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Extrude[key];
	    }
	  });
	});
	
	var _Icosahedron = __webpack_require__(478);
	
	Object.keys(_Icosahedron).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Icosahedron[key];
	    }
	  });
	});
	
	var _Lathe = __webpack_require__(479);
	
	Object.keys(_Lathe).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Lathe[key];
	    }
	  });
	});
	
	var _Line = __webpack_require__(480);
	
	Object.keys(_Line).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Line[key];
	    }
	  });
	});
	
	var _Model = __webpack_require__(481);
	
	Object.keys(_Model).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Model[key];
	    }
	  });
	});
	
	var _Morph = __webpack_require__(482);
	
	Object.keys(_Morph).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Morph[key];
	    }
	  });
	});
	
	var _Octahedron = __webpack_require__(483);
	
	Object.keys(_Octahedron).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Octahedron[key];
	    }
	  });
	});
	
	var _Parametric = __webpack_require__(484);
	
	Object.keys(_Parametric).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Parametric[key];
	    }
	  });
	});
	
	var _Plane = __webpack_require__(485);
	
	Object.keys(_Plane).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Plane[key];
	    }
	  });
	});
	
	var _Polyhedron = __webpack_require__(486);
	
	Object.keys(_Polyhedron).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Polyhedron[key];
	    }
	  });
	});
	
	var _Ring = __webpack_require__(487);
	
	Object.keys(_Ring).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Ring[key];
	    }
	  });
	});
	
	var _Shape2D = __webpack_require__(488);
	
	Object.keys(_Shape2D).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Shape2D[key];
	    }
	  });
	});
	
	var _Sphere = __webpack_require__(489);
	
	Object.keys(_Sphere).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Sphere[key];
	    }
	  });
	});
	
	var _Tetrahedron = __webpack_require__(490);
	
	Object.keys(_Tetrahedron).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Tetrahedron[key];
	    }
	  });
	});
	
	var _Text = __webpack_require__(491);
	
	Object.keys(_Text).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Text[key];
	    }
	  });
	});
	
	var _Torus = __webpack_require__(492);
	
	Object.keys(_Torus).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Torus[key];
	    }
	  });
	});
	
	var _Torusknot = __webpack_require__(493);
	
	Object.keys(_Torusknot).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Torusknot[key];
	    }
	  });
	});
	
	var _Tube = __webpack_require__(494);
	
	Object.keys(_Tube).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Tube[key];
	    }
	  });
	});

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Box = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Box = function (_Shape) {
	  (0, _inherits3.default)(Box, _Shape);
	
	  function Box() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Box);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Box.__proto__ || Object.getPrototypeOf(Box)).call(this, params, 'box'));
	
	    (0, _index2.extend)(params.geometry, {
	      width: 1,
	      height: 1,
	      depth: 1
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Box.prototype.__proto__ || Object.getPrototypeOf(Box.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Box, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.BoxMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.BoxBufferGeometry : THREE.BoxGeometry;
	
	      var geometry = new GConstruct(params.geometry.width, params.geometry.height, params.geometry.depth);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return this.params.softbody ? new Box(this.params) : new Box({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_width',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { width: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.width;
	    }
	  }, {
	    key: 'G_height',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { height: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.height;
	    }
	  }, {
	    key: 'G_depth',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { depth: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.depth;
	    }
	  }]);
	  return Box;
	}(_Shape2.Shape);
	
	exports.Box = Box;

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Cylinder = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Cylinder = function (_Shape) {
	  (0, _inherits3.default)(Cylinder, _Shape);
	
	  function Cylinder() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Cylinder);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Cylinder.__proto__ || Object.getPrototypeOf(Cylinder)).call(this, params, 'cylinder'));
	
	    (0, _index2.extend)(params.geometry, {
	      radiusTop: 0,
	      radiusBottom: 1,
	      height: 1,
	      radiusSegments: 32,
	      heightSegments: 1,
	      openEnded: false,
	      thetaStart: 0,
	      thetaLength: Math.PI * 2
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Cylinder.prototype.__proto__ || Object.getPrototypeOf(Cylinder.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Cylinder, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.CylinderMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.CylinderBufferGeometry : THREE.CylinderGeometry;
	
	      var geometry = new GConstruct(params.geometry.radiusTop, params.geometry.radiusBottom, params.geometry.height, params.geometry.radiusSegments, params.geometry.heightSegments, params.geometry.openEnded, params.geometry.thetaStart, params.geometry.thetaLength);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Cylinder({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radiusTop',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radiusTop: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radiusTop;
	    }
	  }, {
	    key: 'G_radiusBottom',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radiusBottom: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radiusBottom;
	    }
	  }, {
	    key: 'G_height',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { height: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.height;
	    }
	  }, {
	    key: 'G_radiusSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radiusSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radiusSegments;
	    }
	  }]);
	  return Cylinder;
	}(_Shape2.Shape);
	
	exports.Cylinder = Cylinder;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Dodecahedron = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Dodecahedron = function (_Shape) {
	  (0, _inherits3.default)(Dodecahedron, _Shape);
	
	  function Dodecahedron() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Dodecahedron);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Dodecahedron.__proto__ || Object.getPrototypeOf(Dodecahedron)).call(this, params, 'dodecahedron'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 1,
	      detail: 0
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Dodecahedron.prototype.__proto__ || Object.getPrototypeOf(Dodecahedron.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Dodecahedron, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.DodecahedronBufferGeometry : THREE.DodecahedronGeometry;
	
	      return new GConstruct(params.geometry.radius, params.geometry.detail);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Dodecahedron({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_detail',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { detail: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.detail;
	    }
	  }]);
	  return Dodecahedron;
	}(_Shape2.Shape);
	
	exports.Dodecahedron = Dodecahedron;

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Extrude = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Extrude = function (_Shape) {
	  (0, _inherits3.default)(Extrude, _Shape);
	
	  function Extrude() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Extrude);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Extrude.__proto__ || Object.getPrototypeOf(Extrude)).call(this, params, 'extrude'));
	
	    (0, _index2.extend)(params.geometry, {
	      shapes: [],
	      options: {}
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Extrude.prototype.__proto__ || Object.getPrototypeOf(Extrude.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Extrude, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.ExtrudeBufferGeometry : THREE.ExtrudeGeometry;
	
	      return new GConstruct(params.geometry.shapes, params.geometry.options);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Extrude({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_shapes',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { shapes: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.shapes;
	    }
	  }, {
	    key: 'G_options',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { options: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.options;
	    }
	  }]);
	  return Extrude;
	}(_Shape2.Shape);
	
	exports.Extrude = Extrude;

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Icosahedron = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Icosahedron = function (_Shape) {
	  (0, _inherits3.default)(Icosahedron, _Shape);
	
	  function Icosahedron() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Icosahedron);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Icosahedron.__proto__ || Object.getPrototypeOf(Icosahedron)).call(this, params, 'icosahedron'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 1,
	      detail: 0
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Icosahedron.prototype.__proto__ || Object.getPrototypeOf(Icosahedron.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Icosahedron, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.IcosahedronBufferGeometry : THREE.IcosahedronGeometry;
	
	      return new GConstruct(params.geometry.radius, params.geometry.detail);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Icosahedron({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_detail',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { detail: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.detail;
	    }
	  }]);
	  return Icosahedron;
	}(_Shape2.Shape);
	
	exports.Icosahedron = Icosahedron;

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Lathe = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Lathe = function (_Shape) {
	  (0, _inherits3.default)(Lathe, _Shape);
	
	  function Lathe() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Lathe);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Lathe.__proto__ || Object.getPrototypeOf(Lathe)).call(this, params, 'lathe'));
	
	    (0, _index2.extend)(params.geometry, {
	      points: []
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Lathe.prototype.__proto__ || Object.getPrototypeOf(Lathe.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Lathe, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.LatheBufferGeometry : THREE.LatheGeometry;
	
	      return new GConstruct(params.geometry.points);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Lathe({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_points',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { points: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.points;
	    }
	  }]);
	  return Lathe;
	}(_Shape2.Shape);
	
	exports.Lathe = Lathe;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Line = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	var _index2 = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Line = function (_Shape) {
	  (0, _inherits3.default)(Line, _Shape);
	
	  function Line(params) {
	    (0, _classCallCheck3.default)(this, Line);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, params, 'line'));
	
	    (0, _index.extend)(params.geometry, {
	      curve: false,
	      points: 50
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Line.prototype.__proto__ || Object.getPrototypeOf(Line.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Line, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics) Mesh = _index2.RopeMesh;else Mesh = THREE.Line;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var geometry = params.buffer || params.physics ? new THREE.BufferGeometry() : new THREE.Geometry();
	
	      if (params.buffer || params.physics) {
	        var pp = params.geometry.curve.getPoints(params.geometry.points);
	        var verts = new Float32Array(pp.length * 3);
	
	        for (var i = 0, max = pp.length; i < max; i++) {
	          verts[i * 3] = pp[i].x;
	          verts[i * 3 + 1] = pp[i].y;
	          verts[i * 3 + 2] = pp[i].z;
	        }
	
	        geometry.addAttribute('position', new THREE.BufferAttribute(verts, 3));
	      } else geometry.vertices = params.geometry.curve.getPoints(params.geometry.points);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }]);
	  return Line;
	}(_Shape2.Shape);
	
	exports.Line = Line;

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Model = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Model = function (_Shape) {
	  (0, _inherits3.default)(Model, _Shape);
	
	  function Model() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Model);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Model.__proto__ || Object.getPrototypeOf(Model)).call(this, params, 'model'));
	
	    (0, _index2.extend)(params.geometry, {
	      path: '',
	      physics: '',
	      loader: _index2.JSONLoader
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Model.prototype.__proto__ || Object.getPrototypeOf(Model.prototype), 'wrap', _this).call(_this, 'wait');
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Model, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var Mesh = void 0;
	
	      if (this.physics && params.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      var promise = new Promise(function (resolve) {
	        var pGeometry = params.geometry;
	        var Loader = pGeometry.loader;
	
	        Loader.load(pGeometry.path, function (data, materials) {
	          if (pGeometry.physics) {
	            Loader.load(pGeometry.physics, function (data2) {
	              var material = void 0;
	
	              if (params.material.useVertexColors) {
	                material = (0, _index2.loadMaterial)((0, _index2.extend)(params.material, {
	                  morphTargets: true,
	                  vertexColors: THREE.FaceColors
	                }));
	              } else if (!materials || params.material.useCustomMaterial) {
	                material = (0, _index2.loadMaterial)(params.material);
	              } else material = new THREE.MultiMaterial(materials);
	
	              data.computeFaceNormals();
	              data.computeVertexNormals();
	
	              _this2.native = new Mesh(data, material, _this2.params, data2);
	
	              resolve();
	            });
	          } else {
	            var material = void 0;
	
	            if (params.material.useVertexColors) {
	              material = (0, _index2.loadMaterial)((0, _index2.extend)(params.material, {
	                morphTargets: true,
	                vertexColors: THREE.FaceColors
	              }));
	            } else if (!materials || params.material.useCustomMaterial) {
	              material = (0, _index2.loadMaterial)(params.material);
	            } else material = new THREE.MultiMaterial(materials);
	
	            data.computeFaceNormals();
	            data.computeVertexNormals();
	
	            console.log(_this2.params);
	
	            _this2.native = new Mesh(data, material, _this2.params);
	
	            resolve();
	          }
	        });
	      });
	
	      (0, _get3.default)(Model.prototype.__proto__ || Object.getPrototypeOf(Model.prototype), 'wait', this).call(this, promise);
	
	      return promise;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Model({ build: false }).copy(this);
	    }
	  }]);
	  return Model;
	}(_Shape2.Shape);
	
	exports.Model = Model;

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Morph = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var Physijs = _interopRequireWildcard(_index);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	var _loaders = __webpack_require__(396);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Morph = function (_Shape) {
	  (0, _inherits3.default)(Morph, _Shape);
	
	  function Morph() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Morph);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Morph.__proto__ || Object.getPrototypeOf(Morph)).call(this, params, 'morph'));
	
	    (0, _index2.extend)(params.geometry, {
	      path: '',
	      loader: _loaders.JSONLoader
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Morph.prototype.__proto__ || Object.getPrototypeOf(Morph.prototype), 'wrap', _this).call(_this, 'wait');
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Morph, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var promise = new Promise(function (resolve) {
	        var Loader = params.geometry.loader;
	
	        Loader.load(params.geometry.path, function (data, materials) {
	          var material = void 0;
	          if (params.material.useVertexColors) {
	            material = (0, _index2.loadMaterial)((0, _index2.extend)(params.material, {
	              morphTargets: true,
	              vertexColors: THREE.FaceColors
	            }));
	          } else if (!materials || params.material.useCustomMaterial) {
	            material = (0, _index2.loadMaterial)(params.material);
	          } else material = new THREE.MultiMaterial(materials);
	
	          data.computeFaceNormals();
	          data.computeVertexNormals();
	
	          // Visualization.
	          var mesh = new THREE.Mesh(data, material);
	          mesh.speed = params.morph.speed;
	          mesh.mixer = new THREE.AnimationMixer(mesh);
	
	          mesh.mixer.clipAction(data.animations[0]).setDuration(params.morph.duration).play();
	
	          _this2.native = mesh;
	
	          resolve();
	        });
	      });
	
	      (0, _get3.default)(Morph.prototype.__proto__ || Object.getPrototypeOf(Morph.prototype), 'wait', this).call(this, promise);
	      return promise;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Morph({ build: false }).copy(this);
	    }
	  }]);
	  return Morph;
	}(_Shape2.Shape);
	
	exports.Morph = Morph;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Octahedron = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Octahedron = function (_Shape) {
	  (0, _inherits3.default)(Octahedron, _Shape);
	
	  function Octahedron() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Octahedron);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Octahedron.__proto__ || Object.getPrototypeOf(Octahedron)).call(this, params, 'octahedron'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 1,
	      detail: 0
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Octahedron.prototype.__proto__ || Object.getPrototypeOf(Octahedron.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Octahedron, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.OctahedronBufferGeometry : THREE.OctahedronGeometry;
	
	      return new GConstruct(params.geometry.radius, params.geometry.detail);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Octahedron({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_detail',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { detail: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.detail;
	    }
	  }]);
	  return Octahedron;
	}(_Shape2.Shape);
	
	exports.Octahedron = Octahedron;

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Parametric = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Parametric = function (_Shape) {
	  (0, _inherits3.default)(Parametric, _Shape);
	
	  function Parametric() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Parametric);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Parametric.__proto__ || Object.getPrototypeOf(Parametric)).call(this, params, 'parametric'));
	
	    (0, _index2.extend)(params.geometry, {
	      func: function func() {},
	
	      slices: 10,
	      stacks: 10
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Parametric.prototype.__proto__ || Object.getPrototypeOf(Parametric.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Parametric, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.ParametricBufferGeometry : THREE.ParametricGeometry;
	
	      return new GConstruct(params.geometry.func, params.geometry.slices, params.geometry.stacks);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Parametric({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_func',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { func: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.func;
	    }
	  }, {
	    key: 'G_slices',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { slices: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.slices;
	    }
	  }, {
	    key: 'G_stacks',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { stacks: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.stacks;
	    }
	  }]);
	  return Parametric;
	}(_Shape2.Shape);
	
	exports.Parametric = Parametric;

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Plane = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Plane = function (_Shape) {
	  (0, _inherits3.default)(Plane, _Shape);
	
	  function Plane() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Plane);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Plane.__proto__ || Object.getPrototypeOf(Plane)).call(this, params, 'plane'));
	
	    (0, _index2.extend)(params.geometry, {
	      width: 10,
	      height: 10,
	      wSegments: 32,
	      hSegments: 32
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Plane.prototype.__proto__ || Object.getPrototypeOf(Plane.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Plane, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.ClothMesh;else if (this.physics) Mesh = _index.PlaneMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer || params.softbody ? THREE.PlaneBufferGeometry : THREE.PlaneGeometry;
	
	      var geometry = new GConstruct(params.geometry.width, params.geometry.height, params.geometry.wSegments, params.geometry.hSegments);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Plane({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_width',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { width: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.width;
	    }
	  }, {
	    key: 'G_height',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { height: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.height;
	    }
	  }, {
	    key: 'G_segments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { segments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.segments;
	    }
	  }]);
	  return Plane;
	}(_Shape2.Shape);
	
	exports.Plane = Plane;

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Polyhedron = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Polyhedron = function (_Shape) {
	  (0, _inherits3.default)(Polyhedron, _Shape);
	
	  function Polyhedron() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Polyhedron);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Polyhedron.__proto__ || Object.getPrototypeOf(Polyhedron)).call(this, params, 'polyhedron'));
	
	    (0, _index2.extend)(params.geometry, {
	      verticesOfCube: _this.verticesOfCube,
	      indicesOfFaces: _this.indicesOfFaces,
	      radius: 6,
	      detail: 2
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Polyhedron.prototype.__proto__ || Object.getPrototypeOf(Polyhedron.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Polyhedron, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.PolyhedronBufferGeometry : THREE.PolyhedronGeometry;
	
	      return new GConstruct(params.geometry.verticesOfCube, params.geometry.indicesOfFaces, params.geometry.radius, params.geometry.detail);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Polyhedron({ build: false }).copy(this);
	    }
	  }, {
	    key: 'verticesOfCube',
	    get: function get() {
	      return [-1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1];
	    }
	  }, {
	    key: 'indicesOfFaces',
	    get: function get() {
	      return [2, 1, 0, 0, 3, 2, 0, 4, 7, 7, 3, 0, 0, 1, 5, 5, 4, 0, 1, 2, 6, 6, 5, 1, 2, 3, 7, 7, 6, 2, 4, 5, 6, 6, 7, 4];
	    }
	  }, {
	    key: 'G_verticesOfCube',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { verticesOfCube: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.verticesOfCube;
	    }
	  }, {
	    key: 'G_indicesOfFaces',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { indicesOfFaces: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.indicesOfFaces;
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_detail',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { detail: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.detail;
	    }
	  }]);
	  return Polyhedron;
	}(_Shape2.Shape);
	
	exports.Polyhedron = Polyhedron;

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Ring = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Ring = function (_Shape) {
	  (0, _inherits3.default)(Ring, _Shape);
	
	  function Ring() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Ring);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Ring.__proto__ || Object.getPrototypeOf(Ring)).call(this, params, 'ring'));
	
	    (0, _index.extend)(params.geometry, {
	      innerRadius: 0,
	      outerRadius: 50,
	      thetaSegments: 8,
	      phiSegments: 8,
	      thetaStart: 0,
	      thetaLength: Math.PI * 2
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Ring.prototype.__proto__ || Object.getPrototypeOf(Ring.prototype), 'wrap', _this).call(_this, 'onlyvis');
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Ring, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index.loadMaterial)(params.material);
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.Mesh(new THREE.RingGeometry(params.geometry.innerRadius, params.geometry.outerRadius, params.geometry.thetaSegments, params.geometry.phiSegments, params.geometry.thetaStart, params.geometry.thetaLength), material);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.RingBufferGeometry : THREE.RingGeometry;
	
	      return new GConstruct(params.geometry.innerRadius, params.geometry.outerRadius, params.geometry.thetaSegments, params.geometry.phiSegments, params.geometry.thetaStart, params.geometry.thetaLength);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Ring({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_innerRadius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { innerRadius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.innerRadius;
	    }
	  }, {
	    key: 'G_outerRadius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { outerRadius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.outerRadius;
	    }
	  }, {
	    key: 'G_thetaSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { thetaSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.thetaSegments;
	    }
	  }, {
	    key: 'G_phiSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { phiSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.phiSegments;
	    }
	  }, {
	    key: 'G_thetaStart',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { thetaStart: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.thetaStart;
	    }
	  }, {
	    key: 'G_thetaLength',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { thetaLength: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.thetaLength;
	    }
	  }]);
	  return Ring;
	}(_Shape2.Shape);
	
	exports.Ring = Ring;

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Shape2D = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Shape2D = function (_Shape) {
	  (0, _inherits3.default)(Shape2D, _Shape);
	
	  function Shape2D() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Shape2D);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Shape2D.__proto__ || Object.getPrototypeOf(Shape2D)).call(this, params, 'shape2D'));
	
	    (0, _index.extend)(params.geometry, {
	      shapes: []
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Shape2D.prototype.__proto__ || Object.getPrototypeOf(Shape2D.prototype), 'wrap', _this).call(_this, 'onlyvis');
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Shape2D, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index.loadMaterial)(params.material);
	
	      return new Promise(function (resolve) {
	        _this2.native = new THREE.Mesh(_this2.buildGeometry(params), material);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.ShapeBufferGeometry : THREE.ShapeGeometry;
	
	      return new GConstruct(params.geometry.shapes);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Shape2D({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_shapes',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { shapes: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.shapes;
	    }
	  }]);
	  return Shape2D;
	}(_Shape2.Shape);
	
	exports.Shape2D = Shape2D;

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Sphere = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Sphere = function (_Shape) {
	  (0, _inherits3.default)(Sphere, _Shape);
	
	  function Sphere() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Sphere);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Sphere.__proto__ || Object.getPrototypeOf(Sphere)).call(this, params, 'sphere'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 1,
	      widthSegments: 8,
	      heightSegments: 6
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Sphere.prototype.__proto__ || Object.getPrototypeOf(Sphere.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Sphere, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.SphereMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.SphereBufferGeometry : THREE.SphereGeometry;
	
	      var geometry = new GConstruct(params.geometry.radius, params.geometry.widthSegments, params.geometry.heightSegments);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return this.params.softbody ? new Sphere(this.params) : new Sphere({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_widthSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { widthSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.widthSegments;
	    }
	  }, {
	    key: 'G_heightSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { widthSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.widthSegments;
	    }
	  }]);
	  return Sphere;
	}(_Shape2.Shape);
	
	exports.Sphere = Sphere;

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tetrahedron = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Tetrahedron = function (_Shape) {
	  (0, _inherits3.default)(Tetrahedron, _Shape);
	
	  function Tetrahedron() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Tetrahedron);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Tetrahedron.__proto__ || Object.getPrototypeOf(Tetrahedron)).call(this, params, 'tetrahedron'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 1,
	      detail: 0
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Tetrahedron.prototype.__proto__ || Object.getPrototypeOf(Tetrahedron.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Tetrahedron, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.TetrahedronBufferGeometry : THREE.TetrahedronGeometry;
	
	      return new GConstruct(params.geometry.radius, params.geometry.detail);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Tetrahedron({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_detail',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { detail: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.detail;
	    }
	  }]);
	  return Tetrahedron;
	}(_Shape2.Shape);
	
	exports.Tetrahedron = Tetrahedron;

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Text = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Text = function (_Shape) {
	  (0, _inherits3.default)(Text, _Shape);
	
	  function Text() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Text);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, params, 'text'));
	
	    (0, _index2.extend)(params.geometry, {
	      text: 'Hello World!',
	
	      parameters: {
	        size: 12,
	        height: 50,
	        curveSegments: 12,
	        font: new THREE.Font(),
	        bevelEnabled: false,
	        bevelThickness: 10,
	        bevelSize: 8
	      }
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'wrap', _this).call(_this, 'wait');
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Text, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      var promise = new Promise(function (resolve) {
	        _index2.FontLoader.load(params.geometry.parameters.font, function (font) {
	          params.geometry.parameters.font = font;
	
	          _this2.native = new Mesh(new THREE.TextGeometry(params.geometry.text, params.geometry.parameters), material, _this2.params);
	
	          resolve();
	        });
	      });
	
	      (0, _get3.default)(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'wait', this).call(this, promise);
	
	      return promise;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Text({ build: false }).copy(this);
	    }
	  }]);
	  return Text;
	}(_Shape2.Shape);
	
	exports.Text = Text;

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Torus = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Torus = function (_Shape) {
	  (0, _inherits3.default)(Torus, _Shape);
	
	  function Torus() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Torus);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Torus.__proto__ || Object.getPrototypeOf(Torus)).call(this, params, 'torus'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 100,
	      tube: 40,
	      radialSegments: 8,
	      tubularSegments: 6,
	      arc: Math.PI * 2
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Torus.prototype.__proto__ || Object.getPrototypeOf(Torus.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Torus, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.TorusBufferGeometry : THREE.TorusGeometry;
	
	      return new THREE.TorusGeometry(params.geometry.radius, params.geometry.tube, params.geometry.radialSegments, params.geometry.tubularSegments, params.geometry.arc);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Torus({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_tube',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { tube: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.tube;
	    }
	  }, {
	    key: 'G_radialSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radialSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radialSegments;
	    }
	  }, {
	    key: 'G_tubularSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { tubularSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.tubularSegments;
	    }
	  }, {
	    key: 'G_arc',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { arc: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.arc;
	    }
	  }]);
	  return Torus;
	}(_Shape2.Shape);
	
	exports.Torus = Torus;

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Torusknot = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Torusknot = function (_Shape) {
	  (0, _inherits3.default)(Torusknot, _Shape);
	
	  function Torusknot() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Torusknot);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Torusknot.__proto__ || Object.getPrototypeOf(Torusknot)).call(this, params, 'Torusknot'));
	
	    (0, _index2.extend)(params.geometry, {
	      radius: 100,
	      tube: 40,
	      radialSegments: 64,
	      tubularSegments: 8,
	      p: 2,
	      q: 3
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Torusknot.prototype.__proto__ || Object.getPrototypeOf(Torusknot.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Torusknot, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.TorusKnotBufferGeometry : THREE.TorusKnotGeometry;
	
	      return new GConstruct(params.geometry.radius, params.geometry.tube, params.geometry.radialSegments, params.geometry.tubularSegments, params.geometry.p, params.geometry.q);
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Torusknot(this.params, this._type).copy(this);
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_tube',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { tube: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.tube;
	    }
	  }, {
	    key: 'G_radialSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radialSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radialSegments;
	    }
	  }, {
	    key: 'G_tubularSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { tubularSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.tubularSegments;
	    }
	  }, {
	    key: 'G_p',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { p: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.p;
	    }
	  }, {
	    key: 'G_q',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { q: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.q;
	    }
	  }, {
	    key: 'G_heightScale',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { heightScale: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.heightScale;
	    }
	  }]);
	  return Torusknot;
	}(_Shape2.Shape);
	
	exports.Torusknot = Torusknot;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tube = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(302);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(408);
	
	var _Shape2 = __webpack_require__(446);
	
	var _index2 = __webpack_require__(393);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Tube = function (_Shape) {
	  (0, _inherits3.default)(Tube, _Shape);
	
	  function Tube() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Tube);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Tube.__proto__ || Object.getPrototypeOf(Tube)).call(this, params, 'tube'));
	
	    (0, _index2.extend)(params.geometry, {
	      path: false,
	      segments: 20,
	      radius: 2,
	      radiusSegments: 8,
	      closed: false
	    });
	
	    if (params.build) {
	      _this.build(params);
	      (0, _get3.default)(Tube.prototype.__proto__ || Object.getPrototypeOf(Tube.prototype), 'wrap', _this).call(_this);
	    }
	    return _this;
	  }
	
	  (0, _createClass3.default)(Tube, [{
	    key: 'build',
	    value: function build() {
	      var _this2 = this;
	
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var material = (0, _index2.loadMaterial)(params.material);
	
	      var Mesh = void 0;
	
	      if (this.physics && this.params.softbody) Mesh = _index.SoftMesh;else if (this.physics && this.physics.type === 'concave') Mesh = _index.ConcaveMesh;else if (this.physics) Mesh = _index.ConvexMesh;else Mesh = THREE.Mesh;
	
	      return new Promise(function (resolve) {
	        _this2.native = new Mesh(_this2.buildGeometry(params), material, _this2.params);
	
	        resolve();
	      });
	    }
	  }, {
	    key: 'buildGeometry',
	    value: function buildGeometry() {
	      var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	      var GConstruct = params.buffer && !params.softbody ? THREE.TubeBufferGeometry : THREE.TubeGeometry;
	
	      var geometry = new GConstruct(params.geometry.path, params.geometry.segments, params.geometry.radius, params.geometry.radiusSegments, params.geometry.closed);
	
	      if (params.softbody) this.proccessSoftbodyGeometry(geometry);
	
	      return geometry;
	    }
	  }, {
	    key: 'clone',
	    value: function clone() {
	      return new Tube({ build: false }).copy(this);
	    }
	  }, {
	    key: 'G_path',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { path: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.path;
	    }
	  }, {
	    key: 'G_segments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { segments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.segments;
	    }
	  }, {
	    key: 'G_radius',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radius: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radius;
	    }
	  }, {
	    key: 'G_radiusSegments',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { radiusSegments: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.radiusSegments;
	    }
	  }, {
	    key: 'G_closed',
	    set: function set(val) {
	      this._native.geometry = this.buildGeometry(this.updateParams({ geometry: { closed: val } }));
	    },
	    get: function get() {
	      return this._native.geometry.parameters.closed;
	    }
	  }]);
	  return Tube;
	}(_Shape2.Shape);
	
	exports.Tube = Tube;

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Skybox = __webpack_require__(496);
	
	Object.keys(_Skybox).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Skybox[key];
	    }
	  });
	});

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Skybox = undefined;
	
	var _classCallCheck2 = __webpack_require__(301);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(321);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(375);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _get2 = __webpack_require__(383);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _set2 = __webpack_require__(465);
	
	var _set3 = _interopRequireDefault(_set2);
	
	var _dec, _class;
	
	var _three = __webpack_require__(391);
	
	var THREE = _interopRequireWildcard(_three);
	
	var _index = __webpack_require__(393);
	
	var _Shape2 = __webpack_require__(446);
	
	var _decorators = __webpack_require__(394);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Skybox = (_dec = (0, _decorators.deprecate)('0.0.11'), _dec(_class = function (_Shape) {
	  (0, _inherits3.default)(Skybox, _Shape);
	
	  function Skybox() {
	    var params = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    (0, _classCallCheck3.default)(this, Skybox);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (Skybox.__proto__ || Object.getPrototypeOf(Skybox)).call(this, params, 'skybox'));
	
	    (0, _index.extend)(params, {
	      skyType: 'box',
	      imgSuffix: '.png',
	      radius: 10,
	      fog: true,
	      path: ''
	    });
	
	    var skyGeometry = void 0,
	        skyMat = void 0;
	
	    switch (params.skyType) {
	      case 'box':
	        {
	          var directions = ['xpos', 'xneg', 'ypos', 'yneg', 'zpos', 'zneg'],
	              matArray = [];
	
	          skyGeometry = new THREE.CubeGeometry(params.radius, params.radius, params.radius);
	
	          for (var i = 0; i < 6; i++) {
	            matArray.push(new THREE.MeshBasicMaterial({
	              map: (0, _index.texture)(params.path + directions[i] + params.imgSuffix, false),
	              side: THREE.BackSide,
	              fog: params.fog
	            }));
	          }
	
	          skyMat = new THREE.MeshFaceMaterial(matArray);
	
	          break;
	        }
	      case 'sphere':
	        {
	          skyGeometry = new THREE.SphereGeometry(params.radius / 2, 60, 40);
	          skyMat = new THREE.MeshBasicMaterial({
	            map: (0, _index.texture)(params.path + params.imgSuffix, false),
	            side: THREE.BackSide,
	            fog: params.fog
	          });
	
	          break;
	        }
	      default:
	    }
	
	    var mesh = new THREE.Mesh(skyGeometry, skyMat);
	    mesh.renderDepth = 1000.0;
	
	    (0, _set3.default)(Skybox.prototype.__proto__ || Object.getPrototypeOf(Skybox.prototype), 'native', mesh, _this);
	    (0, _get3.default)(Skybox.prototype.__proto__ || Object.getPrototypeOf(Skybox.prototype), 'wrap', _this).call(_this);
	    return _this;
	  }
	
	  return Skybox;
	}(_Shape2.Shape)) || _class);
	exports.Skybox = Skybox;

/***/ }
/******/ ])
});
;
//# sourceMappingURL=whitestorm.js.map